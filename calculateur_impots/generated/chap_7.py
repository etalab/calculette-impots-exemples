# -*- coding: utf-8 -*-
# flake8: noqa


# WARNING: This file is automatically generated by a script. No not modify it by hand!

# Original files are "chap-7.json" and "chap-7.m"


RB55 = max(0, RB05 + TETONEQUOM1)


def RB5(z):
    if z in (1, 2):
        return max(0, RB0(z) + TETONEQUO1)
    else:
        raise NotImplementedError()

ZONIPTEFP = VARIPTEFP * positif(ART1731BIS) + IPTEFP * 1 - ART1731BIS


ZONIPTEFN = VARIPTEFN * positif(ART1731BIS) + IPTEFN * 1 - ART1731BIS


RB01 = RI1 * 1 - positif(VARIPTEFP * positif(ART1731BIS) + IPTEFP * 1 - ART1731BIS + VARIPTEFN * positif(ART1731BIS) + IPTEFN * 1 - ART1731BIS + INDTEFF) + ZONIPTEFP + PVIMPOS * positif(ZONIPTEFP) + ZONIPTEFN + PVIMPOS * positif(ZONIPTEFN - PVIMPOS) + PVIMPOS - ZONIPTEFN * positif(ZONIPTEFN) * 1 - positif(ZONIPTEFN - PVIMPOS) * null(1 - FLAG_EXIT) + PVIMPOS + PVSURSI * positif(ZONIPTEFP) + ZONIPTEFN + PVSURSI * positif(ZONIPTEFN - PVSURSI) + PVSURSI - ZONIPTEFN * positif(ZONIPTEFN) * 1 - positif(ZONIPTEFN - PVSURSI) * null(2 - FLAG_EXIT) + RFROBOR * V_INDTEO * positif(ZONIPTEFP) + TEFFREVTOT * 1 - positif(ZONIPTEFP + PVIMPOS * positif(ZONIPTEFP) + ZONIPTEFN + PVIMPOS * positif(ZONIPTEFN - PVIMPOS) + PVIMPOS - ZONIPTEFN * positif(ZONIPTEFN) * 1 - positif(ZONIPTEFN - PVIMPOS) * null(1 - FLAG_EXIT) + PVSURSI + PVIMPOS * positif(ZONIPTEFP) + ZONIPTEFN + PVSURSI * positif(ZONIPTEFN - PVSURSI) + PVSURSI - ZONIPTEFN * positif(ZONIPTEFN) * 1 - positif(ZONIPTEFN - PVSURSI) * null(2 - FLAG_EXIT)) * INDTEFF


RB018XR = RNG * 1 - positif(VARIPTEFP * positif(ART1731BIS) + IPTEFP * 1 - ART1731BIS + VARIPTEFN * positif(ART1731BIS) + IPTEFN * 1 - ART1731BIS + INDTEFF) + ABVIE + ABMAR * positif(ZONIPTEFP) + ZONIPTEFP + PVIMPOS * positif(ZONIPTEFP) + ZONIPTEFN + PVIMPOS * positif(ZONIPTEFN - PVIMPOS) + PVIMPOS - ZONIPTEFN * positif(ZONIPTEFN) * 1 - positif(ZONIPTEFN - PVIMPOS) * null(1 - FLAG_EXIT) + PVIMPOS + PVSURSI * positif(ZONIPTEFP) + ZONIPTEFN + PVSURSI * positif(ZONIPTEFN - PVSURSI) + PVSURSI - ZONIPTEFN * positif(ZONIPTEFN) * 1 - positif(ZONIPTEFN - PVSURSI) * null(2 - FLAG_EXIT) + RFROBOR * V_INDTEO * positif(ZONIPTEFP) + ABMAR + ABTPATEF + TEFFREVTOT * 1 - positif(ZONIPTEFP + PVIMPOS * positif(ZONIPTEFP) + ZONIPTEFN + PVIMPOS * positif(ZONIPTEFN - PVIMPOS) + PVIMPOS - ZONIPTEFN * positif(ZONIPTEFN) * 1 - positif(ZONIPTEFN - PVIMPOS) * null(1 - FLAG_EXIT) + PVSURSI + PVIMPOS * positif(ZONIPTEFP) + ZONIPTEFN + PVSURSI * positif(ZONIPTEFN - PVSURSI) + PVSURSI - ZONIPTEFN * positif(ZONIPTEFN) * 1 - positif(ZONIPTEFN - PVSURSI) * null(2 - FLAG_EXIT)) * INDTEFF


RB02 = RI2 * 1 - positif(VARIPTEFP * positif(ART1731BIS) + IPTEFP * 1 - ART1731BIS + VARIPTEFN * positif(ART1731BIS) + IPTEFN * 1 - ART1731BIS + INDTEFF) + ZONIPTEFP + PVIMPOS * positif(ZONIPTEFP) + ZONIPTEFN + PVIMPOS * positif(ZONIPTEFN - PVIMPOS) + PVIMPOS - ZONIPTEFN * positif(ZONIPTEFN) * 1 - positif(ZONIPTEFN - PVIMPOS) * null(1 - FLAG_EXIT) + PVSURSI + PVIMPOS * positif(ZONIPTEFP) + ZONIPTEFN + PVSURSI * positif(ZONIPTEFN - PVSURSI) + PVSURSI - ZONIPTEFN * positif(ZONIPTEFN) * 1 - positif(ZONIPTEFN - PVSURSI) * null(2 - FLAG_EXIT) + RFROBOR * V_INDTEO * positif(ZONIPTEFP) + DPAE + TEFFREVTOT * 1 - positif(ZONIPTEFP + PVIMPOS * positif(ZONIPTEFP) + ZONIPTEFN + PVIMPOS * positif(ZONIPTEFN - PVIMPOS) + PVIMPOS - ZONIPTEFN * positif(ZONIPTEFN) * 1 - positif(ZONIPTEFN - PVIMPOS) * null(1 - FLAG_EXIT) + PVSURSI + PVIMPOS * positif(ZONIPTEFP) + ZONIPTEFN + PVSURSI * positif(ZONIPTEFN - PVSURSI) + PVSURSI - ZONIPTEFN * positif(ZONIPTEFN) * 1 - positif(ZONIPTEFN - PVSURSI) * null(2 - FLAG_EXIT)) * INDTEFF


RB04 = IND_TDR

RB05 = VARRMOND * positif(ART1731BIS) + RMOND * 1 - ART1731BIS


RB06 = RE168 + TAX1649

TONEQUO1 = somme((RPQ(x) for x in interval(1, 4))) + somme((RPQF(x) for x in ('V', 'C') or x in interval(1, 4))) + somme((RPQPALIM(x) for x in ('V', 'C') or x in interval(1, 4))) + somme((RPQRF(x) for x in (1, 2))) + RPQRCMDC + RPQRCMFU + RPQRCMCH + RPQRCMTR + RPQRCMTS + RPQRCMGO + somme((RPQPRR(x) for x in ('V', 'C') or x in interval(1, 4))) + somme((RPQPRRZ(x) for x in ('V', 'C') or x in interval(1, 4))) + RPQRVO + RPQRVO5 + RPQRVO6 + RPQRVO7 + somme((RPQTS(x) for x in ('V', 'C') or x in interval(1, 4))) + somme((RPQTSREMP(x) for x in ('V', 'C') or x in interval(1, 4))) + RPQRVG + RPQRWB * null(1 - FLAG_EXIT) + RPQRWB + RPQRWA * null(2 - FLAG_EXIT)


TONEQUOM1 = somme((RPQ(x)M for x in interval(1, 4))) + somme((RPQF(x)M for x in ('V', 'C') or x in interval(1, 4))) + somme((RPQPALIM(x)M for x in ('V', 'C') or x in interval(1, 4))) + somme((RPQRF(x)M for x in (1, 2))) + RPQRCMDCM + RPQRCMFUM + RPQRCMCHM + RPQRCMTRM + RPQRCMTSM + RPQRCMGOM + somme((RPQPRR(x)M for x in ('V', 'C') or x in interval(1, 4))) + somme((RPQPRRZ(x)M for x in ('V', 'C') or x in interval(1, 4))) + RPQRVOM + RPQRVO5M + RPQRVO6M + RPQRVO7M + somme((RPQTS(x)M for x in ('V', 'C') or x in interval(1, 4))) + somme((RPQTSREMP(x)M for x in ('V', 'C') or x in interval(1, 4))) + RPQRVGM + RPQRWBM * null(1 - FLAG_EXIT) + RPQRWBM + RPQRWAM * null(2 - FLAG_EXIT)


TONEQUO1T = somme((TRPQ(x) for x in interval(1, 4))) + somme((TRPQF(x) for x in ('V', 'C') or x in interval(1, 4))) + somme((TRPQPALIM(x) for x in ('V', 'C') or x in interval(1, 4))) + somme((TRPQRF(x) for x in (1, 2))) + TRPQRCMDC + TRPQRCMFU + TRPQRCMCH + TRPQRCMTR + TRPQRCMTS + TRPQRCMGO + somme((TRPQPRR(x) for x in ('V', 'C') or x in interval(1, 4))) + somme((TRPQPRRZ(x) for x in ('V', 'C') or x in interval(1, 4))) + TRPQRVO + TRPQRVO5 + TRPQRVO6 + TRPQRVO7 + somme((TRPQTS(x) for x in ('V', 'C') or x in interval(1, 4))) + somme((TRPQTSREMP(x) for x in ('V', 'C') or x in interval(1, 4))) + TRPQRVG + TRPQRWB * null(1 - FLAG_EXIT) + TRPQRWB + TRPQRWA * null(2 - FLAG_EXIT)


TONEQUOM1T = somme((TRPQ(x)M for x in interval(1, 4))) + somme((TRPQF(x)M for x in ('V', 'C') or x in interval(1, 4))) + somme((TRPQPALIM(x)M for x in ('V', 'C') or x in interval(1, 4))) + somme((TRPQRF(x)M for x in (1, 2))) + TRPQRCMDCM + TRPQRCMFUM + TRPQRCMCHM + TRPQRCMTRM + TRPQRCMTSM + TRPQRCMGOM + somme((TRPQPRR(x)M for x in ('V', 'C') or x in interval(1, 4))) + somme((TRPQPRRZ(x)M for x in ('V', 'C') or x in interval(1, 4))) + TRPQRVOM + TRPQRVO5M + TRPQRVO6M + TRPQRVO7M + somme((TRPQTS(x)M for x in ('V', 'C') or x in interval(1, 4))) + somme((TRPQTSREMP(x)M for x in ('V', 'C') or x in interval(1, 4))) + TRPQRVGM + TRPQRWBM * null(1 - FLAG_EXIT) + TRPQRWBM + TRPQRWAM * null(2 - FLAG_EXIT)


TETONEQUO1 = TONEQUO1 * 1 - positif(INDTEFF) + TONEQUO1T * positif(INDTEFF)


TETONEQUOM1 = TONEQUOM1 * 1 - positif(INDTEFF) + TONEQUOM1T * positif(INDTEFF)

REV1 = GLN1 * 1 - INDTEFF + TGLN1 * INDTEFF


REV2 = GLN2 * 1 - INDTEFF + TGLN2 * INDTEFF


REV3 = GLN3 * 1 - INDTEFF + TGLN3 * INDTEFF


REV4V = GLN4DAJV


REV4RAJV = max(CARTSV - ABTSRAJ, 0)


REV4C = GLN4DBJC


REV4RBJC = max(CARTSC - ABTSRBJ, 0)


REV4VC = GLN4DAJV + GLN4DBJC


REV4 = __4BAQTOTNET + GLN4V + GLN4C


REV4TVC = GLN4V + GLN4C


REVF = somme((PENF(i) for i in ('V', 'C') or i in interval(1, 4)))


REVALIM = somme((PENALIM(i) for i in ('V', 'C') or i in interval(1, 4))) * 1 - INDTEFF + somme((TPENALIM(i) for i in ('V', 'C') or i in interval(1, 4))) * INDTEFF


REVALIMQHT = somme((PENALIM(i) for i in ('V', 'C') or i in interval(1, 4)))


REVTS = somme((TSNN2TS(i) for i in ('V', 'C') or i in interval(1, 4))) * 1 - INDTEFF + somme((TTSNN2TS(i) for i in ('V', 'C') or i in interval(1, 4))) * INDTEFF


REVTSQHT = somme((TSNN2TS(i) for i in ('V', 'C') or i in interval(1, 4)))


REVTSREMP = somme((TSNN2REMP(i) for i in ('V', 'C') or i in interval(1, 4))) * 1 - INDTEFF + somme((TTSNN2REMP(i) for i in ('V', 'C') or i in interval(1, 4))) * INDTEFF


REVTSREMPQHT = somme((TSNN2REMP(i) for i in ('V', 'C') or i in interval(1, 4)))


REVPRR = somme((PRR2(i) + PRR2Z(i) for i in ('V', 'C') or i in interval(1, 4))) * 1 - INDTEFF + somme((TPRR2(i) + TPRR2Z(i) for i in ('V', 'C') or i in interval(1, 4))) * INDTEFF


REVPRRQHT = somme((PRR2(i) + PRR2Z(i) for i in ('V', 'C') or i in interval(1, 4)))


REVRVO = T2RV


REVRCM = __2RCM + __3RCM + __4RCM + __5RCM + __6RCM + __7RCM


REVRF = __2REVF + __3REVF


REVQTOT = CODRWB * null(1 - FLAG_EXIT) + CODRWB + CODRWA * null(2 - FLAG_EXIT) + CODRVG + somme((REV(i) for i in interval(1, 4))) + REVALIM + REVF + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF


REVQTOTQHT = CODRWB * null(1 - FLAG_EXIT) + CODRWB + CODRWA * null(2 - FLAG_EXIT) + CODRVG + somme((GLN(i) for i in interval(1, 3))) + REV4 + REVALIMQHT + REVF + REVTSQHT + REVTSREMPQHT + REVPRRQHT + REVRVO + REVRCM + REVRF

GLRWB = positif(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * CODRWB / TOTALQUOHT) + 1 - positif(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT * positif(null(1 - FLAG_EXIT) + null(2 - FLAG_EXIT))


GLRWA = positif(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * CODRWA / TOTALQUOHT) + 1 - positif(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB * null(2 - FLAG_EXIT)


GLRVG = positif(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * CODRVG / TOTALQUOHT) + 1 - positif(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB - GLRWA


GL1 = positif(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * GLN1 / TOTALQUOHT) + 1 - positif(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRVG - GLRWB - GLRWA


GL2 = positif(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * GLN2 / TOTALQUOHT) + 1 - positif(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB - GLRWA - GLRVG - GL1


GL3 = positif(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * GLN3 / TOTALQUOHT) + 1 - positif(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB - GLRWA - GLRVG - GL1 - GL2


GL4V = arr(TONEQUOHT * REV4V / TOTALQUOHT)


GL4C = arr(TONEQUOHT * REV4C / TOTALQUOHT)


GL4RAJV = arr(TONEQUOHT * REV4RAJV / TOTALQUOHT)


GL4RBJC = arr(TONEQUOHT * REV4RBJC / TOTALQUOHT)


GL4VC = arr(TONEQUOHT * REV4VC / TOTALQUOHT)


GL4TVC = arr(TONEQUOHT * REV4TVC / TOTALQUOHT)


GL4 = positif(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * REV4 / TOTALQUOHT) + 1 - positif(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB - GLRWA - GLRVG - GL1 - GL2 - GL3


GLTOT = somme((GL(i) for i in interval(1, 4))) + GLRVG + GLRWB + GLRWA


GLFV = positif(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENFV / TOTALQUOHT) + 1 - positif(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT


GLFC = positif(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENFC / TOTALQUOHT) + 1 - positif(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV


GLF1 = positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENF1 / TOTALQUOHT) + 1 - positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV - GLFC


GLF2 = positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENF2 / TOTALQUOHT) + 1 - positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV - GLFC - GLF1


GLF3 = positif(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENF3 / TOTALQUOHT) + 1 - positif(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV - GLFC - GLF1 - GLF2


GLF4 = positif(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENF4 / TOTALQUOHT) + 1 - positif(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV - GLFC - GLF1 - GLF2 - GLF3


GLFTOT = somme((GLF(i) for i in ('V', 'C') or i in interval(1, 4)))


GLPALIMV = positif(PENALIMC + PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENALIMV / TOTALQUOHT) + 1 - positif(PENALIMC + PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT


GLPALIMC = positif(PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENALIMC / TOTALQUOHT) + 1 - positif(PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV


GLPALIM1 = positif(PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENALIM1 / TOTALQUOHT) + 1 - positif(PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV - GLPALIMC


GLPALIM2 = positif(PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENALIM2 / TOTALQUOHT) + 1 - positif(PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV - GLPALIMC - GLPALIM1


GLPALIM3 = positif(PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENALIM3 / TOTALQUOHT) + 1 - positif(PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV - GLPALIMC - GLPALIM1 - GLPALIM2


GLPALIM4 = positif(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENALIM4 / TOTALQUOHT) + 1 - positif(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV - GLPALIMC - GLPALIM1 - GLPALIM2 - GLPALIM3


GLPALIMTOT = somme((GLPALIM(i) for i in ('V', 'C') or i in interval(1, 4)))


GLTSV = positif(TSNN2TSC + TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2TSV / TOTALQUOHT) + 1 - positif(TSNN2TSC + TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT


GLTSC = positif(TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2TSC / TOTALQUOHT) + 1 - positif(TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV


GLTS1 = positif(TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2TS1 / TOTALQUOHT) + 1 - positif(TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV - GLTSC


GLTS2 = positif(TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2TS2 / TOTALQUOHT) + 1 - positif(TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV - GLTSC - GLTS1


GLTS3 = positif(TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2TS3 / TOTALQUOHT) + 1 - positif(TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV - GLTSC - GLTS1 - GLTS2


GLTS4 = positif(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2TS4 / TOTALQUOHT) + 1 - positif(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV - GLTSC - GLTS1 - GLTS2 - GLTS3


GLTSTOT = somme((GLTS(i) for i in ('V', 'C') or i in interval(1, 4)))


GLTSREMPV = positif(TSNN2REMPC + TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2REMPV / TOTALQUOHT) + 1 - positif(TSNN2REMPC + TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLTSTOT - GLPALIMTOT


GLTSREMPC = positif(TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2REMPC / TOTALQUOHT) + 1 - positif(TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV


GLTSREMP1 = positif(TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2REMP1 / TOTALQUOHT) + 1 - positif(TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV - GLTSREMPC


GLTSREMP2 = positif(TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2REMP2 / TOTALQUOHT) + 1 - positif(TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV - GLTSREMPC - GLTSREMP1


GLTSREMP3 = positif(TSNN2REMP4 + TSNN2REMPC + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2REMP3 / TOTALQUOHT) + 1 - positif(TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV - GLTSREMPC - GLTSREMP1 - GLTSREMP2


GLTSREMP4 = positif(REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2REMP4 / TOTALQUOHT) + 1 - positif(REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV - GLTSREMPC - GLTSREMP1 - GLTSREMP2 - GLTSREMP3


GLTSREMPTOT = somme((GLTSREMP(i) for i in ('V', 'C') or i in interval(1, 4)))


GLPRRV = positif(PRR2C + PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2V / TOTALQUOHT) + 1 - positif(PRR2C + PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT


GLPRRC = positif(PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2C / TOTALQUOHT) + 1 - positif(PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV


GLPRR1 = positif(PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR21 / TOTALQUOHT) + 1 - positif(PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC


GLPRR2 = positif(PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR22 / TOTALQUOHT) + 1 - positif(PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1


GLPRR3 = positif(PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR23 / TOTALQUOHT) + 1 - positif(PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2


GLPRR4 = positif(PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR24 / TOTALQUOHT) + 1 - positif(PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3


GLPRRZV = positif(PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2ZV / TOTALQUOHT) + 1 - positif(PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4


GLPRRZC = positif(PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2ZC / TOTALQUOHT) + 1 - positif(PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV


GLPRRZ1 = positif(PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2Z1 / TOTALQUOHT) + 1 - positif(PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV - GLPRRZC


GLPRRZ2 = positif(PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2Z2 / TOTALQUOHT) + 1 - positif(PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV - GLPRRZC - GLPRRZ1


GLPRRZ3 = positif(PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2Z3 / TOTALQUOHT) + 1 - positif(PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV - GLPRRZC - GLPRRZ1 - GLPRRZ2


GLPRRZ4 = positif(REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2Z4 / TOTALQUOHT) + 1 - positif(REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV - GLPRRZC - GLPRRZ1 - GLPRRZ2 - GLPRRZ3


GLPRRTOT = somme((GLPRR(i) + GLPRRZ(i) for i in ('V', 'C') or i in interval(1, 4)))


GLRVO = positif(__2RV2 + __2RV3 + __2RV4 + REVRCM + REVRF) * arr(TONEQUOHT * __2RV1 / TOTALQUOHT) + 1 - positif(__2RV2 + __2RV3 + __2RV4 + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT


GLRVO5 = positif(__2RV3 + __2RV4 + REVRCM + REVRF) * arr(TONEQUOHT * __2RV2 / TOTALQUOHT) + 1 - positif(__2RV3 + __2RV4 + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVO


GLRVO6 = positif(__2RV4 + REVRCM + REVRF) * arr(TONEQUOHT * __2RV3 / TOTALQUOHT) + 1 - positif(__2RV4 + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLPRRTOT - GLTSREMPTOT - GLRVO - GLRVO5


GLRVO7 = positif(REVRCM + REVRF) * arr(TONEQUOHT * __2RV4 / TOTALQUOHT) + 1 - positif(REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVO - GLRVO5 - GLRVO6


GLRVOTOT = GLRVO + GLRVO5 + GLRVO6 + GLRVO7


GLRCMDC = positif(__3RCM + __4RCM + __5RCM + __6RCM + __7RCM + REVRF) * arr(TONEQUOHT * __2RCM / TOTALQUOHT) + 1 - positif(__3RCM + __4RCM + __5RCM + __6RCM + __7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT


GLRCMFU = positif(__4RCM + __5RCM + __6RCM + __7RCM + REVRF) * arr(TONEQUOHT * __3RCM / TOTALQUOHT) + 1 - positif(__4RCM + __5RCM + __6RCM + __7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC


GLRCMCH = positif(__5RCM + __6RCM + __7RCM + REVRF) * arr(TONEQUOHT * __4RCM / TOTALQUOHT) + 1 - positif(__5RCM + __6RCM + __7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC - GLRCMFU


GLRCMTS = positif(__6RCM + __7RCM + REVRF) * arr(TONEQUOHT * __5RCM / TOTALQUOHT) + 1 - positif(__6RCM + __7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC - GLRCMFU - GLRCMCH


GLRCMGO = positif(__7RCM + REVRF) * arr(TONEQUOHT * __6RCM / TOTALQUOHT) + 1 - positif(__7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC - GLRCMFU - GLRCMCH - GLRCMTS


GLRCMTR = positif(REVRF) * arr(TONEQUOHT * __7RCM / TOTALQUOHT) + 1 - positif(REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC - GLRCMFU - GLRCMCH - GLRCMGO - GLRCMTS


GLRCMTOT = GLRCMDC + GLRCMFU + GLRCMCH + GLRCMGO + GLRCMTR + GLRCMTS


GLRF1 = positif(__3REVF) * arr(TONEQUOHT * __2REVF / TOTALQUOHT) + 1 - positif(__3REVF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMTOT


GLRF2 = TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMTOT - GLRF1


GLRFTOT = GLRF1 + GLRF2

TGLRWB = positif(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * CODRWB / TOTALQUO) + 1 - positif(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO * positif(null(1 - FLAG_EXIT) + null(2 - FLAG_EXIT))


TGLRWA = positif(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * CODRWA / TOTALQUO) + 1 - positif(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB * null(2 - FLAG_EXIT)


TGLRVG = positif(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * CODRVG / TOTALQUO) + 1 - positif(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA


TGL1 = positif(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TGLN1 / TOTALQUO) + 1 - positif(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA - TGLRVG


TGL2 = positif(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TGLN2 / TOTALQUO) + 1 - positif(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA - TGLRVG - TGL1


TGL3 = positif(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TGLN3 / TOTALQUO) + 1 - positif(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA - TGLRVG - TGL1 - TGL2


TGL4V = arr(TONEQUO * REV4V / TOTALQUO)


TGL4C = arr(TONEQUO * REV4C / TOTALQUO)


TGL4RAJV = arr(TONEQUO * REV4RAJV / TOTALQUO)


TGL4RBJC = arr(TONEQUO * REV4RBJC / TOTALQUO)


TGL4VC = arr(TONEQUO * REV4VC / TOTALQUO)


TGL4TVC = arr(TONEQUO * REV4TVC / TOTALQUO)


TGL4 = positif(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * REV4 / TOTALQUO) + 1 - positif(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA - TGLRVG - TGL1 - TGL2 - TGL3


TGLTOT = somme((TGL(i) for i in interval(1, 4))) + TGLRVG + TGLRWB + TGLRWA


TGLFV = positif(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * PENFV / TOTALQUO) + 1 - positif(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT


TGLFC = positif(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * PENFC / TOTALQUO) + 1 - positif(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV


TGLF1 = positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * PENF1 / TOTALQUO) + 1 - positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV - TGLFC


TGLF2 = positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * PENF2 / TOTALQUO) + 1 - positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV - TGLFC - TGLF1


TGLF3 = positif(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * PENF3 / TOTALQUO) + 1 - positif(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV - TGLFC - TGLF1 - TGLF2


TGLF4 = positif(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * PENF4 / TOTALQUO) + 1 - positif(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV - TGLFC - TGLF1 - TGLF2 - TGLF3


TGLFTOT = somme((TGLF(i) for i in ('V', 'C') or i in interval(1, 4)))


TGLPALIMV = positif(TPENALIMC + TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPENALIMV / TOTALQUO) + 1 - positif(TPENALIMC + TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT


TGLPALIMC = positif(TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPENALIMC / TOTALQUO) + 1 - positif(TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV


TGLPALIM1 = positif(TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPENALIM1 / TOTALQUO) + 1 - positif(TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV - TGLPALIMC


TGLPALIM2 = positif(TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPENALIM2 / TOTALQUO) + 1 - positif(TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV - TGLPALIMC - TGLPALIM1


TGLPALIM3 = positif(TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPENALIM3 / TOTALQUO) + 1 - positif(TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV - TGLPALIMC - TGLPALIM1 - TGLPALIM2


TGLPALIM4 = positif(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPENALIM4 / TOTALQUO) + 1 - positif(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV - TGLPALIMC - TGLPALIM1 - TGLPALIM2 - TGLPALIM3


TGLPALIMTOT = somme((TGLPALIM(i) for i in ('V', 'C') or i in interval(1, 4)))


TGLTSV = positif(TTSNN2TSC + TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2TSV / TOTALQUO) + 1 - positif(TTSNN2TSC + TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT


TGLTSC = positif(TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2TSC / TOTALQUO) + 1 - positif(TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSV


TGLTS1 = positif(TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2TS1 / TOTALQUO) + 1 - positif(TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - GLTOT - GLFTOT - GLPALIMTOT - TGLTSV - TGLTSC


TGLTS2 = positif(TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2TS2 / TOTALQUO) + 1 - positif(TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSV - TGLTSC - TGLTS1


TGLTS3 = positif(TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2TS3 / TOTALQUO) + 1 - positif(TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSV - TGLTSC - TGLTS1 - TGLTS2


TGLTS4 = positif(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2TS4 / TOTALQUO) + 1 - positif(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSV - TGLTSC - TGLTS1 - TGLTS2 - TGLTS3


TGLTSTOT = somme((TGLTS(i) for i in ('V', 'C') or i in interval(1, 4)))


TGLTSREMPV = positif(TTSNN2REMPC + TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2REMPV / TOTALQUO) + 1 - positif(TTSNN2REMPC + TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLTSTOT - GLPALIMTOT


TGLTSREMPC = positif(TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2REMPC / TOTALQUO) + 1 - positif(TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV


TGLTSREMP1 = positif(TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2REMP1 / TOTALQUO) + 1 - positif(TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV - TGLTSREMPC


TGLTSREMP2 = positif(TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2REMP2 / TOTALQUO) + 1 - positif(TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV - TGLTSREMPC - TGLTSREMP1


TGLTSREMP3 = positif(TTSNN2REMP4 + TTSNN2REMPC + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2REMP3 / TOTALQUO) + 1 - positif(TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV - TGLTSREMPC - TGLTSREMP1 - TGLTSREMP2


TGLTSREMP4 = positif(REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2REMP4 / TOTALQUO) + 1 - positif(REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV - TGLTSREMPC - TGLTSREMP1 - TGLTSREMP2 - TGLTSREMP3


TGLTSREMPTOT = somme((TGLTSREMP(i) for i in ('V', 'C') or i in interval(1, 4)))


TGLPRRV = positif(TPRR2C + TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2V / TOTALQUO) + 1 - positif(TPRR2C + TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT


TGLPRRC = positif(TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2C / TOTALQUO) + 1 - positif(TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV


TGLPRR1 = positif(TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR21 / TOTALQUO) + 1 - positif(TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC


TGLPRR2 = positif(TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR22 / TOTALQUO) + 1 - positif(TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1


TGLPRR3 = positif(TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR23 / TOTALQUO) + 1 - positif(TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2


TGLPRR4 = positif(TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR24 / TOTALQUO) + 1 - positif(TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3


TGLPRRZV = positif(TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2ZV / TOTALQUO) + 1 - positif(TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4


TGLPRRZC = positif(TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2ZC / TOTALQUO) + 1 - positif(TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV


TGLPRRZ1 = positif(TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2Z1 / TOTALQUO) + 1 - positif(TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV - TGLPRRZC


TGLPRRZ2 = positif(TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2Z2 / TOTALQUO) + 1 - positif(TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV - TGLPRRZC - TGLPRRZ1


TGLPRRZ3 = positif(TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2Z3 / TOTALQUO) + 1 - positif(TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV - TGLPRRZC - TGLPRRZ1 - TGLPRRZ2


TGLPRRZ4 = positif(REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2Z4 / TOTALQUO) + 1 - positif(REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV - TGLPRRZC - TGLPRRZ1 - TGLPRRZ2 - TGLPRRZ3


TGLPRRTOT = somme((TGLPRR(i) + TGLPRRZ(i) for i in ('V', 'C') or i in interval(1, 4)))


TGLRVO = positif(__2RV2 + __2RV3 + __2RV4 + REVRCM + REVRF) * arr(TONEQUO * __2RV1 / TOTALQUO) + 1 - positif(__2RV2 + __2RV3 + __2RV4 + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT


TGLRVO5 = positif(__2RV3 + __2RV4 + REVRCM + REVRF) * arr(TONEQUO * __2RV2 / TOTALQUO) + 1 - positif(__2RV3 + __2RV4 + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVO


TGLRVO6 = positif(__2RV4 + REVRCM + REVRF) * arr(TONEQUO * __2RV3 / TOTALQUO) + 1 - positif(__2RV4 + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLPRRTOT - TGLTSREMPTOT - TGLRVO - TGLRVO5


TGLRVO7 = positif(REVRCM + REVRF) * arr(TONEQUO * __2RV4 / TOTALQUO) + 1 - positif(REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVO - TGLRVO5 - TGLRVO6


TGLRVOTOT = TGLRVO + TGLRVO5 + TGLRVO6 + TGLRVO7


TGLRCMDC = positif(__3RCM + __4RCM + __5RCM + __6RCM + __7RCM + REVRF) * arr(TONEQUO * __2RCM / TOTALQUO) + 1 - positif(__3RCM + __4RCM + __5RCM + __6RCM + __7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT


TGLRCMFU = positif(__4RCM + __5RCM + __6RCM + __7RCM + REVRF) * arr(TONEQUO * __3RCM / TOTALQUO) + 1 - positif(__4RCM + __5RCM + __6RCM + __7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC


TGLRCMCH = positif(__5RCM + __6RCM + __7RCM + REVRF) * arr(TONEQUO * __4RCM / TOTALQUO) + 1 - positif(__5RCM + __6RCM + __7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC - TGLRCMFU


TGLRCMTS = positif(__6RCM + __7RCM + REVRF) * arr(TONEQUO * __5RCM / TOTALQUO) + 1 - positif(__6RCM + __7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC - TGLRCMFU - TGLRCMCH


TGLRCMGO = positif(__7RCM + REVRF) * arr(TONEQUO * __6RCM / TOTALQUO) + 1 - positif(__7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC - TGLRCMFU - TGLRCMCH - TGLRCMTS


TGLRCMTR = positif(REVRF) * arr(TONEQUO * __7RCM / TOTALQUO) + 1 - positif(REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC - TGLRCMFU - TGLRCMCH - TGLRCMGO - TGLRCMTS


TGLRCMTOT = TGLRCMDC + TGLRCMFU + TGLRCMCH + TGLRCMGO + TGLRCMTR + TGLRCMTS


TGLRF1 = positif(__3REVF) * arr(TONEQUO * __2REVF / TOTALQUO) + 1 - positif(__3REVF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMTOT


TGLRF2 = TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMTOT - TGLRF1


TGLRFTOT = TGLRF1 + TGLRF2


TEGLRWB = GLRWB * 1 - positif(INDTEFF) + TGLRWB * positif(INDTEFF)


TEGLRWA = GLRWA * 1 - positif(INDTEFF) + TGLRWA * positif(INDTEFF)


TEGLRVG = GLRVG * 1 - positif(INDTEFF) + TGLRVG * positif(INDTEFF)


TEGL1 = GL1 * 1 - positif(INDTEFF) + TGL1 * positif(INDTEFF)


TEGL2 = GL2 * 1 - positif(INDTEFF) + TGL2 * positif(INDTEFF)


TEGL3 = GL3 * 1 - positif(INDTEFF) + TGL3 * positif(INDTEFF)


TEGL4V = GL4V * 1 - positif(INDTEFF) + TGL4V * positif(INDTEFF)


TEGL4C = GL4C * 1 - positif(INDTEFF) + TGL4C * positif(INDTEFF)


TEGL4VC = GL4VC * 1 - positif(INDTEFF) + TGL4VC * positif(INDTEFF)


TEGL4TVC = GL4TVC * 1 - positif(INDTEFF) + TGL4TVC * positif(INDTEFF)


TEGL4 = GL4 * 1 - positif(INDTEFF) + TGL4 * positif(INDTEFF)


TEGLFV = GLFV * 1 - positif(INDTEFF) + TGLFV * positif(INDTEFF)


TEGLFC = GLFC * 1 - positif(INDTEFF) + TGLFC * positif(INDTEFF)


TEGLF1 = GLF1 * 1 - positif(INDTEFF) + TGLF1 * positif(INDTEFF)


TEGLF2 = GLF2 * 1 - positif(INDTEFF) + TGLF2 * positif(INDTEFF)


TEGLF3 = GLF3 * 1 - positif(INDTEFF) + TGLF3 * positif(INDTEFF)


TEGLF4 = GLF4 * 1 - positif(INDTEFF) + TGLF4 * positif(INDTEFF)


TEGLPALIMV = GLPALIMV * 1 - positif(INDTEFF) + TGLPALIMV * positif(INDTEFF)


TEGLPALIMC = GLPALIMC * 1 - positif(INDTEFF) + TGLPALIMC * positif(INDTEFF)


TEGLPALIM1 = GLPALIM1 * 1 - positif(INDTEFF) + TGLPALIM1 * positif(INDTEFF)


TEGLPALIM2 = GLPALIM2 * 1 - positif(INDTEFF) + TGLPALIM2 * positif(INDTEFF)


TEGLPALIM3 = GLPALIM3 * 1 - positif(INDTEFF) + TGLPALIM3 * positif(INDTEFF)


TEGLPALIM4 = GLPALIM4 * 1 - positif(INDTEFF) + TGLPALIM4 * positif(INDTEFF)


TEGLTSV = GLTSV * 1 - positif(INDTEFF) + TGLTSV * positif(INDTEFF)


TEGLTSC = GLTSC * 1 - positif(INDTEFF) + TGLTSC * positif(INDTEFF)


TEGLTS1 = GLTS1 * 1 - positif(INDTEFF) + TGLTS1 * positif(INDTEFF)


TEGLTS2 = GLTS2 * 1 - positif(INDTEFF) + TGLTS2 * positif(INDTEFF)


TEGLTS3 = GLTS3 * 1 - positif(INDTEFF) + TGLTS3 * positif(INDTEFF)


TEGLTS4 = GLTS4 * 1 - positif(INDTEFF) + TGLTS4 * positif(INDTEFF)


TEGLTSREMPV = GLTSREMPV * 1 - positif(INDTEFF) + TGLTSREMPV * positif(INDTEFF)


TEGLTSREMPC = GLTSREMPC * 1 - positif(INDTEFF) + TGLTSREMPC * positif(INDTEFF)


TEGLTSREMP1 = GLTSREMP1 * 1 - positif(INDTEFF) + TGLTSREMP1 * positif(INDTEFF)


TEGLTSREMP2 = GLTSREMP2 * 1 - positif(INDTEFF) + TGLTSREMP2 * positif(INDTEFF)


TEGLTSREMP3 = GLTSREMP3 * 1 - positif(INDTEFF) + TGLTSREMP3 * positif(INDTEFF)


TEGLTSREMP4 = GLTSREMP4 * 1 - positif(INDTEFF) + TGLTSREMP4 * positif(INDTEFF)


TEGLPRRV = GLPRRV * 1 - positif(INDTEFF) + TGLPRRV * positif(INDTEFF)


TEGLPRRC = GLPRRC * 1 - positif(INDTEFF) + TGLPRRC * positif(INDTEFF)


TEGLPRR1 = GLPRR1 * 1 - positif(INDTEFF) + TGLPRR1 * positif(INDTEFF)


TEGLPRR2 = GLPRR2 * 1 - positif(INDTEFF) + TGLPRR2 * positif(INDTEFF)


TEGLPRR3 = GLPRR3 * 1 - positif(INDTEFF) + TGLPRR3 * positif(INDTEFF)


TEGLPRR4 = GLPRR4 * 1 - positif(INDTEFF) + TGLPRR4 * positif(INDTEFF)


TEGLPRRZV = GLPRRZV * 1 - positif(INDTEFF) + TGLPRRZV * positif(INDTEFF)


TEGLPRRZC = GLPRRZC * 1 - positif(INDTEFF) + TGLPRRZC * positif(INDTEFF)


TEGLPRRZ1 = GLPRRZ1 * 1 - positif(INDTEFF) + TGLPRRZ1 * positif(INDTEFF)


TEGLPRRZ2 = GLPRRZ2 * 1 - positif(INDTEFF) + TGLPRRZ2 * positif(INDTEFF)


TEGLPRRZ3 = GLPRRZ3 * 1 - positif(INDTEFF) + TGLPRRZ3 * positif(INDTEFF)


TEGLPRRZ4 = GLPRRZ4 * 1 - positif(INDTEFF) + TGLPRRZ4 * positif(INDTEFF)


TEGLRVO = GLRVO * 1 - positif(INDTEFF) + TGLRVO * positif(INDTEFF)


TEGLRVO5 = GLRVO5 * 1 - positif(INDTEFF) + TGLRVO5 * positif(INDTEFF)


TEGLRVO6 = GLRVO6 * 1 - positif(INDTEFF) + TGLRVO6 * positif(INDTEFF)


TEGLRVO7 = GLRVO7 * 1 - positif(INDTEFF) + TGLRVO7 * positif(INDTEFF)


TEGLRCMDC = GLRCMDC * 1 - positif(INDTEFF) + TGLRCMDC * positif(INDTEFF)


TEGLRCMFU = GLRCMFU * 1 - positif(INDTEFF) + TGLRCMFU * positif(INDTEFF)


TEGLRCMCH = GLRCMCH * 1 - positif(INDTEFF) + TGLRCMCH * positif(INDTEFF)


TEGLRCMGO = GLRCMGO * 1 - positif(INDTEFF) + TGLRCMGO * positif(INDTEFF)


TEGLRCMTR = GLRCMTR * 1 - positif(INDTEFF) + TGLRCMTR * positif(INDTEFF)


TEGLRCMTS = GLRCMTS * 1 - positif(INDTEFF) + TGLRCMTS * positif(INDTEFF)


TEGLRF1 = GLRF1 * 1 - positif(INDTEFF) + TGLRF1 * positif(INDTEFF)


TEGLRF2 = GLRF2 * 1 - positif(INDTEFF) + TGLRF2 * positif(INDTEFF)


TEGLTOT = TEGLRVG + TEGL1 + TEGL2 + TEGL3 + TEGL4


TEGLFTOT = TEGLFV + TEGLFC + TEGLF1 + TEGLF2 + TEGLF3 + TEGLF4


TEGLPALIMTOT = TEGLPALIMV + TEGLPALIMC + TEGLPALIM1 + TEGLPALIM2 + TEGLPALIM3 + TEGLPALIM4


TEGLTSTOT = TEGLTSV + TEGLTSC + TEGLTS1 + TEGLTS2 + TEGLTS3 + TEGLTS4


TEGLTSREMPTOT = TEGLTSREMPV + TEGLTSREMPC + TEGLTSREMP1 + TEGLTSREMP2 + TEGLTSREMP3 + TEGLTSREMP4


TEGLPRRTOT = TEGLPRRV + TEGLPRRC + TEGLPRR1 + TEGLPRR2 + TEGLPRR3 + TEGLPRR4


TEGLPRRZTOT = TEGLPRRZV + TEGLPRRZC + TEGLPRRZ1 + TEGLPRRZ2 + TEGLPRRZ3 + TEGLPRRZ4


TEGLRVOTOT = TEGLRVO + TEGLRVO5 + TEGLRVO6 + TEGLRVO7


TEGLRCMTOT = TEGLRCMDC + TEGLRCMFU + TEGLRCMCH + TEGLRCMGO + TEGLRCMTR + TEGLRCMTS


TEGLRFTOT = TEGLRF1 + TEGLRF2

GLRWBM = positif(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * CODRWB / TOTALQUOHT) + 1 - positif(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT * positif(null(1 - FLAG_EXIT) + null(2 - FLAG_EXIT))


GLRWAM = positif(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * CODRWA / TOTALQUOHT) + 1 - positif(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM * null(2 - FLAG_EXIT)


GLRVGM = positif(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * CODRVG / TOTALQUOHT) + 1 - positif(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM


GL1M = positif(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * GLN1 / TOTALQUOHT) + 1 - positif(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM - GLRVGM


GL2M = positif(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * GLN2 / TOTALQUOHT) + 1 - positif(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM - GLRVGM - GL1M


GL3M = positif(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * GLN3 / TOTALQUOHT) + 1 - positif(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM - GLRVGM - GL1M - GL2M


GL4VM = arr(TONEQUOMHT * REV4V / TOTALQUOHT)


GL4CM = arr(TONEQUOMHT * REV4C / TOTALQUOHT)


GL4VCM = arr(TONEQUOMHT * REV4VC / TOTALQUOHT)


GL4TVCM = arr(TONEQUOMHT * REV4TVC / TOTALQUOHT)


GL4M = positif(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * REV4 / TOTALQUOHT) + 1 - positif(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM - GLRVGM - GL1M - GL2M - GL3M


GLTOTM = somme((GL(i)M for i in interval(1, 4))) + GLRVGM + GLRWBM + GLRWAM


GLFVM = positif(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENFV / TOTALQUOHT) + 1 - positif(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM


GLFCM = positif(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENFC / TOTALQUOHT) + 1 - positif(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFVM


GLF1M = positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENF1 / TOTALQUOHT) + 1 - positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFVM - GLFCM


GLF2M = positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENF2 / TOTALQUOHT) + 1 - positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFVM - GLFCM - GLF1M


GLF3M = positif(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENF3 / TOTALQUOHT) + 1 - positif(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFVM - GLFCM - GLF1M - GLF2M


GLF4M = positif(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENF4 / TOTALQUOHT) + 1 - positif(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOT - GLFVM - GLFCM - GLF1M - GLF2M - GLF3M


GLFTOTM = somme((GLF(i)M for i in ('V', 'C') or i in interval(1, 4)))


GLPALIMVM = positif(PENALIMC + PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENALIMV / TOTALQUOHT) + 1 - positif(PENALIMC + PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM


GLPALIMCM = positif(PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENALIMC / TOTALQUOHT) + 1 - positif(PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM


GLPALIM1M = positif(PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENALIM1 / TOTALQUOHT) + 1 - positif(PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM - GLPALIMCM


GLPALIM2M = positif(PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENALIM2 / TOTALQUOHT) + 1 - positif(PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM - GLPALIMCM - GLPALIM1M


GLPALIM3M = positif(PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENALIM3 / TOTALQUOHT) + 1 - positif(PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM - GLPALIMCM - GLPALIM1M - GLPALIM2M


GLPALIM4M = positif(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENALIM4 / TOTALQUOHT) + 1 - positif(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM - GLPALIMCM - GLPALIM1M - GLPALIM2M - GLPALIM3M


GLPALIMTOTM = somme((GLPALIM(i)M for i in ('V', 'C') or i in interval(1, 4)))


GLTSVM = positif(TSNN2TSC + TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2TSV / TOTALQUOHT) + 1 - positif(TSNN2TSC + TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM


GLTSCM = positif(TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2TSC / TOTALQUOHT) + 1 - positif(TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM


GLTS1M = positif(TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2TS1 / TOTALQUOHT) + 1 - positif(TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM - GLTSCM


GLTS2M = positif(TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2TS2 / TOTALQUOHT) + 1 - positif(TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM - GLTSCM - GLTS1M


GLTS3M = positif(TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2TS3 / TOTALQUOHT) + 1 - positif(TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM - GLTSCM - GLTS1M - GLTS2M


GLTS4M = positif(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2TS4 / TOTALQUOHT) + 1 - positif(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM - GLTSCM - GLTS1M - GLTS2M - GLTS3M


GLTSTOTM = somme((GLTS(i)M for i in ('V', 'C') or i in interval(1, 4)))


GLTSREMPVM = positif(TSNN2REMPC + TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2REMPV / TOTALQUOHT) + 1 - positif(TSNN2REMPC + TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM


GLTSREMPCM = positif(TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2REMPC / TOTALQUOHT) + 1 - positif(TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM


GLTSREMP1M = positif(TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2REMP1 / TOTALQUOHT) + 1 - positif(TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM - GLTSREMPCM


GLTSREMP2M = positif(TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2REMP2 / TOTALQUOHT) + 1 - positif(TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM - GLTSREMPCM - GLTSREMP1M


GLTSREMP3M = positif(TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2REMP3 / TOTALQUOHT) + 1 - positif(TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM - GLTSREMPCM - GLTSREMP1M - GLTSREMP2M


GLTSREMP4M = positif(REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2REMP4 / TOTALQUOHT) + 1 - positif(REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM - GLTSREMPCM - GLTSREMP1M - GLTSREMP2M - GLTSREMP3M


GLTSREMPTOTM = somme((GLTSREMP(i)M for i in ('V', 'C') or i in interval(1, 4)))


GLPRRVM = positif(PRR2C + PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2V / TOTALQUOHT) + 1 - positif(PRR2C + PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM


GLPRRCM = positif(PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2C / TOTALQUOHT) + 1 - positif(PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM


GLPRR1M = positif(PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR21 / TOTALQUOHT) + 1 - positif(PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM


GLPRR2M = positif(PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR22 / TOTALQUOHT) + 1 - positif(PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M


GLPRR3M = positif(PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR23 / TOTALQUOHT) + 1 - positif(PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M


GLPRR4M = positif(PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR24 / TOTALQUOHT) + 1 - positif(PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M


GLPRRZVM = positif(PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2ZV / TOTALQUOHT) + 1 - positif(PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M


GLPRRZCM = positif(PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2ZC / TOTALQUOHT) + 1 - positif(PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM


GLPRRZ1M = positif(PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2Z1 / TOTALQUOHT) + 1 - positif(PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM - GLPRRZCM


GLPRRZ2M = positif(PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2Z2 / TOTALQUOHT) + 1 - positif(PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM - GLPRRZCM - GLPRRZ1M


GLPRRZ3M = positif(PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2Z3 / TOTALQUOHT) + 1 - positif(PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM - GLPRRZCM - GLPRRZ1M - GLPRRZ2M


GLPRRZ4M = positif(REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2Z4 / TOTALQUOHT) + 1 - positif(REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM - GLPRRZCM - GLPRRZ1M - GLPRRZ2M - GLPRRZ3M


GLPRRTOTM = somme((GLPRR(i)M + GLPRRZ(i)M for i in ('V', 'C') or i in interval(1, 4)))


GLRVOM = positif(__2RV2 + __2RV3 + __2RV4 + REVRCM + REVRF) * arr(TONEQUOMHT * __2RV1 / TOTALQUOHT) + 1 - positif(__2RV2 + __2RV3 + __2RV4 + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM


GLRVO5M = positif(__2RV3 + __2RV4 + REVRCM + REVRF) * arr(TONEQUOMHT * __2RV2 / TOTALQUOHT) + 1 - positif(__2RV3 + __2RV4 + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOM


GLRVO6M = positif(__2RV4 + REVRCM + REVRF) * arr(TONEQUOMHT * __2RV3 / TOTALQUOHT) + 1 - positif(__2RV4 + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOM - GLRVO5M


GLRVO7M = positif(REVRCM + REVRF) * arr(TONEQUOMHT * __2RV4 / TOTALQUOHT) + 1 - positif(REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOM - GLRVO5M - GLRVO6M


GLRVOTOTM = GLRVOM + GLRVO5M + GLRVO6M + GLRVO7M


GLRCMDCM = positif(__3RCM + __4RCM + __5RCM + __6RCM + __7RCM + REVRF) * arr(TONEQUOMHT * __2RCM / TOTALQUOHT) + 1 - positif(__3RCM + __4RCM + __5RCM + __6RCM + __7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM


GLRCMFUM = positif(__4RCM + __5RCM + __6RCM + __7RCM + REVRF) * arr(TONEQUOMHT * __3RCM / TOTALQUOHT) + 1 - positif(__4RCM + __5RCM + __6RCM + __7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM


GLRCMCHM = positif(__5RCM + __6RCM + __7RCM + REVRF) * arr(TONEQUOMHT * __4RCM / TOTALQUOHT) + 1 - positif(__5RCM + __6RCM + __7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM - GLRCMFUM


GLRCMTSM = positif(__6RCM + __7RCM + REVRF) * arr(TONEQUOMHT * __5RCM / TOTALQUOHT) + 1 - positif(__6RCM + __7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM - GLRCMFUM - GLRCMCHM


GLRCMGOM = positif(__7RCM + REVRF) * arr(TONEQUOMHT * __6RCM / TOTALQUOHT) + 1 - positif(__7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM - GLRCMFUM - GLRCMCHM - GLRCMTSM


GLRCMTRM = positif(REVRF) * arr(TONEQUOMHT * __7RCM / TOTALQUOHT) + 1 - positif(REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM - GLRCMFUM - GLRCMCHM - GLRCMGOM - GLRCMTSM


GLRCMTOTM = GLRCMDCM + GLRCMFUM + GLRCMCHM + GLRCMGOM + GLRCMTRM + GLRCMTSM


GLRF1M = positif(__3REVF) * arr(TONEQUOMHT * __2REVF / TOTALQUOHT) + 1 - positif(__3REVF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMTOTM


GLRF2M = TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMTOTM - GLRF1M


GLRFTOTM = GLRF1M + GLRF2M

TGLRWBM = positif(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * CODRWB / TOTALQUO) + 1 - positif(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM * positif(null(1 - FLAG_EXIT) + null(2 - FLAG_EXIT))


TGLRWAM = positif(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * CODRWA / TOTALQUO) + 1 - positif(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM * null(2 - FLAG_EXIT)


TGLRVGM = positif(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * CODRVG / TOTALQUO) + 1 - positif(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM


TGL1M = positif(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TGLN1 / TOTALQUO) + 1 - positif(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM - TGLRVGM


TGL2M = positif(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TGLN2 / TOTALQUO) + 1 - positif(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM - TGLRVGM - TGL1M


TGL3M = positif(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TGLN3 / TOTALQUO) + 1 - positif(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM - TGLRVGM - TGL1M - TGL2M


TGL4VM = arr(TONEQUOM * REV4V / TOTALQUO)


TGL4CM = arr(TONEQUOM * REV4C / TOTALQUO)


TGL4VCM = arr(TONEQUOM * REV4VC / TOTALQUO)


TGL4TVCM = arr(TONEQUOM * REV4TVC / TOTALQUO)


TGL4M = positif(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * REV4 / TOTALQUO) + 1 - positif(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM - TGLRVGM - TGL1M - TGL2M - TGL3M


TGLTOTM = somme((TGL(i)M for i in interval(1, 4))) + TGLRVGM + TGLRWBM + TGLRWAM


TGLFVM = positif(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENFV / TOTALQUO) + 1 - positif(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM


TGLFCM = positif(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENFC / TOTALQUO) + 1 - positif(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFVM


TGLF1M = positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENF1 / TOTALQUO) + 1 - positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFVM - TGLFCM


TGLF2M = positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENF2 / TOTALQUO) + 1 - positif(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFVM - TGLFCM - TGLF1M


TGLF3M = positif(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENF3 / TOTALQUO) + 1 - positif(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFVM - TGLFCM - TGLF1M - TGLF2M


TGLF4M = positif(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENF4 / TOTALQUO) + 1 - positif(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOT - TGLFVM - TGLFCM - TGLF1M - TGLF2M - TGLF3M


TGLFTOTM = somme((TGLF(i)M for i in ('V', 'C') or i in interval(1, 4)))


TGLPALIMVM = positif(TPENALIMC + TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPENALIMV / TOTALQUO) + 1 - positif(TPENALIMC + TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM


TGLPALIMCM = positif(TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPENALIMC / TOTALQUO) + 1 - positif(TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM


TGLPALIM1M = positif(TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPENALIM1 / TOTALQUO) + 1 - positif(TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM - TGLPALIMCM


TGLPALIM2M = positif(TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPENALIM2 / TOTALQUO) + 1 - positif(TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM - TGLPALIMCM - TGLPALIM1M


TGLPALIM3M = positif(TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENALIM3 / TOTALQUO) + 1 - positif(TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM - TGLPALIMCM - TGLPALIM1M - TGLPALIM2M


TGLPALIM4M = positif(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPENALIM4 / TOTALQUO) + 1 - positif(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM - TGLPALIMCM - TGLPALIM1M - TGLPALIM2M - TGLPALIM3M


TGLPALIMTOTM = somme((TGLPALIM(i)M for i in ('V', 'C') or i in interval(1, 4)))


TGLTSVM = positif(TTSNN2TSC + TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2TSV / TOTALQUO) + 1 - positif(TTSNN2TSC + TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM


TGLTSCM = positif(TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2TSC / TOTALQUO) + 1 - positif(TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM


TGLTS1M = positif(TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2TS1 / TOTALQUO) + 1 - positif(TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM - TGLTSCM


TGLTS2M = positif(TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2TS2 / TOTALQUO) + 1 - positif(TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM - TGLTSCM - TGLTS1M


TGLTS3M = positif(TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2TS3 / TOTALQUO) + 1 - positif(TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM - TGLTSCM - TGLTS1M - TGLTS2M


TGLTS4M = positif(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2TS4 / TOTALQUO) + 1 - positif(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM - TGLTSCM - TGLTS1M - TGLTS2M - TGLTS3M


TGLTSTOTM = somme((TGLTS(i)M for i in ('V', 'C') or i in interval(1, 4)))


TGLTSREMPVM = positif(TTSNN2REMPC + TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2REMPV / TOTALQUO) + 1 - positif(TTSNN2REMPC + TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM


TGLTSREMPCM = positif(TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2REMPC / TOTALQUO) + 1 - positif(TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM


TGLTSREMP1M = positif(TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2REMP1 / TOTALQUO) + 1 - positif(TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM - TGLTSREMPCM


TGLTSREMP2M = positif(TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2REMP2 / TOTALQUO) + 1 - positif(TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM - TGLTSREMPCM - TGLTSREMP1M


TGLTSREMP3M = positif(TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2REMP3 / TOTALQUO) + 1 - positif(TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM - TGLTSREMPCM - TGLTSREMP1M - TGLTSREMP2M


TGLTSREMP4M = positif(REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2REMP4 / TOTALQUO) + 1 - positif(REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM - TGLTSREMPCM - TGLTSREMP1M - TGLTSREMP2M - TGLTSREMP3M


TGLTSREMPTOTM = somme((TGLTSREMP(i)M for i in ('V', 'C') or i in interval(1, 4)))


TGLPRRVM = positif(TPRR2C + TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2V / TOTALQUO) + 1 - positif(TPRR2C + TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM


TGLPRRCM = positif(TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2C / TOTALQUO) + 1 - positif(TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM


TGLPRR1M = positif(TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR21 / TOTALQUO) + 1 - positif(TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM


TGLPRR2M = positif(TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR22 / TOTALQUO) + 1 - positif(TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M


TGLPRR3M = positif(TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR23 / TOTALQUO) + 1 - positif(TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M


TGLPRR4M = positif(TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR24 / TOTALQUO) + 1 - positif(TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M


TGLPRRZVM = positif(TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2ZV / TOTALQUO) + 1 - positif(TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M


TGLPRRZCM = positif(TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2ZC / TOTALQUO) + 1 - positif(TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM


TGLPRRZ1M = positif(TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2Z1 / TOTALQUO) + 1 - positif(TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM - TGLPRRZCM


TGLPRRZ2M = positif(TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2Z2 / TOTALQUO) + 1 - positif(TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM - TGLPRRZCM - TGLPRRZ1M


TGLPRRZ3M = positif(TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2Z3 / TOTALQUO) + 1 - positif(TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM - TGLPRRZCM - TGLPRRZ1M - TGLPRRZ2M


TGLPRRZ4M = positif(REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2Z4 / TOTALQUO) + 1 - positif(REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM - TGLPRRZCM - TGLPRRZ1M - TGLPRRZ2M - TGLPRRZ3M


TGLPRRTOTM = somme((TGLPRR(i)M + TGLPRRZ(i)M for i in ('V', 'C') or i in interval(1, 4)))


TGLRVOM = positif(__2RV2 + __2RV3 + __2RV4 + REVRCM + REVRF) * arr(TONEQUOM * __2RV1 / TOTALQUO) + 1 - positif(__2RV2 + __2RV3 + __2RV4 + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM


TGLRVO5M = positif(__2RV3 + __2RV4 + REVRCM + REVRF) * arr(TONEQUOM * __2RV2 / TOTALQUO) + 1 - positif(__2RV3 + __2RV4 + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOM


TGLRVO6M = positif(__2RV4 + REVRCM + REVRF) * arr(TONEQUOM * __2RV3 / TOTALQUO) + 1 - positif(__2RV4 + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOM - TGLRVO5M


TGLRVO7M = positif(REVRCM + REVRF) * arr(TONEQUOM * __2RV4 / TOTALQUO) + 1 - positif(REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOM - TGLRVO5M - TGLRVO6M


TGLRVOTOTM = TGLRVOM + TGLRVO5M + TGLRVO6M + TGLRVO7M


TGLRCMDCM = positif(__3RCM + __4RCM + __5RCM + __6RCM + __7RCM + REVRF) * arr(TONEQUOM * __2RCM / TOTALQUO) + 1 - positif(__3RCM + __4RCM + __5RCM + __6RCM + __7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM


TGLRCMFUM = positif(__4RCM + __5RCM + __6RCM + __7RCM + REVRF) * arr(TONEQUOM * __3RCM / TOTALQUO) + 1 - positif(__4RCM + __5RCM + __6RCM + __7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM


TGLRCMCHM = positif(__5RCM + __6RCM + __7RCM + REVRF) * arr(TONEQUOM * __4RCM / TOTALQUO) + 1 - positif(__5RCM + __6RCM + __7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM - TGLRCMFUM


TGLRCMTSM = positif(__6RCM + __7RCM + REVRF) * arr(TONEQUOM * __5RCM / TOTALQUO) + 1 - positif(__6RCM + __7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM - TGLRCMFUM - TGLRCMCHM


TGLRCMGOM = positif(__7RCM + REVRF) * arr(TONEQUOM * __6RCM / TOTALQUO) + 1 - positif(__7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM - TGLRCMFUM - TGLRCMCHM - TGLRCMTSM


TGLRCMTRM = positif(REVRF) * arr(TONEQUOM * __7RCM / TOTALQUO) + 1 - positif(REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM - TGLRCMFUM - TGLRCMCHM - TGLRCMGOM - TGLRCMTSM


TGLRCMTOTM = TGLRCMDCM + TGLRCMFUM + TGLRCMCHM + TGLRCMGOM + TGLRCMTRM + TGLRCMTSM


TGLRF1M = positif(__3REVF) * arr(TONEQUOM * __2REVF / TOTALQUO) + 1 - positif(__3REVF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMTOTM


TGLRF2M = TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMTOTM - TGLRF1M


TGLRFTOTM = TGLRF1M + TGLRF2M


TEGLRWBM = GLRWBM * 1 - positif(INDTEFF) + TGLRWBM * positif(INDTEFF)


TEGLRWAM = GLRWAM * 1 - positif(INDTEFF) + TGLRWAM * positif(INDTEFF)


TEGLRVGM = GLRVGM * 1 - positif(INDTEFF) + TGLRVGM * positif(INDTEFF)


TEGL1M = GL1M * 1 - positif(INDTEFF) + TGL1M * positif(INDTEFF)


TEGL2M = GL2M * 1 - positif(INDTEFF) + TGL2M * positif(INDTEFF)


TEGL3M = GL3M * 1 - positif(INDTEFF) + TGL3M * positif(INDTEFF)


TEGL4VM = GL4VM * 1 - positif(INDTEFF) + TGL4VM * positif(INDTEFF)


TEGL4CM = GL4CM * 1 - positif(INDTEFF) + TGL4CM * positif(INDTEFF)


TEGL4VCM = GL4VCM * 1 - positif(INDTEFF) + TGL4VCM * positif(INDTEFF)


TEGL4TVCM = GL4TVCM * 1 - positif(INDTEFF) + TGL4TVCM * positif(INDTEFF)


TEGL4M = GL4M * 1 - positif(INDTEFF) + TGL4M * positif(INDTEFF)


TEGLFVM = GLFVM * 1 - positif(INDTEFF) + TGLFVM * positif(INDTEFF)


TEGLFCM = GLFCM * 1 - positif(INDTEFF) + TGLFCM * positif(INDTEFF)


TEGLF1M = GLF1M * 1 - positif(INDTEFF) + TGLF1M * positif(INDTEFF)


TEGLF2M = GLF2M * 1 - positif(INDTEFF) + TGLF2M * positif(INDTEFF)


TEGLF3M = GLF3M * 1 - positif(INDTEFF) + TGLF3M * positif(INDTEFF)


TEGLF4M = GLF4M * 1 - positif(INDTEFF) + TGLF4M * positif(INDTEFF)


TEGLPALIMVM = GLPALIMVM * 1 - positif(INDTEFF) + TGLPALIMVM * positif(INDTEFF)


TEGLPALIMCM = GLPALIMCM * 1 - positif(INDTEFF) + TGLPALIMCM * positif(INDTEFF)


TEGLPALIM1M = GLPALIM1M * 1 - positif(INDTEFF) + TGLPALIM1M * positif(INDTEFF)


TEGLPALIM2M = GLPALIM2M * 1 - positif(INDTEFF) + TGLPALIM2M * positif(INDTEFF)


TEGLPALIM3M = GLPALIM3M * 1 - positif(INDTEFF) + TGLPALIM3M * positif(INDTEFF)


TEGLPALIM4M = GLPALIM4M * 1 - positif(INDTEFF) + TGLPALIM4M * positif(INDTEFF)


TEGLTSVM = GLTSVM * 1 - positif(INDTEFF) + TGLTSVM * positif(INDTEFF)


TEGLTSCM = GLTSCM * 1 - positif(INDTEFF) + TGLTSCM * positif(INDTEFF)


TEGLTS1M = GLTS1M * 1 - positif(INDTEFF) + TGLTS1M * positif(INDTEFF)


TEGLTS2M = GLTS2M * 1 - positif(INDTEFF) + TGLTS2M * positif(INDTEFF)


TEGLTS3M = GLTS3M * 1 - positif(INDTEFF) + TGLTS3M * positif(INDTEFF)


TEGLTS4M = GLTS4M * 1 - positif(INDTEFF) + TGLTS4M * positif(INDTEFF)


TEGLTSREMPVM = GLTSREMPVM * 1 - positif(INDTEFF) + TGLTSREMPVM * positif(INDTEFF)


TEGLTSREMPCM = GLTSREMPCM * 1 - positif(INDTEFF) + TGLTSREMPCM * positif(INDTEFF)


TEGLTSREMP1M = GLTSREMP1M * 1 - positif(INDTEFF) + TGLTSREMP1M * positif(INDTEFF)


TEGLTSREMP2M = GLTSREMP2M * 1 - positif(INDTEFF) + TGLTSREMP2M * positif(INDTEFF)


TEGLTSREMP3M = GLTSREMP3M * 1 - positif(INDTEFF) + TGLTSREMP3M * positif(INDTEFF)


TEGLTSREMP4M = GLTSREMP4M * 1 - positif(INDTEFF) + TGLTSREMP4M * positif(INDTEFF)


TEGLPRRVM = GLPRRVM * 1 - positif(INDTEFF) + TGLPRRVM * positif(INDTEFF)


TEGLPRRCM = GLPRRCM * 1 - positif(INDTEFF) + TGLPRRCM * positif(INDTEFF)


TEGLPRR1M = GLPRR1M * 1 - positif(INDTEFF) + TGLPRR1M * positif(INDTEFF)


TEGLPRR2M = GLPRR2M * 1 - positif(INDTEFF) + TGLPRR2M * positif(INDTEFF)


TEGLPRR3M = GLPRR3M * 1 - positif(INDTEFF) + TGLPRR3M * positif(INDTEFF)


TEGLPRR4M = GLPRR4M * 1 - positif(INDTEFF) + TGLPRR4M * positif(INDTEFF)


TEGLPRRZVM = GLPRRZVM * 1 - positif(INDTEFF) + TGLPRRZVM * positif(INDTEFF)


TEGLPRRZCM = GLPRRZCM * 1 - positif(INDTEFF) + TGLPRRZCM * positif(INDTEFF)


TEGLPRRZ1M = GLPRRZ1M * 1 - positif(INDTEFF) + TGLPRRZ1M * positif(INDTEFF)


TEGLPRRZ2M = GLPRRZ2M * 1 - positif(INDTEFF) + TGLPRRZ2M * positif(INDTEFF)


TEGLPRRZ3M = GLPRRZ3M * 1 - positif(INDTEFF) + TGLPRRZ3M * positif(INDTEFF)


TEGLPRRZ4M = GLPRRZ4M * 1 - positif(INDTEFF) + TGLPRRZ4M * positif(INDTEFF)


TEGLRVOM = GLRVOM * 1 - positif(INDTEFF) + TGLRVOM * positif(INDTEFF)


TEGLRVO5M = GLRVO5M * 1 - positif(INDTEFF) + TGLRVO5M * positif(INDTEFF)


TEGLRVO6M = GLRVO6M * 1 - positif(INDTEFF) + TGLRVO6M * positif(INDTEFF)


TEGLRVO7M = GLRVO7M * 1 - positif(INDTEFF) + TGLRVO7M * positif(INDTEFF)


TEGLRCMDCM = GLRCMDCM * 1 - positif(INDTEFF) + TGLRCMDCM * positif(INDTEFF)


TEGLRCMFUM = GLRCMFUM * 1 - positif(INDTEFF) + TGLRCMFUM * positif(INDTEFF)


TEGLRCMCHM = GLRCMCHM * 1 - positif(INDTEFF) + TGLRCMCHM * positif(INDTEFF)


TEGLRCMGOM = GLRCMGOM * 1 - positif(INDTEFF) + TGLRCMGOM * positif(INDTEFF)


TEGLRCMTRM = GLRCMTRM * 1 - positif(INDTEFF) + TGLRCMTRM * positif(INDTEFF)


TEGLRCMTSM = GLRCMTSM * 1 - positif(INDTEFF) + TGLRCMTSM * positif(INDTEFF)


TEGLRF1M = GLRF1M * 1 - positif(INDTEFF) + TGLRF1M * positif(INDTEFF)


TEGLRF2M = GLRF2M * 1 - positif(INDTEFF) + TGLRF2M * positif(INDTEFF)


TEGLTOTM = TEGL1M + TEGL2M + TEGL3M + TEGL4M


TEGLFTOTM = TEGLFVM + TEGLFCM + TEGLF1M + TEGLF2M + TEGLF3M + TEGLF4M


TEGLPALIMTOTM = TEGLPALIMVM + TEGLPALIMCM + TEGLPALIM1M + TEGLPALIM2M + TEGLPALIM3M + TEGLPALIM4M


TEGLTSTOTM = TEGLTSVM + TEGLTSCM + TEGLTS1M + TEGLTS2M + TEGLTS3M + TEGLTS4M


TEGLTSREMPTOTM = TEGLTSREMPVM + TEGLTSREMPCM + TEGLTSREMP1M + TEGLTSREMP2M + TEGLTSREMP3M + TEGLTSREMP4M


TEGLPRRTOTM = TEGLPRRVM + TEGLPRRCM + TEGLPRR1M + TEGLPRR2M + TEGLPRR3M + TEGLPRR4M


TEGLPRRZTOTM = TEGLPRRZVM + TEGLPRRZCM + TEGLPRRZ1M + TEGLPRRZ2M + TEGLPRRZ3M + TEGLPRRZ4M


TEGLRVOTOTM = TEGLRVOM + TEGLRVO5M + TEGLRVO6M + TEGLRVO7M


TEGLRCMTOTM = TEGLRCMDCM + TEGLRCMFUM + TEGLRCMCHM + TEGLRCMGOM + TEGLRCMTRM + TEGLRCMTSM


TEGLRFTOTM = TEGLRF1M + TEGLRF2M

RPQRWB = inf(GLRWB / CODNWB) + 0


RPQRWA = inf(GLRWA / CODNWA) + 0


RPQRVG = inf(GLRVG / CODNVG) + 0


RPQ1 = inf(GL1 / DIVGL1) + 0


RPQ2 = inf(GL2 / DIVGL2) + 0


RPQ3 = inf(GL3 / DIVGL3) + 0


RPQ4 = inf(GL4 / DIVGL4) + 0


RPQ4V = arr(GL4V / DIVGL4) + 0


RPQ4C = arr(GL4C / DIVGL4) + 0


RPQ4RAJV = arr(GL4RAJV / DIVGL4) + 0


RPQ4RBJC = arr(GL4RBJC / DIVGL4) + 0


RPQ4VC = arr(GL4VC / DIVGL4) + 0


RPQ4TVC = arr(GL4TVC / DIVGL4) + 0


RPQRF1 = inf(GLRF1 / FONCINB)


RPQRF2 = inf(GLRF2 / REAMORNB)


RPQRCMDC = inf(GLRCMDC / REVACTNB)


RPQRCMFU = inf(GLRCMFU / REVPEANB)


RPQRCMCH = inf(GLRCMCH / PROVIENB)


RPQRCMTS = inf(GLRCMTS / DISQUONB)


RPQRCMGO = inf(GLRCMGO / RESTUCNB)


RPQRCMTR = inf(GLRCMTR / INTERENB)


RPQPRRZV = inf(GLPRRZV / CODNAZ)


RPQPRRZC = inf(GLPRRZC / CODNBZ)


RPQPRRZ1 = inf(GLPRRZ1 / CODNCZ)


RPQPRRZ2 = inf(GLPRRZ2 / CODNDZ)


RPQPRRZ3 = inf(GLPRRZ3 / CODNEZ)


RPQPRRZ4 = inf(GLPRRZ4 / CODNFZ)


RPQRVO = inf(GLRVO / RENTAXNB)


RPQRVO5 = inf(GLRVO5 / RENTAXNB5)


RPQRVO6 = inf(GLRVO6 / RENTAXNB6)


RPQRVO7 = inf(GLRVO7 / RENTAXNB7)


def RPQTS(i):
    if i in ('V', 'C'):
        return inf(GLTS(i) / CARTSNBA(i))
    elif i in interval(1, 4):
        return inf(GLTS(i) / CARTSNBAP(i))
    else:
        raise NotImplementedError()


def RPQTSREMP(i):
    if i in ('V', 'C'):
        return inf(GLTSREMP(i) / REMPLANB(i))
    elif i in interval(1, 4):
        return inf(GLTSREMP(i) / REMPLANBP(i))
    else:
        raise NotImplementedError()


def RPQPALIM(x):
    if x in ('V', 'C'):
        return inf(GLPALIM(x) / PENSALNB(x))
    elif x in interval(1, 4):
        return inf(GLPALIM(x) / PENSALNBP(x))
    else:
        raise NotImplementedError()


def RPQPRR(i):
    if i in ('V', 'C'):
        return inf(GLPRR(i) / CARPENBA(i))
    elif i in interval(1, 4):
        return inf(GLPRR(i) / CARPENBAP(i))
    else:
        raise NotImplementedError()


def RPQF(x):
    if x in ('V', 'C') or x in interval(1, 4):
        return inf(GLF(x) / COTF(x))
    else:
        raise NotImplementedError()

TRPQRWB = inf(TGLRWB / CODNWB) + 0


TRPQRWA = inf(TGLRWA / CODNWA) + 0


TRPQRVG = inf(TGLRVG / CODNVG) + 0


TRPQ1 = inf(TGL1 / DIVGL1) + 0


TRPQ2 = inf(TGL2 / DIVGL2) + 0


TRPQ3 = inf(TGL3 / DIVGL3) + 0


TRPQ4V = arr(TGL4V / DIVGL4) + 0


TRPQ4C = arr(TGL4C / DIVGL4) + 0


TRPQ4RAJV = arr(TGL4RAJV / DIVGL4) + 0


TRPQ4RBJC = arr(TGL4RBJC / DIVGL4) + 0


TRPQ4VC = arr(TGL4VC / DIVGL4) + 0


TRPQ4TVC = arr(TGL4TVC / DIVGL4) + 0


TRPQ4 = inf(TGL4 / DIVGL4) + 0


TRPQRF1 = inf(TGLRF1 / FONCINB)


TRPQRF2 = inf(TGLRF2 / REAMORNB)


TRPQRCMDC = inf(TGLRCMDC / REVACTNB)


TRPQRCMFU = inf(TGLRCMFU / REVPEANB)


TRPQRCMCH = inf(TGLRCMCH / PROVIENB)


TRPQRCMTS = inf(TGLRCMTS / DISQUONB)


TRPQRCMGO = inf(TGLRCMGO / RESTUCNB)


TRPQRCMTR = inf(TGLRCMTR / INTERENB)


TRPQPRRZV = inf(TGLPRRZV / CODNAZ)


TRPQPRRZC = inf(TGLPRRZC / CODNBZ)


TRPQPRRZ1 = inf(TGLPRRZ1 / CODNCZ)


TRPQPRRZ2 = inf(TGLPRRZ2 / CODNDZ)


TRPQPRRZ3 = inf(TGLPRRZ3 / CODNEZ)


TRPQPRRZ4 = inf(TGLPRRZ4 / CODNFZ)


TRPQRVO = inf(TGLRVO / RENTAXNB)


TRPQRVO5 = inf(TGLRVO5 / RENTAXNB5)


TRPQRVO6 = inf(TGLRVO6 / RENTAXNB6)


TRPQRVO7 = inf(TGLRVO7 / RENTAXNB7)


TERPQRWB = RPQRWB * 1 - positif(INDTEFF) + TRPQRWB * positif(INDTEFF)


TERPQRWA = RPQRWA * 1 - positif(INDTEFF) + TRPQRWA * positif(INDTEFF)


TERPQRVG = RPQRVG * 1 - positif(INDTEFF) + TRPQRVG * positif(INDTEFF)


TERPQ1 = RPQ1 * 1 - positif(INDTEFF) + TRPQ1 * positif(INDTEFF)


TERPQ2 = RPQ2 * 1 - positif(INDTEFF) + TRPQ2 * positif(INDTEFF)


TERPQ3 = RPQ3 * 1 - positif(INDTEFF) + TRPQ3 * positif(INDTEFF)


TERPQ4V = RPQ4V * 1 - positif(INDTEFF) + TRPQ4V * positif(INDTEFF)


TERPQ4C = RPQ4C * 1 - positif(INDTEFF) + TRPQ4C * positif(INDTEFF)


TERPQ4RAJV = RPQ4RAJV * 1 - positif(INDTEFF) + TRPQ4RAJV * positif(INDTEFF)


TERPQ4RBJC = RPQ4RBJC * 1 - positif(INDTEFF) + TRPQ4RBJC * positif(INDTEFF)


TERPQ4VC = RPQ4VC * 1 - positif(INDTEFF) + TRPQ4VC * positif(INDTEFF)


TERPQ4TVC = RPQ4TVC * 1 - positif(INDTEFF) + TRPQ4TVC * positif(INDTEFF)


TERPQ4 = RPQ4 * 1 - positif(INDTEFF) + TRPQ4 * positif(INDTEFF)


TERPQFV = RPQFV * 1 - positif(INDTEFF) + TRPQFV * positif(INDTEFF)


TERPQFC = RPQFC * 1 - positif(INDTEFF) + TRPQFC * positif(INDTEFF)


TERPQF1 = RPQF1 * 1 - positif(INDTEFF) + TRPQF1 * positif(INDTEFF)


TERPQF2 = RPQF2 * 1 - positif(INDTEFF) + TRPQF2 * positif(INDTEFF)


TERPQF3 = RPQF3 * 1 - positif(INDTEFF) + TRPQF3 * positif(INDTEFF)


TERPQF4 = RPQF4 * 1 - positif(INDTEFF) + TRPQF4 * positif(INDTEFF)


TERPQPALIMV = RPQPALIMV * 1 - positif(INDTEFF) + TRPQPALIMV * positif(INDTEFF)


TERPQPALIMC = RPQPALIMC * 1 - positif(INDTEFF) + TRPQPALIMC * positif(INDTEFF)


TERPQPALIM1 = RPQPALIM1 * 1 - positif(INDTEFF) + TRPQPALIM1 * positif(INDTEFF)


TERPQPALIM2 = RPQPALIM2 * 1 - positif(INDTEFF) + TRPQPALIM2 * positif(INDTEFF)


TERPQPALIM3 = RPQPALIM3 * 1 - positif(INDTEFF) + TRPQPALIM3 * positif(INDTEFF)


TERPQPALIM4 = RPQPALIM4 * 1 - positif(INDTEFF) + TRPQPALIM4 * positif(INDTEFF)


TERPQRF1 = RPQRF1 * 1 - positif(INDTEFF) + TRPQRF1 * positif(INDTEFF)


TERPQRF2 = RPQRF2 * 1 - positif(INDTEFF) + TRPQRF2 * positif(INDTEFF)


TERPQRCMDC = RPQRCMDC * 1 - positif(INDTEFF) + TRPQRCMDC * positif(INDTEFF)


TERPQRCMFU = RPQRCMFU * 1 - positif(INDTEFF) + TRPQRCMFU * positif(INDTEFF)


TERPQRCMCH = RPQRCMCH * 1 - positif(INDTEFF) + TRPQRCMCH * positif(INDTEFF)


TERPQRCMTS = RPQRCMTS * 1 - positif(INDTEFF) + TRPQRCMTS * positif(INDTEFF)


TERPQRCMGO = RPQRCMGO * 1 - positif(INDTEFF) + TRPQRCMGO * positif(INDTEFF)


TERPQRCMTR = RPQRCMTR * 1 - positif(INDTEFF) + TRPQRCMTR * positif(INDTEFF)


TERPQPRRV = RPQPRRV * 1 - positif(INDTEFF) + TRPQPRRV * positif(INDTEFF)


TERPQPRRC = RPQPRRC * 1 - positif(INDTEFF) + TRPQPRRC * positif(INDTEFF)


TERPQPRR1 = RPQPRR1 * 1 - positif(INDTEFF) + TRPQPRR1 * positif(INDTEFF)


TERPQPRR2 = RPQPRR2 * 1 - positif(INDTEFF) + TRPQPRR2 * positif(INDTEFF)


TERPQPRR3 = RPQPRR3 * 1 - positif(INDTEFF) + TRPQPRR3 * positif(INDTEFF)


TERPQPRR4 = RPQPRR4 * 1 - positif(INDTEFF) + TRPQPRR4 * positif(INDTEFF)


TERPQPRRZV = RPQPRRZV * 1 - positif(INDTEFF) + TRPQPRRZV * positif(INDTEFF)


TERPQPRRZC = RPQPRRZC * 1 - positif(INDTEFF) + TRPQPRRZC * positif(INDTEFF)


TERPQPRRZ1 = RPQPRRZ1 * 1 - positif(INDTEFF) + TRPQPRRZ1 * positif(INDTEFF)


TERPQPRRZ2 = RPQPRRZ2 * 1 - positif(INDTEFF) + TRPQPRRZ2 * positif(INDTEFF)


TERPQPRRZ3 = RPQPRRZ3 * 1 - positif(INDTEFF) + TRPQPRRZ3 * positif(INDTEFF)


TERPQPRRZ4 = RPQPRRZ4 * 1 - positif(INDTEFF) + TRPQPRRZ4 * positif(INDTEFF)


TERPQRVO = RPQRVO * 1 - positif(INDTEFF) + TRPQRVO * positif(INDTEFF)


TERPQRVO5 = RPQRVO5 * 1 - positif(INDTEFF) + TRPQRVO5 * positif(INDTEFF)


TERPQRVO6 = RPQRVO6 * 1 - positif(INDTEFF) + TRPQRVO6 * positif(INDTEFF)


TERPQRVO7 = RPQRVO7 * 1 - positif(INDTEFF) + TRPQRVO7 * positif(INDTEFF)


TERPQTSV = RPQTSV * 1 - positif(INDTEFF) + TRPQTSV * positif(INDTEFF)


TERPQTSC = RPQTSC * 1 - positif(INDTEFF) + TRPQTSC * positif(INDTEFF)


TERPQTS1 = RPQTS1 * 1 - positif(INDTEFF) + TRPQTS1 * positif(INDTEFF)


TERPQTS2 = RPQTS2 * 1 - positif(INDTEFF) + TRPQTS2 * positif(INDTEFF)


TERPQTS3 = RPQTS3 * 1 - positif(INDTEFF) + TRPQTS3 * positif(INDTEFF)


TERPQTS4 = RPQTS4 * 1 - positif(INDTEFF) + TRPQTS4 * positif(INDTEFF)


TERPQTSREMPV = RPQTSREMPV * 1 - positif(INDTEFF) + TRPQTSREMPV * positif(INDTEFF)


TERPQTSREMPC = RPQTSREMPC * 1 - positif(INDTEFF) + TRPQTSREMPC * positif(INDTEFF)


TERPQTSREMP1 = RPQTSREMP1 * 1 - positif(INDTEFF) + TRPQTSREMP1 * positif(INDTEFF)


TERPQTSREMP2 = RPQTSREMP2 * 1 - positif(INDTEFF) + TRPQTSREMP2 * positif(INDTEFF)


TERPQTSREMP3 = RPQTSREMP3 * 1 - positif(INDTEFF) + TRPQTSREMP3 * positif(INDTEFF)


TERPQTSREMP4 = RPQTSREMP4 * 1 - positif(INDTEFF) + TRPQTSREMP4 * positif(INDTEFF)


def TRPQF(x):
    if x in ('V', 'C') or x in interval(1, 4):
        return inf(TGLF(x) / COTF(x))
    else:
        raise NotImplementedError()


def TRPQTS(i):
    if i in ('V', 'C'):
        return inf(TGLTS(i) / CARTSNBA(i))
    elif i in interval(1, 4):
        return inf(TGLTS(i) / CARTSNBAP(i))
    else:
        raise NotImplementedError()


def TRPQPRR(i):
    if i in ('V', 'C'):
        return inf(TGLPRR(i) / CARPENBA(i))
    elif i in interval(1, 4):
        return inf(TGLPRR(i) / CARPENBAP(i))
    else:
        raise NotImplementedError()


def TRPQPALIM(x):
    if x in ('V', 'C'):
        return inf(TGLPALIM(x) / PENSALNB(x))
    elif x in interval(1, 4):
        return inf(TGLPALIM(x) / PENSALNBP(x))
    else:
        raise NotImplementedError()


def TRPQTSREMP(i):
    if i in ('V', 'C'):
        return inf(TGLTSREMP(i) / REMPLANB(i))
    elif i in interval(1, 4):
        return inf(TGLTSREMP(i) / REMPLANBP(i))
    else:
        raise NotImplementedError()

RPQRWBM = inf(GLRWBM / CODNWB)


RPQRWAM = inf(GLRWAM / CODNWA)


RPQRVGM = inf(GLRVGM / CODNVG)


RPQ4VM = arr(GL4VM / DIVGL4)


RPQ4CM = arr(GL4CM / DIVGL4)


RPQ4VCM = arr(GL4VCM / DIVGL4)


RPQ4TVCM = arr(GL4TVCM / DIVGL4)


RPQRF1M = inf(GLRF1M / FONCINB)


RPQRF2M = inf(GLRF2M / REAMORNB)


RPQRCMDCM = inf(GLRCMDCM / REVACTNB)


RPQRCMFUM = inf(GLRCMFUM / REVPEANB)


RPQRCMCHM = inf(GLRCMCHM / PROVIENB)


RPQRCMTSM = inf(GLRCMTSM / DISQUONB)


RPQRCMGOM = inf(GLRCMGOM / RESTUCNB)


RPQRCMTRM = inf(GLRCMTRM / INTERENB)


RPQPRRZVM = inf(GLPRRZVM / CODNAZ)


RPQPRRZCM = inf(GLPRRZCM / CODNBZ)


RPQPRRZ1M = inf(GLPRRZ1M / CODNCZ)


RPQPRRZ2M = inf(GLPRRZ2M / CODNDZ)


RPQPRRZ3M = inf(GLPRRZ3M / CODNEZ)


RPQPRRZ4M = inf(GLPRRZ4M / CODNFZ)


RPQRVOM = inf(GLRVOM / RENTAXNB)


RPQRVO5M = inf(GLRVO5M / RENTAXNB5)


RPQRVO6M = inf(GLRVO6M / RENTAXNB6)


RPQRVO7M = inf(GLRVO7M / RENTAXNB7)


def RPQPALIMM(i):
    if i in ('V', 'C'):
        return inf(GLPALIM(i)M / PENSALNB(i))
    elif i in interval(1, 4):
        return inf(GLPALIM(i)M / PENSALNBP(i))
    else:
        raise NotImplementedError()


def RPQTSM(i):
    if i in ('V', 'C'):
        return inf(GLTS(i)M / CARTSNBA(i))
    elif i in interval(1, 4):
        return inf(GLTS(i)M / CARTSNBAP(i))
    else:
        raise NotImplementedError()


def RPQFM(i):
    if i in ('V', 'C') or i in interval(1, 4):
        return inf(GLF(i)M / COTF(i))
    else:
        raise NotImplementedError()


def RPQPRRM(i):
    if i in ('V', 'C'):
        return inf(GLPRR(i)M / CARPENBA(i))
    elif i in interval(1, 4):
        return inf(GLPRR(i)M / CARPENBAP(i))
    else:
        raise NotImplementedError()


def RPQM(i):
    if i in interval(1, 4):
        return inf(GL(i)M / DIVGL(i))
    else:
        raise NotImplementedError()


def RPQTSREMPM(i):
    if i in ('V', 'C'):
        return inf(GLTSREMP(i)M / REMPLANB(i))
    elif i in interval(1, 4):
        return inf(GLTSREMP(i)M / REMPLANBP(i))
    else:
        raise NotImplementedError()

TRPQRWBM = inf(TGLRWBM / CODNWB)


TRPQRWAM = inf(TGLRWAM / CODNWA)


TRPQRVGM = inf(TGLRVGM / CODNVG)


TRPQ4VM = arr(TGL4VM / DIVGL4) + 0


TRPQ4CM = arr(TGL4CM / DIVGL4) + 0


TRPQ4VCM = arr(TGL4VCM / DIVGL4) + 0


TRPQ4TVCM = arr(TGL4TVCM / DIVGL4) + 0


TRPQRF1M = inf(TGLRF1M / FONCINB)


TRPQRF2M = inf(TGLRF2M / REAMORNB)


TRPQRCMDCM = inf(TGLRCMDCM / REVACTNB)


TRPQRCMFUM = inf(TGLRCMFUM / REVPEANB)


TRPQRCMCHM = inf(TGLRCMCHM / PROVIENB)


TRPQRCMTSM = inf(TGLRCMTSM / DISQUONB)


TRPQRCMGOM = inf(TGLRCMGOM / RESTUCNB)


TRPQRCMTRM = inf(TGLRCMTRM / INTERENB)


TRPQPRRZVM = inf(TGLPRRZVM / CODNAZ)


TRPQPRRZCM = inf(TGLPRRZCM / CODNBZ)


TRPQPRRZ1M = inf(TGLPRRZ1M / CODNCZ)


TRPQPRRZ2M = inf(TGLPRRZ2M / CODNDZ)


TRPQPRRZ3M = inf(TGLPRRZ3M / CODNEZ)


TRPQPRRZ4M = inf(TGLPRRZ4M / CODNFZ)


TRPQRVOM = inf(TGLRVOM / RENTAXNB)


TRPQRVO6M = inf(TGLRVO6M / RENTAXNB6)


TRPQRVO7M = inf(TGLRVO7M / RENTAXNB7)


TERPQRWBM = RPQRWBM * 1 - positif(INDTEFF) + TRPQRWBM * positif(INDTEFF)


TERPQRWAM = RPQRWAM * 1 - positif(INDTEFF) + TRPQRWAM * positif(INDTEFF)


TERPQRVGM = RPQRVGM * 1 - positif(INDTEFF) + TRPQRVGM * positif(INDTEFF)


TERPQ1M = RPQ1M * 1 - positif(INDTEFF) + TRPQ1M * positif(INDTEFF)


TERPQ2M = RPQ2M * 1 - positif(INDTEFF) + TRPQ2M * positif(INDTEFF)


TERPQ3M = RPQ3M * 1 - positif(INDTEFF) + TRPQ3M * positif(INDTEFF)


TERPQ4M = RPQ4M * 1 - positif(INDTEFF) + TRPQ4M * positif(INDTEFF)


TERPQ4VM = RPQ4VM * 1 - positif(INDTEFF) + TRPQ4VM * positif(INDTEFF)


TERPQ4CM = RPQ4CM * 1 - positif(INDTEFF) + TRPQ4CM * positif(INDTEFF)


TERPQ4VCM = RPQ4VCM * 1 - positif(INDTEFF) + TRPQ4VCM * positif(INDTEFF)


TERPQ4TVCM = RPQ4TVCM * 1 - positif(INDTEFF) + TRPQ4TVCM * positif(INDTEFF)


TERPQFVM = RPQFVM * 1 - positif(INDTEFF) + TRPQFVM * positif(INDTEFF)


TERPQFCM = RPQFCM * 1 - positif(INDTEFF) + TRPQFCM * positif(INDTEFF)


TERPQF1M = RPQF1M * 1 - positif(INDTEFF) + TRPQF1M * positif(INDTEFF)


TERPQF2M = RPQF2M * 1 - positif(INDTEFF) + TRPQF2M * positif(INDTEFF)


TERPQF3M = RPQF3M * 1 - positif(INDTEFF) + TRPQF3M * positif(INDTEFF)


TERPQF4M = RPQF4M * 1 - positif(INDTEFF) + TRPQF4M * positif(INDTEFF)


TERPQPALIMVM = RPQPALIMVM * 1 - positif(INDTEFF) + TRPQPALIMVM * positif(INDTEFF)


TERPQPALIMCM = RPQPALIMCM * 1 - positif(INDTEFF) + TRPQPALIMCM * positif(INDTEFF)


TERPQPALIM1M = RPQPALIM1M * 1 - positif(INDTEFF) + TRPQPALIM1M * positif(INDTEFF)


TERPQPALIM2M = RPQPALIM2M * 1 - positif(INDTEFF) + TRPQPALIM2M * positif(INDTEFF)


TERPQPALIM3M = RPQPALIM3M * 1 - positif(INDTEFF) + TRPQPALIM3M * positif(INDTEFF)


TERPQPALIM4M = RPQPALIM4M * 1 - positif(INDTEFF) + TRPQPALIM4M * positif(INDTEFF)


TERPQRF1M = RPQRF1M * 1 - positif(INDTEFF) + TRPQRF1M * positif(INDTEFF)


TERPQRF2M = RPQRF2M * 1 - positif(INDTEFF) + TRPQRF2M * positif(INDTEFF)


TERPQRCMDCM = RPQRCMDCM * 1 - positif(INDTEFF) + TRPQRCMDCM * positif(INDTEFF)


TERPQRCMFUM = RPQRCMFUM * 1 - positif(INDTEFF) + TRPQRCMFUM * positif(INDTEFF)


TERPQRCMCHM = RPQRCMCHM * 1 - positif(INDTEFF) + TRPQRCMCHM * positif(INDTEFF)


TERPQRCMTSM = RPQRCMTSM * 1 - positif(INDTEFF) + TRPQRCMTSM * positif(INDTEFF)


TERPQRCMGOM = RPQRCMGOM * 1 - positif(INDTEFF) + TRPQRCMGOM * positif(INDTEFF)


TERPQRCMTRM = RPQRCMTRM * 1 - positif(INDTEFF) + TRPQRCMTRM * positif(INDTEFF)


TERPQPRRVM = RPQPRRVM * 1 - positif(INDTEFF) + TRPQPRRVM * positif(INDTEFF)


TERPQPRRCM = RPQPRRCM * 1 - positif(INDTEFF) + TRPQPRRCM * positif(INDTEFF)


TERPQPRR1M = RPQPRR1M * 1 - positif(INDTEFF) + TRPQPRR1M * positif(INDTEFF)


TERPQPRR2M = RPQPRR2M * 1 - positif(INDTEFF) + TRPQPRR2M * positif(INDTEFF)


TERPQPRR3M = RPQPRR3M * 1 - positif(INDTEFF) + TRPQPRR3M * positif(INDTEFF)


TERPQPRR4M = RPQPRR4M * 1 - positif(INDTEFF) + TRPQPRR4M * positif(INDTEFF)


TERPQPRRZVM = RPQPRRZVM * 1 - positif(INDTEFF) + TRPQPRRZVM * positif(INDTEFF)


TERPQPRRZCM = RPQPRRZCM * 1 - positif(INDTEFF) + TRPQPRRZCM * positif(INDTEFF)


TERPQPRRZ1M = RPQPRRZ1M * 1 - positif(INDTEFF) + TRPQPRRZ1M * positif(INDTEFF)


TERPQPRRZ2M = RPQPRRZ2M * 1 - positif(INDTEFF) + TRPQPRRZ2M * positif(INDTEFF)


TERPQPRRZ3M = RPQPRRZ3M * 1 - positif(INDTEFF) + TRPQPRRZ3M * positif(INDTEFF)


TERPQPRRZ4M = RPQPRRZ4M * 1 - positif(INDTEFF) + TRPQPRRZ4M * positif(INDTEFF)


TERPQRVOM = RPQRVOM * 1 - positif(INDTEFF) + TRPQRVOM * positif(INDTEFF)


TERPQRVO5M = RPQRVO5M * 1 - positif(INDTEFF) + TRPQRVO5M * positif(INDTEFF)


TERPQRVO6M = RPQRVO6M * 1 - positif(INDTEFF) + TRPQRVO6M * positif(INDTEFF)


TERPQRVO7M = RPQRVO7M * 1 - positif(INDTEFF) + TRPQRVO7M * positif(INDTEFF)


TERPQTSVM = RPQTSVM * 1 - positif(INDTEFF) + TRPQTSVM * positif(INDTEFF)


TERPQTSCM = RPQTSCM * 1 - positif(INDTEFF) + TRPQTSCM * positif(INDTEFF)


TERPQTS1M = RPQTS1M * 1 - positif(INDTEFF) + TRPQTS1M * positif(INDTEFF)


TERPQTS2M = RPQTS2M * 1 - positif(INDTEFF) + TRPQTS2M * positif(INDTEFF)


TERPQTS3M = RPQTS3M * 1 - positif(INDTEFF) + TRPQTS3M * positif(INDTEFF)


TERPQTS4M = RPQTS4M * 1 - positif(INDTEFF) + TRPQTS4M * positif(INDTEFF)


TERPQTSREMPVM = RPQTSREMPVM * 1 - positif(INDTEFF) + TRPQTSREMPVM * positif(INDTEFF)


TERPQTSREMPCM = RPQTSREMPCM * 1 - positif(INDTEFF) + TRPQTSREMPCM * positif(INDTEFF)


TERPQTSREMP1M = RPQTSREMP1M * 1 - positif(INDTEFF) + TRPQTSREMP1M * positif(INDTEFF)


TERPQTSREMP2M = RPQTSREMP2M * 1 - positif(INDTEFF) + TRPQTSREMP2M * positif(INDTEFF)


TERPQTSREMP3M = RPQTSREMP3M * 1 - positif(INDTEFF) + TRPQTSREMP3M * positif(INDTEFF)


TERPQTSREMP4M = RPQTSREMP4M * 1 - positif(INDTEFF) + TRPQTSREMP4M * positif(INDTEFF)


def TRPQTSREMPM(i):
    if i in ('V', 'C'):
        return inf(TGLTSREMP(i)M / REMPLANB(i))
    elif i in interval(1, 4):
        return inf(TGLTSREMP(i)M / REMPLANBP(i))
    else:
        raise NotImplementedError()


def TRPQPALIMM(i):
    if i in ('V', 'C'):
        return inf(TGLPALIM(i)M / PENSALNB(i))
    elif i in interval(1, 4):
        return inf(TGLPALIM(i)M / PENSALNBP(i))
    else:
        raise NotImplementedError()


def TRPQPRRM(i):
    if i in ('V', 'C'):
        return inf(TGLPRR(i)M / CARPENBA(i))
    elif i in interval(1, 4):
        return inf(TGLPRR(i)M / CARPENBAP(i))
    else:
        raise NotImplementedError()


def TRPQTSM(i):
    if i in ('V', 'C'):
        return inf(TGLTS(i)M / CARTSNBA(i))
    elif i in interval(1, 4):
        return inf(TGLTS(i)M / CARTSNBAP(i))
    else:
        raise NotImplementedError()


def TRPQFM(i):
    if i in ('V', 'C') or i in interval(1, 4):
        return inf(TGLF(i)M / COTF(i))
    else:
        raise NotImplementedError()


def TRPQM(i):
    if i in interval(1, 4):
        return inf(TGL(i)M / DIVGL(i))
    else:
        raise NotImplementedError()

def TGLN(x):
    if x in interval(1, 3):
        return TGLN(x)V + TGLN(x)C
    else:
        raise NotImplementedError()


def GLN(x):
    if x in interval(1, 3):
        return GLN(x)V + GLN(x)C
    else:
        raise NotImplementedError()

RI2 = RI1 + DPAE

LIMDPAE = LIM_PENSALENF

DPAE = somme((min(CHENF(a), LIMDPAE) for a in interval(1, 4))) * 1 - V_CNR

RI1 = max(RNG - 1 - min(1, IPVLOC) * ABTPA - ABTMA, 0)


RI1RFR = max(RNGRFR - 1 - min(1, IPVLOC) * ABTPA - ABTMA, 0)


RI1RFRHR = max(RNGRFRHR - 1 - min(1, IPVLOC) * ABTPA - ABTMA, 0)

RNG = null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * IPVLOC + 1 - null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * RBL


RNGRFR = null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * IPVLOC + 1 - null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * RBLRFR


RNGRFRHR = null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * IPVLOC + 1 - null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * RBLRFRHR

REVQUO = max(0, TOTALQUO - SDD - SDC - SDV - SDM)


REVQUOQHT = max(0, TOTALQUOHT - SDD - SDC - SDV - SDM)


TONEQUOHT = max(0, TOTALQUOHT - SDD + SDC + SDV + SDM * 1 - positif(VARIPTEFP * positif(ART1731BIS) + IPTEFP * 1 - ART1731BIS + VARIPTEFN * positif(ART1731BIS) + IPTEFN * 1 - ART1731BIS + TEFFREVTOT * INDTEFF) - VARIPTEFN * positif(ART1731BIS) + IPTEFN * 1 - ART1731BIS)


TONEQUO = max(0, TOTALQUO - SDD + SDC + SDV + SDM * 1 - positif(VARIPTEFP * positif(ART1731BIS) + IPTEFP * 1 - ART1731BIS + VARIPTEFN * positif(ART1731BIS) + IPTEFN * 1 - ART1731BIS + TEFFREVTOT * INDTEFF) - VARIPTEFN * positif(ART1731BIS) + IPTEFN * 1 - ART1731BIS)


TONEQUOMHT = max(0, TOTALQUOHT - VARDMOND * positif(ART1731BIS) + DMOND * 1 - ART1731BIS)


TONEQUOM = max(0, TOTALQUO - VARDMOND * positif(ART1731BIS) + DMOND * 1 - ART1731BIS)

NAB = min(max(LIM_ABTRNGDBL + 1 - RNG + TOTALQUO - SDD - SDC, 0), 1) + min(max(LIM_ABTRNGSIMP + 1 - RNG + TOTALQUO - SDD - SDC, 0), 1)


ABSPRNG = RNG + TOTALQUO - SDD - SDC


ABTPA = NDA * NAB * ABAT_UNVIEUX * 1 - V_CNR

NDA = min(max(AGV + 1 - LIM_AGE_ABVIEUX, V_0AP), 1) + min(max(AGC * BOOL_0AM + 1 - LIM_AGE_ABVIEUX, V_0AF * BOOL_0AM), 1)

AGV = V_ANREV - V_0DA * min(1, V_0DA)


AGC = V_ANREV - V_0DB * min(1, V_0DB)

ABTMA = V_0DN * ABAT_ENF_MARIES + arr(V_0DP * ABAT_ENF_MARIES / 2)

RBG2 = RBG - min(RBG, DDCSG)


RBG2RFR = RBGRFR - min(RBGRFR, DDCSG)


RBG2RFRHR = RBGRFRHR - min(RBGRFRHR, DDCSG)


RBL = RBG2 - min(RBG2, DPA + DFA + DEDIV + APERPV + APERPC + APERPP + NUREPAR) * 1 - V_CNR - min(RBG2, V_8ZT) * V_CR2 * 1 - positif(RE168 + TAX1649)


RBLRFR = RBG2RFR - min(RBG2RFR, DPA + DFA + DEDIV + APERPV + APERPC + APERPP + NUREPAR) * 1 - V_CNR - min(RBG2RFR, V_8ZT) * V_CR2 * 1 - positif(RE168 + TAX1649)


RBLRFRHR = RBG2RFRHR - min(RBG2RFRHR, DPA + DFA + DEDIV + APERPV + APERPC + APERPP + NUREPAR) * 1 - V_CNR - min(RBG2RFRHR, V_8ZT) * V_CR2 * 1 - positif(RE168 + TAX1649)

SDD = max(0, DAR - RG)

SDC1 = max(0, DDCSG + DPA + DFA + DEDIV - APERPV - APERPC - APERPP - max(0, RBG)) * 1 - V_CNR + max(0, V_8ZT - max(0, RBG)) * V_CR2

SDC = max(0, DDCSG + DPA + DFA + DEDIV + APERPV + APERPC + APERPP + NUREPAR - max(0, RBG)) * 1 - V_CNR + max(0, V_8ZT - max(0, RBG)) * V_CR2

SDV = max(0, ABTPA - RNG)


SDM = max(0, ABTMA - max(0, RNG - ABTPA))

SOFIRNG = RBL + TOTALQUO - SDD - SDC1

RBG = 1 - positif(RG + R1649 + PREREV - DAR) * min(0, RG + R1649 + PREREV - DAR + TOTALQUO) + positif(RG + R1649 + PREREV - DAR) * RG + R1649 + PREREV - DAR * 1 - positif(ART1731BIS) + 1 - positif(RG + R1649 + PREREV - DAR - DFANTIMPU) * min(0, RG + R1649 + PREREV - DAR - DFANTIMPU + TOTALQUO) + positif(RG + R1649 + PREREV - DAR - DFANTIMPU) * RG + R1649 + PREREV - DAR - DFANTIMPU * ART1731BIS


RBGRFR = 1 - positif(RGRFR + R1649 + PREREV - DAR) * min(0, RGRFR + R1649 + PREREV - DAR + TOTALQUO) + positif(RGRFR + R1649 + PREREV - DAR) * RGRFR + R1649 + PREREV - DAR * 1 - positif(ART1731BIS) + 1 - positif(RGRFR + R1649 + PREREV - DAR - DFANTIMPU) * min(0, RGRFR + R1649 + PREREV - DAR - DFANTIMPU + TOTALQUO) + positif(RGRFR + R1649 + PREREV - DAR - DFANTIMPU) * RGRFR + R1649 + PREREV - DAR - DFANTIMPU * positif(ART1731BIS)


RBGRFRHR = 1 - positif(RGRFRHR + R1649 + PREREV - DAR) * min(0, RGRFRHR + R1649 + PREREV - DAR + TOTALQUO) + positif(RGRFRHR + R1649 + PREREV - DAR) * RGRFRHR + R1649 + PREREV - DAR * 1 - positif(ART1731BIS) + 1 - positif(RGRFRHR + R1649 + PREREV - DAR - DFANTIMPU) * min(0, RGRFRHR + R1649 + PREREV - DAR - DFANTIMPU + TOTALQUO) + positif(RGRFRHR + R1649 + PREREV - DAR - DFANTIMPU) * RGRFRHR + R1649 + PREREV - DAR - DFANTIMPU * positif(ART1731BIS)

TOTPA = arr(PAAV * MAJREV) + PAAP


DPA = somme((min(NCHENF(i), LIMDPAE) + min(arr(CHENF(i) * MAJREV), LIMDPAE) for i in interval(1, 4))) + TOTPA * 1 - V_CNR * 1 - positif(RE168 + TAX1649)

RPREC = positif(CHRFAC) * max(1, CHNFAC) + null(CHRFAC) * max(0, CHNFAC)


DFA = min(CHRFAC, RPREC * LIM_FRACC) * 1 - V_CNR * 1 - positif(RE168 + TAX1649)

RG = 1 - positif(IPVLOC) * SHBA + max(BANOR, 0) + REB + min(BANOR, 0) * positif(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + positif(IPVLOC) * IPVLOC


RGRFR = 1 - positif(IPVLOC) * SHBARFR + max(BANOR, 0) + REB + min(BANOR, 0) * positif(SEUIL_IMPDEFBA + 1 - SHBARFR - REVTP - BA1 - REVQTOTQHT) + positif(IPVLOC) * IPVLOC


RGRFRHR = 1 - positif(IPVLOC) * SHBARFRHR + max(BANOR, 0) + REB + min(BANOR, 0) * positif(SEUIL_IMPDEFBA + 1 - SHBARFRHR - REVTP - BA1 - REVQTOTQHT) + positif(IPVLOC) * IPVLOC

TOTALQUO = 1 - positif(IPVLOC) * REVQTOT


TOTALQUOHT = 1 - positif(IPVLOC) * REVQTOTQHT

DAR = DEFAA5 + DEFAA4 + DEFAA3 + DEFAA2 + DEFAA1 + DEFAA0 * 1 - PREM8_11 * 1 - positif(IPVLOC)

PVBAR3VG = BPVRCM + PVTAXSB


PVBAR3SB = PVTAXSB + COD3UV + COD3VE


PVBAR3WB = PVIMPOS


PVBAR3VE = COD3VE + COD3UV


PVBAR = max(0, BPVRCM + COD3SG + COD3SL + ABDETPLUS + ABIMPPV + inf(CODRVG / CODNVG) - DPVRCM + COD3SH + COD3SM + ABDETMOINS + ABIMPMV)


PVBARPS = max(0, BPVRCM + COD3SG + COD3SL + ABDETPLUS + ABIMPPV + CODRVG - DPVRCM + COD3SH + COD3SM + ABDETMOINS + ABIMPMV) + PVTITRESOC


PVBARHR = max(0, BPVRCM + COD3SG + COD3SL + ABDETPLUS + ABIMPPV + CODRVG - DPVRCM + COD3SH + COD3SM + ABDETMOINS + ABIMPMV)


SHBA = ESFP + TSPR + RCM + BIN + BNN + PLOCNETF + NPLOCNETF + COD3UV + BPVRCM + PVTAXSB + PVIMPOS * null(1 - FLAG_EXIT) + COD3VE + PVIMPOS + PVSURSI * null(2 - FLAG_EXIT) + RRFI + 0 * 1 - V_INDTEO + RRFTEO + 0 * V_INDTEO * 1 - ART1731BIS + ESFP + TSPR + RCM + BIN + BNN + PLOCNETF + NPLOCNETF + COD3UV + BPVRCM + PVTAXSB + PVIMPOS * null(1 - FLAG_EXIT) + COD3VE + PVIMPOS + PVSURSI * null(2 - FLAG_EXIT) + RRFI + 0 * 1 - V_INDTEO + RRFTEO + 0 * V_INDTEO * ART1731BIS


SHBARFR = ESFP + TSPR + RCM + BIN + BNN + PLOCNETF + NPLOCNETF + PVBAR + RRFI + 0 * 1 - V_INDTEO + RRFTEO + 0 * V_INDTEO


SHBARFRHR = ESFP + TSPR + RCM + BIN + BNN + PLOCNETF + NPLOCNETF + PVBARHR + RRFI

REB = REPSOF
