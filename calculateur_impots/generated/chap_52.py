# -*- coding: utf-8 -*-
# flake8: noqa


# WARNING: This file is automatically generated by a script. No not modify it by hand!

# Original files are "chap-52.json" and "chap-52.m"


TAUX1 = TX_BAR1 * 1 - V_ANC_BAR + TX_BAR1A * V_ANC_BAR - TX_BAR0


TAUX2 = TX_BAR2 - TX_BAR1 * 1 - V_ANC_BAR + TX_BAR1A * V_ANC_BAR


TAUX3 = TX_BAR3 - TX_BAR2


TAUX4 = TX_BAR4 - TX_BAR3


TAUX5 = TX_BAR5 - TX_BAR4

def DS(x, y, z):
    if x in (0, 5) or y in (1, 2) or z in (1, 2):
        return max(QFxyz - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QFxyz - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QFxyz - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QFxyz - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QFxyz - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
    else:
        raise NotImplementedError()

WTXMARJ = RB51 / NB1 * null(PLAFQF) + NB2 * null(1 - PLAFQF)


TXMARJ = max(positif(WTXMARJ - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR) * TX_BAR1 * 1 - V_ANC_BAR + TX_BAR1A * V_ANC_BAR, max(positif(WTXMARJ - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR) * TX_BAR2, max(positif(WTXMARJ - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR) * TX_BAR3, max(positif(WTXMARJ - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR) * TX_BAR4, max(positif(WTXMARJ - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR) * TX_BAR5, 0))))) * 1 - positif(present(NRBASE) + present(NRINET) + present(IPTEFP) + present(IPTEFN) + present(PRODOM) + present(PROGUY)) * 1 - null(2 - V_REGCO) * positif(IDRS2 + IPQ1)

def DS06(y):
    if y in (1, 2):
        return max(QF0(y)6 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF0(y)6 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF0(y)6 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF0(y)6 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF0(y)6 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
    else:
        raise NotImplementedError()


def DS5(x, y):
    if x in (0, 5) or y in (1, 2):
        return max(QF(x, y)5 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF(x, y)5 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF(x, y)5 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF(x, y)5 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF(x, y)5 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
    else:
        raise NotImplementedError()


def DS04(y):
    if y in (1, 2):
        return max(QF0(y)4 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF0(y)4 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF0(y)4 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF0(y)4 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF0(y)4 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
    else:
        raise NotImplementedError()

NB1 = NBPT


NB2 = 1 + BOOL_0AM + BOOL_0AZ * V_0AV

def QF06(y):
    if y in (1, 2):
        return arr(RB06) / NB(y)
    else:
        raise NotImplementedError()


def QF5(y, z):
    if y in (1, 2) or z in (1, 2):
        return arr(RB5z) / NBy
    else:
        raise NotImplementedError()


def QF0(y, z):
    if y in (1, 2) or z in (1, 2):
        return arr(RB0z) / NBy
    else:
        raise NotImplementedError()


def QF04(y):
    if y in (1, 2):
        return arr(RB04) / NB(y)
    else:
        raise NotImplementedError()


def QF5(x, y):
    if x in (0, 5) or y in (1, 2):
        return arr(RBx5) / NBy
    else:
        raise NotImplementedError()

RNIBAR13 = 13465 * positif(positif(V_ANREV - V_0DA - 65) + positif(V_0AP + 0)) + 12353 * 1 - positif(positif(V_ANREV - V_0DA - 65) + positif(V_0AP + 0)) * null(NBPT - 1) + 14414 * null(NBPT - 1.25) + 15917 * null(NBPT - 1.5) + 17420 * null(NBPT - 1.75) + 18922 * null(NBPT - 2) + 20425 * null(NBPT - 2.25) + 21928 * null(NBPT - 2.5) + 23581 * positif(positif(V_ANREV - V_0DA - 65) + positif(V_0AP + 0)) * 1 - BOOL_0AM + 23431 * 1 - positif(positif(V_ANREV - V_0DA - 65) + positif(V_0AP + 0)) * null(NBPT - 2.75) + 24933 * null(NBPT - 3) + 26436 * null(NBPT - 3.25) + 27939 * null(NBPT - 3.5) + 29442 * null(NBPT - 3.75) + 30944 * null(NBPT - 4) + 32447 * null(NBPT - 4.25) + 33950 * null(NBPT - 4.5) + 35453 * null(NBPT - 4.75) + 36955 * null(NBPT - 5) + 38458 * null(NBPT - 5.25) + 39961 * null(NBPT - 5.5) + 41464 * null(NBPT - 5.75) + 42966 * null(NBPT - 6) + 44470 * null(NBPT - 6.25) + 45980 * null(NBPT - 6.5) + 47476 * null(NBPT - 6.75) + 48980 * null(NBPT - 7) + 50480 * null(NBPT - 7.25) + 51985 * null(NBPT - 7.5) + 53487 * null(NBPT - 7.75) + 54990 * null(NBPT - 8) + 56493 * null(NBPT - 8.25) + 57995 * null(NBPT - 8.5) + 59497 * null(NBPT - 8.75) + 61000 * null(NBPT - 9) + 62504 * null(NBPT - 9.25) + 64005 * null(NBPT - 9.5) + 65515 * null(NBPT - 9.75) + 67010 * null(NBPT - 10)


CODMESGOUV = positif(NBPT - 10) + positif(LIG74 + LIGTTPVQ) + null(2 - V_REGCO) + null(4 - V_REGCO) + positif(CESSASSV + CESSASSC + PCAPTAXV + PCAPTAXC + LOYELEV + 0) + positif(IPROP + AVFISCOPTER + IPREP + IPPRICORSE)


MESGOUV = 1 * null(IDRS3 - IDEC) * positif_ou_nul(RNI - RNIBAR13) + 2 * positif(IDRS3 - IDEC + 0) * positif(IDEC + 0) * 1 - positif(CODMESGOUV) * 1 - positif(RNIBAR13 - RNI) + 3 * positif(CODMESGOUV + positif(RNIBAR13 - RNI) + 1 - positif(null(IDRS3 - IDEC) * positif_ou_nul(RNI - RNIBAR13) + positif(IDRS3 - IDEC + 0) * positif(IDEC + 0)))


MESGOUV2 = 4 * null(IDRS3 - IDEC) * positif_ou_nul(RNI - RNIBAR13) + 5 * positif(IDRS3 - IDEC + 0) * positif(IDEC + 0) + 6 * positif(RNIBAR13 - RNI) * 1 - positif(CODMESGOUV) + 7 * positif(CODMESGOUV + 1 - positif(null(IDRS3 - IDEC) * positif_ou_nul(RNI - RNIBAR13) + positif(IDRS3 - IDEC + 0) * positif(IDEC + 0) + positif(RNIBAR13 - RNI)))
