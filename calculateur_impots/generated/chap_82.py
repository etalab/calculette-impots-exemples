# -*- coding: utf-8 -*-
# flake8: noqa


# WARNING: This file is automatically generated by a script. No not modify it by hand!

# Original files are "chap-82.json" and "chap-82.m"


RCMRABD = arr(RCMABD * 40 / 100)


__2RCMRABD = arr(REVACT * 40 / 100)


TRCMRABD = RCMRABD + __2RCMRABD


RCMRTNC = arr(RCMTNC * 40 / 100)


__2RCMRTNC = arr(REVPEA * 40 / 100)


TRCMRTNC = RCMRTNC + __2RCMRTNC


RCMRNABD = RCMABD - RCMRABD


__2RCMRNABD = REVACT - __2RCMRABD


RCMRNTNC = RCMTNC - RCMRTNC


__2RCMRNTNC = REVPEA - __2RCMRTNC


REGPRIVM = arr(REGPRIV * MAJREV)


__2REGPRIVM = arr(RESTUC * MAJREV)


TRCMABD = RCMABD + REVACT


RCMAB = RCMRNABD + __2RCMRNABD


DRTNC = RCMTNC + REVPEA


RTNC = RCMRNTNC + __2RCMRNTNC


RAVC = RCMAV + PROVIE


RCMNAB = RCMHAD + DISQUO


RTCAR = RCMHAB + INTERE


RCMPRIV = REGPRIV + RESTUC


RCMPRIVM = REGPRIVM + __2REGPRIVM


RCMFRTEMP = min(RCMAB + RTNC + RAVC + RCMNAB + RTCAR + RCMPRIVM, RCMFR)


BRCMBIS = RCMAB + RTNC + RAVC + RCMNAB + RTCAR + RCMPRIVM

FRAN = positif(RCMABD) * null(4 - V_IND_TRAIT) * positif(REVACT + RTCAR + RCMNAB) * arr(RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS * RCMABD / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - positif(REVACT + RTCAR + RCMNAB) * RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS + null(5 - V_IND_TRAIT) * positif(REVACT + RTCAR + RCMNAB) * arr(RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS * RCMABD / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - positif(REVACT + RTCAR + RCMNAB) * RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS


__2FRAN = positif(REVACT) * null(4 - V_IND_TRAIT) * positif(RTCAR + RCMNAB) * arr(RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS * REVACT / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - positif(RTCAR + RCMNAB) * RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS - FRAN + null(5 - V_IND_TRAIT) * positif(RTCAR + RCMNAB) * arr(RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P + 0), BRCMTOT1731 + 0)) * ART1731BIS * REVACT / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - positif(RTCAR + RCMNAB) * RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P + 0), BRCMTOT1731 + 0)) * ART1731BIS - FRAN


FRAR = positif(RCMHAB) * null(4 - V_IND_TRAIT) * positif(INTERE + RCMNAB) * arr(RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS * RCMHAB / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - positif(INTERE + RCMNAB) * RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS - FRAN - __2FRAN + null(5 - V_IND_TRAIT) * positif(INTERE + RCMNAB) * arr(RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS * RCMHAB / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - positif(INTERE + RCMNAB) * RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - FRAN - __2FRAN


__2FRAR = positif(INTERE) * null(4 - V_IND_TRAIT) * positif(RCMNAB) * arr(RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS * INTERE / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - positif(RCMNAB) * RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS - FRAN - __2FRAN - FRAR + null(5 - V_IND_TRAIT) * positif(RCMNAB) * arr(RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS * INTERE / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - positif(RCMNAB) * RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - FRAN - __2FRAN - FRAR


FRAU = positif(RCMHAD) * null(4 - V_IND_TRAIT) * positif(DISQUO) * arr(RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS * RCMHAD / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - positif(DISQUO) * RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS - FRAN - __2FRAN - FRAR - __2FRAR + null(5 - V_IND_TRAIT) * positif(DISQUO) * arr(RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS * RCMHAD / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - positif(DISQUO) * RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - FRAN - __2FRAN - FRAR - __2FRAR


__2FRAU = null(4 - V_IND_TRAIT) * RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS - FRAN - __2FRAN - FRAR - __2FRAR - FRAU * positif(DISQUO) + null(5 - V_IND_TRAIT) * RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - FRAN - __2FRAN - FRAR - __2FRAR - FRAU * positif(DISQUO)

__1RAN = 1 - positif(EXFR) * RCMRNABD - FRAN + positif(EXFR) * 0


__2RAN = 1 - positif(EXFR) * __2RCMRNABD - __2FRAN + positif(EXFR) * 0


TRAN = __1RAN + __2RAN


__1RAR = 1 - positif(EXFR) * RCMHAB - FRAR + positif(EXFR) * 0


__2RAR = 1 - positif(EXFR) * INTERE - __2FRAR + positif(EXFR) * 0


TRAR = __1RAR + __2RAR


__1RAU = 1 - positif(EXFR) * RCMHAD - FRAU + positif(EXFR) * 0


__2RAU = 1 - positif(EXFR) * DISQUO - __2FRAU + positif(EXFR) * 0


TRAU = __1RAU + __2RAU

ABRCM2 = min(ABTAV, RAVC)

ABAVC = positif(RCMAV) * arr(ABRCM2 * RCMAV / RAVC)


__2ABAVC = positif(PROVIE) * min(arr(ABRCM2 * PROVIE / RAVC), ABRCM2 - ABAVC)


TABAVC = ABAVC + __2ABAVC

RNTNC = RTNC


RNAVC = RAVC - TABAVC

RCMFRART1731 = null(4 - V_IND_TRAIT) * PREM8_11 * max(0, min(RCMFR, BRCMBIS)) + null(5 - V_IND_TRAIT) * max(0, min(RCMFR, max(BRCM1731, max(BRCM_P, BRCMP2))))

EXFR = max(0, RCMFR * 1 - positif(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - RCMAB - RTCAR - RCMNAB)

__1RIA = __1RAN


__2RIA = __2RAN


__1RNC = RCMRNTNC


__2RNC = __2RCMRNTNC


RCAV = max(0, RCMAV - ABAVC)


__2RCAV = max(0, PROVIE - __2ABAVC)


__1RAO = max(0, REGPRIVM)


__2RAO = max(0, __2REGPRIVM)


R2FA = max(0, COD2FA)


TRCM1 = __1RNC + RCAV + __1RAO


TRCM = TRCM1 + __2RNC + __2RCAV + __2RAO

FRG1 = positif(EXFR) * arr(EXFR * TRCM1 / TRCM) + 1 - positif(EXFR) * 0


FRG2 = positif(EXFR) * min(arr(EXFR * __2RNC / TRCM), EXFR - FRG1) + 1 - positif(EXFR) * 0


FRG3 = positif(EXFR) * min(arr(EXFR * __2RCAV / TRCM), EXFR - FRG1 - FRG2) + 1 - positif(EXFR) * 0


FRG5 = positif(EXFR) * max(0, EXFR - FRG1 - FRG2 - FRG3) + 1 - positif(EXFR) * 0

DFRCMNBIS = positif(RCMAB + RTCAR + RCMNAB) * 1 - positif(RTNC + RAVC + RCMPRIVM) * max(0, RCMFR - RCMAB - RTCAR - RCMNAB) + 1 - positif(RCMAB + RTCAR + RCMNAB) * positif(RTNC + RAVC + RCMPRIVM) * max(0, RCMFR - RTNC - RAVC - TABAVC - RCMPRIVM) + positif(RCMAB + RTCAR + RCMNAB) * positif(RTNC + RAVC + RCMPRIVM) * max(0, RCMFR - RCMAB - RCMNAB - RTNC - RAVC - TABAVC - RTCAR - RCMPRIVM) + 1 - positif(RCMAB + RTCAR + RCMNAB) * 1 - positif(RTNC + RAVC + RCMPRIVM) * max(0, RCMFR)


DFRCMN = DFRCMNBIS * 1 - positif(ART1731BIS) + RCMFR - RCMFRART1731 * positif(ART1731BIS)

__1RCM_I = (1 - positif(DFRCMN) * __1RIA + __1RNC + __1RAR + __1RAU + __1RAO + RCAV - FRG1 - positif(DFRCMN) * 0 * 1 - positif(ART1731BIS) + positif(ART1731BIS) * __1RIA + __1RNC + __1RAR + __1RAU + __1RAO + RCAV - FRG1 - positif(DFRCMN) * 0) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


__2RCM_I = (1 - positif(DFRCMN) * __2RIA * 1 - positif(ART1731BIS) + __2RIA * positif(ART1731BIS)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


__3RCM_I = (1 - positif(DFRCMN) * __2RNC - FRG2 * 1 - positif(ART1731BIS) + __2RNC - FRG2 * positif(ART1731BIS)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


__4RCM_I = (1 - positif(DFRCMN) * __2RCAV - FRG3 * 1 - positif(ART1731BIS) + __2RCAV - FRG3 * positif(ART1731BIS)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


__5RCM_I = (1 - positif(DFRCMN) * __2RAU * 1 - positif(ART1731BIS) + __2RAU * positif(ART1731BIS)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


__6RCM_I = (1 - positif(DFRCMN) * __2RAO - FRG5 * 1 - positif(ART1731BIS) + __2RAO - FRG5 * positif(ART1731BIS)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


__7RCM_I = (1 - positif(DFRCMN) * __2RAR * 1 - positif(ART1731BIS) + __2RAR * positif(ART1731BIS)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


RCM_I = __1RCM_I + __2RCM_I + __3RCM_I + __4RCM_I + __5RCM_I + __6RCM_I + __7RCM_I

REPRCM = DEFRCM + DEFRCM2 + DEFRCM3 + DEFRCM4 + DEFRCM5 + DEFRCM6


REPRCMB = max(0, BRCM + BRCMQ - RCMFR)


REPRCMBIS = DEFRCM + DEFRCM2 + DEFRCM3 + DEFRCM4 + DEFRCM5 + DEFRCM6 * 1 - positif(ART1731BIS) + min(DEFRCM + DEFRCM2 + DEFRCM3 + DEFRCM4 + DEFRCM5 + DEFRCM6, max(REPRCM1731, max(REPRCM_P, REPRCMP2))) * ART1731BIS * 1 - PREM8_11 + 0 * ART1731BIS * PREM8_11


REPRCM1 = positif(REPRCMBIS) * arr(REPRCMBIS * __1RCM_I / RCM_I) + 1 - positif(REPRCMBIS) * 0


REPRCM2 = positif(REPRCMBIS) * min(arr(REPRCMBIS * __2RCM_I / RCM_I), REPRCMBIS - REPRCM1) + 1 - positif(REPRCMBIS) * 0


REPRCM3 = positif(REPRCMBIS) * min(arr(REPRCMBIS * __3RCM_I / RCM_I), REPRCMBIS - REPRCM1 - REPRCM2) + 1 - positif(REPRCMBIS) * 0


REPRCM4 = positif(REPRCMBIS) * min(arr(REPRCMBIS * __4RCM_I / RCM_I), REPRCMBIS - REPRCM1 - REPRCM2 - REPRCM3) + 1 - positif(REPRCMBIS) * 0


REPRCM5 = positif(REPRCMBIS) * min(arr(REPRCMBIS * __5RCM_I / RCM_I), REPRCMBIS - REPRCM1 - REPRCM2 - REPRCM3 - REPRCM4) + 1 - positif(REPRCMBIS) * 0


REPRCM6 = positif(REPRCMBIS) * min(arr(REPRCMBIS * __6RCM_I / RCM_I), REPRCMBIS - REPRCM1 - REPRCM2 - REPRCM3 - REPRCM4 - REPRCM5) + 1 - positif(REPRCMBIS) * 0


REPRCM7 = positif(REPRCMBIS) * max(0, REPRCMBIS - REPRCM1 - REPRCM2 - REPRCM3 - REPRCM4 - REPRCM5 - REPRCM6) + 1 - positif(REPRCMBIS) * 0

DFRCM5 = DEFRCM6 * positif(DFRCMN) + DEFRCM6 * positif(DEFRCM + DEFRCM2 + DEFRCM3 + DEFRCM4 + DEFRCM5 - RCM_I) * 1 - positif(DFRCMN) + max(0, DEFRCM6 - RCM_I - DEFRCM - DEFRCM2 - DEFRCM3 - DEFRCM4 - DEFRCM5) * positif_ou_nul(RCM_I - DEFRCM - DEFRCM2 - DEFRCM3 - DEFRCM4 - DEFRCM5) * 1 - positif(DFRCMN) * 1 - positif(ART1731BIS) + min(DEFRCM6, REPRCM - REPRCMBIS) * positif(ART1731BIS * 1 - PREM8_11) + DEFRCM6 * positif(ART1731BIS * PREM8_11)


DFRCM4 = DEFRCM5 * positif(DFRCMN) + DEFRCM5 * positif(DEFRCM + DEFRCM2 + DEFRCM3 + DEFRCM4 - RCM_I) * 1 - positif(DFRCMN) + max(0, DEFRCM5 - RCM_I - DEFRCM - DEFRCM2 - DEFRCM3 - DEFRCM4) * positif_ou_nul(RCM_I - DEFRCM - DEFRCM2 - DEFRCM3 - DEFRCM4) * 1 - positif(DFRCMN) * 1 - positif(ART1731BIS) + min(DEFRCM5, REPRCM - REPRCMBIS - DFRCM5) * positif(ART1731BIS * 1 - PREM8_11) + DEFRCM5 * positif(ART1731BIS * PREM8_11)


DFRCM3 = DEFRCM4 * positif(DFRCMN) + DEFRCM4 * positif(DEFRCM + DEFRCM2 + DEFRCM3 - RCM_I) * 1 - positif(DFRCMN) + max(0, DEFRCM4 - RCM_I - DEFRCM) * positif_ou_nul(RCM_I - DEFRCM - DEFRCM2 - DEFRCM3) * 1 - positif(DFRCMN) * 1 - positif(ART1731BIS) + min(DEFRCM4, REPRCM - REPRCMBIS - DFRCM5 - DFRCM4) * positif(ART1731BIS * 1 - PREM8_11) + DEFRCM4 * positif(ART1731BIS * PREM8_11)


DFRCM2 = DEFRCM3 * positif(DFRCMN) + DEFRCM3 * positif(DEFRCM + DEFRCM2 - RCM_I) * 1 - positif(DFRCMN) + max(0, DEFRCM3 - RCM_I - DEFRCM) * positif_ou_nul(RCM_I - DEFRCM - DEFRCM2) * 1 - positif(DFRCMN) * 1 - positif(ART1731BIS) + min(DEFRCM3, REPRCM - REPRCMBIS - DFRCM5 - DFRCM4 - DFRCM3) * positif(ART1731BIS * 1 - PREM8_11) + DEFRCM3 * positif(ART1731BIS * PREM8_11)


DFRCM1 = DEFRCM2 * positif(DFRCMN) + DEFRCM2 * positif(DEFRCM - RCM_I) * 1 - positif(DFRCMN) + max(0, DEFRCM2 - RCM_I - DEFRCM) * positif_ou_nul(RCM_I - DEFRCM) * 1 - positif(DFRCMN) * 1 - positif(ART1731BIS) + min(DEFRCM2, REPRCM - REPRCMBIS - DFRCM5 - DFRCM4 - DFRCM3 - DFRCM2) * positif(ART1731BIS * 1 - PREM8_11) + DEFRCM2 * positif(ART1731BIS * PREM8_11)

RCM = (1 - positif(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, __1RCM_I - REPRCM1) - positif(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * 0 * 1 - positif(ART1731BIS) + positif(ART1731BIS) * max(0, __1RCM_I - REPRCM1)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


RCM2FA = COD2FA * 1 - positif(null(2 - V_REGCO) + null(4 - V_REGCO))


__2RCM = (1 - positif(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, __2RCM_I - REPRCM2) * 1 - positif(ART1731BIS) + positif(ART1731BIS) * max(0, __2RCM_I - REPRCM2)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


__3RCM = (1 - positif(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, __3RCM_I - REPRCM3) * 1 - positif(ART1731BIS) + positif(ART1731BIS) * max(0, __3RCM_I - REPRCM3)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


__4RCM = (1 - positif(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, __4RCM_I - REPRCM4) * 1 - positif(ART1731BIS) + positif(ART1731BIS) * max(0, __4RCM_I - REPRCM4)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


__5RCM = (1 - positif(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, __5RCM_I - REPRCM5) * 1 - positif(ART1731BIS) + positif(ART1731BIS) * max(0, __5RCM_I - REPRCM5)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


__6RCM = (1 - positif(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, __6RCM_I - REPRCM6) * 1 - positif(ART1731BIS) + positif(ART1731BIS) * max(0, __6RCM_I - REPRCM6)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


__7RCM = (1 - positif(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, __7RCM_I - REPRCM7) * 1 - positif(ART1731BIS) + positif(ART1731BIS) * max(0, __7RCM_I - REPRCM7)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0


DFRCM = DFRCMN + DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5 * 1 - positif(null(2 - V_REGCO) + null(4 - V_REGCO))


RCMEXCREF = max(0, TRCMRABD + TRCMRTNC) * 1 - positif(null(2 - V_REGCO) + null(4 - V_REGCO))

ABTAV = PLAF_RCMAV1 * 1 + BOOL_0AM

BPLIB = min(RCMLIB, max(0, ABTAV - RAVC)) * 1 - V_CNR

EPAV = arr(BPLIB * TX_PREVLIB / 100)

VAREPRCM = min(DEFRCM + DEFRCM2 + DEFRCM3 + DEFRCM4 + DEFRCM5 + DEFRCM6, __1RCM_I + __2RCM_I + __3RCM_I + __4RCM_I + __5RCM_I + __6RCM_I + __7RCM_I)
