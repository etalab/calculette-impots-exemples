# -*- coding: utf-8 -*-
# flake8: noqa
# WARNING: This file is automatically generated by a script. No not modify it by hand!

from ..core import *
from .constants import *


A10RENT1731 = 0
A10TOURSOC1731 = 0
A11RENT1731 = 0
A12RENT1731 = 0
A13RENT1731 = 0
AAIDE1731 = 0
AAIDEP2 = 0
AAIDE_P = 0
AB = 0
ABICPDECC = saisies.get('AUTOBICVC', 0) + saisies.get('AUTOBICPC', 0)
ABICPDECP = saisies.get('AUTOBICVP', 0) + saisies.get('AUTOBICPP', 0)
ABICPDECV = saisies.get('AUTOBICVV', 0) + saisies.get('AUTOBICPV', 0)
ABNCPDECC = saisies.get('AUTOBNCC', 0)
ABNCPDECP = saisies.get('AUTOBNCP', 0)
ABNCPDECV = saisies.get('AUTOBNCV', 0)
ABTMA = saisies.get('V_0DN', 0) * ABAT_ENF_MARIES + round(saisies.get('V_0DP', 0) * ABAT_ENF_MARIES / 2)
ACEL1731 = 0
ACEL20121731 = 0
ACEL2012P2 = 0
ACEL2012_P = 0
ACELCOM1731 = 0
ACELCOMP2 = 0
ACELCOM_P = 0
ACELFABC1731 = 0
ACELFABCP2 = 0
ACELFABC_P = 0
ACELFD1731 = 0
ACELFDP2 = 0
ACELFD_P = 0
ACELHJK1731 = 0
ACELHJKP2 = 0
ACELHJK_P = 0
ACELHL1731 = 0
ACELHLP2 = 0
ACELHL_P = 0
ACELHM1731 = 0
ACELHMP2 = 0
ACELHM_P = 0
ACELHNO1731 = 0
ACELHNOP2 = 0
ACELHNO_P = 0
ACELJBGL1731 = 0
ACELJBGLP2 = 0
ACELJBGL_P = 0
ACELJOQR1731 = 0
ACELJOQRP2 = 0
ACELJOQR_P = 0
ACELJP1731 = 0
ACELJPP2 = 0
ACELJP_P = 0
ACELNBGL1731 = 0
ACELNBGLP2 = 0
ACELNBGL_P = 0
ACELNQ1731 = 0
ACELNQP2 = 0
ACELNQ_P = 0
ACELP2 = 0
ACELREPGJ1731 = 0
ACELREPGJP2 = 0
ACELREPGJ_P = 0
ACELREPGK1731 = 0
ACELREPGKP2 = 0
ACELREPGK_P = 0
ACELREPGL1731 = 0
ACELREPGLP2 = 0
ACELREPGL_P = 0
ACELREPGP1731 = 0
ACELREPGPP2 = 0
ACELREPGP_P = 0
ACELREPGS1731 = 0
ACELREPGSP2 = 0
ACELREPGS_P = 0
ACELREPGT1731 = 0
ACELREPGTP2 = 0
ACELREPGT_P = 0
ACELREPGU1731 = 0
ACELREPGUP2 = 0
ACELREPGU_P = 0
ACELREPGV1731 = 0
ACELREPGVP2 = 0
ACELREPGV_P = 0
ACELREPGW1731 = 0
ACELREPGWP2 = 0
ACELREPGW_P = 0
ACELREPGX1731 = 0
ACELREPGXP2 = 0
ACELREPGX_P = 0
ACELREPHA1731 = 0
ACELREPHAP2 = 0
ACELREPHA_P = 0
ACELREPHB1731 = 0
ACELREPHBP2 = 0
ACELREPHB_P = 0
ACELREPHD1731 = 0
ACELREPHDP2 = 0
ACELREPHD_P = 0
ACELREPHE1731 = 0
ACELREPHEP2 = 0
ACELREPHE_P = 0
ACELREPHF1731 = 0
ACELREPHFP2 = 0
ACELREPHF_P = 0
ACELREPHG1731 = 0
ACELREPHGP2 = 0
ACELREPHG_P = 0
ACELREPHH1731 = 0
ACELREPHHP2 = 0
ACELREPHH_P = 0
ACELREPHR1731 = 0
ACELREPHRP2 = 0
ACELREPHR_P = 0
ACELREPHS1731 = 0
ACELREPHSP2 = 0
ACELREPHS_P = 0
ACELREPHT1731 = 0
ACELREPHTP2 = 0
ACELREPHT_P = 0
ACELREPHU1731 = 0
ACELREPHUP2 = 0
ACELREPHU_P = 0
ACELREPHV1731 = 0
ACELREPHVP2 = 0
ACELREPHV_P = 0
ACELREPHW1731 = 0
ACELREPHWP2 = 0
ACELREPHW_P = 0
ACELREPHX1731 = 0
ACELREPHXP2 = 0
ACELREPHX_P = 0
ACELREPHZ1731 = 0
ACELREPHZP2 = 0
ACELREPHZ_P = 0
ACELREPYA1731 = 0
ACELREPYAP2 = 0
ACELREPYA_P = 0
ACELREPYB1731 = 0
ACELREPYBP2 = 0
ACELREPYB_P = 0
ACELREPYC1731 = 0
ACELREPYCP2 = 0
ACELREPYC_P = 0
ACELREPYD1731 = 0
ACELREPYDP2 = 0
ACELREPYD_P = 0
ACELREPYE1731 = 0
ACELREPYEP2 = 0
ACELREPYE_P = 0
ACELREPYF1731 = 0
ACELREPYFP2 = 0
ACELREPYF_P = 0
ACELREPYG1731 = 0
ACELREPYGP2 = 0
ACELREPYG_P = 0
ACELREPYH1731 = 0
ACELREPYHP2 = 0
ACELREPYH_P = 0
ACELREPYI1731 = 0
ACELREPYIP2 = 0
ACELREPYI_P = 0
ACELREPYJ1731 = 0
ACELREPYJP2 = 0
ACELREPYJ_P = 0
ACELREPYK1731 = 0
ACELREPYKP2 = 0
ACELREPYK_P = 0
ACELREPYL1731 = 0
ACELREPYLP2 = 0
ACELREPYL_P = 0
ACELRREDLA1731 = 0
ACELRREDLAP2 = 0
ACELRREDLA_P = 0
ACELRREDLB1731 = 0
ACELRREDLBP2 = 0
ACELRREDLB_P = 0
ACELRREDLC1731 = 0
ACELRREDLCP2 = 0
ACELRREDLC_P = 0
ACELRREDLD1731 = 0
ACELRREDLDP2 = 0
ACELRREDLD_P = 0
ACELRREDLE1731 = 0
ACELRREDLEP2 = 0
ACELRREDLE_P = 0
ACELRREDLF1731 = 0
ACELRREDLFP2 = 0
ACELRREDLF_P = 0
ACELRREDLM1731 = 0
ACELRREDLMP2 = 0
ACELRREDLM_P = 0
ACELRREDLN1731 = 0
ACELRREDLNP2 = 0
ACELRREDLN_P = 0
ACELRREDLS1731 = 0
ACELRREDLSP2 = 0
ACELRREDLS_P = 0
ACELRREDLT1731 = 0
ACELRREDLTP2 = 0
ACELRREDLT_P = 0
ACELRREDLX1731 = 0
ACELRREDLXP2 = 0
ACELRREDLX_P = 0
ACELRREDLZ1731 = 0
ACELRREDLZP2 = 0
ACELRREDLZ_P = 0
ACELRREDMG1731 = 0
ACELRREDMGP2 = 0
ACELRREDMG_P = 0
ACELRREDMH1731 = 0
ACELRREDMHP2 = 0
ACELRREDMH_P = 0
ACEL_P = 0
ACINE1731 = 0
ACINEP2 = 0
ACINE_P = 0
ACODJTJU1731 = 0
ACODJTJUP2 = 0
ACODJTJU_P = 0
ACOLENT1731 = 0
ACOLENTP2 = 0
ACOLENT_P = 0
ACOMP1731 = 0
ACOMPP2 = 0
ACOMP_P = 0
ACOTFOR1731 = 0
ACOTFORP2 = 0
ACOTFOR_P = 0
ACREAT1731 = 0
ACREATHANDI1731 = 0
ACREATHANDIP2 = 0
ACREATHANDI_P = 0
ACREATP2 = 0
ACREAT_P = 0
ADIFAGRI1731 = 0
ADIFAGRIP2 = 0
ADIFAGRI_P = 0
ADOMSOC11731 = 0
ADOMSOC1P2 = 0
ADOMSOC1_P = 0
ADONS1731 = 0
ADONSP2 = 0
ADONS_P = 0
ADUFLOEKL_1 = round(min(saisies.get('DUFLOEL', 0) + 0, LIMDUFLO) / 9) + round(min(saisies.get('DUFLOEK', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + saisies.get('PINELQC', 0) + 0, LIMDUFLO)) / 9) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
ADUFLOGIH1731 = 0
ADUFLOGIHP2 = 0
ADUFLOGIH_1 = round(min(saisies.get('DUFLOGI', 0) + 0, LIMDUFLO) / 9) + round(min(saisies.get('DUFLOGH', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOGI', 0) + 0, LIMDUFLO)) / 9) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
ADUFLOGIH_P = 0
ADUFREPFI = saisies.get('DUFLOFI', 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
AFIPC1731 = 0
AFIPCP2 = 0
AFIPC_P = 0
AFIPDOM1731 = 0
AFIPDOMP2 = 0
AFIPDOM_P = 0
AFOREST1731 = 0
AFORESTP2 = 0
AFOREST_P = 0
AFORET1731 = 0
AFORETP2 = 0
AFORET_P = 0
AGC = saisies.get('V_ANREV', 0) - saisies.get('V_0DB', 0) * min(1, saisies.get('V_0DB', 0))
AGRI = sum([AGRIV, AGRIC, AGRIP])
AGRIC = saisies.get('BAPERPC', 0) + saisies.get('BANOCGAC', 0) * 1 - is_positive(saisies.get('APPLI_OCEANS', 0))
AGRIP = saisies.get('BAPERPP', 0) + saisies.get('BANOCGAP', 0) * 1 - is_positive(saisies.get('APPLI_OCEANS', 0))
AGRIV = saisies.get('BAPERPV', 0) + saisies.get('BANOCGAV', 0) * 1 - is_positive(saisies.get('APPLI_OCEANS', 0))
AGV = saisies.get('V_ANREV', 0) - saisies.get('V_0DA', 0) * min(1, saisies.get('V_0DA', 0))
AHEBE1731 = 0
AHEBEP2 = 0
AHEBE_P = 0
AILMIA1731 = 0
AILMIAP2 = 0
AILMIA_P = 0
AILMIB1731 = 0
AILMIBP2 = 0
AILMIB_P = 0
AILMIC1731 = 0
AILMICP2 = 0
AILMIC_P = 0
AILMIH1731 = 0
AILMIHP2 = 0
AILMIH_P = 0
AILMIX1731 = 0
AILMIXP2 = 0
AILMIX_P = 0
AILMIY1731 = 0
AILMIYP2 = 0
AILMIY_P = 0
AILMIZ1731 = 0
AILMIZP2 = 0
AILMIZ_P = 0
AILMJC1731 = 0
AILMJCP2 = 0
AILMJC_P = 0
AILMJI1731 = 0
AILMJIP2 = 0
AILMJI_P = 0
AILMJS1731 = 0
AILMJSP2 = 0
AILMJS_P = 0
AILMJV1731 = 0
AILMJVP2 = 0
AILMJV_P = 0
AILMJW1731 = 0
AILMJWP2 = 0
AILMJW_P = 0
AILMJX1731 = 0
AILMJXP2 = 0
AILMJX_P = 0
AILMJY1731 = 0
AILMJYP2 = 0
AILMJY_P = 0
AINVRED1731 = 0
AINVREDP2 = 0
AINVRED_P = 0
AISFDONCEE = round(saisies.get('ISFDONEURO', 0) * TX75 / 100)
AISFDONF = round(saisies.get('ISFDONF', 0) * TX75 / 100)
AISFFCPI = round(saisies.get('ISFFCPI', 0) * TX50 / 100)
AISFFIP = round(saisies.get('ISFFIP', 0) * TX50 / 100)
AISFPMED = round(saisies.get('ISFPMEDI', 0) * TX50 / 100)
AISFPMEI = round(saisies.get('ISFPMEIN', 0) * TX50 / 100)
ALLOP = saisies.get('ALLO1', 0) + saisies.get('ALLO2', 0) + saisies.get('ALLO3', 0) + saisies.get('ALLO4', 0)
ALOCENT1731 = 0
ALOCENTP2 = 0
ALOCENT_P = 0
ALOCIDEFG1731 = 0
ALOCIDEFGP2 = 0
ALOCIDEFG_P = 0
ALOGDOM1731 = 0
ALOGDOMP2 = 0
ALOGDOM_P = 0
ALOGSOC1731 = 0
ALOGSOCP2 = 0
ALOGSOC_P = 0
AMEUBLE1731 = 0
AMEUBLEP2 = 0
AMEUBLE_P = 0
ANCNAP = saisies.get('V_ANC_NAP', 0) * 1 - 2 * saisies.get('V_IND_NAP', 0)
ANCSDED2 = saisies.get('V_ANCSDED', 0) * 1 - is_zero(933 - saisies.get('V_ROLCSG', 0)) + saisies.get('V_ANCSDED', 0) + 1 * is_zero(933 - saisies.get('V_ROLCSG', 0)) * is_positive(saisies.get('V_ROLCSG', 0) + 0) + saisies.get('V_ANCSDED', 0) * 1 - is_positive(saisies.get('V_ROLCSG', 0) + 0)
ANOUV1731 = 0
ANOUVP2 = 0
ANOUV_P = 0
ANTINDIRPS = 0
APATNAT11731 = 0
APATNAT1731 = 0
APATNAT1P2 = 0
APATNAT1_P = 0
APATNAT21731 = 0
APATNAT2P2 = 0
APATNAT2_P = 0
APATNAT31731 = 0
APATNAT3P2 = 0
APATNAT3_P = 0
APATNATP2 = 0
APATNAT_P = 0
APIQABCD_1 = round(min(saisies.get('PINELQD', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + 0, LIMDUFLO)) / 9) + round(min(saisies.get('PINELQB', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + saisies.get('PINELQC', 0) + saisies.get('DUFLOEK', 0) + 0, LIMDUFLO)) / 9) + round(min(saisies.get('PINELQC', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + 0, LIMDUFLO)) / 6) + round(min(saisies.get('PINELQA', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + saisies.get('PINELQC', 0) + saisies.get('DUFLOEK', 0) + saisies.get('PINELQB', 0) + 0, LIMDUFLO)) / 6) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
APPLI_BATCH = 1
APPLI_GP = 0
APPLI_ILIAD = 0
APRESCOMP1731 = 0
APRESCOMPP2 = 0
APRESCOMP_P = 0
APROREP1731 = 0
APROREPP2 = 0
APROREP_P = 0
AREDMEUB1731 = 0
AREDMEUBP2 = 0
AREDMEUB_P = 0
AREDREP1731 = 0
AREDREPP2 = 0
AREDREP_P = 0
AREPA1731 = 0
AREPAP2 = 0
AREPA_P = 0
AREPMEU1731 = 0
AREPMEUP2 = 0
AREPMEU_P = 0
AREPNPRO1731 = 0
ARESIMEUB1731 = 0
ARESIMEUBP2 = 0
ARESIMEUB_P = 0
ARESINEUV1731 = 0
ARESINEUVP2 = 0
ARESINEUV_P = 0
ARESIVIEU1731 = 0
ARESIVIEUP2 = 0
ARESIVIEU_P = 0
ARESTIMO1731 = 0
ARESTIMOP2 = 0
ARESTIMO_P = 0
ARIRENOV1731 = 0
ARIRENOVP2 = 0
ARIRENOV_P = 0
ART1731BIS = 0
ASOCREPR1731 = 0
ASOCREPRP2 = 0
ASOCREPR_P = 0
ASOUFIP1731 = 0
ASOUFIPP2 = 0
ASOUFIP_P = 0
ASURV1731 = 0
ASURVP2 = 0
ASURV_P = 0
ATOUHOTR1731 = 0
ATOUHOTRP2 = 0
ATOUHOTR_P = 0
ATOUREPA1731 = 0
ATOUREPAP2 = 0
ATOUREPA_P = 0
ATOURREP1731 = 0
ATOURREPP2 = 0
ATOURREP_P = 0
AUBAINE13A = max(0, min(saisies.get('V_A13REELA', 0), saisies.get('V_DIFTEOREEL', 0)))
AUBAINE13B = max(0, min(saisies.get('V_A13REELB', 0), saisies.get('V_DIFTEOREEL', 0) - AUBAINE13A))
AVPLAF13A = max(0, AUBAINE13A - LIM10000) * is_positive(saisies.get('V_DIFTEOREEL', 0))
AVPLAF13B = max(0, min(AUBAINE13A, LIM10000) + AUBAINE13B - LIM18000) * is_positive(saisies.get('V_DIFTEOREEL', 0))
B3SVN = saisies.get('CVNSALAV', 0) + saisies.get('CVNSALAC', 0) * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BA1AF = saisies.get('BAF1AP', 0) + saisies.get('BAF1AC', 0) + saisies.get('BAF1AV', 0)
BA1C = saisies.get('BA1AC', 0) + saisies.get('BAF1AC', 0)
BA1P = saisies.get('BA1AP', 0) + saisies.get('BAF1AP', 0)
BA1V = saisies.get('BA1AV', 0) + saisies.get('BAF1AV', 0)
BAA = min(saisies.get('RDREP', 0) + saisies.get('DONETRAN', 0), PLAF_REDREPAS)
BAFORC = round(saisies.get('BAFC', 0) * MAJREV) + saisies.get('BAFORESTC', 0) + saisies.get('BAFPVC', 0)
BAFORP = round(saisies.get('BAFP', 0) * MAJREV) + saisies.get('BAFORESTP', 0) + saisies.get('BAFPVP', 0)
BAFORV = round(saisies.get('BAFV', 0) * MAJREV) + saisies.get('BAFORESTV', 0) + saisies.get('BAFPVV', 0)
BARREVAC = saisies.get('BACREC', 0) + _4BACREC
BARREVAP = saisies.get('BACREP', 0) + _4BACREP
BARREVAV = saisies.get('BACREV', 0) + _4BACREV
BARSREVC = saisies.get('BAHREC', 0) + _4BAHREC
BARSREVP = saisies.get('BAHREP', 0) + _4BAHREP
BARSREVV = saisies.get('BAHREV', 0) + _4BAHREV
BASEDONB = saisies.get('REPDON03', 0) + saisies.get('REPDON04', 0) + saisies.get('REPDON05', 0) + saisies.get('REPDON06', 0) + saisies.get('REPDON07', 0) + saisies.get('RDDOUP', 0) + saisies.get('COD7UH', 0) + saisies.get('DONAUTRE', 0)
BASSURC = saisies.get('CESSASSC', 0)
BASSURC3 = max(0, saisies.get('CESSASSC', 0) - LIM_ASSUR3)
BASSURV = saisies.get('CESSASSV', 0)
BASSURV3 = max(0, saisies.get('CESSASSV', 0) - LIM_ASSUR3)
BCELCOM2011 = round(min(saisies.get('CELLIERNP', 0) + saisies.get('CELLIERNR', 0) + saisies.get('CELLIERNS', 0) + saisies.get('CELLIERNT', 0) + 0, LIMCELLIER) / 5)
BCEL_2011 = round(min(saisies.get('CELLIERNA', 0) + saisies.get('CELLIERNC', 0) + saisies.get('CELLIERND', 0) + saisies.get('CELLIERNE', 0) + saisies.get('CELLIERNF', 0) + saisies.get('CELLIERNH', 0) + saisies.get('CELLIERNI', 0) + saisies.get('CELLIERNJ', 0) + saisies.get('CELLIERNK', 0) + saisies.get('CELLIERNM', 0) + saisies.get('CELLIERNN', 0) + saisies.get('CELLIERNO', 0) + 0, LIMCELLIER) / 9)
BCEL_2012 = round(min(saisies.get('CELLIERJA', 0) + saisies.get('CELLIERJD', 0) + saisies.get('CELLIERJE', 0) + saisies.get('CELLIERJF', 0) + saisies.get('CELLIERJH', 0) + saisies.get('CELLIERJJ', 0) + saisies.get('CELLIERJK', 0) + saisies.get('CELLIERJM', 0) + saisies.get('CELLIERJN', 0) + 0, LIMCELLIER) / 9)
BCEL_FABC = round(min(saisies.get('CELLIERFA', 0) + saisies.get('CELLIERFB', 0) + saisies.get('CELLIERFC', 0), LIMCELLIER) / 9)
BCEL_FD = round(min(saisies.get('CELLIERFD', 0), LIMCELLIER) / 5)
BCEL_HJK = round(min(saisies.get('CELLIERHJ', 0) + saisies.get('CELLIERHK', 0) + 0, LIMCELLIER) / 9)
BCEL_HL = round(min(saisies.get('CELLIERHL', 0) + 0, LIMCELLIER) / 9)
BCEL_HM = round(min(saisies.get('CELLIERHM', 0) + 0, LIMCELLIER) / 9)
BCEL_HNO = round(min(saisies.get('CELLIERHN', 0) + saisies.get('CELLIERHO', 0) + 0, LIMCELLIER) / 9)
BCEL_JBGL = round(min(saisies.get('CELLIERJB', 0) + saisies.get('CELLIERJG', 0) + saisies.get('CELLIERJL', 0) + 0, LIMCELLIER) / 9)
BCEL_JOQR = round(min(saisies.get('CELLIERJO', 0) + saisies.get('CELLIERJQ', 0) + saisies.get('CELLIERJR', 0) + 0, LIMCELLIER) / 5)
BCEL_JP = round(min(saisies.get('CELLIERJP', 0) + 0, LIMCELLIER) / 5)
BCEL_NBGL = round(min(saisies.get('CELLIERNB', 0) + saisies.get('CELLIERNG', 0) + saisies.get('CELLIERNL', 0) + 0, LIMCELLIER) / 9)
BCEL_NQ = round(min(saisies.get('CELLIERNQ', 0) + 0, LIMCELLIER) / 5)
BCIAQCUL = round(saisies.get('CIAQCUL', 0) * TX_CIAQCUL / 100)
BCICAPAVIS = max(0, saisies.get('PRELIBXT', 0) - round(saisies.get('PRELIBXT', 0) * TX10 / 100))
BCIGA = saisies.get('CRIGA', 0)
BCVNSAL = saisies.get('CVNSALAV', 0) + saisies.get('CVNSALAC', 0) + saisies.get('GLDGRATV', 0) + saisies.get('GLDGRATC', 0) * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BDCIFORET = saisies.get('RDFORESTRA', 0) + saisies.get('SINISFORET', 0) + saisies.get('COD7UA', 0) + saisies.get('COD7UB', 0) + saisies.get('RDFORESTGES', 0) + saisies.get('COD7UI', 0)
BDON7UH = min(LIM15000, saisies.get('COD7UH', 0))
BFCPI1731 = 0
BFCPIP2 = 0
BFCPI_P = 0
BGEDECL = saisies.get('RDTECH', 0) + saisies.get('RDEQPAHA', 0)
BI1 = sum([BI1V, BI1C, BI1P])
BI12AC = saisies.get('BI1AC', 0) + saisies.get('BI2AC', 0)
BI12AP = saisies.get('BI1AP', 0) + saisies.get('BI2AP', 0)
BI12AV = saisies.get('BI1AV', 0) + saisies.get('BI2AV', 0)
BI1C = saisies.get('BI1AC', 0)
BI1P = saisies.get('BI1AP', 0)
BI1V = saisies.get('BI1AV', 0)
BI2 = sum([BI2V, BI2C, BI2P])
BI2C = saisies.get('BI2AC', 0)
BI2P = saisies.get('BI2AP', 0)
BI2V = saisies.get('BI2AV', 0)
BICDEC1731 = 0
BICDEP1731 = 0
BICDEV1731 = 0
BICHDEC1731 = 0
BICHDEP1731 = 0
BICHDEV1731 = 0
BICNPR = sum([BINTAV, BINTAC, BINTAP])
BIDON = 1
BIH1C = 0
BIH1P = 0
BIH1V = 0
BIH2C = 0
BIH2P = 0
BIH2V = 0
BINC = saisies.get('BICREC', 0) - saisies.get('BICDEC', 0) + saisies.get('BICHREC', 0) - saisies.get('BICHDEC', 0)
BINP = saisies.get('BICREP', 0) - saisies.get('BICDEP', 0) + saisies.get('BICHREP', 0) - saisies.get('BICHDEP', 0)
BINV = saisies.get('BICREV', 0) - saisies.get('BICDEV', 0) + saisies.get('BICHREV', 0) - saisies.get('BICHDEV', 0)
BIPC = saisies.get('BICNOC', 0) - saisies.get('BICDNC', 0) + saisies.get('BIHNOC', 0) - saisies.get('BIHDNC', 0)
BIPP = saisies.get('BICNOP', 0) - saisies.get('BICDNP', 0) + saisies.get('BIHNOP', 0) - saisies.get('BIHDNP', 0)
BIPV = saisies.get('BICNOV', 0) - saisies.get('BICDNV', 0) + saisies.get('BIHNOV', 0) - saisies.get('BIHDNV', 0)
BN1 = sum([BN1V, BN1C, BN1P])
BN1C = saisies.get('BN1AC', 0) + saisies.get('PVINCE', 0) + saisies.get('INVENTC', 0)
BN1P = saisies.get('BN1AP', 0) + saisies.get('PVINPE', 0) + saisies.get('INVENTP', 0)
BN1V = saisies.get('BN1AV', 0) + saisies.get('PVINVE', 0) + saisies.get('INVENTV', 0)
BNCAADC1731 = 0
BNCAADP1731 = 0
BNCAFFC = is_positive(present(saisies.get('BNHREC', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BNHDEC', 0)) + present(saisies.get('BNCDEC', 0)))
BNCAFFP = is_positive(present(saisies.get('BNHREP', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BNHDEP', 0)) + present(saisies.get('BNCDEP', 0)))
BNCAFFV = is_positive(present(saisies.get('BNHREV', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BNHDEV', 0)) + present(saisies.get('BNCDEV', 0)))
BNCC = saisies.get('BNHREC', 0) + saisies.get('BNCREC', 0) - saisies.get('BNHDEC', 0) - saisies.get('BNCDEC', 0)
BNCCREAC = saisies.get('BNCCRC', 0) + saisies.get('BNCCRFC', 0)
BNCCREAP = saisies.get('BNCCRP', 0) + saisies.get('BNCCRFP', 0)
BNCCREAV = saisies.get('BNCCRV', 0) + saisies.get('BNCCRFV', 0)
BNCP = saisies.get('BNHREP', 0) + saisies.get('BNCREP', 0) - saisies.get('BNHDEP', 0) - saisies.get('BNCDEP', 0)
BNCV = saisies.get('BNHREV', 0) + saisies.get('BNCREV', 0) - saisies.get('BNHDEV', 0) - saisies.get('BNCDEV', 0)
BOOLENF = is_positive(saisies.get('V_0CF', 0) + saisies.get('V_0CH', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0CR', 0) + 0)
BOOL_0AM = is_positive(is_positive(saisies.get('V_0AM', 0) + 0) + is_positive(saisies.get('V_0AO', 0) + 0))
BOOL_0AZ = is_zero(saisies.get('V_0AZ', 0) - inf(saisies.get('V_0AZ', 0) / 10000) * 10000 - saisies.get('V_ANREV', 0))
BOOL_0BT = is_positive(saisies.get('V_0BT', 0) + 0) * is_positive(saisies.get('V_0AC', 0) + saisies.get('V_0AD', 0) + 0)
BOOL_W = is_positive(saisies.get('V_0AW', 0) + 0) * positif_ou_nul(AGV - LIM_AGE_LET_S)
BPCAPTAXC = saisies.get('PCAPTAXC', 0) - round(saisies.get('PCAPTAXC', 0) * TX_DEDPER / 100)
BPCAPTAXV = saisies.get('PCAPTAXV', 0) - round(saisies.get('PCAPTAXV', 0) * TX_DEDPER / 100)
BPTP19 = saisies.get('BPVSJ', 0) + saisies.get('GAINPEA', 0) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BPTP19WGWJ = 0
BPTP4 = saisies.get('BPCOPTV', 0) + saisies.get('BPCOPTC', 0) + saisies.get('BPVSK', 0) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BPTP4I = saisies.get('BPCOPTV', 0) + saisies.get('BPCOPTC', 0) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BQRESS = is_positive(saisies.get('CIBOIBAIL', 0) + saisies.get('CINRJBAIL', 0) + saisies.get('CRENRJ', 0) + saisies.get('CINRJ', 0) + saisies.get('CIDEP15', 0) + saisies.get('MATISOSI', 0) + saisies.get('MATISOSJ', 0) + saisies.get('VOLISO', 0) + saisies.get('PORENT', 0) + saisies.get('CHAUBOISN', 0) + saisies.get('POMPESP', 0) + saisies.get('POMPESR', 0) + saisies.get('CHAUFSOL', 0) + saisies.get('POMPESQ', 0) + saisies.get('ENERGIEST', 0) + saisies.get('DIAGPERF', 0) + saisies.get('RESCHAL', 0) + saisies.get('TRAMURWC', 0) + saisies.get('TRATOIVG', 0) + saisies.get('TRAVITWT', 0)) * 1 + 0
BQTRAV = is_positive(present(saisies.get('TRAVITWT', 0)) + present(saisies.get('COD7WU', 0)) * present(saisies.get('TRAMURWC', 0)) + present(saisies.get('COD7WB', 0)) + present(saisies.get('TRAVITWT', 0)) + present(saisies.get('COD7WU', 0)) * present(saisies.get('TRATOIVG', 0)) + present(saisies.get('COD7VH', 0)) + present(saisies.get('TRAVITWT', 0)) + present(saisies.get('COD7WU', 0)) * present(saisies.get('CHAUBOISN', 0)) + present(saisies.get('COD7RN', 0)) + present(saisies.get('TRAVITWT', 0)) + present(saisies.get('COD7WU', 0)) * present(saisies.get('POMPESR', 0)) + present(saisies.get('COD7RR', 0)) + present(saisies.get('CHAUFSOL', 0)) + present(saisies.get('COD7RS', 0)) + present(saisies.get('TRAVITWT', 0)) + present(saisies.get('COD7WU', 0)) * present(saisies.get('CIBOIBAIL', 0)) + present(saisies.get('COD7SA', 0)) + present(saisies.get('CINRJBAIL', 0)) + present(saisies.get('COD7SB', 0)) + present(saisies.get('POMPESP', 0)) + present(saisies.get('COD7RP', 0)) + present(saisies.get('POMPESQ', 0)) + present(saisies.get('COD7RQ', 0)) + present(saisies.get('ENERGIEST', 0)) + present(saisies.get('COD7RT', 0)) + present(saisies.get('TRAMURWC', 0)) + present(saisies.get('COD7WB', 0)) * present(saisies.get('TRATOIVG', 0)) + present(saisies.get('COD7VH', 0)) + present(saisies.get('TRAMURWC', 0)) + present(saisies.get('COD7WB', 0)) * present(saisies.get('CHAUBOISN', 0)) + present(saisies.get('COD7RN', 0)) + present(saisies.get('TRAMURWC', 0)) + present(saisies.get('COD7WB', 0)) * present(saisies.get('POMPESR', 0)) + present(saisies.get('COD7RR', 0)) + present(saisies.get('CHAUFSOL', 0)) + present(saisies.get('COD7RS', 0)) + present(saisies.get('TRAMURWC', 0)) + present(saisies.get('COD7WB', 0)) * present(saisies.get('CIBOIBAIL', 0)) + present(saisies.get('COD7SA', 0)) + present(saisies.get('CINRJBAIL', 0)) + present(saisies.get('COD7SB', 0)) + present(saisies.get('POMPESP', 0)) + present(saisies.get('COD7RP', 0)) + present(saisies.get('POMPESQ', 0)) + present(saisies.get('COD7RQ', 0)) + present(saisies.get('ENERGIEST', 0)) + present(saisies.get('COD7RT', 0)) + present(saisies.get('TRATOIVG', 0)) + present(saisies.get('COD7VH', 0)) * present(saisies.get('CHAUBOISN', 0)) + present(saisies.get('COD7RN', 0)) + present(saisies.get('TRATOIVG', 0)) + present(saisies.get('COD7VH', 0)) * present(saisies.get('CHAUBOISN', 0)) + present(saisies.get('COD7RN', 0)) + present(saisies.get('TRATOIVG', 0)) + present(saisies.get('COD7VH', 0)) * present(saisies.get('POMPESR', 0)) + present(saisies.get('COD7RR', 0)) + present(saisies.get('CHAUFSOL', 0)) + present(saisies.get('COD7RS', 0)) + present(saisies.get('TRATOIVG', 0)) + present(saisies.get('COD7VH', 0)) * present(saisies.get('CIBOIBAIL', 0)) + present(saisies.get('COD7SA', 0)) + present(saisies.get('CINRJBAIL', 0)) + present(saisies.get('COD7SB', 0)) + present(saisies.get('POMPESP', 0)) + present(saisies.get('COD7RP', 0)) + present(saisies.get('POMPESQ', 0)) + present(saisies.get('COD7RQ', 0)) + present(saisies.get('ENERGIEST', 0)) + present(saisies.get('COD7RT', 0)) + present(saisies.get('CHAUBOISN', 0)) + present(saisies.get('COD7RN', 0)) * present(saisies.get('POMPESR', 0)) + present(saisies.get('COD7RR', 0)) + present(saisies.get('CHAUFSOL', 0)) + present(saisies.get('COD7RS', 0)) + present(saisies.get('CHAUBOISN', 0)) + present(saisies.get('COD7RN', 0)) * present(saisies.get('CIBOIBAIL', 0)) + present(saisies.get('COD7SA', 0)) + present(saisies.get('CINRJBAIL', 0)) + present(saisies.get('COD7SB', 0)) + present(saisies.get('POMPESP', 0)) + present(saisies.get('COD7RP', 0)) + present(saisies.get('POMPESQ', 0)) + present(saisies.get('COD7RQ', 0)) + present(saisies.get('ENERGIEST', 0)) + present(saisies.get('COD7RT', 0)) + present(saisies.get('POMPESR', 0)) + present(saisies.get('COD7RR', 0)) + present(saisies.get('CHAUFSOL', 0)) + present(saisies.get('COD7RS', 0)) * present(saisies.get('CIBOIBAIL', 0)) + present(saisies.get('COD7SA', 0)) + present(saisies.get('CINRJBAIL', 0)) + present(saisies.get('COD7SB', 0)) + present(saisies.get('POMPESP', 0)) + present(saisies.get('COD7RP', 0)) + present(saisies.get('POMPESQ', 0)) + present(saisies.get('COD7RQ', 0)) + present(saisies.get('ENERGIEST', 0)) + present(saisies.get('COD7RT', 0))) + 0
BRCM = saisies.get('RCMABD', 0) + saisies.get('RCMTNC', 0) + saisies.get('RCMAV', 0) + saisies.get('RCMHAD', 0) + saisies.get('RCMHAB', 0) + saisies.get('REGPRIV', 0)
BRCM1731 = 0
BRCMP2 = 0
BRCMQ = saisies.get('REVACT', 0) + saisies.get('REVPEA', 0) + saisies.get('PROVIE', 0) + saisies.get('DISQUO', 0) + saisies.get('RESTUC', 0) + saisies.get('INTERE', 0)
BRCMTOT1731 = 0
BRCMTOTP2 = 0
BRCMTOT_P = 0
BRCM_P = 0
BRENOV = min(saisies.get('RIRENOV', 0), PLAF_RENOV)
BRFG = min(saisies.get('RDGARD1', 0), PLAF_REDGARD) + min(saisies.get('RDGARD2', 0), PLAF_REDGARD) + min(saisies.get('RDGARD3', 0), PLAF_REDGARD) + min(saisies.get('RDGARD4', 0), PLAF_REDGARD) + min(saisies.get('RDGARD1QAR', 0), PLAF_REDGARDQAR) + min(saisies.get('RDGARD2QAR', 0), PLAF_REDGARDQAR) + min(saisies.get('RDGARD3QAR', 0), PLAF_REDGARDQAR) + min(saisies.get('RDGARD4QAR', 0), PLAF_REDGARDQAR)
BSN1 = min(saisies.get('REPSNO3', 0) + saisies.get('REPSNO2', 0) + saisies.get('REPSNO1', 0) + saisies.get('REPSNON', 0) + saisies.get('PETIPRISE', 0), LIM_SOCNOUV2 * 1 + BOOL_0AM)
BSN2 = min(saisies.get('COD7CQ', 0) + saisies.get('COD7CR', 0) + saisies.get('RDSNO', 0), LIM_TITPRISE * 1 + BOOL_0AM - BSN1)
BSNCL = min(saisies.get('REPSNO3', 0), LIM_SOCNOUV2 * 1 + BOOL_0AM)
BSNCM = max(0, min(saisies.get('REPSNO2', 0), LIM_SOCNOUV2 * 1 + BOOL_0AM - BSNCL))
BSNCN = max(0, min(saisies.get('REPSNO1', 0), LIM_SOCNOUV2 * 1 + BOOL_0AM - BSNCL - BSNCM))
BSNCQ = max(0, min(saisies.get('COD7CQ', 0), LIM_TITPRISE * 1 + BOOL_0AM - BSN1))
BSNCR = max(0, min(saisies.get('COD7CR', 0), LIM_TITPRISE * 1 + BOOL_0AM - BSN1 - BSNCQ))
BSOCREP = min(saisies.get('RSOCREPRISE', 0), LIM_SOCREPR * 1 + BOOL_0AM)
BSOUFIP = min(saisies.get('FFIP', 0), LIM_SOUFIP * 1 + BOOL_0AM)
BTANTGECUM = saisies.get('V_BTGECUM', 0) * 1 - present(saisies.get('DEPMOBIL', 0)) + saisies.get('DEPMOBIL', 0)
BTANTGECUMWL = saisies.get('V_BTGECUMWL', 0) * 1 - present(saisies.get('COD7WD', 0)) + saisies.get('COD7WD', 0)
BTP18 = saisies.get('BPV18V', 0) + saisies.get('BPV18C', 0) * 1 - is_positive(saisies.get('IPVLOC', 0))
BTP2 = saisies.get('PEA', 0) * 1 - is_positive(saisies.get('IPVLOC', 0))
BTP3G = saisies.get('BPVRCM', 0) * 1 - is_positive(saisies.get('IPVLOC', 0))
BTP40 = saisies.get('BPV40V', 0) + saisies.get('BPV40C', 0) * 1 - is_positive(saisies.get('IPVLOC', 0))
BTP5 = saisies.get('PVIMPOS', 0) * 1 - is_positive(saisies.get('IPVLOC', 0))
BTPSB = saisies.get('PVTAXSB', 0) * 1 - is_positive(saisies.get('IPVLOC', 0))
BTPSJ = saisies.get('BPVSJ', 0) * 1 - is_positive(saisies.get('IPVLOC', 0))
BTPSK = saisies.get('BPVSK', 0) * 1 - is_positive(saisies.get('IPVLOC', 0))
BTPVT = saisies.get('GAINPEA', 0) * 1 - is_positive(saisies.get('IPVLOC', 0))
CAPBASE_IRECT = 0
CDIS_A = 0
CELSOMJ = saisies.get('CELLIERJA', 0) + saisies.get('CELLIERJD', 0) + saisies.get('CELLIERJE', 0) + saisies.get('CELLIERJF', 0) + saisies.get('CELLIERJH', 0) + saisies.get('CELLIERJJ', 0) + saisies.get('CELLIERJK', 0) + saisies.get('CELLIERJM', 0) + saisies.get('CELLIERJN', 0)
CELSOMN = saisies.get('CELLIERNA', 0) + saisies.get('CELLIERNC', 0) + saisies.get('CELLIERND', 0) + saisies.get('CELLIERNE', 0) + saisies.get('CELLIERNF', 0) + saisies.get('CELLIERNH', 0) + saisies.get('CELLIERNI', 0) + saisies.get('CELLIERNJ', 0) + saisies.get('CELLIERNK', 0) + saisies.get('CELLIERNM', 0) + saisies.get('CELLIERNN', 0) + saisies.get('CELLIERNO', 0)
CGLOA_A = 0
CHRBASE_A = 0
CI2CK = saisies.get('COD2CK', 0) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)))
CICA = round(saisies.get('BAILOC98', 0) * TX_BAIL / 100) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
CIDIREPARGNE = saisies.get('DIREPARGNE', 0) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)))
CIEXCEDENT = round(saisies.get('COD3VE', 0) * TX45 / 100 + saisies.get('COD3UV', 0) * TX30 / 100) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
CIGLOTOT = saisies.get('COD8XF', 0) + saisies.get('COD8XG', 0) + saisies.get('COD8XH', 0)
CIIMPPROTOT = saisies.get('CIIMPPRO', 0) + saisies.get('CIIMPPRO2', 0)
CIRDSAC = 0
COPETO = 10 if (saisies.get('CMAJ', 0) == 7 or saisies.get('CMAJ', 0) == 10 or saisies.get('CMAJ', 0) == 17 or saisies.get('CMAJ', 0) == 18) else (40 if (saisies.get('CMAJ', 0) == 8 or saisies.get('CMAJ', 0) == 11) else 80)
COPETOISF = 10 if (saisies.get('CMAJ_ISF', 0) == 7 or saisies.get('CMAJ_ISF', 0) == 17 or saisies.get('CMAJ_ISF', 0) == 18) else (40 if (saisies.get('CMAJ_ISF', 0) == 8 or saisies.get('CMAJ_ISF', 0) == 34) else 0)
CRDSIM_A = 0
CRESINTER = saisies.get('PRESINTER', 0)
CRICH = saisies.get('IPRECH', 0) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
CSGDED3UA = is_positive(saisies.get('ABDETPLUS', 0) + 0) * min(round(saisies.get('ABDETPLUS', 0) + saisies.get('COD3UA', 0) + 0 * TX051 / 100), saisies.get('COD3UA', 0))
CSGIM_A = 0
CSG_A = 0
CSPROVRSE2 = saisies.get('CSPROVYF', 0) + saisies.get('CSPROVYN', 0)
CSPROVRSE4 = saisies.get('CSPROVYH', 0) + saisies.get('CSPROVYP', 0)
CS_DEG = 0
CS_PREREV = saisies.get('PREREV', 0)
CS_R1649 = saisies.get('R1649', 0)
CS_RE168 = saisies.get('RE168', 0)
CS_REVETRANG = 0
CS_RVORIGND = saisies.get('ESFP', 0)
CS_TAX1649 = saisies.get('TAX1649', 0)
CUMPENEXTEF = sum([TPRRV, TPRRC, TPRR1, TPRR2, TPRR3, TPRR4])
CVNSALC = round(BCVNSAL * TX10 / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
CVN_A = 0
DABNCNP = saisies.get('DABNCNP1', 0) + saisies.get('DABNCNP2', 0) + saisies.get('DABNCNP3', 0) + saisies.get('DABNCNP4', 0) + saisies.get('DABNCNP5', 0) + saisies.get('DABNCNP6', 0)
DABNCNP11731 = 0
DABNCNP21731 = 0
DABNCNP31731 = 0
DABNCNP41731 = 0
DABNCNP51731 = 0
DABNCNP61731 = 0
DAGRI = saisies.get('DAGRI1', 0) + saisies.get('DAGRI2', 0) + saisies.get('DAGRI3', 0) + saisies.get('DAGRI4', 0) + saisies.get('DAGRI5', 0) + saisies.get('DAGRI6', 0)
DAGRI11731 = 0
DAGRI21731 = 0
DAGRI31731 = 0
DAGRI41731 = 0
DAGRI51731 = 0
DAGRI61731 = 0
DAGRIIMP1731 = 0
DAGRIIMPP2 = 0
DAGRIIMP_P = 0
DAIDC = saisies.get('CREAIDE', 0)
DAIDE = saisies.get('RVAIDE', 0) + saisies.get('RVAIDAS', 0)
DAR_REP = sum([saisies.get('DEFAA0', 0), saisies.get('DEFAA1', 0), saisies.get('DEFAA2', 0), saisies.get('DEFAA3', 0), saisies.get('DEFAA4', 0)]) * 1 - is_positive(saisies.get('IPVLOC', 0))
DBACT = 0 if (saisies.get('APPLI_COLBERT', 0) == 0 and present(saisies.get('RDCOM', 0)) == 1 and present(saisies.get('NBACT', 0)) == 0) else saisies.get('NBACT', 0)
DCEL = CELSOMN
DCEL2012 = CELSOMJ
DCELCOM = saisies.get('CELLIERNP', 0) + saisies.get('CELLIERNR', 0) + saisies.get('CELLIERNS', 0) + saisies.get('CELLIERNT', 0)
DCELFABC = saisies.get('CELLIERFA', 0) + saisies.get('CELLIERFB', 0) + saisies.get('CELLIERFC', 0)
DCELFD = saisies.get('CELLIERFD', 0)
DCELHJK = saisies.get('CELLIERHJ', 0) + saisies.get('CELLIERHK', 0)
DCELHL = saisies.get('CELLIERHL', 0)
DCELHM = saisies.get('CELLIERHM', 0)
DCELHNO = saisies.get('CELLIERHN', 0) + saisies.get('CELLIERHO', 0)
DCELJBGL = saisies.get('CELLIERJB', 0) + saisies.get('CELLIERJG', 0) + saisies.get('CELLIERJL', 0)
DCELJOQR = saisies.get('CELLIERJO', 0) + saisies.get('CELLIERJQ', 0) + saisies.get('CELLIERJR', 0)
DCELJP = saisies.get('CELLIERJP', 0)
DCELNBGL = saisies.get('CELLIERNB', 0) + saisies.get('CELLIERNG', 0) + saisies.get('CELLIERNL', 0)
DCELNQ = saisies.get('CELLIERNQ', 0)
DCELREPGJ = saisies.get('CELREPGJ', 0)
DCELREPGK = saisies.get('CELREPGK', 0)
DCELREPGL = saisies.get('CELREPGL', 0)
DCELREPGP = saisies.get('CELREPGP', 0)
DCELREPGS = saisies.get('CELREPGS', 0)
DCELREPGT = saisies.get('CELREPGT', 0)
DCELREPGU = saisies.get('CELREPGU', 0)
DCELREPGV = saisies.get('CELREPGV', 0)
DCELREPGW = saisies.get('CELREPGW', 0)
DCELREPGX = saisies.get('CELREPGX', 0)
DCELREPHA = saisies.get('CELREPHA', 0)
DCELREPHB = saisies.get('CELREPHB', 0)
DCELREPHD = saisies.get('CELREPHD', 0)
DCELREPHE = saisies.get('CELREPHE', 0)
DCELREPHF = saisies.get('CELREPHF', 0)
DCELREPHG = saisies.get('CELREPHG', 0)
DCELREPHH = saisies.get('CELREPHH', 0)
DCELREPHR = saisies.get('CELREPHR', 0)
DCELREPHS = saisies.get('CELREPHS', 0)
DCELREPHT = saisies.get('CELREPHT', 0)
DCELREPHU = saisies.get('CELREPHU', 0)
DCELREPHV = saisies.get('CELREPHV', 0)
DCELREPHW = saisies.get('CELREPHW', 0)
DCELREPHX = saisies.get('CELREPHX', 0)
DCELREPHZ = saisies.get('CELREPHZ', 0)
DCELREPYA = saisies.get('CELREPYA', 0)
DCELREPYB = saisies.get('CELREPYB', 0)
DCELREPYC = saisies.get('CELREPYC', 0)
DCELREPYD = saisies.get('CELREPYD', 0)
DCELREPYE = saisies.get('CELREPYE', 0)
DCELREPYF = saisies.get('CELREPYF', 0)
DCELREPYG = saisies.get('CELREPYG', 0)
DCELREPYH = saisies.get('CELREPYH', 0)
DCELREPYI = saisies.get('CELREPYI', 0)
DCELREPYJ = saisies.get('CELREPYJ', 0)
DCELREPYK = saisies.get('CELREPYK', 0)
DCELREPYL = saisies.get('CELREPYL', 0)
DCELRREDLA = saisies.get('CELRREDLA', 0)
DCELRREDLB = saisies.get('CELRREDLB', 0)
DCELRREDLC = saisies.get('CELRREDLC', 0)
DCELRREDLD = saisies.get('CELRREDLD', 0)
DCELRREDLE = saisies.get('CELRREDLE', 0)
DCELRREDLF = saisies.get('CELRREDLF', 0)
DCELRREDLM = saisies.get('CELRREDLM', 0)
DCELRREDLN = saisies.get('CELRREDLN', 0)
DCELRREDLS = saisies.get('CELRREDLS', 0)
DCELRREDLT = saisies.get('CELRREDLT', 0)
DCELRREDLX = saisies.get('CELRREDLX', 0)
DCELRREDLZ = saisies.get('CELRREDLZ', 0)
DCELRREDMG = saisies.get('CELRREDMG', 0)
DCELRREDMH = saisies.get('CELRREDMH', 0)
DCINE = saisies.get('CINE1', 0) + saisies.get('CINE2', 0)
DCODJTJU = saisies.get('LOCMEUBJT', 0) + saisies.get('LOCMEUBJU', 0)
DCODOU = saisies.get('COD7OU', 0)
DCOLENT = saisies.get('INVOMREP', 0) + saisies.get('NRETROC50', 0) + saisies.get('NRETROC40', 0) + saisies.get('INVENDI', 0) + saisies.get('INVOMENTMN', 0) + saisies.get('RETROCOMLH', 0) + saisies.get('RETROCOMMB', 0) + saisies.get('INVOMENTKT', 0) + saisies.get('RETROCOMLI', 0) + saisies.get('RETROCOMMC', 0) + saisies.get('INVOMENTKU', 0) + saisies.get('INVOMQV', 0) + saisies.get('INVENDEB2009', 0) + saisies.get('INVRETRO1', 0) + saisies.get('INVRETRO2', 0) + saisies.get('INVIMP', 0) + saisies.get('INVDOMRET50', 0) + saisies.get('INVDOMRET60', 0) + saisies.get('INVDIR2009', 0) + saisies.get('INVOMRETPA', 0) + saisies.get('INVOMRETPB', 0) + saisies.get('INVOMRETPD', 0) + saisies.get('INVOMRETPE', 0) + saisies.get('INVOMRETPF', 0) + saisies.get('INVOMRETPH', 0) + saisies.get('INVOMRETPI', 0) + saisies.get('INVOMRETPJ', 0) + saisies.get('INVOMRETPL', 0) + saisies.get('INVOMRETPM', 0) + saisies.get('INVOMRETPN', 0) + saisies.get('INVOMRETPO', 0) + saisies.get('INVOMRETPP', 0) + saisies.get('INVOMRETPR', 0) + saisies.get('INVOMRETPS', 0) + saisies.get('INVOMRETPT', 0) + saisies.get('INVOMRETPU', 0) + saisies.get('INVOMRETPW', 0) + saisies.get('INVOMRETPX', 0) + saisies.get('INVOMRETPY', 0) + saisies.get('INVOMENTRG', 0) + saisies.get('INVOMENTRI', 0) + saisies.get('INVOMENTRJ', 0) + saisies.get('INVOMENTRK', 0) + saisies.get('INVOMENTRL', 0) + saisies.get('INVOMENTRM', 0) + saisies.get('INVOMENTRO', 0) + saisies.get('INVOMENTRP', 0) + saisies.get('INVOMENTRQ', 0) + saisies.get('INVOMENTRR', 0) + saisies.get('INVOMENTRT', 0) + saisies.get('INVOMENTRU', 0) + saisies.get('INVOMENTRV', 0) + saisies.get('INVOMENTRW', 0) + saisies.get('INVOMENTRY', 0) + saisies.get('INVOMENTNU', 0) + saisies.get('INVOMENTNV', 0) + saisies.get('INVOMENTNW', 0) + saisies.get('INVOMENTNY', 0) + saisies.get('CODHSA', 0) + saisies.get('CODHSB', 0) + saisies.get('CODHSC', 0) + saisies.get('CODHSE', 0) + saisies.get('CODHSF', 0) + saisies.get('CODHSG', 0) + saisies.get('CODHSH', 0) + saisies.get('CODHSJ', 0) + saisies.get('CODHSK', 0) + saisies.get('CODHSL', 0) + saisies.get('CODHSM', 0) + saisies.get('CODHSO', 0) + saisies.get('CODHSP', 0) + saisies.get('CODHSQ', 0) + saisies.get('CODHSR', 0) + saisies.get('CODHST', 0) + saisies.get('CODHSU', 0) + saisies.get('CODHSV', 0) + saisies.get('CODHSW', 0) + saisies.get('CODHSY', 0) + saisies.get('CODHSZ', 0) + saisies.get('CODHTA', 0) + saisies.get('CODHTB', 0) + saisies.get('CODHTD', 0)
DCOMP = saisies.get('RDCOM', 0)
DCOTFOR = saisies.get('COTFORET', 0)
DCREAT = saisies.get('CONVCREA', 0)
DCREATHANDI = saisies.get('CONVHAND', 0)
DCSGIM_A = 0
DDCSG = saisies.get('V_BTCSGDED', 0) * 1 - present(saisies.get('DCSG', 0)) + saisies.get('DCSG', 0) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) + is_positive(saisies.get('RCMSOC', 0) + 0) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0))) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * round(min(saisies.get('RCMSOC', 0), saisies.get('RCMABD', 0) + saisies.get('REVACT', 0) + saisies.get('RCMAV', 0) + saisies.get('PROVIE', 0) + saisies.get('RCMHAD', 0) + saisies.get('DISQUO', 0) + saisies.get('RCMHAB', 0) + saisies.get('INTERE', 0)) * TX051 / 100)
DDEVDUR = saisies.get('CIBOIBAIL', 0) + saisies.get('COD7SA', 0) + saisies.get('CINRJBAIL', 0) + saisies.get('COD7SB', 0) + saisies.get('CRENRJ', 0) + saisies.get('COD7SC', 0) + saisies.get('TRAMURWC', 0) + saisies.get('COD7WB', 0) + saisies.get('CINRJ', 0) + saisies.get('COD7RG', 0) + saisies.get('TRATOIVG', 0) + saisies.get('COD7VH', 0) + saisies.get('CIDEP15', 0) + saisies.get('COD7RH', 0) + saisies.get('MATISOSI', 0) + saisies.get('COD7RI', 0) + saisies.get('TRAVITWT', 0) + saisies.get('COD7WU', 0) + saisies.get('MATISOSJ', 0) + saisies.get('COD7RJ', 0) + saisies.get('VOLISO', 0) + saisies.get('COD7RK', 0) + saisies.get('PORENT', 0) + saisies.get('COD7RL', 0) + saisies.get('CHAUBOISN', 0) + saisies.get('COD7RN', 0) + saisies.get('POMPESP', 0) + saisies.get('COD7RP', 0) + saisies.get('POMPESR', 0) + saisies.get('COD7RR', 0) + saisies.get('CHAUFSOL', 0) + saisies.get('COD7RS', 0) + saisies.get('POMPESQ', 0) + saisies.get('COD7RQ', 0) + saisies.get('ENERGIEST', 0) + saisies.get('COD7RT', 0) + saisies.get('DIAGPERF', 0) + saisies.get('COD7TV', 0) + saisies.get('RESCHAL', 0) + saisies.get('COD7TW', 0) + saisies.get('COD7RV', 0) + saisies.get('COD7RW', 0) + saisies.get('COD7RZ', 0)
DDIFAGRI = saisies.get('INTDIFAGRI', 0)
DDOMSOC1 = saisies.get('INVSOCNRET', 0) + saisies.get('INVOMSOCKH', 0) + saisies.get('INVOMSOCKI', 0) + saisies.get('INVSOC2010', 0) + saisies.get('INVOMSOCQU', 0) + saisies.get('INVLOGSOC', 0) + saisies.get('INVOMSOCQJ', 0) + saisies.get('INVOMSOCQS', 0) + saisies.get('INVOMSOCQW', 0) + saisies.get('INVOMSOCQX', 0) + saisies.get('CODHRA', 0) + saisies.get('CODHRB', 0) + saisies.get('CODHRC', 0) + saisies.get('CODHRD', 0)
DDONS = saisies.get('RDDOUP', 0) + saisies.get('DONAUTRE', 0) + saisies.get('REPDON03', 0) + saisies.get('REPDON04', 0) + saisies.get('REPDON05', 0) + saisies.get('REPDON06', 0) + saisies.get('REPDON07', 0) + saisies.get('COD7UH', 0)
DDUFLOEKL = saisies.get('DUFLOEK', 0) + saisies.get('DUFLOEL', 0)
DDUFLOGIH = saisies.get('DUFLOGI', 0) + saisies.get('DUFLOGH', 0)
DEC111731 = 0
DEDIV = 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * saisies.get('CHRDED', 0)
DEDMIN1 = is_positive(saisies.get('DETS1', 0)) * MIN_DEMEMPLOI + 1 - is_positive(saisies.get('DETS1', 0)) * MIN_DEDSFORFTS
DEDMIN2 = is_positive(saisies.get('DETS2', 0)) * MIN_DEMEMPLOI + 1 - is_positive(saisies.get('DETS2', 0)) * MIN_DEDSFORFTS
DEDMIN3 = is_positive(saisies.get('DETS3', 0)) * MIN_DEMEMPLOI + 1 - is_positive(saisies.get('DETS3', 0)) * MIN_DEDSFORFTS
DEDMIN4 = is_positive(saisies.get('DETS4', 0)) * MIN_DEMEMPLOI + 1 - is_positive(saisies.get('DETS4', 0)) * MIN_DEDSFORFTS
DEDMINC = is_positive(saisies.get('DETSC', 0)) * MIN_DEMEMPLOI + 1 - is_positive(saisies.get('DETSC', 0)) * MIN_DEDSFORFTS
DEDMINV = is_positive(saisies.get('DETSV', 0)) * MIN_DEMEMPLOI + 1 - is_positive(saisies.get('DETSV', 0)) * MIN_DEDSFORFTS
DEDSP = sum([DEDS1, DEDS2, DEDS3, DEDS4])
DEFBANI1731 = 0
DEFBANIP2 = 0
DEFBANI_P = 0
DEFBIC11731 = 0
DEFBIC21731 = 0
DEFBIC31731 = 0
DEFBIC41731 = 0
DEFBIC51731 = 0
DEFBIC61731 = 0
DEFBNCNP1731 = 0
DEFBNCNPP2 = 0
DEFBNCNP_P = 0
DEFLOCNP1731 = 0
DEFLOCNPP2 = 0
DEFLOCNP_P = 0
DEFNP = sum([min(saisies.get('DEFBIC1', 0), DEFBIC11731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('DEFBIC1', 0) * 1 - is_positive(ART1731BIS * PREM8_11), min(saisies.get('DEFBIC2', 0), DEFBIC21731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('DEFBIC2', 0) * 1 - is_positive(ART1731BIS * PREM8_11), min(saisies.get('DEFBIC3', 0), DEFBIC31731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('DEFBIC3', 0) * 1 - is_positive(ART1731BIS * PREM8_11), min(saisies.get('DEFBIC4', 0), DEFBIC41731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('DEFBIC4', 0) * 1 - is_positive(ART1731BIS * PREM8_11), min(saisies.get('DEFBIC5', 0), DEFBIC51731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('DEFBIC5', 0) * 1 - is_positive(ART1731BIS * PREM8_11), min(saisies.get('DEFBIC6', 0), DEFBIC61731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('DEFBIC6', 0) * 1 - is_positive(ART1731BIS * PREM8_11)])
DEFNPI1731 = 0
DEFNPIP2 = 0
DEFNPI_P = 0
DEFRF4BB = 0
DEFRF4BC = 0
DEFRF4BD = 0
DEFRFNONI = 0
DEFRIBAINFBIS = 0
DEFRIBASUP = 0
DEFRIBASUPBIS = 0
DEFRIBIC = 0
DEFRIBICBIS = 0
DEFRIBNC = 0
DEFRIBNCBIS = 0
DEFRIGLOBINF = 0
DEFRIGLOBINFBIS = 0
DEFRIGLOBSUP = 0
DEFRIGLOBSUPBIS = 0
DEFRILOC = 0
DEFRILOCBIS = 0
DEFRIMOND = 0
DEFRIMONDBIS = 0
DEFRIRCM = 0
DEFRIRCMBIS = 0
DEFRIRF = 0
DEFRIRFBIS = 0
DEFRITS = 0
DEFRITSBIS = 0
DEFTS = 1 - is_positive(sum([TSNTV + PRNNV, TSNTC + PRNNC, TSNT1 + PRNN1, TSNT2 + PRNN2, TSNT3 + PRNN3, TSNT4 + PRNN4]) - sum([GLN1, GLN2, GLN3])) * abs(sum([TSNTV + PRNNV, TSNTC + PRNNC, TSNT1 + PRNN1, TSNT2 + PRNN2, TSNT3 + PRNN3, TSNT4 + PRNN4]) - sum([GLN1, GLN2, GLN3])) * 1 - is_positive(saisies.get('APPLI_COLBERT', 0))
DENPLOCAFFC = is_positive(present(saisies.get('LOCNPCGAC', 0)) + present(saisies.get('LOCGITCC', 0)) + present(saisies.get('LOCDEFNPCGAC', 0)) + present(saisies.get('LOCNPC', 0)) + present(saisies.get('LOCGITHCC', 0)) + present(saisies.get('LOCDEFNPC', 0)))
DENPLOCAFFP = is_positive(present(saisies.get('LOCNPCGAPAC', 0)) + present(saisies.get('LOCGITCP', 0)) + present(saisies.get('LOCDEFNPCGAPAC', 0)) + present(saisies.get('LOCNPPAC', 0)) + present(saisies.get('LOCGITHCP', 0)) + present(saisies.get('LOCDEFNPPAC', 0)))
DENPLOCAFFV = is_positive(present(saisies.get('LOCNPCGAV', 0)) + present(saisies.get('LOCGITCV', 0)) + present(saisies.get('LOCDEFNPCGAV', 0)) + present(saisies.get('LOCNPV', 0)) + present(saisies.get('LOCGITHCV', 0)) + present(saisies.get('LOCDEFNPV', 0)))
DENPLOCC = saisies.get('LOCNPCGAC', 0) + saisies.get('LOCGITCC', 0) - saisies.get('LOCDEFNPCGAC', 0) + saisies.get('LOCNPC', 0) + saisies.get('LOCGITHCC', 0) - saisies.get('LOCDEFNPC', 0)
DENPLOCP = saisies.get('LOCNPCGAPAC', 0) + saisies.get('LOCGITCP', 0) - saisies.get('LOCDEFNPCGAPAC', 0) + saisies.get('LOCNPPAC', 0) + saisies.get('LOCGITHCP', 0) - saisies.get('LOCDEFNPPAC', 0)
DENPLOCV = saisies.get('LOCNPCGAV', 0) + saisies.get('LOCGITCV', 0) - saisies.get('LOCDEFNPCGAV', 0) + saisies.get('LOCNPV', 0) + saisies.get('LOCGITHCV', 0) - saisies.get('LOCDEFNPV', 0)
DEPCHO = saisies.get('DEPCHOBAS', 0) + saisies.get('CIBOIBAIL', 0) + saisies.get('COD7SA', 0) + saisies.get('CINRJBAIL', 0) + saisies.get('COD7SB', 0) + saisies.get('CRENRJ', 0) + saisies.get('COD7SC', 0) + saisies.get('TRAMURWC', 0) + saisies.get('COD7WB', 0) + saisies.get('CINRJ', 0) + saisies.get('COD7RG', 0) + saisies.get('TRATOIVG', 0) + saisies.get('COD7VH', 0) + saisies.get('CIDEP15', 0) + saisies.get('COD7RH', 0) + saisies.get('MATISOSI', 0) + saisies.get('COD7RI', 0) + saisies.get('TRAVITWT', 0) + saisies.get('COD7WU', 0) + saisies.get('MATISOSJ', 0) + saisies.get('COD7RJ', 0) + saisies.get('VOLISO', 0) + saisies.get('COD7RK', 0) + saisies.get('PORENT', 0) + saisies.get('COD7RL', 0) + saisies.get('CHAUBOISN', 0) + saisies.get('COD7RN', 0) + saisies.get('POMPESP', 0) + saisies.get('COD7RP', 0) + saisies.get('POMPESR', 0) + saisies.get('COD7RR', 0) + saisies.get('CHAUFSOL', 0) + saisies.get('COD7RS', 0) + saisies.get('POMPESQ', 0) + saisies.get('COD7RQ', 0) + saisies.get('ENERGIEST', 0) + saisies.get('COD7RT', 0) + saisies.get('DIAGPERF', 0) + saisies.get('COD7TV', 0) + saisies.get('RESCHAL', 0) + saisies.get('COD7TW', 0) + saisies.get('COD7RV', 0) + saisies.get('COD7RW', 0) + saisies.get('COD7RZ', 0) * is_positive(saisies.get('V_NOTRAIT', 0) - 10)
DEPLOCC = saisies.get('LOCPROCGAC', 0) - saisies.get('LOCDEFPROCGAC', 0) + saisies.get('LOCPROC', 0) - saisies.get('LOCDEFPROC', 0)
DEPLOCP = saisies.get('LOCPROCGAP', 0) - saisies.get('LOCDEFPROCGAP', 0) + saisies.get('LOCPROP', 0) - saisies.get('LOCDEFPROP', 0)
DEPLOCV = saisies.get('LOCPROCGAV', 0) - saisies.get('LOCDEFPROCGAV', 0) + saisies.get('LOCPROV', 0) - saisies.get('LOCDEFPROV', 0)
DEPMOB = saisies.get('DEPMOBIL', 0) + saisies.get('RDEQPAHA', 0) + saisies.get('RDTECH', 0) + saisies.get('COD7WD', 0) * is_positive(saisies.get('V_NOTRAIT', 0) - 10)
DESV = saisies.get('REPSOF', 0)
DFACC = saisies.get('CHRFAC', 0)
DFANTPROV1731 = 0
DFANTPROVP2 = 0
DFANTPROV_P = 0
DFBICNPF1731 = 0
DFBICNPFP2 = 0
DFBICNPF_P = 0
DFIPC = saisies.get('FIPCORSE', 0)
DFIPDOM = saisies.get('FIPDOMCOM', 0)
DFORET = saisies.get('FORET', 0)
DGARD = sum([saisies.get('RDGARD1', 0), saisies.get('RDGARD2', 0), saisies.get('RDGARD3', 0), saisies.get('RDGARD4', 0)]) + sum([saisies.get('RDGARD1QAR', 0), saisies.get('RDGARD2QAR', 0), saisies.get('RDGARD3QAR', 0), saisies.get('RDGARD4QAR', 0)])
DHEBE = saisies.get('RVCURE', 0) + saisies.get('RCCURE', 0)
DIDABNCNP11731 = 0
DIDABNCNP1P2 = 0
DIDABNCNP1_P = 0
DIDOMPRO1731 = 0
DIDOMPROP2 = 0
DIDOMPRO_P = 0
DIEMPLOI = saisies.get('COD8UW', 0) + saisies.get('COD8TL', 0) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
DIFF7WD_A = 0
DIFF7WY_A = 0
DIFF7WZ_A = 0
DILMIA = saisies.get('LOCMEUBIA', 0)
DILMIB = saisies.get('LOCMEUBIB', 0)
DILMIC = saisies.get('LOCMEUBIC', 0)
DILMIH = saisies.get('LOCMEUBIH', 0)
DILMIX = saisies.get('LOCMEUBIX', 0)
DILMIY = saisies.get('LOCMEUBIY', 0)
DILMIZ = saisies.get('LOCMEUBIZ', 0)
DILMJC = saisies.get('LOCMEUBJC', 0)
DILMJI = saisies.get('LOCMEUBJI', 0)
DILMJS = saisies.get('LOCMEUBJS', 0)
DILMJV = saisies.get('LOCMEUBJV', 0)
DILMJW = saisies.get('LOCMEUBJW', 0)
DILMJX = saisies.get('LOCMEUBJX', 0)
DILMJY = saisies.get('LOCMEUBJY', 0)
DILMOA = saisies.get('COD7OA', 0)
DILMOB = saisies.get('COD7OB', 0)
DILMOC = saisies.get('COD7OC', 0)
DILMOD = saisies.get('COD7OD', 0)
DILMOE = saisies.get('COD7OE', 0)
DILMPA = saisies.get('COD7PA', 0)
DILMPB = saisies.get('COD7PB', 0)
DILMPC = saisies.get('COD7PC', 0)
DILMPD = saisies.get('COD7PD', 0)
DILMPE = saisies.get('COD7PE', 0)
DINVRED = saisies.get('INVREDMEU', 0)
DISFBASE = saisies.get('ISFBASE', 0)
DISFDONCEE = saisies.get('ISFDONEURO', 0)
DISFDONF = saisies.get('ISFDONF', 0)
DISFE = saisies.get('ISFETRANG', 0)
DISFFCPI = saisies.get('ISFFCPI', 0)
DISFFIP = saisies.get('ISFFIP', 0)
DISFPLAF = saisies.get('ISFPLAF', 0)
DISFPMED = saisies.get('ISFPMEDI', 0)
DISFPMEI = saisies.get('ISFPMEIN', 0)
DLOCENT = saisies.get('CODHAA', 0) + saisies.get('CODHAB', 0) + saisies.get('CODHAC', 0) + saisies.get('CODHAD', 0) + saisies.get('CODHAF', 0) + saisies.get('CODHAG', 0) + saisies.get('CODHAH', 0) + saisies.get('CODHAI', 0) + saisies.get('CODHAK', 0) + saisies.get('CODHAL', 0) + saisies.get('CODHAM', 0) + saisies.get('CODHAN', 0) + saisies.get('CODHAP', 0) + saisies.get('CODHAQ', 0) + saisies.get('CODHAR', 0) + saisies.get('CODHAS', 0) + saisies.get('CODHAU', 0) + saisies.get('CODHAV', 0) + saisies.get('CODHAW', 0) + saisies.get('CODHAX', 0) + saisies.get('CODHBA', 0) + saisies.get('CODHBB', 0) + saisies.get('CODHBE', 0) + saisies.get('CODHBF', 0)
DLOCIDEFG = saisies.get('LOCMEUBID', 0) + saisies.get('LOCMEUBIE', 0) + saisies.get('LOCMEUBIF', 0) + saisies.get('LOCMEUBIG', 0)
DLOGDOM = saisies.get('INVLOG2008', 0) + saisies.get('INVLGDEB2009', 0) + saisies.get('INVLGDEB', 0) + saisies.get('INVLGAUTRE', 0) + saisies.get('INVLGDEB2010', 0) + saisies.get('INVLOG2009', 0) + saisies.get('INVOMLOGOA', 0) + saisies.get('INVOMLOGOB', 0) + saisies.get('INVOMLOGOC', 0) + saisies.get('INVOMLOGOH', 0) + saisies.get('INVOMLOGOI', 0) + saisies.get('INVOMLOGOJ', 0) + saisies.get('INVOMLOGOK', 0) + saisies.get('INVOMLOGOL', 0) + saisies.get('INVOMLOGOM', 0) + saisies.get('INVOMLOGON', 0) + saisies.get('INVOMLOGOO', 0) + saisies.get('INVOMLOGOP', 0) + saisies.get('INVOMLOGOQ', 0) + saisies.get('INVOMLOGOR', 0) + saisies.get('INVOMLOGOS', 0) + saisies.get('INVOMLOGOT', 0) + saisies.get('INVOMLOGOU', 0) + saisies.get('INVOMLOGOV', 0) + saisies.get('INVOMLOGOW', 0) + saisies.get('CODHOD', 0) + saisies.get('CODHOE', 0) + saisies.get('CODHOF', 0) + saisies.get('CODHOG', 0) + saisies.get('CODHOX', 0) + saisies.get('CODHOY', 0) + saisies.get('CODHOZ', 0) + saisies.get('CODHUA', 0) + saisies.get('CODHUB', 0) + saisies.get('CODHUC', 0) + saisies.get('CODHUD', 0) + saisies.get('CODHUE', 0) + saisies.get('CODHUF', 0) + saisies.get('CODHUG', 0)
DLOGSOC = saisies.get('CODHXA', 0) + saisies.get('CODHXB', 0) + saisies.get('CODHXC', 0) + saisies.get('CODHXE', 0)
DLOYIMP = saisies.get('LOYIMP', 0)
DMEUBLE = saisies.get('REPMEUBLE', 0)
DMONDT = max(0, saisies.get('RMOND', 0) + saisies.get('DEFZU', 0) - saisies.get('DMOND', 0))
DMOND_1 = saisies.get('DMOND', 0)
DNBE = saisies.get('RDENS', 0) + saisies.get('RDENL', 0) + saisies.get('RDENU', 0) + saisies.get('RDENSQAR', 0) + saisies.get('RDENLQAR', 0) + saisies.get('RDENUQAR', 0)
DNETU = sum([saisies.get('CHENF1', 0), saisies.get('CHENF2', 0), saisies.get('CHENF3', 0), saisies.get('CHENF4', 0)])
DNOCEP1731 = 0
DNOCEPC1731 = 0
DNOCEPCP2 = 0
DNOCEPC_P = 0
DNOCEPP1731 = 0
DNOCEPP2 = 0
DNOCEPPP2 = 0
DNOCEPP_P = 0
DNOCEP_P = 0
DNOUV = saisies.get('REPSNO3', 0) + saisies.get('REPSNO2', 0) + saisies.get('REPSNO1', 0) + saisies.get('REPSNON', 0) + saisies.get('COD7CQ', 0) + saisies.get('COD7CR', 0) + saisies.get('PETIPRISE', 0) + saisies.get('RDSNO', 0)
DNPLOCIMPU1731 = 0
DNPLOCIMPUP2 = 0
DNPLOCIMPU_P = 0
DPALE = sum([saisies.get('CHENF1', 0) + saisies.get('NCHENF1', 0), saisies.get('CHENF2', 0) + saisies.get('NCHENF2', 0), saisies.get('CHENF3', 0) + saisies.get('NCHENF3', 0), saisies.get('CHENF4', 0) + saisies.get('NCHENF4', 0)])
DPALP = saisies.get('PAAV', 0) + saisies.get('PAAP', 0)
DPATNAT = saisies.get('PATNAT4', 0)
DPATNAT1 = saisies.get('PATNAT1', 0)
DPATNAT2 = saisies.get('PATNAT2', 0)
DPATNAT3 = saisies.get('PATNAT3', 0)
DPERPC = saisies.get('PERP_COTC', 0) + saisies.get('RACCOTC', 0)
DPERPP = saisies.get('PERP_COTP', 0) + saisies.get('RACCOTP', 0)
DPERPV = saisies.get('PERP_COTV', 0) + saisies.get('RACCOTV', 0)
DPIQABCD = saisies.get('PINELQA', 0) + saisies.get('PINELQB', 0) + saisies.get('PINELQC', 0) + saisies.get('PINELQD', 0)
DPLAFREPME4 = saisies.get('COD7CY', 0)
DPREC = saisies.get('CHNFAC', 0)
DPRESCOMP = saisies.get('PRESCOMP2000', 0) + saisies.get('RDPRESREPORT', 0)
DPRETUD = saisies.get('PRETUD', 0) + saisies.get('PRETUDANT', 0)
DPROREP = saisies.get('INVNPROREP', 0)
DRCVM = saisies.get('DPVRCM', 0)
DREDMEUB = saisies.get('REDMEUBLE', 0)
DREDREP = saisies.get('REDREPNPRO', 0)
DREPA = saisies.get('RDREP', 0) + saisies.get('DONETRAN', 0)
DREPMEU = saisies.get('INVREPMEU', 0)
DREPNPRO = saisies.get('INVREPNPRO', 0)
DRESIMEUB = saisies.get('VIEUMEUB', 0)
DRESINEUV = saisies.get('LOCRESINEUV', 0) + saisies.get('MEUBLENP', 0) + saisies.get('INVNPROF1', 0) + saisies.get('INVNPROF2', 0)
DRESIVIEU = saisies.get('RESIVIEU', 0) + saisies.get('RESIVIANT', 0)
DRESTIMO = saisies.get('RIMOSAUVANT', 0) + saisies.get('RIMOPPAUANT', 0) + saisies.get('RESTIMOPPAU', 0) + saisies.get('RESTIMOSAUV', 0) + saisies.get('RIMOPPAURE', 0) + saisies.get('RIMOSAUVRF', 0) + saisies.get('COD7SY', 0) + saisies.get('COD7SX', 0)
DRIRENOV = saisies.get('RIRENOV', 0)
DRTNC = saisies.get('RCMTNC', 0) + saisies.get('REVPEA', 0)
DSOCREPR = saisies.get('RSOCREPRISE', 0)
DSOUFIP = saisies.get('FFIP', 0)
DSURV = saisies.get('RDRESU', 0)
DSYND = saisies.get('RDSYVO', 0) + saisies.get('RDSYCJ', 0) + saisies.get('RDSYPP', 0)
DTEC = saisies.get('RISKTEC', 0)
DTOUHOTR = saisies.get('INVLOCHOTR', 0) + saisies.get('INVLOGHOT', 0)
DTOUREPA = saisies.get('RINVLOCREA', 0) + saisies.get('INVLOGREHA', 0) + saisies.get('INVLOCXV', 0) + saisies.get('COD7UZ', 0)
DTOURREP = saisies.get('RINVLOCINV', 0) + saisies.get('REPINVTOU', 0) + saisies.get('INVLOCXN', 0) + saisies.get('COD7UY', 0)
DUFREPFI = saisies.get('DUFLOFI', 0)
EAC = saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0)
EM7 = sum([min(1, max(0, saisies.get('V_0F0', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0F1', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0F2', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0F3', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0F4', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0F5', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0F6', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0F7', 0) + AG_LIMFG - saisies.get('V_ANREV', 0)))]) + 1 - is_positive(sum([saisies.get('V_0F0', 0), saisies.get('V_0F1', 0), saisies.get('V_0F2', 0), saisies.get('V_0F3', 0), saisies.get('V_0F4', 0), saisies.get('V_0F5', 0), saisies.get('V_0F6', 0), saisies.get('V_0F7', 0)]) + 0) * saisies.get('V_0CF', 0)
EM7QAR = sum([min(1, max(0, saisies.get('V_0H0', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0H1', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0H2', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0H3', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0H4', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0H5', 0) + AG_LIMFG - saisies.get('V_ANREV', 0)))]) + sum([min(1, max(0, saisies.get('V_0P0', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0P1', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0P2', 0) + AG_LIMFG - saisies.get('V_ANREV', 0))), min(1, max(0, saisies.get('V_0P3', 0) + AG_LIMFG - saisies.get('V_ANREV', 0)))]) + 1 - is_positive(sum([saisies.get('V_0H0', 0), saisies.get('V_0H1', 0), saisies.get('V_0H2', 0), saisies.get('V_0H3', 0), saisies.get('V_0H4', 0), saisies.get('V_0H5', 0)]) + sum([saisies.get('V_0P0', 0), saisies.get('V_0P1', 0), saisies.get('V_0P2', 0), saisies.get('V_0P3', 0)]) + 0) * saisies.get('V_0CH', 0) + saisies.get('V_0DP', 0)
EXCEDANTA = max(0, saisies.get('RDREP', 0) + saisies.get('DONETRAN', 0) - PLAF_REDREPAS)
EXOCET = saisies.get('EXOCETC', 0) + saisies.get('EXOCETV', 0)
F10AP = sum([F10A1, F10A2, F10A3, F10A4])
F10BP = sum([F10B1, F10B2, F10B3, F10B4])
FLAGDEFAUT = saisies.get('FLAG_DEFAUT', 0) + 0
FLAGDEFAUT10 = saisies.get('FLAG_DEFAUT10', 0) + 0
FLAGDEFAUT11 = saisies.get('FLAG_DEFAUT11', 0) + 0
FLAGRETARD = saisies.get('FLAG_RETARD', 0) + 0
FLAGRETARD08 = saisies.get('FLAG_RETARD08', 0) + 0
FLAG_TRTARDIF_F = 0
FORTRA = saisies.get('REPFOR', 0) + saisies.get('REPSINFOR', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR1', 0) + saisies.get('REPFOR2', 0) + saisies.get('REPSINFOR2', 0) + saisies.get('REPFOR3', 0) + saisies.get('REPSINFOR3', 0) + saisies.get('REPSINFOR4', 0)
FRDPROV11731 = 0
FRDPROV1P2 = 0
FRDPROV21731 = 0
FRDPROV2P2 = 0
FRDPROV31731 = 0
FRDPROV3P2 = 0
FRDPROVC1731 = 0
FRDPROVCP2 = 0
FRDPROVP1731 = 0
FRDPROVPP2 = 0
FRDPROVV1731 = 0
FRDPROVVP2 = 0
FRF = sum([FRD1 * 1 - IND_101, FRD2 * 1 - IND_102, FRD3 * 1 - IND_103, FRD4 * 1 - IND_104, FRDV * 1 - IND_10V, FRDC * 1 - IND_10C]) * 1 - is_positive(saisies.get('APPLI_COLBERT', 0) + saisies.get('APPLI_OCEANS', 0))
FRN11731 = 0
FRN21731 = 0
FRN31731 = 0
FRN41731 = 0
FRNC1731 = 0
FRNP = saisies.get('FRN1', 0) + saisies.get('FRN2', 0) + saisies.get('FRN3', 0) + saisies.get('FRN4', 0)
FRNRET1 = 0
FRNRET2 = 0
FRNRET3 = 0
FRNRET4 = 0
FRNRETC = 0
FRNRETV = 0
FRNV1731 = 0
GATASAC = saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0)
GATASAV = saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0)
GLFTOT = sum([GLFV, GLFC, GLF1, GLF2, GLF3, GLF4])
GLFTOTM = sum([GLFVM, GLFCM, GLF1M, GLF2M, GLF3M, GLF4M])
GLPALIMTOT = sum([GLPALIMV, GLPALIMC, GLPALIM1, GLPALIM2, GLPALIM3, GLPALIM4])
GLPALIMTOTM = sum([GLPALIMVM, GLPALIMCM, GLPALIM1M, GLPALIM2M, GLPALIM3M, GLPALIM4M])
GLPRRTOT = sum([GLPRRV + GLPRRZV, GLPRRC + GLPRRZC, GLPRR1 + GLPRRZ1, GLPRR2 + GLPRRZ2, GLPRR3 + GLPRRZ3, GLPRR4 + GLPRRZ4])
GLPRRTOTM = sum([GLPRRVM + GLPRRZVM, GLPRRCM + GLPRRZCM, GLPRR1M + GLPRRZ1M, GLPRR2M + GLPRRZ2M, GLPRR3M + GLPRRZ3M, GLPRR4M + GLPRRZ4M])
GLTSREMPTOT = sum([GLTSREMPV, GLTSREMPC, GLTSREMP1, GLTSREMP2, GLTSREMP3, GLTSREMP4])
GLTSREMPTOTM = sum([GLTSREMPVM, GLTSREMPCM, GLTSREMP1M, GLTSREMP2M, GLTSREMP3M, GLTSREMP4M])
GLTSTOT = sum([GLTSV, GLTSC, GLTS1, GLTS2, GLTS3, GLTS4])
GLTSTOTM = sum([GLTSVM, GLTSCM, GLTS1M, GLTS2M, GLTS3M, GLTS4M])
HAUTREVANTAF = 0
HAUTREVDEG = 0
HONODECC = saisies.get('XHONOC', 0) + saisies.get('XHONOAAC', 0)
HONODECP = saisies.get('XHONOP', 0) + saisies.get('XHONOAAP', 0)
HONODECV = saisies.get('XHONOV', 0) + saisies.get('XHONOAAV', 0)
HONONETC = round(saisies.get('XHONOC', 0) * MAJREV) + saisies.get('XHONOAAC', 0)
HONONETP = round(saisies.get('XHONOP', 0) * MAJREV) + saisies.get('XHONOAAP', 0)
HONONETV = round(saisies.get('XHONOV', 0) * MAJREV) + saisies.get('XHONOAAV', 0)
HRBASE_IRECT = 0
HRBTRFR1 = saisies.get('V_BTRFRHR1', 0) * 1 - positif_ou_nul(saisies.get('RFRH1', 0)) + saisies.get('RFRH1', 0)
HRBTRFR2 = saisies.get('V_BTRFRHR2', 0) * 1 - positif_ou_nul(saisies.get('RFRH2', 0)) + saisies.get('RFRH2', 0)
HRLIMBTRFR1 = positif_ou_nul(LIMHR1 * 1 + BOOL_0AM - HRBTRFR1)
HRLIMBTRFR2 = positif_ou_nul(LIMHR1 * 1 + BOOL_0AM - HRBTRFR2)
HRMOYBTRFR = round(HRBTRFR1 + HRBTRFR2 / 2)
HRNBTRFR = positif_ou_nul(saisies.get('V_BTRFRHR1', 0) * 1 - is_positive(saisies.get('RFRH1', 0)) + saisies.get('RFRH1', 0)) + positif_ou_nul(saisies.get('V_BTRFRHR2', 0) * 1 - is_positive(saisies.get('RFRH2', 0)) + saisies.get('RFRH2', 0))
IAR_A = 0
IDEGR = 0
IDOM111731 = 0
IN07 = 0
IN57 = 0
INCISF_NET = 0
INDC = positif_ou_nul(is_positive(saisies.get('ALLOC', 0)) + is_positive(saisies.get('REMPLAC', 0)) + is_positive(saisies.get('REMPLANBC', 0)) + is_positive(saisies.get('BACDEC', 0)) + is_positive(saisies.get('BACREC', 0)) + is_positive(_4BACREC) + is_positive(_4BAHREC) + is_positive(saisies.get('BAFC', 0)) + is_positive(saisies.get('ANOVEP', 0)) + is_positive(saisies.get('DNOCEPC', 0)) + is_positive(saisies.get('BAFPVC', 0)) + is_positive(saisies.get('BAHDEC', 0)) + is_positive(saisies.get('BAHREC', 0)) + is_positive(saisies.get('BICDEC', 0)) + is_positive(saisies.get('BICDNC', 0)) + is_positive(saisies.get('BICHDEC', 0)) + is_positive(saisies.get('BICHREC', 0)) + is_positive(saisies.get('BICNOC', 0)) + is_positive(saisies.get('BICREC', 0)) + is_positive(saisies.get('BIHDNC', 0)) + is_positive(saisies.get('BIHNOC', 0)) + is_positive(saisies.get('BNCAADC', 0)) + is_positive(saisies.get('BNCAABC', 0)) + is_positive(saisies.get('BNCDEC', 0)) + is_positive(saisies.get('BNCNPC', 0)) + is_positive(saisies.get('BNCNPPVC', 0)) + is_positive(saisies.get('BNCPROC', 0)) + is_positive(saisies.get('BNCPROPVC', 0)) + is_positive(saisies.get('BNCREC', 0)) + is_positive(saisies.get('BNHDEC', 0)) + is_positive(saisies.get('BNHREC', 0)) + is_positive(saisies.get('BPCOSAC', 0)) + is_positive(saisies.get('CARPEC', 0)) + is_positive(saisies.get('CARPENBAC', 0)) + is_positive(saisies.get('CARTSC', 0)) + is_positive(saisies.get('CARTSNBAC', 0)) + is_positive(saisies.get('COTFC', 0)) + is_positive(saisies.get('DETSC', 0)) + is_positive(saisies.get('FRNC', 0)) + is_positive(saisies.get('GLD1C', 0)) + is_positive(saisies.get('GLD2C', 0)) + is_positive(saisies.get('GLD3C', 0)) + is_positive(saisies.get('GLDGRATC', 0)) + is_positive(saisies.get('MIBNPPRESC', 0)) + is_positive(saisies.get('MIBNPPVC', 0)) + is_positive(saisies.get('MIBNPVENC', 0)) + is_positive(saisies.get('MIBPRESC', 0)) + is_positive(saisies.get('MIBPVC', 0)) + is_positive(saisies.get('MIBVENC', 0)) + is_positive(saisies.get('PALIC', 0)) + is_positive(saisies.get('PENSALC', 0)) + is_positive(saisies.get('PENSALNBC', 0)) + is_positive(saisies.get('PEBFC', 0)) + is_positive(saisies.get('PRBRC', 0)) + is_positive(saisies.get('TSHALLOC', 0)) + is_positive(saisies.get('BAFORESTC', 0)) + is_positive(saisies.get('LOCPROCGAC', 0)) + is_positive(saisies.get('LOCPROC', 0)) + is_positive(saisies.get('LOCNPCGAC', 0)) + is_positive(saisies.get('LOCNPC', 0)) + is_positive(saisies.get('LOCDEFNPCGAC', 0)) + is_positive(saisies.get('LOCDEFNPC', 0)) + is_positive(saisies.get('MIBMEUC', 0)) + is_positive(saisies.get('MIBGITEC', 0)) + is_positive(saisies.get('BICPMVCTC', 0)) + is_positive(saisies.get('BNCPMVCTC', 0)) + is_positive(saisies.get('LOCGITC', 0)) + is_positive(saisies.get('PENINC', 0)) + is_positive(saisies.get('CODRBZ', 0)) + is_positive(saisies.get('CODDBJ', 0)) + is_positive(saisies.get('CODEBJ', 0)))
INDCODDAJ = is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODEBJ', 0)))
INDCOLS = 0
INDCTX = 1 if (saisies.get('V_NOTRAIT', 0) + 0 == 23 or saisies.get('V_NOTRAIT', 0) + 0 == 33 or saisies.get('V_NOTRAIT', 0) + 0 == 43 or saisies.get('V_NOTRAIT', 0) + 0 == 53 or saisies.get('V_NOTRAIT', 0) + 0 == 63) else 0
INDCTX23 = 1 if (saisies.get('V_NOTRAIT', 0) + 0 == 23 or saisies.get('V_NOTRAIT', 0) + 0 == 33 or saisies.get('V_NOTRAIT', 0) + 0 == 43 or saisies.get('V_NOTRAIT', 0) + 0 == 53 or saisies.get('V_NOTRAIT', 0) + 0 == 63) else 0
INDCTXS = 0
INDIS = 1 if (saisies.get('V_NOTRAIT', 0) + 0 == 14 or saisies.get('V_NOTRAIT', 0) + 0 == 16 or saisies.get('V_NOTRAIT', 0) + 0 == 26 or saisies.get('V_NOTRAIT', 0) + 0 == 36 or saisies.get('V_NOTRAIT', 0) + 0 == 46 or saisies.get('V_NOTRAIT', 0) + 0 == 56 or saisies.get('V_NOTRAIT', 0) + 0 == 66) else 0
INDIS14 = 1 if (saisies.get('V_NOTRAIT', 0) + 0 == 14 or saisies.get('V_NOTRAIT', 0) + 0 == 16 or saisies.get('V_NOTRAIT', 0) + 0 == 26 or saisies.get('V_NOTRAIT', 0) + 0 == 36 or saisies.get('V_NOTRAIT', 0) + 0 == 46 or saisies.get('V_NOTRAIT', 0) + 0 == 56 or saisies.get('V_NOTRAIT', 0) + 0 == 66) else 0
INDIS26 = 1 if (saisies.get('V_NOTRAIT', 0) + 0 == 26 or saisies.get('V_NOTRAIT', 0) + 0 == 36 or saisies.get('V_NOTRAIT', 0) + 0 == 46 or saisies.get('V_NOTRAIT', 0) + 0 == 56 or saisies.get('V_NOTRAIT', 0) + 0 == 66) else 0
INDMAJREV = is_positive(is_positive(saisies.get('BIHNOV', 0)) + is_positive(saisies.get('BIHNOC', 0)) + is_positive(saisies.get('BIHNOP', 0)) + is_positive(saisies.get('BICHREV', 0)) + is_positive(saisies.get('BICHREC', 0)) + is_positive(saisies.get('BICHREP', 0)) + is_positive(saisies.get('BNHREV', 0)) + is_positive(saisies.get('BNHREC', 0)) + is_positive(saisies.get('BNHREP', 0)) + is_positive(saisies.get('ANOCEP', 0)) + is_positive(saisies.get('ANOVEP', 0)) + is_positive(saisies.get('ANOPEP', 0)) + is_positive(saisies.get('BAFV', 0)) + is_positive(saisies.get('BAFC', 0)) + is_positive(saisies.get('BAFP', 0)) + is_positive(saisies.get('BAHREV', 0)) + is_positive(saisies.get('BAHREC', 0)) + is_positive(saisies.get('BAHREP', 0)) + is_positive(_4BAHREV) + is_positive(_4BAHREC) + is_positive(_4BAHREP) + is_positive(saisies.get('REGPRIV', 0)))
INDP = positif_ou_nul(is_positive(saisies.get('ALLO1', 0)) + is_positive(saisies.get('ALLO2', 0)) + is_positive(saisies.get('ALLO3', 0)) + is_positive(saisies.get('ALLO4', 0)) + is_positive(saisies.get('CARTSP1', 0)) + is_positive(saisies.get('CARTSP2', 0)) + is_positive(saisies.get('CARTSP3', 0)) + is_positive(saisies.get('CARTSP4', 0)) + is_positive(saisies.get('CARTSNBAP1', 0)) + is_positive(saisies.get('CARTSNBAP2', 0)) + is_positive(saisies.get('CARTSNBAP3', 0)) + is_positive(saisies.get('CARTSNBAP4', 0)) + is_positive(saisies.get('REMPLAP1', 0)) + is_positive(saisies.get('REMPLAP2', 0)) + is_positive(saisies.get('REMPLAP3', 0)) + is_positive(saisies.get('REMPLAP4', 0)) + is_positive(saisies.get('REMPLANBP1', 0)) + is_positive(saisies.get('REMPLANBP2', 0)) + is_positive(saisies.get('REMPLANBP3', 0)) + is_positive(saisies.get('REMPLANBP4', 0)) + is_positive(saisies.get('BACDEP', 0)) + is_positive(saisies.get('BACREP', 0)) + is_positive(_4BACREP) + is_positive(_4BAHREP) + is_positive(saisies.get('BAFP', 0)) + is_positive(saisies.get('ANOPEP', 0)) + is_positive(saisies.get('DNOCEPP', 0)) + is_positive(saisies.get('BAFPVP', 0)) + is_positive(saisies.get('BAHDEP', 0)) + is_positive(saisies.get('BAHREP', 0)) + is_positive(saisies.get('BICDEP', 0)) + is_positive(saisies.get('BICDNP', 0)) + is_positive(saisies.get('BICHDEP', 0)) + is_positive(saisies.get('BICHREP', 0)) + is_positive(saisies.get('BICNOP', 0)) + is_positive(saisies.get('BICREP', 0)) + is_positive(saisies.get('BIHDNP', 0)) + is_positive(saisies.get('BIHNOP', 0)) + is_positive(saisies.get('BNCAADP', 0)) + is_positive(saisies.get('BNCAABP', 0)) + is_positive(saisies.get('BNCDEP', 0)) + is_positive(saisies.get('BNCNPP', 0)) + is_positive(saisies.get('BNCNPPVP', 0)) + is_positive(saisies.get('BNCPROP', 0)) + is_positive(saisies.get('BNCPROPVP', 0)) + is_positive(saisies.get('BNCREP', 0)) + is_positive(saisies.get('BNHDEP', 0)) + is_positive(saisies.get('BNHREP', 0)) + is_positive(saisies.get('COTF1', 0)) + is_positive(saisies.get('COTF2', 0)) + is_positive(saisies.get('COTF3', 0)) + is_positive(saisies.get('COTF4', 0)) + is_positive(saisies.get('DETS1', 0)) + is_positive(saisies.get('DETS2', 0)) + is_positive(saisies.get('DETS3', 0)) + is_positive(saisies.get('DETS4', 0)) + is_positive(saisies.get('FRN1', 0)) + is_positive(saisies.get('FRN2', 0)) + is_positive(saisies.get('FRN3', 0)) + is_positive(saisies.get('FRN4', 0)) + is_positive(saisies.get('MIBNPPRESP', 0)) + is_positive(saisies.get('MIBNPPVP', 0)) + is_positive(saisies.get('MIBNPVENP', 0)) + is_positive(saisies.get('MIBPRESP', 0)) + is_positive(saisies.get('MIBPVP', 0)) + is_positive(saisies.get('MIBVENP', 0)) + is_positive(saisies.get('PALI1', 0)) + is_positive(saisies.get('PALI2', 0)) + is_positive(saisies.get('PALI3', 0)) + is_positive(saisies.get('PALI4', 0)) + is_positive(saisies.get('PENSALP1', 0)) + is_positive(saisies.get('PENSALP2', 0)) + is_positive(saisies.get('PENSALP3', 0)) + is_positive(saisies.get('PENSALP4', 0)) + is_positive(saisies.get('PENSALNBP1', 0)) + is_positive(saisies.get('PENSALNBP2', 0)) + is_positive(saisies.get('PENSALNBP3', 0)) + is_positive(saisies.get('PENSALNBP4', 0)) + is_positive(saisies.get('PEBF1', 0)) + is_positive(saisies.get('PEBF2', 0)) + is_positive(saisies.get('PEBF3', 0)) + is_positive(saisies.get('PEBF4', 0)) + is_positive(saisies.get('PRBR1', 0)) + is_positive(saisies.get('PRBR2', 0)) + is_positive(saisies.get('PRBR3', 0)) + is_positive(saisies.get('PRBR4', 0)) + is_positive(saisies.get('CARPEP1', 0)) + is_positive(saisies.get('CARPEP2', 0)) + is_positive(saisies.get('CARPEP3', 0)) + is_positive(saisies.get('CARPEP4', 0)) + is_positive(saisies.get('CARPENBAP1', 0)) + is_positive(saisies.get('CARPENBAP2', 0)) + is_positive(saisies.get('CARPENBAP3', 0)) + is_positive(saisies.get('CARPENBAP4', 0)) + is_positive(saisies.get('TSHALLO1', 0)) + is_positive(saisies.get('TSHALLO2', 0)) + is_positive(saisies.get('TSHALLO3', 0)) + is_positive(saisies.get('TSHALLO4', 0)) + is_positive(saisies.get('BAFORESTP', 0)) + is_positive(saisies.get('LOCPROCGAP', 0)) + is_positive(saisies.get('LOCPROP', 0)) + is_positive(saisies.get('LOCNPCGAPAC', 0)) + is_positive(saisies.get('LOCNPPAC', 0)) + is_positive(saisies.get('LOCDEFNPCGAPAC', 0)) + is_positive(saisies.get('LOCDEFNPPAC', 0)) + is_positive(saisies.get('LOCDEFPROCGAP', 0)) + is_positive(saisies.get('LOCDEFPROP', 0)) + is_positive(saisies.get('MIBMEUP', 0)) + is_positive(saisies.get('MIBGITEP', 0)) + is_positive(saisies.get('BICPMVCTP', 0)) + is_positive(saisies.get('BNCPMVCTP', 0)) + is_positive(saisies.get('LOCGITP', 0)) + is_positive(saisies.get('PENIN1', 0)) + is_positive(saisies.get('PENIN2', 0)) + is_positive(saisies.get('PENIN3', 0)) + is_positive(saisies.get('PENIN4', 0)) + is_positive(saisies.get('CODRCZ', 0)) + is_positive(saisies.get('CODRDZ', 0)) + is_positive(saisies.get('CODREZ', 0)) + is_positive(saisies.get('CODRFZ', 0)))
INDREV1A8IR = is_positive(is_positive(_4BACREC) + is_positive(_4BACREP) + is_positive(_4BACREV) + is_positive(_4BAHREC) + is_positive(_4BAHREP) + is_positive(_4BAHREV) + is_positive(saisies.get('ABDETPLUS', 0)) + is_positive(saisies.get('ABDETMOINS', 0)) + is_positive(saisies.get('ALLO1', 0)) + is_positive(saisies.get('ALLO2', 0)) + is_positive(saisies.get('ALLO3', 0)) + is_positive(saisies.get('ALLO4', 0)) + is_positive(saisies.get('ALLOC', 0)) + is_positive(saisies.get('ALLOV', 0)) + is_positive(saisies.get('ANOCEP', 0)) + is_positive(saisies.get('ANOPEP', 0)) + is_positive(saisies.get('ANOVEP', 0)) + is_positive(saisies.get('AUTOBICPC', 0)) + is_positive(saisies.get('AUTOBICPP', 0)) + is_positive(saisies.get('AUTOBICPV', 0)) + is_positive(saisies.get('AUTOBICVC', 0)) + is_positive(saisies.get('AUTOBICVP', 0)) + is_positive(saisies.get('AUTOBICVV', 0)) + is_positive(saisies.get('AUTOBNCC', 0)) + is_positive(saisies.get('AUTOBNCP', 0)) + is_positive(saisies.get('AUTOBNCV', 0)) + is_positive(saisies.get('BA1AC', 0)) + is_positive(saisies.get('BA1AP', 0)) + is_positive(saisies.get('BA1AV', 0)) + is_positive(saisies.get('BACDEC', 0)) + is_positive(saisies.get('BACDEP', 0)) + is_positive(saisies.get('BACDEV', 0)) + is_positive(saisies.get('BACREC', 0)) + is_positive(saisies.get('BACREP', 0)) + is_positive(saisies.get('BACREV', 0)) + is_positive(saisies.get('BAEXC', 0)) + is_positive(saisies.get('BAEXP', 0)) + is_positive(saisies.get('BAEXV', 0)) + is_positive(saisies.get('BAF1AC', 0)) + is_positive(saisies.get('BAF1AP', 0)) + is_positive(saisies.get('BAF1AV', 0)) + is_positive(saisies.get('BAFC', 0)) + is_positive(saisies.get('BAFORESTC', 0)) + is_positive(saisies.get('BAFORESTP', 0)) + is_positive(saisies.get('BAFORESTV', 0)) + is_positive(saisies.get('BAFP', 0)) + is_positive(saisies.get('BAFPVC', 0)) + is_positive(saisies.get('BAFPVP', 0)) + is_positive(saisies.get('BAFPVV', 0)) + is_positive(saisies.get('BAFV', 0)) + is_positive(saisies.get('BAHDEC', 0)) + is_positive(saisies.get('BAHDEP', 0)) + is_positive(saisies.get('BAHDEV', 0)) + is_positive(saisies.get('BAHEXC', 0)) + is_positive(saisies.get('BAHEXP', 0)) + is_positive(saisies.get('BAHEXV', 0)) + is_positive(saisies.get('BAHREC', 0)) + is_positive(saisies.get('BAHREP', 0)) + is_positive(saisies.get('BAHREV', 0)) + is_positive(saisies.get('BAILOC98', 0)) + is_positive(saisies.get('BAPERPC', 0)) + is_positive(saisies.get('BAPERPP', 0)) + is_positive(saisies.get('BAPERPV', 0)) + is_positive(saisies.get('BI1AC', 0)) + is_positive(saisies.get('BI1AP', 0)) + is_positive(saisies.get('BI1AV', 0)) + is_positive(saisies.get('BI2AC', 0)) + is_positive(saisies.get('BI2AP', 0)) + is_positive(saisies.get('BI2AV', 0)) + is_positive(saisies.get('BICDEC', 0)) + is_positive(saisies.get('BICDEP', 0)) + is_positive(saisies.get('BICDEV', 0)) + is_positive(saisies.get('BICDNC', 0)) + is_positive(saisies.get('BICDNP', 0)) + is_positive(saisies.get('BICDNV', 0)) + is_positive(saisies.get('BICEXC', 0)) + is_positive(saisies.get('BICEXP', 0)) + is_positive(saisies.get('BICEXV', 0)) + is_positive(saisies.get('BICHDEC', 0)) + is_positive(saisies.get('BICHDEP', 0)) + is_positive(saisies.get('BICHDEV', 0)) + is_positive(saisies.get('BICHREC', 0)) + is_positive(saisies.get('BICHREP', 0)) + is_positive(saisies.get('BICHREV', 0)) + is_positive(saisies.get('BICNOC', 0)) + is_positive(saisies.get('BICNOP', 0)) + is_positive(saisies.get('BICNOV', 0)) + is_positive(saisies.get('BICNPEXC', 0)) + is_positive(saisies.get('BICNPEXP', 0)) + is_positive(saisies.get('BICNPEXV', 0)) + is_positive(saisies.get('BICNPHEXC', 0)) + is_positive(saisies.get('BICNPHEXP', 0)) + is_positive(saisies.get('BICNPHEXV', 0)) + is_positive(saisies.get('BICREC', 0)) + is_positive(saisies.get('BICREP', 0)) + is_positive(saisies.get('BICREV', 0)) + is_positive(saisies.get('BIHDNC', 0)) + is_positive(saisies.get('BIHDNP', 0)) + is_positive(saisies.get('BIHDNV', 0)) + is_positive(saisies.get('BIHEXC', 0)) + is_positive(saisies.get('BIHEXP', 0)) + is_positive(saisies.get('BIHEXV', 0)) + is_positive(saisies.get('BIHNOC', 0)) + is_positive(saisies.get('BIHNOP', 0)) + is_positive(saisies.get('BIHNOV', 0)) + is_positive(saisies.get('BIPERPC', 0)) + is_positive(saisies.get('BIPERPP', 0)) + is_positive(saisies.get('BIPERPV', 0)) + is_positive(saisies.get('BN1AC', 0)) + is_positive(saisies.get('BN1AP', 0)) + is_positive(saisies.get('BN1AV', 0)) + is_positive(saisies.get('BNCAABC', 0)) + is_positive(saisies.get('BNCAABP', 0)) + is_positive(saisies.get('BNCAABV', 0)) + is_positive(saisies.get('BNCAADC', 0)) + is_positive(saisies.get('BNCAADP', 0)) + is_positive(saisies.get('BNCAADV', 0)) + is_positive(saisies.get('BNCCRC', 0)) + is_positive(saisies.get('BNCCRFC', 0)) + is_positive(saisies.get('BNCCRFP', 0)) + is_positive(saisies.get('BNCCRFV', 0)) + is_positive(saisies.get('BNCCRP', 0)) + is_positive(saisies.get('BNCCRV', 0)) + is_positive(saisies.get('BNCDEC', 0)) + is_positive(saisies.get('BNCDEP', 0)) + is_positive(saisies.get('BNCDEV', 0)) + is_positive(saisies.get('BNCEXC', 0)) + is_positive(saisies.get('BNCEXP', 0)) + is_positive(saisies.get('BNCEXV', 0)) + is_positive(saisies.get('BNCNP1AC', 0)) + is_positive(saisies.get('BNCNP1AP', 0)) + is_positive(saisies.get('BNCNP1AV', 0)) + is_positive(saisies.get('BNCNPC', 0)) + is_positive(saisies.get('BNCNPDCT', 0)) + is_positive(saisies.get('BNCNPDEC', 0)) + is_positive(saisies.get('BNCNPDEP', 0)) + is_positive(saisies.get('BNCNPDEV', 0)) + is_positive(saisies.get('BNCNPP', 0)) + is_positive(saisies.get('BNCNPPVC', 0)) + is_positive(saisies.get('BNCNPPVP', 0)) + is_positive(saisies.get('BNCNPPVV', 0)) + is_positive(saisies.get('BNCNPREXAAC', 0)) + is_positive(saisies.get('BNCNPREXAAP', 0)) + is_positive(saisies.get('BNCNPREXAAV', 0)) + is_positive(saisies.get('BNCNPREXC', 0)) + is_positive(saisies.get('BNCNPREXP', 0)) + is_positive(saisies.get('BNCNPREXV', 0)) + is_positive(saisies.get('BNCNPV', 0)) + is_positive(saisies.get('BNCPRO1AC', 0)) + is_positive(saisies.get('BNCPRO1AP', 0)) + is_positive(saisies.get('BNCPRO1AV', 0)) + is_positive(saisies.get('BNCPROC', 0)) + is_positive(saisies.get('BNCPMVCTV', 0)) + is_positive(saisies.get('BNCPMVCTC', 0)) + is_positive(saisies.get('BNCPMVCTP', 0)) + is_positive(saisies.get('BNCPRODEC', 0)) + is_positive(saisies.get('BNCPRODEP', 0)) + is_positive(saisies.get('BNCPRODEV', 0)) + is_positive(saisies.get('BNCPROEXC', 0)) + is_positive(saisies.get('BNCPROEXP', 0)) + is_positive(saisies.get('BNCPROEXV', 0)) + is_positive(saisies.get('BNCPROP', 0)) + is_positive(saisies.get('BNCPROPVC', 0)) + is_positive(saisies.get('BNCPROPVP', 0)) + is_positive(saisies.get('BNCPROPVV', 0)) + is_positive(saisies.get('BNCPROV', 0)) + is_positive(saisies.get('BNCREC', 0)) + is_positive(saisies.get('BNCREP', 0)) + is_positive(saisies.get('BNCREV', 0)) + is_positive(saisies.get('BNHDEC', 0)) + is_positive(saisies.get('BNHDEP', 0)) + is_positive(saisies.get('BNHDEV', 0)) + is_positive(saisies.get('BNHEXC', 0)) + is_positive(saisies.get('BNHEXP', 0)) + is_positive(saisies.get('BNHEXV', 0)) + is_positive(saisies.get('BNHREC', 0)) + is_positive(saisies.get('BNHREP', 0)) + is_positive(saisies.get('BNHREV', 0)) + is_positive(saisies.get('BPCOPTV', 0)) + is_positive(saisies.get('BPCOSAC', 0)) + is_positive(saisies.get('BPCOSAV', 0)) + is_positive(saisies.get('BPV18V', 0)) + is_positive(saisies.get('BPV40V', 0)) + is_positive(saisies.get('BPVRCM', 0)) + is_positive(saisies.get('CARPEC', 0)) + is_positive(saisies.get('CARPENBAC', 0)) + is_positive(saisies.get('CARPENBAV', 0)) + is_positive(saisies.get('CARPEV', 0)) + is_positive(saisies.get('CARPEP1', 0)) + is_positive(saisies.get('CARPEP2', 0)) + is_positive(saisies.get('CARPEP3', 0)) + is_positive(saisies.get('CARPEP4', 0)) + is_positive(saisies.get('CARPENBAP1', 0)) + is_positive(saisies.get('CARPENBAP2', 0)) + is_positive(saisies.get('CARPENBAP3', 0)) + is_positive(saisies.get('CARPENBAP4', 0)) + is_positive(saisies.get('CARTSC', 0)) + is_positive(saisies.get('CARTSNBAC', 0)) + is_positive(saisies.get('CARTSNBAV', 0)) + is_positive(saisies.get('CARTSV', 0)) + is_positive(saisies.get('CARTSP1', 0)) + is_positive(saisies.get('CARTSP2', 0)) + is_positive(saisies.get('CARTSP3', 0)) + is_positive(saisies.get('CARTSP4', 0)) + is_positive(saisies.get('CARTSNBAP1', 0)) + is_positive(saisies.get('CARTSNBAP2', 0)) + is_positive(saisies.get('CARTSNBAP3', 0)) + is_positive(saisies.get('CARTSNBAP4', 0)) + is_positive(saisies.get('REMPLAV', 0)) + is_positive(saisies.get('REMPLAC', 0)) + is_positive(saisies.get('REMPLAP1', 0)) + is_positive(saisies.get('REMPLAP2', 0)) + is_positive(saisies.get('REMPLAP3', 0)) + is_positive(saisies.get('REMPLAP4', 0)) + is_positive(saisies.get('REMPLANBV', 0)) + is_positive(saisies.get('REMPLANBC', 0)) + is_positive(saisies.get('REMPLANBP1', 0)) + is_positive(saisies.get('REMPLANBP2', 0)) + is_positive(saisies.get('REMPLANBP3', 0)) + is_positive(saisies.get('REMPLANBP4', 0)) + is_positive(saisies.get('PENSALV', 0)) + is_positive(saisies.get('PENSALC', 0)) + is_positive(saisies.get('PENSALP1', 0)) + is_positive(saisies.get('PENSALP2', 0)) + is_positive(saisies.get('PENSALP3', 0)) + is_positive(saisies.get('PENSALP4', 0)) + is_positive(saisies.get('PENSALNBV', 0)) + is_positive(saisies.get('PENSALNBC', 0)) + is_positive(saisies.get('PENSALNBP1', 0)) + is_positive(saisies.get('PENSALNBP2', 0)) + is_positive(saisies.get('PENSALNBP3', 0)) + is_positive(saisies.get('PENSALNBP4', 0)) + is_positive(saisies.get('RENTAX', 0)) + is_positive(saisies.get('RENTAX5', 0)) + is_positive(saisies.get('RENTAX6', 0)) + is_positive(saisies.get('RENTAX7', 0)) + is_positive(saisies.get('RENTAXNB', 0)) + is_positive(saisies.get('RENTAXNB5', 0)) + is_positive(saisies.get('RENTAXNB6', 0)) + is_positive(saisies.get('RENTAXNB7', 0)) + is_positive(saisies.get('REVACT', 0)) + is_positive(saisies.get('REVPEA', 0)) + is_positive(saisies.get('PROVIE', 0)) + is_positive(saisies.get('DISQUO', 0)) + is_positive(saisies.get('RESTUC', 0)) + is_positive(saisies.get('INTERE', 0)) + is_positive(saisies.get('REVACTNB', 0)) + is_positive(saisies.get('REVPEANB', 0)) + is_positive(saisies.get('PROVIENB', 0)) + is_positive(saisies.get('DISQUONB', 0)) + is_positive(saisies.get('RESTUCNB', 0)) + is_positive(saisies.get('INTERENB', 0)) + is_positive(saisies.get('CESSASSC', 0)) + is_positive(saisies.get('CESSASSV', 0)) + is_positive(saisies.get('COTF1', 0)) + is_positive(saisies.get('COTF2', 0)) + is_positive(saisies.get('COTF3', 0)) + is_positive(saisies.get('COTF4', 0)) + is_positive(saisies.get('COTFC', 0)) + is_positive(saisies.get('COTFV', 0)) + is_positive(saisies.get('DABNCNP1', 0)) + is_positive(saisies.get('DABNCNP2', 0)) + is_positive(saisies.get('DABNCNP3', 0)) + is_positive(saisies.get('DABNCNP4', 0)) + is_positive(saisies.get('DABNCNP5', 0)) + is_positive(saisies.get('DABNCNP6', 0)) + is_positive(saisies.get('DAGRI1', 0)) + is_positive(saisies.get('DAGRI2', 0)) + is_positive(saisies.get('DAGRI3', 0)) + is_positive(saisies.get('DAGRI4', 0)) + is_positive(saisies.get('DAGRI5', 0)) + is_positive(saisies.get('DAGRI6', 0)) + is_positive(saisies.get('DEFBIC1', 0)) + is_positive(saisies.get('DEFBIC2', 0)) + is_positive(saisies.get('DEFBIC3', 0)) + is_positive(saisies.get('DEFBIC4', 0)) + is_positive(saisies.get('DEFBIC5', 0)) + is_positive(saisies.get('DEFBIC6', 0)) + is_positive(saisies.get('DETS1', 0)) + is_positive(saisies.get('DETS2', 0)) + is_positive(saisies.get('DETS3', 0)) + is_positive(saisies.get('DETS4', 0)) + is_positive(saisies.get('DETSC', 0)) + is_positive(saisies.get('DETSV', 0)) + is_positive(saisies.get('DIREPARGNE', 0)) + is_positive(saisies.get('DNOCEP', 0)) + is_positive(saisies.get('DNOCEPC', 0)) + is_positive(saisies.get('DNOCEPP', 0)) + is_positive(saisies.get('DPVRCM', 0)) + is_positive(saisies.get('FEXC', 0)) + is_positive(saisies.get('FEXP', 0)) + is_positive(saisies.get('FEXV', 0)) + is_positive(saisies.get('FRN1', 0)) + is_positive(saisies.get('FRN2', 0)) + is_positive(saisies.get('FRN3', 0)) + is_positive(saisies.get('FRN4', 0)) + is_positive(saisies.get('FRNC', 0)) + is_positive(saisies.get('FRNV', 0)) + is_positive(saisies.get('GAINABDET', 0)) + is_positive(saisies.get('GLDGRATV', 0)) + is_positive(saisies.get('GLDGRATC', 0)) + is_positive(saisies.get('GLD1C', 0)) + is_positive(saisies.get('GLD1V', 0)) + is_positive(saisies.get('GLD2C', 0)) + is_positive(saisies.get('GLD2V', 0)) + is_positive(saisies.get('GLD3C', 0)) + is_positive(saisies.get('GLD3V', 0)) + is_positive(saisies.get('LOCDEFNPC', 0)) + is_positive(saisies.get('LOCDEFNPCGAC', 0)) + is_positive(saisies.get('LOCDEFNPCGAPAC', 0)) + is_positive(saisies.get('LOCDEFNPCGAV', 0)) + is_positive(saisies.get('LOCDEFNPPAC', 0)) + is_positive(saisies.get('LOCDEFNPV', 0)) + is_positive(saisies.get('LOCDEFPROC', 0)) + is_positive(saisies.get('LOCDEFPROCGAC', 0)) + is_positive(saisies.get('LOCDEFPROCGAP', 0)) + is_positive(saisies.get('LOCDEFPROCGAV', 0)) + is_positive(saisies.get('LOCDEFPROP', 0)) + is_positive(saisies.get('LOCDEFPROV', 0)) + is_positive(saisies.get('LOCNPC', 0)) + is_positive(saisies.get('LOCNPCGAC', 0)) + is_positive(saisies.get('LOCNPCGAPAC', 0)) + is_positive(saisies.get('LOCNPCGAV', 0)) + is_positive(saisies.get('LOCNPPAC', 0)) + is_positive(saisies.get('LOCNPV', 0)) + is_positive(saisies.get('LOCPROC', 0)) + is_positive(saisies.get('LOCPROCGAC', 0)) + is_positive(saisies.get('LOCPROCGAP', 0)) + is_positive(saisies.get('LOCPROCGAV', 0)) + is_positive(saisies.get('LOCPROP', 0)) + is_positive(saisies.get('LOCPROV', 0)) + is_positive(saisies.get('LOYIMP', 0)) + is_positive(saisies.get('MIB1AC', 0)) + is_positive(saisies.get('MIB1AP', 0)) + is_positive(saisies.get('MIB1AV', 0)) + is_positive(saisies.get('BICPMVCTV', 0)) + is_positive(saisies.get('BICPMVCTC', 0)) + is_positive(saisies.get('BICPMVCTP', 0)) + is_positive(saisies.get('MIBDEC', 0)) + is_positive(saisies.get('MIBDEP', 0)) + is_positive(saisies.get('MIBDEV', 0)) + is_positive(saisies.get('MIBEXC', 0)) + is_positive(saisies.get('MIBEXP', 0)) + is_positive(saisies.get('MIBEXV', 0)) + is_positive(saisies.get('MIBNP1AC', 0)) + is_positive(saisies.get('MIBNP1AP', 0)) + is_positive(saisies.get('MIBNP1AV', 0)) + is_positive(saisies.get('MIBNPDCT', 0)) + is_positive(saisies.get('MIBNPDEC', 0)) + is_positive(saisies.get('MIBNPDEP', 0)) + is_positive(saisies.get('MIBNPDEV', 0)) + is_positive(saisies.get('MIBNPEXC', 0)) + is_positive(saisies.get('MIBNPEXP', 0)) + is_positive(saisies.get('MIBNPEXV', 0)) + is_positive(saisies.get('MIBNPPRESC', 0)) + is_positive(saisies.get('MIBNPPRESP', 0)) + is_positive(saisies.get('MIBNPPRESV', 0)) + is_positive(saisies.get('MIBNPPVC', 0)) + is_positive(saisies.get('MIBNPPVP', 0)) + is_positive(saisies.get('MIBNPPVV', 0)) + is_positive(saisies.get('MIBNPVENC', 0)) + is_positive(saisies.get('MIBNPVENP', 0)) + is_positive(saisies.get('MIBNPVENV', 0)) + is_positive(saisies.get('MIBPRESC', 0)) + is_positive(saisies.get('MIBPRESP', 0)) + is_positive(saisies.get('MIBPRESV', 0)) + is_positive(saisies.get('MIBPVC', 0)) + is_positive(saisies.get('MIBPVP', 0)) + is_positive(saisies.get('MIBPVV', 0)) + is_positive(saisies.get('MIBVENC', 0)) + is_positive(saisies.get('MIBVENP', 0)) + is_positive(saisies.get('MIBVENV', 0)) + is_positive(saisies.get('PALI1', 0)) + is_positive(saisies.get('PALI2', 0)) + is_positive(saisies.get('PALI3', 0)) + is_positive(saisies.get('PALI4', 0)) + is_positive(saisies.get('PALIC', 0)) + is_positive(saisies.get('PALIV', 0)) + is_positive(saisies.get('PEA', 0)) + is_positive(saisies.get('PEBF1', 0)) + is_positive(saisies.get('PEBF2', 0)) + is_positive(saisies.get('PEBF3', 0)) + is_positive(saisies.get('PEBF4', 0)) + is_positive(saisies.get('PEBFC', 0)) + is_positive(saisies.get('PEBFV', 0)) + is_positive(saisies.get('PPEACC', 0)) + is_positive(saisies.get('PPEACP', 0)) + is_positive(saisies.get('PPEACV', 0)) + is_positive(saisies.get('PPENHC', 0)) + is_positive(saisies.get('PPENHP1', 0)) + is_positive(saisies.get('PPENHP2', 0)) + is_positive(saisies.get('PPENHP3', 0)) + is_positive(saisies.get('PPENHP4', 0)) + is_positive(saisies.get('PPENHV', 0)) + is_positive(saisies.get('PPENJC', 0)) + is_positive(saisies.get('PPENJP', 0)) + is_positive(saisies.get('PPENJV', 0)) + is_positive(saisies.get('PPETPC', 0)) + is_positive(saisies.get('PPETPP1', 0)) + is_positive(saisies.get('PPETPP2', 0)) + is_positive(saisies.get('PPETPP3', 0)) + is_positive(saisies.get('PPETPP4', 0)) + is_positive(saisies.get('PPETPV', 0)) + is_positive(saisies.get('PPLIB', 0)) + is_positive(saisies.get('PRBR1', 0)) + is_positive(saisies.get('PRBR2', 0)) + is_positive(saisies.get('PRBR3', 0)) + is_positive(saisies.get('PRBR4', 0)) + is_positive(saisies.get('PRBRC', 0)) + is_positive(saisies.get('PRBRV', 0)) + is_positive(saisies.get('PVINCE', 0)) + is_positive(saisies.get('PVINPE', 0)) + is_positive(saisies.get('PVINVE', 0)) + is_positive(saisies.get('PVREP8', 0)) + is_positive(saisies.get('PVSOCC', 0)) + is_positive(saisies.get('PVSOCV', 0)) + is_positive(saisies.get('RCMABD', 0)) + is_positive(saisies.get('RCMAV', 0)) + is_positive(saisies.get('RCMAVFT', 0)) + is_positive(saisies.get('RCMFR', 0)) + is_positive(saisies.get('RCMHAB', 0)) + is_positive(saisies.get('RCMHAD', 0)) + is_positive(saisies.get('RCMLIB', 0)) + is_positive(saisies.get('RCMRDS', 0)) + is_positive(saisies.get('RCMSOC', 0)) + is_positive(saisies.get('RCMTNC', 0)) + is_positive(saisies.get('RCSC', 0)) + is_positive(saisies.get('RCSP', 0)) + is_positive(saisies.get('RCSV', 0)) + is_positive(saisies.get('REGPRIV', 0)) + is_positive(saisies.get('RFDANT', 0)) + is_positive(saisies.get('RFDHIS', 0)) + is_positive(saisies.get('RFDORD', 0)) + is_positive(saisies.get('RFMIC', 0)) + is_positive(saisies.get('RFORDI', 0)) + is_positive(saisies.get('RFROBOR', 0)) + is_positive(saisies.get('RSAFOYER', 0)) + is_positive(saisies.get('RSAPAC1', 0)) + is_positive(saisies.get('RSAPAC2', 0)) + is_positive(saisies.get('RVB1', 0)) + is_positive(saisies.get('RVB2', 0)) + is_positive(saisies.get('RVB3', 0)) + is_positive(saisies.get('RVB4', 0)) + is_positive(saisies.get('TSASSUC', 0)) + is_positive(saisies.get('TSASSUV', 0)) + is_positive(saisies.get('TSHALLO1', 0)) + is_positive(saisies.get('TSHALLO2', 0)) + is_positive(saisies.get('TSHALLO3', 0)) + is_positive(saisies.get('TSHALLO4', 0)) + is_positive(saisies.get('TSHALLOC', 0)) + is_positive(saisies.get('TSHALLOV', 0)) + is_positive(saisies.get('XETRANC', 0)) + is_positive(saisies.get('XETRANV', 0)) + is_positive(saisies.get('XHONOAAC', 0)) + is_positive(saisies.get('XHONOAAP', 0)) + is_positive(saisies.get('XHONOAAV', 0)) + is_positive(saisies.get('XHONOC', 0)) + is_positive(saisies.get('XHONOP', 0)) + is_positive(saisies.get('XHONOV', 0)) + is_positive(saisies.get('XSPENPC', 0)) + is_positive(saisies.get('XSPENPP', 0)) + is_positive(saisies.get('XSPENPV', 0)) + is_positive(saisies.get('GSALV', 0)) + is_positive(saisies.get('GSALC', 0)) + is_positive(saisies.get('LNPRODEF1', 0)) + is_positive(saisies.get('LNPRODEF2', 0)) + is_positive(saisies.get('LNPRODEF3', 0)) + is_positive(saisies.get('LNPRODEF4', 0)) + is_positive(saisies.get('LNPRODEF5', 0)) + is_positive(saisies.get('LNPRODEF6', 0)) + is_positive(saisies.get('LNPRODEF7', 0)) + is_positive(saisies.get('LNPRODEF8', 0)) + is_positive(saisies.get('LNPRODEF9', 0)) + is_positive(saisies.get('LNPRODEF10', 0)) + is_positive(saisies.get('FONCI', 0)) + is_positive(saisies.get('REAMOR', 0)) + is_positive(saisies.get('FONCINB', 0)) + is_positive(saisies.get('REAMORNB', 0)) + is_positive(saisies.get('MIBMEUV', 0)) + is_positive(saisies.get('MIBMEUC', 0)) + is_positive(saisies.get('MIBMEUP', 0)) + is_positive(saisies.get('MIBGITEV', 0)) + is_positive(saisies.get('MIBGITEC', 0)) + is_positive(saisies.get('MIBGITEP', 0)) + is_positive(saisies.get('PCAPTAXV', 0)) + is_positive(saisies.get('PCAPTAXC', 0)) + is_positive(saisies.get('PVIMMO', 0)) + is_positive(saisies.get('PVSURSI', 0)) + is_positive(saisies.get('PVIMPOS', 0)) + is_positive(saisies.get('BANOCGAV', 0)) + is_positive(saisies.get('BANOCGAC', 0)) + is_positive(saisies.get('BANOCGAP', 0)) + is_positive(saisies.get('INVENTV', 0)) + is_positive(saisies.get('INVENTC', 0)) + is_positive(saisies.get('INVENTP', 0)) + is_positive(saisies.get('LOCGITV', 0)) + is_positive(saisies.get('LOCGITC', 0)) + is_positive(saisies.get('LOCGITP', 0)) + is_positive(saisies.get('LOCGITCV', 0)) + is_positive(saisies.get('LOCGITCC', 0)) + is_positive(saisies.get('LOCGITCP', 0)) + is_positive(saisies.get('LOCGITHCV', 0)) + is_positive(saisies.get('LOCGITHCC', 0)) + is_positive(saisies.get('LOCGITHCP', 0)) + is_positive(saisies.get('PVTAXSB', 0)) + is_positive(saisies.get('BPV18C', 0)) + is_positive(saisies.get('PVMOBNR', 0)) + is_positive(saisies.get('BPV40C', 0)) + is_positive(saisies.get('BPCOPTC', 0)) + is_positive(saisies.get('BPVSJ', 0)) + is_positive(saisies.get('BPVSK', 0)) + is_positive(saisies.get('CVNSALAC', 0)) + is_positive(saisies.get('CVNSALAV', 0)) + is_positive(saisies.get('GAINPEA', 0)) + is_positive(saisies.get('PVEXOSEC', 0)) + is_positive(saisies.get('ABPVNOSURSIS', 0)) + is_positive(saisies.get('PVREPORT', 0)) + is_positive(saisies.get('LOYELEV', 0)) + is_positive(saisies.get('SALEXTV', 0)) + is_positive(saisies.get('SALEXTC', 0)) + is_positive(saisies.get('SALEXT1', 0)) + is_positive(saisies.get('SALEXT2', 0)) + is_positive(saisies.get('SALEXT3', 0)) + is_positive(saisies.get('SALEXT4', 0)) + is_positive(saisies.get('CODDAJ', 0)) + is_positive(saisies.get('CODEAJ', 0)) + is_positive(saisies.get('CODDBJ', 0)) + is_positive(saisies.get('CODEBJ', 0)) + is_positive(saisies.get('COD1AD', 0)) + is_positive(saisies.get('COD1BD', 0)) + is_positive(saisies.get('COD1CD', 0)) + is_positive(saisies.get('COD1DD', 0)) + is_positive(saisies.get('COD1ED', 0)) + is_positive(saisies.get('COD1FD', 0)) + is_positive(saisies.get('COD1AE', 0)) + is_positive(saisies.get('COD1BE', 0)) + is_positive(saisies.get('COD1CE', 0)) + is_positive(saisies.get('COD1DE', 0)) + is_positive(saisies.get('COD1EE', 0)) + is_positive(saisies.get('COD1FE', 0)) + is_positive(saisies.get('PPEXTV', 0)) + is_positive(saisies.get('PPEXTC', 0)) + is_positive(saisies.get('PPEXT1', 0)) + is_positive(saisies.get('PPEXT2', 0)) + is_positive(saisies.get('PPEXT3', 0)) + is_positive(saisies.get('PPEXT4', 0)) + is_positive(saisies.get('COD1AH', 0)) + is_positive(saisies.get('COD1BH', 0)) + is_positive(saisies.get('COD1CH', 0)) + is_positive(saisies.get('COD1DH', 0)) + is_positive(saisies.get('COD1EH', 0)) + is_positive(saisies.get('COD1FH', 0)) + is_positive(saisies.get('COD2CK', 0)) + is_positive(saisies.get('COD2FA', 0)) + is_positive(saisies.get('COD3SG', 0)) + is_positive(saisies.get('COD3SH', 0)) + is_positive(saisies.get('COD3SL', 0)) + is_positive(saisies.get('COD3SM', 0)) + is_positive(saisies.get('COD3VE', 0)) + is_positive(saisies.get('PVTITRESOC', 0)) + is_positive(saisies.get('PENIN1', 0)) + is_positive(saisies.get('PENIN2', 0)) + is_positive(saisies.get('PENIN3', 0)) + is_positive(saisies.get('PENIN4', 0)) + is_positive(saisies.get('PENINC', 0)) + is_positive(saisies.get('PENINV', 0)) + is_positive(saisies.get('CODNAZ', 0)) + is_positive(saisies.get('CODNBZ', 0)) + is_positive(saisies.get('CODNCZ', 0)) + is_positive(saisies.get('CODNDZ', 0)) + is_positive(saisies.get('CODNEZ', 0)) + is_positive(saisies.get('CODNFZ', 0)) + is_positive(saisies.get('CODRAZ', 0)) + is_positive(saisies.get('CODRBZ', 0)) + is_positive(saisies.get('CODRCZ', 0)) + is_positive(saisies.get('CODRDZ', 0)) + is_positive(saisies.get('CODREZ', 0)) + is_positive(saisies.get('CODRFZ', 0)) + is_positive(saisies.get('COD2LA', 0)) + is_positive(saisies.get('COD2LB', 0)) + is_positive(saisies.get('COD3UA', 0)) + is_positive(saisies.get('COD3UL', 0)) + is_positive(saisies.get('COD3UV', 0)) + is_positive(saisies.get('COD3WM', 0)) + is_positive(saisies.get('CODNVG', 0)) + is_positive(saisies.get('CODRVG', 0)) + present(saisies.get('ANNUL2042', 0)) + present(saisies.get('ASCAPA', 0)) + present(saisies.get('AUTOVERSLIB', 0)) + present(saisies.get('BRAS', 0)) + present(saisies.get('BULLRET', 0)) + present(saisies.get('CASEPRETUD', 0)) + present(saisies.get('CELLIERHK', 0)) + present(saisies.get('CELLIERHJ', 0)) + present(saisies.get('CELLIERHL', 0)) + present(saisies.get('CELLIERHM', 0)) + present(saisies.get('CELLIERHN', 0)) + present(saisies.get('CELLIERHO', 0)) + present(saisies.get('CELLIERNA', 0)) + present(saisies.get('CELLIERNB', 0)) + present(saisies.get('CELLIERNC', 0)) + present(saisies.get('CELLIERND', 0)) + present(saisies.get('CELLIERNE', 0)) + present(saisies.get('CELLIERNF', 0)) + present(saisies.get('CELLIERNG', 0)) + present(saisies.get('CELLIERNH', 0)) + present(saisies.get('CELLIERNI', 0)) + present(saisies.get('CELLIERNJ', 0)) + present(saisies.get('CELLIERNK', 0)) + present(saisies.get('CELLIERNL', 0)) + present(saisies.get('CELLIERNM', 0)) + present(saisies.get('CELLIERNN', 0)) + present(saisies.get('CELLIERNO', 0)) + present(saisies.get('CELLIERNP', 0)) + present(saisies.get('CELLIERNQ', 0)) + present(saisies.get('CELLIERNR', 0)) + present(saisies.get('CELLIERNS', 0)) + present(saisies.get('CELLIERNT', 0)) + present(saisies.get('CELLIERJA', 0)) + present(saisies.get('CELLIERJB', 0)) + present(saisies.get('CELLIERJD', 0)) + present(saisies.get('CELLIERJE', 0)) + present(saisies.get('CELLIERJF', 0)) + present(saisies.get('CELLIERJG', 0)) + present(saisies.get('CELLIERJH', 0)) + present(saisies.get('CELLIERJJ', 0)) + present(saisies.get('CELLIERJK', 0)) + present(saisies.get('CELLIERJL', 0)) + present(saisies.get('CELLIERJM', 0)) + present(saisies.get('CELLIERJN', 0)) + present(saisies.get('CELLIERJO', 0)) + present(saisies.get('CELLIERJP', 0)) + present(saisies.get('CELLIERJQ', 0)) + present(saisies.get('CELLIERJR', 0)) + present(saisies.get('CELLIERFA', 0)) + present(saisies.get('CELLIERFB', 0)) + present(saisies.get('CELLIERFC', 0)) + present(saisies.get('CELLIERFD', 0)) + present(saisies.get('DUFLOGH', 0)) + present(saisies.get('DUFLOGI', 0)) + present(saisies.get('CELREPGJ', 0)) + present(saisies.get('CELREPGK', 0)) + present(saisies.get('CELREPGL', 0)) + present(saisies.get('CELREPGP', 0)) + present(saisies.get('CELREPGS', 0)) + present(saisies.get('CELREPGT', 0)) + present(saisies.get('CELREPGU', 0)) + present(saisies.get('CELREPGV', 0)) + present(saisies.get('CELREPGW', 0)) + present(saisies.get('CELREPGX', 0)) + present(saisies.get('CELREPHR', 0)) + present(saisies.get('CELREPHS', 0)) + present(saisies.get('CHENF1', 0)) + present(saisies.get('CELREPHT', 0)) + present(saisies.get('CELREPHU', 0)) + present(saisies.get('CELREPHV', 0)) + present(saisies.get('CELREPHW', 0)) + present(saisies.get('CELREPHX', 0)) + present(saisies.get('CELREPHZ', 0)) + present(saisies.get('CELREPHA', 0)) + present(saisies.get('CELREPHB', 0)) + present(saisies.get('CELREPHD', 0)) + present(saisies.get('CELREPHE', 0)) + present(saisies.get('CELREPHF', 0)) + present(saisies.get('CELREPHG', 0)) + present(saisies.get('CELREPHH', 0)) + present(saisies.get('INVNPROF1', 0)) + present(saisies.get('VIEUMEUB', 0)) + present(saisies.get('INVREPMEU', 0)) + present(saisies.get('INVREPNPRO', 0)) + present(saisies.get('INVNPROREP', 0)) + present(saisies.get('INVREDMEU', 0)) + present(saisies.get('REDREPNPRO', 0)) + present(saisies.get('INVNPROF2', 0)) + present(saisies.get('RESIVIANT', 0)) + present(saisies.get('CHENF2', 0)) + present(saisies.get('CHENF3', 0)) + present(saisies.get('CHENF4', 0)) + present(saisies.get('CHNFAC', 0)) + present(saisies.get('CHRDED', 0)) + present(saisies.get('CHRFAC', 0)) + present(saisies.get('CIAQCUL', 0)) + present(saisies.get('CIBOIBAIL', 0)) + present(saisies.get('CIIMPPRO', 0)) + present(saisies.get('CIIMPPRO2', 0)) + present(saisies.get('CIINVCORSE', 0)) + present(saisies.get('CINE1', 0)) + present(saisies.get('CINE2', 0)) + present(saisies.get('CINRJBAIL', 0)) + present(saisies.get('CIDEP15', 0)) + present(saisies.get('CO35', 0)) + present(saisies.get('RISKTEC', 0)) + present(saisies.get('CINRJ', 0)) + present(saisies.get('CRDSIM', 0)) + present(saisies.get('CREAGRIBIO', 0)) + present(saisies.get('CREAIDE', 0)) + present(saisies.get('CREAPP', 0)) + present(saisies.get('CREARTS', 0)) + present(saisies.get('CRECHOBOI', 0)) + present(saisies.get('CRECONGAGRI', 0)) + present(saisies.get('CREDPVREP', 0)) + present(saisies.get('CREFAM', 0)) + present(saisies.get('CREFORMCHENT', 0)) + present(saisies.get('CREINTERESSE', 0)) + present(saisies.get('CREPROSP', 0)) + present(saisies.get('CRERESTAU', 0)) + present(saisies.get('CRIGA', 0)) + present(saisies.get('CRENRJ', 0)) + present(saisies.get('COD8YT', 0)) + present(saisies.get('CDISPROV', 0)) + present(saisies.get('CSGIM', 0)) + present(saisies.get('COD8YL', 0)) + present(saisies.get('DCSG', 0)) + present(saisies.get('DCSGIM', 0)) + present(saisies.get('DEFAA0', 0)) + present(saisies.get('DEFAA1', 0)) + present(saisies.get('DEFAA2', 0)) + present(saisies.get('DEFAA3', 0)) + present(saisies.get('DEFAA4', 0)) + present(saisies.get('DEFAA5', 0)) + present(saisies.get('DEPCHOBAS', 0)) + present(saisies.get('DEPMOBIL', 0)) + present(saisies.get('DMOND', 0)) + present(saisies.get('ELURASC', 0)) + present(saisies.get('ELURASV', 0)) + present(saisies.get('ESFP', 0)) + present(saisies.get('FCPI', 0)) + present(saisies.get('FFIP', 0)) + present(saisies.get('FIPCORSE', 0)) + present(saisies.get('FORET', 0)) + present(saisies.get('INAIDE', 0)) + present(saisies.get('INTDIFAGRI', 0)) + present(saisies.get('INVDIR2009', 0)) + present(saisies.get('INVDOMRET50', 0)) + present(saisies.get('INVDOMRET60', 0)) + present(saisies.get('INVLGDEB2009', 0)) + present(saisies.get('INVLOCHOTR', 0)) + present(saisies.get('INVLOCXN', 0)) + present(saisies.get('INVLOCXV', 0)) + present(saisies.get('COD7UY', 0)) + present(saisies.get('COD7UZ', 0)) + present(saisies.get('INVLOG2008', 0)) + present(saisies.get('INVLOG2009', 0)) + present(saisies.get('INVLOGSOC', 0)) + present(saisies.get('INVLGAUTRE', 0)) + present(saisies.get('INVLGDEB2010', 0)) + present(saisies.get('INVSOC2010', 0)) + present(saisies.get('INVRETRO1', 0)) + present(saisies.get('INVRETRO2', 0)) + present(saisies.get('INVIMP', 0)) + present(saisies.get('INVLGDEB', 0)) + present(saisies.get('INVENDEB2009', 0)) + present(saisies.get('PATNAT1', 0)) + present(saisies.get('PATNAT2', 0)) + present(saisies.get('PATNAT3', 0)) + present(saisies.get('INVSOCNRET', 0)) + present(saisies.get('INVENDI', 0)) + present(saisies.get('CELRREDLA', 0)) + present(saisies.get('CELRREDLB', 0)) + present(saisies.get('CELRREDLC', 0)) + present(saisies.get('CELRREDLD', 0)) + present(saisies.get('CELRREDLE', 0)) + present(saisies.get('CELRREDLF', 0)) + present(saisies.get('CELRREDLM', 0)) + present(saisies.get('CELRREDLS', 0)) + present(saisies.get('CELRREDLZ', 0)) + present(saisies.get('CELRREDMG', 0)) + present(saisies.get('NRETROC50', 0)) + present(saisies.get('NRETROC40', 0)) + present(saisies.get('INVOMREP', 0)) + present(saisies.get('RETROCOMMB', 0)) + present(saisies.get('RETROCOMMC', 0)) + present(saisies.get('RETROCOMLH', 0)) + present(saisies.get('RETROCOMLI', 0)) + present(saisies.get('INVOMSOCQU', 0)) + present(saisies.get('INVOMQV', 0)) + present(saisies.get('INVOMSOCKH', 0)) + present(saisies.get('INVOMSOCKI', 0)) + present(saisies.get('INVOMSOCQJ', 0)) + present(saisies.get('INVOMSOCQS', 0)) + present(saisies.get('INVOMSOCQW', 0)) + present(saisies.get('INVOMSOCQX', 0)) + present(saisies.get('INVOMENTRG', 0)) + present(saisies.get('INVOMENTRI', 0)) + present(saisies.get('INVOMENTRJ', 0)) + present(saisies.get('INVOMENTRK', 0)) + present(saisies.get('INVOMENTRL', 0)) + present(saisies.get('INVOMENTRM', 0)) + present(saisies.get('INVOMENTRO', 0)) + present(saisies.get('INVOMENTRP', 0)) + present(saisies.get('INVOMENTRQ', 0)) + present(saisies.get('INVOMENTRR', 0)) + present(saisies.get('INVOMENTRT', 0)) + present(saisies.get('INVOMENTRU', 0)) + present(saisies.get('INVOMENTRV', 0)) + present(saisies.get('INVOMENTRW', 0)) + present(saisies.get('INVOMENTRY', 0)) + present(saisies.get('INVOMENTKT', 0)) + present(saisies.get('INVOMENTKU', 0)) + present(saisies.get('INVOMENTMN', 0)) + present(saisies.get('INVOMENTNU', 0)) + present(saisies.get('INVOMENTNV', 0)) + present(saisies.get('INVOMENTNW', 0)) + present(saisies.get('INVOMENTNY', 0)) + present(saisies.get('INVOMRETPA', 0)) + present(saisies.get('INVOMRETPB', 0)) + present(saisies.get('INVOMRETPD', 0)) + present(saisies.get('INVOMRETPE', 0)) + present(saisies.get('INVOMRETPF', 0)) + present(saisies.get('INVOMRETPH', 0)) + present(saisies.get('INVOMRETPI', 0)) + present(saisies.get('INVOMRETPJ', 0)) + present(saisies.get('INVOMRETPL', 0)) + present(saisies.get('INVOMRETPM', 0)) + present(saisies.get('INVOMRETPN', 0)) + present(saisies.get('INVOMRETPO', 0)) + present(saisies.get('INVOMRETPP', 0)) + present(saisies.get('INVOMRETPR', 0)) + present(saisies.get('INVOMRETPS', 0)) + present(saisies.get('INVOMRETPT', 0)) + present(saisies.get('INVOMRETPU', 0)) + present(saisies.get('INVOMRETPW', 0)) + present(saisies.get('INVOMRETPX', 0)) + present(saisies.get('INVOMRETPY', 0)) + present(saisies.get('INVOMLOGOA', 0)) + present(saisies.get('INVOMLOGOB', 0)) + present(saisies.get('INVOMLOGOC', 0)) + present(saisies.get('INVOMLOGOH', 0)) + present(saisies.get('INVOMLOGOI', 0)) + present(saisies.get('INVOMLOGOJ', 0)) + present(saisies.get('INVOMLOGOK', 0)) + present(saisies.get('INVOMLOGOL', 0)) + present(saisies.get('INVOMLOGOM', 0)) + present(saisies.get('INVOMLOGON', 0)) + present(saisies.get('INVOMLOGOO', 0)) + present(saisies.get('INVOMLOGOP', 0)) + present(saisies.get('INVOMLOGOQ', 0)) + present(saisies.get('INVOMLOGOR', 0)) + present(saisies.get('INVOMLOGOS', 0)) + present(saisies.get('INVOMLOGOT', 0)) + present(saisies.get('INVOMLOGOU', 0)) + present(saisies.get('INVOMLOGOV', 0)) + present(saisies.get('INVOMLOGOW', 0)) + present(saisies.get('CODHOD', 0)) + present(saisies.get('CODHOE', 0)) + present(saisies.get('CODHOF', 0)) + present(saisies.get('CODHOG', 0)) + present(saisies.get('CODHOX', 0)) + present(saisies.get('CODHOY', 0)) + present(saisies.get('CODHOZ', 0)) + present(saisies.get('CODHRA', 0)) + present(saisies.get('CODHRB', 0)) + present(saisies.get('CODHRC', 0)) + present(saisies.get('CODHRD', 0)) + present(saisies.get('CODHSA', 0)) + present(saisies.get('CODHSB', 0)) + present(saisies.get('CODHSC', 0)) + present(saisies.get('CODHSE', 0)) + present(saisies.get('CODHSF', 0)) + present(saisies.get('CODHSG', 0)) + present(saisies.get('CODHSH', 0)) + present(saisies.get('CODHSJ', 0)) + present(saisies.get('CODHSK', 0)) + present(saisies.get('CODHSL', 0)) + present(saisies.get('CODHSM', 0)) + present(saisies.get('CODHSO', 0)) + present(saisies.get('CODHSP', 0)) + present(saisies.get('CODHSQ', 0)) + present(saisies.get('CODHSR', 0)) + present(saisies.get('CODHST', 0)) + present(saisies.get('CODHSU', 0)) + present(saisies.get('CODHSV', 0)) + present(saisies.get('CODHSW', 0)) + present(saisies.get('CODHSY', 0)) + present(saisies.get('CODHSZ', 0)) + present(saisies.get('CODHTA', 0)) + present(saisies.get('CODHTB', 0)) + present(saisies.get('CODHTD', 0)) + present(saisies.get('LOCMEUBIA', 0)) + present(saisies.get('LOCMEUBIB', 0)) + present(saisies.get('LOCMEUBIC', 0)) + present(saisies.get('LOCMEUBID', 0)) + present(saisies.get('LOCMEUBIE', 0)) + present(saisies.get('LOCMEUBIF', 0)) + present(saisies.get('LOCMEUBIG', 0)) + present(saisies.get('LOCMEUBIH', 0)) + present(saisies.get('LOCMEUBII', 0)) + present(saisies.get('LOCMEUBIX', 0)) + present(saisies.get('LOCMEUBIY', 0)) + present(saisies.get('LOCMEUBIZ', 0)) + present(saisies.get('LOCMEUBJC', 0)) + present(saisies.get('LOCMEUBJI', 0)) + present(saisies.get('LOCMEUBJS', 0)) + present(saisies.get('LOCMEUBJT', 0)) + present(saisies.get('LOCMEUBJU', 0)) + present(saisies.get('LOCMEUBJV', 0)) + present(saisies.get('LOCMEUBJW', 0)) + present(saisies.get('LOCMEUBJX', 0)) + present(saisies.get('LOCMEUBJY', 0)) + present(saisies.get('IPBOCH', 0)) + present(saisies.get('IPELUS', 0)) + present(saisies.get('IPMOND', 0)) + present(saisies.get('SALECS', 0)) + present(saisies.get('SALECSG', 0)) + present(saisies.get('CICORSENOW', 0)) + present(saisies.get('PRESINTER', 0)) + present(saisies.get('IPPNCS', 0)) + present(saisies.get('IPPRICORSE', 0)) + present(saisies.get('IPRECH', 0)) + present(saisies.get('IPCHER', 0)) + present(saisies.get('IPREP', 0)) + present(saisies.get('IPREPCORSE', 0)) + present(saisies.get('IPSOUR', 0)) + present(saisies.get('IPSUIS', 0)) + present(saisies.get('IPSUISC', 0)) + present(saisies.get('IPSURSI', 0)) + present(saisies.get('IPSURV', 0)) + present(saisies.get('IPTEFN', 0)) + present(saisies.get('IPTEFP', 0)) + present(saisies.get('IPTXMO', 0)) + present(saisies.get('IPVLOC', 0)) + present(saisies.get('IRANT', 0)) + present(saisies.get('LOCRESINEUV', 0)) + present(saisies.get('REPMEUBLE', 0)) + present(saisies.get('MEUBLENP', 0)) + present(saisies.get('RESIVIEU', 0)) + present(saisies.get('REDMEUBLE', 0)) + present(saisies.get('NBACT', 0)) + present(saisies.get('CONVCREA', 0)) + present(saisies.get('CONVHAND', 0)) + present(saisies.get('NCHENF1', 0)) + present(saisies.get('NCHENF2', 0)) + present(saisies.get('NCHENF3', 0)) + present(saisies.get('NCHENF4', 0)) + present(saisies.get('NRBASE', 0)) + present(saisies.get('NRINET', 0)) + present(saisies.get('IMPRET', 0)) + present(saisies.get('BASRET', 0)) + present(saisies.get('NUPROP', 0)) + present(saisies.get('REPGROREP1', 0)) + present(saisies.get('REPGROREP2', 0)) + present(saisies.get('REPGROREP11', 0)) + present(saisies.get('REPGROREP12', 0)) + present(saisies.get('OPTPLAF15', 0)) + present(saisies.get('PAAP', 0)) + present(saisies.get('PAAV', 0)) + present(saisies.get('PERPC', 0)) + present(saisies.get('PERPP', 0)) + present(saisies.get('PERPV', 0)) + present(saisies.get('PERP_COTC', 0)) + present(saisies.get('PERP_COTP', 0)) + present(saisies.get('PERP_COTV', 0)) + present(saisies.get('PLAF_PERPC', 0)) + present(saisies.get('PLAF_PERPP', 0)) + present(saisies.get('PLAF_PERPV', 0)) + present(saisies.get('PREHABT', 0)) + present(saisies.get('PREHABTN1', 0)) + present(saisies.get('PREHABTN2', 0)) + present(saisies.get('PREHABTVT', 0)) + present(saisies.get('PREHABT2', 0)) + present(saisies.get('PREHABTN', 0)) + present(saisies.get('PREMAIDE', 0)) + present(saisies.get('PRESCOMP2000', 0)) + present(saisies.get('PRESCOMPJUGE', 0)) + present(saisies.get('PRETUD', 0)) + present(saisies.get('PRETUDANT', 0)) + present(saisies.get('PRODOM', 0)) + present(saisies.get('PROGUY', 0)) + present(saisies.get('PRSPROV', 0)) + present(saisies.get('PTZDEVDUR', 0)) + present(saisies.get('R1649', 0)) + present(saisies.get('PTZDEVDURN', 0)) + present(saisies.get('PREREV', 0)) + present(saisies.get('RACCOTC', 0)) + present(saisies.get('RACCOTP', 0)) + present(saisies.get('RACCOTV', 0)) + present(saisies.get('RCCURE', 0)) + present(saisies.get('RDCOM', 0)) + present(saisies.get('RDDOUP', 0)) + present(saisies.get('RDENL', 0)) + present(saisies.get('RDENLQAR', 0)) + present(saisies.get('RDENS', 0)) + present(saisies.get('RDENSQAR', 0)) + present(saisies.get('RDENU', 0)) + present(saisies.get('RDENUQAR', 0)) + present(saisies.get('RDEQPAHA', 0)) + present(saisies.get('RDDOUP', 0)) + present(saisies.get('RDFOREST', 0)) + present(saisies.get('RDFORESTGES', 0)) + present(saisies.get('RDFORESTRA', 0)) + present(saisies.get('RDREP', 0)) + present(saisies.get('COTFORET', 0)) + present(saisies.get('REPFOR', 0)) + present(saisies.get('REPSINFOR', 0)) + present(saisies.get('REPSINFOR1', 0)) + present(saisies.get('REPSINFOR2', 0)) + present(saisies.get('REPSINFOR3', 0)) + present(saisies.get('REPFOR1', 0)) + present(saisies.get('REPFOR2', 0)) + present(saisies.get('REPFOR3', 0)) + present(saisies.get('RDGARD1', 0)) + present(saisies.get('RDGARD1QAR', 0)) + present(saisies.get('RDGARD2', 0)) + present(saisies.get('RDGARD2QAR', 0)) + present(saisies.get('RDGARD3', 0)) + present(saisies.get('RDGARD3QAR', 0)) + present(saisies.get('RDGARD4', 0)) + present(saisies.get('RDGARD4QAR', 0)) + present(saisies.get('RDTECH', 0)) + present(saisies.get('RDMECENAT', 0)) + present(saisies.get('RDPRESREPORT', 0)) + present(saisies.get('RDREP', 0)) + present(saisies.get('RDRESU', 0)) + present(saisies.get('RDSNO', 0)) + present(saisies.get('RDSYCJ', 0)) + present(saisies.get('RDSYPP', 0)) + present(saisies.get('RDSYVO', 0)) + present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0)) + present(saisies.get('REGCI', 0)) + present(saisies.get('REPDON03', 0)) + present(saisies.get('REPDON04', 0)) + present(saisies.get('REPDON05', 0)) + present(saisies.get('REPDON06', 0)) + present(saisies.get('REPDON07', 0)) + present(saisies.get('RINVLOCINV', 0)) + present(saisies.get('RINVLOCREA', 0)) + present(saisies.get('REPSNO1', 0)) + present(saisies.get('REPSNO2', 0)) + present(saisies.get('REPINVTOU', 0)) + present(saisies.get('INVLOGREHA', 0)) + present(saisies.get('INVLOGHOT', 0)) + present(saisies.get('REPSNO3', 0)) + present(saisies.get('REPSNON', 0)) + present(saisies.get('REPSOF', 0)) + present(saisies.get('RESTIMOPPAU', 0)) + present(saisies.get('RIMOPPAUANT', 0)) + present(saisies.get('RIMOSAUVANT', 0)) + present(saisies.get('RESTIMOSAUV', 0)) + present(saisies.get('RIMOPPAURE', 0)) + present(saisies.get('RIMOSAUVRF', 0)) + present(saisies.get('COD7SY', 0)) + present(saisies.get('COD7SX', 0)) + present(saisies.get('COD7UH', 0)) + present(saisies.get('COD7WD', 0)) + present(saisies.get('REVMAR1', 0)) + present(saisies.get('REVMAR2', 0)) + present(saisies.get('REVMAR3', 0)) + present(saisies.get('PETIPRISE', 0)) + present(saisies.get('RMOND', 0)) + present(saisies.get('RSOCREPRISE', 0)) + present(saisies.get('RVAIDE', 0)) + present(saisies.get('RVAIDAS', 0)) + present(saisies.get('RVCURE', 0)) + present(saisies.get('SINISFORET', 0)) + present(saisies.get('SUBSTITRENTE', 0)) + present(saisies.get('FIPDOMCOM', 0)) + present(saisies.get('ALLECS', 0)) + present(saisies.get('INDECS', 0)) + present(saisies.get('PENECS', 0)) + present(saisies.get('DONETRAN', 0)) + present(saisies.get('DONAUTRE', 0)) + present(saisies.get('MATISOSI', 0)) + present(saisies.get('MATISOSJ', 0)) + present(saisies.get('VOLISO', 0)) + present(saisies.get('PORENT', 0)) + present(saisies.get('CHAUBOISN', 0)) + present(saisies.get('POMPESP', 0)) + present(saisies.get('POMPESQ', 0)) + present(saisies.get('POMPESR', 0)) + present(saisies.get('CHAUFSOL', 0)) + present(saisies.get('ENERGIEST', 0)) + present(saisies.get('DIAGPERF', 0)) + present(saisies.get('RESCHAL', 0)) + present(saisies.get('TRATOIVG', 0)) + present(saisies.get('TRAMURWC', 0)) + present(saisies.get('TRAVITWT', 0)) + present(saisies.get('RFRN2', 0)) + present(saisies.get('RFRN3', 0)) + present(saisies.get('RFRH1', 0)) + present(saisies.get('RFRH2', 0)) + present(saisies.get('COD8TL', 0)) + present(saisies.get('COD8UW', 0)) + present(saisies.get('V_8ZT', 0)) + present(saisies.get('CELREPYA', 0)) + present(saisies.get('CELREPYB', 0)) + present(saisies.get('CELREPYC', 0)) + present(saisies.get('CELREPYD', 0)) + present(saisies.get('CELREPYE', 0)) + present(saisies.get('CELREPYF', 0)) + present(saisies.get('CELREPYG', 0)) + present(saisies.get('CELREPYH', 0)) + present(saisies.get('CELREPYI', 0)) + present(saisies.get('CELREPYJ', 0)) + present(saisies.get('CELREPYK', 0)) + present(saisies.get('CELREPYL', 0)) + present(saisies.get('CELRREDLN', 0)) + present(saisies.get('CELRREDLX', 0)) + present(saisies.get('CELRREDLZ', 0)) + present(saisies.get('CELRREDMH', 0)) + present(saisies.get('COD7CR', 0)) + present(saisies.get('COD7CY', 0)) + present(saisies.get('COD7OA', 0)) + present(saisies.get('COD7OB', 0)) + present(saisies.get('COD7OC', 0)) + present(saisies.get('COD7OD', 0)) + present(saisies.get('COD7OE', 0)) + present(saisies.get('COD7OU', 0)) + present(saisies.get('COD7PA', 0)) + present(saisies.get('COD7PB', 0)) + present(saisies.get('COD7PC', 0)) + present(saisies.get('COD7PD', 0)) + present(saisies.get('COD7PE', 0)) + present(saisies.get('COD7RG', 0)) + present(saisies.get('COD7RH', 0)) + present(saisies.get('COD7RI', 0)) + present(saisies.get('COD7RJ', 0)) + present(saisies.get('COD7RK', 0)) + present(saisies.get('COD7RL', 0)) + present(saisies.get('COD7RN', 0)) + present(saisies.get('COD7RP', 0)) + present(saisies.get('COD7RQ', 0)) + present(saisies.get('COD7RR', 0)) + present(saisies.get('COD7RS', 0)) + present(saisies.get('COD7RT', 0)) + present(saisies.get('COD7RV', 0)) + present(saisies.get('COD7RW', 0)) + present(saisies.get('COD7RX', 0)) + present(saisies.get('COD7RZ', 0)) + present(saisies.get('COD7SA', 0)) + present(saisies.get('COD7SB', 0)) + present(saisies.get('COD7SC', 0)) + present(saisies.get('COD7TV', 0)) + present(saisies.get('COD7TW', 0)) + present(saisies.get('COD7UA', 0)) + present(saisies.get('COD7UB', 0)) + present(saisies.get('COD7UI', 0)) + present(saisies.get('COD7VH', 0)) + present(saisies.get('COD7WB', 0)) + present(saisies.get('COD7WU', 0)) + present(saisies.get('COD7WX', 0)) + present(saisies.get('COD8XY', 0)) + present(saisies.get('COD8YM', 0)) + present(saisies.get('CSPROVYN', 0)) + present(saisies.get('CSPROVYP', 0)) + present(saisies.get('CODHAA', 0)) + present(saisies.get('CODHAB', 0)) + present(saisies.get('CODHAC', 0)) + present(saisies.get('CODHAD', 0)) + present(saisies.get('CODHAE', 0)) + present(saisies.get('CODHAF', 0)) + present(saisies.get('CODHAG', 0)) + present(saisies.get('CODHAH', 0)) + present(saisies.get('CODHAI', 0)) + present(saisies.get('CODHAJ', 0)) + present(saisies.get('CODHAK', 0)) + present(saisies.get('CODHAL', 0)) + present(saisies.get('CODHAM', 0)) + present(saisies.get('CODHAN', 0)) + present(saisies.get('CODHAO', 0)) + present(saisies.get('CODHAP', 0)) + present(saisies.get('CODHAQ', 0)) + present(saisies.get('CODHAR', 0)) + present(saisies.get('CODHAS', 0)) + present(saisies.get('CODHAT', 0)) + present(saisies.get('CODHAU', 0)) + present(saisies.get('CODHAV', 0)) + present(saisies.get('CODHAW', 0)) + present(saisies.get('CODHAX', 0)) + present(saisies.get('CODHAY', 0)) + present(saisies.get('CODHBA', 0)) + present(saisies.get('CODHBB', 0)) + present(saisies.get('CODHBE', 0)) + present(saisies.get('CODHBF', 0)) + present(saisies.get('CODHBG', 0)) + present(saisies.get('CODHUA', 0)) + present(saisies.get('CODHUB', 0)) + present(saisies.get('CODHUC', 0)) + present(saisies.get('CODHUD', 0)) + present(saisies.get('CODHUE', 0)) + present(saisies.get('CODHUF', 0)) + present(saisies.get('CODHUG', 0)) + present(saisies.get('CODHXA', 0)) + present(saisies.get('CODHXB', 0)) + present(saisies.get('CODHXC', 0)) + present(saisies.get('CODHXE', 0)) + present(saisies.get('COD8SA', 0)) + present(saisies.get('COD8SB', 0)) + present(saisies.get('COD8XI', 0)) + present(saisies.get('COD8XJ', 0)) + present(saisies.get('DUFLOFI', 0)) + present(saisies.get('DUFLOGH', 0)) + present(saisies.get('DUFLOGI', 0)) + present(saisies.get('PATNAT4', 0)) + present(saisies.get('PINELQA', 0)) + present(saisies.get('PINELQB', 0)) + present(saisies.get('PINELQC', 0)) + present(saisies.get('PINELQD', 0)) + present(saisies.get('REPGROREP13', 0)) + present(saisies.get('REPSINFOR4', 0)) + present(saisies.get('RFRN3', 0)))
INDRNSC = is_positive(present(saisies.get('ANOCEP', 0)) + present(saisies.get('BA1AC', 0)) + present(saisies.get('BACDEC', 0)) + present(saisies.get('BACREC', 0)) + present(saisies.get('BAEXC', 0)) + present(saisies.get('BAF1AC', 0)) + present(saisies.get('BAFC', 0)) + present(saisies.get('BAFPVC', 0)) + present(saisies.get('BAHDEC', 0)) + present(saisies.get('BAHEXC', 0)) + present(saisies.get('BAHREC', 0)) + present(saisies.get('BAPERPC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BI2AC', 0)) + present(saisies.get('BICDEC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('BICEXC', 0)) + present(saisies.get('BICHDEC', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('BIHDNC', 0)) + present(saisies.get('BIHEXC', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('BIPERPC', 0)) + present(saisies.get('BN1AC', 0)) + present(saisies.get('BNCDEC', 0)) + present(saisies.get('BNCEXC', 0)) + present(saisies.get('BNCPRO1AC', 0)) + present(saisies.get('BNCPROC', 0)) + present(saisies.get('BNCPMVCTV', 0)) + present(saisies.get('BNCPRODEC', 0)) + present(saisies.get('BNCPROEXC', 0)) + present(saisies.get('BNCPROPVC', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BNHDEC', 0)) + present(saisies.get('BNHEXC', 0)) + present(saisies.get('BNHREC', 0)) + present(saisies.get('DAGRI6', 0)) + present(saisies.get('DAGRI5', 0)) + present(saisies.get('DAGRI4', 0)) + present(saisies.get('DAGRI3', 0)) + present(saisies.get('DAGRI2', 0)) + present(saisies.get('DAGRI1', 0)) + present(saisies.get('DEFBIC1', 0)) + present(saisies.get('DEFBIC2', 0)) + present(saisies.get('DEFBIC3', 0)) + present(saisies.get('DEFBIC4', 0)) + present(saisies.get('DEFBIC5', 0)) + present(saisies.get('DEFBIC6', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('FEXC', 0)) + present(saisies.get('MIB1AC', 0)) + present(saisies.get('BICPMVCTV', 0)) + present(saisies.get('BICPMVCTC', 0)) + present(saisies.get('BICPMVCTP', 0)) + present(saisies.get('MIBDEC', 0)) + present(saisies.get('MIBEXC', 0)) + present(saisies.get('MIBPRESC', 0)) + present(saisies.get('MIBPVC', 0)) + present(saisies.get('MIBVENC', 0)) + present(saisies.get('PVINVE', 0)) + present(saisies.get('RCSC', 0)) + 0)
INDRNSP = is_positive(present(saisies.get('ANOCEP', 0)) + present(saisies.get('BA1AP', 0)) + present(saisies.get('BACDEP', 0)) + present(saisies.get('BACREP', 0)) + present(saisies.get('BAEXP', 0)) + present(saisies.get('BAF1AP', 0)) + present(saisies.get('BAFP', 0)) + present(saisies.get('BAFPVP', 0)) + present(saisies.get('BAHDEP', 0)) + present(saisies.get('BAHEXP', 0)) + present(saisies.get('BAHREP', 0)) + present(saisies.get('BAPERPP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BI2AP', 0)) + present(saisies.get('BICDEP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('BICEXP', 0)) + present(saisies.get('BICHDEP', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('BIHDNP', 0)) + present(saisies.get('BIHEXP', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('BIPERPP', 0)) + present(saisies.get('BN1AP', 0)) + present(saisies.get('BNCDEP', 0)) + present(saisies.get('BNCEXP', 0)) + present(saisies.get('BNCPRO1AP', 0)) + present(saisies.get('BNCPROP', 0)) + present(saisies.get('BNCPMVCTV', 0)) + present(saisies.get('BNCPRODEP', 0)) + present(saisies.get('BNCPROEXP', 0)) + present(saisies.get('BNCPROPVP', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BNHDEP', 0)) + present(saisies.get('BNHEXP', 0)) + present(saisies.get('BNHREP', 0)) + present(saisies.get('DAGRI6', 0)) + present(saisies.get('DAGRI5', 0)) + present(saisies.get('DAGRI4', 0)) + present(saisies.get('DAGRI3', 0)) + present(saisies.get('DAGRI2', 0)) + present(saisies.get('DAGRI1', 0)) + present(saisies.get('DEFBIC1', 0)) + present(saisies.get('DEFBIC2', 0)) + present(saisies.get('DEFBIC3', 0)) + present(saisies.get('DEFBIC4', 0)) + present(saisies.get('DEFBIC5', 0)) + present(saisies.get('DEFBIC6', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('FEXP', 0)) + present(saisies.get('MIB1AP', 0)) + present(saisies.get('BICPMVCTV', 0)) + present(saisies.get('BICPMVCTC', 0)) + present(saisies.get('BICPMVCTP', 0)) + present(saisies.get('MIBDEP', 0)) + present(saisies.get('MIBEXP', 0)) + present(saisies.get('MIBPRESP', 0)) + present(saisies.get('MIBPVP', 0)) + present(saisies.get('MIBVENP', 0)) + present(saisies.get('PVINVE', 0)) + present(saisies.get('RCSP', 0)) + 0)
INDRNSV = is_positive(present(saisies.get('ANOCEP', 0)) + present(saisies.get('BA1AV', 0)) + present(saisies.get('BACDEV', 0)) + present(saisies.get('BACREV', 0)) + present(saisies.get('BAEXV', 0)) + present(saisies.get('BAF1AV', 0)) + present(saisies.get('BAFV', 0)) + present(saisies.get('BAFPVV', 0)) + present(saisies.get('BAHDEV', 0)) + present(saisies.get('BAHEXV', 0)) + present(saisies.get('BAHREV', 0)) + present(saisies.get('BAPERPV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BI2AV', 0)) + present(saisies.get('BICDEV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('BICEXV', 0)) + present(saisies.get('BICHDEV', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('BIHDNV', 0)) + present(saisies.get('BIHEXV', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('BIPERPV', 0)) + present(saisies.get('BN1AV', 0)) + present(saisies.get('BNCDEV', 0)) + present(saisies.get('BNCEXV', 0)) + present(saisies.get('BNCPRO1AV', 0)) + present(saisies.get('BNCPROV', 0)) + present(saisies.get('BNCPMVCTV', 0)) + present(saisies.get('BNCPRODEV', 0)) + present(saisies.get('BNCPROEXV', 0)) + present(saisies.get('BNCPROPVV', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BNHDEV', 0)) + present(saisies.get('BNHEXV', 0)) + present(saisies.get('BNHREV', 0)) + present(saisies.get('DAGRI6', 0)) + present(saisies.get('DAGRI5', 0)) + present(saisies.get('DAGRI4', 0)) + present(saisies.get('DAGRI3', 0)) + present(saisies.get('DAGRI2', 0)) + present(saisies.get('DAGRI1', 0)) + present(saisies.get('DEFBIC1', 0)) + present(saisies.get('DEFBIC2', 0)) + present(saisies.get('DEFBIC3', 0)) + present(saisies.get('DEFBIC4', 0)) + present(saisies.get('DEFBIC5', 0)) + present(saisies.get('DEFBIC6', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('FEXV', 0)) + present(saisies.get('MIB1AV', 0)) + present(saisies.get('BICPMVCTV', 0)) + present(saisies.get('BICPMVCTC', 0)) + present(saisies.get('BICPMVCTP', 0)) + present(saisies.get('MIBDEV', 0)) + present(saisies.get('MIBEXV', 0)) + present(saisies.get('MIBPRESV', 0)) + present(saisies.get('MIBPVV', 0)) + present(saisies.get('MIBVENV', 0)) + present(saisies.get('PVINVE', 0)) + present(saisies.get('RCSV', 0)) + 0)
INDTRAIT = is_zero(5 - saisies.get('V_IND_TRAIT', 0))
INDTS = is_positive(INDCOLS + INDCTXS) * INDTRAIT
INDV = positif_ou_nul(is_positive(saisies.get('ALLOV', 0)) + is_positive(saisies.get('REMPLAV', 0)) + is_positive(saisies.get('REMPLANBV', 0)) + is_positive(saisies.get('BACDEV', 0)) + is_positive(saisies.get('BACREV', 0)) + is_positive(_4BACREV) + is_positive(_4BAHREV) + is_positive(saisies.get('BAFPVV', 0)) + is_positive(saisies.get('BAFV', 0)) + is_positive(saisies.get('BAHDEV', 0)) + is_positive(saisies.get('BAHREV', 0)) + is_positive(saisies.get('BICDEV', 0)) + is_positive(saisies.get('BICDNV', 0)) + is_positive(saisies.get('BICHDEV', 0)) + is_positive(saisies.get('BICHREV', 0)) + is_positive(saisies.get('BICNOV', 0)) + is_positive(saisies.get('BICREV', 0)) + is_positive(saisies.get('BIHDNV', 0)) + is_positive(saisies.get('BIHNOV', 0)) + is_positive(saisies.get('BNCAADV', 0)) + is_positive(saisies.get('BNCAABV', 0)) + is_positive(saisies.get('BNCDEV', 0)) + is_positive(saisies.get('BNCNPPVV', 0)) + is_positive(saisies.get('BNCNPV', 0)) + is_positive(saisies.get('BNCPROPVV', 0)) + is_positive(saisies.get('BNCPROV', 0)) + is_positive(saisies.get('BNCREV', 0)) + is_positive(saisies.get('BNHDEV', 0)) + is_positive(saisies.get('BNHREV', 0)) + is_positive(saisies.get('BPCOSAV', 0)) + is_positive(saisies.get('CARPENBAV', 0)) + is_positive(saisies.get('CARPEV', 0)) + is_positive(saisies.get('CARTSNBAV', 0)) + is_positive(saisies.get('CARTSV', 0)) + is_positive(saisies.get('COTFV', 0)) + is_positive(saisies.get('DETSV', 0)) + is_positive(saisies.get('FRNV', 0)) + is_positive(saisies.get('GLD1V', 0)) + is_positive(saisies.get('GLDGRATV', 0)) + is_positive(saisies.get('GLD2V', 0)) + is_positive(saisies.get('GLD3V', 0)) + is_positive(saisies.get('ANOCEP', 0)) + is_positive(saisies.get('MIBNPPRESV', 0)) + is_positive(saisies.get('MIBNPPVV', 0)) + is_positive(saisies.get('MIBNPVENV', 0)) + is_positive(saisies.get('MIBPRESV', 0)) + is_positive(saisies.get('MIBPVV', 0)) + is_positive(saisies.get('MIBVENV', 0)) + is_positive(saisies.get('PALIV', 0)) + is_positive(saisies.get('PENSALV', 0)) + is_positive(saisies.get('PENSALNBV', 0)) + is_positive(saisies.get('PEBFV', 0)) + is_positive(saisies.get('PRBRV', 0)) + is_positive(saisies.get('TSHALLOV', 0)) + is_positive(saisies.get('DNOCEP', 0)) + is_positive(saisies.get('BAFORESTV', 0)) + is_positive(saisies.get('LOCPROCGAV', 0)) + is_positive(saisies.get('LOCPROV', 0)) + is_positive(saisies.get('LOCNPCGAV', 0)) + is_positive(saisies.get('LOCNPV', 0)) + is_positive(saisies.get('LOCDEFNPCGAV', 0)) + is_positive(saisies.get('LOCDEFNPV', 0)) + is_positive(saisies.get('MIBMEUV', 0)) + is_positive(saisies.get('MIBGITEV', 0)) + is_positive(saisies.get('BICPMVCTV', 0)) + is_positive(saisies.get('BNCPMVCTV', 0)) + is_positive(saisies.get('LOCGITV', 0)) + is_positive(saisies.get('PENINV', 0)) + is_positive(saisies.get('CODRAZ', 0)) + is_positive(saisies.get('CODDAJ', 0)) + is_positive(saisies.get('CODEAJ', 0)))
IND_BTANC = is_zero(saisies.get('V_IND_TRAIT', 0) - 4) * is_positive(saisies.get('APPLI_OCEANS', 0)) * 1 + is_positive(saisies.get('APPLI_COLBERT', 0)) + is_positive(APPLI_BATCH) * saisies.get('V_BTANC', 0) + is_positive(APPLI_ILIAD) * is_positive(saisies.get('V_CALCULIR', 0)) * 1 + 1 - is_positive(saisies.get('V_CALCULIR', 0)) * saisies.get('V_BTANC', 0) + is_zero(saisies.get('V_IND_TRAIT', 0) - 5) * 1
IND_COLS = 0
IND_CTXS = 0
IND_SPR = is_positive(sum([present(PRB1) + present(TSBN1) + present(saisies.get('FRN1', 0)), present(PRB2) + present(TSBN2) + present(saisies.get('FRN2', 0)), present(PRB3) + present(TSBN3) + present(saisies.get('FRN3', 0)), present(PRB4) + present(TSBN4) + present(saisies.get('FRN4', 0)), present(PRBV) + present(TSBNV) + present(saisies.get('FRNV', 0)), present(PRBC) + present(TSBNC) + present(saisies.get('FRNC', 0))]) + sum([present(saisies.get('GLD1V', 0)), present(saisies.get('GLD2V', 0)), present(saisies.get('GLD1C', 0)), present(saisies.get('GLD2C', 0))]) + sum([present(_2TSN1) + present(_2PRB1), present(_2TSN2) + present(_2PRB2), present(_2TSN3) + present(_2PRB3), present(_2TSN4) + present(_2PRB4), present(_2TSNV) + present(_2PRBV), present(_2TSNC) + present(_2PRBC), present(_3TSN1) + present(_3PRB1), present(_3TSN2) + present(_3PRB2), present(_3TSN3) + present(_3PRB3), present(_3TSN4) + present(_3PRB4), present(_3TSNV) + present(_3PRBV), present(_3TSNC) + present(_3PRBC), present(_4TSN1) + present(_4PRB1), present(_4TSN2) + present(_4PRB2), present(_4TSN3) + present(_4PRB3), present(_4TSN4) + present(_4PRB4), present(_4TSNV) + present(_4PRBV), present(_4TSNC) + present(_4PRBC)]))
IND_ZIGPROF = is_positive(saisies.get('V_NOTRAIT', 0) - 20) * is_positive(present(saisies.get('RCSV', 0)) + present(saisies.get('RCSC', 0)) + present(saisies.get('RCSP', 0)))
IND_ZIGRCM = is_positive(present(saisies.get('RCMABD', 0)) + present(saisies.get('RCMAV', 0)) + present(saisies.get('RCMHAD', 0)) + present(saisies.get('RCMHAB', 0)) + present(saisies.get('RCMTNC', 0)) + present(saisies.get('RCMAVFT', 0)) + present(saisies.get('REGPRIV', 0))) * is_positive(saisies.get('V_NOTRAIT', 0) - 20)
IND_ZIGREVORIGIND = present(saisies.get('ESFP', 0))
IND_ZIGRFG = is_positive(saisies.get('V_NOTRAIT', 0) - 20) * is_positive(present(saisies.get('RFORDI', 0)) + present(saisies.get('RFDORD', 0)) + present(saisies.get('RFDHIS', 0)) + present(saisies.get('RFMIC', 0)))
IND_ZIGRTF = is_positive(saisies.get('V_NOTRAIT', 0) - 20) * is_positive(present(saisies.get('PEA', 0)) + present(saisies.get('BPCOPTV', 0)) + present(saisies.get('BPVRCM', 0)))
IND_ZIGRVT = 0
INTMS = inf(saisies.get('MOISAN', 0) / 10000)
INTMSISF = inf(saisies.get('MOISAN_ISF', 0) / 10000)
IPCAPTAXC = round(BPCAPTAXC * T_PCAPTAX / 100)
IPCAPTAXTOT = sum([IPCAPTAXV, IPCAPTAXC])
IPCAPTAXV = round(BPCAPTAXV * T_PCAPTAX / 100)
IQUOTOT7 = IN57 - IN07
IRCUM_A = 0
IREXITI19 = 0
IREXITS19 = 0
IRNIN_A = 0
ISFDEG = 0
ISFDEGR = 0
JEUNART = sum([BNCCREAV, BNCCREAC, BNCCREAP])
LIG022 = sum([TSNN21AFF, TSNN22AFF, TSNN23AFF, TSNN24AFF])
LIG023 = sum([_3TSN1, _3TSN2, _3TSN3, _3TSN4])
LIG024 = sum([_4TSN1, _4TSN2, _4TSN3, _4TSN4])
LIG062C = saisies.get('CARPEC', 0) + saisies.get('CARPENBAC', 0) + saisies.get('PENSALC', 0) + saisies.get('PENSALNBC', 0) + saisies.get('CODRBZ', 0)
LIG062P = sum([saisies.get('CARPEP1', 0) + saisies.get('CARPENBAP1', 0), saisies.get('CARPEP2', 0) + saisies.get('CARPENBAP2', 0), saisies.get('CARPEP3', 0) + saisies.get('CARPENBAP3', 0), saisies.get('CARPEP4', 0) + saisies.get('CARPENBAP4', 0)]) + sum([saisies.get('PENSALP1', 0) + saisies.get('PENSALNBP1', 0), saisies.get('PENSALP2', 0) + saisies.get('PENSALNBP2', 0), saisies.get('PENSALP3', 0) + saisies.get('PENSALNBP3', 0), saisies.get('PENSALP4', 0) + saisies.get('PENSALNBP4', 0)]) + saisies.get('CODRCZ', 0) + saisies.get('CODRDZ', 0) + saisies.get('CODREZ', 0) + saisies.get('CODRFZ', 0)
LIG062V = saisies.get('CARPEV', 0) + saisies.get('CARPENBAV', 0) + saisies.get('PENSALV', 0) + saisies.get('PENSALNBV', 0) + saisies.get('CODRAZ', 0)
LIG066 = sum([saisies.get('PEBF1', 0), saisies.get('PEBF2', 0), saisies.get('PEBF3', 0), saisies.get('PEBF4', 0)])
LIG1 = 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
LIG10P = positif_ou_nul(sum([TSBN1 + PRB1, TSBN2 + PRB2, TSBN3 + PRB3, TSBN4 + PRB4]) + is_positive(F10AP * is_zero(sum([TSBN1 + PRB1, TSBN2 + PRB2, TSBN3 + PRB3, TSBN4 + PRB4]))))
LIG13 = is_positive(present(saisies.get('BACDEV', 0)) + present(saisies.get('BACREV', 0)) + present(saisies.get('BAHDEV', 0)) + present(saisies.get('BAHREV', 0)) + present(saisies.get('BACDEC', 0)) + present(saisies.get('BACREC', 0)) + present(saisies.get('BAHDEC', 0)) + present(saisies.get('BAHREC', 0)) + present(saisies.get('BACDEP', 0)) + present(saisies.get('BACREP', 0)) + present(saisies.get('BAHDEP', 0)) + present(saisies.get('BAHREP', 0)) + present(_4BAHREV) + present(_4BAHREC) + present(_4BAHREP) + present(_4BACREV) + present(_4BACREC) + present(_4BACREP) + present(saisies.get('BAFV', 0)) + present(saisies.get('BAFC', 0)) + present(saisies.get('BAFP', 0)) + present(saisies.get('BAFORESTV', 0)) + present(saisies.get('BAFORESTC', 0)) + present(saisies.get('BAFORESTP', 0)) + present(saisies.get('BAFPVV', 0)) + present(saisies.get('BAFPVC', 0)) + present(saisies.get('BAFPVP', 0))) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1
LIG134C = is_positive(present(saisies.get('BAFC', 0)) + present(saisies.get('BAHREC', 0)) + present(saisies.get('BAHDEC', 0)) + present(saisies.get('BACREC', 0)) + present(saisies.get('BACDEC', 0)) + present(saisies.get('BAFPVC', 0)) + present(saisies.get('BAFORESTC', 0)))
LIG134P = is_positive(present(saisies.get('BAFP', 0)) + present(saisies.get('BAHREP', 0)) + present(saisies.get('BAHDEP', 0)) + present(saisies.get('BACREP', 0)) + present(saisies.get('BACDEP', 0)) + present(saisies.get('BAFPVP', 0)) + present(saisies.get('BAFORESTP', 0)))
LIG134V = is_positive(present(saisies.get('BAFV', 0)) + present(saisies.get('BAHREV', 0)) + present(saisies.get('BAHDEV', 0)) + present(saisies.get('BACREV', 0)) + present(saisies.get('BACDEV', 0)) + present(saisies.get('BAFPVV', 0)) + present(saisies.get('BAFORESTV', 0)))
LIG2 = 1 - is_positive(saisies.get('ANNUL2042', 0))
LIG2052 = 1 - is_positive(saisies.get('V_ANTREIR', 0) + 0) * 1 - saisies.get('APPLI_OCEANS', 0)
LIG2RCMABT = is_positive(present(saisies.get('REVACT', 0)) + present(saisies.get('REVPEA', 0)) + present(saisies.get('PROVIE', 0)) + present(saisies.get('DISQUO', 0)) + present(saisies.get('RESTUC', 0)) + present(saisies.get('INTERE', 0))) * 1 - is_positive(saisies.get('IPVLOC', 0)) * LIG1 * LIG2 * is_positive(INDREV1A8IR)
LIG30 = is_positive(saisies.get('RFMIC', 0)) * 1 - is_positive(saisies.get('IPVLOC', 0)) * LIG1 * LIG2
LIG3510 = is_positive(saisies.get('V_FORVA', 0)) * 1 - positif_ou_nul(saisies.get('BAFV', 0)) + is_positive(saisies.get('V_FORCA', 0)) * 1 - positif_ou_nul(saisies.get('BAFC', 0)) + is_positive(saisies.get('V_FORPA', 0)) * 1 - positif_ou_nul(saisies.get('BAFP', 0)) * 1 - is_positive(saisies.get('IPVLOC', 0)) * LIG1
LIG3710 = is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_positive(BOOL_0AZ) * LIG1
LIG3730 = 1 - is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_positive(BOOL_0AZ) * LIG1
LIG390 = saisies.get('GLD1V', 0) + saisies.get('GLD1C', 0)
LIG4271 = is_positive(is_positive(saisies.get('V_0AB', 0)) * LIG1) * 1 - is_positive(saisies.get('ANNUL2042', 0) + 0)
LIG52 = is_positive(present(saisies.get('CHENF1', 0)) + present(saisies.get('CHENF2', 0)) + present(saisies.get('CHENF3', 0)) + present(saisies.get('CHENF4', 0)) + present(saisies.get('NCHENF1', 0)) + present(saisies.get('NCHENF2', 0)) + present(saisies.get('NCHENF3', 0)) + present(saisies.get('NCHENF4', 0))) * LIG1 * LIG2
LIG58 = present(saisies.get('PAAV', 0)) + present(saisies.get('PAAP', 0)) * is_positive(LIG52) * LIG1 * LIG2
LIG585 = present(saisies.get('PAAP', 0)) + present(saisies.get('PAAV', 0)) * 1 - is_positive(LIG58) * LIG1 * LIG2
LIG7CY = is_positive(saisies.get('COD7CY', 0)) * LIG1 * LIG2
LIG80 = is_positive(present(saisies.get('RDREP', 0)) + present(saisies.get('DONETRAN', 0))) * LIG1 * LIG2
LIG81 = is_positive(present(saisies.get('RDDOUP', 0)) + present(saisies.get('DONAUTRE', 0)) + present(saisies.get('REPDON03', 0)) + present(saisies.get('REPDON04', 0)) + present(saisies.get('REPDON05', 0)) + present(saisies.get('REPDON06', 0)) + present(saisies.get('REPDON07', 0)) + present(saisies.get('COD7UH', 0)) + is_positive(EXCEDANTA)) * LIG1 * LIG2
LIG82 = is_positive(present(saisies.get('RDSYVO', 0)) + present(saisies.get('RDSYCJ', 0)) + present(saisies.get('RDSYPP', 0))) * LIG1 * LIG2
LIGABDET = is_positive(saisies.get('GAINABDET', 0)) * LIG1 * LIG2
LIGABDETM = is_positive(saisies.get('ABDETMOINS', 0)) * LIG1 * LIG2
LIGABDETP = is_positive(saisies.get('ABDETPLUS', 0)) * LIG1 * LIG2
LIGABIMPMV = is_positive(saisies.get('ABIMPMV', 0)) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGABIMPPV = is_positive(saisies.get('ABIMPPV', 0)) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGANNUL = is_positive(saisies.get('ANNUL2042', 0))
LIGANTREIR = is_positive(saisies.get('V_ANTREIR', 0) + 0) * 1 - is_positive(saisies.get('V_ANTCR', 0)) * 1 - saisies.get('APPLI_OCEANS', 0)
LIGBAPERP = is_positive(saisies.get('BAPERPV', 0) + saisies.get('BAPERPC', 0) + saisies.get('BAPERPP', 0) + saisies.get('BANOCGAV', 0) + saisies.get('BANOCGAC', 0) + saisies.get('BANOCGAP', 0)) * LIG1 * LIG2
LIGBASRET = is_positive(present(saisies.get('IMPRET', 0)) + present(saisies.get('BASRET', 0))) * LIG1 * LIG2
LIGBICAP = is_positive(ABICPDECV + ABICPDECC + ABICPDECP) * LIG1 * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0))) * LIG2
LIGBIPERP = is_positive(saisies.get('BIPERPV', 0) + saisies.get('BIPERPC', 0) + saisies.get('BIPERPP', 0)) * LIG1 * LIG2
LIGBLOC = is_positive(saisies.get('V_NOTRAIT', 0) - 20)
LIGBNCAP = is_positive(ABNCPDECV + ABNCPDECC + ABNCPDECP) * LIG1 * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0))) * LIG2
LIGBNCCREA = is_positive(BNCCREAV + BNCCREAC + BNCCREAP) * LIG1 * LIG2
LIGBPTPGJ = is_positive(BPTP19WGWJ) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGCDIS = is_positive(saisies.get('GSALV', 0) + saisies.get('GSALC', 0)) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGCEL = is_positive(DCEL) * LIG1 * LIG2
LIGCEL2012 = is_positive(DCEL2012) * LIG1 * LIG2
LIGCELCOM = is_positive(DCELCOM) * LIG1 * LIG2
LIGCELFABC = is_positive(DCELFABC) * LIG1 * LIG2
LIGCELFD = is_positive(DCELFD) * LIG1 * LIG2
LIGCELGJ = is_positive(DCELREPGJ) * LIG1 * LIG2
LIGCELGK = is_positive(DCELREPGK) * LIG1 * LIG2
LIGCELGL = is_positive(DCELREPGL) * LIG1 * LIG2
LIGCELGP = is_positive(DCELREPGP) * LIG1 * LIG2
LIGCELGS = is_positive(DCELREPGS) * LIG1 * LIG2
LIGCELGT = is_positive(DCELREPGT) * LIG1 * LIG2
LIGCELGU = is_positive(DCELREPGU) * LIG1 * LIG2
LIGCELGV = is_positive(DCELREPGV) * LIG1 * LIG2
LIGCELGW = is_positive(DCELREPGW) * LIG1 * LIG2
LIGCELGX = is_positive(DCELREPGX) * LIG1 * LIG2
LIGCELHA = is_positive(DCELREPHA) * LIG1 * LIG2
LIGCELHB = is_positive(DCELREPHB) * LIG1 * LIG2
LIGCELHD = is_positive(DCELREPHD) * LIG1 * LIG2
LIGCELHE = is_positive(DCELREPHE) * LIG1 * LIG2
LIGCELHF = is_positive(DCELREPHF) * LIG1 * LIG2
LIGCELHG = is_positive(DCELREPHG) * LIG1 * LIG2
LIGCELHH = is_positive(DCELREPHH) * LIG1 * LIG2
LIGCELHJK = is_positive(DCELHJK) * LIG1 * LIG2
LIGCELHL = is_positive(DCELHL) * LIG1 * LIG2
LIGCELHM = is_positive(DCELHM) * LIG1 * LIG2
LIGCELHNO = is_positive(DCELHNO) * LIG1 * LIG2
LIGCELHR = is_positive(DCELREPHR) * LIG1 * LIG2
LIGCELHS = is_positive(DCELREPHS) * LIG1 * LIG2
LIGCELHT = is_positive(DCELREPHT) * LIG1 * LIG2
LIGCELHU = is_positive(DCELREPHU) * LIG1 * LIG2
LIGCELHV = is_positive(DCELREPHV) * LIG1 * LIG2
LIGCELHW = is_positive(DCELREPHW) * LIG1 * LIG2
LIGCELHX = is_positive(DCELREPHX) * LIG1 * LIG2
LIGCELHZ = is_positive(DCELREPHZ) * LIG1 * LIG2
LIGCELJBGL = is_positive(DCELJBGL) * LIG1 * LIG2
LIGCELJOQR = is_positive(DCELJOQR) * LIG1 * LIG2
LIGCELJP = is_positive(DCELJP) * LIG1 * LIG2
LIGCELLA = is_positive(DCELRREDLA) * LIG1 * LIG2
LIGCELLB = is_positive(DCELRREDLB) * LIG1 * LIG2
LIGCELLC = is_positive(DCELRREDLC) * LIG1 * LIG2
LIGCELLD = is_positive(DCELRREDLD) * LIG1 * LIG2
LIGCELLE = is_positive(DCELRREDLE) * LIG1 * LIG2
LIGCELLF = is_positive(DCELRREDLF) * LIG1 * LIG2
LIGCELLM = is_positive(DCELRREDLM) * LIG1 * LIG2
LIGCELLN = is_positive(DCELRREDLN) * LIG1 * LIG2
LIGCELLS = is_positive(DCELRREDLS) * LIG1 * LIG2
LIGCELLT = is_positive(DCELRREDLT) * LIG1 * LIG2
LIGCELLX = is_positive(DCELRREDLX) * LIG1 * LIG2
LIGCELLZ = is_positive(DCELRREDLZ) * LIG1 * LIG2
LIGCELMG = is_positive(DCELRREDMG) * LIG1 * LIG2
LIGCELMH = is_positive(DCELRREDMH) * LIG1 * LIG2
LIGCELNBGL = is_positive(DCELNBGL) * LIG1 * LIG2
LIGCELNQ = is_positive(DCELNQ) * LIG1 * LIG2
LIGCELYA = is_positive(DCELREPYA) * LIG1 * LIG2
LIGCELYB = is_positive(DCELREPYB) * LIG1 * LIG2
LIGCELYC = is_positive(DCELREPYC) * LIG1 * LIG2
LIGCELYD = is_positive(DCELREPYD) * LIG1 * LIG2
LIGCELYE = is_positive(DCELREPYE) * LIG1 * LIG2
LIGCELYF = is_positive(DCELREPYF) * LIG1 * LIG2
LIGCELYG = is_positive(DCELREPYG) * LIG1 * LIG2
LIGCELYH = is_positive(DCELREPYH) * LIG1 * LIG2
LIGCELYI = is_positive(DCELREPYI) * LIG1 * LIG2
LIGCELYJ = is_positive(DCELREPYJ) * LIG1 * LIG2
LIGCELYK = is_positive(DCELREPYK) * LIG1 * LIG2
LIGCELYL = is_positive(DCELREPYL) * LIG1 * LIG2
LIGCI2CK = is_positive(saisies.get('COD2CK', 0)) * LIG1 * LIG2
LIGCI8XV = present(saisies.get('COD8XV', 0)) * LIG1 * LIG2
LIGCICA = is_positive(saisies.get('BAILOC98', 0)) * LIG1 * LIG2
LIGCICAP = present(saisies.get('PRELIBXT', 0)) * LIG1 * LIG2
LIGCIFORET = is_positive(BDCIFORET) * LIG1 * LIG2
LIGCIGARD = is_positive(DGARD) * LIG1 * LIG2
LIGCIGE = is_positive(saisies.get('RDTECH', 0) + saisies.get('RDEQPAHA', 0)) * LIG1 * LIG2
LIGCIGLO = is_positive(present(saisies.get('COD8XF', 0)) + present(saisies.get('COD8XG', 0)) + present(saisies.get('COD8XH', 0))) * LIG1 * LIG2
LIGCINE = is_positive(DCINE) * LIG1 * LIG2
LIGCITEC = is_positive(DTEC) * LIG1 * LIG2
LIGCOD3SG = is_positive(saisies.get('COD3SG', 0)) * LIG1 * LIG2
LIGCOD3SH = is_positive(saisies.get('COD3SH', 0)) * LIG1 * LIG2
LIGCOD3SL = is_positive(saisies.get('COD3SL', 0)) * LIG1 * LIG2
LIGCOD3SM = is_positive(saisies.get('COD3SM', 0)) * LIG1 * LIG2
LIGCODJTJU = is_positive(DCODJTJU) * LIG1 * LIG2
LIGCODOU = is_positive(DCODOU) * LIG1 * LIG2
LIGCOLENT = is_positive(DCOLENT) * LIG1 * LIG2
LIGCONGA = is_positive(saisies.get('CRECONGAGRI', 0)) * LIG1 * LIG2
LIGCORSE = is_positive(present(saisies.get('CIINVCORSE', 0)) + present(saisies.get('IPREPCORSE', 0)) + present(saisies.get('CICORSENOW', 0))) * LIG1 * LIG2
LIGCOTFOR = is_positive(DCOTFOR) * LIG1 * LIG2
LIGCREAPP = is_positive(saisies.get('CREAPP', 0)) * LIG1 * LIG2
LIGCREAT = is_positive(DCREAT + DCREATHANDI) * LIG1 * LIG2
LIGCREBIO = is_positive(saisies.get('CREAGRIBIO', 0)) * LIG1 * LIG2
LIGCREFAM = is_positive(saisies.get('CREFAM', 0)) * LIG1 * LIG2
LIGCREFORM = is_positive(saisies.get('CREFORMCHENT', 0)) * LIG1 * LIG2
LIGCREPROSP = is_positive(saisies.get('CREPROSP', 0)) * LIG1 * LIG2
LIGCULTURE = present(saisies.get('CIAQCUL', 0)) * LIG1 * LIG2
LIGCVNSAL = is_positive(CVNSALC) * LIG1 * LIG2
LIGDEVDUR = is_positive(DDEVDUR) * LIG1 * LIG2
LIGDFACC = is_positive(20 - saisies.get('V_NOTRAIT', 0) + 0) * is_positive(DFACC) + 1 - is_positive(20 - saisies.get('V_NOTRAIT', 0) + 0) * present(DFACC) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1
LIGDOMSOC1 = is_positive(DDOMSOC1) * LIG1 * LIG2
LIGDPREC = present(saisies.get('CHRFAC', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1
LIGDRCVM = is_positive(saisies.get('DPVRCM', 0)) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDUFI = is_positive(saisies.get('DUFLOFI', 0)) * LIG1 * LIG2
LIGDUFLOEKL = is_positive(DDUFLOEKL) * LIG1 * LIG2
LIGDUFLOGIH = is_positive(DDUFLOGIH) * LIG1 * LIG2
LIGDUFLOT = LIGDUFI + LIGDUFLOGIH + LIGDUFLOEKL
LIGELURAS = is_positive(saisies.get('ELURASV', 0)) * LIG1 * LIG2
LIGELURASC = is_positive(saisies.get('ELURASC', 0)) * LIG1 * LIG2
LIGEMPLOI = is_positive(saisies.get('COD8UW', 0) + saisies.get('COD8TL', 0)) * LIG1 * LIG2
LIGEXOCET = is_positive(EXOCET) * LIG1 * LIG2
LIGFIPC = is_positive(DFIPC) * LIG1 * LIG2
LIGFIPDOM = is_positive(DFIPDOM) * LIG1 * LIG2
LIGFORET = is_positive(DFORET) * LIG1 * LIG2
LIGHABPRIN = is_positive(present(saisies.get('PREHABT', 0)) + present(saisies.get('PREHABT1', 0)) + present(saisies.get('PREHABT2', 0)) + present(saisies.get('PREHABTN', 0)) + present(saisies.get('PREHABTN1', 0)) + present(saisies.get('PREHABTN2', 0)) + present(saisies.get('PREHABTVT', 0))) * LIG1 * LIG2
LIGHONO = is_positive(HONODECV + HONODECC + HONODECP) * LIG1 * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0))) * LIG2
LIGILMIA = is_positive(DILMIA) * LIG1 * LIG2
LIGILMIB = is_positive(DILMIB) * LIG1 * LIG2
LIGILMIC = is_positive(DILMIC) * LIG1 * LIG2
LIGILMIH = is_positive(DILMIH) * LIG1 * LIG2
LIGILMIX = is_positive(DILMIX) * LIG1 * LIG2
LIGILMIY = is_positive(DILMIY) * LIG1 * LIG2
LIGILMIZ = is_positive(DILMIZ) * LIG1 * LIG2
LIGILMJC = is_positive(DILMJC) * LIG1 * LIG2
LIGILMJI = is_positive(DILMJI) * LIG1 * LIG2
LIGILMJS = is_positive(DILMJS) * LIG1 * LIG2
LIGILMJV = is_positive(DILMJV) * LIG1 * LIG2
LIGILMJW = is_positive(DILMJW) * LIG1 * LIG2
LIGILMJX = is_positive(DILMJX) * LIG1 * LIG2
LIGILMJY = is_positive(DILMJY) * LIG1 * LIG2
LIGILMOA = is_positive(DILMOA) * LIG1 * LIG2
LIGILMOB = is_positive(DILMOB) * LIG1 * LIG2
LIGILMOC = is_positive(DILMOC) * LIG1 * LIG2
LIGILMOD = is_positive(DILMOD) * LIG1 * LIG2
LIGILMOE = is_positive(DILMOE) * LIG1 * LIG2
LIGILMPA = is_positive(DILMPA) * LIG1 * LIG2
LIGILMPB = is_positive(DILMPB) * LIG1 * LIG2
LIGILMPC = is_positive(DILMPC) * LIG1 * LIG2
LIGILMPD = is_positive(DILMPD) * LIG1 * LIG2
LIGILMPE = is_positive(DILMPE) * LIG1 * LIG2
LIGINTER = is_positive(saisies.get('CREINTERESSE', 0)) * LIG1 * LIG2
LIGINVRED = is_positive(DINVRED) * LIG1 * LIG2
LIGIPCAP = is_positive(present(saisies.get('PCAPTAXV', 0)) + present(saisies.get('PCAPTAXC', 0))) * 1 - is_positive(saisies.get('ANNUL2042', 0) + 0) * LIG1
LIGIPCAPC = present(saisies.get('PCAPTAXC', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0) + 0) * LIG1
LIGIPCAPV = present(saisies.get('PCAPTAXV', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0) + 0) * LIG1
LIGIREXI19 = is_positive(IREXITI19) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGIREXIT = is_positive(saisies.get('PVIMPOS', 0) + saisies.get('CODRWB', 0)) * is_positive(saisies.get('PVSURSI', 0) + saisies.get('CODRWA', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGIREXS19 = is_positive(IREXITS19) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGISF = 1 - is_positive(saisies.get('ISF_LIMINF', 0) + saisies.get('ISF_LIMSUP', 0)) * present(saisies.get('ISFBASE', 0)) * is_positive(DISFBASE)
LIGISFANNUL = present(saisies.get('ISFBASE', 0)) * is_positive(saisies.get('ANNUL2042', 0))
LIGISFANT = is_positive(saisies.get('V_ANTISF', 0)) * is_positive(saisies.get('V_NOTRAIT', 0) - 20)
LIGISFBASE = LIGISF * 1 - is_positive(saisies.get('ANNUL2042', 0))
LIGISFCEE = is_positive(saisies.get('ISFDONEURO', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * 1 - is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * LIGISF + present(saisies.get('ISFDONEURO', 0)) * is_positive(DISFBASE) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_zero(5 - saisies.get('V_IND_TRAIT', 0))
LIGISFCPI = is_positive(saisies.get('ISFFCPI', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * 1 - is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * LIGISF + present(saisies.get('ISFFCPI', 0)) * is_positive(DISFBASE) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_zero(5 - saisies.get('V_IND_TRAIT', 0))
LIGISFE = is_positive(DISFBASE) * is_positive(saisies.get('ISFETRANG', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * 1 - is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * LIGISF + is_positive(DISFBASE) * present(saisies.get('ISFETRANG', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_zero(5 - saisies.get('V_IND_TRAIT', 0))
LIGISFIP = is_positive(saisies.get('ISFFIP', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * 1 - is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * LIGISF + present(saisies.get('ISFFIP', 0)) * is_positive(DISFBASE) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_zero(5 - saisies.get('V_IND_TRAIT', 0))
LIGISFNEW = present(saisies.get('ISFBASE', 0)) * 1 - is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0))
LIGISFPLAF = is_positive(saisies.get('ISFPLAF', 0)) * 1 - is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * LIGISF * 1 - is_positive(saisies.get('ANNUL2042', 0)) + present(saisies.get('ISFPLAF', 0)) * is_positive(DISFBASE) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_zero(5 - saisies.get('V_IND_TRAIT', 0))
LIGISFPMED = is_positive(saisies.get('ISFPMEDI', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * 1 - is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * LIGISF + present(saisies.get('ISFPMEDI', 0)) * is_positive(DISFBASE) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_zero(5 - saisies.get('V_IND_TRAIT', 0))
LIGISFPMEI = is_positive(saisies.get('ISFPMEIN', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * 1 - is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * LIGISF + present(saisies.get('ISFPMEIN', 0)) * is_positive(DISFBASE) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * LIGISF
LIGISFRAN = is_positive(saisies.get('ISFDONF', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * 1 - is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * LIGISF + present(saisies.get('ISFDONF', 0)) * is_positive(DISFBASE) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_zero(5 - saisies.get('V_IND_TRAIT', 0))
LIGISFTRCT = present(saisies.get('ISFBASE', 0)) * is_positive(saisies.get('V_TRCT', 0))
LIGITAXLOY = present(saisies.get('LOYELEV', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1
LIGLOCENT = is_positive(DLOCENT) * LIG1 * LIG2
LIGLOCHOTR = is_positive(saisies.get('INVLOCHOTR', 0) + saisies.get('INVLOGHOT', 0)) * LIG1
LIGLOCIDEFG = is_positive(DLOCIDEFG) * LIG1 * LIG2
LIGLOGDOM = is_positive(DLOGDOM) * LIG1 * LIG2
LIGLOGSOC = is_positive(DLOGSOC) * LIG1 * LIG2
LIGLOYIMP = is_positive(saisies.get('LOYIMP', 0)) * LIG1 * LIG2
LIGMECENAT = present(saisies.get('RDMECENAT', 0)) * LIG1 * LIG2
LIGMETART = is_positive(saisies.get('CREARTS', 0)) * LIG1 * LIG2
LIGMEUBLE = is_positive(DMEUBLE) * LIG1 * LIG2
LIGMEUREP = is_positive(DREPMEU) * LIG1 * LIG2
LIGMOBNR = is_positive(saisies.get('PVMOBNR', 0)) * LIG1 * LIG2
LIGMXBINP = is_positive(saisies.get('MIBNPEXV', 0) + saisies.get('MIBNPEXC', 0) + saisies.get('MIBNPEXP', 0)) * LIG1 * LIG2
LIGMXBIP = is_positive(saisies.get('MIBEXV', 0) + saisies.get('MIBEXC', 0) + saisies.get('MIBEXP', 0)) * LIG1 * LIG2
LIGNANTREIR = is_positive(saisies.get('V_ANTREIR', 0) + 0) * is_positive(saisies.get('V_ANTCR', 0) + 0) * 1 - saisies.get('APPLI_OCEANS', 0)
LIGNONREC = is_positive(saisies.get('V_NONMERANT', 0) + 0) * 1 - saisies.get('APPLI_OCEANS', 0)
LIGNONREST = is_positive(saisies.get('V_NONRESTANT', 0) + 0) * 1 - saisies.get('APPLI_OCEANS', 0)
LIGNRBASE = is_positive(present(saisies.get('NRINET', 0)) + present(saisies.get('NRBASE', 0))) * LIG1 * LIG2
LIGPATNAT1 = LIG1 * LIG2 * is_positive(saisies.get('PATNAT1', 0)) + is_zero(saisies.get('PATNAT1', 0)) * is_positive(saisies.get('V_NOTRAIT', 0) - 20)
LIGPATNAT2 = LIG1 * LIG2 * is_positive(saisies.get('PATNAT2', 0)) + is_zero(saisies.get('PATNAT2', 0)) * is_positive(saisies.get('V_NOTRAIT', 0) - 20)
LIGPATNAT3 = LIG1 * LIG2 * is_positive(saisies.get('PATNAT3', 0)) + is_zero(saisies.get('PATNAT3', 0)) * is_positive(saisies.get('V_NOTRAIT', 0) - 20)
LIGPATNAT4 = LIG1 * LIG2 * is_positive(saisies.get('PATNAT4', 0)) + is_zero(saisies.get('PATNAT4', 0)) * is_positive(saisies.get('V_NOTRAIT', 0) - 20)
LIGPIQABCD = is_positive(DPIQABCD) * LIG1 * LIG2
LIGPRESINT = is_positive(saisies.get('PRESINTER', 0)) * LIG1 * LIG2
LIGPRETUD = is_positive(saisies.get('PRETUD', 0) + saisies.get('PRETUDANT', 0)) * LIG1 * LIG2
LIGPROREP = is_positive(DPROREP) * LIG1 * LIG2
LIGPV3WBI = is_positive(saisies.get('PVIMPOS', 0) + saisies.get('CODRWB', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGPVETR = is_positive(present(saisies.get('CIIMPPRO', 0)) + present(saisies.get('CIIMPPRO2', 0))) * LIG1 * LIG2
LIGPVIMMO = is_positive(saisies.get('PVIMMO', 0)) * LIG1 * LIG2
LIGPVIMPOS = is_positive(saisies.get('PVIMPOS', 0)) * LIG1 * LIG2
LIGPVSURSI = is_positive(saisies.get('PVSURSI', 0) + saisies.get('CODRWA', 0)) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGPVTISOC = is_positive(saisies.get('PVTITRESOC', 0)) * LIG1 * LIG2
LIGRCMABT = is_positive(present(saisies.get('RCMABD', 0)) + present(saisies.get('RCMTNC', 0)) + present(saisies.get('RCMHAD', 0)) + present(saisies.get('RCMHAB', 0)) + present(saisies.get('RCMAV', 0)) + present(saisies.get('REGPRIV', 0)) + present(saisies.get('RCMFR', 0)) + present(saisies.get('DEFRCM', 0)) + present(saisies.get('DEFRCM2', 0)) + present(saisies.get('DEFRCM3', 0)) + present(saisies.get('DEFRCM4', 0)) + present(saisies.get('DEFRCM5', 0)) + present(saisies.get('DEFRCM6', 0))) * 1 - is_positive(saisies.get('IPVLOC', 0)) * LIG1 * LIG2 * is_positive(INDREV1A8IR)
LIGRCMIMPAT = is_positive(saisies.get('RCMIMPAT', 0)) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRCMSOC = is_positive(saisies.get('RCMSOC', 0)) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRCODOU = is_positive(saisies.get('COD7OU', 0) + 0) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRDCSG = is_positive(is_positive(saisies.get('V_BTCSGDED', 0)) + present(saisies.get('DCSG', 0)) + present(saisies.get('RCMSOC', 0))) * LIG1 * LIG2
LIGREDAGRI = is_positive(DDIFAGRI) * LIG1 * LIG2
LIGREDMEUB = is_positive(DREDMEUB) * LIG1 * LIG2
LIGREDREP = is_positive(DREDREP) * LIG1 * LIG2
LIGREPHA = is_positive(saisies.get('RINVLOCREA', 0) + saisies.get('INVLOGREHA', 0) + saisies.get('INVLOCXV', 0) + saisies.get('COD7UZ', 0)) * LIG1 * LIG2
LIGREPNPRO = is_positive(DREPNPRO) * LIG1 * LIG2
LIGREPTOUR = is_positive(saisies.get('RINVLOCINV', 0) + saisies.get('REPINVTOU', 0) + saisies.get('INVLOCXN', 0) + saisies.get('COD7UY', 0)) * LIG1
LIGRESIMEUB = is_positive(DRESIMEUB) * LIG1 * LIG2
LIGRESINEUV = is_positive(DRESINEUV) * LIG1 * LIG2
LIGRESIVIEU = is_positive(DRESIVIEU) * LIG1 * LIG2
LIGRESTAU = is_positive(saisies.get('CRERESTAU', 0)) * LIG1 * LIG2
LIGRESTIMO = present(saisies.get('RIMOPPAUANT', 0)) + present(saisies.get('RIMOSAUVANT', 0)) + present(saisies.get('RESTIMOPPAU', 0)) + present(saisies.get('RESTIMOSAUV', 0)) + present(saisies.get('RIMOPPAURE', 0)) + present(saisies.get('RIMOSAUVRF', 0)) + present(saisies.get('COD7SY', 0)) + present(saisies.get('COD7SX', 0)) * LIG1 * LIG2
LIGREVRF = is_positive(present(saisies.get('FONCI', 0)) + present(saisies.get('REAMOR', 0))) * 1 - is_positive(saisies.get('IPVLOC', 0)) * LIG1 * LIG2
LIGRIRENOV = is_positive(DRIRENOV) * LIG1 * LIG2
LIGROBOR = is_positive(saisies.get('RFROBOR', 0)) * LIG1 * LIG2
LIGRSOCREPR = is_positive(present(saisies.get('RSOCREPRISE', 0))) * LIG1 * LIG2
LIGRVG = is_positive(saisies.get('CODRVG', 0)) * LIG1 * LIG2
LIGSALDOM = present(saisies.get('CREAIDE', 0)) * LIG1 * LIG2
LIGSUP = is_positive(is_zero(saisies.get('V_NOTRAIT', 0) - 26) + is_zero(saisies.get('V_NOTRAIT', 0) - 36) + is_zero(saisies.get('V_NOTRAIT', 0) - 46) + is_zero(saisies.get('V_NOTRAIT', 0) - 56) + is_zero(saisies.get('V_NOTRAIT', 0) - 66))
LIGSXBN = is_positive(saisies.get('BNCPROEXV', 0) + saisies.get('BNCPROEXC', 0) + saisies.get('BNCPROEXP', 0)) * LIG1 * LIG2
LIGTAXASSUR = is_positive(present(saisies.get('CESSASSV', 0)) + present(saisies.get('CESSASSC', 0))) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1
LIGTAXASSURC = present(saisies.get('CESSASSC', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1
LIGTAXASSURV = present(saisies.get('CESSASSV', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1
LIGTRCT = is_positive(saisies.get('V_TRCT', 0))
LIGTTPVQ = is_positive(is_positive(saisies.get('CARTSV', 0)) + is_positive(saisies.get('CARTSC', 0)) + is_positive(saisies.get('CARTSP1', 0)) + is_positive(saisies.get('CARTSP2', 0)) + is_positive(saisies.get('CARTSP3', 0)) + is_positive(saisies.get('CARTSP4', 0)) + is_positive(saisies.get('REMPLAV', 0)) + is_positive(saisies.get('REMPLAC', 0)) + is_positive(saisies.get('REMPLAP1', 0)) + is_positive(saisies.get('REMPLAP2', 0)) + is_positive(saisies.get('REMPLAP3', 0)) + is_positive(saisies.get('REMPLAP4', 0)) + is_positive(saisies.get('PEBFV', 0)) + is_positive(saisies.get('PEBFC', 0)) + is_positive(saisies.get('PEBF1', 0)) + is_positive(saisies.get('PEBF2', 0)) + is_positive(saisies.get('PEBF3', 0)) + is_positive(saisies.get('PEBF4', 0)) + is_positive(saisies.get('CARPEV', 0)) + is_positive(saisies.get('CARPEC', 0)) + is_positive(saisies.get('CARPEP1', 0)) + is_positive(saisies.get('CARPEP2', 0)) + is_positive(saisies.get('CARPEP3', 0)) + is_positive(saisies.get('CARPEP4', 0)) + is_positive(saisies.get('CODRAZ', 0)) + is_positive(saisies.get('CODRBZ', 0)) + is_positive(saisies.get('CODRCZ', 0)) + is_positive(saisies.get('CODRDZ', 0)) + is_positive(saisies.get('CODREZ', 0)) + is_positive(saisies.get('CODRFZ', 0)) + is_positive(saisies.get('PENSALV', 0)) + is_positive(saisies.get('PENSALC', 0)) + is_positive(saisies.get('PENSALP1', 0)) + is_positive(saisies.get('PENSALP2', 0)) + is_positive(saisies.get('PENSALP3', 0)) + is_positive(saisies.get('PENSALP4', 0)) + is_positive(saisies.get('RENTAX', 0)) + is_positive(saisies.get('RENTAX5', 0)) + is_positive(saisies.get('RENTAX6', 0)) + is_positive(saisies.get('RENTAX7', 0)) + is_positive(saisies.get('REVACT', 0)) + is_positive(saisies.get('REVPEA', 0)) + is_positive(saisies.get('PROVIE', 0)) + is_positive(saisies.get('DISQUO', 0)) + is_positive(saisies.get('RESTUC', 0)) + is_positive(saisies.get('INTERE', 0)) + is_positive(saisies.get('FONCI', 0)) + is_positive(saisies.get('REAMOR', 0)) + is_positive(_4BACREV) + is_positive(_4BACREC) + is_positive(_4BACREP) + is_positive(_4BAHREV) + is_positive(_4BAHREC) + is_positive(_4BAHREP) + is_positive(saisies.get('GLD1V', 0)) + is_positive(saisies.get('GLD1C', 0)) + is_positive(saisies.get('GLD2V', 0)) + is_positive(saisies.get('GLD2C', 0)) + is_positive(saisies.get('GLD3V', 0)) + is_positive(saisies.get('GLD3C', 0)) + is_positive(saisies.get('CODDAJ', 0)) + is_positive(saisies.get('CODEAJ', 0)) + is_positive(saisies.get('CODDBJ', 0)) + is_positive(saisies.get('CODEBJ', 0)) + is_positive(saisies.get('CODRVG', 0))) * LIG1 * LIG2 * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGTXMOYNEG = is_positive(saisies.get('DMOND', 0)) * 1 - is_positive(DEFRIMOND) * LIG1 * LIG2
LIGTXPOSYT = is_positive(saisies.get('RMOND', 0) + saisies.get('DEFZU', 0) - saisies.get('DMOND', 0)) * is_positive(saisies.get('IPTXMO', 0)) * is_positive(DEFRIMOND) * LIG1 * LIG2
LIGVERSLIB = is_positive(saisies.get('AUTOVERSLIB', 0)) * LIG1 * LIG2
LIGVERSUP = is_positive(saisies.get('AUTOVERSSUP', 0))
LIGXFORF = is_positive(present(saisies.get('FEXV', 0)) + present(saisies.get('FEXC', 0)) + present(saisies.get('FEXP', 0))) * LIG1 * LIG2
LIGXIMPA = is_positive(saisies.get('XETRANV', 0) + saisies.get('XETRANC', 0)) * LIG1 * LIG2
LIGXSPEN = is_positive(saisies.get('XSPENPV', 0) + saisies.get('XSPENPC', 0) + saisies.get('XSPENPP', 0)) * LIG1 * LIG2
LIGXTSA = is_positive(present(saisies.get('TSASSUV', 0)) + present(saisies.get('TSASSUC', 0))) * LIG1 * LIG2
LIG_AVISISF = 1 - is_positive(saisies.get('ISF_LIMINF', 0) + saisies.get('ISF_LIMSUP', 0)) * present(saisies.get('ISFBASE', 0))
LIG_BNCNF = is_positive(present(BNCV) + present(BNCC) + present(BNCP))
LIG_R8ZT = is_positive(saisies.get('V_8ZT', 0)) * LIG1 * LIG2
LIMDPAE = LIM_PENSALENF
LNPRODEF101731 = 0
LNPRODEF11731 = 0
LNPRODEF21731 = 0
LNPRODEF31731 = 0
LNPRODEF41731 = 0
LNPRODEF51731 = 0
LNPRODEF61731 = 0
LNPRODEF71731 = 0
LNPRODEF81731 = 0
LNPRODEF91731 = 0
LOCDEFNPC1731 = 0
LOCDEFNPCGAC1731 = 0
LOCDEFNPCGAPAC1731 = 0
LOCDEFNPPAC1731 = 0
LOCGITCCP2 = 0
LOCGITCC_P = 0
LOCGITCPP2 = 0
LOCGITCP_P = 0
LOCGITCVP2 = 0
LOCGITCV_P = 0
LOCGITHCCP2 = 0
LOCGITHCC_P = 0
LOCGITHCPP2 = 0
LOCGITHCP_P = 0
LOCGITHCVP2 = 0
LOCGITHCV_P = 0
LOCNPCGACP2 = 0
LOCNPCGAC_P = 0
LOCNPCGAPACP2 = 0
LOCNPCGAPAC_P = 0
LOCNPCGAVP2 = 0
LOCNPCGAV_P = 0
LOCNPCP2 = 0
LOCNPC_P = 0
LOCNPPP2 = 0
LOCNPP_P = 0
LOCNPVP2 = 0
LOCNPV_P = 0
LOCPROCGACP2 = 0
LOCPROCGAC_P = 0
LOCPROCGAPP2 = 0
LOCPROCGAP_P = 0
LOCPROCGAVP2 = 0
LOCPROCGAV_P = 0
LOCPROCP2 = 0
LOCPROC_P = 0
LOCPROPP2 = 0
LOCPROP_P = 0
LOCPROVP2 = 0
LOCPROV_P = 0
LOYBASE_A = 0
MAJO1728CDIS = 0
MAJO1728CHR = 0
MAJO1728CS = 0
MAJO1728CVN = 0
MAJO1728GLO = 0
MAJO1728IR = 0
MAJO1728ISF = 0
MAJO1728LOY = 0
MAJO1728PCAP = 0
MAJO1728PS = 0
MAJO1728RD = 0
MAJO1728REGV = 0
MAJO1728RSE1 = 0
MAJO1728RSE2 = 0
MAJO1728RSE3 = 0
MAJO1728RSE4 = 0
MAJO1728RSE5 = 0
MAJO1728TAXA = 0
MAJO1758ACHR = 0
MAJO1758AIR = 0
MAJO1758ALOY = 0
MAJO1758APCAP = 0
MAJO1758ATAXA = 0
MAJOCAPTARDIF_A = 0
MAJOCAPTARDIF_D = 0
MAJOCAPTARDIF_R = 0
MAJOCDISTARDIF_A = 0
MAJOCDISTARDIF_D = 0
MAJOCDISTARDIF_R = 0
MAJOCP17_2TARDIF_A = 0
MAJOCP17_2TARDIF_D = 0
MAJOCP17_2TARDIF_R = 0
MAJOCSTARDIF_A = 0
MAJOCSTARDIF_D = 0
MAJOCSTARDIF_P = 0
MAJOCSTARDIF_R = 0
MAJOCVN03 = 0
MAJOCVN04 = 0
MAJOCVN05 = 0
MAJOCVN06 = 0
MAJOCVN55 = 0
MAJOCVNTARDIF_A = 0
MAJOCVNTARDIF_D = 0
MAJOCVNTARDIF_R = 0
MAJOGLO03 = 0
MAJOGLO04 = 0
MAJOGLO05 = 0
MAJOGLO06 = 0
MAJOGLO55 = 0
MAJOGLOTARDIF_A = 0
MAJOGLOTARDIF_D = 0
MAJOGLOTARDIF_R = 0
MAJOHR03 = 0
MAJOHR04 = 0
MAJOHR05 = 0
MAJOHR06 = 0
MAJOHR17_2TARDIF_A = 0
MAJOHR17_2TARDIF_D = 0
MAJOHR17_2TARDIF_P = 0
MAJOHR17_2TARDIF_R = 0
MAJOHR30 = 0
MAJOHR32 = 0
MAJOHR55 = 0
MAJOHRTARDIF_A = 0
MAJOHRTARDIF_A1 = MAJOHRTARDIF_A - MAJOHR17_2TARDIF_A
MAJOHRTARDIF_D = 0
MAJOHRTARDIF_D1 = MAJOHRTARDIF_D - MAJOHR17_2TARDIF_D
MAJOHRTARDIF_P = 0
MAJOHRTARDIF_P1 = MAJOHRTARDIF_P - MAJOHR17_2TARDIF_P
MAJOHRTARDIF_R = 0
MAJOHRTARDIF_R1 = MAJOHRTARDIF_R - MAJOHR17_2TARDIF_R
MAJOIR17_2TARDIF_A = 0
MAJOIR17_2TARDIF_D = 0
MAJOIR17_2TARDIF_P = 0
MAJOIR17_2TARDIF_R = 0
MAJOIRTARDIF_A = 0
MAJOIRTARDIF_A1 = MAJOIRTARDIF_A - MAJOIR17_2TARDIF_A
MAJOIRTARDIF_D = 0
MAJOIRTARDIF_D1 = MAJOIRTARDIF_D - MAJOIR17_2TARDIF_D
MAJOIRTARDIF_P = 0
MAJOIRTARDIF_P1 = MAJOIRTARDIF_P - MAJOIR17_2TARDIF_P
MAJOIRTARDIF_R = 0
MAJOIRTARDIF_R1 = MAJOIRTARDIF_R - MAJOIR17_2TARDIF_R
MAJOISF17TARDIF_A = 0
MAJOISF17TARDIF_D = 0
MAJOISF17TARDIF_R = 0
MAJOISFTARDIF_A = 0
MAJOISFTARDIF_A1 = MAJOISFTARDIF_A - MAJOISF17TARDIF_A
MAJOISFTARDIF_D = 0
MAJOISFTARDIF_D1 = MAJOISFTARDIF_D - MAJOISF17TARDIF_D
MAJOISFTARDIF_R = 0
MAJOISFTARDIF_R1 = MAJOISFTARDIF_R - MAJOISF17TARDIF_R
MAJOLO17_2TARDIF_A = 0
MAJOLO17_2TARDIF_D = 0
MAJOLO17_2TARDIF_P = 0
MAJOLO17_2TARDIF_R = 0
MAJOLOY03 = 0
MAJOLOY04 = 0
MAJOLOY05 = 0
MAJOLOY06 = 0
MAJOLOY55 = 0
MAJOLOYTARDIF_A = 0
MAJOLOYTARDIF_A1 = MAJOLOYTARDIF_A - MAJOLO17_2TARDIF_A
MAJOLOYTARDIF_D = 0
MAJOLOYTARDIF_D1 = MAJOLOYTARDIF_D - MAJOLO17_2TARDIF_D
MAJOLOYTARDIF_P = 0
MAJOLOYTARDIF_P1 = MAJOLOYTARDIF_P - MAJOLO17_2TARDIF_P
MAJOLOYTARDIF_R = 0
MAJOLOYTARDIF_R1 = MAJOLOYTARDIF_R - MAJOLO17_2TARDIF_R
MAJOPSTARDIF_A = 0
MAJOPSTARDIF_D = 0
MAJOPSTARDIF_P = 0
MAJOPSTARDIF_R = 0
MAJORDTARDIF_A = 0
MAJORDTARDIF_D = 0
MAJORDTARDIF_P = 0
MAJORDTARDIF_R = 0
MAJORSE1TARDIF_A = 0
MAJORSE1TARDIF_D = 0
MAJORSE1TARDIF_R = 0
MAJORSE2TARDIF_A = 0
MAJORSE2TARDIF_D = 0
MAJORSE2TARDIF_R = 0
MAJORSE3TARDIF_A = 0
MAJORSE3TARDIF_D = 0
MAJORSE3TARDIF_R = 0
MAJORSE4TARDIF_A = 0
MAJORSE4TARDIF_D = 0
MAJORSE4TARDIF_R = 0
MAJORSE503 = 0
MAJORSE504 = 0
MAJORSE505 = 0
MAJORSE506 = 0
MAJORSE555 = 0
MAJORSE5TARDIF_A = 0
MAJORSE5TARDIF_D = 0
MAJORSE5TARDIF_R = 0
MAJOTA17_2TARDIF_A = 0
MAJOTA17_2TARDIF_D = 0
MAJOTA17_2TARDIF_R = 0
MAJOTAXATARDIF_A = 0
MAJOTAXATARDIF_A1 = MAJOTAXATARDIF_A - MAJOTA17_2TARDIF_A
MAJOTAXATARDIF_D = 0
MAJOTAXATARDIF_D1 = MAJOTAXATARDIF_D - MAJOTA17_2TARDIF_D
MAJOTAXATARDIF_R = 0
MAJOTAXATARDIF_R1 = MAJOTAXATARDIF_R - MAJOTA17_2TARDIF_R
MAJTXC = COPETO
MAJTXCDIS = COPETO
MAJTXCHR4 = is_positive(is_positive(is_positive(MAJOHR03) + is_positive(MAJOHR30) + is_positive(MAJOHR55)) * is_positive(is_positive(MAJOHR04) + is_positive(MAJOHR05) + is_positive(MAJOHR32)) + is_positive(is_positive(MAJOHR03) + is_positive(MAJOHR30) + is_positive(MAJOHR55)) * is_positive(MAJOHR06) + is_positive(is_positive(MAJOHR04) + is_positive(MAJOHR05) + is_positive(MAJOHR32)) * is_positive(MAJOHR06)) * -1 + is_positive(is_positive(MAJOHR03) + is_positive(MAJOHR30) + is_positive(MAJOHR55)) * 1 - is_positive(is_positive(MAJOHR04) + is_positive(MAJOHR05) + is_positive(MAJOHR06) + is_positive(MAJOHR32)) * 40 + is_positive(is_positive(MAJOHR04) + is_positive(MAJOHR05) + is_positive(MAJOHR32)) * 1 - is_positive(is_positive(MAJOHR03) + is_positive(MAJOHR30) + is_positive(MAJOHR55) + is_positive(MAJOHR06)) * 80 + is_positive(MAJOHR06) * 1 - is_positive(is_positive(MAJOHR03) + is_positive(MAJOHR04) + is_positive(MAJOHR05) + is_positive(MAJOHR30) + is_positive(MAJOHR32) + is_positive(MAJOHR55)) * 100
MAJTXCVN = COPETO
MAJTXCVN4 = is_positive(is_positive(is_positive(MAJOCVN03) + is_positive(MAJOCVN55)) * is_positive(is_positive(MAJOCVN04) + is_positive(MAJOCVN05)) + is_positive(is_positive(MAJOCVN03) + is_positive(MAJOCVN55)) * is_positive(MAJOCVN06) + is_positive(is_positive(MAJOCVN04) + is_positive(MAJOCVN05)) * is_positive(MAJOCVN06)) * -1 + is_positive(is_positive(MAJOCVN03) + is_positive(MAJOCVN55)) * 1 - is_positive(is_positive(MAJOCVN04) + is_positive(MAJOCVN05) + is_positive(MAJOCVN06)) * 40 + is_positive(is_positive(MAJOCVN04) + is_positive(MAJOCVN05)) * 1 - is_positive(is_positive(MAJOCVN03) + is_positive(MAJOCVN55) + is_positive(MAJOCVN06)) * 80 + is_positive(MAJOCVN06) * 1 - is_positive(is_positive(MAJOCVN03) + is_positive(MAJOCVN04) + is_positive(MAJOCVN05) + is_positive(MAJOCVN55)) * 100
MAJTXGLO4 = is_positive(is_positive(is_positive(MAJOGLO03) + is_positive(MAJOGLO55)) * is_positive(is_positive(MAJOGLO04) + is_positive(MAJOGLO05)) + is_positive(is_positive(MAJOGLO03) + is_positive(MAJOGLO55)) * is_positive(MAJOGLO06) + is_positive(is_positive(MAJOGLO04) + is_positive(MAJOGLO05)) * is_positive(MAJOGLO06)) * -1 + is_positive(is_positive(MAJOGLO03) + is_positive(MAJOGLO55)) * 1 - is_positive(is_positive(MAJOGLO04) + is_positive(MAJOGLO05) + is_positive(MAJOGLO06)) * 40 + is_positive(is_positive(MAJOGLO04) + is_positive(MAJOGLO05)) * 1 - is_positive(is_positive(MAJOGLO03) + is_positive(MAJOGLO55) + is_positive(MAJOGLO06)) * 80 + is_positive(MAJOGLO06) * 1 - is_positive(is_positive(MAJOGLO03) + is_positive(MAJOGLO04) + is_positive(MAJOGLO05) + is_positive(MAJOGLO55)) * 100
MAJTXGLOA = COPETO
MAJTXLOY4 = is_positive(is_positive(is_positive(MAJOLOY03) + is_positive(MAJOLOY55)) * is_positive(is_positive(MAJOLOY04) + is_positive(MAJOLOY05)) + is_positive(is_positive(MAJOLOY03) + is_positive(MAJOLOY55)) * is_positive(MAJOLOY06) + is_positive(is_positive(MAJOLOY04) + is_positive(MAJOLOY05)) * is_positive(MAJOLOY06)) * -1 + is_positive(is_positive(MAJOLOY03) + is_positive(MAJOLOY55)) * 1 - is_positive(is_positive(MAJOLOY04) + is_positive(MAJOLOY05) + is_positive(MAJOLOY06)) * 40 + is_positive(is_positive(MAJOLOY04) + is_positive(MAJOLOY05)) * 1 - is_positive(is_positive(MAJOLOY03) + is_positive(MAJOLOY55) + is_positive(MAJOLOY06)) * 80 + is_positive(MAJOLOY06) * 1 - is_positive(is_positive(MAJOLOY03) + is_positive(MAJOLOY04) + is_positive(MAJOLOY05) + is_positive(MAJOLOY55)) * 100
MAJTXP = COPETO
MAJTXR = COPETO
MAJTXREGV = COPETO
MAJTXRSE1 = COPETO
MAJTXRSE2 = COPETO
MAJTXRSE3 = COPETO
MAJTXRSE4 = COPETO
MAJTXRSE5 = COPETO
MAJTXRSE54 = is_positive(is_positive(is_positive(MAJORSE503) + is_positive(MAJORSE555)) * is_positive(is_positive(MAJORSE504) + is_positive(MAJORSE505)) + is_positive(is_positive(MAJORSE503) + is_positive(MAJORSE555)) * is_positive(MAJORSE506) + is_positive(is_positive(MAJORSE504) + is_positive(MAJORSE505)) * is_positive(MAJORSE506)) * -1 + is_positive(is_positive(MAJORSE503) + is_positive(MAJORSE555)) * 1 - is_positive(is_positive(MAJORSE504) + is_positive(MAJORSE505) + is_positive(MAJORSE506)) * 40 + is_positive(is_positive(MAJORSE504) + is_positive(MAJORSE505)) * 1 - is_positive(is_positive(MAJORSE503) + is_positive(MAJORSE555) + is_positive(MAJORSE506)) * 80 + is_positive(MAJORSE506) * 1 - is_positive(is_positive(MAJORSE503) + is_positive(MAJORSE504) + is_positive(MAJORSE505) + is_positive(MAJORSE555)) * 100
MCDV = 1 * is_positive(saisies.get('V_0AM', 0) + 0) + 2 * is_positive(saisies.get('V_0AC', 0) + 0) + 3 * is_positive(saisies.get('V_0AD', 0) + 0) + 4 * is_positive(saisies.get('V_0AV', 0) + 0) + 5 * is_positive(saisies.get('V_0AO', 0) + 0)
MIBDREPC = saisies.get('MIBDEC', 0) - saisies.get('MIB1AC', 0) * is_positive(saisies.get('MIBDEC', 0) - saisies.get('MIB1AC', 0)) - saisies.get('MIBNP1AC', 0) - saisies.get('MIBNPDEC', 0) * is_positive(saisies.get('MIBNP1AC', 0) - saisies.get('MIBNPDEC', 0)) * is_positive(saisies.get('MIBDEC', 0) - saisies.get('MIB1AC', 0) * is_positive(saisies.get('MIBDEC', 0) - saisies.get('MIB1AC', 0)) - saisies.get('MIBNP1AC', 0) - saisies.get('MIBNPDEC', 0) * is_positive(saisies.get('MIBNP1AC', 0) - saisies.get('MIBNPDEC', 0)))
MIBDREPNPC = saisies.get('MIBNPDEC', 0) - saisies.get('MIBNP1AC', 0) * is_positive(saisies.get('MIBNPDEC', 0) - saisies.get('MIBNP1AC', 0)) - saisies.get('MIB1AC', 0) - saisies.get('MIBDEC', 0) * is_positive(saisies.get('MIB1AC', 0) - saisies.get('MIBDEC', 0)) * is_positive(saisies.get('MIBNPDEC', 0) - saisies.get('MIBNP1AC', 0) * is_positive(saisies.get('MIBNPDEC', 0) - saisies.get('MIBNP1AC', 0)) - saisies.get('MIB1AC', 0) - saisies.get('MIBDEC', 0) * is_positive(saisies.get('MIB1AC', 0) - saisies.get('MIBDEC', 0)))
MIBDREPNPP = saisies.get('MIBNPDEP', 0) - saisies.get('MIBNP1AP', 0) * is_positive(saisies.get('MIBNPDEP', 0) - saisies.get('MIBNP1AP', 0)) - saisies.get('MIB1AP', 0) - saisies.get('MIBDEP', 0) * is_positive(saisies.get('MIB1AP', 0) - saisies.get('MIBDEP', 0)) * is_positive(saisies.get('MIBNPDEP', 0) - saisies.get('MIBNP1AP', 0) * is_positive(saisies.get('MIBNPDEP', 0) - saisies.get('MIBNP1AP', 0)) - saisies.get('MIB1AP', 0) - saisies.get('MIBDEP', 0) * is_positive(saisies.get('MIB1AP', 0) - saisies.get('MIBDEP', 0)))
MIBDREPNPV = saisies.get('MIBNPDEV', 0) - saisies.get('MIBNP1AV', 0) * is_positive(saisies.get('MIBNPDEV', 0) - saisies.get('MIBNP1AV', 0)) - saisies.get('MIB1AV', 0) - saisies.get('MIBDEV', 0) * is_positive(saisies.get('MIB1AV', 0) - saisies.get('MIBDEV', 0)) * is_positive(saisies.get('MIBNPDEV', 0) - saisies.get('MIBNP1AV', 0) * is_positive(saisies.get('MIBNPDEV', 0) - saisies.get('MIBNP1AV', 0)) - saisies.get('MIB1AV', 0) - saisies.get('MIBDEV', 0) * is_positive(saisies.get('MIB1AV', 0) - saisies.get('MIBDEV', 0)))
MIBDREPP = saisies.get('MIBDEP', 0) - saisies.get('MIB1AP', 0) * is_positive(saisies.get('MIBDEP', 0) - saisies.get('MIB1AP', 0)) - saisies.get('MIBNP1AP', 0) - saisies.get('MIBNPDEP', 0) * is_positive(saisies.get('MIBNP1AP', 0) - saisies.get('MIBNPDEP', 0)) * is_positive(saisies.get('MIBDEP', 0) - saisies.get('MIB1AP', 0) * is_positive(saisies.get('MIBDEP', 0) - saisies.get('MIB1AP', 0)) - saisies.get('MIBNP1AP', 0) - saisies.get('MIBNPDEP', 0) * is_positive(saisies.get('MIBNP1AP', 0) - saisies.get('MIBNPDEP', 0)))
MIBDREPV = saisies.get('MIBDEV', 0) - saisies.get('MIB1AV', 0) * is_positive(saisies.get('MIBDEV', 0) - saisies.get('MIB1AV', 0)) - saisies.get('MIBNP1AV', 0) - saisies.get('MIBNPDEV', 0) * is_positive(saisies.get('MIBNP1AV', 0) - saisies.get('MIBNPDEV', 0)) * is_positive(saisies.get('MIBDEV', 0) - saisies.get('MIB1AV', 0) * is_positive(saisies.get('MIBDEV', 0) - saisies.get('MIB1AV', 0)) - saisies.get('MIBNP1AV', 0) - saisies.get('MIBNPDEV', 0) * is_positive(saisies.get('MIBNP1AV', 0) - saisies.get('MIBNPDEV', 0)))
MIBNETNPPF = sum([MIB_NETNPPV, MIB_NETNPPC, MIB_NETNPPP])
MIBNETNPPLF = sum([MIB_NETNPPLV, MIB_NETNPPLC, MIB_NETNPPLP])
MIBNETNPVF = sum([MIB_NETNPVV, MIB_NETNPVC, MIB_NETNPVP])
MIBNETNPVLF = sum([MIB_NETNPVLV, MIB_NETNPVLC, MIB_NETNPVLP])
MIBNETPF = sum([MIB_NETPV, MIB_NETPC, MIB_NETPP])
MIBNETVF = sum([MIB_NETVV, MIB_NETVC, MIB_NETVP])
MIBNPRC = saisies.get('MIBNPVENC', 0) + saisies.get('MIBNPPRESC', 0)
MIBNPRP = saisies.get('MIBNPVENP', 0) + saisies.get('MIBNPPRESP', 0)
MIBNPRV = saisies.get('MIBNPVENV', 0) + saisies.get('MIBNPPRESV', 0)
MIBR = sum([MIBRV, MIBRP, MIBRC])
MIBRC = saisies.get('MIBVENC', 0) + saisies.get('MIBPRESC', 0)
MIBRNET = sum([MIBRNETV, MIBRNETC, MIBRNETP])
MIBRP = saisies.get('MIBVENP', 0) + saisies.get('MIBPRESP', 0)
MIBRV = saisies.get('MIBVENV', 0) + saisies.get('MIBPRESV', 0)
MIB_1AF = max(0, sum([MIB_1AV, MIB_1AC, MIB_1AP]))
MIB_NETCT = saisies.get('MIBPVV', 0) + saisies.get('MIBPVC', 0) + saisies.get('MIBPVP', 0) - saisies.get('BICPMVCTV', 0) - saisies.get('BICPMVCTC', 0) - saisies.get('BICPMVCTP', 0)
MIB_NETNPCT = saisies.get('MIBNPPVV', 0) + saisies.get('MIBNPPVC', 0) + saisies.get('MIBNPPVP', 0) - saisies.get('MIBNPDCT', 0)
MIB_NP1AC = saisies.get('MIBNP1AC', 0) - saisies.get('MIBNPDEC', 0)
MIB_NP1AP = saisies.get('MIBNP1AP', 0) - saisies.get('MIBNPDEP', 0)
MIB_NP1AV = saisies.get('MIBNP1AV', 0) - saisies.get('MIBNPDEV', 0)
MIB_P1AC = saisies.get('MIB1AC', 0) - saisies.get('MIBDEC', 0)
MIB_P1AP = saisies.get('MIB1AP', 0) - saisies.get('MIBDEP', 0)
MIB_P1AV = saisies.get('MIB1AV', 0) - saisies.get('MIBDEV', 0)
MIB_TPRESC = saisies.get('MIBPRESC', 0) + saisies.get('MIBNPPRESC', 0) + saisies.get('MIBMEUC', 0)
MIB_TPRESP = saisies.get('MIBPRESP', 0) + saisies.get('MIBNPPRESP', 0) + saisies.get('MIBMEUP', 0)
MIB_TPRESV = saisies.get('MIBPRESV', 0) + saisies.get('MIBNPPRESV', 0) + saisies.get('MIBMEUV', 0)
MIB_TVENC = saisies.get('MIBVENC', 0) + saisies.get('MIBNPVENC', 0) + saisies.get('MIBGITEC', 0) + saisies.get('LOCGITC', 0)
MIB_TVENP = saisies.get('MIBVENP', 0) + saisies.get('MIBNPVENP', 0) + saisies.get('MIBGITEP', 0) + saisies.get('LOCGITP', 0)
MIB_TVENV = saisies.get('MIBVENV', 0) + saisies.get('MIBNPVENV', 0) + saisies.get('MIBGITEV', 0) + saisies.get('LOCGITV', 0)
MICFR = present(saisies.get('RFMIC', 0)) * round(saisies.get('RFMIC', 0) * TX_MICFON / 100)
MLOCDECC = saisies.get('MIBGITEC', 0) + saisies.get('LOCGITC', 0) + saisies.get('MIBMEUC', 0)
MLOCDECP = saisies.get('MIBGITEP', 0) + saisies.get('LOCGITP', 0) + saisies.get('MIBMEUP', 0)
MLOCDECV = saisies.get('MIBGITEV', 0) + saisies.get('LOCGITV', 0) + saisies.get('MIBMEUV', 0)
MLOCNET = sum([MLOCNETV, MLOCNETC, MLOCNETP])
NAPCRTEMP = 0
NAPTOTA = saisies.get('V_IRPSANT', 0) - saisies.get('V_ANTRE', 0)
NAPTOTAIR = saisies.get('V_TOTIRANT', 0) - saisies.get('V_ANTREIR', 0)
NATMAJ = 1
NATMAJC = 1
NATMAJCDIS = 1
NATMAJCVN = 1
NATMAJGLOA = 1
NATMAJP = 1
NATMAJR = 1
NATMAJREGV = 1
NATMAJRSE1 = 1
NATMAJRSE2 = 1
NATMAJRSE3 = 1
NATMAJRSE4 = 1
NATMAJRSE5 = 1
NATPENA = 1 if (saisies.get('APPLI_COLBERT', 0) + APPLI_ILIAD + saisies.get('APPLI_COLBERT', 0) == 1 and saisies.get('CMAJ', 0) == 7 or saisies.get('CMAJ', 0) == 8 or saisies.get('CMAJ', 0) == 9 or saisies.get('CMAJ', 0) == 10 or saisies.get('CMAJ', 0) == 11 or saisies.get('CMAJ', 0) == 12 or saisies.get('CMAJ', 0) == 17 or saisies.get('CMAJ', 0) == 18) else (2 if (saisies.get('CMAJ', 0) == 2) else (4 if (saisies.get('CMAJ', 0) == 3 or saisies.get('CMAJ', 0) == 4 or saisies.get('CMAJ', 0) == 5 or saisies.get('CMAJ', 0) == 6) else 0))
NB2 = 1 + BOOL_0AM + BOOL_0AZ * saisies.get('V_0AV', 0)
NBFOTH = 1 + BOOL_0AM + saisies.get('V_0CF', 0) + saisies.get('V_0CH', 0) / 2 + saisies.get('V_0CR', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0DN', 0)
NBPOTE = saisies.get('V_0CF', 0) + saisies.get('V_0CH', 0) + saisies.get('V_0CR', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0DN', 0) + saisies.get('V_0DP', 0)
NBQAR1 = is_zero(saisies.get('V_0CF', 0) + saisies.get('V_0CR', 0) + saisies.get('V_0DJ', 0) + 0) * 1 / 2 * saisies.get('V_0CH', 0) - 2 * is_positive(saisies.get('V_0CH', 0) - 2) + 1 / 4 * is_positive(saisies.get('V_0CH', 0) + 0) + 1 / 4 * is_positive(saisies.get('V_0CH', 0) - 1)
NBQAR2 = is_zero(saisies.get('V_0CF', 0) + saisies.get('V_0CR', 0) + saisies.get('V_0DJ', 0) - 1) * 1 / 2 * saisies.get('V_0CH', 0) - 1 * is_positive(saisies.get('V_0CH', 0) - 1) + 1 / 4 * is_positive(saisies.get('V_0CH', 0) + 0)
NBQAR3 = positif_ou_nul(saisies.get('V_0CF', 0) + saisies.get('V_0CR', 0) + saisies.get('V_0DJ', 0) - 2) * 1 / 2 * saisies.get('V_0CH', 0)
NBQAR4 = 1 / 4 * saisies.get('V_0CI', 0)
NBQART = BOOL_0BT * is_zero(saisies.get('V_0CF', 0) + saisies.get('V_0CR', 0) + saisies.get('V_0DJ', 0) + 0) * 1 / 4 * is_zero(saisies.get('V_0CH', 0) - 1) + 1 / 2 * positif_ou_nul(saisies.get('V_0CH', 0) - 2)
NCC = saisies.get('V_0AS', 0) * BOOL_0AM * 1 - is_positive(saisies.get('V_0AP', 0) + saisies.get('V_0AF', 0)) * 0.5 * is_positive(max(AGV + 1 - LIM_AGE_LET_S, AGC + 1 - LIM_AGE_LET_S))
NCOMP1731 = 0
NDA = min(max(AGV + 1 - LIM_AGE_ABVIEUX, saisies.get('V_0AP', 0)), 1) + min(max(AGC * BOOL_0AM + 1 - LIM_AGE_ABVIEUX, saisies.get('V_0AF', 0) * BOOL_0AM), 1)
NIN = saisies.get('V_0AP', 0) + saisies.get('V_0AF', 0) + saisies.get('V_0CG', 0) + saisies.get('V_0CR', 0) * 0.5
NMAJ4 = sum([MAJOIR30, MAJOIR32, MAJOIR55, MAJOIR3, MAJOIR4, MAJOIR5, MAJOIR6])
NMAJCHR4 = sum([MAJOHR30, MAJOHR32, MAJOHR55, MAJOHR3, MAJOHR4, MAJOHR5, MAJOHR6])
NMAJLOY4 = sum([MAJOLOY55, MAJOLOY3, MAJOLOY4, MAJOLOY5, MAJOLOY6])
NMAJPCAP4 = sum([MAJOCAP55, MAJOCAP3, MAJOCAP4, MAJOCAP5, MAJOCAP6])
NMAJTAXA4 = sum([MAJOTAXA55, MAJOTAXA3, MAJOTAXA4, MAJOTAXA5, MAJOTAXA6])
NOCEPC = saisies.get('ANOVEP', 0) - saisies.get('DNOCEPC', 0) + saisies.get('BNCAABC', 0) - saisies.get('BNCAADC', 0)
NOCEPP = saisies.get('ANOPEP', 0) - saisies.get('DNOCEPP', 0) + saisies.get('BNCAABP', 0) - saisies.get('BNCAADP', 0)
NOCEPV = saisies.get('ANOCEP', 0) - saisies.get('DNOCEP', 0) + saisies.get('BNCAABV', 0) - saisies.get('BNCAADV', 0)
NPLOCCGASSC = saisies.get('LOCNPCGAC', 0) + saisies.get('LOCGITCC', 0) - saisies.get('LOCDEFNPCGAC', 0)
NPLOCCGASSPAC = saisies.get('LOCNPCGAPAC', 0) + saisies.get('LOCGITCP', 0) - saisies.get('LOCDEFNPCGAPAC', 0)
NPLOCCGASSV = saisies.get('LOCNPCGAV', 0) + saisies.get('LOCGITCV', 0) - saisies.get('LOCDEFNPCGAV', 0)
NPLOCSSC = min(0, saisies.get('LOCNPC', 0) + saisies.get('LOCGITHCC', 0) - saisies.get('LOCDEFNPC', 0)) * positif_ou_nul(saisies.get('LOCDEFNPC', 0) - saisies.get('LOCNPC', 0) - saisies.get('LOCGITHCC', 0)) + round(max(0, saisies.get('LOCNPC', 0) + saisies.get('LOCGITHCC', 0) - saisies.get('LOCDEFNPC', 0)) * MAJREV) * is_positive(saisies.get('LOCNPC', 0) + saisies.get('LOCGITHCC', 0) - saisies.get('LOCDEFNPC', 0))
NPLOCSSPAC = min(0, saisies.get('LOCNPPAC', 0) + saisies.get('LOCGITHCP', 0) - saisies.get('LOCDEFNPPAC', 0)) * positif_ou_nul(saisies.get('LOCDEFNPPAC', 0) - saisies.get('LOCNPPAC', 0) - saisies.get('LOCGITHCP', 0)) + round(max(0, saisies.get('LOCNPPAC', 0) + saisies.get('LOCGITHCP', 0) - saisies.get('LOCDEFNPPAC', 0)) * MAJREV) * is_positive(saisies.get('LOCNPPAC', 0) + saisies.get('LOCGITHCP', 0) - saisies.get('LOCDEFNPPAC', 0))
NPLOCSSV = min(0, saisies.get('LOCNPV', 0) + saisies.get('LOCGITHCV', 0) - saisies.get('LOCDEFNPV', 0)) * positif_ou_nul(saisies.get('LOCDEFNPV', 0) - saisies.get('LOCNPV', 0) - saisies.get('LOCGITHCV', 0)) + round(max(0, saisies.get('LOCNPV', 0) + saisies.get('LOCGITHCV', 0) - saisies.get('LOCDEFNPV', 0)) * MAJREV) * is_positive(saisies.get('LOCNPV', 0) + saisies.get('LOCGITHCV', 0) - saisies.get('LOCDEFNPC', 0))
NSM = 1 + BOOL_0AM + saisies.get('V_0AV', 0) * min(BOOL_0AZ + EAC + saisies.get('V_0CH', 0) + saisies.get('V_0CR', 0), 1) + saisies.get('V_0AV', 0) * BOOL_0AZ * saisies.get('V_0AW', 0) * 1 - saisies.get('V_0AP', 0) * 1 - saisies.get('V_0AF', 0) / 2
NUPROPT = saisies.get('REPGROREP2', 0) + saisies.get('REPGROREP1', 0) + saisies.get('REPGROREP11', 0) + saisies.get('REPGROREP12', 0) + saisies.get('REPGROREP13', 0) + saisies.get('NUPROP', 0)
P2GE = max(PLAF_GE2 * 1 + BOOL_0AM + PLAF_GE2_PACQAR * saisies.get('V_0CH', 0) + saisies.get('V_0DP', 0) + PLAF_GE2_PAC * saisies.get('V_0CR', 0) + saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0DN', 0) - BTANTGECUM, 0)
PAC = EAC + saisies.get('V_0CR', 0)
PALIP = saisies.get('PALI1', 0) + saisies.get('PALI2', 0) + saisies.get('PALI3', 0) + saisies.get('PALI4', 0)
PALIQC = 0
PALIQP = 0
PALIQV = 0
PCAPANTAFF = 0
PCAPBASE_A = 0
PCAPDEG = 0
PCDIS_A = 0
PCHR_A = 0
PCSG_A = 0
PCVN_A = 0
PDEDMINC = DEDMINC
PDEDMINP = is_positive(saisies.get('DETS1', 0)) * MIN_DEMEMPLOI + 1 - is_positive(saisies.get('DETS1', 0)) * MIN_DEDSFORFTS
PDEDMINV = DEDMINV
PDEVDUR = max(PLAF_DEVDUR * 1 + BOOL_0AM + PLAF_GE2_PACQAR * saisies.get('V_0CH', 0) + saisies.get('V_0DP', 0) + PLAF_GE2_PAC * saisies.get('V_0CR', 0) + saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0DN', 0) - saisies.get('V_BTDEVDUR', 0) * 1 - present(saisies.get('DEPCHOBAS', 0)) + saisies.get('DEPCHOBAS', 0), 0)
PECHEM = sum([saisies.get('BIPERPV', 0), saisies.get('BIPERPC', 0), saisies.get('BIPERPP', 0)])
PENSALP = saisies.get('PENSALP1', 0) + saisies.get('PENSALP2', 0) + saisies.get('PENSALP3', 0) + saisies.get('PENSALP4', 0)
PERPBANC = saisies.get('FEXC', 0) + saisies.get('BAFC', 0) + saisies.get('BAFPVC', 0) + saisies.get('BAEXC', 0) + saisies.get('BACREC', 0) - saisies.get('BACDEC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BAHEXC', 0) + saisies.get('BAHREC', 0) - saisies.get('BAHDEC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BAPERPC', 0) + _4BACREC + _4BAHREC + saisies.get('BAFORESTC', 0) + saisies.get('BANOCGAC', 0)
PERPBANV = saisies.get('FEXV', 0) + saisies.get('BAFV', 0) + saisies.get('BAFPVV', 0) + saisies.get('BAEXV', 0) + saisies.get('BACREV', 0) - saisies.get('BACDEV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BAHEXV', 0) + saisies.get('BAHREV', 0) - saisies.get('BAHDEV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BAPERPV', 0) + _4BACREV + _4BAHREV + saisies.get('BAFORESTV', 0) + saisies.get('BANOCGAV', 0)
PERPBICPNC = saisies.get('BICEXC', 0) + saisies.get('BICNOC', 0) - saisies.get('BICDNC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BIHEXC', 0) + saisies.get('BIHNOC', 0) - saisies.get('BIHDNC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BIPERPC', 0) + saisies.get('LOCPROCGAC', 0) - saisies.get('LOCDEFPROCGAC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('LOCPROC', 0) - saisies.get('LOCDEFPROC', 0) * 1 - is_positive(ART1731BIS)
PERPBICPNV = saisies.get('BICEXV', 0) + saisies.get('BICNOV', 0) - saisies.get('BICDNV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BIHEXV', 0) + saisies.get('BIHNOV', 0) - saisies.get('BIHDNV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BIPERPV', 0) + saisies.get('LOCPROCGAV', 0) - saisies.get('LOCDEFPROCGAV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('LOCPROV', 0) - saisies.get('LOCDEFPROV', 0) * 1 - is_positive(ART1731BIS)
PERPBNCMNC = saisies.get('BNCPROEXC', 0) + max(0, saisies.get('BNCPROC', 0) + saisies.get('AUTOBNCC', 0) - max(round(saisies.get('BNCPROC', 0) + saisies.get('AUTOBNCC', 0) * SPETXAB / 100), MIN_SPEBNC)) + saisies.get('BNCPROPVC', 0) - saisies.get('BNCPMVCTC', 0)
PERPBNCMNV = saisies.get('BNCPROEXV', 0) + max(0, saisies.get('BNCPROV', 0) + saisies.get('AUTOBNCV', 0) - max(round(saisies.get('BNCPROV', 0) + saisies.get('AUTOBNCV', 0) * SPETXAB / 100), MIN_SPEBNC)) + saisies.get('BNCPROPVV', 0) - saisies.get('BNCPMVCTV', 0)
PERPBNCPNC = saisies.get('BNCEXC', 0) + saisies.get('BNCREC', 0) - saisies.get('BNCDEC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BNHEXC', 0) + saisies.get('BNHREC', 0) - saisies.get('BNHDEC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BNCCRC', 0)
PERPBNCPNV = saisies.get('BNCEXV', 0) + saisies.get('BNCREV', 0) - saisies.get('BNCDEV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BNHEXV', 0) + saisies.get('BNHREV', 0) - saisies.get('BNHDEV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BNCCRV', 0)
PERPPLAFCANT = present(saisies.get('PERPPLAFCC', 0)) * saisies.get('PERPPLAFCC', 0) + 1 - present(saisies.get('PERPPLAFCC', 0)) * saisies.get('V_BTPERPC', 0)
PERPPLAFNUC2ANT = present(saisies.get('PERPPLAFNUC2', 0)) * saisies.get('PERPPLAFNUC2', 0) + 1 - present(saisies.get('PERPPLAFNUC2', 0)) * saisies.get('V_BTPERPNUC2', 0)
PERPPLAFNUC3ANT = present(saisies.get('PERPPLAFNUC3', 0)) * saisies.get('PERPPLAFNUC3', 0) + 1 - present(saisies.get('PERPPLAFNUC3', 0)) * saisies.get('V_BTPERPNUC3', 0)
PERPPLAFNUP2ANT = present(saisies.get('PERPPLAFNUP2', 0)) * saisies.get('PERPPLAFNUP2', 0) + 1 - present(saisies.get('PERPPLAFNUP2', 0)) * saisies.get('V_BTPERPNUP2', 0)
PERPPLAFNUP3ANT = present(saisies.get('PERPPLAFNUP3', 0)) * saisies.get('PERPPLAFNUP3', 0) + 1 - present(saisies.get('PERPPLAFNUP3', 0)) * saisies.get('V_BTPERPNUP3', 0)
PERPPLAFNUV2ANT = present(saisies.get('PERPPLAFNUV2', 0)) * saisies.get('PERPPLAFNUV2', 0) + 1 - present(saisies.get('PERPPLAFNUV2', 0)) * saisies.get('V_BTPERPNUV2', 0)
PERPPLAFNUV3ANT = present(saisies.get('PERPPLAFNUV3', 0)) * saisies.get('PERPPLAFNUV3', 0) + 1 - present(saisies.get('PERPPLAFNUV3', 0)) * saisies.get('V_BTPERPNUV3', 0)
PERPPLAFPANT = present(saisies.get('PERPPLAFCP', 0)) * saisies.get('PERPPLAFCP', 0) + 1 - present(saisies.get('PERPPLAFCP', 0)) * saisies.get('V_BTPERPP', 0)
PERPPLAFVANT = present(saisies.get('PERPPLAFCV', 0)) * saisies.get('PERPPLAFCV', 0) + 1 - present(saisies.get('PERPPLAFCV', 0)) * saisies.get('V_BTPERPV', 0)
PERPPLATCANT = 1 - is_positive(present(saisies.get('PERPPLAFCC', 0)) + present(saisies.get('PERPPLAFNUC1', 0)) + present(saisies.get('PERPPLAFNUC2', 0)) + present(saisies.get('PERPPLAFNUC3', 0))) * saisies.get('V_BTPERPTOTC', 0) + is_positive(present(saisies.get('PERPPLAFCC', 0)) + present(saisies.get('PERPPLAFNUC1', 0)) + present(saisies.get('PERPPLAFNUC2', 0)) + present(saisies.get('PERPPLAFNUC3', 0))) * saisies.get('PERPPLAFCC', 0) + saisies.get('PERPPLAFNUC1', 0) + saisies.get('PERPPLAFNUC2', 0) + saisies.get('PERPPLAFNUC3', 0)
PERPPLATPANT = 1 - is_positive(present(saisies.get('PERPPLAFCP', 0)) + present(saisies.get('PERPPLAFNUP1', 0)) + present(saisies.get('PERPPLAFNUP2', 0)) + present(saisies.get('PERPPLAFNUP3', 0))) * saisies.get('V_BTPERPTOTP', 0) + is_positive(present(saisies.get('PERPPLAFCP', 0)) + present(saisies.get('PERPPLAFNUP1', 0)) + present(saisies.get('PERPPLAFNUP2', 0)) + present(saisies.get('PERPPLAFNUP3', 0))) * saisies.get('PERPPLAFCP', 0) + saisies.get('PERPPLAFNUP1', 0) + saisies.get('PERPPLAFNUP2', 0) + saisies.get('PERPPLAFNUP3', 0)
PERPPLATVANT = 1 - is_positive(present(saisies.get('PERPPLAFCV', 0)) + present(saisies.get('PERPPLAFNUV1', 0)) + present(saisies.get('PERPPLAFNUV2', 0)) + present(saisies.get('PERPPLAFNUV3', 0))) * saisies.get('V_BTPERPTOTV', 0) + is_positive(present(saisies.get('PERPPLAFCV', 0)) + present(saisies.get('PERPPLAFNUV1', 0)) + present(saisies.get('PERPPLAFNUV2', 0)) + present(saisies.get('PERPPLAFNUV3', 0))) * saisies.get('PERPPLAFCV', 0) + saisies.get('PERPPLAFNUV1', 0) + saisies.get('PERPPLAFNUV2', 0) + saisies.get('PERPPLAFNUV3', 0)
PERPSALC = saisies.get('TSHALLOC', 0) + saisies.get('ALLOC', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0) + saisies.get('GLDGRATC', 0) + saisies.get('BPCOSAC', 0) + saisies.get('TSASSUC', 0) + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + max(0, saisies.get('SALEXTC', 0) - saisies.get('COD1BD', 0))
PERPSALV = saisies.get('TSHALLOV', 0) + saisies.get('ALLOV', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0) + saisies.get('GLDGRATV', 0) + saisies.get('BPCOSAV', 0) + saisies.get('TSASSUV', 0) + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + max(0, saisies.get('SALEXTV', 0) - saisies.get('COD1AD', 0))
PERP_BOOL = is_positive(is_zero(1 - saisies.get('V_0CF', 0) + saisies.get('V_0CH', 0) + saisies.get('V_0CR', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0DN', 0) + saisies.get('V_0DP', 0)) * is_zero(present(saisies.get('TSHALLO2', 0)) + present(saisies.get('ALLO2', 0)) + present(saisies.get('TSHALLO3', 0)) + present(saisies.get('ALLO3', 0)) + present(saisies.get('TSHALLO4', 0)) + present(saisies.get('ALLO4', 0)) + present(saisies.get('FRN2', 0)) + present(saisies.get('FRN3', 0)) + present(saisies.get('FRN4', 0)) + present(saisies.get('CARTSP2', 0)) + present(saisies.get('CARTSP3', 0)) + present(saisies.get('CARTSP4', 0)) + present(saisies.get('REMPLAP2', 0)) + present(saisies.get('REMPLAP3', 0)) + present(saisies.get('REMPLAP4', 0))))
PERP_INDC = is_positive(0 + is_positive(saisies.get('TSHALLOC', 0)) + is_positive(saisies.get('ALLOC', 0)) + is_positive(saisies.get('GLD1C', 0)) + is_positive(saisies.get('GLD2C', 0)) + is_positive(saisies.get('GLD3C', 0)) + is_positive(saisies.get('GLDGRATC', 0)) + is_positive(saisies.get('BPCOSAC', 0)) + is_positive(saisies.get('TSASSUC', 0)) + is_positive(saisies.get('CARTSC', 0)) + is_positive(saisies.get('FEXC', 0)) + is_positive(saisies.get('BAFC', 0)) + is_positive(saisies.get('BAFPVC', 0)) + is_positive(saisies.get('BAEXC', 0)) + is_positive(saisies.get('BACREC', 0)) + is_positive(_4BACREC) + is_positive(saisies.get('BACDEC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BAHEXC', 0)) + is_positive(saisies.get('BAHREC', 0)) + is_positive(_4BAHREC) + is_positive(saisies.get('BAHDEC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BAPERPC', 0)) + is_positive(saisies.get('MIBEXC', 0)) + is_positive(saisies.get('MIBVENC', 0)) + is_positive(saisies.get('MIBPRESC', 0)) + is_positive(saisies.get('MIBPVC', 0)) + is_positive(saisies.get('AUTOBICVC', 0)) + is_positive(saisies.get('AUTOBICPC', 0)) + is_positive(saisies.get('BICEXC', 0)) + is_positive(saisies.get('BICNOC', 0)) + is_positive(saisies.get('BICDNC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BIHEXC', 0)) + is_positive(saisies.get('BIHNOC', 0)) + is_positive(saisies.get('BIHDNC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BIPERPC', 0)) + is_positive(saisies.get('LOCPROCGAC', 0)) - is_positive(saisies.get('LOCDEFPROCGAC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('LOCPROC', 0)) - is_positive(saisies.get('LOCDEFPROC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNCPROEXC', 0)) + is_positive(saisies.get('BNCPROC', 0)) + is_positive(saisies.get('BNCPROPVC', 0)) + is_positive(saisies.get('AUTOBNCC', 0)) + is_positive(saisies.get('BNCEXC', 0)) + is_positive(saisies.get('BNCREC', 0)) + is_positive(saisies.get('BNCDEC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNHEXC', 0)) + is_positive(saisies.get('BNHREC', 0)) + is_positive(saisies.get('BNHDEC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNCCRC', 0)))
PERP_INDP = is_positive(0 + is_positive(saisies.get('TSHALLO1', 0)) + is_positive(saisies.get('ALLO1', 0)) + is_positive(saisies.get('FEXP', 0)) + is_positive(saisies.get('BAFP', 0)) + is_positive(saisies.get('BAFPVP', 0)) + is_positive(saisies.get('BAEXP', 0)) + is_positive(saisies.get('BACREP', 0)) + is_positive(_4BACREP) + is_positive(saisies.get('BACDEP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BAHEXP', 0)) + is_positive(saisies.get('BAHREP', 0)) + is_positive(_4BAHREP) + is_positive(saisies.get('BAHDEP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BAPERPP', 0)) + is_positive(saisies.get('MIBEXP', 0)) + is_positive(saisies.get('MIBVENP', 0)) + is_positive(saisies.get('MIBPRESP', 0)) + is_positive(saisies.get('MIBPVP', 0)) + is_positive(saisies.get('AUTOBICVP', 0)) + is_positive(saisies.get('AUTOBICPP', 0)) + is_positive(saisies.get('BICEXP', 0)) + is_positive(saisies.get('BICNOP', 0)) + is_positive(saisies.get('BICDNP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BIHEXP', 0)) + is_positive(saisies.get('BIHNOP', 0)) + is_positive(saisies.get('BIHDNP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BIPERPP', 0)) + is_positive(saisies.get('LOCPROCGAP', 0)) - is_positive(saisies.get('LOCDEFPROCGAP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('LOCPROP', 0)) - is_positive(saisies.get('LOCDEFPROP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNCPROEXP', 0)) + is_positive(saisies.get('BNCPROP', 0)) + is_positive(saisies.get('BNCPROPVP', 0)) + is_positive(saisies.get('AUTOBNCP', 0)) + is_positive(saisies.get('BNCEXP', 0)) + is_positive(saisies.get('BNCREP', 0)) + is_positive(saisies.get('BNCDEP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNHEXP', 0)) + is_positive(saisies.get('BNHREP', 0)) + is_positive(saisies.get('BNHDEP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNCCRP', 0)))
PERP_INDV = is_positive(0 + is_positive(saisies.get('TSHALLOV', 0)) + is_positive(saisies.get('ALLOV', 0)) + is_positive(saisies.get('GLD1V', 0)) + is_positive(saisies.get('GLD2V', 0)) + is_positive(saisies.get('GLD3V', 0)) + is_positive(saisies.get('GLDGRATV', 0)) + is_positive(saisies.get('BPCOSAV', 0)) + is_positive(saisies.get('TSASSUV', 0)) + is_positive(saisies.get('CARTSV', 0)) + is_positive(saisies.get('FEXV', 0)) + is_positive(saisies.get('BAFV', 0)) + is_positive(saisies.get('BAFPVV', 0)) + is_positive(saisies.get('BAEXV', 0)) + is_positive(saisies.get('BACREV', 0)) + is_positive(_4BACREV) + is_positive(saisies.get('BACDEV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BAHEXV', 0)) + is_positive(saisies.get('BAHREV', 0)) + is_positive(_4BAHREV) + is_positive(saisies.get('BAHDEV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BAPERPV', 0)) + is_positive(saisies.get('MIBEXV', 0)) + is_positive(saisies.get('MIBVENV', 0)) + is_positive(saisies.get('MIBPRESV', 0)) + is_positive(saisies.get('MIBPVV', 0)) + is_positive(saisies.get('AUTOBICVV', 0)) + is_positive(saisies.get('AUTOBICPV', 0)) + is_positive(saisies.get('BICEXV', 0)) + is_positive(saisies.get('BICNOV', 0)) + is_positive(saisies.get('BICDNV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BIHEXV', 0)) + is_positive(saisies.get('BIHNOV', 0)) + is_positive(saisies.get('BIHDNV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BIPERPV', 0)) + is_positive(saisies.get('LOCPROCGAV', 0)) - is_positive(saisies.get('LOCDEFPROCGAV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('LOCPROV', 0)) - is_positive(saisies.get('LOCDEFPROV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNCPROEXV', 0)) + is_positive(saisies.get('BNCPROV', 0)) + is_positive(saisies.get('BNCPROPVV', 0)) + is_positive(saisies.get('AUTOBNCV', 0)) + is_positive(saisies.get('BNCEXV', 0)) + is_positive(saisies.get('BNCREV', 0)) + is_positive(saisies.get('BNCDEV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNHEXV', 0)) + is_positive(saisies.get('BNHREV', 0)) + is_positive(saisies.get('BNHDEV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNCCRV', 0)))
PERP_MUT = is_positive(saisies.get('PERPMUTU', 0)) * is_positive(saisies.get('V_0AM', 0) + saisies.get('V_0AO', 0)) * 1 - is_positive(saisies.get('V_0AC', 0) + saisies.get('V_0AD', 0) + saisies.get('V_0AV', 0))
PERP_NONC = BOOL_0AM * is_positive(1 - is_positive(PERP_INDC) * 1 - is_positive(saisies.get('PRBRC', 0) + saisies.get('PALIC', 0)) * 1 - is_positive(saisies.get('PERP_COTC', 0)) * 1 - is_positive(PERP_INDV) * is_positive(saisies.get('PRBRV', 0) + saisies.get('PALIV', 0)))
PERP_NONV = is_positive(1 - is_positive(PERP_INDV) * 1 - is_positive(saisies.get('PRBRV', 0) + saisies.get('PALIV', 0)) * 1 - is_positive(saisies.get('PERP_COTV', 0)) * 1 - is_positive(PERP_INDC) * is_positive(saisies.get('PRBRC', 0) + saisies.get('PALIC', 0)))
PGLOA_A = 0
PIR_A = 0
PLAFCDPART = is_positive(saisies.get('V_0AL', 0)) * PLAF_CDPART
PLAF_ISFRED = 50000 * 1 - is_positive(saisies.get('ISFPMEDI', 0) + saisies.get('ISFPMEIN', 0) + saisies.get('ISFFIP', 0) + saisies.get('ISFFCPI', 0)) + 45000 * is_positive(saisies.get('ISFPMEDI', 0) + saisies.get('ISFPMEIN', 0) + saisies.get('ISFFIP', 0) + saisies.get('ISFFCPI', 0))
PLOY_A = 0
PL_PB = round(PLAF_DEDPRFOYER - sum([APBV * IND_APBV, APBC * IND_APBC, APB1 * IND_APB1, APB2 * IND_APB2, APB3 * IND_APB3, APB4 * IND_APB4]))
PMIB_APC = min(saisies.get('MIBPRESC', 0), max(MIN_MBIC, round(saisies.get('MIBPRESC', 0) * TX_MIBPRES / 100)))
PMIB_APP = min(saisies.get('MIBPRESP', 0), max(MIN_MBIC, round(saisies.get('MIBPRESP', 0) * TX_MIBPRES / 100)))
PMIB_APV = min(saisies.get('MIBPRESV', 0), max(MIN_MBIC, round(saisies.get('MIBPRESV', 0) * TX_MIBPRES / 100)))
PMIB_AVC = min(saisies.get('MIBVENC', 0), max(MIN_MBIC, round(saisies.get('MIBVENC', 0) * TX_MIBVEN / 100)))
PMIB_AVP = min(saisies.get('MIBVENP', 0), max(MIN_MBIC, round(saisies.get('MIBVENP', 0) * TX_MIBVEN / 100)))
PMIB_AVV = min(saisies.get('MIBVENV', 0), max(MIN_MBIC, round(saisies.get('MIBVENV', 0) * TX_MIBVEN / 100)))
PMIB_NETPC = saisies.get('MIBPRESC', 0) - PMIB_APC
PMIB_NETPP = saisies.get('MIBPRESP', 0) - PMIB_APP
PMIB_NETPV = saisies.get('MIBPRESV', 0) - PMIB_APV
PMIB_NETVC = saisies.get('MIBVENC', 0) - PMIB_AVC
PMIB_NETVP = saisies.get('MIBVENP', 0) - PMIB_AVP
PMIB_NETVV = saisies.get('MIBVENV', 0) - PMIB_AVV
PPCAP_A = 0
PPENBH1 = saisies.get('PPENHP1', 0) + saisies.get('PPEXT1', 0)
PPENBH2 = saisies.get('PPENHP2', 0) + saisies.get('PPEXT2', 0)
PPENBH3 = saisies.get('PPENHP3', 0) + saisies.get('PPEXT3', 0)
PPENBH4 = saisies.get('PPENHP4', 0) + saisies.get('PPEXT4', 0)
PPENBHC = saisies.get('PPENHC', 0) + saisies.get('PPEXTC', 0)
PPENBHV = saisies.get('PPENHV', 0) + saisies.get('PPEXTV', 0)
PPENEXO1 = is_zero(saisies.get('PPETPP1', 0) + 0) + is_positive(saisies.get('TSHALLO1', 0) + 0) + is_positive(saisies.get('SALEXT1', 0) + 0) + 4 * is_positive(saisies.get('PPENHP1', 0) + 0) + 8 * is_positive(saisies.get('PPEXT1', 0) + 0)
PPENEXO2 = is_zero(saisies.get('PPETPP2', 0) + 0) + is_positive(saisies.get('TSHALLO2', 0) + 0) + is_positive(saisies.get('SALEXT2', 0) + 0) + 4 * is_positive(saisies.get('PPENHP2', 0) + 0) + 8 * is_positive(saisies.get('PPEXT2', 0) + 0)
PPENEXO3 = is_zero(saisies.get('PPETPP3', 0) + 0) + is_positive(saisies.get('TSHALLO3', 0) + 0) + is_positive(saisies.get('SALEXT3', 0) + 0) + 4 * is_positive(saisies.get('PPENHP3', 0) + 0) + 8 * is_positive(saisies.get('PPEXT3', 0) + 0)
PPENEXO4 = is_zero(saisies.get('PPETPP4', 0) + 0) + is_positive(saisies.get('TSHALLO4', 0) + 0) + is_positive(saisies.get('SALEXT4', 0) + 0) + 4 * is_positive(saisies.get('PPENHP4', 0) + 0) + 8 * is_positive(saisies.get('PPEXT4', 0) + 0)
PPENEXOC = is_zero(saisies.get('PPETPC', 0) + 0) + is_positive(saisies.get('TSHALLOC', 0) + 0) + is_positive(saisies.get('SALEXTC', 0) + 0) + 4 * is_positive(saisies.get('PPENHC', 0) + 0) + 8 * is_positive(saisies.get('PPEXTC', 0) + 0)
PPENEXOV = is_zero(saisies.get('PPETPV', 0) + 0) + is_positive(saisies.get('TSHALLOV', 0) + 0) + is_positive(saisies.get('SALEXTV', 0) + 0) + 4 * is_positive(saisies.get('PPENHV', 0) + 0) + 8 * is_positive(saisies.get('PPEXTV', 0) + 0)
PPENHPTOT = PPENBH1 + PPENBH2 + PPENBH3 + PPENBH4
PPERSATOT = saisies.get('RSAFOYER', 0) + saisies.get('RSAPAC1', 0) + saisies.get('RSAPAC2', 0)
PPETX1 = PPE_TX1
PPETX2 = PPE_TX2
PPETX3 = PPE_TX3
PPE_AVRPRO1C = present(saisies.get('FEXC', 0)) + present(saisies.get('BAFC', 0)) + present(saisies.get('BAEXC', 0)) + present(saisies.get('BACREC', 0)) + present(_4BACREC) + present(saisies.get('BACDEC', 0)) + present(saisies.get('BAHEXC', 0)) + present(saisies.get('BAHREC', 0)) + present(_4BAHREC) + present(saisies.get('BAHDEC', 0)) + present(saisies.get('BICEXC', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('BIHEXC', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('BIHDNC', 0)) + present(saisies.get('BNCEXC', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BNCDEC', 0)) + present(saisies.get('BNHEXC', 0)) + present(saisies.get('BNHREC', 0)) + present(saisies.get('BNHDEC', 0)) + present(saisies.get('MIBEXC', 0)) + present(saisies.get('BNCPROEXC', 0)) + present(saisies.get('MIBVENC', 0)) + present(saisies.get('MIBPRESC', 0)) + present(saisies.get('BNCPROC', 0)) + present(saisies.get('BAFPVC', 0)) + present(saisies.get('MIBPVC', 0)) + present(saisies.get('BNCPROPVC', 0)) + present(saisies.get('BAFORESTC', 0)) + present(saisies.get('AUTOBICVC', 0)) + present(saisies.get('AUTOBICPC', 0)) + present(saisies.get('AUTOBNCC', 0)) + present(saisies.get('LOCPROC', 0)) + present(saisies.get('LOCPROCGAC', 0)) + present(saisies.get('LOCDEFPROCGAC', 0)) + present(saisies.get('LOCDEFPROC', 0)) + present(saisies.get('XHONOAAC', 0)) + present(saisies.get('XHONOC', 0))
PPE_AVRPRO1P = present(saisies.get('FEXP', 0)) + present(saisies.get('BAFP', 0)) + present(saisies.get('BAEXP', 0)) + present(saisies.get('BACREP', 0)) + present(_4BACREP) + present(saisies.get('BACDEP', 0)) + present(saisies.get('BAHEXP', 0)) + present(saisies.get('BAHREP', 0)) + present(_4BAHREP) + present(saisies.get('BAHDEP', 0)) + present(saisies.get('BICEXP', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('BIHEXP', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('BIHDNP', 0)) + present(saisies.get('BNCEXP', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BNCDEP', 0)) + present(saisies.get('BNHEXP', 0)) + present(saisies.get('BNHREP', 0)) + present(saisies.get('BNHDEP', 0)) + present(saisies.get('MIBEXP', 0)) + present(saisies.get('BNCPROEXP', 0)) + present(saisies.get('MIBVENP', 0)) + present(saisies.get('MIBPRESP', 0)) + present(saisies.get('BNCPROP', 0)) + present(saisies.get('BAFPVP', 0)) + present(saisies.get('MIBPVP', 0)) + present(saisies.get('BNCPROPVP', 0)) + present(saisies.get('BAFORESTP', 0)) + present(saisies.get('AUTOBICVP', 0)) + present(saisies.get('AUTOBICPP', 0)) + present(saisies.get('AUTOBNCP', 0)) + present(saisies.get('LOCPROP', 0)) + present(saisies.get('LOCPROCGAP', 0)) + present(saisies.get('LOCDEFPROCGAP', 0)) + present(saisies.get('LOCDEFPROP', 0)) + present(saisies.get('XHONOAAP', 0)) + present(saisies.get('XHONOP', 0))
PPE_AVRPRO1V = present(saisies.get('FEXV', 0)) + present(saisies.get('BAFV', 0)) + present(saisies.get('BAEXV', 0)) + present(saisies.get('BACREV', 0)) + present(_4BACREV) + present(saisies.get('BACDEV', 0)) + present(saisies.get('BAHEXV', 0)) + present(saisies.get('BAHREV', 0)) + present(_4BAHREV) + present(saisies.get('BAHDEV', 0)) + present(saisies.get('BICEXV', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('BIHEXV', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('BIHDNV', 0)) + present(saisies.get('BNCEXV', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BNCDEV', 0)) + present(saisies.get('BNHEXV', 0)) + present(saisies.get('BNHREV', 0)) + present(saisies.get('BNHDEV', 0)) + present(saisies.get('MIBEXV', 0)) + present(saisies.get('BNCPROEXV', 0)) + present(saisies.get('MIBVENV', 0)) + present(saisies.get('MIBPRESV', 0)) + present(saisies.get('BNCPROV', 0)) + present(saisies.get('BAFPVV', 0)) + present(saisies.get('MIBPVV', 0)) + present(saisies.get('BNCPROPVV', 0)) + present(saisies.get('BAFORESTV', 0)) + present(saisies.get('AUTOBICVV', 0)) + present(saisies.get('AUTOBICPV', 0)) + present(saisies.get('AUTOBNCV', 0)) + present(saisies.get('LOCPROV', 0)) + present(saisies.get('LOCPROCGAV', 0)) + present(saisies.get('LOCDEFPROCGAV', 0)) + present(saisies.get('LOCDEFPROV', 0)) + present(saisies.get('XHONOAAV', 0)) + present(saisies.get('XHONOV', 0))
PPE_BOOL_ACT_COND = is_positive(is_positive(saisies.get('TSHALLOV', 0)) + is_positive(saisies.get('TSHALLOC', 0)) + is_positive(saisies.get('TSHALLO1', 0)) + is_positive(saisies.get('TSHALLO2', 0)) + is_positive(saisies.get('TSHALLO3', 0)) + is_positive(saisies.get('TSHALLO4', 0)) + is_positive(saisies.get('GLD1V', 0)) + is_positive(saisies.get('GLD2V', 0)) + is_positive(saisies.get('GLD3V', 0)) + is_positive(saisies.get('GLD1C', 0)) + is_positive(saisies.get('GLD2C', 0)) + is_positive(saisies.get('GLD3C', 0)) + is_positive(saisies.get('BPCOSAV', 0)) + is_positive(saisies.get('BPCOSAC', 0)) + is_positive(saisies.get('TSASSUV', 0)) + is_positive(saisies.get('TSASSUC', 0)) + is_positive(saisies.get('CARTSV', 0)) * is_positive(saisies.get('CARTSNBAV', 0)) + is_positive(saisies.get('CARTSC', 0)) * is_positive(saisies.get('CARTSNBAC', 0)) + is_positive(saisies.get('CARTSP1', 0)) * is_positive(saisies.get('CARTSNBAP1', 0)) + is_positive(saisies.get('CARTSP2', 0)) * is_positive(saisies.get('CARTSNBAP2', 0)) + is_positive(saisies.get('CARTSP3', 0)) * is_positive(saisies.get('CARTSNBAP3', 0)) + is_positive(saisies.get('CARTSP4', 0)) * is_positive(saisies.get('CARTSNBAP4', 0)) + is_positive(saisies.get('FEXV', 0)) + is_positive(saisies.get('BAFV', 0)) + is_positive(saisies.get('BAFPVV', 0)) + is_positive(saisies.get('BAEXV', 0)) + is_positive(saisies.get('BACREV', 0)) + is_positive(_4BACREV) + is_positive(saisies.get('BACDEV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BAHEXV', 0)) + is_positive(saisies.get('BAHREV', 0)) + is_positive(_4BAHREV) + is_positive(saisies.get('BAHDEV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('MIBEXV', 0)) + is_positive(saisies.get('MIBVENV', 0)) + is_positive(saisies.get('MIBPRESV', 0)) + is_positive(saisies.get('MIBPVV', 0)) + is_positive(saisies.get('BICEXV', 0)) + is_positive(saisies.get('BICNOV', 0)) + is_positive(saisies.get('BICDNV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BIHEXV', 0)) + is_positive(saisies.get('BIHNOV', 0)) + is_positive(saisies.get('BIHDNV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('FEXC', 0)) + is_positive(saisies.get('BAFC', 0)) + is_positive(saisies.get('BAFPVC', 0)) + is_positive(saisies.get('BAEXC', 0)) + is_positive(saisies.get('BACREC', 0)) + is_positive(_4BACREC) + is_positive(saisies.get('BACDEC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BAHEXC', 0)) + is_positive(saisies.get('BAHREC', 0)) + is_positive(_4BAHREC) + is_positive(saisies.get('BAHDEC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('MIBEXC', 0)) + is_positive(saisies.get('MIBVENC', 0)) + is_positive(saisies.get('MIBPRESC', 0)) + is_positive(saisies.get('MIBPVC', 0)) + is_positive(saisies.get('BICEXC', 0)) + is_positive(saisies.get('BICNOC', 0)) + is_positive(saisies.get('BICDNC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BIHEXC', 0)) + is_positive(saisies.get('BIHNOC', 0)) + is_positive(saisies.get('BIHDNC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('FEXP', 0)) + is_positive(saisies.get('BAFP', 0)) + is_positive(saisies.get('BAFPVP', 0)) + is_positive(saisies.get('BAEXP', 0)) + is_positive(saisies.get('BACREP', 0)) + is_positive(_4BACREP) + is_positive(saisies.get('BACDEP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BAHEXP', 0)) + is_positive(saisies.get('BAHREP', 0)) + is_positive(_4BAHREP) + is_positive(saisies.get('BAHDEP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('MIBEXP', 0)) + is_positive(saisies.get('MIBVENP', 0)) + is_positive(saisies.get('MIBPRESP', 0)) + is_positive(saisies.get('BICEXP', 0)) + is_positive(saisies.get('MIBPVP', 0)) + is_positive(saisies.get('BICNOP', 0)) + is_positive(saisies.get('BICDNP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BIHEXP', 0)) + is_positive(saisies.get('BIHNOP', 0)) + is_positive(saisies.get('BIHDNP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNCPROEXV', 0)) + is_positive(saisies.get('BNCPROV', 0)) + is_positive(saisies.get('BNCPROPVV', 0)) + is_positive(saisies.get('BNCEXV', 0)) + is_positive(saisies.get('BNCREV', 0)) + is_positive(saisies.get('BNCDEV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNHEXV', 0)) + is_positive(saisies.get('BNHREV', 0)) + is_positive(saisies.get('BNHDEV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNCCRV', 0)) + is_positive(saisies.get('BNCPROEXC', 0)) + is_positive(saisies.get('BNCPROC', 0)) + is_positive(saisies.get('BNCPROPVC', 0)) + is_positive(saisies.get('BNCEXC', 0)) + is_positive(saisies.get('BNCREC', 0)) + is_positive(saisies.get('BNCDEC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNHEXC', 0)) + is_positive(saisies.get('BNHREC', 0)) + is_positive(saisies.get('BNHDEC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNCCRC', 0)) + is_positive(saisies.get('BNCPROEXP', 0)) + is_positive(saisies.get('BNCPROP', 0)) + is_positive(saisies.get('BNCPROPVP', 0)) + is_positive(saisies.get('BNCEXP', 0)) + is_positive(saisies.get('BNCREP', 0)) + is_positive(saisies.get('BNCDEP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNHEXP', 0)) + is_positive(saisies.get('BNHREP', 0)) + is_positive(saisies.get('BNHDEP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNCCRP', 0)) + is_positive(saisies.get('BIPERPV', 0)) + is_positive(saisies.get('BIPERPC', 0)) + is_positive(saisies.get('BIPERPP', 0)) + is_positive(saisies.get('BAFORESTV', 0)) + is_positive(saisies.get('BAFORESTC', 0)) + is_positive(saisies.get('BAFORESTP', 0)) + is_positive(saisies.get('AUTOBICVV', 0)) + is_positive(saisies.get('AUTOBICPV', 0)) + is_positive(saisies.get('AUTOBNCV', 0)) + is_positive(saisies.get('AUTOBICVC', 0)) + is_positive(saisies.get('AUTOBICPC', 0)) + is_positive(saisies.get('AUTOBNCC', 0)) + is_positive(saisies.get('AUTOBICVP', 0)) + is_positive(saisies.get('AUTOBICPP', 0)) + is_positive(saisies.get('AUTOBNCP', 0)) + is_positive(saisies.get('LOCPROCGAV', 0)) + is_positive(saisies.get('LOCPROV', 0)) + is_positive(saisies.get('LOCDEFPROCGAV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('LOCDEFPROV', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('LOCPROCGAC', 0)) + is_positive(saisies.get('LOCPROC', 0)) + is_positive(saisies.get('LOCDEFPROCGAC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('LOCDEFPROC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('LOCPROCGAP', 0)) + is_positive(saisies.get('LOCPROP', 0)) + is_positive(saisies.get('LOCDEFPROCGAP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('LOCDEFPROP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('XHONOAAV', 0)) + is_positive(saisies.get('XHONOAAC', 0)) + is_positive(saisies.get('XHONOAAP', 0)) + is_positive(saisies.get('XHONOV', 0)) + is_positive(saisies.get('XHONOC', 0)) + is_positive(saisies.get('XHONOP', 0)) + is_positive(saisies.get('GLDGRATV', 0)) + is_positive(saisies.get('GLDGRATC', 0)) + is_positive(saisies.get('CODDAJ', 0)) + is_positive(saisies.get('CODEAJ', 0)) + is_positive(saisies.get('CODDBJ', 0)) + is_positive(saisies.get('CODEBJ', 0)) + is_positive(saisies.get('SALEXTV', 0)) + is_positive(saisies.get('SALEXTC', 0)) + is_positive(saisies.get('SALEXT1', 0)) + is_positive(saisies.get('SALEXT2', 0)) + is_positive(saisies.get('SALEXT3', 0)) + is_positive(saisies.get('SALEXT4', 0)))
PPE_BOOL_BT = saisies.get('V_0BT', 0) * is_positive(2 - saisies.get('V_0AV', 0) - BOOLENF)
PPE_BOOL_NADA1 = min(1, is_positive(saisies.get('TSHALLO1', 0) + 0) * is_zero(saisies.get('PPETPP1', 0) + 0) * is_zero(saisies.get('PPENHP1', 0) + 0) + is_positive(saisies.get('SALEXT1', 0) + 0) * is_zero(saisies.get('PPETPP1', 0) + 0) * is_zero(saisies.get('PPEXT1', 0) + 0))
PPE_BOOL_NADA2 = min(1, is_positive(saisies.get('TSHALLO2', 0) + 0) * is_zero(saisies.get('PPETPP2', 0) + 0) * is_zero(saisies.get('PPENHP2', 0) + 0) + is_positive(saisies.get('SALEXT2', 0) + 0) * is_zero(saisies.get('PPETPP2', 0) + 0) * is_zero(saisies.get('PPEXT2', 0) + 0))
PPE_BOOL_NADA3 = min(1, is_positive(saisies.get('TSHALLO3', 0) + 0) * is_zero(saisies.get('PPETPP3', 0) + 0) * is_zero(saisies.get('PPENHP3', 0) + 0) + is_positive(saisies.get('SALEXT3', 0) + 0) * is_zero(saisies.get('PPETPP3', 0) + 0) * is_zero(saisies.get('PPEXT3', 0) + 0))
PPE_BOOL_NADA4 = min(1, is_positive(saisies.get('TSHALLO4', 0) + 0) * is_zero(saisies.get('PPETPP4', 0) + 0) * is_zero(saisies.get('PPENHP4', 0) + 0) + is_positive(saisies.get('SALEXT4', 0) + 0) * is_zero(saisies.get('PPETPP4', 0) + 0) * is_zero(saisies.get('PPEXT4', 0) + 0))
PPE_BOOL_NADAC = min(1, is_positive(saisies.get('TSHALLOC', 0) + 0) * is_zero(saisies.get('PPETPC', 0) + 0) * is_zero(saisies.get('PPENHC', 0) + 0) + is_positive(saisies.get('SALEXTC', 0) + 0) * is_zero(saisies.get('PPETPC', 0) + 0) * is_zero(saisies.get('PPEXTC', 0) + 0))
PPE_BOOL_NADAN = 0
PPE_BOOL_NADAU = min(1, is_positive(saisies.get('TSHALLO1', 0) + saisies.get('TSHALLO2', 0) + saisies.get('TSHALLO3', 0) + saisies.get('TSHALLO4', 0) + 0) * is_zero(saisies.get('PPETPP1', 0) + saisies.get('PPETPP2', 0) + saisies.get('PPETPP3', 0) + saisies.get('PPETPP4', 0) + 0) * is_zero(saisies.get('PPENHP1', 0) + saisies.get('PPENHP2', 0) + saisies.get('PPENHP3', 0) + saisies.get('PPENHP4', 0) + 0) + is_positive(saisies.get('SALEXT1', 0) + saisies.get('SALEXT2', 0) + saisies.get('SALEXT3', 0) + saisies.get('SALEXT4', 0) + 0) * is_zero(saisies.get('PPETPP1', 0) + saisies.get('PPETPP2', 0) + saisies.get('PPETPP3', 0) + saisies.get('PPETPP4', 0) + 0) * is_zero(saisies.get('PPEXT1', 0) + saisies.get('PPEXT2', 0) + saisies.get('PPEXT3', 0) + saisies.get('PPEXT4', 0) + 0))
PPE_BOOL_NADAV = min(1, is_positive(saisies.get('TSHALLOV', 0) + 0) * is_zero(saisies.get('PPETPV', 0) + 0) * is_zero(saisies.get('PPENHV', 0) + 0) + is_positive(saisies.get('SALEXTV', 0) + 0) * is_zero(saisies.get('PPETPV', 0) + 0) * is_zero(saisies.get('PPEXTV', 0) + 0))
PPE_BOOL_SEULPAC = is_zero(saisies.get('V_0CF', 0) + saisies.get('V_0CR', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0DN', 0) + saisies.get('V_0CH', 0) + saisies.get('V_0DP', 0) - 1)
PPE_BOOL_SIFC = 1 - BOOL_0AM * 1 - is_positive(saisies.get('V_0AV', 0)) * is_positive(saisies.get('V_0AZ', 0))
PPE_BOOL_SIFM = BOOL_0AM + is_positive(saisies.get('V_0AV', 0)) * is_positive(saisies.get('V_0AZ', 0))
PPE_DATE_DEB = is_positive(saisies.get('V_0AV', 0) + 0) * is_positive(saisies.get('V_0AZ', 0) + 0) * saisies.get('V_0AZ', 0) + 0 + is_positive(saisies.get('DATRETETR', 0) + 0) * saisies.get('DATRETETR', 0) + 0 * is_zero(saisies.get('V_0AZ', 0) + 0)
PPE_DATE_FIN = is_positive(BOOL_0AM) * is_positive(saisies.get('V_0AZ', 0) + 0) * saisies.get('V_0AZ', 0) + 0 + is_positive(saisies.get('DATDEPETR', 0) + 0) * saisies.get('DATDEPETR', 0) + 0 * is_zero(saisies.get('V_0AZ', 0) + 0)
PPE_DEBJJMMMM = PPE_DATE_DEB + 1010000 + saisies.get('V_ANREV', 0) * is_zero(PPE_DATE_DEB + 0)
PPE_FINJJMMMM = PPE_DATE_FIN + 30120000 + saisies.get('V_ANREV', 0) * is_zero(PPE_DATE_FIN + 0)
PPE_NBNONELI = sum([is_positive(PPEPRIME1), is_positive(PPEPRIME2), is_positive(PPEPRIME3), is_positive(PPEPRIME4), is_positive(PPEPRIMEU), is_positive(PPEPRIMEN)]) + sum([positif_ou_nul(PPE_RTA1 - PPELIMRPB) * is_positive(PPE_RCONTP1 - PPELIMRPH), positif_ou_nul(PPE_RTA2 - PPELIMRPB) * is_positive(PPE_RCONTP2 - PPELIMRPH), positif_ou_nul(PPE_RTA3 - PPELIMRPB) * is_positive(PPE_RCONTP3 - PPELIMRPH), positif_ou_nul(PPE_RTA4 - PPELIMRPB) * is_positive(PPE_RCONTP4 - PPELIMRPH), positif_ou_nul(PPE_RTAU - PPELIMRPB) * is_positive(PPE_RCONTPU - PPELIMRPH), positif_ou_nul(PPE_RTAN - PPELIMRPB) * is_positive(PPE_RCONTPN - PPELIMRPH)])
PPE_NB_PAC = saisies.get('V_0CF', 0) + saisies.get('V_0CR', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0DN', 0)
PPE_NB_PAC_QAR = saisies.get('V_0CH', 0) + saisies.get('V_0DP', 0)
PPE_SALAVDEF1 = saisies.get('TSHALLO1', 0) + saisies.get('CARTSP1', 0) * is_positive(saisies.get('CARTSNBAP1', 0)) + saisies.get('SALEXT1', 0)
PPE_SALAVDEF2 = saisies.get('TSHALLO2', 0) + saisies.get('CARTSP2', 0) * is_positive(saisies.get('CARTSNBAP2', 0)) + saisies.get('SALEXT2', 0)
PPE_SALAVDEF3 = saisies.get('TSHALLO3', 0) + saisies.get('CARTSP3', 0) * is_positive(saisies.get('CARTSNBAP3', 0)) + saisies.get('SALEXT3', 0)
PPE_SALAVDEF4 = saisies.get('TSHALLO4', 0) + saisies.get('CARTSP4', 0) * is_positive(saisies.get('CARTSNBAP4', 0)) + saisies.get('SALEXT4', 0)
PPE_SALAVDEFC = saisies.get('TSHALLOC', 0) + saisies.get('BPCOSAC', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0) + saisies.get('TSASSUC', 0) + saisies.get('CARTSC', 0) * is_positive(saisies.get('CARTSNBAC', 0)) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('SALEXTC', 0) + saisies.get('GLDGRATC', 0)
PPE_SALAVDEFU = sum([PPE_SALAVDEF1, PPE_SALAVDEF2, PPE_SALAVDEF3, PPE_SALAVDEF4]) * PPE_BOOL_SEULPAC
PPE_SALAVDEFV = saisies.get('TSHALLOV', 0) + saisies.get('BPCOSAV', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0) + saisies.get('TSASSUV', 0) + saisies.get('CARTSV', 0) * is_positive(saisies.get('CARTSNBAV', 0)) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('SALEXTV', 0) + saisies.get('GLDGRATV', 0)
PPRS_A = 0
PRB1 = saisies.get('PRBR1', 0) + saisies.get('PALI1', 0) + saisies.get('PENIN1', 0)
PRB2 = saisies.get('PRBR2', 0) + saisies.get('PALI2', 0) + saisies.get('PENIN2', 0)
PRB3 = saisies.get('PRBR3', 0) + saisies.get('PALI3', 0) + saisies.get('PENIN3', 0)
PRB4 = saisies.get('PRBR4', 0) + saisies.get('PALI4', 0) + saisies.get('PENIN4', 0)
PRBC = saisies.get('PRBRC', 0) + saisies.get('PALIC', 0) + saisies.get('PENINC', 0)
PRBV = saisies.get('PRBRV', 0) + saisies.get('PALIV', 0) + saisies.get('PENINV', 0)
PRC = saisies.get('PRBRC', 0)
PRDS_A = 0
PREGV_A = 0
PREHAB = saisies.get('PREHABT', 0) + saisies.get('PREHABTN', 0) + saisies.get('PREHABTN1', 0) + saisies.get('PREHABT1', 0) + saisies.get('PREHABT2', 0) + saisies.get('PREHABTN2', 0) + saisies.get('PREHABTVT', 0)
PRELIB = saisies.get('PPLIB', 0) + saisies.get('RCMLIB', 0)
PREM8_11 = 0
PRN = 1 - is_positive(DEFTS) * sum([PRNV, PRNC, PRN1, PRN2, PRN3, PRN4]) + min(0, sum([TSNV, TSNC, TSN1, TSN2, TSN3, TSN4])) * 1 - is_positive(saisies.get('APPLI_COLBERT', 0))
PROPCS_A = 0
PROPHR_A = 0
PROPIR_A = 0
PROPLOY_A = 0
PROPPS_A = 0
PROPRD_A = 0
PROQDEFBAT = 0
PRP = saisies.get('PRBR1', 0) + saisies.get('PRBR2', 0) + saisies.get('PRBR3', 0) + saisies.get('PRBR4', 0)
PRQCJ = saisies.get('CARPEC', 0) + saisies.get('PEBFC', 0)
PRQNP = sum([_2PRB1, _2PRB2, _2PRB3, _2PRB4])
PRQPC = saisies.get('CARPEP1', 0) + saisies.get('PEBF1', 0) + saisies.get('CARPEP2', 0) + saisies.get('PEBF2', 0) + saisies.get('CARPEP3', 0) + saisies.get('PEBF3', 0) + saisies.get('CARPEP4', 0) + saisies.get('PEBF4', 0)
PRQVO = saisies.get('CARPEV', 0) + saisies.get('PEBFV', 0)
PRQZC = saisies.get('CODRBZ', 0)
PRQZP = saisies.get('CODRCZ', 0) + saisies.get('CODRDZ', 0) + saisies.get('CODREZ', 0) + saisies.get('CODRFZ', 0)
PRQZV = saisies.get('CODRAZ', 0)
PRR2P = sum([PRR21, PRR22, PRR23, PRR24])
PRSAC = 0
PRSE1_A = 0
PRSE2_A = 0
PRSE3_A = 0
PRSE4_A = 0
PRSE5_A = 0
PRSPROV_A = 0
PRS_A = 0
PRV = saisies.get('PRBRV', 0)
PRZC = saisies.get('PENINC', 0)
PRZP = saisies.get('PENIN1', 0) + saisies.get('PENIN2', 0) + saisies.get('PENIN3', 0) + saisies.get('PENIN4', 0)
PRZV = saisies.get('PENINV', 0)
PS_PREREV = saisies.get('PREREV', 0)
PS_R1649 = saisies.get('R1649', 0)
PS_RE168 = saisies.get('RE168', 0)
PS_REVETRANG = 0
PS_RVORIGND = saisies.get('ESFP', 0)
PS_TAX1649 = saisies.get('TAX1649', 0)
PTAXA_A = 0
PTPS10C = round(PERPSALC * TX_DEDFORFTS / 100)
PTPS10V = round(PERPSALV * TX_DEDFORFTS / 100)
PVBAR = max(0, saisies.get('BPVRCM', 0) + saisies.get('COD3SG', 0) + saisies.get('COD3SL', 0) + saisies.get('ABDETPLUS', 0) + saisies.get('ABIMPPV', 0) + inf(saisies.get('CODRVG', 0) / saisies.get('CODNVG', 0)) - saisies.get('DPVRCM', 0) + saisies.get('COD3SH', 0) + saisies.get('COD3SM', 0) + saisies.get('ABDETMOINS', 0) + saisies.get('ABIMPMV', 0))
PVBAR3SB = saisies.get('PVTAXSB', 0) + saisies.get('COD3UV', 0) + saisies.get('COD3VE', 0)
PVBAR3VE = saisies.get('COD3VE', 0) + saisies.get('COD3UV', 0)
PVBAR3VG = saisies.get('BPVRCM', 0) + saisies.get('PVTAXSB', 0)
PVBAR3WB = saisies.get('PVIMPOS', 0)
PVBARHR = max(0, saisies.get('BPVRCM', 0) + saisies.get('COD3SG', 0) + saisies.get('COD3SL', 0) + saisies.get('ABDETPLUS', 0) + saisies.get('ABIMPPV', 0) + saisies.get('CODRVG', 0) - saisies.get('DPVRCM', 0) + saisies.get('COD3SH', 0) + saisies.get('COD3SM', 0) + saisies.get('ABDETMOINS', 0) + saisies.get('ABIMPMV', 0))
PVBARPS = max(0, saisies.get('BPVRCM', 0) + saisies.get('COD3SG', 0) + saisies.get('COD3SL', 0) + saisies.get('ABDETPLUS', 0) + saisies.get('ABIMPPV', 0) + saisies.get('CODRVG', 0) - saisies.get('DPVRCM', 0) + saisies.get('COD3SH', 0) + saisies.get('COD3SM', 0) + saisies.get('ABDETMOINS', 0) + saisies.get('ABIMPMV', 0)) + saisies.get('PVTITRESOC', 0)
PVCREA = saisies.get('PVSURSI', 0) + saisies.get('CODRWA', 0)
PVCREB = saisies.get('PVIMPOS', 0) + saisies.get('CODRWB', 0)
PVTAUX = saisies.get('BPVSJ', 0) + saisies.get('BPVSK', 0) + saisies.get('BPV18V', 0) + saisies.get('BPV18C', 0) + saisies.get('BPCOPTV', 0) + saisies.get('BPCOPTC', 0) + saisies.get('BPV40V', 0) + saisies.get('BPV40C', 0) + saisies.get('PEA', 0) + saisies.get('GAINPEA', 0)
PVTAUXPS = saisies.get('BPVSJ', 0) + saisies.get('BPVSK', 0) + saisies.get('BPV18V', 0) + saisies.get('BPV18C', 0) + saisies.get('BPCOPTV', 0) + saisies.get('BPCOPTC', 0) + saisies.get('BPV40V', 0) + saisies.get('BPV40C', 0) + saisies.get('BPCOSAV', 0) + saisies.get('BPCOSAC', 0) + saisies.get('PEA', 0) + saisies.get('GAINPEA', 0)
PVTXEFF2 = max(0, saisies.get('BPVRCM', 0) + saisies.get('COD3SG', 0) + saisies.get('COD3SL', 0) + saisies.get('ABDETPLUS', 0) + saisies.get('ABIMPPV', 0) - saisies.get('DPVRCM', 0) + saisies.get('COD3SH', 0) + saisies.get('COD3SM', 0) + saisies.get('ABDETMOINS', 0) + saisies.get('ABIMPMV', 0))
R2FA = max(0, saisies.get('COD2FA', 0))
RAA = round(TX_REDREPAS / 100 * BAA) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RAIDE1731 = 0
RAIDEP2 = 0
RAIDE_P = 0
RASAR = round(saisies.get('BRAS', 0) * TX_RASAR / 100)
RAVC = saisies.get('RCMAV', 0) + saisies.get('PROVIE', 0)
RB04 = saisies.get('IND_TDR', 0)
RB06 = saisies.get('RE168', 0) + saisies.get('TAX1649', 0)
RBAC = saisies.get('BAHREC', 0) + _4BAHREC + saisies.get('BACREC', 0) + _4BACREC + saisies.get('BAFORESTC', 0) + saisies.get('BAFC', 0) + saisies.get('BAFPVC', 0) - saisies.get('BACDEC', 0) - saisies.get('BAHDEC', 0)
RBAP = saisies.get('BAHREP', 0) + _4BAHREP + saisies.get('BACREP', 0) + _4BACREP + saisies.get('BAFORESTP', 0) + saisies.get('BAFP', 0) + saisies.get('BAFPVP', 0) - saisies.get('BACDEP', 0) - saisies.get('BAHDEP', 0)
RBAV = saisies.get('BAHREV', 0) + _4BAHREV + saisies.get('BACREV', 0) + _4BACREV + saisies.get('BAFORESTV', 0) + saisies.get('BAFV', 0) + saisies.get('BAFPVV', 0) - saisies.get('BACDEV', 0) - saisies.get('BAHDEV', 0)
RBGTH = saisies.get('TSHALLOV', 0) + saisies.get('TSHALLOC', 0) + saisies.get('TSHALLO1', 0) + saisies.get('TSHALLO2', 0) + saisies.get('TSHALLO3', 0) + saisies.get('TSHALLO4', 0) + saisies.get('ALLOV', 0) + saisies.get('ALLOC', 0) + saisies.get('ALLO1', 0) + saisies.get('ALLO2', 0) + saisies.get('ALLO3', 0) + saisies.get('ALLO4', 0) + saisies.get('SALEXTV', 0) + saisies.get('SALEXTC', 0) + saisies.get('SALEXT1', 0) + saisies.get('SALEXT2', 0) + saisies.get('SALEXT3', 0) + saisies.get('SALEXT4', 0) + saisies.get('TSASSUV', 0) + saisies.get('TSASSUC', 0) + saisies.get('XETRANV', 0) + saisies.get('XETRANC', 0) + saisies.get('ELURASV', 0) + saisies.get('ELURASC', 0) + saisies.get('IPMOND', 0) + saisies.get('PRBRV', 0) + saisies.get('PRBRC', 0) + saisies.get('PRBR1', 0) + saisies.get('PRBR2', 0) + saisies.get('PRBR3', 0) + saisies.get('PRBR4', 0) + saisies.get('COD1AH', 0) + saisies.get('COD1BH', 0) + saisies.get('COD1CH', 0) + saisies.get('COD1DH', 0) + saisies.get('COD1EH', 0) + saisies.get('COD1FH', 0) + saisies.get('PCAPTAXV', 0) + saisies.get('PCAPTAXC', 0) + saisies.get('PALIV', 0) + saisies.get('PALIC', 0) + saisies.get('PALI1', 0) + saisies.get('PALI2', 0) + saisies.get('PALI3', 0) + saisies.get('PALI4', 0) + saisies.get('RVB1', 0) + saisies.get('RVB2', 0) + saisies.get('RVB3', 0) + saisies.get('RVB4', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0) + saisies.get('GLDGRATV', 0) + saisies.get('GLDGRATC', 0) + saisies.get('PENINV', 0) + saisies.get('PENINC', 0) + saisies.get('PENIN1', 0) + saisies.get('PENIN2', 0) + saisies.get('PENIN3', 0) + saisies.get('PENIN4', 0) + saisies.get('RCMABD', 0) + saisies.get('RCMTNC', 0) + saisies.get('RCMAV', 0) + saisies.get('RCMHAD', 0) + saisies.get('REGPRIV', 0) + saisies.get('RCMHAB', 0) + saisies.get('PPLIB', 0) + saisies.get('RCMIMPAT', 0) + saisies.get('RCMLIB', 0) + saisies.get('COD2FA', 0) + saisies.get('BPV40V', 0) + saisies.get('BPVRCM', 0) + saisies.get('BPCOPTV', 0) + saisies.get('BPCOSAV', 0) + saisies.get('BPCOSAC', 0) + saisies.get('PEA', 0) + saisies.get('GAINABDET', 0) + saisies.get('BPV18V', 0) + saisies.get('ABIMPPV', 0) + saisies.get('BPV18C', 0) + saisies.get('BPCOPTC', 0) + saisies.get('BPV40C', 0) + saisies.get('BPVSJ', 0) + saisies.get('BPVSK', 0) + saisies.get('GAINPEA', 0) + saisies.get('PVSURSI', 0) + saisies.get('PVIMPOS', 0) + saisies.get('PVIMMO', 0) + saisies.get('ABDETPLUS', 0) + saisies.get('PVEXOSEC', 0) + saisies.get('PVREPORT', 0) + saisies.get('PVTITRESOC', 0) + saisies.get('COD3SG', 0) + saisies.get('COD3SL', 0) + saisies.get('COD3UA', 0) + saisies.get('RFMIC', 0) + saisies.get('RFORDI', 0) + saisies.get('FEXV', 0) + saisies.get('FEXC', 0) + saisies.get('FEXP', 0) + saisies.get('BAFPVV', 0) + saisies.get('BAFPVC', 0) + saisies.get('BAFPVP', 0) + saisies.get('BAF1AV', 0) + saisies.get('BAF1AC', 0) + saisies.get('BAF1AP', 0) + saisies.get('BAEXV', 0) + saisies.get('BAEXC', 0) + saisies.get('BAEXP', 0) + saisies.get('BACREV', 0) + saisies.get('BACREC', 0) + saisies.get('BACREP', 0) + saisies.get('BA1AV', 0) + saisies.get('BA1AC', 0) + saisies.get('BA1AP', 0) + saisies.get('BAHEXV', 0) + saisies.get('BAHEXC', 0) + saisies.get('BAHEXP', 0) + saisies.get('BAHREV', 0) + saisies.get('BAHREC', 0) + saisies.get('BAHREP', 0) + saisies.get('BAFV', 0) + saisies.get('BAFC', 0) + saisies.get('BAFP', 0) + saisies.get('BAFORESTV', 0) + saisies.get('BAFORESTC', 0) + saisies.get('BAFORESTP', 0) + saisies.get('BAPERPV', 0) + saisies.get('BANOCGAV', 0) + saisies.get('BAPERPC', 0) + saisies.get('BANOCGAC', 0) + saisies.get('BAPERPP', 0) + saisies.get('BANOCGAP', 0) + saisies.get('MIBEXV', 0) + saisies.get('MIBEXC', 0) + saisies.get('MIBEXP', 0) + saisies.get('MIBVENV', 0) + saisies.get('MIBVENC', 0) + saisies.get('MIBVENP', 0) + saisies.get('MIBPRESV', 0) + saisies.get('MIBPRESC', 0) + saisies.get('MIBPRESP', 0) + saisies.get('MIBPVV', 0) + saisies.get('MIBPVC', 0) + saisies.get('MIBPVP', 0) + saisies.get('MIB1AV', 0) + saisies.get('MIB1AC', 0) + saisies.get('MIB1AP', 0) + saisies.get('BICEXV', 0) + saisies.get('BICEXC', 0) + saisies.get('BICEXP', 0) + saisies.get('BICNOV', 0) + saisies.get('BICNOC', 0) + saisies.get('BICNOP', 0) + saisies.get('BI1AV', 0) + saisies.get('BI1AC', 0) + saisies.get('BI1AP', 0) + saisies.get('BIHEXV', 0) + saisies.get('BIHEXC', 0) + saisies.get('BIHEXP', 0) + saisies.get('BIHNOV', 0) + saisies.get('BIHNOC', 0) + saisies.get('BIHNOP', 0) + saisies.get('MIBNPEXV', 0) + saisies.get('MIBNPEXC', 0) + saisies.get('MIBNPEXP', 0) + saisies.get('MIBNPVENV', 0) + saisies.get('MIBNPVENC', 0) + saisies.get('MIBNPVENP', 0) + saisies.get('MIBNPPRESV', 0) + saisies.get('MIBNPPRESC', 0) + saisies.get('MIBNPPRESP', 0) + saisies.get('MIBNPPVV', 0) + saisies.get('MIBNPPVC', 0) + saisies.get('MIBNPPVP', 0) + saisies.get('MIBNP1AV', 0) + saisies.get('MIBNP1AC', 0) + saisies.get('MIBNP1AP', 0) + saisies.get('BICNPEXV', 0) + saisies.get('BICNPEXC', 0) + saisies.get('BICNPEXP', 0) + saisies.get('BICREV', 0) + saisies.get('BICREC', 0) + saisies.get('BICREP', 0) + saisies.get('BI2AV', 0) + saisies.get('BI2AC', 0) + saisies.get('BI2AP', 0) + saisies.get('BICNPHEXV', 0) + saisies.get('BICNPHEXC', 0) + saisies.get('BICNPHEXP', 0) + saisies.get('BICHREV', 0) + saisies.get('BICHREC', 0) + saisies.get('BICHREP', 0) + saisies.get('LOCNPCGAV', 0) + saisies.get('LOCNPV', 0) + saisies.get('LOCNPCGAC', 0) + saisies.get('LOCNPC', 0) + saisies.get('LOCNPCGAPAC', 0) + saisies.get('LOCNPPAC', 0) + saisies.get('LOCPROCGAV', 0) + saisies.get('LOCPROV', 0) + saisies.get('LOCPROCGAC', 0) + saisies.get('LOCPROC', 0) + saisies.get('LOCPROCGAP', 0) + saisies.get('LOCPROP', 0) + saisies.get('MIBMEUV', 0) + saisies.get('MIBMEUC', 0) + saisies.get('MIBMEUP', 0) + saisies.get('MIBGITEV', 0) + saisies.get('MIBGITEC', 0) + saisies.get('MIBGITEP', 0) + saisies.get('LOCGITCV', 0) + saisies.get('LOCGITHCV', 0) + saisies.get('LOCGITCC', 0) + saisies.get('LOCGITHCC', 0) + saisies.get('LOCGITCP', 0) + saisies.get('LOCGITHCP', 0) + saisies.get('LOCGITV', 0) + saisies.get('LOCGITC', 0) + saisies.get('LOCGITP', 0) + saisies.get('AUTOBICVV', 0) + saisies.get('AUTOBICPV', 0) + saisies.get('AUTOBICVC', 0) + saisies.get('AUTOBICPC', 0) + saisies.get('AUTOBICVP', 0) + saisies.get('AUTOBICPP', 0) + saisies.get('BIPERPV', 0) + saisies.get('BIPERPC', 0) + saisies.get('BIPERPP', 0) + saisies.get('BNCPROEXV', 0) + saisies.get('BNCPROEXC', 0) + saisies.get('BNCPROC', 0) + saisies.get('BNCPROP', 0) + saisies.get('BNCPROPVV', 0) + saisies.get('BNCPROPVC', 0) + saisies.get('BNCPROPVP', 0) + saisies.get('BNCPRO1AV', 0) + saisies.get('BNCPRO1AC', 0) + saisies.get('BNCPRO1AP', 0) + saisies.get('BNCEXV', 0) + saisies.get('BNCEXC', 0) + saisies.get('BNCEXP', 0) + saisies.get('BNCREV', 0) + saisies.get('BNCREC', 0) + saisies.get('BNCREP', 0) + saisies.get('BN1AV', 0) + saisies.get('BN1AC', 0) + saisies.get('BN1AP', 0) + saisies.get('BNHEXV', 0) + saisies.get('BNHEXC', 0) + saisies.get('BNHEXP', 0) + saisies.get('BNHREV', 0) + saisies.get('BNHREC', 0) + saisies.get('BNHREP', 0) + saisies.get('BNCCRV', 0) + saisies.get('BNCCRC', 0) + saisies.get('BNCCRP', 0) + saisies.get('BNCNPV', 0) + saisies.get('BNCNPC', 0) + saisies.get('BNCNPP', 0) + saisies.get('BNCNPPVV', 0) + saisies.get('BNCNPPVC', 0) + saisies.get('BNCNPPVP', 0) + saisies.get('BNCNP1AV', 0) + saisies.get('BNCNP1AC', 0) + saisies.get('BNCNP1AP', 0) + saisies.get('ANOCEP', 0) + saisies.get('PVINVE', 0) + saisies.get('BNCCRFV', 0) + saisies.get('ANOVEP', 0) + saisies.get('PVINCE', 0) + saisies.get('BNCCRFC', 0) + saisies.get('ANOPEP', 0) + saisies.get('PVINPE', 0) + saisies.get('BNCCRFP', 0) + saisies.get('BNCAABV', 0) + saisies.get('BNCAABC', 0) + saisies.get('BNCAABP', 0) + saisies.get('BNCNPREXAAV', 0) + saisies.get('BNCNPREXV', 0) + saisies.get('BNCNPREXAAC', 0) + saisies.get('BNCNPREXC', 0) + saisies.get('BNCNPREXAAP', 0) + saisies.get('BNCNPREXP', 0) + saisies.get('BNCPROEXP', 0) + saisies.get('BNCPROV', 0) + saisies.get('XHONOAAV', 0) + saisies.get('XHONOV', 0) + saisies.get('XHONOAAC', 0) + saisies.get('XHONOC', 0) + saisies.get('XHONOAAP', 0) + saisies.get('XHONOP', 0) + saisies.get('CESSASSV', 0) + saisies.get('CESSASSC', 0) + saisies.get('INVENTV', 0) + saisies.get('INVENTC', 0) + saisies.get('INVENTP', 0) + saisies.get('AUTOBNCV', 0) + saisies.get('AUTOBNCC', 0) + saisies.get('AUTOBNCP', 0) + saisies.get('XSPENPV', 0) + saisies.get('XSPENPC', 0) + saisies.get('XSPENPP', 0) + saisies.get('REPSOF', 0)
RCEL1731 = 0
RCEL20121731 = 0
RCEL2012P2 = 0
RCEL2012_P = 0
RCELCOM1731 = 0
RCELCOMP2 = 0
RCELCOM_P = 0
RCELFABC1731 = 0
RCELFABCP2 = 0
RCELFABC_P = 0
RCELFD1731 = 0
RCELFDP2 = 0
RCELFD_P = 0
RCELHJK1731 = 0
RCELHJKP2 = 0
RCELHJK_P = 0
RCELHL1731 = 0
RCELHLP2 = 0
RCELHL_P = 0
RCELHM1731 = 0
RCELHMP2 = 0
RCELHM_P = 0
RCELHNO1731 = 0
RCELHNOP2 = 0
RCELHNO_P = 0
RCELJBGL1731 = 0
RCELJBGLP2 = 0
RCELJBGL_P = 0
RCELJOQR1731 = 0
RCELJOQRP2 = 0
RCELJOQR_P = 0
RCELJP1731 = 0
RCELJPP2 = 0
RCELJP_P = 0
RCELNBGL1731 = 0
RCELNBGLP2 = 0
RCELNBGL_P = 0
RCELNQ1731 = 0
RCELNQP2 = 0
RCELNQ_P = 0
RCELP2 = 0
RCELREPGJ1731 = 0
RCELREPGJP2 = 0
RCELREPGJ_P = 0
RCELREPGK1731 = 0
RCELREPGKP2 = 0
RCELREPGK_P = 0
RCELREPGL1731 = 0
RCELREPGLP2 = 0
RCELREPGL_P = 0
RCELREPGP1731 = 0
RCELREPGPP2 = 0
RCELREPGP_P = 0
RCELREPGS1731 = 0
RCELREPGSP2 = 0
RCELREPGS_P = 0
RCELREPGT1731 = 0
RCELREPGTP2 = 0
RCELREPGT_P = 0
RCELREPGU1731 = 0
RCELREPGUP2 = 0
RCELREPGU_P = 0
RCELREPGV1731 = 0
RCELREPGVP2 = 0
RCELREPGV_P = 0
RCELREPGW1731 = 0
RCELREPGWP2 = 0
RCELREPGW_P = 0
RCELREPGX1731 = 0
RCELREPGXP2 = 0
RCELREPGX_P = 0
RCELREPHA1731 = 0
RCELREPHAP2 = 0
RCELREPHA_P = 0
RCELREPHB1731 = 0
RCELREPHBP2 = 0
RCELREPHB_P = 0
RCELREPHD1731 = 0
RCELREPHDP2 = 0
RCELREPHD_P = 0
RCELREPHE1731 = 0
RCELREPHEP2 = 0
RCELREPHE_P = 0
RCELREPHF1731 = 0
RCELREPHFP2 = 0
RCELREPHF_P = 0
RCELREPHG1731 = 0
RCELREPHGP2 = 0
RCELREPHG_P = 0
RCELREPHH1731 = 0
RCELREPHHP2 = 0
RCELREPHH_P = 0
RCELREPHR1731 = 0
RCELREPHRP2 = 0
RCELREPHR_P = 0
RCELREPHS1731 = 0
RCELREPHSP2 = 0
RCELREPHS_P = 0
RCELREPHT1731 = 0
RCELREPHTP2 = 0
RCELREPHT_P = 0
RCELREPHU1731 = 0
RCELREPHUP2 = 0
RCELREPHU_P = 0
RCELREPHV1731 = 0
RCELREPHVP2 = 0
RCELREPHV_P = 0
RCELREPHW1731 = 0
RCELREPHWP2 = 0
RCELREPHW_P = 0
RCELREPHX1731 = 0
RCELREPHXP2 = 0
RCELREPHX_P = 0
RCELREPHZ1731 = 0
RCELREPHZP2 = 0
RCELREPHZ_P = 0
RCELREPYA1731 = 0
RCELREPYAP2 = 0
RCELREPYA_P = 0
RCELREPYB1731 = 0
RCELREPYBP2 = 0
RCELREPYB_P = 0
RCELREPYC1731 = 0
RCELREPYCP2 = 0
RCELREPYC_P = 0
RCELREPYD1731 = 0
RCELREPYDP2 = 0
RCELREPYD_P = 0
RCELREPYE1731 = 0
RCELREPYEP2 = 0
RCELREPYE_P = 0
RCELREPYF1731 = 0
RCELREPYFP2 = 0
RCELREPYF_P = 0
RCELREPYG1731 = 0
RCELREPYGP2 = 0
RCELREPYG_P = 0
RCELREPYH1731 = 0
RCELREPYHP2 = 0
RCELREPYH_P = 0
RCELREPYI1731 = 0
RCELREPYIP2 = 0
RCELREPYI_P = 0
RCELREPYJ1731 = 0
RCELREPYJP2 = 0
RCELREPYJ_P = 0
RCELREPYK1731 = 0
RCELREPYKP2 = 0
RCELREPYK_P = 0
RCELREPYL1731 = 0
RCELREPYLP2 = 0
RCELREPYL_P = 0
RCELREP_HR_R = is_positive(saisies.get('CELREPHR', 0)) * round(saisies.get('CELREPHR', 0) * TX25 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HS_R = is_positive(saisies.get('CELREPHS', 0)) * round(saisies.get('CELREPHS', 0) * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HT_R = is_positive(saisies.get('CELREPHT', 0)) * round(saisies.get('CELREPHT', 0) * TX25 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HU_R = is_positive(saisies.get('CELREPHU', 0)) * round(saisies.get('CELREPHU', 0) * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HV_R = is_positive(saisies.get('CELREPHV', 0)) * round(saisies.get('CELREPHV', 0) * TX25 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HW_R = is_positive(saisies.get('CELREPHW', 0)) * round(saisies.get('CELREPHW', 0) * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HX_R = is_positive(saisies.get('CELREPHX', 0)) * round(saisies.get('CELREPHX', 0) * TX25 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HZ_R = is_positive(saisies.get('CELREPHZ', 0)) * round(saisies.get('CELREPHZ', 0) * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELRREDLA1731 = 0
RCELRREDLAP2 = 0
RCELRREDLA_P = 0
RCELRREDLB1731 = 0
RCELRREDLBP2 = 0
RCELRREDLB_P = 0
RCELRREDLC1731 = 0
RCELRREDLCP2 = 0
RCELRREDLC_P = 0
RCELRREDLD1731 = 0
RCELRREDLDP2 = 0
RCELRREDLD_P = 0
RCELRREDLE1731 = 0
RCELRREDLEP2 = 0
RCELRREDLE_P = 0
RCELRREDLF1731 = 0
RCELRREDLFP2 = 0
RCELRREDLF_P = 0
RCELRREDLM1731 = 0
RCELRREDLMP2 = 0
RCELRREDLM_P = 0
RCELRREDLN1731 = 0
RCELRREDLNP2 = 0
RCELRREDLN_P = 0
RCELRREDLS1731 = 0
RCELRREDLSP2 = 0
RCELRREDLS_P = 0
RCELRREDLT1731 = 0
RCELRREDLTP2 = 0
RCELRREDLT_P = 0
RCELRREDLX1731 = 0
RCELRREDLXP2 = 0
RCELRREDLX_P = 0
RCELRREDLZ1731 = 0
RCELRREDLZP2 = 0
RCELRREDLZ_P = 0
RCELRREDMG1731 = 0
RCELRREDMGP2 = 0
RCELRREDMG_P = 0
RCELRREDMH1731 = 0
RCELRREDMHP2 = 0
RCELRREDMH_P = 0
RCEL_P = 0
RCINE1731 = 0
RCINEP2 = 0
RCINE_P = 0
RCM2FA = saisies.get('COD2FA', 0) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)))
RCMNAB = saisies.get('RCMHAD', 0) + saisies.get('DISQUO', 0)
RCMPRIV = saisies.get('REGPRIV', 0) + saisies.get('RESTUC', 0)
RCMRABD = round(saisies.get('RCMABD', 0) * 40 / 100)
RCMRNABD = saisies.get('RCMABD', 0) - RCMRABD
RCMRTNC = round(saisies.get('RCMTNC', 0) * 40 / 100)
RCODID1731 = 0
RCODIDP2 = 0
RCODID_P = 0
RCODIE1731 = 0
RCODIEP2 = 0
RCODIE_P = 0
RCODIF1731 = 0
RCODIFP2 = 0
RCODIF_P = 0
RCODIG1731 = 0
RCODIGP2 = 0
RCODIG_P = 0
RCODIJ1731 = 0
RCODIJP2 = 0
RCODIJ_P = 0
RCODIL1731 = 0
RCODILP2 = 0
RCODIL_P = 0
RCODIM1731 = 0
RCODIMP2 = 0
RCODIM_P = 0
RCODIN1731 = 0
RCODINP2 = 0
RCODIN_P = 0
RCODIV1731 = 0
RCODIVP2 = 0
RCODIV_P = 0
RCODIW1731 = 0
RCODIWP2 = 0
RCODIW_P = 0
RCODJT1731 = 0
RCODJTP2 = 0
RCODJT_P = 0
RCODJU1731 = 0
RCODJUP2 = 0
RCODJU_P = 0
RCOLENT1731 = 0
RCOLENTP2 = 0
RCOLENT_P = 0
RCOMP1731 = 0
RCOMPP2 = 0
RCOMP_P = 0
RCOTFOR1731 = 0
RCOTFORP2 = 0
RCOTFOR_P = 0
RCREAT1731 = 0
RCREATP2 = 0
RCREAT_P = 0
RDIFAGRI1731 = 0
RDIFAGRIP2 = 0
RDIFAGRI_P = 0
RDNCP = PVBARPS + PVTAUXPS * 1 - is_positive(saisies.get('IPVLOC', 0))
RDOMSOC11731 = 0
RDOMSOC1P2 = 0
RDOMSOC1_P = 0
RDONS1731 = 0
RDONSP2 = 0
RDONS_P = 0
RDPTP = saisies.get('BAF1AV', 0) + saisies.get('BAF1AC', 0) + saisies.get('BAF1AP', 0) + saisies.get('BA1AV', 0) + saisies.get('BA1AC', 0) + saisies.get('BA1AP', 0) + max(0, saisies.get('MIB1AV', 0) - saisies.get('MIBDEV', 0)) + max(0, saisies.get('MIB1AC', 0) - saisies.get('MIBDEC', 0)) + max(0, saisies.get('MIB1AP', 0) - saisies.get('MIBDEP', 0)) + saisies.get('BI1AV', 0) + saisies.get('BI1AC', 0) + saisies.get('BI1AP', 0) + max(0, saisies.get('MIBNP1AV', 0) - saisies.get('MIBNPDEV', 0)) + max(0, saisies.get('MIBNP1AC', 0) - saisies.get('MIBNPDEC', 0)) + max(0, saisies.get('MIBNP1AP', 0) - saisies.get('MIBNPDEP', 0)) + saisies.get('BI2AV', 0) + saisies.get('BI2AC', 0) + saisies.get('BI2AP', 0) + max(0, saisies.get('BNCPRO1AV', 0) - saisies.get('BNCPRODEV', 0)) + max(0, saisies.get('BNCPRO1AC', 0) - saisies.get('BNCPRODEC', 0)) + max(0, saisies.get('BNCPRO1AP', 0) - saisies.get('BNCPRODEP', 0)) + saisies.get('BN1AV', 0) + saisies.get('BN1AC', 0) + saisies.get('BN1AP', 0) + max(0, saisies.get('BNCNP1AV', 0) - saisies.get('BNCNPDEV', 0)) + max(0, saisies.get('BNCNP1AC', 0) - saisies.get('BNCNPDEC', 0)) + max(0, saisies.get('BNCNP1AP', 0) - saisies.get('BNCNPDEP', 0)) + saisies.get('PVINVE', 0) + saisies.get('PVINCE', 0) + saisies.get('PVINPE', 0) + saisies.get('PVSOCV', 0) + saisies.get('PVSOCC', 0)
RDRVAPS = round(saisies.get('RVB1', 0) * TXRVT1 / 100) + round(saisies.get('RVB2', 0) * TXRVT2 / 100) + round(saisies.get('RVB3', 0) * TXRVT3 / 100) + round(saisies.get('RVB4', 0) * TXRVT4 / 100)
RDSCAC = 0
RDSNAC = RDSCAC - CIRDSAC
RDS_A = 0
RDUFLOGIH1731 = 0
RDUFLOGIHP2 = 0
RDUFLOGIH_P = 0
RDUFLO_EKL = round(round(min(saisies.get('DUFLOEL', 0) + 0, LIMDUFLO) / 9) * TX29 / 100) + round(round(min(saisies.get('DUFLOEK', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + saisies.get('PINELQC', 0) + 0, LIMDUFLO)) / 9) * TX18 / 100) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
RDUFLO_GIH = round(round(min(saisies.get('DUFLOGI', 0) + 0, LIMDUFLO) / 9) * TX29 / 100) + round(round(min(saisies.get('DUFLOGH', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOGI', 0) + 0, LIMDUFLO)) / 9) * TX18 / 100) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
RD_PREREV = saisies.get('PREREV', 0)
RD_R1649 = saisies.get('R1649', 0)
RD_RE168 = saisies.get('RE168', 0)
RD_REVETRANG = saisies.get('SALECS', 0) + saisies.get('SALECSG', 0) + saisies.get('ALLECS', 0) + saisies.get('INDECS', 0) + saisies.get('PENECS', 0) + saisies.get('COD8SA', 0) + saisies.get('COD8SB', 0)
RD_RVORIGND = saisies.get('ESFP', 0)
RD_TAX1649 = saisies.get('TAX1649', 0)
REB = saisies.get('REPSOF', 0)
RECUMBISIR = saisies.get('V_ANTREIR', 0) if (saisies.get('V_NIMPAIR', 0) + 0 == 1) else (saisies.get('V_ANTREIR', 0) * positif_ou_nul(saisies.get('V_ANTREIR', 0) - SEUIL_8))
RECUM_A = 0
REGPRIVM = round(saisies.get('REGPRIV', 0) * MAJREV)
REGV_A = 0
REI = saisies.get('IPREP', 0) + saisies.get('IPPRICORSE', 0)
REPDONR5 = 0
REPENT1 = saisies.get('CODHSB', 0) + saisies.get('CODHSG', 0) + saisies.get('CODHSL', 0) + saisies.get('CODHSQ', 0) + saisies.get('CODHSV', 0) + saisies.get('CODHTA', 0) + saisies.get('CODHSA', 0) + saisies.get('CODHSF', 0) + saisies.get('CODHSK', 0) + saisies.get('CODHSP', 0) + saisies.get('CODHSU', 0) + saisies.get('CODHSZ', 0) + saisies.get('CODHSC', 0) + saisies.get('CODHSH', 0) + saisies.get('CODHSM', 0) + saisies.get('CODHSR', 0) + saisies.get('CODHSW', 0) + saisies.get('CODHTB', 0) + saisies.get('CODHSE', 0) + saisies.get('CODHSJ', 0) + saisies.get('CODHSO', 0) + saisies.get('CODHST', 0) + saisies.get('CODHSY', 0) + saisies.get('CODHTD', 0)
REPENT2 = saisies.get('INVOMRETPM', 0) + saisies.get('INVOMENTRJ', 0) + saisies.get('INVOMRETPO', 0) + saisies.get('INVOMRETPT', 0) + saisies.get('INVOMRETPY', 0) + saisies.get('INVOMENTRL', 0) + saisies.get('INVOMENTRQ', 0) + saisies.get('INVOMENTRV', 0) + saisies.get('INVOMENTNV', 0) + saisies.get('INVOMRETPN', 0) + saisies.get('INVOMRETPS', 0) + saisies.get('INVOMRETPX', 0) + saisies.get('INVOMENTRK', 0) + saisies.get('INVOMENTRP', 0) + saisies.get('INVOMENTRU', 0) + saisies.get('INVOMENTNU', 0) + saisies.get('INVOMRETPP', 0) + saisies.get('INVOMRETPU', 0) + saisies.get('INVOMENTRG', 0) + saisies.get('INVOMENTRM', 0) + saisies.get('INVOMENTRR', 0) + saisies.get('INVOMENTRW', 0) + saisies.get('INVOMENTNW', 0) + saisies.get('INVOMRETPR', 0) + saisies.get('INVOMRETPW', 0) + saisies.get('INVOMENTRI', 0) + saisies.get('INVOMENTRO', 0) + saisies.get('INVOMENTRT', 0) + saisies.get('INVOMENTRY', 0) + saisies.get('INVOMENTNY', 0)
REPENT3 = saisies.get('INVOMQV', 0) + saisies.get('INVENDEB2009', 0) + saisies.get('INVRETRO2', 0) + saisies.get('INVDOMRET60', 0) + saisies.get('INVOMRETPB', 0) + saisies.get('INVOMRETPF', 0) + saisies.get('INVOMRETPJ', 0) + saisies.get('INVRETRO1', 0) + saisies.get('INVDOMRET50', 0) + saisies.get('INVOMRETPA', 0) + saisies.get('INVOMRETPE', 0) + saisies.get('INVOMRETPI', 0) + saisies.get('INVIMP', 0) + saisies.get('INVDIR2009', 0) + saisies.get('INVOMRETPD', 0) + saisies.get('INVOMRETPH', 0) + saisies.get('INVOMRETPL', 0)
REPENT4 = saisies.get('INVOMENTMN', 0) + saisies.get('RETROCOMMB', 0) + saisies.get('RETROCOMMC', 0) + saisies.get('RETROCOMLH', 0) + saisies.get('RETROCOMLI', 0) + saisies.get('INVOMENTKT', 0) + saisies.get('INVOMENTKU', 0)
REPENT5 = saisies.get('INVOMREP', 0) + saisies.get('NRETROC40', 0) + saisies.get('NRETROC50', 0) + saisies.get('INVENDI', 0)
REPOMENTR3 = 0
REPPLU = saisies.get('CREDPVREP', 0) + saisies.get('V_BTPVREP', 0) * 1 - present(saisies.get('CREDPVREP', 0))
REPRCM = saisies.get('DEFRCM', 0) + saisies.get('DEFRCM2', 0) + saisies.get('DEFRCM3', 0) + saisies.get('DEFRCM4', 0) + saisies.get('DEFRCM5', 0) + saisies.get('DEFRCM6', 0)
REPRCM1731 = 0
REPRCMB = max(0, BRCM + BRCMQ - saisies.get('RCMFR', 0))
REPRCMP2 = 0
REPRCM_P = 0
REPSOC = saisies.get('INVSOCNRET', 0) + saisies.get('INVOMSOCKH', 0) + saisies.get('INVOMSOCKI', 0) + saisies.get('INVSOC2010', 0) + saisies.get('INVOMSOCQU', 0) + saisies.get('INVLOGSOC', 0) + saisies.get('INVOMSOCQJ', 0) + saisies.get('INVOMSOCQS', 0) + saisies.get('INVOMSOCQW', 0) + saisies.get('INVOMSOCQX', 0) + saisies.get('CODHRA', 0) + saisies.get('CODHRB', 0) + saisies.get('CODHRC', 0) + saisies.get('CODHRD', 0) + saisies.get('CODHXA', 0) + saisies.get('CODHXB', 0) + saisies.get('CODHXC', 0) + saisies.get('CODHXE', 0)
RESIMEUB1 = round(round(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
RESIMEUB2 = round(round(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
RESIMEUB3 = round(round(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
RESIMEUB4 = round(round(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
RESIMEUB5 = round(round(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
RESIMEUB6 = round(round(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
RESIMEUB7 = round(round(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
RESIMEUB8 = round(min(DRESIMEUB, PLAF_RESINEUV) * TX25 / 100) - RESIMEUB1 - RESIMEUB2 - RESIMEUB3 - RESIMEUB4 - RESIMEUB5 - RESIMEUB6 - RESIMEUB7 - RESIMEUB7
RESTIMOD = min(saisies.get('RIMOSAUVANT', 0), LIM_RESTIMO)
RETARPRIM = 0
RETCDIS2 = 0
RETCDIS22 = 0
RETCHR2 = 0
RETCHR22 = 0
RETCS2 = 0
RETCS22 = 0
RETCVN2 = 0
RETCVN22 = 0
RETGLOA2 = 0
RETGLOA22 = 0
RETIR2 = 0
RETIR22 = 0
RETISF2 = 0
RETLOY2 = 0
RETLOY22 = 0
RETPCAP2 = 0
RETPCAP22 = 0
RETPS2 = 0
RETPS22 = 0
RETRD2 = 0
RETRD22 = 0
RETREGV2 = 0
RETREGV22 = 0
RETRSE12 = 0
RETRSE122 = 0
RETRSE22 = 0
RETRSE222 = 0
RETRSE32 = 0
RETRSE322 = 0
RETRSE42 = 0
RETRSE422 = 0
RETRSE52 = 0
RETRSE522 = 0
RETTAXA2 = 0
RETTAXA22 = 0
REVALIMQHT = sum([PENALIMV, PENALIMC, PENALIM1, PENALIM2, PENALIM3, PENALIM4])
REVDECEXO = saisies.get('FEXV', 0) + saisies.get('FEXC', 0) + saisies.get('FEXP', 0) + saisies.get('BAEXV', 0) + saisies.get('BAEXC', 0) + saisies.get('BAEXP', 0) + saisies.get('BAHEXV', 0) + saisies.get('BAHEXC', 0) + saisies.get('BAHEXP', 0) + saisies.get('MIBEXV', 0) + saisies.get('MIBEXC', 0) + saisies.get('MIBEXP', 0) + saisies.get('BICEXV', 0) + saisies.get('BICEXC', 0) + saisies.get('BICEXP', 0) + saisies.get('BIHEXV', 0) + saisies.get('BIHEXC', 0) + saisies.get('BIHEXP', 0) + saisies.get('MIBNPEXV', 0) + saisies.get('MIBNPEXC', 0) + saisies.get('MIBNPEXP', 0) + saisies.get('BICNPEXV', 0) + saisies.get('BICNPEXC', 0) + saisies.get('BICNPEXP', 0) + saisies.get('BICNPHEXV', 0) + saisies.get('BICNPHEXC', 0) + saisies.get('BICNPHEXP', 0) + saisies.get('BNCPROEXV', 0) + saisies.get('BNCPROEXC', 0) + saisies.get('BNCPROEXP', 0) + saisies.get('BNCEXV', 0) + saisies.get('BNCEXC', 0) + saisies.get('BNCEXP', 0) + saisies.get('BNHEXV', 0) + saisies.get('BNHEXC', 0) + saisies.get('BNHEXP', 0) * 1 - is_positive(saisies.get('APPLI_COLBERT', 0) + saisies.get('APPLI_OCEANS', 0))
REVF = sum([PENFV, PENFC, PENF1, PENF2, PENF3, PENF4])
REVIBI12C = BIH1C + BIH2C + saisies.get('BI1AC', 0) + saisies.get('BI2AC', 0)
REVIBI12P = BIH1P + BIH2P + saisies.get('BI1AP', 0) + saisies.get('BI2AP', 0)
REVIBI12V = BIH1V + BIH2V + saisies.get('BI1AV', 0) + saisies.get('BI2AV', 0)
REVPRRQHT = sum([PRR2V + PRR2ZV, PRR2C + PRR2ZC, PRR21 + PRR2Z1, PRR22 + PRR2Z2, PRR23 + PRR2Z3, PRR24 + PRR2Z4])
REVTSQHT = sum([TSNN2TSV, TSNN2TSC, TSNN2TS1, TSNN2TS2, TSNN2TS3, TSNN2TS4])
REVTSREMPQHT = sum([TSNN2REMPV, TSNN2REMPC, TSNN2REMP1, TSNN2REMP2, TSNN2REMP3, TSNN2REMP4])
RFCD = saisies.get('RFORDI', 0) + saisies.get('FONCI', 0) + saisies.get('REAMOR', 0)
RFCE = max(0, RFCD - saisies.get('RFDORD', 0)) * 1 - is_positive(ART1731BIS) + max(0, RFCD - DEFRF4BB) * is_positive(ART1731BIS)
RFCEAPS = max(0, saisies.get('RFORDI', 0) - saisies.get('RFDORD', 0)) * 1 - is_positive(ART1731BIS) + max(0, saisies.get('RFORDI', 0) - DEFRF4BB) * is_positive(ART1731BIS)
RFCEPS = max(0, RFCD - saisies.get('RFDORD', 0)) * 1 - is_positive(ART1731BIS) + max(0, RFCD - DEFRF4BB) * is_positive(ART1731BIS)
RFCF = max(0, RFCE - saisies.get('RFDHIS', 0) * 1 - is_positive(PREM8_11))
RFCFAPS = max(0, RFCEAPS - saisies.get('RFDHIS', 0) * 1 - is_positive(PREM8_11))
RFCFPS = RFCEPS - saisies.get('RFDHIS', 0) * 1 - is_positive(PREM8_11)
RFCG = max(0, RFCF - saisies.get('RFDANT', 0)) * 1 - is_positive(ART1731BIS) + max(0, RFCF - DEFRF4BD) * is_positive(ART1731BIS)
RFDANT1731 = 0
RFDORD1731 = 0
RFIPC1731 = 0
RFIPCP2 = 0
RFIPC_P = 0
RFIPDOM1731 = 0
RFIPDOMP2 = 0
RFIPDOM_P = 0
RFON = round(RFCG * saisies.get('RFORDI', 0) / RFCD)
RFOR1731 = 0
RFORET1731 = 0
RFORETP2 = 0
RFORET_P = 0
RFORP2 = 0
RFOR_P = 0
RFQ = saisies.get('FONCI', 0) + saisies.get('REAMOR', 0)
RFTEO = saisies.get('RFORDI', 0) + saisies.get('RFROBOR', 0)
RGLOA = saisies.get('GLDGRATV', 0) + saisies.get('GLDGRATC', 0)
RGPAR = is_positive(is_positive(saisies.get('PRODOM', 0)) + is_positive(saisies.get('CODDAJ', 0)) + is_positive(saisies.get('CODDBJ', 0))) * 1 + is_positive(is_positive(saisies.get('PROGUY', 0)) + is_positive(saisies.get('CODEAJ', 0)) + is_positive(saisies.get('CODEBJ', 0))) * 2 + is_positive(is_positive(saisies.get('PROGUY', 0)) + is_positive(saisies.get('CODEAJ', 0)) + is_positive(saisies.get('CODEBJ', 0))) * is_positive(is_positive(saisies.get('PRODOM', 0)) + is_positive(saisies.get('CODDAJ', 0)) + is_positive(saisies.get('CODDBJ', 0)))
RHEBE1731 = 0
RHEBEP2 = 0
RHEBE_P = 0
RIDEFRI = 0
RIDEFRIBIS = 0
RIDOMPRO = 0
RIDOMPROE31731 = 0
RIDOMPROE3P2 = 0
RIDOMPROE3_1 = 0
RIDOMPROE3_P = 0
RIDOMPROTOT_1 = RIDOMPROE3_1
RIHOTR = round(saisies.get('INVLOCHOTR', 0) + saisies.get('INVLOGHOT', 0) * TX_REDIL25 / 100) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)))
RILMIA1731 = 0
RILMIAP2 = 0
RILMIA_P = 0
RILMIB1731 = 0
RILMIBP2 = 0
RILMIB_P = 0
RILMIC1731 = 0
RILMICP2 = 0
RILMIC_P = 0
RILMIH1731 = 0
RILMIHP2 = 0
RILMIH_P = 0
RILMIX1731 = 0
RILMIXP2 = 0
RILMIX_P = 0
RILMIY1731 = 0
RILMIYP2 = 0
RILMIY_P = 0
RILMIZ1731 = 0
RILMIZP2 = 0
RILMIZ_P = 0
RILMJC1731 = 0
RILMJCP2 = 0
RILMJC_P = 0
RILMJI1731 = 0
RILMJIP2 = 0
RILMJI_P = 0
RILMJS1731 = 0
RILMJSP2 = 0
RILMJS_P = 0
RILMJV1731 = 0
RILMJVP2 = 0
RILMJV_P = 0
RILMJW1731 = 0
RILMJWP2 = 0
RILMJW_P = 0
RILMJX1731 = 0
RILMJXP2 = 0
RILMJX_P = 0
RILMJY1731 = 0
RILMJYP2 = 0
RILMJY_P = 0
RILNEUF = 0
RILRES = 0
RILTRA = 0
RINNO1731 = 0
RINNOP2 = 0
RINNO_P = 0
RINVRED1731 = 0
RINVREDP2 = 0
RINVRED_P = 0
RISFDONF_1 = min(PLAF_ISFRED, AISFDONF)
RISFDONF_2 = min(PLAF_ISFRED, RISFDONF_1)
RISFFIP_1 = min(18000, AISFFIP)
RISFPMED_1 = min(45000, AISFPMED)
RISFPMEI_1 = max(0, min(45000 - RISFPMED_1, AISFPMEI))
RITOUR = RILNEUF + RILTRA + RILRES + round(saisies.get('RINVLOCINV', 0) + saisies.get('REPINVTOU', 0) + saisies.get('INVLOCXN', 0) + saisies.get('COD7UY', 0) * TX_REDIL25 / 100) + round(saisies.get('RINVLOCREA', 0) + saisies.get('INVLOGREHA', 0) + saisies.get('INVLOCXV', 0) + saisies.get('COD7UZ', 0) * TX_REDIL20 / 100)
RIVCELFABC1 = is_positive(saisies.get('CELLIERFA', 0)) * round(BCEL_FABC * TX13 / 100) + is_positive(saisies.get('CELLIERFB', 0)) * round(BCEL_FABC * TX6 / 100) + is_positive(saisies.get('CELLIERFC', 0)) * round(BCEL_FABC * TX24 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RIVCELFD1 = is_positive(saisies.get('CELLIERFD', 0)) * round(BCEL_FD * TX24 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RIVCELFD4 = round(min(saisies.get('CELLIERFD', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERFD', 0)) * TX24 / 100) - 4 * RIVCELFD1 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RIVDUEKL = round(round(min(saisies.get('DUFLOEL', 0) + 0, LIMDUFLO) / 9) * TX29 / 100) + round(round(min(saisies.get('DUFLOEK', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + saisies.get('PINELQC', 0) + 0, LIMDUFLO)) / 9) * TX18 / 100) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
RIVDUEKL8 = max(0, round(min(saisies.get('DUFLOEL', 0) + 0, LIMDUFLO) * TX29 / 100) + round(min(saisies.get('DUFLOEK', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + saisies.get('PINELQC', 0) + 0, LIMDUFLO)) * TX18 / 100) - 8 * RIVDUEKL) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
RIVDUGIH = round(round(min(saisies.get('DUFLOGI', 0) + 0, LIMDUFLO) / 9) * TX29 / 100) + round(round(min(saisies.get('DUFLOGH', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOGI', 0) + 0, LIMDUFLO)) / 9) * TX18 / 100) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
RIVDUGIH8 = max(0, round(min(saisies.get('DUFLOGI', 0) + 0, LIMDUFLO) * TX29 / 100) + round(min(saisies.get('DUFLOGH', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOGI', 0) + 0, LIMDUFLO)) * TX18 / 100) - 8 * RIVDUGIH) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
RIVL1 = 0
RIVL1RES = 0
RIVL2 = 0
RIVL2RES = 0
RIVL3 = 0
RIVL3RES = 0
RIVL4 = 0
RIVL4RES = 0
RIVL5 = 0
RIVL5RES = 0
RIVL6 = 0
RIVPIQAC = round(round(min(saisies.get('PINELQC', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + 0, LIMDUFLO)) / 6) * TX23 / 100) + round(round(min(saisies.get('PINELQA', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + saisies.get('PINELQC', 0) + saisies.get('DUFLOEK', 0) + saisies.get('PINELQB', 0) + 0, LIMDUFLO)) / 6) * TX12 / 100) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
RIVPIQAC5 = max(0, round(min(saisies.get('PINELQC', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + 0, LIMDUFLO)) * TX23 / 100) + round(min(saisies.get('PINELQA', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + saisies.get('PINELQC', 0) + saisies.get('DUFLOEK', 0) + saisies.get('PINELQB', 0) + 0, LIMDUFLO)) * TX12 / 100) - 5 * RIVPIQAC) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
RIVPIQBD = round(round(min(saisies.get('PINELQD', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + 0, LIMDUFLO)) / 9) * TX29 / 100) + round(round(min(saisies.get('PINELQB', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + saisies.get('PINELQC', 0) + saisies.get('DUFLOEK', 0) + 0, LIMDUFLO)) / 9) * TX18 / 100) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
RIVPIQBD8 = max(0, round(min(saisies.get('PINELQD', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + 0, LIMDUFLO)) * TX29 / 100) + round(min(saisies.get('PINELQB', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + saisies.get('PINELQC', 0) + saisies.get('DUFLOEK', 0) + 0, LIMDUFLO)) * TX18 / 100) - 8 * RIVPIQBD) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
RLOCENT1731 = 0
RLOCENTP2 = 0
RLOCENT_P = 0
RLOG111731 = 0
RLOG131731 = 0
RLOG151731 = 0
RLOG161731 = 0
RLOG181731 = 0
RLOG201731 = 0
RLOG211731 = 0
RLOG231731 = 0
RLOG241731 = 0
RLOG251731 = 0
RLOGDOM1731 = 0
RLOGDOMP2 = 0
RLOGDOM_P = 0
RLOGSOC1731 = 0
RLOGSOCP2 = 0
RLOGSOC_P = 0
RMEUBLE1731 = 0
RMEUBLEP2 = 0
RMEUBLE_P = 0
RMF = max(0, saisies.get('RFMIC', 0) - MICFR)
RMFN = max(0, saisies.get('RFMIC', 0) - MICFR - saisies.get('RFDANT', 0)) * 1 - is_positive(ART1731BIS) + max(0, saisies.get('RFMIC', 0) - MICFR - DEFRF4BD) * is_positive(ART1731BIS)
RMONDT = is_positive(saisies.get('RMOND', 0) + saisies.get('DEFZU', 0) - saisies.get('DMOND', 0)) * saisies.get('RMOND', 0) + saisies.get('DEFZU', 0) - saisies.get('DMOND', 0)
RMOND_1 = saisies.get('RMOND', 0)
RNBE1731 = 0
RNBEP2 = 0
RNBE_1 = saisies.get('RDENS', 0) + saisies.get('RDENL', 0) + saisies.get('RDENU', 0) + saisies.get('RDENSQAR', 0) + saisies.get('RDENLQAR', 0) + saisies.get('RDENUQAR', 0)
RNBE_P = 0
RNOUV1731 = 0
RNOUVP2 = 0
RNOUV_P = 0
RPATNAT11731 = 0
RPATNAT1731 = 0
RPATNAT1P2 = 0
RPATNAT1_P = 0
RPATNAT21731 = 0
RPATNAT2P2 = 0
RPATNAT2_P = 0
RPATNAT31731 = 0
RPATNAT3P2 = 0
RPATNAT3_P = 0
RPATNATP2 = 0
RPATNAT_P = 0
RPI_QABCD = round(round(min(saisies.get('PINELQD', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + 0, LIMDUFLO)) / 9) * TX29 / 100) + round(round(min(saisies.get('PINELQB', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + saisies.get('PINELQC', 0) + saisies.get('DUFLOEK', 0) + 0, LIMDUFLO)) / 9) * TX18 / 100) + round(round(min(saisies.get('PINELQC', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + 0, LIMDUFLO)) / 6) * TX23 / 100) + round(round(min(saisies.get('PINELQA', 0) + 0, LIMDUFLO - min(saisies.get('DUFLOEL', 0) + saisies.get('PINELQD', 0) + saisies.get('PINELQC', 0) + saisies.get('DUFLOEK', 0) + saisies.get('PINELQB', 0) + 0, LIMDUFLO)) / 6) * TX12 / 100) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
RPREC = is_positive(saisies.get('CHRFAC', 0)) * max(1, saisies.get('CHNFAC', 0)) + is_zero(saisies.get('CHRFAC', 0)) * max(0, saisies.get('CHNFAC', 0))
RPROREP1731 = 0
RPROREPP2 = 0
RPROREP_P = 0
RREDMEUB1731 = 0
RREDMEUBP2 = 0
RREDMEUB_P = 0
RREDREP1731 = 0
RREDREPP2 = 0
RREDREP_P = 0
RREPA1731 = 0
RREPAP2 = 0
RREPA_P = 0
RREPMEU1731 = 0
RREPMEUP2 = 0
RREPMEU_P = 0
RREPNPRO1731 = 0
RREPNPROP2 = 0
RREPNPRO_P = 0
RRESIMEUB1731 = 0
RRESIMEUBP2 = 0
RRESIMEUB_P = 0
RRESTIMO1731 = 0
RRESTIMOP2 = 0
RRESTIMO_P = 0
RRETU1731 = 0
RRETUP2 = 0
RRETU_P = 0
RRIRENOV1731 = 0
RRIRENOVP2 = 0
RRIRENOV_P = 0
RRPRESCOMP1731 = 0
RRPRESCOMPP2 = 0
RRPRESCOMP_P = 0
RSE1BASE_A = 0
RSE2BASE_A = 0
RSE3BASE_A = 0
RSE4BASE_A = 0
RSE5BASE_A = 0
RSEPROVTOT = saisies.get('CSPROVYD', 0) + saisies.get('CSPROVYE', 0) + saisies.get('CSPROVYF', 0) + saisies.get('CSPROVYN', 0) + saisies.get('CSPROVYG', 0) + saisies.get('CSPROVYH', 0) + saisies.get('CSPROVYP', 0)
RSN_CL = BSNCL * TX25 / 100
RSN_CM = BSNCM * TX22 / 100
RSN_CN = BSNCN * TX18 / 100
RSN_CQ = BSNCQ * TX18 / 100
RSN_CR = BSNCR * TX18 / 100
RSOCREPR1731 = 0
RSOCREPRP2 = 0
RSOCREPR_P = 0
RSOUFIP1731 = 0
RSOUFIPP2 = 0
RSOUFIP_P = 0
RSURV1731 = 0
RSURVP2 = 0
RSURV_P = 0
RTCAR = saisies.get('RCMHAB', 0) + saisies.get('INTERE', 0)
RTOUHOTR1731 = 0
RTOUHOTRP2 = 0
RTOUHOTR_P = 0
RTOUREPA1731 = 0
RTOUREPAP2 = 0
RTOUREPA_P = 0
RTOURES = 0
RTOURREP1731 = 0
RTOURREPP2 = 0
RTOURREP_P = 0
RV1 = round(saisies.get('RVB1', 0) * TXRVT1 / 100)
RV2 = round(saisies.get('RVB2', 0) * TXRVT2 / 100)
RV3 = round(saisies.get('RVB3', 0) * TXRVT3 / 100)
RV4 = round(saisies.get('RVB4', 0) * TXRVT4 / 100)
RVBCSG = round(saisies.get('RVB1', 0) + saisies.get('RENTAX', 0) * TXRVT1 / 100) + round(saisies.get('RVB2', 0) + saisies.get('RENTAX5', 0) * TXRVT2 / 100) + round(saisies.get('RVB3', 0) + saisies.get('RENTAX6', 0) * TXRVT3 / 100) + round(saisies.get('RVB4', 0) + saisies.get('RENTAX7', 0) * TXRVT4 / 100)
RVTOT = RV1 + RV2 + RV3 + RV4
SEUILEXO = SEUIL_EXO1 + SEUIL_EXO2 - SEUIL_EXO1 * positif_ou_nul(max(AGV, AGC) - LIM_AGE_EXO)
SFM = ((1 if (saisies.get('V_0AF', 0) + 0 == 1) else 2) if (saisies.get('V_0AP', 0) + 0 == 1) else (3 if (saisies.get('V_0AF', 0) + 0 == 1) else (4 if (saisies.get('V_0AS', 0) + 0 == 1 and AGV >= LIM_AGE_LET_S or AGC >= LIM_AGE_LET_S) else 0))) if (BOOL_0AM == 1) else 0
SFV2 = ((1 if (saisies.get('V_0AF', 0) + 0 == 1) else 2) if (saisies.get('V_0AP', 0) + 0 == 1) else (3 if (saisies.get('V_0AF', 0) + 0 == 1) else (7 if (saisies.get('V_0AW', 0) + 0 == 1) else 0))) if (saisies.get('V_0AV', 0) + 0 == 1 and BOOL_0AZ == 1) else 0
SOMDEFANT = saisies.get('DEFAA5', 0) + saisies.get('DEFAA4', 0) + saisies.get('DEFAA3', 0) + saisies.get('DEFAA2', 0) + saisies.get('DEFAA1', 0) + saisies.get('DEFAA0', 0)
SOMDEFBANI = saisies.get('BACDEV', 0) + saisies.get('BAHDEV', 0) + saisies.get('BACDEC', 0) + saisies.get('BAHDEC', 0) + saisies.get('BACDEP', 0) + saisies.get('BAHDEP', 0)
SOMDEFBIC = saisies.get('BICDNV', 0) + saisies.get('BIHDNV', 0) + saisies.get('BICDNC', 0) + saisies.get('BIHDNC', 0) + saisies.get('BICDNP', 0) + saisies.get('BIHDNP', 0)
SOMDEFBNC = saisies.get('BNCDEV', 0) + saisies.get('BNHDEV', 0) + saisies.get('BNCDEC', 0) + saisies.get('BNHDEC', 0) + saisies.get('BNCDEP', 0) + saisies.get('BNHDEP', 0)
SOMDEFLOC = saisies.get('LOCDEFPROCGAV', 0) + saisies.get('LOCDEFPROV', 0) + saisies.get('LOCDEFPROCGAC', 0) + saisies.get('LOCDEFPROC', 0) + saisies.get('LOCDEFPROCGAP', 0) + saisies.get('LOCDEFPROP', 0)
SOMMEA030 = sum([is_positive(saisies.get('TSHALLO1', 0)) + is_positive(saisies.get('ALLO1', 0)) + is_positive(saisies.get('CARTSP1', 0)) + is_positive(saisies.get('REMPLAP1', 0)) + is_positive(saisies.get('CARTSNBAP1', 0)) + is_positive(saisies.get('REMPLANBP1', 0)) + is_positive(saisies.get('PRBR1', 0)) + is_positive(saisies.get('CARPEP1', 0)) + is_positive(saisies.get('CARPENBAP1', 0)) + is_positive(saisies.get('PALI1', 0)) + is_positive(saisies.get('FRN1', 0)) + is_positive(saisies.get('PPETPP1', 0)) + is_positive(saisies.get('PPENHP1', 0)) + is_positive(saisies.get('PENSALP1', 0)) + is_positive(saisies.get('PENSALNBP1', 0)), is_positive(saisies.get('TSHALLO2', 0)) + is_positive(saisies.get('ALLO2', 0)) + is_positive(saisies.get('CARTSP2', 0)) + is_positive(saisies.get('REMPLAP2', 0)) + is_positive(saisies.get('CARTSNBAP2', 0)) + is_positive(saisies.get('REMPLANBP2', 0)) + is_positive(saisies.get('PRBR2', 0)) + is_positive(saisies.get('CARPEP2', 0)) + is_positive(saisies.get('CARPENBAP2', 0)) + is_positive(saisies.get('PALI2', 0)) + is_positive(saisies.get('FRN2', 0)) + is_positive(saisies.get('PPETPP2', 0)) + is_positive(saisies.get('PPENHP2', 0)) + is_positive(saisies.get('PENSALP2', 0)) + is_positive(saisies.get('PENSALNBP2', 0)), is_positive(saisies.get('TSHALLO3', 0)) + is_positive(saisies.get('ALLO3', 0)) + is_positive(saisies.get('CARTSP3', 0)) + is_positive(saisies.get('REMPLAP3', 0)) + is_positive(saisies.get('CARTSNBAP3', 0)) + is_positive(saisies.get('REMPLANBP3', 0)) + is_positive(saisies.get('PRBR3', 0)) + is_positive(saisies.get('CARPEP3', 0)) + is_positive(saisies.get('CARPENBAP3', 0)) + is_positive(saisies.get('PALI3', 0)) + is_positive(saisies.get('FRN3', 0)) + is_positive(saisies.get('PPETPP3', 0)) + is_positive(saisies.get('PPENHP3', 0)) + is_positive(saisies.get('PENSALP3', 0)) + is_positive(saisies.get('PENSALNBP3', 0)), is_positive(saisies.get('TSHALLO4', 0)) + is_positive(saisies.get('ALLO4', 0)) + is_positive(saisies.get('CARTSP4', 0)) + is_positive(saisies.get('REMPLAP4', 0)) + is_positive(saisies.get('CARTSNBAP4', 0)) + is_positive(saisies.get('REMPLANBP4', 0)) + is_positive(saisies.get('PRBR4', 0)) + is_positive(saisies.get('CARPEP4', 0)) + is_positive(saisies.get('CARPENBAP4', 0)) + is_positive(saisies.get('PALI4', 0)) + is_positive(saisies.get('FRN4', 0)) + is_positive(saisies.get('PPETPP4', 0)) + is_positive(saisies.get('PPENHP4', 0)) + is_positive(saisies.get('PENSALP4', 0)) + is_positive(saisies.get('PENSALNBP4', 0))]) + is_positive(saisies.get('RSAPAC1', 0)) + is_positive(saisies.get('RSAPAC2', 0)) + is_positive(saisies.get('FEXP', 0)) + is_positive(saisies.get('BAFP', 0)) + is_positive(saisies.get('BAFORESTP', 0)) + is_positive(saisies.get('BAFPVP', 0)) + is_positive(saisies.get('BAF1AP', 0)) + is_positive(saisies.get('BAEXP', 0)) + is_positive(saisies.get('BACREP', 0)) + is_positive(_4BACREP) + is_positive(saisies.get('BA1AP', 0)) + is_positive(saisies.get('BACDEP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BAHEXP', 0)) + is_positive(saisies.get('BAHREP', 0)) + is_positive(_4BAHREP) + is_positive(saisies.get('BAHDEP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('MIBEXP', 0)) + is_positive(saisies.get('MIBVENP', 0)) + is_positive(saisies.get('MIBPRESP', 0)) + is_positive(saisies.get('MIBPVP', 0)) + is_positive(saisies.get('MIB1AP', 0)) + is_positive(saisies.get('MIBDEP', 0)) + is_positive(saisies.get('BICPMVCTP', 0)) + is_positive(saisies.get('BICEXP', 0)) + is_positive(saisies.get('BICNOP', 0)) + is_positive(saisies.get('BI1AP', 0)) + is_positive(saisies.get('BICDNP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BIHEXP', 0)) + is_positive(saisies.get('BIHNOP', 0)) + is_positive(saisies.get('BIHDNP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('MIBNPEXP', 0)) + is_positive(saisies.get('MIBNPVENP', 0)) + is_positive(saisies.get('MIBNPPRESP', 0)) + is_positive(saisies.get('MIBNPPVP', 0)) + is_positive(saisies.get('MIBNP1AP', 0)) + is_positive(saisies.get('MIBNPDEP', 0)) + is_positive(saisies.get('BICNPEXP', 0)) + is_positive(saisies.get('BICREP', 0)) + is_positive(saisies.get('BI2AP', 0)) + is_positive(min(saisies.get('BICDEP', 0), BICDEP1731 + 0) * is_positive(ART1731BIS) + saisies.get('BICDEP', 0) * 1 - ART1731BIS) + is_positive(saisies.get('BICNPHEXP', 0)) + is_positive(saisies.get('BICHREP', 0)) + is_positive(min(saisies.get('BICHDEP', 0), BICHDEP1731 + 0) * is_positive(ART1731BIS) + saisies.get('BICHDEP', 0) * 1 - ART1731BIS) + is_positive(saisies.get('BNCPROEXP', 0)) + is_positive(saisies.get('BNCPROP', 0)) + is_positive(saisies.get('BNCPROPVP', 0)) + is_positive(saisies.get('BNCPRO1AP', 0)) + is_positive(saisies.get('BNCPRODEP', 0)) + is_positive(saisies.get('BNCPMVCTP', 0)) + is_positive(saisies.get('BNCEXP', 0)) + is_positive(saisies.get('BNCREP', 0)) + is_positive(saisies.get('BN1AP', 0)) + is_positive(saisies.get('BNCDEP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNHEXP', 0)) + is_positive(saisies.get('BNHREP', 0)) + is_positive(saisies.get('BNHDEP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNCCRP', 0)) + is_positive(saisies.get('BNCNPP', 0)) + is_positive(saisies.get('BNCNPPVP', 0)) + is_positive(saisies.get('BNCNP1AP', 0)) + is_positive(saisies.get('BNCNPDEP', 0)) + is_positive(saisies.get('ANOPEP', 0)) + is_positive(saisies.get('PVINPE', 0)) + is_positive(saisies.get('INVENTP', 0)) + is_positive(min(saisies.get('DNOCEPP', 0), DNOCEPP1731 + 0) * is_positive(ART1731BIS) + saisies.get('DNOCEPP', 0) * 1 - ART1731BIS) + is_positive(saisies.get('BNCCRFP', 0)) + is_positive(saisies.get('BNCAABP', 0)) + is_positive(min(saisies.get('BNCAADP', 0), BNCAADP1731 + 0) * is_positive(ART1731BIS) + saisies.get('BNCAADP', 0) * 1 - ART1731BIS) + is_positive(saisies.get('RCSP', 0)) + is_positive(saisies.get('PPEACP', 0)) + is_positive(saisies.get('PPENJP', 0)) + is_positive(saisies.get('BAPERPP', 0)) + is_positive(saisies.get('BIPERPP', 0)) + is_positive(saisies.get('PERPP', 0)) + is_positive(saisies.get('PERP_COTP', 0)) + is_positive(saisies.get('RACCOTP', 0)) + is_positive(saisies.get('PLAF_PERPP', 0)) + sum([is_positive(saisies.get('PEBF1', 0)), is_positive(saisies.get('PEBF2', 0)), is_positive(saisies.get('PEBF3', 0)), is_positive(saisies.get('PEBF4', 0))]) + is_positive(saisies.get('COTF1', 0)) + is_positive(saisies.get('COTF2', 0)) + is_positive(saisies.get('COTF3', 0)) + is_positive(saisies.get('COTF4', 0)) + is_positive(saisies.get('BNCNPREXAAP', 0)) + is_positive(saisies.get('BNCNPREXP', 0)) + is_positive(saisies.get('AUTOBICVP', 0)) + is_positive(saisies.get('AUTOBICPP', 0)) + is_positive(saisies.get('AUTOBNCP', 0)) + is_positive(saisies.get('LOCPROCGAP', 0)) + is_positive(saisies.get('LOCDEFPROCGAP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('LOCPROP', 0)) + is_positive(saisies.get('LOCDEFPROP', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('LOCNPCGAPAC', 0)) + is_positive(saisies.get('LOCGITCP', 0)) + is_positive(saisies.get('LOCGITHCP', 0)) + is_positive(min(saisies.get('LOCDEFNPCGAPAC', 0), LOCDEFNPCGAPAC1731 + 0) * is_positive(ART1731BIS) + saisies.get('LOCDEFNPCGAPAC', 0) * 1 - ART1731BIS) + is_positive(saisies.get('LOCNPPAC', 0)) + is_positive(min(saisies.get('LOCDEFNPPAC', 0), LOCDEFNPPAC1731 + 0) * is_positive(ART1731BIS) + saisies.get('LOCDEFNPPAC', 0) * 1 - ART1731BIS) + is_positive(saisies.get('XHONOAAP', 0)) + is_positive(saisies.get('XHONOP', 0)) + is_positive(saisies.get('XSPENPP', 0)) + is_positive(saisies.get('BANOCGAP', 0)) + is_positive(saisies.get('MIBMEUP', 0)) + is_positive(saisies.get('MIBGITEP', 0)) + is_positive(saisies.get('LOCGITP', 0)) + is_positive(saisies.get('SALEXT1', 0)) + is_positive(saisies.get('COD1CD', 0)) + is_positive(saisies.get('COD1CE', 0)) + is_positive(saisies.get('PPEXT1', 0)) + is_positive(saisies.get('COD1CH', 0)) + is_positive(saisies.get('SALEXT2', 0)) + is_positive(saisies.get('COD1DD', 0)) + is_positive(saisies.get('COD1DE', 0)) + is_positive(saisies.get('PPEXT2', 0)) + is_positive(saisies.get('COD1DH', 0)) + is_positive(saisies.get('SALEXT3', 0)) + is_positive(saisies.get('COD1ED', 0)) + is_positive(saisies.get('COD1EE', 0)) + is_positive(saisies.get('PPEXT3', 0)) + is_positive(saisies.get('COD1EH', 0)) + is_positive(saisies.get('SALEXT4', 0)) + is_positive(saisies.get('COD1FD', 0)) + is_positive(saisies.get('COD1FE', 0)) + is_positive(saisies.get('PPEXT4', 0)) + is_positive(saisies.get('COD1FH', 0)) + is_positive(saisies.get('RDSYPP', 0)) + is_positive(saisies.get('PENIN1', 0)) + is_positive(saisies.get('PENIN2', 0)) + is_positive(saisies.get('PENIN3', 0)) + is_positive(saisies.get('PENIN4', 0)) + is_positive(saisies.get('CODRCZ', 0)) + is_positive(saisies.get('CODRDZ', 0)) + is_positive(saisies.get('CODREZ', 0)) + is_positive(saisies.get('CODRFZ', 0)) + 0
SOMMEA031 = is_positive(saisies.get('TSHALLOC', 0)) + is_positive(saisies.get('ALLOC', 0)) + is_positive(saisies.get('PRBRC', 0)) + is_positive(saisies.get('PALIC', 0)) + is_positive(saisies.get('GSALC', 0)) + is_positive(saisies.get('TSASSUC', 0)) + is_positive(saisies.get('XETRANC', 0)) + is_positive(saisies.get('EXOCETC', 0)) + is_positive(saisies.get('FRNC', 0)) + is_positive(saisies.get('PPETPC', 0)) + is_positive(saisies.get('PPENHC', 0)) + is_positive(saisies.get('PCAPTAXC', 0)) + is_positive(saisies.get('CARTSC', 0)) + is_positive(saisies.get('PENSALC', 0)) + is_positive(saisies.get('REMPLAC', 0)) + is_positive(saisies.get('CARPEC', 0)) + is_positive(saisies.get('GLDGRATC', 0)) + is_positive(saisies.get('GLD1C', 0)) + is_positive(saisies.get('GLD2C', 0)) + is_positive(saisies.get('GLD3C', 0)) + is_positive(saisies.get('BPV18C', 0)) + is_positive(saisies.get('BPCOPTC', 0)) + is_positive(saisies.get('BPV40C', 0)) + is_positive(saisies.get('BPCOSAC', 0)) + is_positive(saisies.get('CVNSALAC', 0)) + is_positive(saisies.get('FEXC', 0)) + is_positive(saisies.get('BAFC', 0)) + is_positive(saisies.get('BAFORESTC', 0)) + is_positive(saisies.get('BAFPVC', 0)) + is_positive(saisies.get('BAF1AC', 0)) + is_positive(saisies.get('BAEXC', 0)) + is_positive(saisies.get('BACREC', 0)) + is_positive(_4BACREC) + is_positive(saisies.get('BA1AC', 0)) + is_positive(saisies.get('BACDEC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BAHEXC', 0)) + is_positive(saisies.get('BAHREC', 0)) + is_positive(_4BAHREC) + is_positive(saisies.get('BAHDEC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BAPERPC', 0)) + is_positive(saisies.get('BANOCGAC', 0)) + is_positive(saisies.get('AUTOBICVC', 0)) + is_positive(saisies.get('AUTOBICPC', 0)) + is_positive(saisies.get('AUTOBNCC', 0)) + is_positive(saisies.get('MIBEXC', 0)) + is_positive(saisies.get('MIBVENC', 0)) + is_positive(saisies.get('MIBPRESC', 0)) + is_positive(saisies.get('MIBPVC', 0)) + is_positive(saisies.get('MIB1AC', 0)) + is_positive(saisies.get('MIBDEC', 0)) + is_positive(saisies.get('BICPMVCTC', 0)) + is_positive(saisies.get('BICEXC', 0)) + is_positive(saisies.get('BICNOC', 0)) + is_positive(saisies.get('LOCPROCGAC', 0)) + is_positive(saisies.get('BI1AC', 0)) + is_positive(saisies.get('BICDNC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('LOCDEFPROCGAC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BIHEXC', 0)) + is_positive(saisies.get('BIHNOC', 0)) + is_positive(saisies.get('LOCPROC', 0)) + is_positive(saisies.get('BIHDNC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('LOCDEFPROC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BIPERPC', 0)) + is_positive(saisies.get('MIBNPEXC', 0)) + is_positive(saisies.get('MIBNPVENC', 0)) + is_positive(saisies.get('MIBNPPRESC', 0)) + is_positive(saisies.get('MIBNPPVC', 0)) + is_positive(saisies.get('MIBNP1AC', 0)) + is_positive(saisies.get('MIBNPDEC', 0)) + is_positive(saisies.get('BICNPEXC', 0)) + is_positive(saisies.get('BICREC', 0)) + is_positive(saisies.get('LOCNPCGAC', 0)) + is_positive(saisies.get('BI2AC', 0)) + is_positive(min(saisies.get('BICDEC', 0), BICDEC1731 + 0) * is_positive(ART1731BIS) + saisies.get('BICDEC', 0) * 1 - ART1731BIS) + is_positive(min(saisies.get('LOCDEFNPCGAC', 0), LOCDEFNPCGAC1731 + 0) * is_positive(ART1731BIS) + saisies.get('LOCDEFNPCGAC', 0) * 1 - ART1731BIS) + is_positive(saisies.get('MIBMEUC', 0)) + is_positive(saisies.get('MIBGITEC', 0)) + is_positive(saisies.get('LOCGITC', 0)) + is_positive(saisies.get('LOCGITCC', 0)) + is_positive(saisies.get('LOCGITHCC', 0)) + is_positive(saisies.get('BICNPHEXC', 0)) + is_positive(saisies.get('BICHREC', 0)) + is_positive(saisies.get('LOCNPC', 0)) + is_positive(min(saisies.get('BICHDEC', 0), BICHDEC1731 + 0) * is_positive(ART1731BIS) + saisies.get('BICHDEC', 0) * 1 - ART1731BIS) + is_positive(min(saisies.get('LOCDEFNPC', 0), LOCDEFNPC1731 + 0) * is_positive(ART1731BIS) + saisies.get('LOCDEFNPC', 0) * 1 - ART1731BIS) + is_positive(saisies.get('BNCPROEXC', 0)) + is_positive(saisies.get('BNCPROC', 0)) + is_positive(saisies.get('BNCPROPVC', 0)) + is_positive(saisies.get('BNCPRO1AC', 0)) + is_positive(saisies.get('BNCPRODEC', 0)) + is_positive(saisies.get('BNCPMVCTC', 0)) + is_positive(saisies.get('BNCEXC', 0)) + is_positive(saisies.get('BNCREC', 0)) + is_positive(saisies.get('BN1AC', 0)) + is_positive(saisies.get('BNCDEC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNHEXC', 0)) + is_positive(saisies.get('BNHREC', 0)) + is_positive(saisies.get('BNHDEC', 0) * 1 - is_positive(ART1731BIS)) + is_positive(saisies.get('BNCCRC', 0)) + is_positive(saisies.get('CESSASSC', 0)) + is_positive(saisies.get('XHONOAAC', 0)) + is_positive(saisies.get('XHONOC', 0)) + is_positive(saisies.get('XSPENPC', 0)) + is_positive(saisies.get('BNCNPC', 0)) + is_positive(saisies.get('BNCNPPVC', 0)) + is_positive(saisies.get('BNCNP1AC', 0)) + is_positive(saisies.get('BNCNPDEC', 0)) + is_positive(saisies.get('BNCNPREXAAC', 0)) + is_positive(saisies.get('BNCAABC', 0)) + is_positive(min(saisies.get('BNCAADC', 0), BNCAADC1731 + 0) * is_positive(ART1731BIS) + saisies.get('BNCAADC', 0) * 1 - ART1731BIS) + is_positive(saisies.get('BNCNPREXC', 0)) + is_positive(saisies.get('ANOVEP', 0)) + is_positive(saisies.get('PVINCE', 0)) + is_positive(saisies.get('INVENTC', 0)) + is_positive(min(saisies.get('DNOCEPC', 0), DNOCEPC1731 + 0) * is_positive(ART1731BIS) + saisies.get('DNOCEPC', 0) * 1 - ART1731BIS) + is_positive(saisies.get('BNCCRFC', 0)) + is_positive(saisies.get('RCSC', 0)) + is_positive(saisies.get('PVSOCC', 0)) + is_positive(saisies.get('PPEACC', 0)) + is_positive(saisies.get('PPENJC', 0)) + is_positive(saisies.get('PEBFC', 0)) + is_positive(saisies.get('PERPC', 0)) + is_positive(saisies.get('PERP_COTC', 0)) + is_positive(saisies.get('RACCOTC', 0)) + is_positive(saisies.get('PLAF_PERPC', 0)) + is_positive(saisies.get('PERPPLAFCC', 0)) + is_positive(saisies.get('PERPPLAFNUC1', 0)) + is_positive(saisies.get('PERPPLAFNUC2', 0)) + is_positive(saisies.get('PERPPLAFNUC3', 0)) + is_positive(saisies.get('ELURASC', 0)) + is_positive(saisies.get('CODDBJ', 0)) + is_positive(saisies.get('CODEBJ', 0)) + is_positive(saisies.get('SALEXTC', 0)) + is_positive(saisies.get('COD1BD', 0)) + is_positive(saisies.get('COD1BE', 0)) + is_positive(saisies.get('PPEXTC', 0)) + is_positive(saisies.get('COD1BH', 0)) + is_positive(saisies.get('RDSYCJ', 0)) + is_positive(saisies.get('PENINC', 0)) + is_positive(saisies.get('CODRBZ', 0)) + 0
SOMMEA090 = sum([saisies.get('TSHALLOV', 0) + saisies.get('ALLOV', 0) + saisies.get('DETSV', 0) + saisies.get('FRNV', 0) + saisies.get('PRBRV', 0) + saisies.get('PALIV', 0), saisies.get('TSHALLOC', 0) + saisies.get('ALLOC', 0) + saisies.get('DETSC', 0) + saisies.get('FRNC', 0) + saisies.get('PRBRC', 0) + saisies.get('PALIC', 0), saisies.get('TSHALLO1', 0) + saisies.get('ALLO1', 0) + saisies.get('DETS1', 0) + saisies.get('FRN1', 0) + saisies.get('PRBR1', 0) + saisies.get('PALI1', 0), saisies.get('TSHALLO2', 0) + saisies.get('ALLO2', 0) + saisies.get('DETS2', 0) + saisies.get('FRN2', 0) + saisies.get('PRBR2', 0) + saisies.get('PALI2', 0), saisies.get('TSHALLO3', 0) + saisies.get('ALLO3', 0) + saisies.get('DETS3', 0) + saisies.get('FRN3', 0) + saisies.get('PRBR3', 0) + saisies.get('PALI3', 0), saisies.get('TSHALLO4', 0) + saisies.get('ALLO4', 0) + saisies.get('DETS4', 0) + saisies.get('FRN4', 0) + saisies.get('PRBR4', 0) + saisies.get('PALI4', 0)]) + sum([saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('PEBFV', 0) + saisies.get('CARPEV', 0) + saisies.get('PENSALV', 0), saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('PEBFC', 0) + saisies.get('CARPEC', 0) + saisies.get('PENSALC', 0)]) + sum([saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0) + saisies.get('PEBF1', 0) + saisies.get('CARPEP1', 0) + saisies.get('PENSALP1', 0) + saisies.get('RVB1', 0), saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0) + saisies.get('PEBF2', 0) + saisies.get('CARPEP2', 0) + saisies.get('PENSALP2', 0) + saisies.get('RVB2', 0), saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0) + saisies.get('PEBF3', 0) + saisies.get('CARPEP3', 0) + saisies.get('PENSALP3', 0) + saisies.get('RVB3', 0), saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0) + saisies.get('PEBF4', 0) + saisies.get('CARPEP4', 0) + saisies.get('PENSALP4', 0) + saisies.get('RVB4', 0)]) + sum([saisies.get('GLD1V', 0) + saisies.get('GLD1C', 0), saisies.get('GLD2V', 0) + saisies.get('GLD2C', 0), saisies.get('GLD3V', 0) + saisies.get('GLD3C', 0)]) + saisies.get('RENTAX', 0) + saisies.get('RENTAX5', 0) + saisies.get('RENTAX6', 0) + saisies.get('RENTAX7', 0) + saisies.get('BPCOSAV', 0) + saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATV', 0) + saisies.get('GLDGRATC', 0)
SOMMEA538CB = present(saisies.get('BAFORESTC', 0)) + present(saisies.get('BAFPVC', 0)) + present(saisies.get('BACREC', 0)) + present(_4BACREC) + present(saisies.get('BAHREC', 0)) + present(_4BAHREC) + present(saisies.get('MIBVENC', 0)) + present(saisies.get('MIBPRESC', 0)) + present(saisies.get('MIBPVC', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('LOCPROCGAC', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('LOCPROC', 0)) + present(saisies.get('MIBNPVENC', 0)) + present(saisies.get('MIBNPPRESC', 0)) + present(saisies.get('MIBNPPVC', 0)) + present(saisies.get('BICREC', 0)) + present(saisies.get('LOCNPCGAC', 0)) + present(saisies.get('LOCGITCC', 0)) + present(saisies.get('BICHREC', 0)) + present(saisies.get('LOCNPC', 0)) + present(saisies.get('LOCGITHCC', 0)) + present(saisies.get('BNCPROC', 0)) + present(saisies.get('BNCPROPVC', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BNHREC', 0)) + present(saisies.get('BNCNPC', 0)) + present(saisies.get('BNCNPPVC', 0)) + present(saisies.get('ANOVEP', 0)) + present(saisies.get('BNCAABC', 0)) + present(saisies.get('MIBMEUC', 0)) + present(saisies.get('MIBGITEC', 0)) + present(saisies.get('LOCGITC', 0)) + present(saisies.get('INVENTC', 0))
SOMMEA538CP = present(saisies.get('BAF1AC', 0)) + present(saisies.get('BA1AC', 0)) + present(saisies.get('MIB1AC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('MIBNP1AC', 0)) + present(saisies.get('BI2AC', 0)) + present(saisies.get('BNCPRO1AC', 0)) + present(saisies.get('BN1AC', 0)) + present(saisies.get('BNCNP1AC', 0)) + present(saisies.get('PVINCE', 0))
SOMMEA538PB = present(saisies.get('BAFORESTP', 0)) + present(saisies.get('BAFPVP', 0)) + present(saisies.get('BACREP', 0)) + present(_4BACREP) + present(saisies.get('BAHREP', 0)) + present(_4BAHREP) + present(saisies.get('MIBVENP', 0)) + present(saisies.get('MIBPRESP', 0)) + present(saisies.get('MIBPVP', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('LOCPROCGAP', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('LOCPROP', 0)) + present(saisies.get('MIBNPVENP', 0)) + present(saisies.get('MIBNPPRESP', 0)) + present(saisies.get('MIBNPPVP', 0)) + present(saisies.get('BICREP', 0)) + present(saisies.get('LOCNPCGAPAC', 0)) + present(saisies.get('LOCGITCP', 0)) + present(saisies.get('BICHREP', 0)) + present(saisies.get('LOCNPPAC', 0)) + present(saisies.get('LOCGITHCP', 0)) + present(saisies.get('BNCPROP', 0)) + present(saisies.get('BNCPROPVP', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BNHREP', 0)) + present(saisies.get('BNCNPP', 0)) + present(saisies.get('BNCNPPVP', 0)) + present(saisies.get('ANOPEP', 0)) + present(saisies.get('BNCAABP', 0)) + present(saisies.get('MIBMEUP', 0)) + present(saisies.get('MIBGITEP', 0)) + present(saisies.get('LOCGITP', 0)) + present(saisies.get('INVENTP', 0))
SOMMEA538PP = present(saisies.get('BAF1AP', 0)) + present(saisies.get('BA1AP', 0)) + present(saisies.get('MIB1AP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('MIBNP1AP', 0)) + present(saisies.get('BI2AP', 0)) + present(saisies.get('BNCPRO1AP', 0)) + present(saisies.get('BN1AP', 0)) + present(saisies.get('BNCNP1AP', 0)) + present(saisies.get('PVINPE', 0))
SOMMEA538VB = present(saisies.get('BAFORESTV', 0)) + present(saisies.get('BAFPVV', 0)) + present(saisies.get('BACREV', 0)) + present(_4BACREV) + present(saisies.get('BAHREV', 0)) + present(_4BAHREV) + present(saisies.get('MIBVENV', 0)) + present(saisies.get('MIBPRESV', 0)) + present(saisies.get('MIBPVV', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('LOCPROCGAV', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('LOCPROV', 0)) + present(saisies.get('MIBNPVENV', 0)) + present(saisies.get('MIBNPPRESV', 0)) + present(saisies.get('MIBNPPVV', 0)) + present(saisies.get('BICREV', 0)) + present(saisies.get('LOCNPCGAV', 0)) + present(saisies.get('LOCGITCV', 0)) + present(saisies.get('BICHREV', 0)) + present(saisies.get('LOCNPV', 0)) + present(saisies.get('LOCGITHCV', 0)) + present(saisies.get('BNCPROV', 0)) + present(saisies.get('BNCPROPVV', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BNHREV', 0)) + present(saisies.get('BNCNPV', 0)) + present(saisies.get('BNCNPPVV', 0)) + present(saisies.get('ANOCEP', 0)) + present(saisies.get('BNCAABV', 0)) + present(saisies.get('MIBMEUV', 0)) + present(saisies.get('MIBGITEV', 0)) + present(saisies.get('LOCGITV', 0)) + present(saisies.get('INVENTV', 0))
SOMMEA538VP = present(saisies.get('BAF1AV', 0)) + present(saisies.get('BA1AV', 0)) + present(saisies.get('MIB1AV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('MIBNP1AV', 0)) + present(saisies.get('BI2AV', 0)) + present(saisies.get('BNCPRO1AV', 0)) + present(saisies.get('BN1AV', 0)) + present(saisies.get('BNCNP1AV', 0)) + present(saisies.get('PVINVE', 0))
SOMMEA700 = present(saisies.get('BAEXV', 0)) + present(saisies.get('BACREV', 0)) + present(_4BACREV) + present(saisies.get('BA1AV', 0)) + present(saisies.get('BACDEV', 0)) + present(saisies.get('BAEXC', 0)) + present(saisies.get('BACREC', 0)) + present(_4BACREC) + present(saisies.get('BA1AC', 0)) + present(saisies.get('BACDEC', 0)) + present(saisies.get('BAEXP', 0)) + present(saisies.get('BACREP', 0)) + present(_4BACREP) + present(saisies.get('BA1AP', 0)) + present(saisies.get('BACDEP', 0)) + present(saisies.get('BAPERPV', 0)) + present(saisies.get('BAPERPC', 0)) + present(saisies.get('BAPERPP', 0)) + present(saisies.get('BANOCGAV', 0)) + present(saisies.get('BANOCGAC', 0)) + present(saisies.get('BANOCGAP', 0)) + present(saisies.get('BAHEXV', 0)) + present(saisies.get('BAHREV', 0)) + present(_4BAHREV) + present(saisies.get('BAHEXC', 0)) + present(saisies.get('BAHREC', 0)) + present(_4BAHREC) + present(saisies.get('BAHEXP', 0)) + present(saisies.get('BAHREP', 0)) + present(_4BAHREP) + present(saisies.get('BICEXV', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('LOCPROCGAV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('LOCDEFPROCGAV', 0)) + present(saisies.get('BICEXC', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('LOCPROCGAC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('LOCDEFPROCGAC', 0)) + present(saisies.get('BICEXP', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('LOCPROCGAP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('LOCDEFPROCGAP', 0)) + present(saisies.get('BICNPEXV', 0)) + present(saisies.get('BICREV', 0)) + present(saisies.get('LOCNPCGAV', 0)) + present(saisies.get('LOCGITCV', 0)) + present(saisies.get('BI2AV', 0)) + present(saisies.get('BICDEV', 0)) + present(saisies.get('LOCDEFNPCGAV', 0)) + present(saisies.get('BICNPEXC', 0)) + present(saisies.get('BICREC', 0)) + present(saisies.get('LOCNPCGAC', 0)) + present(saisies.get('LOCGITCC', 0)) + present(saisies.get('BI2AC', 0)) + present(saisies.get('BICDEC', 0)) + present(saisies.get('LOCDEFNPCGAC', 0)) + present(saisies.get('BICNPEXP', 0)) + present(saisies.get('BICREP', 0)) + present(saisies.get('LOCNPCGAPAC', 0)) + present(saisies.get('LOCGITCP', 0)) + present(saisies.get('BI2AP', 0)) + present(saisies.get('BICDEP', 0)) + present(saisies.get('LOCDEFNPCGAPAC', 0)) + present(saisies.get('BNCEXV', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BN1AV', 0)) + present(saisies.get('BNCDEV', 0)) + present(saisies.get('BNCEXC', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BN1AC', 0)) + present(saisies.get('BNCDEC', 0)) + present(saisies.get('BNCEXP', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BN1AP', 0)) + present(saisies.get('BNCDEP', 0)) + present(saisies.get('BNHEXV', 0)) + present(saisies.get('BNHREV', 0)) + present(saisies.get('BNHEXC', 0)) + present(saisies.get('BNHREC', 0)) + present(saisies.get('BNHEXP', 0)) + present(saisies.get('BNHREP', 0)) + present(saisies.get('XHONOAAV', 0)) + present(saisies.get('XHONOAAC', 0)) + present(saisies.get('XHONOAAP', 0)) + present(saisies.get('BNCNPREXAAV', 0)) + present(saisies.get('BNCNPREXV', 0)) + present(saisies.get('BNCNPREXAAC', 0)) + present(saisies.get('BNCNPREXC', 0)) + present(saisies.get('BNCNPREXAAP', 0)) + present(saisies.get('BNCNPREXP', 0)) + present(saisies.get('BNCAABV', 0)) + present(saisies.get('BNCAADV', 0)) + present(saisies.get('ANOCEP', 0)) + present(saisies.get('PVINVE', 0)) + present(saisies.get('INVENTV', 0)) + present(saisies.get('BNCAABC', 0)) + present(saisies.get('BNCAADC', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('ANOVEP', 0)) + present(saisies.get('PVINCE', 0)) + present(saisies.get('INVENTC', 0)) + present(saisies.get('BNCAABP', 0)) + present(saisies.get('BNCAADP', 0)) + present(saisies.get('DNOCEPC', 0)) + present(saisies.get('ANOPEP', 0)) + present(saisies.get('PVINPE', 0)) + present(saisies.get('INVENTP', 0)) + present(saisies.get('DNOCEPP', 0))
SOMMEA709 = is_positive(saisies.get('RINVLOCINV', 0)) + is_positive(saisies.get('RINVLOCREA', 0)) + is_positive(saisies.get('REPINVTOU', 0)) + is_positive(saisies.get('INVLOGREHA', 0)) + is_positive(saisies.get('INVLOCXN', 0)) + is_positive(saisies.get('INVLOCXV', 0)) + is_positive(saisies.get('COD7UY', 0)) + is_positive(saisies.get('COD7UZ', 0)) + 0
SOMMEA71701 = is_positive(saisies.get('CELLIERJA', 0)) + is_positive(saisies.get('CELLIERJB', 0)) + is_positive(saisies.get('CELLIERJD', 0)) + is_positive(saisies.get('CELLIERJE', 0)) + is_positive(saisies.get('CELLIERJF', 0)) + is_positive(saisies.get('CELLIERJG', 0)) + is_positive(saisies.get('CELLIERJH', 0)) + is_positive(saisies.get('CELLIERJJ', 0)) + is_positive(saisies.get('CELLIERJK', 0)) + is_positive(saisies.get('CELLIERJL', 0)) + is_positive(saisies.get('CELLIERJM', 0)) + is_positive(saisies.get('CELLIERJN', 0)) + is_positive(saisies.get('CELLIERJO', 0)) + is_positive(saisies.get('CELLIERJP', 0)) + is_positive(saisies.get('CELLIERJQ', 0)) + is_positive(saisies.get('CELLIERJR', 0)) + 0
SOMMEA71702 = is_positive(saisies.get('CELLIERNA', 0)) + is_positive(saisies.get('CELLIERNB', 0)) + is_positive(saisies.get('CELLIERNC', 0)) + is_positive(saisies.get('CELLIERND', 0)) + is_positive(saisies.get('CELLIERNE', 0)) + is_positive(saisies.get('CELLIERNF', 0)) + is_positive(saisies.get('CELLIERNG', 0)) + is_positive(saisies.get('CELLIERNH', 0)) + is_positive(saisies.get('CELLIERNI', 0)) + is_positive(saisies.get('CELLIERNJ', 0)) + is_positive(saisies.get('CELLIERNK', 0)) + is_positive(saisies.get('CELLIERNL', 0)) + is_positive(saisies.get('CELLIERNM', 0)) + is_positive(saisies.get('CELLIERNN', 0)) + is_positive(saisies.get('CELLIERNO', 0)) + is_positive(saisies.get('CELLIERNP', 0)) + is_positive(saisies.get('CELLIERNQ', 0)) + is_positive(saisies.get('CELLIERNR', 0)) + is_positive(saisies.get('CELLIERNS', 0)) + is_positive(saisies.get('CELLIERNT', 0)) + 0
SOMMEA718 = present(saisies.get('BAFV', 0)) + 1 - is_zero(saisies.get('V_FORVA', 0) + 0) + present(saisies.get('BAFORESTV', 0)) + present(saisies.get('BAFPVV', 0)) + present(saisies.get('BAF1AV', 0)) + present(saisies.get('BAFC', 0)) + 1 - is_zero(saisies.get('V_FORCA', 0) + 0) + present(saisies.get('BAFORESTC', 0)) + present(saisies.get('BAFPVC', 0)) + present(saisies.get('BAF1AC', 0)) + present(saisies.get('BAFP', 0)) + 1 - is_zero(saisies.get('V_FORPA', 0) + 0) + present(saisies.get('BAFORESTP', 0)) + present(saisies.get('BAFPVP', 0)) + present(saisies.get('BAF1AP', 0)) + present(saisies.get('BACREV', 0)) + present(_4BACREV) + present(saisies.get('BA1AV', 0)) + present(saisies.get('BACDEV', 0)) + present(saisies.get('BACREC', 0)) + present(_4BACREC) + present(saisies.get('BA1AC', 0)) + present(saisies.get('BACDEC', 0)) + present(saisies.get('BACREP', 0)) + present(_4BACREP) + present(saisies.get('BA1AP', 0)) + present(saisies.get('BACDEP', 0)) + present(saisies.get('BAHREV', 0)) + present(_4BAHREV) + present(saisies.get('BAHDEV', 0)) + present(saisies.get('BAHREC', 0)) + present(_4BAHREC) + present(saisies.get('BAHDEC', 0)) + present(saisies.get('BAHREP', 0)) + present(_4BAHREP) + present(saisies.get('BAHDEP', 0)) + present(saisies.get('MIBVENV', 0)) + present(saisies.get('MIBPRESV', 0)) + present(saisies.get('MIBPVV', 0)) + present(saisies.get('MIB1AV', 0)) + present(saisies.get('MIBDEV', 0)) + present(saisies.get('BICPMVCTV', 0)) + present(saisies.get('MIBVENC', 0)) + present(saisies.get('MIBPRESC', 0)) + present(saisies.get('MIBPVC', 0)) + present(saisies.get('MIB1AC', 0)) + present(saisies.get('MIBDEC', 0)) + present(saisies.get('BICPMVCTC', 0)) + present(saisies.get('MIBVENP', 0)) + present(saisies.get('MIBPRESP', 0)) + present(saisies.get('MIBPVP', 0)) + present(saisies.get('MIB1AP', 0)) + present(saisies.get('MIBDEP', 0)) + present(saisies.get('BICPMVCTP', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('LOCPROCGAV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('LOCDEFPROCGAV', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('LOCPROCGAC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('LOCDEFPROCGAC', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('LOCPROCGAP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('LOCDEFPROCGAP', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('LOCPROV', 0)) + present(saisies.get('BIHDNV', 0)) + present(saisies.get('LOCDEFPROV', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('LOCPROC', 0)) + present(saisies.get('BIHDNC', 0)) + present(saisies.get('LOCDEFPROC', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('LOCPROP', 0)) + present(saisies.get('BIHDNP', 0)) + present(saisies.get('LOCDEFPROP', 0)) + present(saisies.get('MIBMEUV', 0)) + present(saisies.get('MIBGITEV', 0)) + present(saisies.get('LOCGITV', 0)) + present(saisies.get('MIBNPVENV', 0)) + present(saisies.get('MIBNPPRESV', 0)) + present(saisies.get('MIBNPPVV', 0)) + present(saisies.get('MIBNP1AV', 0)) + present(saisies.get('MIBNPDEV', 0)) + present(saisies.get('MIBMEUC', 0)) + present(saisies.get('MIBGITEC', 0)) + present(saisies.get('LOCGITC', 0)) + present(saisies.get('MIBNPVENC', 0)) + present(saisies.get('MIBNPPRESC', 0)) + present(saisies.get('MIBNPPVC', 0)) + present(saisies.get('MIBNP1AC', 0)) + present(saisies.get('MIBNPDEC', 0)) + present(saisies.get('MIBMEUP', 0)) + present(saisies.get('MIBGITEP', 0)) + present(saisies.get('LOCGITP', 0)) + present(saisies.get('MIBNPVENP', 0)) + present(saisies.get('MIBNPPRESP', 0)) + present(saisies.get('MIBNPPVP', 0)) + present(saisies.get('MIBNP1AP', 0)) + present(saisies.get('MIBNPDEP', 0)) + present(saisies.get('MIBNPDCT', 0)) + present(saisies.get('BICREV', 0)) + present(saisies.get('LOCNPCGAV', 0)) + present(saisies.get('LOCGITCV', 0)) + present(saisies.get('BI2AV', 0)) + present(saisies.get('BICDEV', 0)) + present(saisies.get('LOCDEFNPCGAV', 0)) + present(saisies.get('BICREC', 0)) + present(saisies.get('LOCNPCGAC', 0)) + present(saisies.get('LOCGITCC', 0)) + present(saisies.get('BI2AC', 0)) + present(saisies.get('BICDEC', 0)) + present(saisies.get('LOCDEFNPCGAC', 0)) + present(saisies.get('BICREP', 0)) + present(saisies.get('LOCNPCGAPAC', 0)) + present(saisies.get('LOCGITCP', 0)) + present(saisies.get('BI2AP', 0)) + present(saisies.get('BICDEP', 0)) + present(saisies.get('LOCDEFNPCGAPAC', 0)) + present(saisies.get('BICHREV', 0)) + present(saisies.get('LOCNPV', 0)) + present(saisies.get('LOCGITHCV', 0)) + present(saisies.get('BICHDEV', 0)) + present(saisies.get('LOCDEFNPV', 0)) + present(saisies.get('BICHREC', 0)) + present(saisies.get('LOCNPC', 0)) + present(saisies.get('LOCGITHCC', 0)) + present(saisies.get('BICHDEC', 0)) + present(saisies.get('LOCDEFNPC', 0)) + present(saisies.get('BICHREP', 0)) + present(saisies.get('LOCNPPAC', 0)) + present(saisies.get('LOCGITHCP', 0)) + present(saisies.get('BICHDEP', 0)) + present(saisies.get('LOCDEFNPPAC', 0)) + present(saisies.get('BNCPROV', 0)) + present(saisies.get('BNCPROPVV', 0)) + present(saisies.get('BNCPRO1AV', 0)) + present(saisies.get('BNCPRODEV', 0)) + present(saisies.get('BNCPMVCTV', 0)) + present(saisies.get('BNCPROC', 0)) + present(saisies.get('BNCPROPVC', 0)) + present(saisies.get('BNCPRO1AC', 0)) + present(saisies.get('BNCPRODEC', 0)) + present(saisies.get('BNCPMVCTC', 0)) + present(saisies.get('BNCPROP', 0)) + present(saisies.get('BNCPROPVP', 0)) + present(saisies.get('BNCPRO1AP', 0)) + present(saisies.get('BNCPRODEP', 0)) + present(saisies.get('BNCPMVCTP', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BN1AV', 0)) + present(saisies.get('BNCDEV', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BN1AC', 0)) + present(saisies.get('BNCDEC', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BN1AP', 0)) + present(saisies.get('BNCDEP', 0)) + present(saisies.get('BNHREV', 0)) + present(saisies.get('BNHDEV', 0)) + present(saisies.get('BNHREC', 0)) + present(saisies.get('BNHDEC', 0)) + present(saisies.get('BNHREP', 0)) + present(saisies.get('BNHDEP', 0)) + present(saisies.get('BNCNPV', 0)) + present(saisies.get('BNCNPPVV', 0)) + present(saisies.get('BNCNP1AV', 0)) + present(saisies.get('BNCNPDEV', 0)) + present(saisies.get('BNCNPC', 0)) + present(saisies.get('BNCNPPVC', 0)) + present(saisies.get('BNCNP1AC', 0)) + present(saisies.get('BNCNPDEC', 0)) + present(saisies.get('BNCNPP', 0)) + present(saisies.get('BNCNPPVP', 0)) + present(saisies.get('BNCNP1AP', 0)) + present(saisies.get('BNCNPDEP', 0)) + present(saisies.get('BNCNPDCT', 0)) + present(saisies.get('BNCAABV', 0)) + present(saisies.get('ANOCEP', 0)) + present(saisies.get('PVINVE', 0)) + present(saisies.get('INVENTV', 0)) + present(saisies.get('BNCAADV', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('BNCAABC', 0)) + present(saisies.get('ANOVEP', 0)) + present(saisies.get('PVINCE', 0)) + present(saisies.get('INVENTC', 0)) + present(saisies.get('BNCAADC', 0)) + present(saisies.get('DNOCEPC', 0)) + present(saisies.get('BNCAABP', 0)) + present(saisies.get('ANOPEP', 0)) + present(saisies.get('PVINPE', 0)) + present(saisies.get('INVENTP', 0)) + present(saisies.get('BNCAADP', 0)) + present(saisies.get('DNOCEPP', 0)) + 0
SOMMEA719 = present(saisies.get('BAEXV', 0)) + present(saisies.get('BACREV', 0)) + present(_4BACREV) + present(saisies.get('BA1AV', 0)) + present(saisies.get('BACDEV', 0)) + present(saisies.get('BAEXC', 0)) + present(saisies.get('BACREC', 0)) + present(_4BACREC) + present(saisies.get('BA1AC', 0)) + present(saisies.get('BACDEC', 0)) + present(saisies.get('BAEXP', 0)) + present(saisies.get('BACREP', 0)) + present(_4BACREP) + present(saisies.get('BA1AP', 0)) + present(saisies.get('BACDEP', 0)) + present(saisies.get('BAHEXV', 0)) + present(saisies.get('BAHREV', 0)) + present(_4BAHREV) + present(saisies.get('BAHDEV', 0)) + present(saisies.get('BAHEXC', 0)) + present(saisies.get('BAHREC', 0)) + present(_4BAHREC) + present(saisies.get('BAHDEC', 0)) + present(saisies.get('BAHEXP', 0)) + present(saisies.get('BAHREP', 0)) + present(_4BAHREP) + present(saisies.get('BAHDEP', 0)) + present(saisies.get('BICEXV', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('LOCPROCGAV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('LOCDEFPROCGAV', 0)) + present(saisies.get('BICEXC', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('LOCPROCGAC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('LOCDEFPROCGAC', 0)) + present(saisies.get('BICEXP', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('LOCPROCGAP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('LOCDEFPROCGAP', 0)) + present(saisies.get('BIHEXV', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('LOCPROV', 0)) + present(saisies.get('BIHDNV', 0)) + present(saisies.get('LOCDEFPROV', 0)) + present(saisies.get('BIHEXC', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('LOCPROC', 0)) + present(saisies.get('BIHDNC', 0)) + present(saisies.get('LOCDEFPROC', 0)) + present(saisies.get('BIHEXP', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('LOCPROP', 0)) + present(saisies.get('BIHDNP', 0)) + present(saisies.get('LOCDEFPROP', 0)) + present(saisies.get('BICNPEXV', 0)) + present(saisies.get('BICREV', 0)) + present(saisies.get('LOCNPCGAV', 0)) + present(saisies.get('BI2AV', 0)) + present(saisies.get('BICDEV', 0)) + present(saisies.get('LOCDEFNPCGAV', 0)) + present(saisies.get('BICNPEXC', 0)) + present(saisies.get('BICREC', 0)) + present(saisies.get('LOCNPCGAC', 0)) + present(saisies.get('BI2AC', 0)) + present(saisies.get('BICDEC', 0)) + present(saisies.get('LOCDEFNPCGAC', 0)) + present(saisies.get('BICNPEXP', 0)) + present(saisies.get('BICREP', 0)) + present(saisies.get('LOCNPCGAPAC', 0)) + present(saisies.get('BI2AP', 0)) + present(saisies.get('BICDEP', 0)) + present(saisies.get('LOCDEFNPCGAPAC', 0)) + present(saisies.get('BICNPHEXV', 0)) + present(saisies.get('BICHREV', 0)) + present(saisies.get('LOCNPV', 0)) + present(saisies.get('BICHDEV', 0)) + present(saisies.get('LOCDEFNPV', 0)) + present(saisies.get('BICNPHEXC', 0)) + present(saisies.get('BICHREC', 0)) + present(saisies.get('LOCNPC', 0)) + present(saisies.get('BICHDEC', 0)) + present(saisies.get('LOCDEFNPC', 0)) + present(saisies.get('BICNPHEXP', 0)) + present(saisies.get('BICHREP', 0)) + present(saisies.get('LOCNPPAC', 0)) + present(saisies.get('BICHDEP', 0)) + present(saisies.get('LOCDEFNPPAC', 0)) + present(saisies.get('BNCEXV', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BN1AV', 0)) + present(saisies.get('BNCDEV', 0)) + present(saisies.get('BNCEXC', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BN1AC', 0)) + present(saisies.get('BNCDEC', 0)) + present(saisies.get('BNCEXP', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BN1AP', 0)) + present(saisies.get('BNCDEP', 0)) + present(saisies.get('BNHEXV', 0)) + present(saisies.get('BNHREV', 0)) + present(saisies.get('BNHDEV', 0)) + present(saisies.get('BNHEXC', 0)) + present(saisies.get('BNHREC', 0)) + present(saisies.get('BNHDEC', 0)) + present(saisies.get('BNHEXP', 0)) + present(saisies.get('BNHREP', 0)) + present(saisies.get('BNHDEP', 0)) + present(saisies.get('XHONOAAV', 0)) + present(saisies.get('XHONOV', 0)) + present(saisies.get('XHONOAAC', 0)) + present(saisies.get('XHONOC', 0)) + present(saisies.get('XHONOAAP', 0)) + present(saisies.get('XHONOP', 0)) + present(saisies.get('BNCNPREXAAV', 0)) + present(saisies.get('BNCAABV', 0)) + present(saisies.get('BNCAADV', 0)) + present(saisies.get('BNCNPREXV', 0)) + present(saisies.get('ANOCEP', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('PVINVE', 0)) + present(saisies.get('INVENTV', 0)) + present(saisies.get('BNCNPREXAAC', 0)) + present(saisies.get('BNCAABC', 0)) + present(saisies.get('BNCAADC', 0)) + present(saisies.get('BNCNPREXC', 0)) + present(saisies.get('ANOVEP', 0)) + present(saisies.get('DNOCEPC', 0)) + present(saisies.get('PVINCE', 0)) + present(saisies.get('INVENTC', 0)) + present(saisies.get('BNCNPREXAAP', 0)) + present(saisies.get('BNCAABP', 0)) + present(saisies.get('BNCAADP', 0)) + present(saisies.get('BNCNPREXP', 0)) + present(saisies.get('ANOPEP', 0)) + present(saisies.get('DNOCEPP', 0)) + present(saisies.get('PVINPE', 0)) + present(saisies.get('INVENTP', 0)) + 0
SOMMEA739 = is_positive(saisies.get('INVSOCNRET', 0)) + is_positive(saisies.get('INVOMSOCKH', 0)) + is_positive(saisies.get('INVOMSOCKI', 0)) + is_positive(saisies.get('INVSOC2010', 0)) + is_positive(saisies.get('INVOMSOCQU', 0)) + is_positive(saisies.get('INVLOGSOC', 0)) + is_positive(saisies.get('INVOMSOCQJ', 0)) + is_positive(saisies.get('INVOMSOCQS', 0)) + is_positive(saisies.get('INVOMSOCQW', 0)) + is_positive(saisies.get('INVOMSOCQX', 0)) + is_positive(saisies.get('NRETROC40', 0)) + is_positive(saisies.get('NRETROC50', 0)) + is_positive(saisies.get('RETROCOMMB', 0)) + is_positive(saisies.get('RETROCOMMC', 0)) + is_positive(saisies.get('RETROCOMLH', 0)) + is_positive(saisies.get('RETROCOMLI', 0)) + is_positive(saisies.get('INVRETRO2', 0)) + is_positive(saisies.get('INVDOMRET60', 0)) + is_positive(saisies.get('INVRETRO1', 0)) + is_positive(saisies.get('INVDOMRET50', 0)) + is_positive(saisies.get('INVOMRETPO', 0)) + is_positive(saisies.get('INVOMRETPT', 0)) + is_positive(saisies.get('INVOMRETPN', 0)) + is_positive(saisies.get('INVOMRETPP', 0)) + is_positive(saisies.get('INVOMRETPS', 0)) + is_positive(saisies.get('INVOMRETPU', 0)) + is_positive(saisies.get('INVENDI', 0)) + is_positive(saisies.get('INVOMENTKT', 0)) + is_positive(saisies.get('INVOMENTKU', 0)) + is_positive(saisies.get('INVIMP', 0)) + is_positive(saisies.get('INVDIR2009', 0)) + is_positive(saisies.get('INVOMRETPR', 0)) + is_positive(saisies.get('INVOMRETPW', 0)) + is_positive(saisies.get('INVLGAUTRE', 0)) + is_positive(saisies.get('INVLGDEB2010', 0)) + is_positive(saisies.get('INVLOG2009', 0)) + is_positive(saisies.get('INVOMLOGOB', 0)) + is_positive(saisies.get('INVOMLOGOC', 0)) + is_positive(saisies.get('INVOMLOGOM', 0)) + is_positive(saisies.get('INVOMLOGON', 0)) + is_positive(saisies.get('INVOMRETPB', 0)) + is_positive(saisies.get('INVOMRETPF', 0)) + is_positive(saisies.get('INVOMRETPJ', 0)) + is_positive(saisies.get('INVOMRETPA', 0)) + is_positive(saisies.get('INVOMRETPE', 0)) + is_positive(saisies.get('INVOMRETPI', 0)) + is_positive(saisies.get('INVOMRETPY', 0)) + is_positive(saisies.get('INVOMRETPX', 0)) + is_positive(saisies.get('INVOMENTRG', 0)) + is_positive(saisies.get('INVOMRETPD', 0)) + is_positive(saisies.get('INVOMRETPH', 0)) + is_positive(saisies.get('INVOMRETPL', 0)) + is_positive(saisies.get('INVOMENTRI', 0)) + is_positive(saisies.get('INVOMLOGOI', 0)) + is_positive(saisies.get('INVOMLOGOJ', 0)) + is_positive(saisies.get('INVOMLOGOK', 0)) + is_positive(saisies.get('INVOMLOGOP', 0)) + is_positive(saisies.get('INVOMLOGOQ', 0)) + is_positive(saisies.get('INVOMLOGOR', 0)) + is_positive(saisies.get('INVOMENTRL', 0)) + is_positive(saisies.get('INVOMENTRQ', 0)) + is_positive(saisies.get('INVOMENTRV', 0)) + is_positive(saisies.get('INVOMENTNV', 0)) + is_positive(saisies.get('INVOMENTRK', 0)) + is_positive(saisies.get('INVOMENTRP', 0)) + is_positive(saisies.get('INVOMENTRU', 0)) + is_positive(saisies.get('INVOMENTNU', 0)) + is_positive(saisies.get('INVOMENTRM', 0)) + is_positive(saisies.get('INVOMENTRR', 0)) + is_positive(saisies.get('INVOMENTRW', 0)) + is_positive(saisies.get('INVOMENTNW', 0)) + is_positive(saisies.get('INVOMENTRO', 0)) + is_positive(saisies.get('INVOMENTRT', 0)) + is_positive(saisies.get('INVOMENTRY', 0)) + is_positive(saisies.get('INVOMENTNY', 0)) + is_positive(saisies.get('INVOMLOGOT', 0)) + is_positive(saisies.get('INVOMLOGOU', 0)) + is_positive(saisies.get('INVOMLOGOV', 0)) + is_positive(saisies.get('INVOMLOGOW', 0)) + is_positive(saisies.get('CODHOD', 0)) + is_positive(saisies.get('CODHOE', 0)) + is_positive(saisies.get('CODHOF', 0)) + is_positive(saisies.get('CODHOG', 0)) + is_positive(saisies.get('CODHOX', 0)) + is_positive(saisies.get('CODHOY', 0)) + is_positive(saisies.get('CODHOZ', 0)) + is_positive(saisies.get('CODHRA', 0)) + is_positive(saisies.get('CODHRB', 0)) + is_positive(saisies.get('CODHRC', 0)) + is_positive(saisies.get('CODHRD', 0)) + is_positive(saisies.get('CODHSA', 0)) + is_positive(saisies.get('CODHSB', 0)) + is_positive(saisies.get('CODHSC', 0)) + is_positive(saisies.get('CODHSE', 0)) + is_positive(saisies.get('CODHSF', 0)) + is_positive(saisies.get('CODHSG', 0)) + is_positive(saisies.get('CODHSH', 0)) + is_positive(saisies.get('CODHSJ', 0)) + is_positive(saisies.get('CODHSK', 0)) + is_positive(saisies.get('CODHSL', 0)) + is_positive(saisies.get('CODHSM', 0)) + is_positive(saisies.get('CODHSO', 0)) + is_positive(saisies.get('CODHSP', 0)) + is_positive(saisies.get('CODHSQ', 0)) + is_positive(saisies.get('CODHSR', 0)) + is_positive(saisies.get('CODHST', 0)) + is_positive(saisies.get('CODHSU', 0)) + is_positive(saisies.get('CODHSV', 0)) + is_positive(saisies.get('CODHSW', 0)) + is_positive(saisies.get('CODHSY', 0)) + is_positive(saisies.get('CODHSZ', 0)) + is_positive(saisies.get('CODHTA', 0)) + is_positive(saisies.get('CODHTB', 0)) + is_positive(saisies.get('CODHTD', 0)) + is_positive(saisies.get('CODHAA', 0)) + is_positive(saisies.get('CODHAB', 0)) + is_positive(saisies.get('CODHAC', 0)) + is_positive(saisies.get('CODHAE', 0)) + is_positive(saisies.get('CODHAF', 0)) + is_positive(saisies.get('CODHAG', 0)) + is_positive(saisies.get('CODHAH', 0)) + is_positive(saisies.get('CODHAJ', 0)) + is_positive(saisies.get('CODHAK', 0)) + is_positive(saisies.get('CODHAL', 0)) + is_positive(saisies.get('CODHAM', 0)) + is_positive(saisies.get('CODHAO', 0)) + is_positive(saisies.get('CODHAP', 0)) + is_positive(saisies.get('CODHAQ', 0)) + is_positive(saisies.get('CODHAR', 0)) + is_positive(saisies.get('CODHAT', 0)) + is_positive(saisies.get('CODHAU', 0)) + is_positive(saisies.get('CODHAV', 0)) + is_positive(saisies.get('CODHAW', 0)) + is_positive(saisies.get('CODHAY', 0)) + is_positive(saisies.get('CODHBA', 0)) + is_positive(saisies.get('CODHBB', 0)) + is_positive(saisies.get('CODHBE', 0)) + is_positive(saisies.get('CODHBF', 0)) + is_positive(saisies.get('CODHBG', 0)) + is_positive(saisies.get('CODHUA', 0)) + is_positive(saisies.get('CODHUB', 0)) + is_positive(saisies.get('CODHUC', 0)) + is_positive(saisies.get('CODHUD', 0)) + is_positive(saisies.get('CODHUE', 0)) + is_positive(saisies.get('CODHUF', 0)) + is_positive(saisies.get('CODHUG', 0)) + is_positive(saisies.get('CODHXA', 0)) + is_positive(saisies.get('CODHXB', 0)) + is_positive(saisies.get('CODHXC', 0)) + is_positive(saisies.get('CODHXE', 0)) + 0
SOMMEA802 = present(saisies.get('AUTOBICVV', 0)) + present(saisies.get('AUTOBICPV', 0)) + present(saisies.get('AUTOBICVC', 0)) + present(saisies.get('AUTOBICPC', 0)) + present(saisies.get('AUTOBICVP', 0)) + present(saisies.get('AUTOBICPP', 0)) + present(saisies.get('AUTOBNCV', 0)) + present(saisies.get('AUTOBNCC', 0)) + present(saisies.get('AUTOBNCP', 0)) + present(saisies.get('XHONOAAV', 0)) + present(saisies.get('XHONOV', 0)) + present(saisies.get('XHONOAAC', 0)) + present(saisies.get('XHONOC', 0)) + present(saisies.get('XHONOAAP', 0)) + present(saisies.get('XHONOP', 0)) + present(saisies.get('SALEXTV', 0)) + present(saisies.get('SALEXTC', 0)) + present(saisies.get('SALEXT1', 0)) + present(saisies.get('SALEXT2', 0)) + present(saisies.get('SALEXT3', 0)) + present(saisies.get('SALEXT4', 0)) + present(saisies.get('COD1AE', 0)) + present(saisies.get('COD1BE', 0)) + present(saisies.get('COD1CE', 0)) + present(saisies.get('COD1DE', 0)) + present(saisies.get('COD1EE', 0)) + present(saisies.get('COD1FE', 0)) + present(saisies.get('COD1AH', 0)) + present(saisies.get('COD1BH', 0)) + present(saisies.get('COD1CH', 0)) + present(saisies.get('COD1DH', 0)) + present(saisies.get('COD1EH', 0)) + present(saisies.get('COD1FH', 0))
SOMMEA859 = present(saisies.get('BICEXV', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('BICEXC', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('BICEXP', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('BIHEXV', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('BIHDNV', 0)) + present(saisies.get('BIHEXC', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('BIHDNC', 0)) + present(saisies.get('BIHEXP', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('BIHDNP', 0))
SOMMEA860 = present(saisies.get('BICEXV', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('BICEXC', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('BICEXP', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('BIHEXV', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('BIHDNV', 0)) + present(saisies.get('BIHEXC', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('BIHDNC', 0)) + present(saisies.get('BIHEXP', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('BIHDNP', 0)) + present(saisies.get('BNCEXV', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BN1AV', 0)) + present(saisies.get('BNCDEV', 0)) + present(saisies.get('BNCEXC', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BN1AC', 0)) + present(saisies.get('BNCDEC', 0)) + present(saisies.get('BNCEXP', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BN1AP', 0)) + present(saisies.get('BNCDEP', 0)) + present(saisies.get('BNHEXV', 0)) + present(saisies.get('BNHREV', 0)) + present(saisies.get('BNHDEV', 0)) + present(saisies.get('BNHEXC', 0)) + present(saisies.get('BNHREC', 0)) + present(saisies.get('BNHDEC', 0)) + present(saisies.get('BNHEXP', 0)) + present(saisies.get('BNHREP', 0)) + present(saisies.get('BNHDEP', 0))
SOMMEA862 = present(saisies.get('MIBEXV', 0)) + present(saisies.get('MIBVENV', 0)) + present(saisies.get('MIBPRESV', 0)) + present(saisies.get('MIBPVV', 0)) + present(saisies.get('MIB1AV', 0)) + present(saisies.get('MIBDEV', 0)) + present(saisies.get('BICPMVCTV', 0)) + present(saisies.get('MIBEXC', 0)) + present(saisies.get('MIBVENC', 0)) + present(saisies.get('MIBPRESC', 0)) + present(saisies.get('MIBPVC', 0)) + present(saisies.get('MIB1AC', 0)) + present(saisies.get('MIBDEC', 0)) + present(saisies.get('BICPMVCTC', 0)) + present(saisies.get('MIBEXP', 0)) + present(saisies.get('MIBVENP', 0)) + present(saisies.get('MIBPRESP', 0)) + present(saisies.get('MIBPVP', 0)) + present(saisies.get('MIB1AP', 0)) + present(saisies.get('MIBDEP', 0)) + present(saisies.get('BICPMVCTP', 0)) + present(saisies.get('BICEXV', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('LOCPROCGAV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('LOCDEFPROCGAV', 0)) + present(saisies.get('BICEXC', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('LOCPROCGAC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('LOCDEFPROCGAC', 0)) + present(saisies.get('BICEXP', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('LOCPROCGAP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('LOCDEFPROCGAP', 0)) + present(saisies.get('BIHEXV', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('LOCPROV', 0)) + present(saisies.get('BIHDNV', 0)) + present(saisies.get('LOCDEFPROV', 0)) + present(saisies.get('BIHEXC', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('LOCPROC', 0)) + present(saisies.get('BIHDNC', 0)) + present(saisies.get('LOCDEFPROC', 0)) + present(saisies.get('BIHEXP', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('LOCPROP', 0)) + present(saisies.get('BIHDNP', 0)) + present(saisies.get('LOCDEFPROP', 0)) + present(saisies.get('MIBMEUV', 0)) + present(saisies.get('MIBGITEV', 0)) + present(saisies.get('LOCGITV', 0)) + present(saisies.get('MIBNPEXV', 0)) + present(saisies.get('MIBNPVENV', 0)) + present(saisies.get('MIBNPPRESV', 0)) + present(saisies.get('MIBNPPVV', 0)) + present(saisies.get('MIBNP1AV', 0)) + present(saisies.get('MIBNPDEV', 0)) + present(saisies.get('MIBMEUC', 0)) + present(saisies.get('MIBGITEC', 0)) + present(saisies.get('LOCGITC', 0)) + present(saisies.get('MIBNPEXC', 0)) + present(saisies.get('MIBNPVENC', 0)) + present(saisies.get('MIBNPPRESC', 0)) + present(saisies.get('MIBNPPVC', 0)) + present(saisies.get('MIBNP1AC', 0)) + present(saisies.get('MIBNPDEC', 0)) + present(saisies.get('MIBMEUP', 0)) + present(saisies.get('MIBGITEP', 0)) + present(saisies.get('LOCGITP', 0)) + present(saisies.get('MIBNPEXP', 0)) + present(saisies.get('MIBNPVENP', 0)) + present(saisies.get('MIBNPPRESP', 0)) + present(saisies.get('MIBNPPVP', 0)) + present(saisies.get('MIBNP1AP', 0)) + present(saisies.get('MIBNPDEP', 0)) + present(saisies.get('MIBNPDCT', 0)) + present(saisies.get('BICNPEXV', 0)) + present(saisies.get('BICREV', 0)) + present(saisies.get('LOCNPCGAV', 0)) + present(saisies.get('LOCGITCV', 0)) + present(saisies.get('BI2AV', 0)) + present(saisies.get('BICDEV', 0)) + present(saisies.get('LOCDEFNPCGAV', 0)) + present(saisies.get('BICNPEXC', 0)) + present(saisies.get('BICREC', 0)) + present(saisies.get('LOCNPCGAC', 0)) + present(saisies.get('LOCGITCC', 0)) + present(saisies.get('BI2AC', 0)) + present(saisies.get('BICDEC', 0)) + present(saisies.get('LOCDEFNPCGAC', 0)) + present(saisies.get('BICNPEXP', 0)) + present(saisies.get('BICREP', 0)) + present(saisies.get('LOCNPCGAPAC', 0)) + present(saisies.get('LOCGITCP', 0)) + present(saisies.get('BI2AP', 0)) + present(saisies.get('BICDEP', 0)) + present(saisies.get('LOCDEFNPCGAPAC', 0)) + present(saisies.get('BICNPHEXV', 0)) + present(saisies.get('BICHREV', 0)) + present(saisies.get('LOCNPV', 0)) + present(saisies.get('LOCGITHCV', 0)) + present(saisies.get('BICHDEV', 0)) + present(saisies.get('LOCDEFNPV', 0)) + present(saisies.get('BICNPHEXC', 0)) + present(saisies.get('BICHREC', 0)) + present(saisies.get('LOCNPC', 0)) + present(saisies.get('LOCGITHCC', 0)) + present(saisies.get('BICHDEC', 0)) + present(saisies.get('LOCDEFNPC', 0)) + present(saisies.get('BICNPHEXP', 0)) + present(saisies.get('BICHREP', 0)) + present(saisies.get('LOCNPPAC', 0)) + present(saisies.get('LOCGITHCP', 0)) + present(saisies.get('BICHDEP', 0)) + present(saisies.get('LOCDEFNPPAC', 0)) + present(saisies.get('BNCPROEXV', 0)) + present(saisies.get('BNCPROV', 0)) + present(saisies.get('BNCPROPVV', 0)) + present(saisies.get('BNCPRO1AV', 0)) + present(saisies.get('BNCPRODEV', 0)) + present(saisies.get('BNCPMVCTV', 0)) + present(saisies.get('BNCPROEXC', 0)) + present(saisies.get('BNCPROC', 0)) + present(saisies.get('BNCPROPVC', 0)) + present(saisies.get('BNCPRO1AC', 0)) + present(saisies.get('BNCPRODEC', 0)) + present(saisies.get('BNCPMVCTC', 0)) + present(saisies.get('BNCPROEXP', 0)) + present(saisies.get('BNCPROP', 0)) + present(saisies.get('BNCPROPVP', 0)) + present(saisies.get('BNCPRO1AP', 0)) + present(saisies.get('BNCPRODEP', 0)) + present(saisies.get('BNCPMVCTP', 0)) + present(saisies.get('BNCPMVCTV', 0)) + present(saisies.get('BNCEXV', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BN1AV', 0)) + present(saisies.get('BNCDEV', 0)) + present(saisies.get('BNCEXC', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BN1AC', 0)) + present(saisies.get('BNCDEC', 0)) + present(saisies.get('BNCEXP', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BN1AP', 0)) + present(saisies.get('BNCDEP', 0)) + present(saisies.get('BNHEXV', 0)) + present(saisies.get('BNHREV', 0)) + present(saisies.get('BNHDEV', 0)) + present(saisies.get('BNHEXC', 0)) + present(saisies.get('BNHREC', 0)) + present(saisies.get('BNHDEC', 0)) + present(saisies.get('BNHEXP', 0)) + present(saisies.get('BNHREP', 0)) + present(saisies.get('BNHDEP', 0)) + present(saisies.get('XSPENPV', 0)) + present(saisies.get('BNCNPV', 0)) + present(saisies.get('BNCNPPVV', 0)) + present(saisies.get('BNCNP1AV', 0)) + present(saisies.get('BNCNPDEV', 0)) + present(saisies.get('XSPENPC', 0)) + present(saisies.get('BNCNPC', 0)) + present(saisies.get('BNCNPPVC', 0)) + present(saisies.get('BNCNP1AC', 0)) + present(saisies.get('BNCNPDEC', 0)) + present(saisies.get('XSPENPP', 0)) + present(saisies.get('BNCNPP', 0)) + present(saisies.get('BNCNPPVP', 0)) + present(saisies.get('BNCNP1AP', 0)) + present(saisies.get('BNCNPDEP', 0)) + present(saisies.get('BNCNPDCT', 0)) + present(saisies.get('BNCNPREXAAV', 0)) + present(saisies.get('BNCAABV', 0)) + present(saisies.get('BNCAADV', 0)) + present(saisies.get('BNCNPREXV', 0)) + present(saisies.get('ANOCEP', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('PVINVE', 0)) + present(saisies.get('INVENTV', 0)) + present(saisies.get('BNCNPREXAAC', 0)) + present(saisies.get('BNCAABC', 0)) + present(saisies.get('BNCAADC', 0)) + present(saisies.get('BNCNPREXC', 0)) + present(saisies.get('ANOVEP', 0)) + present(saisies.get('DNOCEPC', 0)) + present(saisies.get('PVINCE', 0)) + present(saisies.get('INVENTC', 0)) + present(saisies.get('BNCNPREXAAP', 0)) + present(saisies.get('BNCAABP', 0)) + present(saisies.get('BNCAADP', 0)) + present(saisies.get('BNCNPREXP', 0)) + present(saisies.get('ANOPEP', 0)) + present(saisies.get('DNOCEPP', 0)) + present(saisies.get('PVINPE', 0)) + present(saisies.get('INVENTP', 0))
SOMMEA874 = sum([present(saisies.get('TSHALLO1', 0)) + present(saisies.get('ALLO1', 0)) + present(saisies.get('PRBR1', 0)) + present(saisies.get('PALI1', 0)) + present(saisies.get('PENIN1', 0)), present(saisies.get('TSHALLO2', 0)) + present(saisies.get('ALLO2', 0)) + present(saisies.get('PRBR2', 0)) + present(saisies.get('PALI2', 0)) + present(saisies.get('PENIN2', 0)), present(saisies.get('TSHALLO3', 0)) + present(saisies.get('ALLO3', 0)) + present(saisies.get('PRBR3', 0)) + present(saisies.get('PALI3', 0)) + present(saisies.get('PENIN3', 0)), present(saisies.get('TSHALLO4', 0)) + present(saisies.get('ALLO4', 0)) + present(saisies.get('PRBR4', 0)) + present(saisies.get('PALI4', 0)) + present(saisies.get('PENIN4', 0)), present(saisies.get('TSHALLOV', 0)) + present(saisies.get('ALLOV', 0)) + present(saisies.get('PRBRV', 0)) + present(saisies.get('PALIV', 0)) + present(saisies.get('PENINV', 0)), present(saisies.get('TSHALLOC', 0)) + present(saisies.get('ALLOC', 0)) + present(saisies.get('PRBRC', 0)) + present(saisies.get('PALIC', 0)) + present(saisies.get('PENINC', 0))]) + present(saisies.get('CARTSV', 0)) + present(saisies.get('CARTSC', 0)) + present(saisies.get('CARTSP1', 0)) + present(saisies.get('CARTSP2', 0)) + present(saisies.get('CARTSP3', 0)) + present(saisies.get('CARTSP4', 0)) + present(saisies.get('CARTSNBAV', 0)) + present(saisies.get('CARTSNBAC', 0)) + present(saisies.get('CARTSNBAP1', 0)) + present(saisies.get('CARTSNBAP2', 0)) + present(saisies.get('CARTSNBAP3', 0)) + present(saisies.get('CARTSNBAP4', 0)) + present(saisies.get('REMPLAV', 0)) + present(saisies.get('REMPLAC', 0)) + present(saisies.get('REMPLAP1', 0)) + present(saisies.get('REMPLAP2', 0)) + present(saisies.get('REMPLAP3', 0)) + present(saisies.get('REMPLAP4', 0)) + present(saisies.get('REMPLANBV', 0)) + present(saisies.get('REMPLANBC', 0)) + present(saisies.get('REMPLANBP1', 0)) + present(saisies.get('REMPLANBP2', 0)) + present(saisies.get('REMPLANBP3', 0)) + present(saisies.get('REMPLANBP4', 0)) + present(saisies.get('CARPEV', 0)) + present(saisies.get('CARPEC', 0)) + present(saisies.get('CARPEP1', 0)) + present(saisies.get('CARPEP2', 0)) + present(saisies.get('CARPEP3', 0)) + present(saisies.get('CARPEP4', 0)) + present(saisies.get('CARPENBAV', 0)) + present(saisies.get('CARPENBAC', 0)) + present(saisies.get('CARPENBAP1', 0)) + present(saisies.get('CARPENBAP2', 0)) + present(saisies.get('CARPENBAP3', 0)) + present(saisies.get('CARPENBAP4', 0)) + present(saisies.get('PENSALV', 0)) + present(saisies.get('PENSALC', 0)) + present(saisies.get('PENSALP1', 0)) + present(saisies.get('PENSALP2', 0)) + present(saisies.get('PENSALP3', 0)) + present(saisies.get('PENSALP4', 0)) + present(saisies.get('PENSALNBV', 0)) + present(saisies.get('PENSALNBC', 0)) + present(saisies.get('PENSALNBP1', 0)) + present(saisies.get('PENSALNBP2', 0)) + present(saisies.get('PENSALNBP3', 0)) + present(saisies.get('PENSALNBP4', 0)) + sum([sum([present(saisies.get('BICNOV', 0)) + sum([present(saisies.get('BICDNV', 0))]), present(saisies.get('BIHNOV', 0)) + sum([present(saisies.get('BIHDNV', 0))])]) + sum([present(saisies.get('BI1AV', 0))]), sum([present(saisies.get('BICNOC', 0)) + sum([present(saisies.get('BICDNC', 0))]), present(saisies.get('BIHNOC', 0)) + sum([present(saisies.get('BIHDNC', 0))])]) + sum([present(saisies.get('BI1AC', 0))]), sum([present(saisies.get('BICNOP', 0)) + sum([present(saisies.get('BICDNP', 0))]), present(saisies.get('BIHNOP', 0)) + sum([present(saisies.get('BIHDNP', 0))])]) + sum([present(saisies.get('BI1AP', 0))])]) + present(saisies.get('CODRAZ', 0)) + present(saisies.get('CODRBZ', 0)) + present(saisies.get('CODRCZ', 0)) + present(saisies.get('CODRDZ', 0)) + present(saisies.get('CODREZ', 0)) + present(saisies.get('CODRFZ', 0)) + present(saisies.get('RVB1', 0)) + present(saisies.get('RVB2', 0)) + present(saisies.get('RVB3', 0)) + present(saisies.get('RVB4', 0)) + present(saisies.get('RENTAX', 0)) + present(saisies.get('RENTAX5', 0)) + present(saisies.get('RENTAX6', 0)) + present(saisies.get('RENTAX7', 0)) + present(saisies.get('RENTAXNB', 0)) + present(saisies.get('RENTAXNB5', 0)) + present(saisies.get('RENTAXNB6', 0)) + present(saisies.get('RENTAXNB7', 0)) + present(saisies.get('RCMABD', 0)) + present(saisies.get('RCMHAD', 0)) + present(saisies.get('REGPRIV', 0)) + present(saisies.get('RCMIMPAT', 0)) + present(saisies.get('REVACT', 0)) + present(saisies.get('DISQUO', 0)) + present(saisies.get('RESTUC', 0)) + present(saisies.get('REVACTNB', 0)) + present(saisies.get('DISQUONB', 0)) + present(saisies.get('RESTUCNB', 0)) + present(saisies.get('COD2FA', 0)) + present(saisies.get('RCMHAB', 0)) + present(saisies.get('INTERE', 0)) + present(saisies.get('MIBVENV', 0)) + present(saisies.get('MIBPRESV', 0)) + present(saisies.get('MIB1AV', 0)) + present(saisies.get('MIBDEV', 0)) + present(saisies.get('MIBVENC', 0)) + present(saisies.get('MIBPRESC', 0)) + present(saisies.get('MIB1AC', 0)) + present(saisies.get('MIBDEC', 0)) + present(saisies.get('MIBVENP', 0)) + present(saisies.get('MIBPRESP', 0)) + present(saisies.get('MIB1AP', 0)) + present(saisies.get('MIBDEP', 0)) + present(saisies.get('LOCPROCGAV', 0)) + present(saisies.get('LOCDEFPROCGAV', 0)) + present(saisies.get('LOCPROCGAC', 0)) + present(saisies.get('LOCDEFPROCGAC', 0)) + present(saisies.get('LOCPROCGAP', 0)) + present(saisies.get('LOCDEFPROCGAP', 0)) + present(saisies.get('LOCPROV', 0)) + present(saisies.get('LOCDEFPROV', 0)) + present(saisies.get('LOCPROC', 0)) + present(saisies.get('LOCDEFPROC', 0)) + present(saisies.get('LOCPROP', 0)) + present(saisies.get('LOCDEFPROP', 0)) + present(saisies.get('BICREV', 0)) + present(saisies.get('LOCNPCGAV', 0)) + present(saisies.get('LOCGITCV', 0)) + present(saisies.get('BI2AV', 0)) + present(saisies.get('BICDEV', 0)) + present(saisies.get('LOCDEFNPCGAV', 0)) + present(saisies.get('BICREC', 0)) + present(saisies.get('LOCNPCGAC', 0)) + present(saisies.get('LOCGITCC', 0)) + present(saisies.get('BI2AC', 0)) + present(saisies.get('BICDEC', 0)) + present(saisies.get('LOCDEFNPCGAC', 0)) + present(saisies.get('BICREP', 0)) + present(saisies.get('LOCNPCGAPAC', 0)) + present(saisies.get('LOCGITCP', 0)) + present(saisies.get('BI2AP', 0)) + present(saisies.get('BICDEP', 0)) + present(saisies.get('LOCDEFNPCGAPAC', 0)) + present(saisies.get('BICHREV', 0)) + present(saisies.get('LOCNPV', 0)) + present(saisies.get('LOCGITHCV', 0)) + present(saisies.get('BICHDEV', 0)) + present(saisies.get('LOCDEFNPV', 0)) + present(saisies.get('BICHREC', 0)) + present(saisies.get('LOCNPC', 0)) + present(saisies.get('LOCGITHCC', 0)) + present(saisies.get('BICHDEC', 0)) + present(saisies.get('LOCDEFNPC', 0)) + present(saisies.get('BICHREP', 0)) + present(saisies.get('LOCNPPAC', 0)) + present(saisies.get('LOCGITHCP', 0)) + present(saisies.get('BICHDEP', 0)) + present(saisies.get('LOCDEFNPPAC', 0)) + present(saisies.get('MIBMEUV', 0)) + present(saisies.get('MIBGITEV', 0)) + present(saisies.get('LOCGITV', 0)) + present(saisies.get('MIBNPVENV', 0)) + present(saisies.get('MIBNPPRESV', 0)) + present(saisies.get('MIBNP1AV', 0)) + present(saisies.get('MIBNPDEV', 0)) + present(saisies.get('MIBMEUC', 0)) + present(saisies.get('MIBGITEC', 0)) + present(saisies.get('LOCGITC', 0)) + present(saisies.get('MIBNPVENC', 0)) + present(saisies.get('MIBNPPRESC', 0)) + present(saisies.get('MIBNP1AC', 0)) + present(saisies.get('MIBNPDEC', 0)) + present(saisies.get('MIBMEUP', 0)) + present(saisies.get('MIBGITEP', 0)) + present(saisies.get('LOCGITP', 0)) + present(saisies.get('MIBNPVENP', 0)) + present(saisies.get('MIBNPPRESP', 0)) + present(saisies.get('MIBNP1AP', 0)) + present(saisies.get('MIBNPDEP', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BN1AV', 0)) + present(saisies.get('BNCDEV', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BN1AC', 0)) + present(saisies.get('BNCDEC', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BN1AP', 0)) + present(saisies.get('BNCDEP', 0)) + present(saisies.get('BNHREV', 0)) + present(saisies.get('BNHDEV', 0)) + present(saisies.get('BNHREC', 0)) + present(saisies.get('BNHDEC', 0)) + present(saisies.get('BNHREP', 0)) + present(saisies.get('BNHDEP', 0)) + present(saisies.get('BNCPROV', 0)) + present(saisies.get('BNCPRO1AV', 0)) + present(saisies.get('BNCPRODEV', 0)) + present(saisies.get('BNCPROC', 0)) + present(saisies.get('BNCPRO1AC', 0)) + present(saisies.get('BNCPRODEC', 0)) + present(saisies.get('BNCPROP', 0)) + present(saisies.get('BNCPRO1AP', 0)) + present(saisies.get('BNCPRODEP', 0)) + present(saisies.get('BNCNPV', 0)) + present(saisies.get('BNCNP1AV', 0)) + present(saisies.get('BNCNPDEV', 0)) + present(saisies.get('BNCNPC', 0)) + present(saisies.get('BNCNP1AC', 0)) + present(saisies.get('BNCNPDEC', 0)) + present(saisies.get('BNCNPP', 0)) + present(saisies.get('BNCNP1AP', 0)) + present(saisies.get('BNCNPDEP', 0)) + present(saisies.get('BNCAABV', 0)) + present(saisies.get('ANOCEP', 0)) + present(saisies.get('INVENTV', 0)) + present(saisies.get('PVINVE', 0)) + present(saisies.get('BNCAADV', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('BNCAABC', 0)) + present(saisies.get('ANOVEP', 0)) + present(saisies.get('INVENTC', 0)) + present(saisies.get('PVINCE', 0)) + present(saisies.get('BNCAADC', 0)) + present(saisies.get('DNOCEPC', 0)) + present(saisies.get('BNCAABP', 0)) + present(saisies.get('ANOPEP', 0)) + present(saisies.get('INVENTP', 0)) + present(saisies.get('PVINPE', 0)) + present(saisies.get('BNCAADP', 0)) + present(saisies.get('DNOCEPP', 0))
SOMMEA877 = present(saisies.get('BAEXV', 0)) + present(saisies.get('BACREV', 0)) + present(_4BACREV) + present(saisies.get('BA1AV', 0)) + present(saisies.get('BACDEV', 0)) + present(saisies.get('BAEXC', 0)) + present(saisies.get('BACREC', 0)) + present(_4BACREC) + present(saisies.get('BA1AC', 0)) + present(saisies.get('BACDEC', 0)) + present(saisies.get('BAEXP', 0)) + present(saisies.get('BACREP', 0)) + present(_4BACREP) + present(saisies.get('BA1AP', 0)) + present(saisies.get('BACDEP', 0)) + present(saisies.get('BAHEXV', 0)) + present(saisies.get('BAHREV', 0)) + present(_4BAHREV) + present(saisies.get('BAHDEV', 0)) + present(saisies.get('BAHEXC', 0)) + present(saisies.get('BAHREC', 0)) + present(_4BAHREC) + present(saisies.get('BAHDEC', 0)) + present(saisies.get('BAHEXP', 0)) + present(saisies.get('BAHREP', 0)) + present(_4BAHREP) + present(saisies.get('BAHDEP', 0)) + present(saisies.get('BICEXV', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('BICEXC', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('BICEXP', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('BIHEXV', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('BIHDNV', 0)) + present(saisies.get('BIHEXC', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('BIHDNC', 0)) + present(saisies.get('BIHEXP', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('BIHDNP', 0))
SOMMEA879 = present(saisies.get('BACREV', 0)) + present(_4BACREV) + present(saisies.get('BA1AV', 0)) + present(saisies.get('BACDEV', 0)) + present(saisies.get('BACREC', 0)) + present(_4BACREC) + present(saisies.get('BA1AC', 0)) + present(saisies.get('BACDEC', 0)) + present(saisies.get('BACREP', 0)) + present(_4BACREP) + present(saisies.get('BA1AP', 0)) + present(saisies.get('BACDEP', 0)) + present(saisies.get('BAHREV', 0)) + present(_4BAHREV) + present(saisies.get('BAHDEV', 0)) + present(saisies.get('BAHREC', 0)) + present(_4BAHREC) + present(saisies.get('BAHDEC', 0)) + present(saisies.get('BAHREP', 0)) + present(_4BAHREP) + present(saisies.get('BAHDEP', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('BIHDNV', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('BIHDNC', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('BIHDNP', 0)) + present(saisies.get('BICREV', 0)) + present(saisies.get('BI2AV', 0)) + present(saisies.get('BICDEV', 0)) + present(saisies.get('BICREC', 0)) + present(saisies.get('BI2AC', 0)) + present(saisies.get('BICDEC', 0)) + present(saisies.get('BICREP', 0)) + present(saisies.get('BI2AP', 0)) + present(saisies.get('BICDEP', 0)) + present(saisies.get('BICHREV', 0)) + present(saisies.get('BICHDEV', 0)) + present(saisies.get('BICHREC', 0)) + present(saisies.get('BICHDEC', 0)) + present(saisies.get('BICHREP', 0)) + present(saisies.get('BICHDEP', 0)) + present(saisies.get('LOCPROCGAV', 0)) + present(saisies.get('LOCDEFPROCGAV', 0)) + present(saisies.get('LOCPROCGAC', 0)) + present(saisies.get('LOCDEFPROCGAC', 0)) + present(saisies.get('LOCPROCGAP', 0)) + present(saisies.get('LOCDEFPROCGAP', 0)) + present(saisies.get('LOCPROV', 0)) + present(saisies.get('LOCDEFPROV', 0)) + present(saisies.get('LOCPROC', 0)) + present(saisies.get('LOCDEFPROC', 0)) + present(saisies.get('LOCPROP', 0)) + present(saisies.get('LOCDEFPROP', 0)) + present(saisies.get('LOCNPCGAV', 0)) + present(saisies.get('LOCGITCV', 0)) + present(saisies.get('LOCDEFNPCGAV', 0)) + present(saisies.get('LOCNPCGAC', 0)) + present(saisies.get('LOCGITCC', 0)) + present(saisies.get('LOCDEFNPCGAC', 0)) + present(saisies.get('LOCNPCGAPAC', 0)) + present(saisies.get('LOCGITCP', 0)) + present(saisies.get('LOCDEFNPCGAPAC', 0)) + present(saisies.get('LOCNPV', 0)) + present(saisies.get('LOCGITHCV', 0)) + present(saisies.get('LOCDEFNPV', 0)) + present(saisies.get('LOCNPC', 0)) + present(saisies.get('LOCGITHCC', 0)) + present(saisies.get('LOCDEFNPC', 0)) + present(saisies.get('LOCNPPAC', 0)) + present(saisies.get('LOCGITHCP', 0)) + present(saisies.get('LOCDEFNPPAC', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BN1AV', 0)) + present(saisies.get('BNCDEV', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BN1AC', 0)) + present(saisies.get('BNCDEC', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BN1AP', 0)) + present(saisies.get('BNCDEP', 0)) + present(saisies.get('BNHREV', 0)) + present(saisies.get('BNHDEV', 0)) + present(saisies.get('BNHREC', 0)) + present(saisies.get('BNHDEC', 0)) + present(saisies.get('BNHREP', 0)) + present(saisies.get('BNHDEP', 0)) + present(saisies.get('BNCAABV', 0)) + present(saisies.get('ANOCEP', 0)) + present(saisies.get('INVENTV', 0)) + present(saisies.get('PVINVE', 0)) + present(saisies.get('BNCAADV', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('BNCAABC', 0)) + present(saisies.get('ANOVEP', 0)) + present(saisies.get('INVENTC', 0)) + present(saisies.get('PVINCE', 0)) + present(saisies.get('BNCAADC', 0)) + present(saisies.get('DNOCEPC', 0)) + present(saisies.get('BNCAABP', 0)) + present(saisies.get('ANOPEP', 0)) + present(saisies.get('INVENTP', 0)) + present(saisies.get('PVINPE', 0)) + present(saisies.get('BNCAADP', 0)) + present(saisies.get('DNOCEPP', 0))
SOMMEA880 = present(saisies.get('BICEXV', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('BICEXC', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('BICEXP', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('BIHEXV', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('BIHDNV', 0)) + present(saisies.get('BIHEXC', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('BIHDNC', 0)) + present(saisies.get('BIHEXP', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('BIHDNP', 0)) + present(saisies.get('LOCPROCGAV', 0)) + present(saisies.get('LOCDEFPROCGAV', 0)) + present(saisies.get('LOCPROCGAC', 0)) + present(saisies.get('LOCDEFPROCGAC', 0)) + present(saisies.get('LOCPROCGAP', 0)) + present(saisies.get('LOCDEFPROCGAP', 0)) + present(saisies.get('LOCPROV', 0)) + present(saisies.get('LOCDEFPROV', 0)) + present(saisies.get('LOCPROC', 0)) + present(saisies.get('LOCDEFPROC', 0)) + present(saisies.get('LOCPROP', 0)) + present(saisies.get('LOCDEFPROP', 0))
SOMMEA881 = present(saisies.get('BAEXV', 0)) + present(saisies.get('BACREV', 0)) + present(_4BACREV) + present(saisies.get('BA1AV', 0)) + present(saisies.get('BACDEV', 0)) + present(saisies.get('BAEXC', 0)) + present(saisies.get('BACREC', 0)) + present(_4BACREC) + present(saisies.get('BA1AC', 0)) + present(saisies.get('BACDEC', 0)) + present(saisies.get('BAEXP', 0)) + present(saisies.get('BACREP', 0)) + present(_4BACREP) + present(saisies.get('BA1AP', 0)) + present(saisies.get('BACDEP', 0)) + present(saisies.get('BAHEXV', 0)) + present(saisies.get('BAHREV', 0)) + present(_4BAHREV) + present(saisies.get('BAHDEV', 0)) + present(saisies.get('BAHEXC', 0)) + present(saisies.get('BAHREC', 0)) + present(_4BAHREC) + present(saisies.get('BAHDEC', 0)) + present(saisies.get('BAHEXP', 0)) + present(saisies.get('BAHREP', 0)) + present(_4BAHREP) + present(saisies.get('BAHDEP', 0)) + present(saisies.get('BICEXV', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('BICEXC', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('BICEXP', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('BIHEXV', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('BIHDNV', 0)) + present(saisies.get('BIHEXC', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('BIHDNC', 0)) + present(saisies.get('BIHEXP', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('BIHDNP', 0)) + present(saisies.get('BICNPEXV', 0)) + present(saisies.get('BICREV', 0)) + present(saisies.get('BI2AV', 0)) + present(saisies.get('BICDEV', 0)) + present(saisies.get('BICNPEXC', 0)) + present(saisies.get('BICREC', 0)) + present(saisies.get('BI2AC', 0)) + present(saisies.get('BICDEC', 0)) + present(saisies.get('BICNPEXP', 0)) + present(saisies.get('BICREP', 0)) + present(saisies.get('BI2AP', 0)) + present(saisies.get('BICDEP', 0)) + present(saisies.get('BICNPHEXV', 0)) + present(saisies.get('BICHREV', 0)) + present(saisies.get('BICHDEV', 0)) + present(saisies.get('BICNPHEXC', 0)) + present(saisies.get('BICHREC', 0)) + present(saisies.get('BICHDEC', 0)) + present(saisies.get('BICNPHEXP', 0)) + present(saisies.get('BICHREP', 0)) + present(saisies.get('BICHDEP', 0)) + present(saisies.get('LOCPROCGAV', 0)) + present(saisies.get('LOCDEFPROCGAV', 0)) + present(saisies.get('LOCPROCGAC', 0)) + present(saisies.get('LOCDEFPROCGAC', 0)) + present(saisies.get('LOCPROCGAP', 0)) + present(saisies.get('LOCDEFPROCGAP', 0)) + present(saisies.get('LOCPROV', 0)) + present(saisies.get('LOCDEFPROV', 0)) + present(saisies.get('LOCPROC', 0)) + present(saisies.get('LOCDEFPROC', 0)) + present(saisies.get('LOCPROP', 0)) + present(saisies.get('LOCDEFPROP', 0)) + present(saisies.get('LOCNPCGAV', 0)) + present(saisies.get('LOCGITCV', 0)) + present(saisies.get('LOCDEFNPCGAV', 0)) + present(saisies.get('LOCNPCGAC', 0)) + present(saisies.get('LOCGITCC', 0)) + present(saisies.get('LOCDEFNPCGAC', 0)) + present(saisies.get('LOCNPCGAPAC', 0)) + present(saisies.get('LOCGITCP', 0)) + present(saisies.get('LOCDEFNPCGAPAC', 0)) + present(saisies.get('LOCNPV', 0)) + present(saisies.get('LOCGITHCV', 0)) + present(saisies.get('LOCDEFNPV', 0)) + present(saisies.get('LOCNPC', 0)) + present(saisies.get('LOCGITHCC', 0)) + present(saisies.get('LOCDEFNPC', 0)) + present(saisies.get('LOCNPPAC', 0)) + present(saisies.get('LOCGITHCP', 0)) + present(saisies.get('LOCDEFNPPAC', 0)) + present(saisies.get('BAPERPV', 0)) + present(saisies.get('BAPERPC', 0)) + present(saisies.get('BAPERPP', 0)) + present(saisies.get('BANOCGAV', 0)) + present(saisies.get('BANOCGAC', 0)) + present(saisies.get('BANOCGAP', 0)) + present(saisies.get('BNCEXV', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BN1AV', 0)) + present(saisies.get('BNCDEV', 0)) + present(saisies.get('BNCEXC', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BN1AC', 0)) + present(saisies.get('BNCDEC', 0)) + present(saisies.get('BNCEXP', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BN1AP', 0)) + present(saisies.get('BNCDEP', 0)) + present(saisies.get('BNHEXV', 0)) + present(saisies.get('BNHREV', 0)) + present(saisies.get('BNHDEV', 0)) + present(saisies.get('BNHEXC', 0)) + present(saisies.get('BNHREC', 0)) + present(saisies.get('BNHDEC', 0)) + present(saisies.get('BNHEXP', 0)) + present(saisies.get('BNHREP', 0)) + present(saisies.get('BNHDEP', 0)) + present(saisies.get('XHONOAAV', 0)) + present(saisies.get('XHONOV', 0)) + present(saisies.get('XHONOAAC', 0)) + present(saisies.get('XHONOC', 0)) + present(saisies.get('XHONOAAP', 0)) + present(saisies.get('XHONOP', 0)) + present(saisies.get('BNCAABV', 0)) + present(saisies.get('ANOCEP', 0)) + present(saisies.get('INVENTV', 0)) + present(saisies.get('PVINVE', 0)) + present(saisies.get('BNCAADV', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('BNCAABC', 0)) + present(saisies.get('ANOVEP', 0)) + present(saisies.get('INVENTC', 0)) + present(saisies.get('PVINCE', 0)) + present(saisies.get('BNCAADC', 0)) + present(saisies.get('DNOCEPC', 0)) + present(saisies.get('BNCAABP', 0)) + present(saisies.get('ANOPEP', 0)) + present(saisies.get('INVENTP', 0)) + present(saisies.get('PVINPE', 0)) + present(saisies.get('BNCAADP', 0)) + present(saisies.get('DNOCEPP', 0)) + present(saisies.get('BNCNPREXAAV', 0)) + present(saisies.get('BNCNPREXAAC', 0)) + present(saisies.get('BNCNPREXAAP', 0)) + present(saisies.get('BNCNPREXV', 0)) + present(saisies.get('BNCNPREXC', 0)) + present(saisies.get('BNCNPREXP', 0))
SOMMEA884 = present(saisies.get('TSHALLOV', 0)) + present(saisies.get('TSHALLOC', 0)) + present(saisies.get('TSHALLO1', 0)) + present(saisies.get('TSHALLO2', 0)) + present(saisies.get('TSHALLO3', 0)) + present(saisies.get('TSHALLO4', 0)) + present(saisies.get('PCAPTAXV', 0)) + present(saisies.get('PCAPTAXC', 0)) + present(saisies.get('ALLOV', 0)) + present(saisies.get('ALLOC', 0)) + present(saisies.get('ALLO1', 0)) + present(saisies.get('ALLO2', 0)) + present(saisies.get('ALLO3', 0)) + present(saisies.get('ALLO4', 0)) + present(saisies.get('PALIV', 0)) + present(saisies.get('PALIC', 0)) + present(saisies.get('PALI1', 0)) + present(saisies.get('PALI2', 0)) + present(saisies.get('PALI3', 0)) + present(saisies.get('PALI4', 0)) + present(saisies.get('PRBRV', 0)) + present(saisies.get('PRBRC', 0)) + present(saisies.get('PRBR1', 0)) + present(saisies.get('PRBR2', 0)) + present(saisies.get('PRBR3', 0)) + present(saisies.get('PRBR4', 0)) + present(saisies.get('CARTSV', 0)) + present(saisies.get('CARTSC', 0)) + present(saisies.get('CARTSP1', 0)) + present(saisies.get('CARTSP2', 0)) + present(saisies.get('CARTSP3', 0)) + present(saisies.get('CARTSP4', 0)) + present(saisies.get('CARTSNBAV', 0)) + present(saisies.get('CARTSNBAC', 0)) + present(saisies.get('CARTSNBAP1', 0)) + present(saisies.get('CARTSNBAP2', 0)) + present(saisies.get('CARTSNBAP3', 0)) + present(saisies.get('CARTSNBAP4', 0)) + present(saisies.get('REMPLAV', 0)) + present(saisies.get('REMPLAC', 0)) + present(saisies.get('REMPLAP1', 0)) + present(saisies.get('REMPLAP2', 0)) + present(saisies.get('REMPLAP3', 0)) + present(saisies.get('REMPLAP4', 0)) + present(saisies.get('REMPLANBV', 0)) + present(saisies.get('REMPLANBC', 0)) + present(saisies.get('REMPLANBP1', 0)) + present(saisies.get('REMPLANBP2', 0)) + present(saisies.get('REMPLANBP3', 0)) + present(saisies.get('REMPLANBP4', 0)) + present(saisies.get('CARPEV', 0)) + present(saisies.get('CARPEC', 0)) + present(saisies.get('CARPEP1', 0)) + present(saisies.get('CARPEP2', 0)) + present(saisies.get('CARPEP3', 0)) + present(saisies.get('CARPEP4', 0)) + present(saisies.get('CARPENBAV', 0)) + present(saisies.get('CARPENBAC', 0)) + present(saisies.get('CARPENBAP1', 0)) + present(saisies.get('CARPENBAP2', 0)) + present(saisies.get('CARPENBAP3', 0)) + present(saisies.get('CARPENBAP4', 0)) + present(saisies.get('PENSALV', 0)) + present(saisies.get('PENSALC', 0)) + present(saisies.get('PENSALP1', 0)) + present(saisies.get('PENSALP2', 0)) + present(saisies.get('PENSALP3', 0)) + present(saisies.get('PENSALP4', 0)) + present(saisies.get('PENSALNBV', 0)) + present(saisies.get('PENSALNBC', 0)) + present(saisies.get('PENSALNBP1', 0)) + present(saisies.get('PENSALNBP2', 0)) + present(saisies.get('PENSALNBP3', 0)) + present(saisies.get('PENSALNBP4', 0)) + present(saisies.get('REVACT', 0)) + present(saisies.get('DISQUO', 0)) + present(saisies.get('REVACTNB', 0)) + present(saisies.get('DISQUONB', 0)) + present(saisies.get('COD2FA', 0)) + present(saisies.get('RCMHAD', 0)) + present(saisies.get('RCMABD', 0)) + present(saisies.get('PENINV', 0)) + present(saisies.get('PENINC', 0)) + present(saisies.get('PENIN1', 0)) + present(saisies.get('PENIN2', 0)) + present(saisies.get('PENIN3', 0)) + present(saisies.get('PENIN4', 0)) + present(saisies.get('CODRAZ', 0)) + present(saisies.get('CODRBZ', 0)) + present(saisies.get('CODRCZ', 0)) + present(saisies.get('CODRDZ', 0)) + present(saisies.get('CODREZ', 0)) + present(saisies.get('CODRFZ', 0)) + present(saisies.get('RFORDI', 0)) + present(saisies.get('RFMIC', 0)) + present(saisies.get('FONCI', 0)) + present(saisies.get('REAMOR', 0)) + present(saisies.get('BPVRCM', 0)) + present(saisies.get('PVTAXSB', 0)) + present(saisies.get('BPVSJ', 0)) + present(saisies.get('BPV18C', 0)) + present(saisies.get('BPV18V', 0)) + present(saisies.get('BPCOPTC', 0)) + present(saisies.get('BPCOPTV', 0)) + present(saisies.get('BPV40C', 0)) + present(saisies.get('BPV40V', 0)) + present(saisies.get('COD3SG', 0)) + present(saisies.get('ABDETPLUS', 0)) + present(saisies.get('COD3SL', 0)) + present(saisies.get('ABIMPPV', 0)) + present(saisies.get('PVIMMO', 0)) + present(saisies.get('CODRVG', 0)) + present(saisies.get('BACREV', 0)) + present(_4BACREV) + present(saisies.get('BAHREV', 0)) + present(_4BAHREV) + present(saisies.get('BA1AV', 0)) + present(saisies.get('BACREC', 0)) + present(_4BACREC) + present(saisies.get('BAHREC', 0)) + present(_4BAHREC) + present(saisies.get('BA1AC', 0)) + present(saisies.get('BACREP', 0)) + present(_4BACREP) + present(saisies.get('BAHREP', 0)) + present(_4BAHREP) + present(saisies.get('BA1AP', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('LOCPROCGAV', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('LOCPROV', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('LOCPROCGAC', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('LOCPROC', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('LOCPROCGAP', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('LOCPROP', 0)) + present(saisies.get('MIBVENV', 0)) + present(saisies.get('MIBPRESV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('MIBVENC', 0)) + present(saisies.get('MIBPRESC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('MIBVENP', 0)) + present(saisies.get('MIBPRESP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BICREV', 0)) + present(saisies.get('LOCNPCGAV', 0)) + present(saisies.get('LOCGITCV', 0)) + present(saisies.get('BICREC', 0)) + present(saisies.get('LOCNPCGAC', 0)) + present(saisies.get('LOCGITCC', 0)) + present(saisies.get('BICREP', 0)) + present(saisies.get('LOCNPCGAPAC', 0)) + present(saisies.get('LOCGITCP', 0)) + present(saisies.get('BICHREV', 0)) + present(saisies.get('LOCNPV', 0)) + present(saisies.get('LOCGITHCV', 0)) + present(saisies.get('BICHREC', 0)) + present(saisies.get('LOCNPC', 0)) + present(saisies.get('LOCGITHCC', 0)) + present(saisies.get('BICHREP', 0)) + present(saisies.get('LOCNPPAC', 0)) + present(saisies.get('LOCGITHCP', 0)) + present(saisies.get('MIBMEUV', 0)) + present(saisies.get('MIBGITEV', 0)) + present(saisies.get('LOCGITV', 0)) + present(saisies.get('MIBNPVENV', 0)) + present(saisies.get('MIBNPPRESV', 0)) + present(saisies.get('MIBMEUC', 0)) + present(saisies.get('MIBGITEC', 0)) + present(saisies.get('LOCGITC', 0)) + present(saisies.get('MIBNPVENC', 0)) + present(saisies.get('MIBNPPRESC', 0)) + present(saisies.get('MIBMEUP', 0)) + present(saisies.get('MIBGITEP', 0)) + present(saisies.get('LOCGITP', 0)) + present(saisies.get('MIBNPVENP', 0)) + present(saisies.get('MIBNPPRESP', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BNHREV', 0)) + present(saisies.get('BNHREC', 0)) + present(saisies.get('BNHREP', 0)) + present(saisies.get('BNCPROV', 0)) + present(saisies.get('BNCPROC', 0)) + present(saisies.get('BNCPROP', 0)) + present(saisies.get('BN1AV', 0)) + present(saisies.get('BN1AC', 0)) + present(saisies.get('BN1AP', 0)) + present(saisies.get('BNCAABV', 0)) + present(saisies.get('ANOCEP', 0)) + present(saisies.get('INVENTV', 0)) + present(saisies.get('PVINVE', 0)) + present(saisies.get('BNCAADV', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('BNCAABC', 0)) + present(saisies.get('ANOVEP', 0)) + present(saisies.get('INVENTC', 0)) + present(saisies.get('PVINCE', 0)) + present(saisies.get('BNCAADC', 0)) + present(saisies.get('DNOCEPC', 0)) + present(saisies.get('BNCAABP', 0)) + present(saisies.get('ANOPEP', 0)) + present(saisies.get('INVENTP', 0)) + present(saisies.get('PVINPE', 0)) + present(saisies.get('BNCAADP', 0)) + present(saisies.get('DNOCEPP', 0)) + present(saisies.get('BNCNPV', 0)) + present(saisies.get('BNCNPC', 0)) + present(saisies.get('BNCNPP', 0))
SOMMEA885 = present(saisies.get('BA1AV', 0)) + present(saisies.get('BA1AC', 0)) + present(saisies.get('BA1AP', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BN1AV', 0)) + present(saisies.get('BN1AC', 0)) + present(saisies.get('BN1AP', 0))
SOMMEA890 = SOMMEA881 + present(saisies.get('TSHALLOV', 0)) + present(saisies.get('TSHALLOC', 0)) + present(saisies.get('CARTSV', 0)) + present(saisies.get('CARTSC', 0)) + present(saisies.get('CARTSNBAV', 0)) + present(saisies.get('CARTSNBAC', 0))
SOMMEA891 = SOMMEA881
SOMMEA892 = SOMMEA881
SOMMEA893 = SOMMEA881
SOMMEA894 = SOMMEA881
SOMMEA895 = present(saisies.get('BAEXV', 0)) + present(saisies.get('BACREV', 0)) + present(_4BACREV) + present(saisies.get('BA1AV', 0)) + present(saisies.get('BACDEV', 0)) + present(saisies.get('BAEXC', 0)) + present(saisies.get('BACREC', 0)) + present(_4BACREC) + present(saisies.get('BA1AC', 0)) + present(saisies.get('BACDEC', 0)) + present(saisies.get('BAEXP', 0)) + present(saisies.get('BACREP', 0)) + present(_4BACREP) + present(saisies.get('BA1AP', 0)) + present(saisies.get('BACDEP', 0)) + present(saisies.get('BAHEXV', 0)) + present(saisies.get('BAHREV', 0)) + present(_4BAHREV) + present(saisies.get('BAHDEV', 0)) + present(saisies.get('BAHEXC', 0)) + present(saisies.get('BAHREC', 0)) + present(_4BAHREC) + present(saisies.get('BAHDEC', 0)) + present(saisies.get('BAHEXP', 0)) + present(saisies.get('BAHREP', 0)) + present(_4BAHREP) + present(saisies.get('BAHDEP', 0)) + present(saisies.get('FEXV', 0)) + present(saisies.get('BAFV', 0)) + 1 - is_zero(saisies.get('V_FORVA', 0) + 0) + present(saisies.get('BAFPVV', 0)) + present(saisies.get('BAF1AV', 0)) + present(saisies.get('FEXC', 0)) + present(saisies.get('BAFC', 0)) + 1 - is_zero(saisies.get('V_FORCA', 0) + 0) + present(saisies.get('BAFPVC', 0)) + present(saisies.get('BAF1AC', 0)) + present(saisies.get('FEXP', 0)) + present(saisies.get('BAFP', 0)) + 1 - is_zero(saisies.get('V_FORPA', 0) + 0) + present(saisies.get('BAFPVP', 0)) + present(saisies.get('BAF1AP', 0))
SOMMEA896 = SOMMEA881
SOMMEA897 = SOMMEA881
SOMMEA898 = SOMMEA895
SOMMEA899 = present(saisies.get('BICEXV', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('BICEXC', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('BICEXP', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('BIHEXV', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('BIHDNV', 0)) + present(saisies.get('BIHEXC', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('BIHDNC', 0)) + present(saisies.get('BIHEXP', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('BIHDNP', 0))
SOMMEANOEXP = is_positive(saisies.get('PEBFV', 0)) + is_positive(saisies.get('COTFV', 0)) + is_positive(saisies.get('PEBFC', 0)) + is_positive(saisies.get('COTFC', 0)) + is_positive(saisies.get('PEBF1', 0)) + is_positive(saisies.get('COTF1', 0)) + is_positive(saisies.get('PEBF2', 0)) + is_positive(saisies.get('COTF2', 0)) + is_positive(saisies.get('PEBF3', 0)) + is_positive(saisies.get('COTF3', 0)) + is_positive(saisies.get('PEBF4', 0)) + is_positive(saisies.get('COTF4', 0)) + is_positive(saisies.get('PENSALV', 0)) + is_positive(saisies.get('PENSALNBV', 0)) + is_positive(saisies.get('PENSALC', 0)) + is_positive(saisies.get('PENSALNBC', 0)) + is_positive(saisies.get('PENSALP1', 0)) + is_positive(saisies.get('PENSALNBP1', 0)) + is_positive(saisies.get('PENSALP2', 0)) + is_positive(saisies.get('PENSALNBP2', 0)) + is_positive(saisies.get('PENSALP3', 0)) + is_positive(saisies.get('PENSALNBP3', 0)) + is_positive(saisies.get('PENSALP4', 0)) + is_positive(saisies.get('PENSALNBP4', 0)) + is_positive(saisies.get('CARPEV', 0)) + is_positive(saisies.get('CARPENBAV', 0)) + is_positive(saisies.get('CARPEC', 0)) + is_positive(saisies.get('CARPENBAC', 0)) + is_positive(saisies.get('CARPEP1', 0)) + is_positive(saisies.get('CARPENBAP1', 0)) + is_positive(saisies.get('CARPEP2', 0)) + is_positive(saisies.get('CARPENBAP2', 0)) + is_positive(saisies.get('CARPEP3', 0)) + is_positive(saisies.get('CARPENBAP3', 0)) + is_positive(saisies.get('CARPEP4', 0)) + is_positive(saisies.get('CARPENBAP4', 0)) + is_positive(saisies.get('CARTSP1', 0)) + is_positive(saisies.get('CARTSNBAP1', 0)) + is_positive(saisies.get('CARTSP2', 0)) + is_positive(saisies.get('CARTSNBAP2', 0)) + is_positive(saisies.get('CARTSP3', 0)) + is_positive(saisies.get('CARTSNBAP3', 0)) + is_positive(saisies.get('CARTSP4', 0)) + is_positive(saisies.get('CARTSNBAP4', 0)) + is_positive(saisies.get('REMPLAV', 0)) + is_positive(saisies.get('REMPLANBV', 0)) + is_positive(saisies.get('REMPLAC', 0)) + is_positive(saisies.get('REMPLANBC', 0)) + is_positive(saisies.get('REMPLAP1', 0)) + is_positive(saisies.get('REMPLANBP1', 0)) + is_positive(saisies.get('REMPLAP2', 0)) + is_positive(saisies.get('REMPLANBP2', 0)) + is_positive(saisies.get('REMPLAP3', 0)) + is_positive(saisies.get('REMPLANBP3', 0)) + is_positive(saisies.get('REMPLAP4', 0)) + is_positive(saisies.get('REMPLANBP4', 0)) + is_positive(saisies.get('RENTAX', 0)) + is_positive(saisies.get('RENTAX5', 0)) + is_positive(saisies.get('RENTAX6', 0)) + is_positive(saisies.get('RENTAX7', 0)) + is_positive(saisies.get('RENTAXNB', 0)) + is_positive(saisies.get('RENTAXNB5', 0)) + is_positive(saisies.get('RENTAXNB6', 0)) + is_positive(saisies.get('RENTAXNB7', 0)) + is_positive(saisies.get('FONCI', 0)) + is_positive(saisies.get('FONCINB', 0)) + is_positive(saisies.get('REAMOR', 0)) + is_positive(saisies.get('REAMORNB', 0)) + is_positive(saisies.get('REVACT', 0)) + is_positive(saisies.get('REVACTNB', 0)) + is_positive(saisies.get('REVPEA', 0)) + is_positive(saisies.get('REVPEANB', 0)) + is_positive(saisies.get('PROVIE', 0)) + is_positive(saisies.get('PROVIENB', 0)) + is_positive(saisies.get('DISQUO', 0)) + is_positive(saisies.get('DISQUONB', 0)) + is_positive(saisies.get('RESTUC', 0)) + is_positive(saisies.get('RESTUCNB', 0)) + is_positive(saisies.get('INTERE', 0)) + is_positive(saisies.get('INTERENB', 0)) + is_positive(_4BACREV) + is_positive(_4BAHREV) + is_positive(_4BACREC) + is_positive(_4BAHREC) + is_positive(_4BACREP) + is_positive(_4BAHREP) + is_positive(saisies.get('CODRAZ', 0)) + is_positive(saisies.get('CODRBZ', 0)) + is_positive(saisies.get('CODRCZ', 0)) + is_positive(saisies.get('CODRDZ', 0)) + is_positive(saisies.get('CODREZ', 0)) + is_positive(saisies.get('CODRFZ', 0)) + is_positive(saisies.get('CODNAZ', 0)) + is_positive(saisies.get('CODNBZ', 0)) + is_positive(saisies.get('CODNCZ', 0)) + is_positive(saisies.get('CODNDZ', 0)) + is_positive(saisies.get('CODNEZ', 0)) + is_positive(saisies.get('CODNFZ', 0)) + is_positive(saisies.get('CODRVG', 0)) + is_positive(saisies.get('CODNVG', 0)) + 0
SOMMEBA = saisies.get('BAFV', 0) + saisies.get('BAFC', 0) + saisies.get('BAFP', 0) + saisies.get('BAFORESTV', 0) + saisies.get('BAFORESTC', 0) + saisies.get('BAFORESTP', 0) + saisies.get('BAFPVV', 0) + saisies.get('BAFPVC', 0) + saisies.get('BAFPVP', 0) + saisies.get('BACREV', 0) + saisies.get('BAHREV', 0) + saisies.get('BACREC', 0) + saisies.get('BAHREC', 0) + saisies.get('BACREP', 0) + saisies.get('BAHREP', 0) + 0
SOMMEBIC = saisies.get('MIBNPVENV', 0) + saisies.get('MIBNPVENC', 0) + saisies.get('MIBNPVENP', 0) + saisies.get('MIBNPPRESV', 0) + saisies.get('MIBNPPRESC', 0) + saisies.get('MIBNPPRESP', 0) + saisies.get('MIBNPPVV', 0) + saisies.get('MIBNPPVC', 0) + saisies.get('MIBNPPVP', 0) + saisies.get('BICREV', 0) + saisies.get('BICHREV', 0) + saisies.get('BICREC', 0) + saisies.get('BICHREC', 0) + saisies.get('BICREP', 0) + saisies.get('BICHREP', 0) + 0
SOMMEBNC = saisies.get('BNCNPV', 0) + saisies.get('BNCNPC', 0) + saisies.get('BNCNPP', 0) + saisies.get('BNCNPPVV', 0) + saisies.get('BNCNPPVC', 0) + saisies.get('BNCNPPVP', 0) + saisies.get('BNCAABV', 0) + saisies.get('ANOCEP', 0) + saisies.get('BNCAABC', 0) + saisies.get('ANOVEP', 0) + saisies.get('BNCAABP', 0) + saisies.get('ANOPEP', 0) + 0
SOMMEDD55 = sum([present(saisies.get('TSHALLO1', 0)) + present(saisies.get('ALLO1', 0)) + present(saisies.get('PRBR1', 0)) + present(saisies.get('PALI1', 0)) + present(saisies.get('PENIN1', 0)), present(saisies.get('TSHALLO2', 0)) + present(saisies.get('ALLO2', 0)) + present(saisies.get('PRBR2', 0)) + present(saisies.get('PALI2', 0)) + present(saisies.get('PENIN2', 0)), present(saisies.get('TSHALLO3', 0)) + present(saisies.get('ALLO3', 0)) + present(saisies.get('PRBR3', 0)) + present(saisies.get('PALI3', 0)) + present(saisies.get('PENIN3', 0)), present(saisies.get('TSHALLO4', 0)) + present(saisies.get('ALLO4', 0)) + present(saisies.get('PRBR4', 0)) + present(saisies.get('PALI4', 0)) + present(saisies.get('PENIN4', 0)), present(saisies.get('TSHALLOV', 0)) + present(saisies.get('ALLOV', 0)) + present(saisies.get('PRBRV', 0)) + present(saisies.get('PALIV', 0)) + present(saisies.get('PENINV', 0)), present(saisies.get('TSHALLOC', 0)) + present(saisies.get('ALLOC', 0)) + present(saisies.get('PRBRC', 0)) + present(saisies.get('PALIC', 0)) + present(saisies.get('PENINC', 0))]) + present(saisies.get('CARTSV', 0)) + present(saisies.get('CARTSC', 0)) + present(saisies.get('CARTSP1', 0)) + present(saisies.get('CARTSP2', 0)) + present(saisies.get('CARTSP3', 0)) + present(saisies.get('CARTSP4', 0)) + present(saisies.get('CARTSNBAV', 0)) + present(saisies.get('CARTSNBAC', 0)) + present(saisies.get('CARTSNBAP1', 0)) + present(saisies.get('CARTSNBAP2', 0)) + present(saisies.get('CARTSNBAP3', 0)) + present(saisies.get('CARTSNBAP4', 0)) + present(saisies.get('REMPLAV', 0)) + present(saisies.get('REMPLAC', 0)) + present(saisies.get('REMPLAP1', 0)) + present(saisies.get('REMPLAP2', 0)) + present(saisies.get('REMPLAP3', 0)) + present(saisies.get('REMPLAP4', 0)) + present(saisies.get('REMPLANBV', 0)) + present(saisies.get('REMPLANBC', 0)) + present(saisies.get('REMPLANBP1', 0)) + present(saisies.get('REMPLANBP2', 0)) + present(saisies.get('REMPLANBP3', 0)) + present(saisies.get('REMPLANBP4', 0)) + present(saisies.get('CARPEV', 0)) + present(saisies.get('CARPEC', 0)) + present(saisies.get('CARPEP1', 0)) + present(saisies.get('CARPEP2', 0)) + present(saisies.get('CARPEP3', 0)) + present(saisies.get('CARPEP4', 0)) + present(saisies.get('CARPENBAV', 0)) + present(saisies.get('CARPENBAC', 0)) + present(saisies.get('CARPENBAP1', 0)) + present(saisies.get('CARPENBAP2', 0)) + present(saisies.get('CARPENBAP3', 0)) + present(saisies.get('CARPENBAP4', 0)) + present(saisies.get('PENSALV', 0)) + present(saisies.get('PENSALC', 0)) + present(saisies.get('PENSALP1', 0)) + present(saisies.get('PENSALP2', 0)) + present(saisies.get('PENSALP3', 0)) + present(saisies.get('PENSALP4', 0)) + present(saisies.get('PENSALNBV', 0)) + present(saisies.get('PENSALNBC', 0)) + present(saisies.get('PENSALNBP1', 0)) + present(saisies.get('PENSALNBP2', 0)) + present(saisies.get('PENSALNBP3', 0)) + present(saisies.get('PENSALNBP4', 0)) + present(saisies.get('PCAPTAXV', 0)) + present(saisies.get('PCAPTAXC', 0)) + present(saisies.get('CODRAZ', 0)) + present(saisies.get('CODRBZ', 0)) + present(saisies.get('CODRCZ', 0)) + present(saisies.get('CODRDZ', 0)) + present(saisies.get('CODREZ', 0)) + present(saisies.get('CODRFZ', 0)) + present(saisies.get('BACREV', 0)) + present(_4BACREV) + present(saisies.get('BA1AV', 0)) + present(saisies.get('BACDEV', 0)) + present(saisies.get('BACREC', 0)) + present(_4BACREC) + present(saisies.get('BA1AC', 0)) + present(saisies.get('BACDEC', 0)) + present(saisies.get('BACREP', 0)) + present(_4BACREP) + present(saisies.get('BA1AP', 0)) + present(saisies.get('BACDEP', 0)) + present(saisies.get('BAHREV', 0)) + present(_4BAHREV) + present(saisies.get('BAHDEV', 0)) + present(saisies.get('BAHREC', 0)) + present(_4BAHREC) + present(saisies.get('BAHDEC', 0)) + present(saisies.get('BAHREP', 0)) + present(_4BAHREP) + present(saisies.get('BAHDEP', 0)) + present(saisies.get('BICNOV', 0)) + present(saisies.get('BI1AV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('BICNOC', 0)) + present(saisies.get('BI1AC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('BICNOP', 0)) + present(saisies.get('BI1AP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('BIHDNV', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('BIHDNC', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('BIHDNP', 0)) + present(saisies.get('MIBVENV', 0)) + present(saisies.get('MIBPRESV', 0)) + present(saisies.get('MIB1AV', 0)) + present(saisies.get('MIBDEV', 0)) + present(saisies.get('MIBVENC', 0)) + present(saisies.get('MIBPRESC', 0)) + present(saisies.get('MIB1AC', 0)) + present(saisies.get('MIBDEC', 0)) + present(saisies.get('MIBVENP', 0)) + present(saisies.get('MIBPRESP', 0)) + present(saisies.get('MIB1AP', 0)) + present(saisies.get('MIBDEP', 0)) + present(saisies.get('LOCPROCGAV', 0)) + present(saisies.get('LOCDEFPROCGAV', 0)) + present(saisies.get('LOCPROCGAC', 0)) + present(saisies.get('LOCDEFPROCGAC', 0)) + present(saisies.get('LOCPROCGAP', 0)) + present(saisies.get('LOCDEFPROCGAP', 0)) + present(saisies.get('LOCPROV', 0)) + present(saisies.get('LOCDEFPROV', 0)) + present(saisies.get('LOCPROC', 0)) + present(saisies.get('LOCDEFPROC', 0)) + present(saisies.get('LOCPROP', 0)) + present(saisies.get('LOCDEFPROP', 0)) + present(saisies.get('BICREV', 0)) + present(saisies.get('LOCNPCGAV', 0)) + present(saisies.get('BI2AV', 0)) + present(saisies.get('BICDEV', 0)) + present(saisies.get('LOCDEFNPCGAV', 0)) + present(saisies.get('BICREC', 0)) + present(saisies.get('LOCNPCGAC', 0)) + present(saisies.get('BI2AC', 0)) + present(saisies.get('BICDEC', 0)) + present(saisies.get('LOCDEFNPCGAC', 0)) + present(saisies.get('BICREP', 0)) + present(saisies.get('LOCNPCGAPAC', 0)) + present(saisies.get('BI2AP', 0)) + present(saisies.get('BICDEP', 0)) + present(saisies.get('LOCDEFNPCGAPAC', 0)) + present(saisies.get('BICHREV', 0)) + present(saisies.get('LOCNPV', 0)) + present(saisies.get('BICHDEV', 0)) + present(saisies.get('LOCDEFNPV', 0)) + present(saisies.get('BICHREC', 0)) + present(saisies.get('LOCNPC', 0)) + present(saisies.get('BICHDEC', 0)) + present(saisies.get('LOCDEFNPC', 0)) + present(saisies.get('BICHREP', 0)) + present(saisies.get('LOCNPPAC', 0)) + present(saisies.get('BICHDEP', 0)) + present(saisies.get('LOCDEFNPPAC', 0)) + present(saisies.get('MIBNPVENV', 0)) + present(saisies.get('MIBNPPRESV', 0)) + present(saisies.get('MIBNP1AV', 0)) + present(saisies.get('MIBNPDEV', 0)) + present(saisies.get('MIBNPVENC', 0)) + present(saisies.get('MIBNPPRESC', 0)) + present(saisies.get('MIBNP1AC', 0)) + present(saisies.get('MIBNPDEC', 0)) + present(saisies.get('MIBNPVENP', 0)) + present(saisies.get('MIBNPPRESP', 0)) + present(saisies.get('MIBNP1AP', 0)) + present(saisies.get('MIBNPDEP', 0)) + present(saisies.get('MIBMEUV', 0)) + present(saisies.get('MIBGITEV', 0)) + present(saisies.get('MIBMEUC', 0)) + present(saisies.get('MIBGITEC', 0)) + present(saisies.get('MIBMEUP', 0)) + present(saisies.get('MIBGITEP', 0)) + present(saisies.get('LOCGITCV', 0)) + present(saisies.get('LOCGITCC', 0)) + present(saisies.get('LOCGITCP', 0)) + present(saisies.get('LOCGITHCV', 0)) + present(saisies.get('LOCGITHCC', 0)) + present(saisies.get('LOCGITHCP', 0)) + present(saisies.get('LOCGITV', 0)) + present(saisies.get('LOCGITC', 0)) + present(saisies.get('LOCGITP', 0)) + present(saisies.get('BNCREV', 0)) + present(saisies.get('BN1AV', 0)) + present(saisies.get('BNCDEV', 0)) + present(saisies.get('BNCREC', 0)) + present(saisies.get('BN1AC', 0)) + present(saisies.get('BNCDEC', 0)) + present(saisies.get('BNCREP', 0)) + present(saisies.get('BN1AP', 0)) + present(saisies.get('BNCDEP', 0)) + present(saisies.get('BNHREV', 0)) + present(saisies.get('BNHDEV', 0)) + present(saisies.get('BNHREC', 0)) + present(saisies.get('BNHDEC', 0)) + present(saisies.get('BNHREP', 0)) + present(saisies.get('BNHDEP', 0)) + present(saisies.get('BNCPROV', 0)) + present(saisies.get('BNCPRO1AV', 0)) + present(saisies.get('BNCPRODEV', 0)) + present(saisies.get('BNCPROC', 0)) + present(saisies.get('BNCPRO1AC', 0)) + present(saisies.get('BNCPRODEC', 0)) + present(saisies.get('BNCPROP', 0)) + present(saisies.get('BNCPRO1AP', 0)) + present(saisies.get('BNCPRODEP', 0)) + present(saisies.get('BNCNPV', 0)) + present(saisies.get('BNCNP1AV', 0)) + present(saisies.get('BNCNPDEV', 0)) + present(saisies.get('BNCNPC', 0)) + present(saisies.get('BNCNP1AC', 0)) + present(saisies.get('BNCNPDEC', 0)) + present(saisies.get('BNCNPP', 0)) + present(saisies.get('BNCNP1AP', 0)) + present(saisies.get('BNCNPDEP', 0)) + present(saisies.get('BNCAABV', 0)) + present(saisies.get('ANOCEP', 0)) + present(saisies.get('PVINVE', 0)) + present(saisies.get('BNCAADV', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('BNCAABC', 0)) + present(saisies.get('ANOVEP', 0)) + present(saisies.get('PVINCE', 0)) + present(saisies.get('BNCAADC', 0)) + present(saisies.get('DNOCEPC', 0)) + present(saisies.get('BNCAABP', 0)) + present(saisies.get('ANOPEP', 0)) + present(saisies.get('PVINPE', 0)) + present(saisies.get('BNCAADP', 0)) + present(saisies.get('DNOCEPP', 0)) + present(saisies.get('INVENTV', 0)) + present(saisies.get('INVENTC', 0)) + present(saisies.get('INVENTP', 0))
SOMMELOC = saisies.get('MIBMEUV', 0) + saisies.get('MIBMEUC', 0) + saisies.get('MIBMEUP', 0) + saisies.get('MIBGITEV', 0) + saisies.get('MIBGITEC', 0) + saisies.get('MIBGITEP', 0) + saisies.get('LOCGITV', 0) + saisies.get('LOCGITC', 0) + saisies.get('LOCGITP', 0) + saisies.get('LOCNPCGAV', 0) + saisies.get('LOCNPV', 0) + saisies.get('LOCNPCGAC', 0) + saisies.get('LOCNPC', 0) + saisies.get('LOCNPCGAPAC', 0) + saisies.get('LOCNPPAC', 0) + saisies.get('LOCGITCV', 0) + saisies.get('LOCGITHCV', 0) + saisies.get('LOCGITCC', 0) + saisies.get('LOCGITHCC', 0) + saisies.get('LOCGITCP', 0) + saisies.get('LOCGITHCP', 0) + 0
SOMMEMOND_2 = 0
SOMMERCM = saisies.get('RCMAV', 0) + saisies.get('RCMABD', 0) + saisies.get('RCMTNC', 0) + saisies.get('REGPRIV', 0) + saisies.get('RCMHAB', 0) + saisies.get('RCMHAD', 0) + saisies.get('PROVIE', 0) + saisies.get('REVACT', 0) + saisies.get('REVPEA', 0) + saisies.get('RESTUC', 0) + saisies.get('INTERE', 0) + saisies.get('DISQUO', 0) + 0
SOMMERF = saisies.get('RFORDI', 0) + saisies.get('RFMIC', 0) + saisies.get('FONCI', 0) + saisies.get('REAMOR', 0) + 0
SPEDREPC = saisies.get('BNCPRODEC', 0) - saisies.get('BNCPRO1AC', 0) * is_positive(saisies.get('BNCPRODEC', 0) - saisies.get('BNCPRO1AC', 0)) - saisies.get('BNCNP1AC', 0) - saisies.get('BNCNPDEC', 0) * is_positive(saisies.get('BNCNP1AC', 0) - saisies.get('BNCNPDEC', 0)) * is_positive(saisies.get('BNCPRODEC', 0) - saisies.get('BNCPRO1AC', 0) * is_positive(saisies.get('BNCPRODEC', 0) - saisies.get('BNCPRO1AC', 0)) - saisies.get('BNCNP1AC', 0) - saisies.get('BNCNPDEC', 0) * is_positive(saisies.get('BNCNP1AC', 0) - saisies.get('BNCNPDEC', 0)))
SPEDREPNPC = saisies.get('BNCNPDEC', 0) - saisies.get('BNCNP1AC', 0) * is_positive(saisies.get('BNCNPDEC', 0) - saisies.get('BNCNP1AC', 0)) - saisies.get('BNCPRO1AC', 0) - saisies.get('BNCPRODEC', 0) * is_positive(saisies.get('BNCPRO1AC', 0) - saisies.get('BNCPRODEC', 0)) * is_positive(saisies.get('BNCNPDEC', 0) - saisies.get('BNCNP1AC', 0) * is_positive(saisies.get('BNCNPDEC', 0) - saisies.get('BNCNP1AC', 0)) - saisies.get('BNCPRO1AC', 0) - saisies.get('BNCPRODEC', 0) * is_positive(saisies.get('BNCPRO1AC', 0) - saisies.get('BNCPRODEC', 0)))
SPEDREPNPP = saisies.get('BNCNPDEP', 0) - saisies.get('BNCNP1AP', 0) * is_positive(saisies.get('BNCNPDEP', 0) - saisies.get('BNCNP1AP', 0)) - saisies.get('BNCPRO1AP', 0) - saisies.get('BNCPRODEP', 0) * is_positive(saisies.get('BNCPRO1AP', 0) - saisies.get('BNCPRODEP', 0)) * is_positive(saisies.get('BNCNPDEP', 0) - saisies.get('BNCNP1AP', 0) * is_positive(saisies.get('BNCNPDEP', 0) - saisies.get('BNCNP1AP', 0)) - saisies.get('BNCPRO1AP', 0) - saisies.get('BNCPRODEP', 0) * is_positive(saisies.get('BNCPRO1AP', 0) - saisies.get('BNCPRODEP', 0)))
SPEDREPNPV = saisies.get('BNCNPDEV', 0) - saisies.get('BNCNP1AV', 0) * is_positive(saisies.get('BNCNPDEV', 0) - saisies.get('BNCNP1AV', 0)) - saisies.get('BNCPRO1AV', 0) - saisies.get('BNCPRODEV', 0) * is_positive(saisies.get('BNCPRO1AV', 0) - saisies.get('BNCPRODEV', 0)) * is_positive(saisies.get('BNCNPDEV', 0) - saisies.get('BNCNP1AV', 0) * is_positive(saisies.get('BNCNPDEV', 0) - saisies.get('BNCNP1AV', 0)) - saisies.get('BNCPRO1AV', 0) - saisies.get('BNCPRODEV', 0) * is_positive(saisies.get('BNCPRO1AV', 0) - saisies.get('BNCPRODEV', 0)))
SPEDREPP = saisies.get('BNCPRODEP', 0) - saisies.get('BNCPRO1AP', 0) * is_positive(saisies.get('BNCPRODEP', 0) - saisies.get('BNCPRO1AP', 0)) - saisies.get('BNCNP1AP', 0) - saisies.get('BNCNPDEP', 0) * is_positive(saisies.get('BNCNP1AP', 0) - saisies.get('BNCNPDEP', 0)) * is_positive(saisies.get('BNCPRODEP', 0) - saisies.get('BNCPRO1AP', 0) * is_positive(saisies.get('BNCPRODEP', 0) - saisies.get('BNCPRO1AP', 0)) - saisies.get('BNCNP1AP', 0) - saisies.get('BNCNPDEP', 0) * is_positive(saisies.get('BNCNP1AP', 0) - saisies.get('BNCNPDEP', 0)))
SPEDREPV = saisies.get('BNCPRODEV', 0) - saisies.get('BNCPRO1AV', 0) * is_positive(saisies.get('BNCPRODEV', 0) - saisies.get('BNCPRO1AV', 0)) - saisies.get('BNCNP1AV', 0) - saisies.get('BNCNPDEV', 0) * is_positive(saisies.get('BNCNP1AV', 0) - saisies.get('BNCNPDEV', 0)) * is_positive(saisies.get('BNCPRODEV', 0) - saisies.get('BNCPRO1AV', 0) * is_positive(saisies.get('BNCPRODEV', 0) - saisies.get('BNCPRO1AV', 0)) - saisies.get('BNCNP1AV', 0) - saisies.get('BNCNPDEV', 0) * is_positive(saisies.get('BNCNP1AV', 0) - saisies.get('BNCNPDEV', 0)))
SPENET = sum([SPENETV, SPENETC, SPENETP])
SPENETCT = saisies.get('BNCPROPVV', 0) + saisies.get('BNCPROPVC', 0) + saisies.get('BNCPROPVP', 0) - saisies.get('BNCPMVCTV', 0) - saisies.get('BNCPMVCTC', 0) - saisies.get('BNCPMVCTP', 0)
SPENETNPCT = saisies.get('BNCNPPVV', 0) + saisies.get('BNCNPPVC', 0) + saisies.get('BNCNPPVP', 0) - saisies.get('BNCNPDCT', 0)
SPENETNPF = sum([SPENETNPV, SPENETNPC, SPENETNPP]) + SPENETNPCT
SPENETPF = sum([SPENETPV, SPENETPC, SPENETPP]) + SPENETCT
SPEPV = sum([max(0, SPEPVPV + SPEPVNPV), max(0, SPEPVPC + SPEPVNPC), max(0, SPEPVPP + SPEPVNPP)])
SPEPVNPC = saisies.get('BNCNP1AC', 0) - saisies.get('BNCNPDEC', 0)
SPEPVNPP = saisies.get('BNCNP1AP', 0) - saisies.get('BNCNPDEP', 0)
SPEPVNPV = saisies.get('BNCNP1AV', 0) - saisies.get('BNCNPDEV', 0)
SPEPVPC = saisies.get('BNCPRO1AC', 0) - saisies.get('BNCPRODEC', 0)
SPEPVPP = saisies.get('BNCPRO1AP', 0) - saisies.get('BNCPRODEP', 0)
SPEPVPV = saisies.get('BNCPRO1AV', 0) - saisies.get('BNCPRODEV', 0)
SPETOTC = saisies.get('BNCPROC', 0) + saisies.get('BNCNPC', 0)
SPETOTP = saisies.get('BNCPROP', 0) + saisies.get('BNCNPP', 0)
SPETOTV = saisies.get('BNCPROV', 0) + saisies.get('BNCNPV', 0)
SURIMP = saisies.get('IPSURSI', 0)
T2PRB1 = saisies.get('CARPEP1', 0) + saisies.get('PENSALP1', 0) + saisies.get('CODRCZ', 0)
T2PRB2 = saisies.get('CARPEP2', 0) + saisies.get('PENSALP2', 0) + saisies.get('CODRDZ', 0)
T2PRB3 = saisies.get('CARPEP3', 0) + saisies.get('PENSALP3', 0) + saisies.get('CODREZ', 0)
T2PRB4 = saisies.get('CARPEP4', 0) + saisies.get('PENSALP4', 0) + saisies.get('CODRFZ', 0)
T2PRBC = saisies.get('CARPEC', 0) + saisies.get('PENSALC', 0) + saisies.get('CODRBZ', 0)
T2PRBV = saisies.get('CARPEV', 0) + saisies.get('PENSALV', 0) + saisies.get('CODRAZ', 0)
T2TSN1 = saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)
T2TSN2 = saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)
T2TSN3 = saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)
T2TSN4 = saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)
T2TSNC = saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0)
T2TSNV = saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0)
TALLOP = saisies.get('ALLO1', 0) + saisies.get('ALLO2', 0) + saisies.get('ALLO3', 0) + saisies.get('ALLO4', 0)
TAUX1 = TX_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + TX_BAR1A * saisies.get('V_ANC_BAR', 0) - TX_BAR0
TAUX2 = TX_BAR2 - TX_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + TX_BAR1A * saisies.get('V_ANC_BAR', 0)
TAUX3 = TX_BAR3 - TX_BAR2
TAUX4 = TX_BAR4 - TX_BAR3
TAUX5 = TX_BAR5 - TX_BAR4
TAXABASE_A = 0
TAXABASE_IRECT = 0
TAXADEG = 0
TAXANTAFF = 0
TAXLOY = saisies.get('LOYELEV', 0)
TAXLOYANTAFF = 0
TAXLOYDEG = 0
TDEDMIN1 = is_positive(saisies.get('DETS1', 0)) * MIN_DEMEMPLOI + 1 - is_positive(saisies.get('DETS1', 0)) * MIN_DEDSFORFTS
TDEDMIN2 = is_positive(saisies.get('DETS2', 0)) * MIN_DEMEMPLOI + 1 - is_positive(saisies.get('DETS2', 0)) * MIN_DEDSFORFTS
TDEDMIN3 = is_positive(saisies.get('DETS3', 0)) * MIN_DEMEMPLOI + 1 - is_positive(saisies.get('DETS3', 0)) * MIN_DEDSFORFTS
TDEDMIN4 = is_positive(saisies.get('DETS4', 0)) * MIN_DEMEMPLOI + 1 - is_positive(saisies.get('DETS4', 0)) * MIN_DEDSFORFTS
TDEDMINC = is_positive(saisies.get('DETSC', 0)) * MIN_DEMEMPLOI + 1 - is_positive(saisies.get('DETSC', 0)) * MIN_DEDSFORFTS
TDEDMINV = is_positive(saisies.get('DETSV', 0)) * MIN_DEMEMPLOI + 1 - is_positive(saisies.get('DETSV', 0)) * MIN_DEDSFORFTS
TEFFREVTOT3 = 0
TFRDPROV11731 = 0
TFRDPROV1P2 = 0
TFRDPROV21731 = 0
TFRDPROV2P2 = 0
TFRDPROV31731 = 0
TFRDPROV3P2 = 0
TFRDPROVC1731 = 0
TFRDPROVCP2 = 0
TFRDPROVP1731 = 0
TFRDPROVPP2 = 0
TFRDPROVV1731 = 0
TFRDPROVVP2 = 0
TFRNRET1 = 0
TFRNRET2 = 0
TFRNRET3 = 0
TFRNRET4 = 0
TFRNRETC = 0
TFRNRETV = 0
TGATASAC = saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0)
TGATASAV = saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0)
TGLFTOT = sum([TGLFV, TGLFC, TGLF1, TGLF2, TGLF3, TGLF4])
TGLFTOTM = sum([TGLFVM, TGLFCM, TGLF1M, TGLF2M, TGLF3M, TGLF4M])
TGLPALIMTOT = sum([TGLPALIMV, TGLPALIMC, TGLPALIM1, TGLPALIM2, TGLPALIM3, TGLPALIM4])
TGLPALIMTOTM = sum([TGLPALIMVM, TGLPALIMCM, TGLPALIM1M, TGLPALIM2M, TGLPALIM3M, TGLPALIM4M])
TGLPRRTOT = sum([TGLPRRV + TGLPRRZV, TGLPRRC + TGLPRRZC, TGLPRR1 + TGLPRRZ1, TGLPRR2 + TGLPRRZ2, TGLPRR3 + TGLPRRZ3, TGLPRR4 + TGLPRRZ4])
TGLPRRTOTM = sum([TGLPRRVM + TGLPRRZVM, TGLPRRCM + TGLPRRZCM, TGLPRR1M + TGLPRRZ1M, TGLPRR2M + TGLPRRZ2M, TGLPRR3M + TGLPRRZ3M, TGLPRR4M + TGLPRRZ4M])
TGLTSREMPTOT = sum([TGLTSREMPV, TGLTSREMPC, TGLTSREMP1, TGLTSREMP2, TGLTSREMP3, TGLTSREMP4])
TGLTSREMPTOTM = sum([TGLTSREMPVM, TGLTSREMPCM, TGLTSREMP1M, TGLTSREMP2M, TGLTSREMP3M, TGLTSREMP4M])
TGLTSTOT = sum([TGLTSV, TGLTSC, TGLTS1, TGLTS2, TGLTS3, TGLTS4])
TGLTSTOTM = sum([TGLTSVM, TGLTSCM, TGLTS1M, TGLTS2M, TGLTS3M, TGLTS4M])
TMIBNETNPPF = sum([TMIB_NETNPPV, TMIB_NETNPPC, TMIB_NETNPPP])
TMIBNETNPVF = sum([TMIB_NETNPVV, TMIB_NETNPVC, TMIB_NETNPVP])
TMIBNETPF = sum([TMIB_NETPV, TMIB_NETPC, TMIB_NETPP])
TMIBNETVF = sum([TMIB_NETVV, TMIB_NETVC, TMIB_NETVP])
TMIB_PRESAC = min(saisies.get('MIBPRESC', 0) + saisies.get('MIBNPPRESC', 0), max(MIN_MBIC, round(saisies.get('MIBPRESC', 0) + saisies.get('MIBNPPRESC', 0) * TX_MIBPRES / 100)))
TMIB_PRESAP = min(saisies.get('MIBPRESP', 0) + saisies.get('MIBNPPRESP', 0), max(MIN_MBIC, round(saisies.get('MIBPRESP', 0) + saisies.get('MIBNPPRESP', 0) * TX_MIBPRES / 100)))
TMIB_PRESAV = min(saisies.get('MIBPRESV', 0) + saisies.get('MIBNPPRESV', 0), max(MIN_MBIC, round(saisies.get('MIBPRESV', 0) + saisies.get('MIBNPPRESV', 0) * TX_MIBPRES / 100)))
TMIB_TPRESC = saisies.get('MIBPRESC', 0) + saisies.get('AUTOBICPC', 0) + saisies.get('MIBNPPRESC', 0) + saisies.get('MIBMEUC', 0)
TMIB_TPRESP = saisies.get('MIBPRESP', 0) + saisies.get('AUTOBICPP', 0) + saisies.get('MIBNPPRESP', 0) + saisies.get('MIBMEUP', 0)
TMIB_TPRESV = saisies.get('MIBPRESV', 0) + saisies.get('AUTOBICPV', 0) + saisies.get('MIBNPPRESV', 0) + saisies.get('MIBMEUV', 0)
TMIB_TVENC = saisies.get('MIBVENC', 0) + saisies.get('AUTOBICVC', 0) + saisies.get('MIBNPVENC', 0) + saisies.get('MIBGITEC', 0) + saisies.get('LOCGITC', 0)
TMIB_TVENP = saisies.get('MIBVENP', 0) + saisies.get('AUTOBICVP', 0) + saisies.get('MIBNPVENP', 0) + saisies.get('MIBGITEP', 0) + saisies.get('LOCGITP', 0)
TMIB_TVENV = saisies.get('MIBVENV', 0) + saisies.get('AUTOBICVV', 0) + saisies.get('MIBNPVENV', 0) + saisies.get('MIBGITEV', 0) + saisies.get('LOCGITV', 0)
TMIB_VENTAC = min(saisies.get('MIBVENC', 0) + saisies.get('MIBNPVENC', 0), max(MIN_MBIC, round(saisies.get('MIBVENC', 0) + saisies.get('MIBNPVENC', 0) * TX_MIBVEN / 100)))
TMIB_VENTAP = min(saisies.get('MIBVENP', 0) + saisies.get('MIBNPVENP', 0), max(MIN_MBIC, round(saisies.get('MIBVENP', 0) + saisies.get('MIBNPVENP', 0) * TX_MIBVEN / 100)))
TMIB_VENTAV = min(saisies.get('MIBVENV', 0) + saisies.get('MIBNPVENV', 0), max(MIN_MBIC, round(saisies.get('MIBVENV', 0) + saisies.get('MIBNPVENV', 0) * TX_MIBVEN / 100)))
TOTALQUO1731 = 0
TOTALQUOP2 = 0
TOTALQUO_P = 0
TOTCORSE = saisies.get('CIINVCORSE', 0) + saisies.get('IPREPCORSE', 0) + saisies.get('CICORSENOW', 0)
TOTCRA = saisies.get('V_ANTCR', 0)
TOTDABNCNP1731 = 0
TOTDEFLOCNP = saisies.get('LNPRODEF10', 0) + saisies.get('LNPRODEF9', 0) + saisies.get('LNPRODEF8', 0) + saisies.get('LNPRODEF7', 0) + saisies.get('LNPRODEF6', 0) + saisies.get('LNPRODEF5', 0) + saisies.get('LNPRODEF4', 0) + saisies.get('LNPRODEF3', 0) + saisies.get('LNPRODEF2', 0) + saisies.get('LNPRODEF1', 0)
TOTDEFLOCNP1731 = 0
TOTDEFLOCNPBIS = is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * saisies.get('LNPRODEF10', 0) + saisies.get('LNPRODEF9', 0) + saisies.get('LNPRODEF8', 0) + saisies.get('LNPRODEF7', 0) + saisies.get('LNPRODEF6', 0) + saisies.get('LNPRODEF5', 0) + saisies.get('LNPRODEF4', 0) + saisies.get('LNPRODEF3', 0) + saisies.get('LNPRODEF2', 0) + saisies.get('LNPRODEF1', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * max(0, min(saisies.get('LNPRODEF10', 0) + saisies.get('LNPRODEF9', 0) + saisies.get('LNPRODEF8', 0) + saisies.get('LNPRODEF7', 0) + saisies.get('LNPRODEF6', 0) + saisies.get('LNPRODEF5', 0) + saisies.get('LNPRODEF4', 0) + saisies.get('LNPRODEF3', 0) + saisies.get('LNPRODEF2', 0) + saisies.get('LNPRODEF1', 0), TOTDEFLOCNP1731 * ART1731BIS * 1 - PREM8_11 + saisies.get('LNPRODEF10', 0) + saisies.get('LNPRODEF9', 0) + saisies.get('LNPRODEF8', 0) + saisies.get('LNPRODEF7', 0) + saisies.get('LNPRODEF6', 0) + saisies.get('LNPRODEF5', 0) + saisies.get('LNPRODEF4', 0) + saisies.get('LNPRODEF3', 0) + saisies.get('LNPRODEF2', 0) + saisies.get('LNPRODEF1', 0) * 1 - is_positive(ART1731BIS * PREM8_11)))
TOTDEFLOCNPPS = saisies.get('LNPRODEF10', 0) + saisies.get('LNPRODEF9', 0) + saisies.get('LNPRODEF8', 0) + saisies.get('LNPRODEF7', 0) + saisies.get('LNPRODEF6', 0) + saisies.get('LNPRODEF5', 0) + saisies.get('LNPRODEF4', 0) + saisies.get('LNPRODEF3', 0) + saisies.get('LNPRODEF2', 0) + saisies.get('LNPRODEF1', 0)
TOTDEFNP = is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * DEFNP + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * ART1731BIS * min(DEFNP, DEFNPI1731) * 1 - PREM8_11 + 0 * PREM8_11 + min(DEFNP, DEFNPI1731) * 1 - ART1731BIS
TOTDLMRN = sum([DLMRN1, DLMRN2, DLMRN3, DLMRN4, DLMRN5, DLMRN6])
TOTIRPSANT = saisies.get('V_IRPSANT', 0) - saisies.get('V_NONMERANT', 0) + saisies.get('V_NONRESTANT', 0) - saisies.get('V_ANTRE', 0)
TOTPA = round(saisies.get('PAAV', 0) * MAJREV) + saisies.get('PAAP', 0)
TOTPAC = PPE_NB_PAC + PPE_NB_PAC_QAR
TPL_PB = round(PLAF_DEDPRFOYER - sum([TAPBV * TIND_APBV, TAPBC * TIND_APBC, TAPB1 * TIND_APB1, TAPB2 * TIND_APB2, TAPB3 * TIND_APB3, TAPB4 * TIND_APB4]))
TPMIB_APC = min(saisies.get('MIBPRESC', 0) + saisies.get('AUTOBICPC', 0), max(MIN_MBIC, round(saisies.get('MIBPRESC', 0) + saisies.get('AUTOBICPC', 0) * TX_MIBPRES / 100)))
TPMIB_APP = min(saisies.get('MIBPRESP', 0) + saisies.get('AUTOBICPP', 0), max(MIN_MBIC, round(saisies.get('MIBPRESP', 0) + saisies.get('AUTOBICPP', 0) * TX_MIBPRES / 100)))
TPMIB_APV = min(saisies.get('MIBPRESV', 0) + saisies.get('AUTOBICPV', 0), max(MIN_MBIC, round(saisies.get('MIBPRESV', 0) + saisies.get('AUTOBICPV', 0) * TX_MIBPRES / 100)))
TPMIB_AVC = min(saisies.get('MIBVENC', 0) + saisies.get('AUTOBICVC', 0), max(MIN_MBIC, round(saisies.get('MIBVENC', 0) + saisies.get('AUTOBICVC', 0) * TX_MIBVEN / 100)))
TPMIB_AVP = min(saisies.get('MIBVENP', 0) + saisies.get('AUTOBICVP', 0), max(MIN_MBIC, round(saisies.get('MIBVENP', 0) + saisies.get('AUTOBICVP', 0) * TX_MIBVEN / 100)))
TPMIB_AVV = min(saisies.get('MIBVENV', 0) + saisies.get('AUTOBICVV', 0), max(MIN_MBIC, round(saisies.get('MIBVENV', 0) + saisies.get('AUTOBICVV', 0) * TX_MIBVEN / 100)))
TPMIB_NETPC = saisies.get('MIBPRESC', 0) + saisies.get('AUTOBICPC', 0) - TPMIB_APC
TPMIB_NETPP = saisies.get('MIBPRESP', 0) + saisies.get('AUTOBICPP', 0) - TPMIB_APP
TPMIB_NETPV = saisies.get('MIBPRESV', 0) + saisies.get('AUTOBICPV', 0) - TPMIB_APV
TPMIB_NETVC = saisies.get('MIBVENC', 0) + saisies.get('AUTOBICVC', 0) - TPMIB_AVC
TPMIB_NETVP = saisies.get('MIBVENP', 0) + saisies.get('AUTOBICVP', 0) - TPMIB_AVP
TPMIB_NETVV = saisies.get('MIBVENV', 0) + saisies.get('AUTOBICVV', 0) - TPMIB_AVV
TPRB1 = saisies.get('PRBR1', 0) + saisies.get('PALI1', 0) + saisies.get('PENIN1', 0)
TPRB2 = saisies.get('PRBR2', 0) + saisies.get('PALI2', 0) + saisies.get('PENIN2', 0)
TPRB3 = saisies.get('PRBR3', 0) + saisies.get('PALI3', 0) + saisies.get('PENIN3', 0)
TPRB4 = saisies.get('PRBR4', 0) + saisies.get('PALI4', 0) + saisies.get('PENIN4', 0)
TPRBC = saisies.get('PRBRC', 0) + saisies.get('PALIC', 0) + saisies.get('PENINC', 0)
TPRBV = saisies.get('PRBRV', 0) + saisies.get('PALIV', 0) + saisies.get('PENINV', 0)
TR2_ISF = round(max(0, min(DISFBASE, LIM_TR2_ISF) - LIM_TR1_ISF) * TX_TR2_ISF / 10000)
TR3_ISF = round(max(0, min(DISFBASE, LIM_TR3_ISF) - LIM_TR2_ISF) * TX_TR3_ISF / 10000)
TR4_ISF = round(max(0, min(DISFBASE, LIM_TR4_ISF) - LIM_TR3_ISF) * TX_TR4_ISF / 100)
TR5_ISF = round(max(0, min(DISFBASE, LIM_TR5_ISF) - LIM_TR4_ISF) * TX_TR5_ISF / 10000)
TR6_ISF = round(max(0, DISFBASE - LIM_TR5_ISF) * TX_TR6_ISF / 1000)
TRAITINF20 = is_positive(20 - saisies.get('V_NOTRAIT', 0))
TRAITSUP20 = is_positive(saisies.get('V_NOTRAIT', 0) - 20)
TRCMABD = saisies.get('RCMABD', 0) + saisies.get('REVACT', 0)
TRPQRVO5M = 0
TSBN1 = saisies.get('TSHALLO1', 0) + saisies.get('ALLO1', 0)
TSBN2 = saisies.get('TSHALLO2', 0) + saisies.get('ALLO2', 0)
TSBN3 = saisies.get('TSHALLO3', 0) + saisies.get('ALLO3', 0)
TSBN4 = saisies.get('TSHALLO4', 0) + saisies.get('ALLO4', 0)
TSBNC = saisies.get('TSHALLOC', 0) + saisies.get('ALLOC', 0)
TSBNV = saisies.get('TSHALLOV', 0) + saisies.get('ALLOV', 0)
TSBP = sum([TSB1, TSB2, TSB3, TSB4])
TSHALLOP = saisies.get('TSHALLO1', 0) + saisies.get('TSHALLO2', 0) + saisies.get('TSHALLO3', 0) + saisies.get('TSHALLO4', 0)
TSN = 1 - is_positive(DEFTS) * sum([TPRV, TPRC, TPR1, TPR2, TPR3, TPR4]) - PRN * 1 - is_positive(saisies.get('APPLI_COLBERT', 0))
TSNN2P = sum([TSNN21, TSNN22, TSNN23, TSNN24])
TSNN2PAFF = sum([TSNN21AFF, TSNN22AFF, TSNN23AFF, TSNN24AFF])
TSPENET = sum([TSPENETV, TSPENETC, TSPENETP])
TSPETOTC = saisies.get('BNCPROC', 0) + saisies.get('AUTOBNCC', 0) + saisies.get('BNCNPC', 0)
TSPETOTP = saisies.get('BNCPROP', 0) + saisies.get('AUTOBNCP', 0) + saisies.get('BNCNPP', 0)
TSPETOTV = saisies.get('BNCPROV', 0) + saisies.get('AUTOBNCV', 0) + saisies.get('BNCNPV', 0)
TSPRDP = sum([TSPRD1, TSPRD2, TSPRD3, TSPRD4])
TSQPC = sum([_2TSN1, _2TSN2, _2TSN3, _2TSN4])
TTSBN1 = saisies.get('TSHALLO1', 0) + saisies.get('ALLO1', 0) + max(0, saisies.get('SALEXT1', 0) - saisies.get('COD1CD', 0))
TTSBN2 = saisies.get('TSHALLO2', 0) + saisies.get('ALLO2', 0) + max(0, saisies.get('SALEXT2', 0) - saisies.get('COD1DD', 0))
TTSBN3 = saisies.get('TSHALLO3', 0) + saisies.get('ALLO3', 0) + max(0, saisies.get('SALEXT3', 0) - saisies.get('COD1ED', 0))
TTSBN4 = saisies.get('TSHALLO4', 0) + saisies.get('ALLO4', 0) + max(0, saisies.get('SALEXT4', 0) - saisies.get('COD1FD', 0))
TTSBNC = saisies.get('TSHALLOC', 0) + saisies.get('ALLOC', 0) + max(0, saisies.get('SALEXTC', 0) - saisies.get('COD1BD', 0))
TTSBNV = saisies.get('TSHALLOV', 0) + saisies.get('ALLOV', 0) + max(0, saisies.get('SALEXTV', 0) - saisies.get('COD1AD', 0))
TTSBP = sum([TTSB1, TTSB2, TTSB3, TTSB4])
TTSHALLOP = saisies.get('TSHALLO1', 0) + saisies.get('TSHALLO2', 0) + saisies.get('TSHALLO3', 0) + saisies.get('TSHALLO4', 0)
TTSPRDP = sum([TTSPRD1, TTSPRD2, TTSPRD3, TTSPRD4])
TTSPRP = sum([TTSPR1, TTSPR2, TTSPR3, TTSPR4])
TXINRISF = 0
TXINRISF_A = 0
TXMOYIMPDEN5 = saisies.get('RCMLIB', 0)
TXMOYIMPDEN6 = saisies.get('CESSASSV', 0) + saisies.get('CESSASSC', 0) + BPCAPTAXV + BPCAPTAXC
TXPF1728 = 10 if (saisies.get('V_CODPF1728', 0) == 7 or saisies.get('V_CODPF1728', 0) == 10 or saisies.get('V_CODPF1728', 0) == 17 or saisies.get('V_CODPF1728', 0) == 18) else (40 if (saisies.get('V_CODPF1728', 0) == 8 or saisies.get('V_CODPF1728', 0) == 11) else (80 if (saisies.get('V_CODPF1728', 0) == 31) else 0))
TXPF1728CAP = 10 if (saisies.get('V_CODPF1728CAP', 0) == 7 or saisies.get('V_CODPF1728CAP', 0) == 10 or saisies.get('V_CODPF1728CAP', 0) == 17 or saisies.get('V_CODPF1728CAP', 0) == 18) else (40 if (saisies.get('V_CODPF1728CAP', 0) == 8 or saisies.get('V_CODPF1728CAP', 0) == 11) else (80 if (saisies.get('V_CODPF1728CAP', 0) == 31) else 0))
TXPF1728CDIS = 10 if (saisies.get('V_CODPF1728CDIS', 0) == 7 or saisies.get('V_CODPF1728CDIS', 0) == 10 or saisies.get('V_CODPF1728CDIS', 0) == 17 or saisies.get('V_CODPF1728CDIS', 0) == 18) else (40 if (saisies.get('V_CODPF1728CDIS', 0) == 8 or saisies.get('V_CODPF1728CDIS', 0) == 11) else (80 if (saisies.get('V_CODPF1728CDIS', 0) == 31) else 0))
TXPF1728CHR = 10 if (saisies.get('V_CODPF1728CHR', 0) == 7 or saisies.get('V_CODPF1728CHR', 0) == 10 or saisies.get('V_CODPF1728CHR', 0) == 17 or saisies.get('V_CODPF1728CHR', 0) == 18) else (40 if (saisies.get('V_CODPF1728CHR', 0) == 8 or saisies.get('V_CODPF1728CHR', 0) == 11) else (80 if (saisies.get('V_CODPF1728CRP', 0) == 31) else 0))
TXPF1728CRP = 10 if (saisies.get('V_CODPF1728CRP', 0) == 7 or saisies.get('V_CODPF1728CRP', 0) == 10 or saisies.get('V_CODPF1728CRP', 0) == 17 or saisies.get('V_CODPF1728CRP', 0) == 18) else (40 if (saisies.get('V_CODPF1728CRP', 0) == 8 or saisies.get('V_CODPF1728CRP', 0) == 11) else (80 if (saisies.get('V_CODPF1728CRP', 0) == 31) else 0))
TXPF1728CVN = 10 if (saisies.get('V_CODPF1728CVN', 0) == 7 or saisies.get('V_CODPF1728CVN', 0) == 10 or saisies.get('V_CODPF1728CVN', 0) == 17 or saisies.get('V_CODPF1728CVN', 0) == 18) else (40 if (saisies.get('V_CODPF1728CVN', 0) == 8 or saisies.get('V_CODPF1728CVN', 0) == 11) else (80 if (saisies.get('V_CODPF1728CVN', 0) == 31) else 0))
TXPF1728GLO = 10 if (saisies.get('V_CODPF1728GLO', 0) == 7 or saisies.get('V_CODPF1728GLO', 0) == 10 or saisies.get('V_CODPF1728GLO', 0) == 17 or saisies.get('V_CODPF1728GLO', 0) == 18) else (40 if (saisies.get('V_CODPF1728GLO', 0) == 8 or saisies.get('V_CODPF1728GLO', 0) == 11) else (80 if (saisies.get('V_CODPF1728GLO', 0) == 31) else 0))
TXPF1728ISF = 10 if (saisies.get('V_CODPF1728ISF', 0) == 7 or saisies.get('V_CODPF1728ISF', 0) == 17 or saisies.get('V_CODPF1728ISF', 0) == 18) else (40 if (saisies.get('V_CODPF1728ISF', 0) == 8 or saisies.get('V_CODPF1728ISF', 0) == 34) else 0)
TXPF1728LOY = 10 if (saisies.get('V_CODPF1728LOY', 0) == 7 or saisies.get('V_CODPF1728LOY', 0) == 10 or saisies.get('V_CODPF1728LOY', 0) == 17 or saisies.get('V_CODPF1728LOY', 0) == 18) else (40 if (saisies.get('V_CODPF1728LOY', 0) == 8 or saisies.get('V_CODPF1728LOY', 0) == 11) else (80 if (saisies.get('V_CODPF1728LOY', 0) == 31) else 0))
TXPF1728REGV = 0
TXPF1728RSE1 = 10 if (saisies.get('V_CODPF1728RSE1', 0) == 7 or saisies.get('V_CODPF1728RSE1', 0) == 10 or saisies.get('V_CODPF1728RSE1', 0) == 17 or saisies.get('V_CODPF1728RSE1', 0) == 18) else (40 if (saisies.get('V_CODPF1728RSE1', 0) == 8 or saisies.get('V_CODPF1728RSE1', 0) == 11) else (80 if (saisies.get('V_CODPF1728RSE1', 0) == 31) else 0))
TXPF1728RSE2 = 10 if (saisies.get('V_CODPF1728RSE2', 0) == 7 or saisies.get('V_CODPF1728RSE2', 0) == 10 or saisies.get('V_CODPF1728RSE2', 0) == 17 or saisies.get('V_CODPF1728RSE2', 0) == 18) else (40 if (saisies.get('V_CODPF1728RSE2', 0) == 8 or saisies.get('V_CODPF1728RSE2', 0) == 11) else (80 if (saisies.get('V_CODPF1728RSE2', 0) == 31) else 0))
TXPF1728RSE3 = 10 if (saisies.get('V_CODPF1728RSE3', 0) == 7 or saisies.get('V_CODPF1728RSE3', 0) == 10 or saisies.get('V_CODPF1728RSE3', 0) == 17 or saisies.get('V_CODPF1728RSE3', 0) == 18) else (40 if (saisies.get('V_CODPF1728RSE3', 0) == 8 or saisies.get('V_CODPF1728RSE3', 0) == 11) else (80 if (saisies.get('V_CODPF1728RSE3', 0) == 31) else 0))
TXPF1728RSE4 = 10 if (saisies.get('V_CODPF1728RSE4', 0) == 7 or saisies.get('V_CODPF1728RSE4', 0) == 10 or saisies.get('V_CODPF1728RSE4', 0) == 17 or saisies.get('V_CODPF1728RSE4', 0) == 18) else (40 if (saisies.get('V_CODPF1728RSE4', 0) == 8 or saisies.get('V_CODPF1728RSE4', 0) == 11) else (80 if (saisies.get('V_CODPF1728RSE4', 0) == 31) else 0))
TXPF1728RSE5 = 10 if (saisies.get('V_CODPF1728RSE5', 0) == 7 or saisies.get('V_CODPF1728RSE5', 0) == 10 or saisies.get('V_CODPF1728RSE5', 0) == 17 or saisies.get('V_CODPF1728RSE5', 0) == 18) else (40 if (saisies.get('V_CODPF1728RSE5', 0) == 8 or saisies.get('V_CODPF1728RSE5', 0) == 11) else (80 if (saisies.get('V_CODPF1728RSE5', 0) == 31) else 0))
TXPFI = 40 if (saisies.get('V_CODPFI', 0) == 3 or saisies.get('V_CODPFI', 0) == 30 or saisies.get('V_CODPFI', 0) == 55) else (80 if (saisies.get('V_CODPFI', 0) == 4 or saisies.get('V_CODPFI', 0) == 5 or saisies.get('V_CODPFI', 0) == 32) else (100 if (saisies.get('V_CODPFI', 0) == 6) else 0))
TXPFICAP = 40 if (saisies.get('V_CODPFICAP', 0) == 3 or saisies.get('V_CODPFICAP', 0) == 30 or saisies.get('V_CODPFICAP', 0) == 55) else (80 if (saisies.get('V_CODPFICAP', 0) == 4 or saisies.get('V_CODPFICAP', 0) == 5) else (100 if (saisies.get('V_CODPFICAP', 0) == 6) else 0))
TXPFICDIS = 40 if (saisies.get('V_CODPFICDIS', 0) == 3 or saisies.get('V_CODPFICDIS', 0) == 30 or saisies.get('V_CODPFICDIS', 0) == 55) else (80 if (saisies.get('V_CODPFICDIS', 0) == 4 or saisies.get('V_CODPFICDIS', 0) == 5) else (100 if (saisies.get('V_CODPFICDIS', 0) == 6) else 0))
TXPFICHR = 40 if (saisies.get('V_CODPFICHR', 0) == 3 or saisies.get('V_CODPFICHR', 0) == 30 or saisies.get('V_CODPFICHR', 0) == 55) else (80 if (saisies.get('V_CODPFICHR', 0) == 4 or saisies.get('V_CODPFICHR', 0) == 5 or saisies.get('V_CODPFICHR', 0) == 32) else (100 if (saisies.get('V_CODPFICHR', 0) == 6) else 0))
TXPFICRP = 40 if (saisies.get('V_CODPFICRP', 0) == 3 or saisies.get('V_CODPFICRP', 0) == 30 or saisies.get('V_CODPFICRP', 0) == 55) else (80 if (saisies.get('V_CODPFICRP', 0) == 4 or saisies.get('V_CODPFICRP', 0) == 5 or saisies.get('V_CODPFICRP', 0) == 32) else (100 if (saisies.get('V_CODPFICRP', 0) == 6) else 0))
TXPFICVN = 40 if (saisies.get('V_CODPFICVN', 0) == 3 or saisies.get('V_CODPFICVN', 0) == 30 or saisies.get('V_CODPFICVN', 0) == 55) else (80 if (saisies.get('V_CODPFICVN', 0) == 4 or saisies.get('V_CODPFICVN', 0) == 5) else (100 if (saisies.get('V_CODPFICVN', 0) == 6) else 0))
TXPFIGLO = 40 if (saisies.get('V_CODPFIGLO', 0) == 3 or saisies.get('V_CODPFIGLO', 0) == 30 or saisies.get('V_CODPFIGLO', 0) == 55) else (80 if (saisies.get('V_CODPFIGLO', 0) == 4 or saisies.get('V_CODPFIGLO', 0) == 5) else (100 if (saisies.get('V_CODPFIGLO', 0) == 6) else 0))
TXPFILOY = 40 if (saisies.get('V_CODPFILOY', 0) == 3 or saisies.get('V_CODPFILOY', 0) == 30 or saisies.get('V_CODPFILOY', 0) == 55) else (80 if (saisies.get('V_CODPFILOY', 0) == 4 or saisies.get('V_CODPFILOY', 0) == 5) else (100 if (saisies.get('V_CODPFILOY', 0) == 6) else 0))
TXPFIRSE1 = 40 if (saisies.get('V_CODPFIRSE1', 0) == 3 or saisies.get('V_CODPFIRSE1', 0) == 30 or saisies.get('V_CODPFIRSE1', 0) == 55) else (80 if (saisies.get('V_CODPFIRSE1', 0) == 4 or saisies.get('V_CODPFIRSE1', 0) == 5) else (100 if (saisies.get('V_CODPFIRSE1', 0) == 6) else 0))
TXPFIRSE2 = 40 if (saisies.get('V_CODPFIRSE2', 0) == 3 or saisies.get('V_CODPFIRSE2', 0) == 30 or saisies.get('V_CODPFIRSE2', 0) == 55) else (80 if (saisies.get('V_CODPFIRSE2', 0) == 4 or saisies.get('V_CODPFIRSE2', 0) == 5) else (100 if (saisies.get('V_CODPFIRSE2', 0) == 6) else 0))
TXPFIRSE3 = 40 if (saisies.get('V_CODPFIRSE3', 0) == 3 or saisies.get('V_CODPFIRSE3', 0) == 30 or saisies.get('V_CODPFIRSE3', 0) == 55) else (80 if (saisies.get('V_CODPFIRSE3', 0) == 4 or saisies.get('V_CODPFIRSE3', 0) == 5) else (100 if (saisies.get('V_CODPFIRSE3', 0) == 6) else 0))
TXPFIRSE4 = 40 if (saisies.get('V_CODPFIRSE4', 0) == 3 or saisies.get('V_CODPFIRSE4', 0) == 30 or saisies.get('V_CODPFIRSE4', 0) == 55) else (80 if (saisies.get('V_CODPFIRSE4', 0) == 4 or saisies.get('V_CODPFIRSE4', 0) == 5) else (100 if (saisies.get('V_CODPFIRSE4', 0) == 6) else 0))
TXPFIRSE5 = 40 if (saisies.get('V_CODPFIRSE5', 0) == 3 or saisies.get('V_CODPFIRSE5', 0) == 30 or saisies.get('V_CODPFIRSE5', 0) == 55) else (80 if (saisies.get('V_CODPFIRSE5', 0) == 4 or saisies.get('V_CODPFIRSE5', 0) == 5) else (100 if (saisies.get('V_CODPFIRSE5', 0) == 6) else 0))
TXPFITAXA = 40 if (saisies.get('V_CODPFITAXA', 0) == 3 or saisies.get('V_CODPFITAXA', 0) == 30 or saisies.get('V_CODPFITAXA', 0) == 55) else (80 if (saisies.get('V_CODPFITAXA', 0) == 4 or saisies.get('V_CODPFITAXA', 0) == 5) else (100 if (saisies.get('V_CODPFITAXA', 0) == 6) else 0))
TXSPEAAC = saisies.get('BNCREC', 0) + saisies.get('XHONOAAC', 0) - saisies.get('BNCDEC', 0) * 1 - is_positive(ART1731BIS)
TXSPEAAP = saisies.get('BNCREP', 0) + saisies.get('XHONOAAP', 0) - saisies.get('BNCDEP', 0) * 1 - is_positive(ART1731BIS)
TXSPEAAV = saisies.get('BNCREV', 0) + saisies.get('XHONOAAV', 0) - saisies.get('BNCDEV', 0) * 1 - is_positive(ART1731BIS)
TXSPEHC = max(0, round(saisies.get('BNHREC', 0) + saisies.get('XHONOC', 0) - saisies.get('BNHDEC', 0) * 1 - is_positive(ART1731BIS) * MAJREV)) + min(0, saisies.get('BNHREC', 0) + saisies.get('XHONOC', 0) - saisies.get('BNHDEC', 0) * 1 - is_positive(ART1731BIS))
TXSPEHP = max(0, round(saisies.get('BNHREP', 0) + saisies.get('XHONOP', 0) - saisies.get('BNHDEP', 0) * 1 - is_positive(ART1731BIS) * MAJREV)) + min(0, saisies.get('BNHREP', 0) + saisies.get('XHONOP', 0) - saisies.get('BNHDEP', 0) * 1 - is_positive(ART1731BIS))
TXSPEHV = max(0, round(saisies.get('BNHREV', 0) + saisies.get('XHONOV', 0) - saisies.get('BNHDEV', 0) * 1 - is_positive(ART1731BIS) * MAJREV)) + min(0, saisies.get('BNHREV', 0) + saisies.get('XHONOV', 0) - saisies.get('BNHDEV', 0) * 1 - is_positive(ART1731BIS))
TXSPENET = sum([TXSPENETV, TXSPENETC, TXSPENETP])
TXSPENETC = TXSPEAAC + TXSPEHC
TXSPENETP = TXSPEAAP + TXSPEHP
TXSPENETV = TXSPEAAV + TXSPEHV
VAR0AV = is_positive(saisies.get('V_0BT', 0) * saisies.get('V_0AV', 0))
VAR0BT = 1 - is_positive(is_zero(saisies.get('V_0BT', 0) + 0) + is_positive(saisies.get('V_0BT', 0) * saisies.get('V_0AV', 0)))
VAR7WD_P = 0
VAR7WY_P = 0
VAR7WZ_P = 0
VARDMOND = max(0, saisies.get('DMOND', 0) * 1 - is_positive(SOMMEMOND_2) * 1 - PREM8_11 - saisies.get('DEFZU', 0) * is_positive(SOMMEMOND_2) * 1 - PREM8_11 - saisies.get('DEFZU', 0) * PREM8_11) * present(saisies.get('DMOND', 0))
VARDNOCEPC = min(max(saisies.get('DNOCEPC', 0), max(DNOCEPC_P, DNOCEPCP2)), saisies.get('ANOVEP', 0))
VARDNOCEPP = min(max(saisies.get('DNOCEPP', 0), max(DNOCEPP_P, DNOCEPPP2)), saisies.get('ANOPEP', 0))
VARDNOCEPV = min(max(saisies.get('DNOCEP', 0), max(DNOCEP_P, DNOCEPP2)), saisies.get('ANOCEP', 0))
VARIPTEFN = max(0, saisies.get('IPTEFN', 0) * 1 - is_positive(SOMMEMOND_2) * 1 - PREM8_11 - saisies.get('DEFZU', 0) * is_positive(SOMMEMOND_2) * 1 - PREM8_11 - saisies.get('DEFZU', 0) * PREM8_11) * present(saisies.get('IPTEFN', 0))
VARIPTEFP = saisies.get('IPTEFP', 0) + max(0, saisies.get('DEFZU', 0) * is_positive(SOMMEMOND_2) * 1 - PREM8_11 + saisies.get('DEFZU', 0) * PREM8_11 - saisies.get('IPTEFN', 0)) * is_positive(present(saisies.get('IPTEFP', 0)) + present(saisies.get('IPTEFN', 0)))
VARIR12 = RASAR + saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + 0
VARLOCDEFNPC = min(saisies.get('LOCDEFNPC', 0), max(saisies.get('LOCNPC', 0) + saisies.get('LOCGITHCC', 0), max(LOCNPC_P + LOCGITHCC_P, LOCNPCP2 + LOCGITHCCP2)))
VARLOCDEFNPCGAC = min(max(saisies.get('LOCNPCGAC', 0) + saisies.get('LOCGITCC', 0), max(LOCNPCGAC_P + LOCGITCC_P, LOCNPCGACP2 + LOCGITCCP2)), saisies.get('LOCDEFNPCGAC', 0))
VARLOCDEFNPCGAP = min(max(saisies.get('LOCNPCGAPAC', 0) + saisies.get('LOCGITCP', 0), max(LOCNPCGAPAC_P + LOCGITCP_P, LOCNPCGAPACP2 + LOCGITCPP2)), saisies.get('LOCDEFNPCGAPAC', 0))
VARLOCDEFNPCGAV = min(max(saisies.get('LOCNPCGAV', 0) + saisies.get('LOCGITCV', 0), max(LOCNPCGAV_P + LOCGITCV_P, LOCNPCGAVP2 + LOCGITCVP2)), saisies.get('LOCDEFNPCGAV', 0))
VARLOCDEFNPP = min(saisies.get('LOCDEFNPPAC', 0), max(saisies.get('LOCNPPAC', 0) + saisies.get('LOCGITHCP', 0), max(LOCNPP_P + LOCGITHCP_P, LOCNPPP2 + LOCGITHCPP2)))
VARLOCDEFNPV = min(saisies.get('LOCDEFNPV', 0), max(saisies.get('LOCNPV', 0) + saisies.get('LOCGITHCV', 0), max(LOCNPV_P + LOCGITHCV_P, LOCNPVP2 + LOCGITHCVP2)))
VARLOCDEFPROC = min(max(saisies.get('LOCPROC', 0), max(LOCPROC_P, LOCPROCP2)), saisies.get('LOCDEFPROC', 0))
VARLOCDEFPROCGAC = min(max(saisies.get('LOCPROCGAC', 0), max(LOCPROCGAC_P, LOCPROCGACP2)), saisies.get('LOCDEFPROCGAC', 0))
VARLOCDEFPROCGAP = min(max(saisies.get('LOCPROCGAP', 0), max(LOCPROCGAP_P, LOCPROCGAPP2)), saisies.get('LOCDEFPROCGAP', 0))
VARLOCDEFPROCGAV = min(max(saisies.get('LOCPROCGAV', 0), max(LOCPROCGAV_P, LOCPROCGAVP2)), saisies.get('LOCDEFPROCGAV', 0))
VARLOCDEFPROP = min(max(saisies.get('LOCPROP', 0), max(LOCPROP_P, LOCPROPP2)), saisies.get('LOCDEFPROP', 0))
VARLOCDEFPROV = min(max(saisies.get('LOCPROV', 0), max(LOCPROV_P, LOCPROVP2)), saisies.get('LOCDEFPROV', 0))
VARRFDANT = min(RFCF + saisies.get('RFMIC', 0) - MICFR, saisies.get('RFDANT', 0))
VARRFDORD = min(RFCD, saisies.get('RFDORD', 0))
VARRMOND = saisies.get('RMOND', 0) + max(0, saisies.get('DEFZU', 0) * is_positive(SOMMEMOND_2) * 1 - PREM8_11 + saisies.get('DEFZU', 0) * PREM8_11 - saisies.get('DMOND', 0)) * is_positive(present(saisies.get('RMOND', 0)) + present(saisies.get('DMOND', 0)))
VLHAB = max(0, saisies.get('IPVLOC', 0))
V_CNR = (saisies.get('V_REGCO', 0) + 0) in [{'values': [2, 4], 'type': 'enumeration_values'}]
V_CNR2 = (saisies.get('V_REGCO', 0) + 0) in [{'values': [2, 3, 4], 'type': 'enumeration_values'}]
V_CR2 = (saisies.get('V_REGCO', 0) + 0) in [{'values': [2], 'type': 'enumeration_values'}]
V_EAD = (saisies.get('V_REGCO', 0) + 0) in [{'values': [5], 'type': 'enumeration_values'}]
V_EAG = (saisies.get('V_REGCO', 0) + 0) in [{'values': [6, 7], 'type': 'enumeration_values'}]
V_FLAGR34 = 0
XACCESS = sum([XACCESSV, XACCESSC, XACCESSP])
XBA = sum([XBAV, XBAC, XBAP])
XBAC = saisies.get('BAHEXC', 0) + saisies.get('BAEXC', 0)
XBAP = saisies.get('BAHEXP', 0) + saisies.get('BAEXP', 0)
XBAV = saisies.get('BAHEXV', 0) + saisies.get('BAEXV', 0)
XBI = sum([XBIPV + XBINPV, XBIPC + XBINPC, XBIPP + XBINPP])
XBICHDC = saisies.get('BICEXC', 0) + saisies.get('BICNOC', 0)
XBICHDP = saisies.get('BICEXP', 0) + saisies.get('BICNOP', 0)
XBICHDV = saisies.get('BICEXV', 0) + saisies.get('BICNOV', 0)
XBICMNPRO = sum([saisies.get('MIBNPEXV', 0), saisies.get('MIBNPEXC', 0), saisies.get('MIBNPEXP', 0)])
XBICMPRO = sum([saisies.get('MIBEXV', 0), saisies.get('MIBEXC', 0), saisies.get('MIBEXP', 0)])
XBICNETC = XBICHDC - saisies.get('BICDNC', 0) * 1 - is_positive(ART1731BIS)
XBICNETP = XBICHDP - saisies.get('BICDNP', 0) * 1 - is_positive(ART1731BIS)
XBICNETV = XBICHDV - saisies.get('BICDNV', 0) * 1 - is_positive(ART1731BIS)
XBICNPHDC = saisies.get('BICNPEXC', 0) + saisies.get('BICREC', 0)
XBICNPHDP = saisies.get('BICNPEXP', 0) + saisies.get('BICREP', 0)
XBICNPHDV = saisies.get('BICNPEXV', 0) + saisies.get('BICREV', 0)
XBICNPNETC = XBICNPHDC - min(saisies.get('BICDEC', 0), BICDEC1731 + 0) * is_positive(ART1731BIS) + saisies.get('BICDEC', 0) * 1 - ART1731BIS
XBICNPNETP = XBICNPHDP - min(saisies.get('BICDEP', 0), BICDEP1731 + 0) * is_positive(ART1731BIS) + saisies.get('BICDEP', 0) * 1 - ART1731BIS
XBICNPNETV = XBICNPHDV - min(saisies.get('BICDEV', 0), BICDEV1731 + 0) * is_positive(ART1731BIS) + saisies.get('BICDEV', 0) * 1 - ART1731BIS
XBICNPRO = sum([XBINPV, XBINPC, XBINPP])
XBICNPSC = XBICNPNETC + saisies.get('BI2AC', 0)
XBICNPSP = XBICNPNETP + saisies.get('BI2AP', 0)
XBICNPSV = XBICNPNETV + saisies.get('BI2AV', 0)
XBICPRO = sum([XBIPV, XBIPC, XBIPP])
XBICSC = XBICNETC + saisies.get('BA1AC', 0)
XBICSP = XBICNETP + saisies.get('BA1AP', 0)
XBICSV = XBICNETV + saisies.get('BA1AV', 0)
XBIMN = sum([saisies.get('MIBEXV', 0) + saisies.get('MIBNPEXV', 0), saisies.get('MIBEXC', 0) + saisies.get('MIBNPEXC', 0), saisies.get('MIBEXP', 0) + saisies.get('MIBNPEXP', 0)])
XBINPC = saisies.get('BICNPHEXC', 0) + saisies.get('BICNPEXC', 0)
XBINPP = saisies.get('BICNPHEXP', 0) + saisies.get('BICNPEXP', 0)
XBINPV = saisies.get('BICNPHEXV', 0) + saisies.get('BICNPEXV', 0)
XBIPC = saisies.get('BIHEXC', 0) + saisies.get('BICEXC', 0)
XBIPP = saisies.get('BIHEXP', 0) + saisies.get('BICEXP', 0)
XBIPV = saisies.get('BIHEXV', 0) + saisies.get('BICEXV', 0)
XBISC = is_positive(max(0, XBICNETC + max(0, XBICNPNETC))) * saisies.get('BI2AC', 0) + saisies.get('BI1AC', 0)
XBISP = is_positive(max(0, XBICNETP + max(0, XBICNPNETP))) * saisies.get('BI2AP', 0) + saisies.get('BI1AP', 0)
XBISV = is_positive(max(0, XBICNETV + max(0, XBICNPNETV))) * saisies.get('BI2AV', 0) + saisies.get('BI1AV', 0)
XBITC = max(0, XBICNETC + max(0, XBICNPNETC))
XBITP = max(0, XBICNETP + max(0, XBICNPNETP))
XBITV = max(0, XBICNETV + max(0, XBICNPNETV))
XBNC = saisies.get('BNHEXC', 0) + saisies.get('BNCEXC', 0)
XBNCMNPRO = sum([saisies.get('XSPENPV', 0), saisies.get('XSPENPC', 0), saisies.get('XSPENPP', 0)])
XBNCMPRO = sum([saisies.get('BNCPROEXV', 0), saisies.get('BNCPROEXC', 0), saisies.get('BNCPROEXP', 0)])
XBNCNPRO = sum([XBNNPV, XBNNPC, XBNNPP])
XBNCPRO = sum([XBNV, XBNC, XBNP])
XBNNPC = saisies.get('BNCNPREXC', 0) + saisies.get('BNCNPREXAAC', 0)
XBNNPP = saisies.get('BNCNPREXP', 0) + saisies.get('BNCNPREXAAP', 0)
XBNNPV = saisies.get('BNCNPREXV', 0) + saisies.get('BNCNPREXAAV', 0)
XBNP = saisies.get('BNHEXP', 0) + saisies.get('BNCEXP', 0)
XBNV = saisies.get('BNHEXV', 0) + saisies.get('BNCEXV', 0)
XELU = saisies.get('ELURASC', 0) + saisies.get('ELURASV', 0)
XEXOCET = sum([XEXOCETV, XEXOCETC])
XFORFAIT = sum([saisies.get('FEXV', 0), saisies.get('FEXC', 0), saisies.get('FEXP', 0)])
XTSB1 = TSBN1
XTSB2 = TSBN2
XTSB3 = TSBN3
XTSB4 = TSBN4
XTSBC = sum([saisies.get('GLD1C', 0), saisies.get('GLD2C', 0), saisies.get('GLD3C', 0)]) + TSBNC + saisies.get('BPCOSAC', 0) + saisies.get('TSASSUC', 0) + saisies.get('XETRANC', 0) + saisies.get('EXOCETC', 0) + saisies.get('GLDGRATC', 0)
XTSBV = sum([saisies.get('GLD1V', 0), saisies.get('GLD2V', 0), saisies.get('GLD3V', 0)]) + TSBNV + saisies.get('BPCOSAV', 0) + saisies.get('TSASSUV', 0) + saisies.get('XETRANV', 0) + saisies.get('EXOCETV', 0) + saisies.get('GLDGRATV', 0)
XTSNN = sum([XTSNNV, XTSNNC])
ZIGANNUL = is_positive(INDCTX) * is_positive(saisies.get('ANNUL2042', 0))
ZIGBASECVN = is_positive(BCVNSAL + saisies.get('V_CVNANT', 0))
ZIGBASESAL1 = is_positive(BCVNSAL + saisies.get('V_CVNANT', 0)) * is_positive(INDCTX)
ZIGCDISANT = is_positive(saisies.get('V_CDISANT', 0)) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
ZIGCDISPROV = is_positive(saisies.get('CDISPROV', 0)) * TYPE2
ZIGCOD8YL = is_positive(saisies.get('COD8YL', 0)) * TYPE2
ZIGCOD8YT = is_positive(saisies.get('COD8YT', 0)) * TYPE2
ZIGCSANT = is_positive(saisies.get('V_CSANT', 0)) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
ZIGCVNANT = is_positive(saisies.get('V_CVNANT', 0)) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
ZIGGAINLEV = is_positive(CVNSALC) * is_positive(saisies.get('CVNSALAV', 0) + saisies.get('CVNSALAC', 0)) * LIG1 * LIG2
ZIGINT122 = is_positive(RETRSE122) * LIG2
ZIGINT22 = is_positive(RETCDIS22)
ZIGINT222 = is_positive(RETRSE222) * LIG2
ZIGINT322 = is_positive(RETRSE322) * LIG2
ZIGINT422 = is_positive(RETRSE422) * LIG2
ZIGINT522 = is_positive(RETRSE522) * LIG2
ZIGINTREGV22 = is_positive(RETREGV22) * LIG2
ZIGLOA22 = is_positive(RETGLOA22)
ZIGLOANT = is_positive(saisies.get('V_GLOANT', 0)) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
ZIGMONTS = is_positive(BCVNSAL + saisies.get('V_CVNANT', 0))
ZIGPREREV = is_positive(saisies.get('PREREV', 0)) * 1 - V_CNR * LIG1 * LIG2
ZIGPROVYD = is_positive(saisies.get('CSPROVYD', 0)) * TYPE2
ZIGPROVYE = is_positive(saisies.get('CSPROVYE', 0)) * TYPE2
ZIGPROVYF = is_positive(saisies.get('CSPROVYF', 0) + saisies.get('CSPROVYN', 0)) * TYPE2
ZIGPROVYG = is_positive(saisies.get('CSPROVYG', 0)) * TYPE2
ZIGPROVYH = is_positive(saisies.get('CSPROVYH', 0) + saisies.get('CSPROVYP', 0)) * TYPE2
ZIGPSANT = is_positive(saisies.get('V_PSANT', 0)) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
ZIGR1649 = is_positive(saisies.get('R1649', 0)) * 1 - V_CNR * LIG1 * LIG2
ZIGRDANT = is_positive(saisies.get('V_RDANT', 0)) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
ZIGRE168 = is_positive(saisies.get('RE168', 0)) * 1 - V_CNR * LIG2
ZIGREVXA = is_positive(saisies.get('REVCSXA', 0)) * TYPE2
ZIGREVXB = is_positive(saisies.get('REVCSXB', 0)) * TYPE2
ZIGREVXC = is_positive(saisies.get('REVCSXC', 0) + saisies.get('COD8XI', 0)) * TYPE2
ZIGREVXD = is_positive(saisies.get('REVCSXD', 0)) * TYPE2
ZIGREVXE = is_positive(saisies.get('REVCSXE', 0) + saisies.get('COD8XJ', 0)) * TYPE2
ZIGRFDEP = is_positive(saisies.get('COD8XK', 0)) * 1 - is_positive(saisies.get('COD8YK', 0)) * LIG2
ZIGRFRET = is_positive(saisies.get('COD8YK', 0)) * 1 - is_positive(saisies.get('COD8XK', 0)) * LIG2
ZIGRSE1ANT = is_positive(saisies.get('V_RSE1ANT', 0)) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
ZIGRSE2ANT = is_positive(saisies.get('V_RSE2ANT', 0)) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
ZIGRSE3ANT = is_positive(saisies.get('V_RSE3ANT', 0)) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
ZIGRSE4ANT = is_positive(saisies.get('V_RSE4ANT', 0)) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
ZIGRSE5ANT = is_positive(saisies.get('V_RSE5ANT', 0)) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
ZIGTAX1649 = is_positive(saisies.get('TAX1649', 0)) * 1 - V_CNR * LIG2
ZIG_CONTRIBPROV_A = is_positive(PRSPROV_A + CSGIM_A + CRDSIM_A) * LIG2
ZIG_CTRIANT = is_positive(saisies.get('V_ANTCR', 0)) * TYPE2
ZIG_CTRIPROV = is_positive(saisies.get('COD8YT', 0) + saisies.get('PRSPROV', 0) + saisies.get('CSGIM', 0) + saisies.get('CRDSIM', 0)) * LIG2
ZIG_INF8 = is_positive(CS_DEG) * is_positive(SEUIL_8 - CS_DEG) * LIG2
ZIG_INT22 = is_positive(RETCS22 + RETPS22 + RETRD22 + RETCVN22)
ZIG_REMPLACE = is_positive(1 - is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_positive(saisies.get('V_ANREV', 0) - saisies.get('V_0AX', 0)) * is_positive(saisies.get('V_ANREV', 0) - saisies.get('V_0AZ', 0)) * is_positive(saisies.get('V_ANREV', 0) - saisies.get('V_0AY', 0)) + is_positive(saisies.get('V_NOTRAIT', 0) - 20)) * LIG2
ZIG_REVETR = is_positive(saisies.get('SALECS', 0) + saisies.get('SALECSG', 0) + saisies.get('ALLECS', 0) + saisies.get('INDECS', 0) + saisies.get('PENECS', 0) + saisies.get('COD8SA', 0) + saisies.get('COD8SB', 0)) * 1 - V_CNR * LIG1 * LIG2
ZIG_RVORIGND = is_positive(CS_RVORIGND + RD_RVORIGND + PS_RVORIGND + IND_ZIGREVORIGIND) * 1 - V_CNR * LIG1 * LIG2
ZIPQF1TOT = sum([ZIPQFV1, ZIPQFC1, ZIPQF11, ZIPQF21, ZIPQF31, ZIPQF41])
ZIPQF2TOT = sum([ZIPQFV2, ZIPQFC2, ZIPQF12, ZIPQF22, ZIPQF32, ZIPQF42])
ZIPQF5TOT = sum([ZIPQFV5, ZIPQFC5, ZIPQF15, ZIPQF25, ZIPQF35, ZIPQF45])
ZIPQFANT1TOT = sum([ZIPQFANTV1, ZIPQFANTC1, ZIPQFANT11, ZIPQFANT21, ZIPQFANT31, ZIPQFANT41])
ZIPQPALIM1TOT = sum([ZIPQPALIMV1, ZIPQPALIMC1, ZIPQPALIM11, ZIPQPALIM21, ZIPQPALIM31, ZIPQPALIM41])
ZIPQPALIM2TOT = sum([ZIPQPALIMV2, ZIPQPALIMC2, ZIPQPALIM12, ZIPQPALIM22, ZIPQPALIM32, ZIPQPALIM42])
ZIPQPALIM5TOT = sum([ZIPQPALIMV5, ZIPQPALIMC5, ZIPQPALIM15, ZIPQPALIM25, ZIPQPALIM35, ZIPQPALIM45])
ZIPQPALIMANT1TOT = sum([ZIPQPALIMANTV1, ZIPQPALIMANTC1, ZIPQPALIMANT11, ZIPQPALIMANT21, ZIPQPALIMANT31, ZIPQPALIMANT41])
ZIPQPRR1TOT = sum([ZIPQPRRV1, ZIPQPRRC1, ZIPQPRR11, ZIPQPRR21, ZIPQPRR31, ZIPQPRR41])
ZIPQPRR2TOT = sum([ZIPQPRRV2, ZIPQPRRC2, ZIPQPRR12, ZIPQPRR22, ZIPQPRR32, ZIPQPRR42])
ZIPQPRR5TOT = sum([ZIPQPRRV5, ZIPQPRRC5, ZIPQPRR15, ZIPQPRR25, ZIPQPRR35, ZIPQPRR45])
ZIPQPRRANT1TOT = sum([ZIPQPRRANTV1, ZIPQPRRANTC1, ZIPQPRRANT11, ZIPQPRRANT21, ZIPQPRRANT31, ZIPQPRRANT41])
ZIPQPRRANTZ1TOT = sum([ZIPQPRRANTZV1, ZIPQPRRANTZC1, ZIPQPRRANTZ11, ZIPQPRRANTZ21, ZIPQPRRANTZ31, ZIPQPRRANTZ41])
ZIPQPRRZ1TOT = sum([ZIPQPRRZV1, ZIPQPRRZC1, ZIPQPRRZ11, ZIPQPRRZ21, ZIPQPRRZ31, ZIPQPRRZ41])
ZIPQPRRZ2TOT = sum([ZIPQPRRZV2, ZIPQPRRZC2, ZIPQPRRZ12, ZIPQPRRZ22, ZIPQPRRZ32, ZIPQPRRZ42])
ZIPQPRRZ5TOT = sum([ZIPQPRRZV5, ZIPQPRRZC5, ZIPQPRRZ15, ZIPQPRRZ25, ZIPQPRRZ35, ZIPQPRRZ45])
ZIPQRF1TOT = sum([ZIPQRF11, ZIPQRF21])
ZIPQRF2TOT = sum([ZIPQRF12, ZIPQRF22])
ZIPQRF5TOT = sum([ZIPQRF15, ZIPQRF25])
ZIPQRFANT1TOT = sum([ZIPQRFANT11, ZIPQRFANT21])
ZIPQTS1TOT = sum([ZIPQTSV1, ZIPQTSC1, ZIPQTS11, ZIPQTS21, ZIPQTS31, ZIPQTS41])
ZIPQTS2TOT = sum([ZIPQTSV2, ZIPQTSC2, ZIPQTS12, ZIPQTS22, ZIPQTS32, ZIPQTS42])
ZIPQTS5TOT = sum([ZIPQTSV5, ZIPQTSC5, ZIPQTS15, ZIPQTS25, ZIPQTS35, ZIPQTS45])
ZIPQTSANT1TOT = sum([ZIPQTSANTV1, ZIPQTSANTC1, ZIPQTSANT11, ZIPQTSANT21, ZIPQTSANT31, ZIPQTSANT41])
ZIPQTSREMP1TOT = sum([ZIPQTSREMPV1, ZIPQTSREMPC1, ZIPQTSREMP11, ZIPQTSREMP21, ZIPQTSREMP31, ZIPQTSREMP41])
ZIPQTSREMP2TOT = sum([ZIPQTSREMPV2, ZIPQTSREMPC2, ZIPQTSREMP12, ZIPQTSREMP22, ZIPQTSREMP32, ZIPQTSREMP42])
ZIPQTSREMP5TOT = sum([ZIPQTSREMPV5, ZIPQTSREMPC5, ZIPQTSREMP15, ZIPQTSREMP25, ZIPQTSREMP35, ZIPQTSREMP45])
ZIPQTSREMPANT1TOT = sum([ZIPQTSREMPANTV1, ZIPQTSREMPANTC1, ZIPQTSREMPANT11, ZIPQTSREMPANT21, ZIPQTSREMPANT31, ZIPQTSREMPANT41])
ZONIPTEFN = VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS
ZONIPTEFP = VARIPTEFP * is_positive(ART1731BIS) + saisies.get('IPTEFP', 0) * 1 - ART1731BIS
_1RAO = max(0, REGPRIVM)
_2PRB1 = saisies.get('CARPEP1', 0) + saisies.get('PENSALP1', 0) + saisies.get('CODRCZ', 0)
_2PRB2 = saisies.get('CARPEP2', 0) + saisies.get('PENSALP2', 0) + saisies.get('CODRDZ', 0)
_2PRB3 = saisies.get('CARPEP3', 0) + saisies.get('PENSALP3', 0) + saisies.get('CODREZ', 0)
_2PRB4 = saisies.get('CARPEP4', 0) + saisies.get('PENSALP4', 0) + saisies.get('CODRFZ', 0)
_2PRBC = saisies.get('CARPEC', 0) + saisies.get('PENSALC', 0) + saisies.get('CODRBZ', 0)
_2PRBV = saisies.get('CARPEV', 0) + saisies.get('PENSALV', 0) + saisies.get('CODRAZ', 0)
_2RCMRABD = round(saisies.get('REVACT', 0) * 40 / 100)
_2RCMRNABD = saisies.get('REVACT', 0) - _2RCMRABD
_2RCMRTNC = round(saisies.get('REVPEA', 0) * 40 / 100)
_2REGPRIVM = round(saisies.get('RESTUC', 0) * MAJREV)
_2REVF = min(round(RFCG * saisies.get('FONCI', 0) / RFCD), RFCG - RFON)
_2RV1 = round(saisies.get('RENTAX', 0) * TXRVT1 / 100)
_2RV2 = round(saisies.get('RENTAX5', 0) * TXRVT2 / 100)
_2RV3 = round(saisies.get('RENTAX6', 0) * TXRVT3 / 100)
_2RV4 = round(saisies.get('RENTAX7', 0) * TXRVT4 / 100)
_2TSN1 = saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)
_2TSN2 = saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)
_2TSN3 = saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)
_2TSN4 = saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)
_2TSNC = saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0)
_2TSNV = saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0)
_3REVF = min(round(RFCG * saisies.get('REAMOR', 0) / RFCD), RFCG - RFON - _2REVF)
_4BAQLC = is_positive(_4BACREC + _4BAHREC)
_4BAQLP = is_positive(_4BACREP + _4BAHREP)
_4BAQLV = is_positive(_4BACREV + _4BAHREV)
_4BAQTOT = sum([_4BAQV, _4BAQC, _4BAQP])
ABTAV = PLAF_RCMAV1 * 1 + BOOL_0AM
ACEL = BCEL_2011 * 1 - ART1731BIS + min(BCEL_2011, max(ACEL_P + ACELP2, ACEL1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELSOMN) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACEL2012 = BCEL_2012 * 1 - ART1731BIS + min(BCEL_2012, max(ACEL2012_P + ACEL2012P2, ACEL20121731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELSOMJ) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACEL2012_R = positif_ou_nul(CELSOMJ) * BCEL_2012 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELCOM = BCELCOM2011 * 1 - ART1731BIS + min(BCELCOM2011, max(ACELCOM_P + ACELCOMP2, ACELCOM1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(saisies.get('CELLIERNP', 0) + saisies.get('CELLIERNR', 0) + saisies.get('CELLIERNS', 0) + saisies.get('CELLIERNT', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELCOM_R = positif_ou_nul(saisies.get('CELLIERNP', 0) + saisies.get('CELLIERNR', 0) + saisies.get('CELLIERNS', 0) + saisies.get('CELLIERNT', 0)) * BCELCOM2011 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELFABC = BCEL_FABC * 1 - ART1731BIS + min(BCEL_FABC, max(ACELFABC_P + ACELFABCP2, ACELFABC1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(DCELFABC) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELFABC_R = positif_ou_nul(DCELFABC) * BCEL_FABC * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELFD = BCEL_FD * 1 - ART1731BIS + min(BCEL_FD, max(ACELFD_P + ACELFDP2, ACELFD1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(DCELFD) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELFD_R = positif_ou_nul(DCELFD) * BCEL_FD * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELHJK = BCEL_HJK * 1 - ART1731BIS + min(BCEL_HJK, max(ACELHJK_P + ACELHJKP2, ACELHJK1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(saisies.get('CELLIERHJ', 0) + saisies.get('CELLIERHK', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELHJK_R = positif_ou_nul(saisies.get('CELLIERHJ', 0) + saisies.get('CELLIERHK', 0)) * BCEL_HJK * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELHL = BCEL_HL * 1 - ART1731BIS + min(BCEL_HL, max(ACELHL_P + ACELHLP2, ACELHL1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(saisies.get('CELLIERHL', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELHL_R = positif_ou_nul(saisies.get('CELLIERHL', 0)) * BCEL_HL * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELHM = BCEL_HM * 1 - ART1731BIS + min(BCEL_HM, max(ACELHM_P + ACELHMP2, ACELHM1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(saisies.get('CELLIERHM', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELHM_R = positif_ou_nul(saisies.get('CELLIERHM', 0)) * BCEL_HM * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELHNO = BCEL_HNO * 1 - ART1731BIS + min(BCEL_HNO, max(ACELHNO_P + ACELHNOP2, ACELHNO1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(saisies.get('CELLIERHN', 0) + saisies.get('CELLIERHO', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELHNO_R = positif_ou_nul(saisies.get('CELLIERHN', 0) + saisies.get('CELLIERHO', 0)) * BCEL_HNO * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELJBGL = BCEL_JBGL * 1 - ART1731BIS + min(BCEL_JBGL, max(ACELJBGL_P + ACELJBGLP2, ACELJBGL1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(saisies.get('CELLIERJB', 0) + saisies.get('CELLIERJG', 0) + saisies.get('CELLIERJL', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELJBGL_R = positif_ou_nul(saisies.get('CELLIERJB', 0) + saisies.get('CELLIERJG', 0) + saisies.get('CELLIERJL', 0)) * BCEL_JBGL * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELJOQR = BCEL_JOQR * 1 - ART1731BIS + min(BCEL_JOQR, max(ACELJOQR_P + ACELJOQRP2, ACELJOQR1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(saisies.get('CELLIERJO', 0) + saisies.get('CELLIERJQ', 0) + saisies.get('CELLIERJR', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELJOQR_R = positif_ou_nul(saisies.get('CELLIERJO', 0) + saisies.get('CELLIERJQ', 0) + saisies.get('CELLIERJR', 0)) * BCEL_JOQR * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELJP = BCEL_JP * 1 - ART1731BIS + min(BCEL_JP, max(ACELJP_P + ACELJPP2, ACELJP1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(saisies.get('CELLIERJP', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELJP_R = positif_ou_nul(saisies.get('CELLIERJP', 0)) * BCEL_JP * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELNBGL = BCEL_NBGL * 1 - ART1731BIS + min(BCEL_NBGL, max(ACELNBGL_P + ACELNBGLP2, ACELNBGL1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(saisies.get('CELLIERNB', 0) + saisies.get('CELLIERNG', 0) + saisies.get('CELLIERNL', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELNBGL_R = positif_ou_nul(saisies.get('CELLIERNB', 0) + saisies.get('CELLIERNG', 0) + saisies.get('CELLIERNL', 0)) * BCEL_NBGL * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELNQ = BCEL_NQ * 1 - ART1731BIS + min(BCEL_NQ, max(ACELNQ_P + ACELNQP2, ACELNQ1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(saisies.get('CELLIERNQ', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELNQ_R = positif_ou_nul(saisies.get('CELLIERNQ', 0)) * BCEL_NQ * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPGJ = saisies.get('CELREPGJ', 0) * 1 - ART1731BIS + min(saisies.get('CELREPGJ', 0), max(ACELREPGJ_P + ACELREPGJP2, ACELREPGJ1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPGK = saisies.get('CELREPGK', 0) * 1 - ART1731BIS + min(DCELREPGK, max(ACELREPGK_P + ACELREPGKP2, ACELREPGK1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPGL = saisies.get('CELREPGL', 0) * 1 - ART1731BIS + min(saisies.get('CELREPGL', 0), max(ACELREPGL_P + ACELREPGLP2, ACELREPGL1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPGP = saisies.get('CELREPGP', 0) * 1 - ART1731BIS + min(saisies.get('CELREPGP', 0), max(ACELREPGP_P + ACELREPGPP2, ACELREPGP1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPGS = saisies.get('CELREPGS', 0) * 1 - ART1731BIS + min(saisies.get('CELREPGS', 0), max(ACELREPGS_P + ACELREPGSP2, ACELREPGS1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPGT = saisies.get('CELREPGT', 0) * 1 - ART1731BIS + min(saisies.get('CELREPGT', 0), max(ACELREPGT_P + ACELREPGTP2, ACELREPGT1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPGU = saisies.get('CELREPGU', 0) * 1 - ART1731BIS + min(saisies.get('CELREPGU', 0), max(ACELREPGU_P + ACELREPGUP2, ACELREPGU1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPGV = saisies.get('CELREPGV', 0) * 1 - ART1731BIS + min(saisies.get('CELREPGV', 0), max(ACELREPGV_P + ACELREPGVP2, ACELREPGV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPGW = saisies.get('CELREPGW', 0) * 1 - ART1731BIS + min(saisies.get('CELREPGW', 0), max(ACELREPGW_P + ACELREPGWP2, ACELREPGW1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPGX = saisies.get('CELREPGX', 0) * 1 - ART1731BIS + min(saisies.get('CELREPGX', 0), max(ACELREPGX_P + ACELREPGXP2, ACELREPGX1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHA = saisies.get('CELREPHA', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHA', 0), max(ACELREPHA_P + ACELREPHAP2, ACELREPHA1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHB = saisies.get('CELREPHB', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHB', 0), max(ACELREPHB_P + ACELREPHBP2, ACELREPHB1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHD = saisies.get('CELREPHD', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHD', 0), max(ACELREPHD_P + ACELREPHDP2, ACELREPHD1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHE = saisies.get('CELREPHE', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHE', 0), max(ACELREPHE_P + ACELREPHEP2, ACELREPHE1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHF = saisies.get('CELREPHF', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHF', 0), max(ACELREPHF_P + ACELREPHFP2, ACELREPHF1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHG = saisies.get('CELREPHG', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHG', 0), max(ACELREPHG_P + ACELREPHGP2, ACELREPHG1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHH = saisies.get('CELREPHH', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHH', 0), max(ACELREPHH_P + ACELREPHHP2, ACELREPHH1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHR = saisies.get('CELREPHR', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHR', 0), max(ACELREPHR_P + ACELREPHRP2, ACELREPHR1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHS = saisies.get('CELREPHS', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHS', 0), max(ACELREPHS_P + ACELREPHSP2, ACELREPHS1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHT = saisies.get('CELREPHT', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHT', 0), max(ACELREPHT_P + ACELREPHTP2, ACELREPHT1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHU = saisies.get('CELREPHU', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHU', 0), max(ACELREPHU_P + ACELREPHUP2, ACELREPHU1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHV = saisies.get('CELREPHV', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHV', 0), max(ACELREPHV_P + ACELREPHVP2, ACELREPHV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHW = saisies.get('CELREPHW', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHW', 0), max(ACELREPHW_P + ACELREPHWP2, ACELREPHW1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHX = saisies.get('CELREPHX', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHX', 0), max(ACELREPHX_P + ACELREPHXP2, ACELREPHX1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPHZ = saisies.get('CELREPHZ', 0) * 1 - ART1731BIS + min(saisies.get('CELREPHZ', 0), max(ACELREPHZ_P + ACELREPHZP2, ACELREPHZ1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPYA = saisies.get('CELREPYA', 0) * 1 - ART1731BIS + min(saisies.get('CELREPYA', 0), max(ACELREPYA_P + ACELREPYAP2, ACELREPYA1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPYB = saisies.get('CELREPYB', 0) * 1 - ART1731BIS + min(saisies.get('CELREPYB', 0), max(ACELREPYB_P + ACELREPYBP2, ACELREPYB1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPYC = saisies.get('CELREPYC', 0) * 1 - ART1731BIS + min(saisies.get('CELREPYC', 0), max(ACELREPYC_P + ACELREPYCP2, ACELREPYC1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPYD = saisies.get('CELREPYD', 0) * 1 - ART1731BIS + min(saisies.get('CELREPYD', 0), max(ACELREPYD_P + ACELREPYDP2, ACELREPYD1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPYE = saisies.get('CELREPYE', 0) * 1 - ART1731BIS + min(saisies.get('CELREPYE', 0), max(ACELREPYE_P + ACELREPYEP2, ACELREPYE1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPYF = saisies.get('CELREPYF', 0) * 1 - ART1731BIS + min(saisies.get('CELREPYF', 0), max(ACELREPYF_P + ACELREPYFP2, ACELREPYF1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPYG = saisies.get('CELREPYG', 0) * 1 - ART1731BIS + min(saisies.get('CELREPYG', 0), max(ACELREPYG_P + ACELREPYGP2, ACELREPYG1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPYH = saisies.get('CELREPYH', 0) * 1 - ART1731BIS + min(saisies.get('CELREPYH', 0), max(ACELREPYH_P + ACELREPYHP2, ACELREPYH1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPYI = saisies.get('CELREPYI', 0) * 1 - ART1731BIS + min(saisies.get('CELREPYI', 0), max(ACELREPYI_P + ACELREPYIP2, ACELREPYI1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPYJ = saisies.get('CELREPYJ', 0) * 1 - ART1731BIS + min(saisies.get('CELREPYJ', 0), max(ACELREPYJ_P + ACELREPYJP2, ACELREPYJ1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPYK = saisies.get('CELREPYK', 0) * 1 - ART1731BIS + min(saisies.get('CELREPYF', 0), max(ACELREPYK_P + ACELREPYKP2, ACELREPYK1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELREPYL = saisies.get('CELREPYL', 0) * 1 - ART1731BIS + min(saisies.get('CELREPYL', 0), max(ACELREPYL_P + ACELREPYLP2, ACELREPYL1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDLA = saisies.get('CELRREDLA', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDLA', 0), max(ACELRREDLA_P + ACELRREDLAP2, ACELRREDLA1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDLB = saisies.get('CELRREDLB', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDLB', 0), max(ACELRREDLB_P + ACELRREDLBP2, ACELRREDLB1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDLC = saisies.get('CELRREDLC', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDLC', 0), max(ACELRREDLC_P + ACELRREDLCP2, ACELRREDLC1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDLD = saisies.get('CELRREDLD', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDLD', 0), max(ACELRREDLD_P + ACELRREDLDP2, ACELRREDLD1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDLE = saisies.get('CELRREDLE', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDLE', 0), max(ACELRREDLE_P + ACELRREDLEP2, ACELRREDLE1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDLF = saisies.get('CELRREDLF', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDLF', 0), max(ACELRREDLF_P + ACELRREDLFP2, ACELRREDLF1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDLM = saisies.get('CELRREDLM', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDLM', 0), max(ACELRREDLM_P + ACELRREDLMP2, ACELRREDLM1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDLN = saisies.get('CELRREDLN', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDLN', 0), max(ACELRREDLN_P + ACELRREDLNP2, ACELRREDLN1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDLS = saisies.get('CELRREDLS', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDLS', 0), max(ACELRREDLS_P + ACELRREDLSP2, ACELRREDLS1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDLT = saisies.get('CELRREDLT', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDLT', 0), max(ACELRREDLT_P + ACELRREDLTP2, ACELRREDLT1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDLX = saisies.get('CELRREDLX', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDLX', 0), max(ACELRREDLX_P + ACELRREDLXP2, ACELRREDLX1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDLZ = saisies.get('CELRREDLZ', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDLZ', 0), max(ACELRREDLZ_P + ACELRREDLZP2, ACELRREDLZ1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDMG = saisies.get('CELRREDMG', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDMG', 0), max(ACELRREDMG_P + ACELRREDMGP2, ACELRREDMG1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACELRREDMH = saisies.get('CELRREDMH', 0) * 1 - ART1731BIS + min(saisies.get('CELRREDMH', 0), max(ACELRREDMH_P + ACELRREDMHP2, ACELRREDMH1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACEL_R = positif_ou_nul(CELSOMN) * BCEL_2011 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ACODIE = min(PLAF_RESINEUV, saisies.get('LOCMEUBIE', 0)) * 1 - V_CNR
ACODIF = min(PLAF_RESINEUV - ACODIE, saisies.get('LOCMEUBIF', 0)) * 1 - V_CNR
ACODIL = min(PLAF_RESINEUV, saisies.get('MEUBLENP', 0)) * 1 - V_CNR
ACODIM = min(PLAF_RESINEUV, saisies.get('RESIVIEU', 0)) * 1 - V_CNR
ACODIN = min(PLAF_RESINEUV - ACODIL, saisies.get('INVNPROF1', 0)) * 1 - V_CNR
ACODIW = min(PLAF_RESINEUV - ACODIM, saisies.get('RESIVIANT', 0)) * 1 - V_CNR
ACODJT = min(PLAF_RESINEUV, saisies.get('LOCMEUBJT', 0)) * 1 - V_CNR
ACODJU = min(PLAF_RESINEUV - ACODJT, saisies.get('LOCMEUBJU', 0)) * 1 - V_CNR
ACODOU = round(min(PLAF_RESINEUV, saisies.get('COD7OU', 0)) / 9) * 1 - V_CNR
ACOTFOR_R = min(DCOTFOR, PLAF_FOREST1 * 1 + BOOL_0AM) * 1 - V_CNR
ACREAT = DCREAT * 1 - ART1731BIS + min(DCREAT, max(ACREAT_P + ACREATP2, ACREAT1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
ACREATHANDI = DCREATHANDI * 1 - ART1731BIS + min(DCREATHANDI, max(ACREATHANDI_P + ACREATHANDIP2, ACREATHANDI1731) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
ADUFLOEKL = ADUFLOEKL_1 * 1 - ART1731BIS
ADUFLOGIH = ADUFLOGIH_1 * 1 - ART1731BIS + min(ADUFLOGIH_1, max(ADUFLOGIH_P + ADUFLOGIHP2, ADUFLOGIH1731 + 0) * 1 - PREM8_11) * ART1731BIS
AFIPC_1 = max(min(DFIPC, LIM_FIPCORSE * 1 + BOOL_0AM), 0) * 1 - V_CNR
AFIPDOM_1 = max(min(DFIPDOM, LIMFIPDOM * 1 + BOOL_0AM), 0) * 1 - V_CNR
AFORET_1 = max(min(DFORET, LIM_FORET), 0) * 1 - V_CNR
AGARD = BRFG * 1 - V_CNR
AGREI = REI
AGREPAPER = saisies.get('PALIV', 0) + saisies.get('PALIC', 0) + PALIP + saisies.get('PENSALV', 0) + saisies.get('PENSALC', 0) + PENSALP
AILMIA = DILMIA * 1 - ART1731BIS + min(DILMIA, max(AILMIA_P + AILMIAP2, AILMIA1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMIA_R = DILMIA * 1 - V_CNR
AILMIB = DILMIB * 1 - ART1731BIS + min(DILMIB, max(AILMIB_P + AILMIBP2, AILMIB1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMIB_R = DILMIB * 1 - V_CNR
AILMIC = DILMIC * 1 - ART1731BIS + min(DILMIC, max(AILMIC_P + AILMICP2, AILMIC1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMIC_R = DILMIC * 1 - V_CNR
AILMIH = DILMIH * 1 - ART1731BIS + min(DILMIH, max(AILMIH_P + AILMIHP2, AILMIH1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMIH_R = DILMIH * 1 - V_CNR
AILMIX = DILMIX * 1 - ART1731BIS + min(DILMIX, max(AILMIX_P + AILMIXP2, AILMIX1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMIX_R = DILMIX * 1 - V_CNR
AILMIY = DILMIY * 1 - ART1731BIS + min(DILMIY, max(AILMIY_P + AILMIYP2, AILMIY1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMIZ = DILMIZ * 1 - ART1731BIS + min(DILMIZ, max(AILMIZ_P + AILMIZP2, AILMIZ1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMIZ_R = DILMIZ * 1 - V_CNR
AILMJC = DILMJC * 1 - ART1731BIS + min(DILMJC, max(AILMJC_P + AILMJCP2, AILMJC1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMJI = DILMJI * 1 - ART1731BIS + min(DILMJI, max(AILMJI_P + AILMJIP2, AILMJI1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMJS = DILMJS * 1 - ART1731BIS + min(DILMJS, max(AILMJS_P + AILMJSP2, AILMJS1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMJV = DILMJV * 1 - ART1731BIS + min(DILMJV, max(AILMJV_P + AILMJVP2, AILMJV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMJW = DILMJW * 1 - ART1731BIS + min(DILMJW, max(AILMJW_P + AILMJWP2, AILMJW1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMJX = DILMJX * 1 - ART1731BIS + min(DILMJX, max(AILMJX_P + AILMJXP2, AILMJX1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMJY = DILMJY * 1 - ART1731BIS + min(DILMJY, max(AILMJY_P + AILMJYP2, AILMJY1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AILMOA = DILMOA * 1 - V_CNR
AILMOB = DILMOB * 1 - V_CNR
AILMOC = DILMOC * 1 - V_CNR
AILMOD = DILMOD * 1 - V_CNR
AILMOE = DILMOE * 1 - V_CNR
AILMPA = DILMPA * 1 - V_CNR
AILMPB = DILMPB * 1 - V_CNR
AILMPC = DILMPC * 1 - V_CNR
AILMPD = DILMPD * 1 - V_CNR
AILMPE = DILMPE * 1 - V_CNR
AINVRED = DINVRED * 1 - ART1731BIS + min(DINVRED, max(AINVRED_P + AINVREDP2, AINVRED1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
ALOYIMP = DLOYIMP
AMEUBLE = DMEUBLE * 1 - ART1731BIS + min(DMEUBLE, max(AMEUBLE_P + AMEUBLEP2, AMEUBLE1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
ANOUV = BSN1 + BSN2 * 1 - ART1731BIS + min(BSN1 + BSN2, max(ANOUV_P + ANOUVP2, ANOUV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
APATNAT = saisies.get('PATNAT4', 0) * 1 - ART1731BIS + min(saisies.get('PATNAT4', 0), max(APATNAT_P + APATNATP2, APATNAT1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
APATNAT1 = saisies.get('PATNAT1', 0) * 1 - ART1731BIS + min(saisies.get('PATNAT1', 0), max(APATNAT1_P + APATNAT1P2, APATNAT11731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
APATNAT2 = saisies.get('PATNAT2', 0) * 1 - ART1731BIS + min(saisies.get('PATNAT2', 0), max(APATNAT2_P + APATNAT2P2, APATNAT21731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
APATNAT3 = saisies.get('PATNAT3', 0) * 1 - ART1731BIS + min(saisies.get('PATNAT3', 0), max(APATNAT3_P + APATNAT3P2, APATNAT31731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
APIQABCD = APIQABCD_1 * 1 - ART1731BIS
APLAFREPME4 = saisies.get('COD7CY', 0) * is_positive(saisies.get('COD7CY', 0)) * 1 - V_CNR
APRETUD = max(min(saisies.get('PRETUD', 0), LIM_PRETUD) + min(saisies.get('PRETUDANT', 0), LIM_PRETUD * saisies.get('CASEPRETUD', 0)), 0) * 1 - V_CNR
APROREP = DPROREP * 1 - ART1731BIS + min(DPROREP, max(APROREP_P + APROREPP2, APROREP1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AREDMEUB = DREDMEUB * 1 - ART1731BIS + min(DREDMEUB, max(AREDMEUB_P + AREDMEUBP2, AREDMEUB1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AREDREP = DREDREP * 1 - ART1731BIS + min(DREDREP, max(AREDREP_P + AREDREPP2, AREDREP1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AREPA = BAA * 1 - ART1731BIS + min(BAA, max(AREPA_P + AREPAP2, AREPA1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
AREPMEU = DREPMEU * 1 - ART1731BIS + min(DREPMEU, max(AREPMEU_P + AREPMEUP2, AREPMEU1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AREPNPRO = DREPNPRO * 1 - ART1731BIS + min(DREPNPRO, max(APROREP_P + APROREPP2, AREPNPRO1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
ARESIMEUB_1 = round(min(PLAF_RESINEUV, saisies.get('VIEUMEUB', 0)) / 9) * 1 - V_CNR
ARESIVIEU_1 = round(ACODIM / 9) + round(ACODIW / 9)
ARIRENOV = BRENOV * 1 - ART1731BIS + min(BRENOV, max(ARIRENOV_P + ARIRENOVP2, ARIRENOV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
ASOCREPR = BSOCREP * 1 - ART1731BIS + min(BSOCREP, max(ASOCREPR_P + ASOCREPRP2, ASOCREPR1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
ASOUFIP = BSOUFIP * 1 - ART1731BIS + min(BSOUFIP, max(ASOUFIP_P + ASOUFIPP2, ASOUFIP1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
ATEC = is_positive(DTEC) * DTEC
ATOUHOTR = DTOUHOTR * 1 - ART1731BIS + min(DTOUHOTR, max(ATOUHOTR_P + ATOUHOTRP2, ATOUHOTR1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)))
ATOUREPA = DTOUREPA * 1 - ART1731BIS + min(DTOUREPA, max(ATOUREPA_P + ATOUREPAP2, ATOUREPA1731 + 0) * 1 - PREM8_11) * ART1731BIS
ATOURREP = DTOURREP * 1 - ART1731BIS + min(DTOURREP, max(ATOURREP_P + ATOURREPP2, ATOURREP1731 + 0) * 1 - PREM8_11) * ART1731BIS
AUBAINE12 = max(0, min(saisies.get('V_A12REEL', 0), saisies.get('V_DIFTEOREEL', 0) - AUBAINE13A - AUBAINE13B))
AVPLAF13 = AVPLAF13A + AVPLAF13B
BA1 = BA1V + BA1C + BA1P
BADCRE = min(saisies.get('CREAIDE', 0), min(LIM_AIDOMI * 1 - is_positive(saisies.get('PREMAIDE', 0)) + LIM_PREMAIDE * is_positive(saisies.get('PREMAIDE', 0)) + MAJSALDOM * positif_ou_nul(saisies.get('V_ANREV', 0) - saisies.get('V_0DA', 0) - 65) + positif_ou_nul(saisies.get('V_ANREV', 0) - saisies.get('V_0DB', 0) - 65) * BOOL_0AM + saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0DN', 0) + saisies.get('V_0CH', 0) + saisies.get('V_0DP', 0) / 2, LIM_AIDOMI3 * 1 - is_positive(saisies.get('PREMAIDE', 0)) + LIM_PREMAIDE2 * is_positive(saisies.get('PREMAIDE', 0))) * 1 - is_positive(saisies.get('INAIDE', 0) + 0) + LIM_AIDOMI2 * is_positive(saisies.get('INAIDE', 0) + 0))
BADPLAF = min(LIM_AIDOMI * 1 - is_positive(saisies.get('PREMAIDE', 0)) + LIM_PREMAIDE * is_positive(saisies.get('PREMAIDE', 0)) + MAJSALDOM * positif_ou_nul(saisies.get('V_ANREV', 0) - saisies.get('V_0DA', 0) - 65) + positif_ou_nul(saisies.get('V_ANREV', 0) - saisies.get('V_0DB', 0) - 65) * BOOL_0AM + saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0DN', 0) + saisies.get('V_0CH', 0) + saisies.get('V_0DP', 0) / 2, LIM_AIDOMI3 * 1 - is_positive(saisies.get('PREMAIDE', 0)) + LIM_PREMAIDE2 * is_positive(saisies.get('PREMAIDE', 0))) * 1 - is_positive(saisies.get('INAIDE', 0) + 0) + LIM_AIDOMI2 * is_positive(saisies.get('INAIDE', 0) + 0) * is_positive(saisies.get('RVAIDE', 0))
BADPLAF2 = min(LIM_AIDOMI * 1 - is_positive(saisies.get('PREMAIDE', 0)) + LIM_PREMAIDE * is_positive(saisies.get('PREMAIDE', 0)) + MAJSALDOM * positif_ou_nul(saisies.get('V_ANREV', 0) - saisies.get('V_0DA', 0) - 65) + positif_ou_nul(saisies.get('V_ANREV', 0) - saisies.get('V_0DB', 0) - 65) * BOOL_0AM + saisies.get('ASCAPA', 0) + saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0DN', 0) + saisies.get('V_0CH', 0) + saisies.get('V_0DP', 0) / 2, LIM_AIDOMI3 * 1 - is_positive(saisies.get('PREMAIDE', 0)) + LIM_PREMAIDE2 * is_positive(saisies.get('PREMAIDE', 0))) * 1 - is_positive(saisies.get('INAIDE', 0) + 0) + LIM_AIDOMI2 * is_positive(saisies.get('INAIDE', 0) + 0) * is_positive(saisies.get('RVAIDAS', 0))
BAH = min(saisies.get('RVCURE', 0), LIM_CURE) + min(saisies.get('RCCURE', 0), LIM_CURE) * 1 - V_CNR
BARAC = saisies.get('BACREC', 0) + _4BACREC - saisies.get('BACDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BARAP = saisies.get('BACREP', 0) + _4BACREP - saisies.get('BACDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BARAV = saisies.get('BACREV', 0) + _4BACREV - saisies.get('BACDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BARSC = saisies.get('BAHREC', 0) + _4BAHREC - saisies.get('BAHDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BARSP = saisies.get('BAHREP', 0) + _4BAHREP - saisies.get('BAHDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BARSV = saisies.get('BAHREV', 0) + _4BAHREV - saisies.get('BAHDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BASE7UN = min(saisies.get('RDFOREST', 0), PLAF_FOREST * 1 + BOOL_0AM) * 1 - V_CNR
BASEDONP = saisies.get('RDDOUP', 0) + BDON7UH + saisies.get('DONAUTRE', 0) + EXCEDANTA
BASSURC2 = max(0, saisies.get('CESSASSC', 0) - BASSURC3 - LIM_ASSUR2)
BASSURV2 = max(0, saisies.get('CESSASSV', 0) - BASSURV3 - LIM_ASSUR2)
BCDIS = saisies.get('GSALV', 0) + saisies.get('GSALC', 0) * 1 - V_CNR * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BCICAP = min(IPCAPTAXTOT, round(saisies.get('PRELIBXT', 0) - round(saisies.get('PRELIBXT', 0) * TX10 / 100) * T_PCAPTAX / 100))
BCIDONENTR = saisies.get('RDMECENAT', 0) * 1 - V_CNR
BCIFORETUA = max(0, min(saisies.get('COD7UA', 0), max(0, PLAF_FOREST1 * 1 + BOOL_0AM))) * 1 - V_CNR
BCIFORETUB = max(0, min(saisies.get('COD7UB', 0), max(0, PLAF_FOREST1 * 1 + BOOL_0AM - BCIFORETUA))) * 1 - V_CNR
BCIFORETUI = max(0, min(saisies.get('COD7UI', 0), max(0, PLAF_FOREST2 * 1 + BOOL_0AM))) * 1 - V_CNR
BCIFORETUP = max(0, min(saisies.get('RDFORESTRA', 0), PLAF_FOREST1 * 1 + BOOL_0AM - BCIFORETUA - BCIFORETUB)) * 1 - V_CNR
BCIFORETUQ = max(0, min(saisies.get('RDFORESTGES', 0), PLAF_FOREST2 * 1 + BOOL_0AM - BCIFORETUI)) * 1 - V_CNR
BCIFORETUT = max(0, min(saisies.get('SINISFORET', 0), max(0, PLAF_FOREST1 * 1 + BOOL_0AM - BCIFORETUA - BCIFORETUB - BCIFORETUP))) * 1 - V_CNR
BCIHP = max(PLAFHABPRIN * 1 + BOOL_0AM * 1 + is_positive(saisies.get('V_0AP', 0) + saisies.get('V_0AF', 0) + saisies.get('V_0CG', 0) + saisies.get('V_0CI', 0) + saisies.get('V_0CR', 0)) + PLAFHABPRINENF / 2 * saisies.get('V_0CH', 0) + saisies.get('V_0DP', 0) + PLAFHABPRINENF * saisies.get('V_0CR', 0) + saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0DN', 0), 0)
BDIFAGRI = min(saisies.get('INTDIFAGRI', 0), LIM_DIFAGRI * 1 + BOOL_0AM) * 1 - V_CNR
BDRSE1 = max(0, saisies.get('SALECS', 0) - saisies.get('REVCSXA', 0) - round(saisies.get('CSPROVYD', 0) / TX075 / 100)) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BDRSE2 = max(0, saisies.get('ALLECS', 0) - saisies.get('REVCSXC', 0) - round(saisies.get('CSPROVYF', 0) / TX066 / 100)) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BDRSE3 = max(0, saisies.get('INDECS', 0) - saisies.get('REVCSXD', 0) - round(saisies.get('CSPROVYG', 0) / TX062 / 100)) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BDRSE4 = max(0, saisies.get('PENECS', 0) - saisies.get('REVCSXE', 0) - round(saisies.get('CSPROVYH', 0) / TX038 / 100)) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BDRSE5 = max(0, saisies.get('SALECSG', 0) - saisies.get('REVCSXB', 0) - round(saisies.get('CSPROVYE', 0) / TX075 / 100)) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BFCPI_1 = is_positive(BOOL_0AM) * min(saisies.get('FCPI', 0), PLAF_FCPI * 2) + is_positive(1 - BOOL_0AM) * min(saisies.get('FCPI', 0), PLAF_FCPI) * 1 - V_CNR
BGEPAHA = min(saisies.get('RDEQPAHA', 0), P2GE) * 1 - V_CNR
BGLOA = saisies.get('GLDGRATV', 0) + saisies.get('GLDGRATC', 0) * 1 - V_CNR * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BGLOACNR = saisies.get('GLDGRATV', 0) + saisies.get('GLDGRATC', 0) * V_CNR * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BI12F = sum([REVIBI12V, REVIBI12C, REVIBI12P]) + MIB_1AF
BICPF = sum([BIPTAV + BIHTAV + MIB_NETVV + MIB_NETPV, BIPTAC + BIHTAC + MIB_NETVC + MIB_NETPC, BIPTAP + BIHTAP + MIB_NETVP + MIB_NETPP]) + MIB_NETCT
BIHTAC = max(0, round(saisies.get('BIHNOC', 0) - saisies.get('BIHDNC', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV)) + min(0, saisies.get('BIHNOC', 0) - saisies.get('BIHDNC', 0) * 1 - is_positive(ART1731BIS * PREM8_11))
BIHTAP = max(0, round(saisies.get('BIHNOP', 0) - saisies.get('BIHDNP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV)) + min(0, saisies.get('BIHNOP', 0) - saisies.get('BIHDNP', 0) * 1 - is_positive(ART1731BIS * PREM8_11))
BIHTAV = max(0, round(saisies.get('BIHNOV', 0) - saisies.get('BIHDNV', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV)) + min(0, saisies.get('BIHNOV', 0) - saisies.get('BIHDNV', 0) * 1 - is_positive(ART1731BIS * PREM8_11))
BINHTAC = max(0, round(saisies.get('BICHREC', 0) - saisies.get('BICHDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV)) + min(0, saisies.get('BICHREC', 0) - saisies.get('BICHDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11))
BINHTAP = max(0, round(saisies.get('BICHREP', 0) - saisies.get('BICHDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV)) + min(0, saisies.get('BICHREP', 0) - saisies.get('BICHDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11))
BINHTAV = max(0, round(saisies.get('BICHREV', 0) - saisies.get('BICHDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV)) + min(0, saisies.get('BICHREV', 0) - saisies.get('BICHDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11))
BINTAC = saisies.get('BICREC', 0) - saisies.get('BICDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BINTAP = saisies.get('BICREP', 0) - saisies.get('BICDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BINTAV = saisies.get('BICREV', 0) - saisies.get('BICDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BINTTAC = BINTAC + saisies.get('BI2AC', 0)
BINTTAP = BINTAP + saisies.get('BI2AP', 0)
BINTTAV = BINTAV + saisies.get('BI2AV', 0)
BIPTAC = saisies.get('BICNOC', 0) - saisies.get('BICDNC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BIPTAP = saisies.get('BICNOP', 0) - saisies.get('BICDNP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BIPTAV = saisies.get('BICNOV', 0) - saisies.get('BICDNV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BIPTTAC = BIPTAC + saisies.get('BI1AC', 0)
BIPTTAP = BIPTAP + saisies.get('BI1AP', 0)
BIPTTAV = BIPTAV + saisies.get('BI1AV', 0)
BITAC = BIPTAC + BINTAC
BITAP = BIPTAP + BINTAP
BITAV = BIPTAV + BINTAV
BITTAC = BITAC + BI12AC
BITTAP = BITAP + BI12AP
BITTAV = BITAV + BI12AV
BNCNPTOT = SPENETPF + SPENETNPF
BNNAAC = saisies.get('BNCAABC', 0) - saisies.get('BNCAADC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BNNAAP = saisies.get('BNCAABP', 0) - saisies.get('BNCAADP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BNNAAV = saisies.get('BNCAABV', 0) - saisies.get('BNCAADV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BNNAC = saisies.get('BNCREC', 0) - saisies.get('BNCDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BNNAP = saisies.get('BNCREP', 0) - saisies.get('BNCDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BNNAV = saisies.get('BNCREV', 0) - saisies.get('BNCDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BNNSC = is_positive(saisies.get('BNHREC', 0) - saisies.get('BNHDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * round(saisies.get('BNHREC', 0) - saisies.get('BNHDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV) + 1 - positif_ou_nul(saisies.get('BNHREC', 0) - saisies.get('BNHDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * saisies.get('BNHREC', 0) - saisies.get('BNHDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BNNSP = is_positive(saisies.get('BNHREP', 0) - saisies.get('BNHDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * round(saisies.get('BNHREP', 0) - saisies.get('BNHDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV) + 1 - positif_ou_nul(saisies.get('BNHREP', 0) - saisies.get('BNHDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * saisies.get('BNHREP', 0) - saisies.get('BNHDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BNNSV = is_positive(saisies.get('BNHREV', 0) - saisies.get('BNHDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * round(saisies.get('BNHREV', 0) - saisies.get('BNHDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV) + 1 - positif_ou_nul(saisies.get('BNHREV', 0) - saisies.get('BNHDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * saisies.get('BNHREV', 0) - saisies.get('BNHDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
BNRC = BNNSC + BNNAC
BNRP = BNNSP + BNNAP
BNRV = BNNSV + BNNAV
BOOL_PACSFL = 1 - is_positive(PAC + saisies.get('V_0CH', 0) + 0)
BOOL_V = is_positive(saisies.get('V_0AV', 0) + 0) * is_positive(1 - BOOL_0AZ) * 1 - is_positive(PAC + saisies.get('V_0CH', 0) + 0) + is_positive(PAC + saisies.get('V_0CH', 0) + 0) * 3 - is_zero(EAC + saisies.get('V_0CH', 0) + 0)
BPLIB = min(saisies.get('RCMLIB', 0), max(0, ABTAV - RAVC)) * 1 - V_CNR
BPRESCOMP = saisies.get('RDPRESREPORT', 0) + 1 - is_positive(saisies.get('RDPRESREPORT', 0) + 0) * round(1 - present(saisies.get('SUBSTITRENTE', 0)) * round(is_zero(saisies.get('PRESCOMP2000', 0) - saisies.get('PRESCOMPJUGE', 0)) * min(PLAFPRESCOMP, saisies.get('PRESCOMP2000', 0)) + is_positive(saisies.get('PRESCOMPJUGE', 0) - saisies.get('PRESCOMP2000', 0)) * positif_ou_nul(PLAFPRESCOMP - saisies.get('PRESCOMPJUGE', 0)) * saisies.get('PRESCOMP2000', 0) + is_positive(saisies.get('PRESCOMPJUGE', 0) - saisies.get('PRESCOMP2000', 0)) * 1 - positif_ou_nul(PLAFPRESCOMP - saisies.get('PRESCOMPJUGE', 0)) * PLAFPRESCOMP * saisies.get('PRESCOMP2000', 0) / saisies.get('PRESCOMPJUGE', 0)) + present(saisies.get('SUBSTITRENTE', 0)) * round(is_zero(saisies.get('PRESCOMP2000', 0) - saisies.get('SUBSTITRENTE', 0)) * positif_ou_nul(PLAFPRESCOMP - saisies.get('PRESCOMPJUGE', 0)) * saisies.get('SUBSTITRENTE', 0) + is_positive(saisies.get('PRESCOMPJUGE', 0) - PLAFPRESCOMP) * round(PLAFPRESCOMP * saisies.get('SUBSTITRENTE', 0) / saisies.get('PRESCOMPJUGE', 0)) + is_positive(saisies.get('SUBSTITRENTE', 0) - saisies.get('PRESCOMP2000', 0)) * positif_ou_nul(PLAFPRESCOMP - saisies.get('PRESCOMPJUGE', 0)) * saisies.get('PRESCOMP2000', 0) + is_positive(saisies.get('PRESCOMPJUGE', 0) - PLAFPRESCOMP) * round(PLAFPRESCOMP * saisies.get('SUBSTITRENTE', 0) / saisies.get('PRESCOMPJUGE', 0) * saisies.get('PRESCOMP2000', 0) / saisies.get('SUBSTITRENTE', 0)))) * 1 - V_CNR
BPRESCOMP01 = max(0, 1 - present(saisies.get('SUBSTITRENTE', 0)) * positif_ou_nul(PLAFPRESCOMP - saisies.get('PRESCOMPJUGE', 0)) * saisies.get('PRESCOMPJUGE', 0) - BPRESCOMP + is_positive(saisies.get('PRESCOMPJUGE', 0) - PLAFPRESCOMP) * PLAFPRESCOMP - BPRESCOMP + present(saisies.get('SUBSTITRENTE', 0)) * positif_ou_nul(PLAFPRESCOMP - saisies.get('PRESCOMPJUGE', 0)) * saisies.get('SUBSTITRENTE', 0) - saisies.get('PRESCOMP2000', 0) + is_positive(saisies.get('PRESCOMPJUGE', 0) - PLAFPRESCOMP) * round(PLAFPRESCOMP * saisies.get('SUBSTITRENTE', 0) / saisies.get('PRESCOMPJUGE', 0) * saisies.get('SUBSTITRENTE', 0) - saisies.get('PRESCOMP2000', 0) / saisies.get('SUBSTITRENTE', 0)) * 1 - V_CNR)
BPTP18 = BTP18 * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BPTP2 = BTP2 * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BPTP24 = RCM2FA * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0))) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)))
BPTP40 = BTP40 * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BPTP5 = BTP5 * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BPTPDIV = BTP5 * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BPTPSB = BTPSB * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BPTPSJ = BTPSJ * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BPTPSK = BTPSK * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BPTPVT = BTPVT * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BREGV = saisies.get('COD2LA', 0) * 1 - V_CNR * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BRSE1 = saisies.get('SALECS', 0) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BRSE2 = saisies.get('ALLECS', 0) + saisies.get('COD8SA', 0) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BRSE3 = saisies.get('INDECS', 0) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BRSE4 = saisies.get('PENECS', 0) + saisies.get('COD8SB', 0) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BRSE5 = saisies.get('SALECSG', 0) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BRSE8SA = saisies.get('COD8SA', 0) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BRSE8SB = saisies.get('COD8SB', 0) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BRSE8TV = saisies.get('ALLECS', 0) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BRSE8TX = saisies.get('PENECS', 0) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - V_CNR
BRSETOT = BRSE1 + BRSE2 + BRSE3 + BRSE4 + BRSE5
BSNCC = max(0, min(saisies.get('REPSNON', 0), LIM_SOCNOUV2 * 1 + BOOL_0AM - BSNCL - BSNCM - BSNCN))
BSNCF = max(0, min(saisies.get('RDSNO', 0), LIM_TITPRISE * 1 + BOOL_0AM - BSN1 - BSNCQ - BSNCR))
BSNCU = max(0, min(saisies.get('PETIPRISE', 0), LIM_SOCNOUV2 * 1 + BOOL_0AM - BSNCL - BSNCM - BSNCN - BSNCC))
BSURV = min(saisies.get('RDRESU', 0), PLAF_RSURV + PLAF_COMPSURV * EAC + saisies.get('V_0DN', 0) + PLAF_COMPSURVQAR * saisies.get('V_0CH', 0) + saisies.get('V_0DP', 0))
BTP3A = BN1 + SPEPV + BI12F + BA1 * 1 - is_positive(saisies.get('IPVLOC', 0))
CDISC = round(BCDIS * TCDIS / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
CGLOA = round(BGLOA * TX075 / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
CGLOAAC = CGLOA
CIADCRE = round(BADCRE * TX_AIDOMI / 100) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * 1 - V_CNR
CICONGAGRI = saisies.get('CRECONGAGRI', 0) * 1 - V_CNR
CIFORET = round(BCIFORETUP * TX18 / 100 + BCIFORETUT * TX18 / 100 + BCIFORETUA * TX25 / 100 + BCIFORETUB * TX25 / 100 + BCIFORETUQ * TX18 / 100 + BCIFORETUI * TX25 / 100)
CILOYIMP = round(ALOYIMP * TX_LOYIMP / 100) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
CIPRETUD = round(APRETUD * TX_PRETUD / 100) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * 1 - V_CNR
CITEC = round(ATEC * TX40 / 100)
CSGDEDAUTRE = is_positive(saisies.get('ABDETPLUS', 0) + 0) * round(PVBARPS - saisies.get('ABDETPLUS', 0) - saisies.get('COD3UA', 0) + 0 * TX051 / 100)
CSRECA = positif_ou_nul(PRS_A + PPRS_A + CSG_A + RDS_A + PCSG_A + PRDS_A + CVN_A + PCVN_A + CDIS_A + PCDIS_A + CGLOA_A + PGLOA_A + REGV_A + PREGV_A + RSE1BASE_A + PRSE1_A + RSE2BASE_A + PRSE2_A + RSE3BASE_A + PRSE3_A + RSE4BASE_A + PRSE4_A + RSE5BASE_A + PRSE5_A + IRNIN_A + PIR_A + TAXABASE_A + PTAXA_A + CHRBASE_A + PCHR_A + PCAPBASE_A + PPCAP_A + LOYBASE_A + PLOY_A - SEUIL_12)
CSRTF = RDPTP + saisies.get('PVINVE', 0) + saisies.get('PVINCE', 0) + saisies.get('PVINPE', 0) + sum([saisies.get('BN1AV', 0) + saisies.get('BI1AV', 0) + saisies.get('BI2AV', 0) + saisies.get('BA1AV', 0), saisies.get('BN1AC', 0) + saisies.get('BI1AC', 0) + saisies.get('BI2AC', 0) + saisies.get('BA1AC', 0), saisies.get('BN1AP', 0) + saisies.get('BI1AP', 0) + saisies.get('BI2AP', 0) + saisies.get('BA1AP', 0)]) * 1 - is_positive(saisies.get('IPVLOC', 0))
CS_BPCOS = RDNCP
CS_RTF = RDPTP + RDNCP
CVNAC = CVNSALC
CVNBASE = CVNSALC - saisies.get('COD8YT', 0)
DAR = saisies.get('DEFAA5', 0) + saisies.get('DEFAA4', 0) + saisies.get('DEFAA3', 0) + saisies.get('DEFAA2', 0) + saisies.get('DEFAA1', 0) + saisies.get('DEFAA0', 0) * 1 - PREM8_11 * 1 - is_positive(saisies.get('IPVLOC', 0))
DEFBACREC = is_positive(_4BACREC) * round(saisies.get('BACDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * saisies.get('BACREC', 0) / BARREVAC) + 1 - is_positive(_4BACREC) * saisies.get('BACDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
DEFBACREP = is_positive(_4BACREP) * round(saisies.get('BACDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * saisies.get('BACREP', 0) / BARREVAP) + 1 - is_positive(_4BACREP) * saisies.get('BACDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
DEFBACREV = is_positive(_4BACREV) * round(saisies.get('BACDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * saisies.get('BACREV', 0) / BARREVAV) + 1 - is_positive(_4BACREV) * saisies.get('BACDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
DEFBAHREC = is_positive(_4BAHREC) * round(saisies.get('BAHDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * saisies.get('BAHREC', 0) / BARSREVC) + 1 - is_positive(_4BAHREC) * saisies.get('BAHDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
DEFBAHREP = is_positive(_4BAHREP) * round(saisies.get('BAHDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * saisies.get('BAHREP', 0) / BARSREVP) + 1 - is_positive(_4BAHREP) * saisies.get('BAHDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
DEFBAHREV = is_positive(_4BAHREV) * round(saisies.get('BAHDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * saisies.get('BAHREV', 0) / BARSREVV) + 1 - is_positive(_4BAHREV) * saisies.get('BAHDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
DEFBANIF = is_positive(DEFRIBASUP + DEFRIGLOBSUP) * 1 - PREM8_11 * max(0, min(SOMDEFBANI, max(DEFBANI1731, max(DEFBANI_P, DEFBANIP2)) - SOMDEFBANI))
DEFBICNPF = DEFRIBIC * 1 - PREM8_11 * max(0, min(saisies.get('BICDEV', 0) + saisies.get('BICDEC', 0) + saisies.get('BICDEP', 0) + saisies.get('BICHDEV', 0) + saisies.get('BICHDEC', 0) + saisies.get('BICHDEP', 0), max(DFBICNPF1731, max(DFBICNPF_P, DFBICNPFP2)) - saisies.get('BICDEV', 0) - saisies.get('BICDEC', 0) - saisies.get('BICDEP', 0) - saisies.get('BICHDEV', 0) - saisies.get('BICHDEC', 0) - saisies.get('BICHDEP', 0)))
DEFBNCNPF = DEFRIBNC * 1 - PREM8_11 * max(0, min(saisies.get('DNOCEP', 0) + saisies.get('DNOCEPC', 0) + saisies.get('DNOCEPP', 0) + saisies.get('BNCAADV', 0) + saisies.get('BNCAADC', 0) + saisies.get('BNCAADP', 0), max(DEFBNCNP1731, max(DEFBNCNP_P, DEFBNCNPP2)) - saisies.get('DNOCEP', 0) - saisies.get('DNOCEPC', 0) - saisies.get('DNOCEPP', 0) - saisies.get('BNCAADV', 0) - saisies.get('BNCAADC', 0) - saisies.get('BNCAADP', 0)))
DEFLOCNPF = DEFRILOC + 0 * 1 - PREM8_11 * max(0, min(saisies.get('LOCDEFNPV', 0) + saisies.get('LOCDEFNPC', 0) + saisies.get('LOCDEFNPPAC', 0) + saisies.get('LOCDEFNPCGAV', 0) + saisies.get('LOCDEFNPCGAC', 0) + saisies.get('LOCDEFNPCGAPAC', 0), max(DEFLOCNP1731, max(DEFLOCNP_P, DEFLOCNPP2)) - saisies.get('LOCDEFNPV', 0) - saisies.get('LOCDEFNPC', 0) - saisies.get('LOCDEFNPPAC', 0) - saisies.get('LOCDEFNPCGAV', 0) - saisies.get('LOCDEFNPCGAC', 0) - saisies.get('LOCDEFNPCGAPAC', 0)))
DEFRIBIS = is_positive(RIDEFRIBIS + DEFRIGLOBSUPBIS + DEFRIGLOBINFBIS + DEFRIBASUPBIS + DEFRIBAINFBIS + DEFRIBICBIS + DEFRILOCBIS + DEFRIBNCBIS + DEFRIRFBIS + DEFRIRCMBIS + DEFRITSBIS + DEFRIMONDBIS + 0)
DFA = min(saisies.get('CHRFAC', 0), RPREC * LIM_FRACC) * 1 - V_CNR * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
DFANT = saisies.get('DEFAA5', 0) + saisies.get('DEFAA4', 0) + saisies.get('DEFAA3', 0) + saisies.get('DEFAA2', 0) + saisies.get('DEFAA1', 0) + saisies.get('DEFAA0', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * 1 - is_positive(saisies.get('IPVLOC', 0))
DFCE = min(0, RFCD - saisies.get('RFDORD', 0)) * 1 - is_positive(ART1731BIS) + min(0, RFCD - DEFRF4BB) * is_positive(ART1731BIS)
DFCG = min(0, RFCF - saisies.get('RFDANT', 0)) * 1 - is_positive(ART1731BIS) + min(0, RFCF - DEFRF4BD) * is_positive(ART1731BIS)
DFOREST = FORTRA + saisies.get('RDFOREST', 0)
DIDOMPRO = RIDOMPRO * 1 - ART1731BIS + min(RIDOMPRO, max(DIDOMPRO_P + DIDOMPROP2, DIDOMPRO1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
DIFF7WD = is_positive(abs(saisies.get('COD7WD', 0) - VAR7WD_P) * is_zero(5 - saisies.get('V_IND_TRAIT', 0)) + DIFF7WD_A)
DIFF7WY = is_positive(abs(saisies.get('DEPCHOBAS', 0) - VAR7WY_P) * is_zero(5 - saisies.get('V_IND_TRAIT', 0)) + DIFF7WY_A)
DIFF7WZ = is_positive(abs(saisies.get('DEPMOBIL', 0) - VAR7WZ_P) * is_zero(5 - saisies.get('V_IND_TRAIT', 0)) + DIFF7WZ_A)
DMOND_2 = saisies.get('DMOND', 0) * is_zero(SOMMEMOND_2 + 0) + 0 * 1 - PREM8_11
DOMAVTD = round(BN1 + SPEPV + BI12F + BA1 * TX05 / 100) * is_positive(V_EAD)
DOMAVTG = round(BN1 + SPEPV + BI12F + BA1 * TX07 / 100) * is_positive(V_EAG)
DOMAVTO = DOMAVTD + DOMAVTG
DOMITPD = round(BN1 + SPEPV + BI12F + BA1) * TX11 / 100 * is_positive(V_EAD)
DOMITPG = round(BN1 + SPEPV + BI12F + BA1) * TX09 / 100 * is_positive(V_EAG)
DPA = sum([min(saisies.get('NCHENF1', 0), LIMDPAE) + min(round(saisies.get('CHENF1', 0) * MAJREV), LIMDPAE), min(saisies.get('NCHENF2', 0), LIMDPAE) + min(round(saisies.get('CHENF2', 0) * MAJREV), LIMDPAE), min(saisies.get('NCHENF3', 0), LIMDPAE) + min(round(saisies.get('CHENF3', 0) * MAJREV), LIMDPAE), min(saisies.get('NCHENF4', 0), LIMDPAE) + min(round(saisies.get('CHENF4', 0) * MAJREV), LIMDPAE)]) + TOTPA * 1 - V_CNR * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
DPAE = sum([min(saisies.get('CHENF1', 0), LIMDPAE), min(saisies.get('CHENF2', 0), LIMDPAE), min(saisies.get('CHENF3', 0), LIMDPAE), min(saisies.get('CHENF4', 0), LIMDPAE)]) * 1 - V_CNR
DRCF = min(0, RFCE - saisies.get('RFDHIS', 0) * 1 - is_positive(PREM8_11))
DRFRP = 1 - is_positive(saisies.get('IPVLOC', 0)) * abs(DFCE + DFCG) * 1 - is_positive(saisies.get('RFMIC', 0)) + is_positive(saisies.get('RFMIC', 0)) * abs(min(0, saisies.get('RFMIC', 0) - MICFR - saisies.get('RFDANT', 0))) * 1 - is_positive(ART1731BIS) + ART1731BIS * DEFRFNONI
EPAV = round(BPLIB * TX_PREVLIB / 100)
EXOCJT = present(saisies.get('TSASSUC', 0)) + is_positive(saisies.get('XETRANC', 0)) + is_positive(saisies.get('EXOCETC', 0)) + present(saisies.get('FEXC', 0)) + is_positive(saisies.get('MIBEXC', 0)) + is_positive(saisies.get('MIBNPEXC', 0)) + is_positive(saisies.get('BNCPROEXC', 0)) + is_positive(saisies.get('XSPENPC', 0)) + is_positive(XBAC) + is_positive(XBIPC) + is_positive(XBINPC) + is_positive(XBNC) + is_positive(XBNNPC) + is_positive(ABICPDECC) * 1 - V_CNR + is_positive(ABNCPDECC) * 1 - V_CNR + is_positive(HONODECC) * 1 - V_CNR + is_positive(AGRIC) + is_positive(saisies.get('BIPERPC', 0)) + is_positive(BNCCREAC)
EXOPAC = present(saisies.get('FEXP', 0)) + is_positive(saisies.get('MIBEXP', 0)) + is_positive(saisies.get('MIBNPEXP', 0)) + is_positive(saisies.get('BNCPROEXP', 0)) + is_positive(saisies.get('XSPENPP', 0)) + is_positive(XBAP) + is_positive(XBIPP) + is_positive(XBINPP) + is_positive(XBNP) + is_positive(XBNNPP) + is_positive(ABICPDECP) * 1 - V_CNR + is_positive(ABNCPDECP) * 1 - V_CNR + is_positive(HONODECP) * 1 - V_CNR + is_positive(AGRIP) + is_positive(saisies.get('BIPERPP', 0)) + is_positive(BNCCREAP)
EXOVOUS = present(saisies.get('TSASSUV', 0)) + is_positive(saisies.get('XETRANV', 0)) + is_positive(saisies.get('EXOCETV', 0)) + present(saisies.get('FEXV', 0)) + is_positive(saisies.get('MIBEXV', 0)) + is_positive(saisies.get('MIBNPEXV', 0)) + is_positive(saisies.get('BNCPROEXV', 0)) + is_positive(saisies.get('XSPENPV', 0)) + is_positive(XBAV) + is_positive(XBIPV) + is_positive(XBINPV) + is_positive(XBNV) + is_positive(XBNNPV) + is_positive(ABICPDECV) * 1 - V_CNR + is_positive(ABNCPDECV) * 1 - V_CNR + is_positive(HONODECV) * 1 - V_CNR + is_positive(AGRIV) + is_positive(saisies.get('BIPERPV', 0)) + is_positive(BNCCREAV)
EXPR1 = PRB1 + _2PRB1 + saisies.get('PEBF1', 0)
EXPR2 = PRB2 + _2PRB2 + saisies.get('PEBF2', 0)
EXPR3 = PRB3 + _2PRB3 + saisies.get('PEBF3', 0)
EXPR4 = PRB4 + _2PRB4 + saisies.get('PEBF4', 0)
EXPRC = PRBC + _2PRBC + saisies.get('PEBFC', 0)
EXPRV = PRBV + _2PRBV + saisies.get('PEBFV', 0)
EXTS1 = TSBN1 + _2TSN1
EXTS2 = TSBN2 + _2TSN2
EXTS3 = TSBN3 + _2TSN3
EXTS4 = TSBN4 + _2TSN4
EXTSC = TSBNC + saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0) + _2TSNC
EXTSV = TSBNV + saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0) + _2TSNV
GLOBASE = CGLOA - saisies.get('COD8YL', 0)
HONONET = HONONETV + HONONETC + HONONETP
I2DH = EPAV
ICI8XFH = min(round(BPTP18 * TX18 / 100), round(saisies.get('COD8XF', 0) * TX18 / 100)) + min(round(BPTP4I * TX30 / 100), round(saisies.get('COD8XG', 0) * TX30 / 100)) + min(round(BPTP40 * TX41 / 100), round(saisies.get('COD8XH', 0) * TX41 / 100))
ICI8XV = min(round(RCM2FA * TX24 / 100), round(saisies.get('COD8XV', 0) * TX24 / 100)) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)))
ICIGLO = min(round(BPTP18 * TX18 / 100), round(saisies.get('COD8XF', 0) * TX18 / 100)) + min(round(RCM2FA * TX24 / 100), round(saisies.get('COD8XV', 0) * TX24 / 100)) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0))) + min(round(BPTP4I * TX30 / 100), round(saisies.get('COD8XG', 0) * TX30 / 100)) + min(round(BPTP40 * TX41 / 100), round(saisies.get('COD8XH', 0) * TX41 / 100))
IND9HI0 = INDCTX23 * is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * present(saisies.get('ISFBASE', 0))
INDREV1A8 = is_positive(INDREV1A8IR)
INDRSE1X = is_positive(CS_DEG) * is_positive(BRSE1) * is_positive(INDCTX)
INDRSE2X = is_positive(CS_DEG) * is_positive(BRSE2) * is_positive(INDCTX)
INDRSE3X = is_positive(CS_DEG) * is_positive(BRSE3) * is_positive(INDCTX)
INDRSE4X = is_positive(CS_DEG) * is_positive(BRSE4) * is_positive(INDCTX)
INDRSE5X = is_positive(CS_DEG) * is_positive(BRSE5) * is_positive(INDCTX)
INDTEFF = 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0))) * 1 - is_positive(is_positive(VARIPTEFP * is_positive(ART1731BIS) + saisies.get('IPTEFP', 0) * 1 - ART1731BIS) + is_positive(VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS)) * is_positive(is_positive(saisies.get('AUTOBICVV', 0)) + is_positive(saisies.get('AUTOBICPV', 0)) + is_positive(saisies.get('AUTOBICVC', 0)) + is_positive(saisies.get('AUTOBICPC', 0)) + is_positive(saisies.get('AUTOBICVP', 0)) + is_positive(saisies.get('AUTOBICPP', 0)) + is_positive(saisies.get('AUTOBNCV', 0)) + is_positive(saisies.get('AUTOBNCC', 0)) + is_positive(saisies.get('AUTOBNCP', 0)) + is_positive(saisies.get('XHONOAAV', 0)) + is_positive(saisies.get('XHONOV', 0)) + is_positive(saisies.get('XHONOAAC', 0)) + is_positive(saisies.get('XHONOC', 0)) + is_positive(saisies.get('XHONOAAP', 0)) + is_positive(saisies.get('XHONOP', 0)) + is_positive(saisies.get('SALEXTV', 0)) + is_positive(saisies.get('COD1AD', 0)) + is_positive(saisies.get('COD1AE', 0)) + is_positive(saisies.get('COD1AH', 0)) + is_positive(saisies.get('SALEXTC', 0)) + is_positive(saisies.get('COD1BD', 0)) + is_positive(saisies.get('COD1BE', 0)) + is_positive(saisies.get('COD1BH', 0)) + is_positive(saisies.get('SALEXT1', 0)) + is_positive(saisies.get('COD1CD', 0)) + is_positive(saisies.get('COD1CE', 0)) + is_positive(saisies.get('COD1CH', 0)) + is_positive(saisies.get('SALEXT2', 0)) + is_positive(saisies.get('COD1DD', 0)) + is_positive(saisies.get('COD1DE', 0)) + is_positive(saisies.get('COD1DH', 0)) + is_positive(saisies.get('SALEXT3', 0)) + is_positive(saisies.get('COD1ED', 0)) + is_positive(saisies.get('COD1EE', 0)) + is_positive(saisies.get('COD1EH', 0)) + is_positive(saisies.get('SALEXT4', 0)) + is_positive(saisies.get('COD1FD', 0)) + is_positive(saisies.get('COD1FE', 0)) + is_positive(saisies.get('COD1FH', 0)))
IND_CTXD = is_positive(CS_DEG) * is_positive(BCDIS) * is_positive(INDCTX)
IND_REV8FV = is_positive(INDREV1A8)
INTAN = saisies.get('MOISAN', 0) / 10000 - INTMS * 10000 * present(saisies.get('MOISAN', 0))
INTANISF = saisies.get('MOISAN_ISF', 0) / 10000 - INTMSISF * 10000 * present(saisies.get('MOISAN_ISF', 0))
IREP = REI
ISF1 = TR2_ISF + TR3_ISF + TR4_ISF + TR5_ISF + TR6_ISF
ISFDEC = round(17500 - TX_TR5_ISF / 10000 * saisies.get('ISFBASE', 0) * is_positive(saisies.get('ISFBASE', 0) - LIM_ISFINF) * is_positive(LIM_ISFDEC - saisies.get('ISFBASE', 0))) * is_positive(ISF1)
ITPRCM = round(BPTP24 * TX24 / 100)
LIG10622 = is_positive(RETIR22)
LIG1510YT = is_positive(is_zero(max(0, saisies.get('RMOND', 0) + saisies.get('DEFZU', 0) - saisies.get('DMOND', 0))) + is_zero(max(0, saisies.get('IPTEFP', 0) + saisies.get('DEFZU', 0) - saisies.get('IPTEFN', 0)))) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * is_positive(DEFRIMOND) * LIG1 * LIG2
LIG1523 = 1 - present(saisies.get('IND_TDR', 0)) * is_zero(saisies.get('V_REGCO', 0) - 4) * LIG2
LIG1546 = is_positive(saisies.get('PRODOM', 0) + saisies.get('PROGUY', 0)) * 1 - is_positive(V_EAD + V_EAG) * LIG2
LIG1780 = is_positive(saisies.get('RDCOM', 0) + saisies.get('NBACT', 0)) * LIG1 * LIG2
LIG2LB = is_positive(saisies.get('COD2LB', 0)) * LIG1 * LIG2 * 1 - V_CNR
LIG3720 = 1 - is_positive(20 - saisies.get('V_NOTRAIT', 0)) * 1 - is_positive(LIG3730) * LIG1 * LIG2
LIG8FV = is_positive(saisies.get('REVFONC', 0)) * 1 - IND_REV8FV
LIGAMEETREV = is_positive(INDREV1A8) * LIG1 * LIG2
LIGCOMP01 = is_positive(BPRESCOMP01) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGDEFBANIF = is_positive(DEFBANIF) * is_positive(DEFRIBASUP + DEFRIGLOBSUP) * 1 - PREM8_11
LIGDEFBICNPF = is_positive(DEFBICNPF) * DEFRIBIC * 1 - PREM8_11
LIGDEFBNCNPF = is_positive(DEFBNCNPF) * is_positive(DEFRIBNC) * is_zero(PREM8_11)
LIGDEFNPLOC = is_positive(TOTDEFLOCNP) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGDEFRFNONI = is_positive(DEFRFNONI) * DEFRIRF * 1 - PREM8_11
LIGDEPCHO = DIFF7WY * is_positive(DEPCHO) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGDEPMOB = is_positive(DIFF7WZ + DIFF7WD) * is_positive(DEPMOB) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGDFLOCNPF = is_positive(DEFLOCNPF) * is_positive(DEFRILOC) * 1 - PREM8_11
LIGDRFRP = is_positive(DRFRP) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGINRHAUT2 = is_positive(RETCHR22)
LIGINRLOY2 = is_positive(RETLOY22)
LIGINRPCAP2 = is_positive(RETPCAP22)
LIGINRTAX22 = is_positive(RETTAXA22)
LIGISFDEC = is_positive(ISF1) * is_positive(ISFDEC) * LIGISF * 1 - is_positive(saisies.get('ANNUL2042', 0))
LIGISFDON = is_positive(LIGISFRAN + LIGISFCEE) * LIGISF
LIGISFINV = is_positive(LIGISFPMED + LIGISFPMEI + LIGISFIP + LIGISFCPI) * LIGISF
LIGISFRED = is_positive(LIGISFINV + LIGISFDON) * LIGISF * 1 - is_positive(is_zero(saisies.get('CODE_2042', 0) + saisies.get('CMAJ_ISF', 0) - 8) + is_zero(saisies.get('CMAJ_ISF', 0) - 34)) * 1 - saisies.get('COD9ZA', 0)
LIGISFREDPEN8 = is_positive(LIGISFINV + LIGISFDON) * LIGISF * is_positive(is_zero(saisies.get('CODE_2042', 0) + saisies.get('CMAJ_ISF', 0) - 8) + is_zero(saisies.get('CMAJ_ISF', 0) - 34)) * 1 - saisies.get('COD9ZA', 0)
LIGLOCNEUF1 = is_positive(RIVL1) * LIG1
LIGLOCNEUF2 = is_positive(RIVL2) * LIG1
LIGLOCNEUF3 = is_positive(RIVL3) * LIG1
LIGLOCNEUF4 = is_positive(RIVL4) * LIG1
LIGLOCNEUF5 = is_positive(RIVL5) * LIG1
LIGLOCNEUF6 = is_positive(RIVL6) * LIG1
LIGLOCRES1 = is_positive(RIVL1RES) * LIG1
LIGLOCRES2 = is_positive(RIVL2RES) * LIG1
LIGLOCRES3 = is_positive(RIVL3RES) * LIG1
LIGLOCRES4 = is_positive(RIVL4RES) * LIG1
LIGLOCRES5 = is_positive(RIVL5RES) * LIG1
LIGLOYNET = present(saisies.get('LOYELEV', 0)) * INDREV1A8IR + TAXLOYANTAFF * 1 - is_positive(saisies.get('ANNUL2042', 0) + 0) * LIG1
LIGMBDREPNPC = is_positive(MIBDREPNPC) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGMBDREPNPP = is_positive(MIBDREPNPP) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGMBDREPNPV = is_positive(MIBDREPNPV) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGMEUB = is_positive(saisies.get('VIEUMEUB', 0)) * is_positive(RESIMEUB1 + RESIMEUB2 + RESIMEUB3 + RESIMEUB4 + RESIMEUB5 + RESIMEUB6 + RESIMEUB7 + RESIMEUB8) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGMIBDREPC = is_positive(MIBDREPC) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGMIBDREPP = is_positive(MIBDREPP) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGMIBDREPV = is_positive(MIBDREPV) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGMIBNPNEG = is_positive(MIBNPRV + MIBNPRC + MIBNPRP + MIB_NETNPCT * -1) * LIG2
LIGNMAJCHR4 = TYPE2 * is_positive(NMAJCHR4)
LIGNMAJLOY4 = TYPE2 * is_positive(NMAJLOY4)
LIGNMAJPCAP4 = TYPE2 * is_positive(NMAJPCAP4)
LIGNMAJTAXA4 = TYPE2 * is_positive(NMAJTAXA4)
LIGPCAPNET = is_positive(present(saisies.get('PCAPTAXV', 0)) + present(saisies.get('PCAPTAXC', 0)) * INDREV1A8IR + PCAPANTAFF) * 1 - is_positive(saisies.get('ANNUL2042', 0) + 0) * LIG1
LIGPINEL = LIGPIQABCD
LIGPV3SB = is_positive(PVBAR3SB) * LIG1 * LIG2 * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGPV3VE = is_positive(PVBAR3VE) * 1 - is_positive(saisies.get('IPVLOC', 0)) * LIG1 * LIG2 * is_positive(INDREV1A8IR)
LIGPV3VG = is_positive(PVBAR3VG) * 1 - is_positive(saisies.get('IPVLOC', 0)) * LIG1 * LIG2 * is_positive(INDREV1A8IR)
LIGPV3WB = is_positive(PVBAR3WB) * 1 - is_positive(saisies.get('IPVLOC', 0)) * LIG1 * LIG2 * is_positive(INDREV1A8IR)
LIGRCELFABC = is_positive(RIVCELFABC1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRCELFD = is_positive(RIVCELFD1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRDUEKL = is_positive(RIVDUEKL) * LIG1 * LIG2
LIGRDUGIH = is_positive(RIVDUGIH) * LIG1 * LIG2
LIGREPAR = is_positive(NUPROPT) * LIG1 * LIG2
LIGREPDOMOUT = is_positive(REPOMENTR3) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPLU = is_positive(REPPLU) * LIG1 * LIG2
LIGRIDOMPRO = is_positive(RIDOMPRO) * LIG1
LIGRPIQAC = is_positive(RIVPIQAC) * LIG1 * LIG2
LIGRPIQBD = is_positive(RIVPIQBD) * LIG1 * LIG2
LIGSPDREPNPC = is_positive(SPEDREPNPC) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGSPDREPNPP = is_positive(SPEDREPNPP) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGSPDREPNPV = is_positive(SPEDREPNPV) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGSPEDREPC = is_positive(SPEDREPC) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGSPEDREPP = is_positive(SPEDREPP) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGSPEDREPV = is_positive(SPEDREPV) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGSPENPNEG = is_positive(SPENETNPF * -1) * 1 - is_positive(present(saisies.get('BNCAABV', 0)) + present(saisies.get('BNCAADV', 0)) + present(saisies.get('BNCAABC', 0)) + present(saisies.get('BNCAADC', 0)) + present(saisies.get('BNCAABP', 0)) + present(saisies.get('BNCAADP', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('ANOVEP', 0)) + present(saisies.get('DNOCEPC', 0)) + present(saisies.get('ANOPEP', 0)) + present(saisies.get('DNOCEPP', 0)) + present(saisies.get('ANOCEP', 0)) + present(saisies.get('DABNCNP6', 0)) + present(saisies.get('DABNCNP5', 0)) + present(saisies.get('DABNCNP4', 0)) + present(saisies.get('DABNCNP3', 0)) + present(saisies.get('DABNCNP2', 0)) + present(saisies.get('DABNCNP1', 0))) * LIG2
LIGSPENPPOS = is_positive(SPENETNPF) + is_positive(saisies.get('BNCNPV', 0) + saisies.get('BNCNPC', 0) + saisies.get('BNCNPP', 0)) * is_zero(SPENETNPF) * positif_ou_nul(saisies.get('ANOCEP', 0) - saisies.get('DNOCEP', 0) + saisies.get('DABNCNP6', 0) + saisies.get('DABNCNP5', 0) + saisies.get('DABNCNP4', 0) + saisies.get('DABNCNP3', 0) + saisies.get('DABNCNP2', 0) + saisies.get('DABNCNP1', 0) + 0) * 1 - is_positive(present(saisies.get('BNCAABV', 0)) + present(saisies.get('BNCAADV', 0)) + present(saisies.get('BNCAABC', 0)) + present(saisies.get('BNCAADC', 0)) + present(saisies.get('BNCAABP', 0)) + present(saisies.get('BNCAADP', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('ANOVEP', 0)) + present(saisies.get('DNOCEPC', 0)) + present(saisies.get('ANOPEP', 0)) + present(saisies.get('DNOCEPP', 0)) + present(saisies.get('ANOCEP', 0)) + present(saisies.get('DABNCNP6', 0)) + present(saisies.get('DABNCNP5', 0)) + present(saisies.get('DABNCNP4', 0)) + present(saisies.get('DABNCNP3', 0)) + present(saisies.get('DABNCNP2', 0)) + present(saisies.get('DABNCNP1', 0))) * LIG2
LIGSURIMP = is_positive(SURIMP) * LIG1 * LIG2
LIGTAXANET = is_positive(present(saisies.get('CESSASSV', 0)) + present(saisies.get('CESSASSC', 0)) * INDREV1A8IR + TAXANTAFF) * 1 - is_positive(saisies.get('ANNUL2042', 0) + 0) * LIG1
LIGTXMOYPOS = is_positive(present(saisies.get('RMOND', 0)) + is_positive(VARRMOND) * present(saisies.get('DEFZU', 0))) * 1 - is_positive(DEFRIMOND) * LIG1 * LIG2
LIGTXNEGYT = 1 - is_positive(LIGTXPOSYT) * positif_ou_nul(saisies.get('DMOND', 0) - saisies.get('RMOND', 0) - saisies.get('DEFZU', 0)) * is_positive(saisies.get('IPTXMO', 0)) * is_positive(DEFRIMOND) * LIG1 * LIG2
LIGXBA = is_positive(XBAV + XBAC + XBAP) * LIG1 * LIG2
LIGXBINP = is_positive(XBINPV + XBINPC + XBINPP) * LIG1 * LIG2
LIGXBIP = is_positive(XBIPV + XBIPC + XBIPP) * LIG1 * LIG2
LIGXBN = is_positive(XBNNPV + XBNNPC + XBNNPP) * LIG1 * LIG2
LIGXBP = is_positive(XBNV + XBNC + XBNP) * LIG1 * LIG2
LIG_MIBP = is_positive(sum([saisies.get('MIBVENV', 0), saisies.get('MIBVENC', 0), saisies.get('MIBVENP', 0)]) + sum([saisies.get('MIBPRESV', 0), saisies.get('MIBPRESC', 0), saisies.get('MIBPRESP', 0)]) + abs(MIB_NETCT) + 0) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIG_NMAJ4 = TYPE2 * is_positive(NMAJ4)
MAJOCAPTARDIF_A1 = MAJOCAPTARDIF_A - MAJOCP17_2TARDIF_A
MAJOCAPTARDIF_D1 = MAJOCAPTARDIF_D - MAJOCP17_2TARDIF_D
MAJOCAPTARDIF_R1 = MAJOCAPTARDIF_R - MAJOCP17_2TARDIF_R
MAJTX4 = 1 - is_positive(saisies.get('V_NBCODI', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJ4) * TXPFI + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCODI', 0)) * -1
MAJTXPCAP4 = 1 - is_positive(saisies.get('V_NBCODICAP', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJPCAP4) * TXPFICAP + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCODICAP', 0)) * -1
MAJTXTAXA4 = 1 - is_positive(saisies.get('V_NBCODITAXA', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJTAXA4) * TXPFITAXA + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCODITAXA', 0)) * -1
MEUBLERET = round(DMEUBLE * TX25 / 100) * 1 - V_CNR
MIBNETNPTOT = MIBNETNPVF + MIBNETNPPF + MIB_NETNPCT
MIBNETPTOT = MIBNETVF + MIBNETPF + MIB_NETCT
MIB_1AC = max(0, MIB_P1AC + MIB_NP1AC)
MIB_1AP = max(0, MIB_P1AP + MIB_NP1AP)
MIB_1AV = max(0, MIB_P1AV + MIB_NP1AV)
MIB_APC = min(MIB_TPRESC, max(MIN_MBIC, round(MIB_TPRESC * TX_MIBPRES / 100)))
MIB_APP = min(MIB_TPRESP, max(MIN_MBIC, round(MIB_TPRESP * TX_MIBPRES / 100)))
MIB_APV = min(MIB_TPRESV, max(MIN_MBIC, round(MIB_TPRESV * TX_MIBPRES / 100)))
MIB_AVC = min(MIB_TVENC, max(MIN_MBIC, round(MIB_TVENC * TX_MIBVEN / 100)))
MIB_AVP = min(MIB_TVENP, max(MIN_MBIC, round(MIB_TVENP * TX_MIBVEN / 100)))
MIB_AVV = min(MIB_TVENV, max(MIN_MBIC, round(MIB_TVENV * TX_MIBVEN / 100)))
MIB_TTC = MIB_TVENC + MIB_TPRESC
MIB_TTP = MIB_TVENP + MIB_TPRESP
MIB_TTV = MIB_TVENV + MIB_TPRESV
MREGV = BREGV
NB0BT2MIQAR = is_zero(1 - VAR0BT) * is_zero(saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0CR', 0) + 0) * is_positive(saisies.get('V_0CH', 0) + 0) + is_positive(saisies.get('V_0CH', 0) - 1)
NB0BTMIQAR = is_zero(1 - VAR0BT) * is_zero(saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0CR', 0) + 0) * 2 * saisies.get('V_0CH', 0) - 2 * is_positive(saisies.get('V_0CH', 0) - 2)
NB0BTQAR = is_zero(1 - VAR0BT) * is_zero(saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0CR', 0) - 1) * 2 * saisies.get('V_0CH', 0) - 1 * is_positive(saisies.get('V_0CH', 0) - 1) + 1 * is_positive(saisies.get('V_0CH', 0) + 0) + positif_ou_nul(saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0CR', 0) - 2) * 2 * saisies.get('V_0CH', 0)
NBMIQAR = is_zero(VAR0BT) * is_zero(saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0CR', 0) + 0) * 2 * saisies.get('V_0CH', 0) - 2 * is_positive(saisies.get('V_0CH', 0) - 2) + 1 * is_positive(saisies.get('V_0CH', 0) + 0) + 1 * is_positive(saisies.get('V_0CH', 0) - 1) + is_zero(saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0CR', 0) - 1) * 2 * saisies.get('V_0CH', 0) - 1 * is_positive(saisies.get('V_0CH', 0) - 1) + 1 * is_positive(saisies.get('V_0CH', 0) + 0) + positif_ou_nul(saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0CR', 0) - 2) * 2 * saisies.get('V_0CH', 0)
NBQAR = NBQAR1 + NBQAR2 + NBQAR3 + NBQAR4 + NBQART
NCOMP = max(1, saisies.get('NBACT', 0)) * present(saisies.get('RDCOM', 0)) * 1 - ART1731BIS + min(max(1, saisies.get('NBACT', 0)) * present(saisies.get('RDCOM', 0)), NCOMP1731 + 0) * ART1731BIS * 1 - V_CNR
NMAJREGV1 = max(0, MAJO1728REGV + round(BREGV * COPETO / 100)) * 1 - V_CNR
NOCEP = saisies.get('ANOCEP', 0) - min(saisies.get('DNOCEP', 0), DNOCEP1731 + 0) * is_positive(ART1731BIS) + saisies.get('DNOCEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('DABNCNP6', 0), DABNCNP61731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP6', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('DABNCNP5', 0), DABNCNP51731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP5', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('DABNCNP4', 0), DABNCNP41731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP4', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('DABNCNP3', 0), DABNCNP31731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP3', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('DABNCNP2', 0), DABNCNP21731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP2', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('DABNCNP1', 0), DABNCNP11731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP1', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
NOCEPIMPC = is_positive(saisies.get('ANOVEP', 0) - saisies.get('DNOCEPC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * round(saisies.get('ANOVEP', 0) - saisies.get('DNOCEPC', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV) + positif_ou_nul(saisies.get('DNOCEPC', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - saisies.get('ANOVEP', 0)) * saisies.get('ANOVEP', 0) - saisies.get('DNOCEPC', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + BNNAAC
NOCEPIMPP = is_positive(saisies.get('ANOPEP', 0) - saisies.get('DNOCEPP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * round(saisies.get('ANOPEP', 0) - saisies.get('DNOCEPP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV) + positif_ou_nul(saisies.get('DNOCEPP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - saisies.get('ANOPEP', 0)) * saisies.get('ANOPEP', 0) - saisies.get('DNOCEPP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + BNNAAP
NOCEPIMPV = is_positive(saisies.get('ANOCEP', 0) - saisies.get('DNOCEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * round(saisies.get('ANOCEP', 0) - saisies.get('DNOCEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV) + positif_ou_nul(saisies.get('DNOCEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - saisies.get('ANOCEP', 0)) * saisies.get('ANOCEP', 0) - saisies.get('DNOCEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + BNNAAV
NPA = PAC - 0.5 * min(PAC, 2)
NPLOCC = min(0, saisies.get('LOCNPC', 0) + saisies.get('LOCGITHCC', 0) - saisies.get('LOCDEFNPC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * positif_ou_nul(saisies.get('LOCDEFNPC', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - saisies.get('LOCNPC', 0) - saisies.get('LOCGITHCC', 0)) + round(max(0, saisies.get('LOCNPC', 0) + saisies.get('LOCGITHCC', 0) - saisies.get('LOCDEFNPC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * MAJREV) * is_positive(saisies.get('LOCNPC', 0) + saisies.get('LOCGITHCC', 0) - saisies.get('LOCDEFNPC', 0) * 1 - is_positive(ART1731BIS * PREM8_11))
NPLOCCGAC = saisies.get('LOCNPCGAC', 0) + saisies.get('LOCGITCC', 0) - saisies.get('LOCDEFNPCGAC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
NPLOCCGAPAC = saisies.get('LOCNPCGAPAC', 0) + saisies.get('LOCGITCP', 0) - saisies.get('LOCDEFNPCGAPAC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
NPLOCCGASC = round(NPLOCCGAC * saisies.get('LOCNPCGAC', 0) / saisies.get('LOCNPCGAC', 0) + saisies.get('LOCGITCC', 0)) * present(saisies.get('LOCNPCGAC', 0)) + min(0, NPLOCCGAC) * 1 - present(saisies.get('LOCNPCGAC', 0))
NPLOCCGASP = round(NPLOCCGAPAC * saisies.get('LOCNPCGAPAC', 0) / saisies.get('LOCNPCGAPAC', 0) + saisies.get('LOCGITCP', 0)) * present(saisies.get('LOCNPCGAPAC', 0)) + min(0, NPLOCCGAPAC) * 1 - present(saisies.get('LOCNPCGAPAC', 0))
NPLOCCGAV = saisies.get('LOCNPCGAV', 0) + saisies.get('LOCGITCV', 0) - saisies.get('LOCDEFNPCGAV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
NPLOCNETC = NPLOCCGAC + NPLOCC
NPLOCPAC = min(0, saisies.get('LOCNPPAC', 0) + saisies.get('LOCGITHCP', 0) - saisies.get('LOCDEFNPPAC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * positif_ou_nul(saisies.get('LOCDEFNPPAC', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - saisies.get('LOCNPPAC', 0) - saisies.get('LOCGITHCP', 0)) + round(max(0, saisies.get('LOCNPPAC', 0) + saisies.get('LOCGITHCP', 0) - saisies.get('LOCDEFNPPAC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * MAJREV) * is_positive(saisies.get('LOCNPPAC', 0) + saisies.get('LOCGITHCP', 0) - saisies.get('LOCDEFNPPAC', 0) * 1 - is_positive(ART1731BIS * PREM8_11))
NPLOCSC = round(NPLOCC * saisies.get('LOCNPC', 0) / saisies.get('LOCNPC', 0) + saisies.get('LOCGITHCC', 0)) * present(saisies.get('LOCNPC', 0)) + min(0, NPLOCC) * 1 - is_positive(saisies.get('LOCNPC', 0))
NPLOCSP = round(NPLOCPAC * saisies.get('LOCNPPAC', 0) / saisies.get('LOCNPPAC', 0) + saisies.get('LOCGITHCP', 0)) * is_positive(saisies.get('LOCNPPAC', 0)) + min(0, NPLOCPAC) * 1 - is_positive(saisies.get('LOCNPPAC', 0))
NPLOCV = min(0, saisies.get('LOCNPV', 0) + saisies.get('LOCGITHCV', 0) - saisies.get('LOCDEFNPV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * positif_ou_nul(saisies.get('LOCDEFNPV', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - saisies.get('LOCNPV', 0) - saisies.get('LOCGITHCV', 0)) + round(max(0, saisies.get('LOCNPV', 0) + saisies.get('LOCGITHCV', 0) - saisies.get('LOCDEFNPV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * MAJREV) * is_positive(saisies.get('LOCNPV', 0) + saisies.get('LOCGITHCV', 0) - saisies.get('LOCDEFNPV', 0) * 1 - is_positive(ART1731BIS * PREM8_11))
NPS = is_positive(PAC) * saisies.get('V_0BT', 0) * is_positive(2 - NSM) * 0.5
NSA = 1 - is_positive(PAC + saisies.get('V_0CH', 0)) * min(saisies.get('V_0AG', 0) + saisies.get('V_0AL', 0) * 1 - is_positive(saisies.get('V_0AN', 0)) * 1 - is_positive(is_positive(saisies.get('V_0AW', 0)) * positif_ou_nul(AGV - LIM_AGE_LET_S)) + saisies.get('V_0AW', 0) * is_positive(max(AGV + 1 - LIM_AGE_LET_S, AGC + 1 - LIM_AGE_LET_S)), 1) * 1 - saisies.get('V_0AP', 0) * is_positive(2 - NSM) * 0.5
NSP = NPS + NSA + NCC
P2GEWL = max(0, P2GE + PLAF_GE2 * 1 + BOOL_0AM - BGEPAHA - BTANTGECUMWL)
PDFNC = min(PLAF_DEDFORFTS, PTPS10C)
PDFNV = min(PLAF_DEDFORFTS, PTPS10V)
PERPBANP = PERP_BOOL * saisies.get('FEXP', 0) + saisies.get('BAFP', 0) + saisies.get('BAFPVP', 0) + saisies.get('BAEXP', 0) + saisies.get('BACREP', 0) - saisies.get('BACDEP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BAHEXP', 0) + saisies.get('BAHREP', 0) - saisies.get('BAHDEP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BAPERPP', 0) + _4BACREP + _4BAHREP + saisies.get('BAFORESTP', 0) + saisies.get('BANOCGAP', 0)
PERPBICMNC = TPMIB_NETPC + TPMIB_NETVC + saisies.get('MIBEXC', 0) + saisies.get('MIBPVC', 0) - saisies.get('BICPMVCTC', 0)
PERPBICMNP = TPMIB_NETPP + TPMIB_NETVP + saisies.get('MIBEXP', 0) + saisies.get('MIBPVP', 0) - saisies.get('BICPMVCTP', 0) * PERP_BOOL
PERPBICMNV = TPMIB_NETPV + TPMIB_NETVV + saisies.get('MIBEXV', 0) + saisies.get('MIBPVV', 0) - saisies.get('BICPMVCTV', 0)
PERPBICPNP = PERP_BOOL * saisies.get('BICEXP', 0) + saisies.get('BICNOP', 0) - saisies.get('BICDNP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BIHEXP', 0) + saisies.get('BIHNOP', 0) - saisies.get('BIHDNP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BIPERPP', 0) + saisies.get('LOCPROCGAP', 0) - saisies.get('LOCDEFPROCGAP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('LOCPROP', 0) - saisies.get('LOCDEFPROP', 0) * 1 - is_positive(ART1731BIS)
PERPBNCMNP = PERP_BOOL * saisies.get('BNCPROEXP', 0) + max(0, saisies.get('BNCPROP', 0) + saisies.get('AUTOBNCP', 0) - max(round(saisies.get('BNCPROP', 0) + saisies.get('AUTOBNCP', 0) * SPETXAB / 100), MIN_SPEBNC)) + saisies.get('BNCPROPVP', 0) - saisies.get('BNCPMVCTP', 0)
PERPBNCPNP = PERP_BOOL * saisies.get('BNCEXP', 0) + saisies.get('BNCREP', 0) - saisies.get('BNCDEP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BNHEXP', 0) + saisies.get('BNHREP', 0) - saisies.get('BNHDEP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BNCCRP', 0)
PERPINDC = is_positive(is_positive(is_positive(PERP_INDC) + 1 - is_positive(PERP_INDC) * 1 - is_positive(saisies.get('PRBRC', 0) + saisies.get('PALIC', 0))) * is_positive(INDREV1A8) + 1 - is_positive(PERP_INDC) * is_positive(saisies.get('PRBRC', 0) + saisies.get('PALIC', 0)) * is_positive(saisies.get('PERP_COTC', 0)) + saisies.get('PERPMUTU', 0) * 1 - is_positive(PERP_INDC + saisies.get('PERP_COTC', 0))) * 1 - PERP_NONC * BOOL_0AM * 1 - V_CNR
PERPINDP = is_positive(is_positive(is_positive(PERP_INDP) + 1 - is_positive(PERP_INDP) * 1 - is_positive(saisies.get('PRBR1', 0) + PALIP)) * is_positive(INDREV1A8) + 1 - is_positive(PERP_INDP) * is_positive(saisies.get('PRBR1', 0) + PALIP) * is_positive(saisies.get('PERP_COTP', 0))) * PERP_BOOL * 1 - V_CNR
PERPINDV = is_positive(is_positive(is_positive(PERP_INDV) + 1 - is_positive(PERP_INDV) * 1 - is_positive(saisies.get('PRBRV', 0) + saisies.get('PALIV', 0))) * is_positive(INDREV1A8) + 1 - is_positive(PERP_INDV) * is_positive(saisies.get('PRBRV', 0) + saisies.get('PALIV', 0)) * is_positive(saisies.get('PERP_COTV', 0)) + saisies.get('PERPMUTU', 0) * 1 - is_positive(PERP_INDV + saisies.get('PERP_COTV', 0))) * 1 - PERP_NONV * 1 - V_CNR
PERPNONSALC = PERPBANC + PERPBICMNC + PERPBICPNC + PERPBNCMNC + PERPBNCPNC
PERPNONSALP = PERPBANP + PERPBICMNP + PERPBICPNP + PERPBNCMNP + PERPBNCPNP
PERPNONSALV = PERPBANV + PERPBICMNV + PERPBICPNV + PERPBNCMNV + PERPBNCPNV
PERPSALP = PERP_BOOL * saisies.get('TSHALLO1', 0) + saisies.get('ALLO1', 0) + saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0) + max(0, saisies.get('SALEXT1', 0) - saisies.get('COD1CD', 0))
PERP_NONP = PERP_BOOL * is_positive(PERP_NONC + PERP_NONV)
PIND_10MIN_0C = is_positive(PDEDMINC - PDFNC) * is_positive(PERPSALC)
PIND_10MIN_0V = is_positive(PDEDMINV - PDFNV) * is_positive(PERPSALV)
PIND_MINC = 1 - is_positive(PIND_10MIN_0C)
PIND_MINV = 1 - is_positive(PIND_10MIN_0V)
PLAQAR = round(PLAF_DEMIPART / 2 * NBMIQAR + NB0BTMIQAR + NB0BTQAR + saisies.get('V_0CI', 0) + PLAF_COMPPART / 2 * NB0BT2MIQAR)
PLOCC = min(0, saisies.get('LOCPROC', 0) - saisies.get('LOCDEFPROC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * positif_ou_nul(saisies.get('LOCDEFPROC', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - saisies.get('LOCPROC', 0)) + round(max(0, saisies.get('LOCPROC', 0) - saisies.get('LOCDEFPROC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * MAJREV) * is_positive(saisies.get('LOCPROC', 0) - saisies.get('LOCDEFPROC', 0) * 1 - is_positive(ART1731BIS * PREM8_11))
PLOCCGAC = saisies.get('LOCPROCGAC', 0) - saisies.get('LOCDEFPROCGAC', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
PLOCCGAPAC = saisies.get('LOCPROCGAP', 0) - saisies.get('LOCDEFPROCGAP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
PLOCCGAV = saisies.get('LOCPROCGAV', 0) - saisies.get('LOCDEFPROCGAV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
PLOCNETC = PLOCCGAC + PLOCC
PLOCPAC = min(0, saisies.get('LOCPROP', 0) - saisies.get('LOCDEFPROP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * positif_ou_nul(saisies.get('LOCDEFPROP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - saisies.get('LOCPROP', 0)) + round(max(0, saisies.get('LOCPROP', 0) - saisies.get('LOCDEFPROP', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * MAJREV) * is_positive(saisies.get('LOCPROP', 0) - saisies.get('LOCDEFPROP', 0) * 1 - is_positive(ART1731BIS * PREM8_11))
PLOCV = min(0, saisies.get('LOCPROV', 0) - saisies.get('LOCDEFPROV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * positif_ou_nul(saisies.get('LOCDEFPROV', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - saisies.get('LOCPROV', 0)) + round(max(0, saisies.get('LOCPROV', 0) - saisies.get('LOCDEFPROV', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) * MAJREV) * is_positive(saisies.get('LOCPROV', 0) - saisies.get('LOCDEFPROV', 0) * 1 - is_positive(ART1731BIS * PREM8_11))
PLR1 = min(MIN_DEDPR, EXPR1)
PLR2 = min(MIN_DEDPR, EXPR2)
PLR3 = min(MIN_DEDPR, EXPR3)
PLR4 = min(MIN_DEDPR, EXPR4)
PLRC = min(MIN_DEDPR, EXPRC)
PLRV = min(MIN_DEDPR, EXPRV)
PPEPEXO1 = is_positive(PPE_AVRPRO1P + 0) + is_positive(saisies.get('SALEXT1', 0) + 0) + 4 * is_positive(saisies.get('PPEXT1', 0) + saisies.get('PPETPP1', 0) + 0)
PPEPEXO2 = is_positive(PPE_AVRPRO1P + 0) + is_positive(saisies.get('SALEXT2', 0) + 0) + 4 * is_positive(saisies.get('PPEXT2', 0) + saisies.get('PPETPP2', 0) + 0)
PPEPEXO3 = is_positive(PPE_AVRPRO1P + 0) + is_positive(saisies.get('SALEXT3', 0) + 0) + 4 * is_positive(saisies.get('PPEXT3', 0) + saisies.get('PPETPP3', 0) + 0)
PPEPEXO4 = is_positive(PPE_AVRPRO1P + 0) + is_positive(saisies.get('SALEXT4', 0) + 0) + 4 * is_positive(saisies.get('PPEXT4', 0) + saisies.get('PPETPP4', 0) + 0)
PPEPEXOC = is_positive(PPE_AVRPRO1C + 0) + is_positive(saisies.get('SALEXTC', 0) + 0) + 4 * is_positive(saisies.get('PPENJC', 0) + saisies.get('PPEACC', 0) + 0) + 8 * is_positive(saisies.get('PPEXTC', 0) + saisies.get('PPETPC', 0) + 0)
PPEPEXOV = is_positive(PPE_AVRPRO1V + 0) + is_positive(saisies.get('SALEXTV', 0) + 0) + 4 * is_positive(saisies.get('PPENJV', 0) + saisies.get('PPEACV', 0) + 0) + 8 * is_positive(saisies.get('PPEXTV', 0) + saisies.get('PPETPV', 0) + 0)
PPEPRIMEPT = sum([PPEPRIME1, PPEPRIME2, PPEPRIME3, PPEPRIME4, PPEPRIMEU, PPEPRIMEN]) * 1 - V_CNR
PPESAL1 = PPE_SALAVDEF1 * 1 - PPE_BOOL_SEULPAC
PPESAL2 = PPE_SALAVDEF2 * 1 - PPE_BOOL_SEULPAC
PPESAL3 = PPE_SALAVDEF3 * 1 - PPE_BOOL_SEULPAC
PPESAL4 = PPE_SALAVDEF4 * 1 - PPE_BOOL_SEULPAC
PPESALCTOT = PPE_SALAVDEFC
PPESALPTOT = PPE_SALAVDEF1 + PPE_SALAVDEF2 + PPE_SALAVDEF3 + PPE_SALAVDEF4
PPESALVTOT = PPE_SALAVDEFV
PPE_DEBJJMM = round(PPE_DEBJJMMMM - saisies.get('V_ANREV', 0) / 10000)
PPE_FINJJMM = round(PPE_FINJJMMMM - saisies.get('V_ANREV', 0) / 10000)
PPE_KIKEKU = 1 * is_positive(PPE_SALAVDEF1) + 2 * is_positive(PPE_SALAVDEF2) + 3 * is_positive(PPE_SALAVDEF3) + 4 * is_positive(PPE_SALAVDEF4)
PPE_NBELIGI = PPE_NB_PAC + PPE_NB_PAC_QAR - PPE_NBNONELI
PPE_NBMAJO = positif_ou_nul(PPE_NB_PAC - PPE_NBELIGI) * PPE_NBELIGI + 1 - positif_ou_nul(PPE_NB_PAC - PPE_NBELIGI) * PPE_NB_PAC
PPE_NBMAJOQAR = positif_ou_nul(PPE_NB_PAC - PPE_NBELIGI) * 0 + 1 - positif_ou_nul(PPE_NB_PAC - PPE_NBELIGI) * PPE_NBELIGI - PPE_NB_PAC
PPE_RTA1 = PPESAL1
PPE_RTA2 = PPESAL2
PPE_RTA3 = PPESAL3
PPE_RTA4 = PPESAL4
PRQNC = _2PRBC
PRQNV = _2PRBV
PSRTF = CSRTF
PS_BPCOS = CS_BPCOS
PS_RTF = CS_RTF
PTPS10P = round(PERPSALP * TX_DEDFORFTS / 100)
PVTXEFF = saisies.get('PVTAXSB', 0) + saisies.get('BPVRCM', 0) - PVTXEFF2 * is_positive(present(saisies.get('IPTEFN', 0)) + present(saisies.get('IPTEFP', 0)))
QF024 = round(RB04) / NB2
QF026 = round(RB06) / NB2
RAFORET = round(AFORET_1 * TX_FORET / 100)
RAGRI = round(BDIFAGRI * TX_DIFAGRI / 100)
RAH = round(BAH * TX_CURE / 100)
RB05 = VARRMOND * is_positive(ART1731BIS) + saisies.get('RMOND', 0) * 1 - ART1731BIS
RCELREP_HR = is_positive(saisies.get('CELREPHR', 0)) * round(ACELREPHR * TX25 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HS = is_positive(saisies.get('CELREPHS', 0)) * round(ACELREPHS * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HT = is_positive(saisies.get('CELREPHT', 0)) * round(ACELREPHT * TX25 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HU = is_positive(saisies.get('CELREPHU', 0)) * round(ACELREPHU * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HV = is_positive(saisies.get('CELREPHV', 0)) * round(ACELREPHV * TX25 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HW = is_positive(saisies.get('CELREPHW', 0)) * round(ACELREPHW * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HX = is_positive(saisies.get('CELREPHX', 0)) * round(ACELREPHX * TX25 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREP_HZ = is_positive(saisies.get('CELREPHZ', 0)) * round(ACELREPHZ * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_2011 = is_positive(saisies.get('CELLIERNA', 0) + saisies.get('CELLIERNE', 0)) * round(ACEL * TX22 / 100) + is_positive(saisies.get('CELLIERNC', 0) + saisies.get('CELLIERND', 0) + saisies.get('CELLIERNH', 0)) * round(ACEL * TX25 / 100) + is_positive(saisies.get('CELLIERNF', 0) + saisies.get('CELLIERNJ', 0)) * round(ACEL * TX13 / 100) + is_positive(saisies.get('CELLIERNI', 0)) * round(ACEL * TX15 / 100) + is_positive(saisies.get('CELLIERNM', 0) + saisies.get('CELLIERNN', 0)) * round(ACEL * TX40 / 100) + is_positive(saisies.get('CELLIERNK', 0) + saisies.get('CELLIERNO', 0)) * round(ACEL * TX36 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_2011_R = is_positive(saisies.get('CELLIERNA', 0) + saisies.get('CELLIERNE', 0)) * round(ACEL_R * TX22 / 100) + is_positive(saisies.get('CELLIERNC', 0) + saisies.get('CELLIERND', 0) + saisies.get('CELLIERNH', 0)) * round(ACEL_R * TX25 / 100) + is_positive(saisies.get('CELLIERNF', 0) + saisies.get('CELLIERNJ', 0)) * round(ACEL_R * TX13 / 100) + is_positive(saisies.get('CELLIERNI', 0)) * round(ACEL_R * TX15 / 100) + is_positive(saisies.get('CELLIERNM', 0) + saisies.get('CELLIERNN', 0)) * round(ACEL_R * TX40 / 100) + is_positive(saisies.get('CELLIERNK', 0) + saisies.get('CELLIERNO', 0)) * round(ACEL_R * TX36 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_2012 = is_positive(saisies.get('CELLIERJA', 0) + saisies.get('CELLIERJE', 0) + saisies.get('CELLIERJH', 0)) * round(ACEL2012 * TX13 / 100) + is_positive(saisies.get('CELLIERJD', 0)) * round(ACEL2012 * TX22 / 100) + is_positive(saisies.get('CELLIERJF', 0) + saisies.get('CELLIERJJ', 0)) * round(ACEL2012 * TX6 / 100) + is_positive(saisies.get('CELLIERJK', 0) + saisies.get('CELLIERJN', 0)) * round(ACEL2012 * TX24 / 100) + is_positive(saisies.get('CELLIERJM', 0)) * round(ACEL2012 * TX36 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_2012_R = is_positive(saisies.get('CELLIERJA', 0) + saisies.get('CELLIERJE', 0) + saisies.get('CELLIERJH', 0)) * round(ACEL2012_R * TX13 / 100) + is_positive(saisies.get('CELLIERJD', 0)) * round(ACEL2012_R * TX22 / 100) + is_positive(saisies.get('CELLIERJF', 0) + saisies.get('CELLIERJJ', 0)) * round(ACEL2012_R * TX6 / 100) + is_positive(saisies.get('CELLIERJK', 0) + saisies.get('CELLIERJN', 0)) * round(ACEL2012_R * TX24 / 100) + is_positive(saisies.get('CELLIERJM', 0)) * round(ACEL2012_R * TX36 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_COM = is_positive(saisies.get('CELLIERNP', 0) + saisies.get('CELLIERNT', 0)) * round(ACELCOM * TX36 / 100) + is_positive(saisies.get('CELLIERNR', 0) + saisies.get('CELLIERNS', 0)) * round(ACELCOM * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_COM_R = is_positive(saisies.get('CELLIERNP', 0) + saisies.get('CELLIERNT', 0)) * round(ACELCOM_R * TX36 / 100) + is_positive(saisies.get('CELLIERNR', 0) + saisies.get('CELLIERNS', 0)) * round(ACELCOM_R * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_FABC = is_positive(saisies.get('CELLIERFA', 0)) * round(ACELFABC * TX13 / 100) + is_positive(saisies.get('CELLIERFB', 0)) * round(ACELFABC * TX6 / 100) + is_positive(saisies.get('CELLIERFC', 0)) * round(ACELFABC * TX24 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_FABC_R = is_positive(saisies.get('CELLIERFA', 0)) * round(ACELFABC_R * TX13 / 100) + is_positive(saisies.get('CELLIERFB', 0)) * round(ACELFABC_R * TX6 / 100) + is_positive(saisies.get('CELLIERFC', 0)) * round(ACELFABC_R * TX24 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_FD = is_positive(saisies.get('CELLIERFD', 0)) * round(ACELFD * TX24 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_FD_R = is_positive(saisies.get('CELLIERFD', 0)) * round(ACELFD_R * TX24 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_HJK = is_positive(saisies.get('CELLIERHJ', 0)) * round(ACELHJK * TX25 / 100) + is_positive(saisies.get('CELLIERHK', 0)) * round(ACELHJK * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_HJK_R = is_positive(saisies.get('CELLIERHJ', 0)) * round(ACELHJK_R * TX25 / 100) + is_positive(saisies.get('CELLIERHK', 0)) * round(ACELHJK_R * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_HL = is_positive(saisies.get('CELLIERHL', 0)) * round(ACELHL * TX25 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_HL_R = is_positive(saisies.get('CELLIERHL', 0)) * round(ACELHL_R * TX25 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_HM = is_positive(saisies.get('CELLIERHM', 0)) * round(ACELHM * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_HM_R = is_positive(saisies.get('CELLIERHM', 0)) * round(ACELHM_R * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_HNO = is_positive(saisies.get('CELLIERHN', 0)) * round(ACELHNO * TX25 / 100) + is_positive(saisies.get('CELLIERHO', 0)) * round(ACELHNO * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_HNO_R = is_positive(saisies.get('CELLIERHN', 0)) * round(ACELHNO_R * TX25 / 100) + is_positive(saisies.get('CELLIERHO', 0)) * round(ACELHNO_R * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_JBGL = is_positive(saisies.get('CELLIERJB', 0)) * round(ACELJBGL * TX22 / 100) + is_positive(saisies.get('CELLIERJG', 0)) * round(ACELJBGL * TX13 / 100) + is_positive(saisies.get('CELLIERJL', 0)) * round(ACELJBGL * TX36 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_JBGL_R = is_positive(saisies.get('CELLIERJB', 0)) * round(ACELJBGL_R * TX22 / 100) + is_positive(saisies.get('CELLIERJG', 0)) * round(ACELJBGL_R * TX13 / 100) + is_positive(saisies.get('CELLIERJL', 0)) * round(ACELJBGL_R * TX36 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_JOQR = is_positive(saisies.get('CELLIERJQ', 0)) * round(ACELJOQR * TX36 / 100) + is_positive(saisies.get('CELLIERJO', 0) + saisies.get('CELLIERJR', 0)) * round(ACELJOQR * TX24 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_JOQR_R = is_positive(saisies.get('CELLIERJQ', 0)) * round(ACELJOQR_R * TX36 / 100) + is_positive(saisies.get('CELLIERJO', 0) + saisies.get('CELLIERJR', 0)) * round(ACELJOQR_R * TX24 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_JP = is_positive(saisies.get('CELLIERJP', 0)) * round(ACELJP * TX36 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_JP_R = is_positive(saisies.get('CELLIERJP', 0)) * round(ACELJP_R * TX36 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_NBGL = is_positive(saisies.get('CELLIERNB', 0)) * round(ACELNBGL * TX25 / 100) + is_positive(saisies.get('CELLIERNG', 0)) * round(ACELNBGL * TX15 / 100) + is_positive(saisies.get('CELLIERNL', 0)) * round(ACELNBGL * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_NBGL_R = is_positive(saisies.get('CELLIERNB', 0)) * round(ACELNBGL_R * TX25 / 100) + is_positive(saisies.get('CELLIERNG', 0)) * round(ACELNBGL_R * TX15 / 100) + is_positive(saisies.get('CELLIERNL', 0)) * round(ACELNBGL_R * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_NQ = is_positive(saisies.get('CELLIERNQ', 0)) * round(ACELNQ * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_NQ_R = is_positive(saisies.get('CELLIERNQ', 0)) * round(ACELNQ_R * TX40 / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCMAB = RCMRNABD + _2RCMRNABD
RCMPRIVM = REGPRIVM + _2REGPRIVM
RCMRNTNC = saisies.get('RCMTNC', 0) - RCMRTNC
RCODJT1 = round(round(ACODJT / 9) * TX11 / 100)
RCODJT2 = RCODJT1
RCODJT3 = RCODJT1
RCODJT4 = RCODJT1
RCODJT5 = RCODJT1
RCODJT6 = RCODJT1
RCODJT7 = RCODJT1
RCODJT8 = round(ACODJT * TX11 / 100) - 8 * RCODJT1
RCODJU1 = round(round(ACODJU / 9) * TX11 / 100)
RCODJU2 = round(round(ACODJU / 9) * TX11 / 100)
RCODJU3 = round(round(ACODJU / 9) * TX11 / 100)
RCODJU4 = round(round(ACODJU / 9) * TX11 / 100)
RCODJU5 = round(round(ACODJU / 9) * TX11 / 100)
RCODJU6 = round(round(ACODJU / 9) * TX11 / 100)
RCODJU7 = round(round(ACODJU / 9) * TX11 / 100)
RCODJU8 = round(ACODJU * TX11 / 100) - RCODJU1 - RCODJU2 - RCODJU3 - RCODJU4 - RCODJU5 - RCODJU6 - RCODJU7 - RCODJU7
RCODOU1 = round(ACODOU * TX11 / 100)
RCODOU8 = round(min(PLAF_RESINEUV, saisies.get('COD7OU', 0)) * TX11 / 100) - 8 * RCODOU1
RCREATEUR = saisies.get('CONVCREA', 0) / 2 * PLAF_CRENTR * 1 - V_CNR
RCREATEURHANDI = saisies.get('CONVHAND', 0) / 2 * PLAF_CRENTRH * 1 - V_CNR
RDOMSOC1_1 = 1 - V_CNR * 1 - saisies.get('V_INDTEO', 0) * sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32, RSOC33, RSOC34, RSOC35, RSOC36, RSOC37, RSOC38]) + saisies.get('V_INDTEO', 0) * round(saisies.get('V_RSOC11', 0) + saisies.get('V_RSOC12', 0) + saisies.get('V_RSOC13', 0) + saisies.get('V_RSOC15', 0) + saisies.get('V_RSOC17', 0) + saisies.get('V_RSOC20', 0) + saisies.get('V_RSOC23', 0) + saisies.get('V_RSOC27', 0) + saisies.get('V_RSOC14', 0) + saisies.get('V_RSOC16', 0) + saisies.get('V_RSOC18', 0) + saisies.get('V_RSOC21', 0) + saisies.get('V_RSOC24', 0) + saisies.get('V_RSOC28', 0) + saisies.get('V_RSOC31', 0) + saisies.get('V_RSOC35', 0) + saisies.get('V_RSOC19', 0) + saisies.get('V_RSOC22', 0) + saisies.get('V_RSOC25', 0) + saisies.get('V_RSOC29', 0) + saisies.get('V_RSOC32', 0) + saisies.get('V_RSOC36', 0) + saisies.get('V_RSOC26', 0) + saisies.get('V_RSOC30', 0) + saisies.get('V_RSOC33', 0) + saisies.get('V_RSOC37', 0) + saisies.get('V_RSOC34', 0) + saisies.get('V_RSOC38', 0) * TX65 / 100)
RDRCM1 = TRCMABD + DRTNC + RAVC + RCMNAB + RTCAR + RCMPRIVM + saisies.get('RCMIMPAT', 0) - saisies.get('RCMSOC', 0) - is_positive(saisies.get('RCMRDS', 0)) * min(saisies.get('RCMRDS', 0), saisies.get('RCMABD', 0) + saisies.get('REVACT', 0) + saisies.get('RCMAV', 0) + saisies.get('PROVIE', 0) + saisies.get('RCMHAD', 0) + saisies.get('DISQUO', 0) + saisies.get('RCMHAB', 0) + saisies.get('INTERE', 0) + saisies.get('RCMTNC', 0) + saisies.get('REVPEA', 0) + saisies.get('COD2FA', 0))
RDRCM1APS = saisies.get('RCMABD', 0) + saisies.get('RCMTNC', 0) + saisies.get('RCMAV', 0) + saisies.get('RCMHAD', 0) + saisies.get('RCMHAB', 0) + REGPRIVM + saisies.get('RCMIMPAT', 0) - saisies.get('RCMSOC', 0) - is_positive(saisies.get('RCMRDS', 0)) * min(saisies.get('RCMRDS', 0), saisies.get('RCMABD', 0) + saisies.get('RCMAV', 0) + saisies.get('RCMHAD', 0) + saisies.get('RCMHAB', 0) + saisies.get('RCMTNC', 0) + saisies.get('COD2FA', 0))
RDRCM1NEG = min(0, RDRCM1)
RDRCM1NEGAPS = min(0, RDRCM1APS)
RDRCM1NEGPLAF = min(saisies.get('COD2FA', 0), abs(RDRCM1))
RDRCM1NEGPLAFAPS = min(saisies.get('COD2FA', 0), abs(RDRCM1APS))
RDRF = max(0, RFCF + saisies.get('RFMIC', 0) - MICFR - saisies.get('RFDANT', 0)) * 1 - is_positive(ART1731BIS) + max(0, RFCF + saisies.get('RFMIC', 0) - MICFR + DEFRF4BC) * is_positive(ART1731BIS)
RDRFAPS = max(0, RFCFAPS + saisies.get('RFMIC', 0) - MICFR - saisies.get('RFDANT', 0)) * 1 - is_positive(ART1731BIS) + max(0, RFCFAPS + saisies.get('RFMIC', 0) - MICFR + DEFRF4BD + DEFRF4BC) * is_positive(ART1731BIS)
RDRTF = CSRTF
RDRV = RVBCSG
RD_BPCOS = CS_BPCOS
RD_RTF = CS_RTF
RECUMBIS = (saisies.get('V_ANTRE', 0) + RECUM_A) if (saisies.get('V_NIMPA', 0) + 0 == 1) else (saisies.get('V_ANTRE', 0) + RECUM_A * positif_ou_nul(saisies.get('V_ANTRE', 0) + RECUM_A - SEUIL_8))
REGVBASE = BREGV
RENOV = round(BRENOV * TX_RENOV / 100) * 1 - V_CNR
REPCELFD = 3 * RIVCELFD1 + RIVCELFD4
REPCIF = positif_ou_nul(saisies.get('COD7UA', 0) + saisies.get('COD7UB', 0) - PLAF_FOREST1 * 1 + BOOL_0AM) * saisies.get('RDFORESTRA', 0) + 1 - positif_ou_nul(saisies.get('COD7UA', 0) + saisies.get('COD7UB', 0) - PLAF_FOREST1 * 1 + BOOL_0AM) * max(0, saisies.get('RDFORESTRA', 0) - PLAF_FOREST1 * 1 + BOOL_0AM - saisies.get('COD7UA', 0) - saisies.get('COD7UB', 0)) * 1 - V_CNR
REPCIFAD = max(0, saisies.get('COD7UA', 0) - PLAF_FOREST1 * 1 + BOOL_0AM) * 1 - V_CNR
REPCIFADSIN = positif_ou_nul(saisies.get('COD7UA', 0) - PLAF_FOREST1 * 1 + BOOL_0AM) * saisies.get('COD7UB', 0) + 1 - positif_ou_nul(saisies.get('COD7UA', 0) - PLAF_FOREST1 * 1 + BOOL_0AM) * max(0, saisies.get('COD7UB', 0) - PLAF_FOREST1 * 1 + BOOL_0AM - saisies.get('COD7UA', 0)) * 1 - V_CNR
REPCIFSIN = positif_ou_nul(saisies.get('COD7UA', 0) + saisies.get('COD7UB', 0) + saisies.get('RDFORESTRA', 0) - PLAF_FOREST1 * 1 + BOOL_0AM) * saisies.get('SINISFORET', 0) + 1 - positif_ou_nul(saisies.get('COD7UA', 0) + saisies.get('COD7UB', 0) + saisies.get('RDFORESTRA', 0) - PLAF_FOREST1 * 1 + BOOL_0AM) * max(0, saisies.get('SINISFORET', 0) - PLAF_FOREST1 * 1 + BOOL_0AM - saisies.get('COD7UA', 0) - saisies.get('COD7UB', 0) - saisies.get('RDFORESTRA', 0)) * 1 - V_CNR
REPDUEKL = RIVDUEKL * 7 + RIVDUEKL8
REPDUGIH = RIVDUGIH * 7 + RIVDUGIH8
REPINV = RIVL1 + RIVL2 + RIVL3 + RIVL4 + RIVL5 + RIVL6
REPINVPME1 = max(0, saisies.get('REPSNON', 0) - max(0, LIM_SOCNOUV2 * 1 + BOOL_0AM - min(saisies.get('REPSNO3', 0), LIM_SOCNOUV2 * 1 + BOOL_0AM) + saisies.get('REPSNO2', 0) + saisies.get('REPSNO1', 0))) * 1 - V_CNR
REPINVPME2 = max(0, saisies.get('REPSNO1', 0) - max(0, LIM_SOCNOUV2 * 1 + BOOL_0AM - min(saisies.get('REPSNO3', 0), LIM_SOCNOUV2 * 1 + BOOL_0AM) + saisies.get('REPSNO2', 0))) * 1 - V_CNR
REPINVPME3 = max(0, saisies.get('REPSNO2', 0) - max(0, LIM_SOCNOUV2 * 1 + BOOL_0AM - min(saisies.get('REPSNO3', 0), LIM_SOCNOUV2 * 1 + BOOL_0AM))) * 1 - V_CNR
REPINVPMECU = max(0, saisies.get('PETIPRISE', 0) - max(0, LIM_SOCNOUV2 * 1 + BOOL_0AM - min(saisies.get('REPSNO3', 0), LIM_SOCNOUV2 * 1 + BOOL_0AM) + saisies.get('REPSNO2', 0) + saisies.get('REPSNO1', 0) + saisies.get('REPSNON', 0))) * 1 - V_CNR
REPINVRES = RIVL1RES + RIVL2RES + RIVL3RES + RIVL4RES + RIVL5RES
REPINVTOT = REPINV + REPINVRES
REPIQAC = RIVPIQAC * 4 + RIVPIQAC5
REPIQBD = RIVPIQBD * 7 + RIVPIQBD8
REPLNOU = RCODOU8 + RCODOU1 * 7 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPLNPT = RCODJT1 + RCODJT2 + RCODJT3 + RCODJT4 + RCODJT5 + RCODJT6 + RCODJT7 + RCODJT8
REPLNPU = RCODJU1 + RCODJU2 + RCODJU3 + RCODJU4 + RCODJU5 + RCODJU6 + RCODJU7 + RCODJU8
REPLOCIE1 = round(round(ACODIE / 9) * TX18 / 100)
REPLOCIE2 = round(round(ACODIE / 9) * TX18 / 100)
REPLOCIE3 = round(round(ACODIE / 9) * TX18 / 100)
REPLOCIE4 = round(round(ACODIE / 9) * TX18 / 100)
REPLOCIE5 = round(round(ACODIE / 9) * TX18 / 100)
REPLOCIE6 = round(round(ACODIE / 9) * TX18 / 100)
REPLOCIE7 = round(round(ACODIE / 9) * TX18 / 100)
REPLOCIE8 = round(ACODIE * TX18 / 100) - REPLOCIE1 - REPLOCIE2 - REPLOCIE3 - REPLOCIE4 - REPLOCIE5 - REPLOCIE6 - REPLOCIE7 - REPLOCIE7
REPLOCOU = REPLNOU
REPMEUB = RESIMEUB1 + RESIMEUB2 + RESIMEUB3 + RESIMEUB4 + RESIMEUB5 + RESIMEUB6 + RESIMEUB7 + RESIMEUB8 * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)))
REPRCMBIS = saisies.get('DEFRCM', 0) + saisies.get('DEFRCM2', 0) + saisies.get('DEFRCM3', 0) + saisies.get('DEFRCM4', 0) + saisies.get('DEFRCM5', 0) + saisies.get('DEFRCM6', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFRCM', 0) + saisies.get('DEFRCM2', 0) + saisies.get('DEFRCM3', 0) + saisies.get('DEFRCM4', 0) + saisies.get('DEFRCM5', 0) + saisies.get('DEFRCM6', 0), max(REPRCM1731, max(REPRCM_P, REPRCMP2))) * ART1731BIS * 1 - PREM8_11 + 0 * ART1731BIS * PREM8_11
REPSIN = max(0, saisies.get('REPSINFOR', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * 1 - V_CNR
RESIVIAN1 = round(round(ACODIW / 9) * TX25 / 100)
RESIVIAN2 = round(round(ACODIW / 9) * TX25 / 100)
RESIVIAN3 = round(round(ACODIW / 9) * TX25 / 100)
RESIVIAN4 = round(round(ACODIW / 9) * TX25 / 100)
RESIVIAN5 = round(round(ACODIW / 9) * TX25 / 100)
RESIVIAN6 = round(round(ACODIW / 9) * TX25 / 100)
RESIVIAN7 = round(round(ACODIW / 9) * TX25 / 100)
RESIVIAN8 = round(ACODIW * TX25 / 100) - RESIVIAN1 - RESIVIAN2 - RESIVIAN3 - RESIVIAN4 - RESIVIAN5 - RESIVIAN6 - RESIVIAN7 - RESIVIAN7
RESIVIEU1 = round(round(ACODIM / 9) * TX25 / 100)
RESIVIEU2 = round(round(ACODIM / 9) * TX25 / 100)
RESIVIEU3 = round(round(ACODIM / 9) * TX25 / 100)
RESIVIEU4 = round(round(ACODIM / 9) * TX25 / 100)
RESIVIEU5 = round(round(ACODIM / 9) * TX25 / 100)
RESIVIEU6 = round(round(ACODIM / 9) * TX25 / 100)
RESIVIEU7 = round(round(ACODIM / 9) * TX25 / 100)
RESIVIEU8 = round(ACODIM * TX25 / 100) - RESIVIEU1 - RESIVIEU2 - RESIVIEU3 - RESIVIEU4 - RESIVIEU5 - RESIVIEU6 - RESIVIEU7 - RESIVIEU7
RESTIMOB = min(saisies.get('RESTIMOSAUV', 0), LIM_RESTIMO - RESTIMOD)
RESTIMOC = min(saisies.get('RIMOPPAUANT', 0), LIM_RESTIMO - RESTIMOD - RESTIMOB)
RESTIMOF = min(saisies.get('RIMOSAUVRF', 0), LIM_RESTIMO - RESTIMOD - RESTIMOB - RESTIMOC)
RESTIMOY = min(saisies.get('COD7SY', 0), LIM_RESTIMO - RESTIMOD - RESTIMOB - RESTIMOC - RESTIMOF)
RETCODIE = round(round(ACODIE / 9) * TX18 / 100)
RETCODIF = round(round(ACODIF / 9) * TX18 / 100)
RETCODIL = round(round(ACODIL / 9) * TX20 / 100)
RETCODIM = round(round(ACODIM / 9) * TX25 / 100)
RETCODIN = round(round(ACODIN / 9) * TX20 / 100)
RETCODIW = round(round(ACODIW / 9) * TX25 / 100)
RETCODJT = round(round(ACODJT / 9) * TX11 / 100)
RETCODJU = round(round(ACODJU / 9) * TX11 / 100)
RETCODOU = round(ACODOU * TX11 / 100)
RETPROREP = round(DPROREP * TX25 / 100) * 1 - V_CNR
RETREPMEU = round(DREPMEU * TX25 / 100) * 1 - V_CNR
RETREPNPRO = round(DREPNPRO * TX25 / 100) * 1 - V_CNR
RETRESIMEUB_1 = round(ARESIMEUB_1 * TX25 / 100)
RETRESIVIEU = round(round(ACODIM / 9) * TX25 / 100) + round(round(ACODIW / 9) * TX25 / 100) * 1 - ART1731BIS + min(ARESIVIEU_1, ARESIVIEU1731 + 0) * ART1731BIS
RETRESIVIEU_1 = round(round(ACODIM / 9) * TX25 / 100) + round(round(ACODIW / 9) * TX25 / 100)
RETUD = 1 - V_CNR * round(saisies.get('RDENS', 0) * MTRC + saisies.get('RDENL', 0) * MTRL + saisies.get('RDENU', 0) * MTRS + saisies.get('RDENSQAR', 0) * MTRC / 2 + saisies.get('RDENLQAR', 0) * MTRL / 2 + saisies.get('RDENUQAR', 0) * MTRS / 2)
REVALIM = sum([PENALIMV, PENALIMC, PENALIM1, PENALIM2, PENALIM3, PENALIM4]) * 1 - INDTEFF + sum([TPENALIMV, TPENALIMC, TPENALIM1, TPENALIM2, TPENALIM3, TPENALIM4]) * INDTEFF
REVDECTAX = saisies.get('TSHALLOV', 0) + saisies.get('ALLOV', 0) + saisies.get('TSHALLOC', 0) + saisies.get('ALLOC', 0) + saisies.get('TSHALLO1', 0) + saisies.get('ALLO1', 0) + saisies.get('TSHALLO2', 0) + saisies.get('ALLO2', 0) + saisies.get('TSHALLO3', 0) + saisies.get('ALLO3', 0) + saisies.get('TSHALLO4', 0) + saisies.get('ALLO4', 0) + saisies.get('PALIV', 0) + saisies.get('PALIC', 0) + saisies.get('PALI1', 0) + saisies.get('PALI2', 0) + saisies.get('PALI3', 0) + saisies.get('PALI4', 0) + saisies.get('PRBRV', 0) + saisies.get('PRBRC', 0) + saisies.get('PRBR1', 0) + saisies.get('PRBR2', 0) + saisies.get('PRBR3', 0) + saisies.get('PRBR4', 0) + saisies.get('RVB1', 0) + saisies.get('RVB2', 0) + saisies.get('RVB3', 0) + saisies.get('RVB4', 0) + saisies.get('GLDGRATV', 0) + saisies.get('GLDGRATC', 0) + saisies.get('REGPRIV', 0) + saisies.get('BICREP', 0) + saisies.get('RCMABD', 0) + saisies.get('RCMTNC', 0) + saisies.get('RCMAV', 0) + saisies.get('RCMHAD', 0) + saisies.get('RCMHAB', 0) + saisies.get('PPLIB', 0) + saisies.get('RCMLIB', 0) + saisies.get('BPV40V', 0) + saisies.get('BPVRCM', 0) - saisies.get('DPVRCM', 0) + saisies.get('BPCOPTV', 0) + saisies.get('BPCOSAV', 0) + saisies.get('BPCOSAC', 0) + saisies.get('PEA', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3V', 0) + saisies.get('GLD3C', 0) + saisies.get('RFORDI', 0) - min(saisies.get('RFDORD', 0), RFDORD1731 + 0) * is_positive(ART1731BIS) + saisies.get('RFDORD', 0) * 1 - ART1731BIS - saisies.get('RFDHIS', 0) * 1 - is_positive(ART1731BIS) - min(saisies.get('RFDANT', 0), RFDANT1731 + 0) * is_positive(ART1731BIS) + saisies.get('RFDANT', 0) * 1 - ART1731BIS + saisies.get('RFMIC', 0) + saisies.get('BNCPRO1AV', 0) + saisies.get('BNCPRO1AC', 0) + saisies.get('BNCPRO1AP', 0) + saisies.get('BACREV', 0) + saisies.get('BACREC', 0) + saisies.get('BACREP', 0) + saisies.get('BAHREV', 0) + saisies.get('BAHREC', 0) + saisies.get('BAHREP', 0) + saisies.get('BAFV', 0) + saisies.get('BAFC', 0) + saisies.get('BAFP', 0) - saisies.get('BACDEV', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BACDEC', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BACDEP', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BAHDEV', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BAHDEC', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BAHDEP', 0) * 1 - is_positive(ART1731BIS) - min(saisies.get('DAGRI6', 0), DAGRI61731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI6', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI5', 0), DAGRI51731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI5', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI4', 0), DAGRI41731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI4', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI3', 0), DAGRI31731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI3', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI2', 0), DAGRI21731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI2', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI1', 0), DAGRI11731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI1', 0) * 1 - ART1731BIS + saisies.get('BICNOV', 0) + saisies.get('BICNOC', 0) + saisies.get('BICNOP', 0) + saisies.get('BIHNOV', 0) + saisies.get('BIHNOC', 0) + saisies.get('BIHNOP', 0) - saisies.get('BICDNV', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BICDNC', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BICDNP', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BIHDNV', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BIHDNC', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BIHDNP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BICREV', 0) + saisies.get('BICREC', 0) + saisies.get('BICHREV', 0) + saisies.get('BICHREC', 0) + saisies.get('BICHREP', 0) - min(saisies.get('BICDEV', 0), BICDEV1731 + 0) * is_positive(ART1731BIS) + saisies.get('BICDEV', 0) * 1 - ART1731BIS - min(saisies.get('BICDEC', 0), BICDEC1731 + 0) * is_positive(ART1731BIS) + saisies.get('BICDEC', 0) * 1 - ART1731BIS - min(saisies.get('BICDEP', 0), BICDEP1731 + 0) * is_positive(ART1731BIS) + saisies.get('BICDEP', 0) * 1 - ART1731BIS - min(saisies.get('BICHDEV', 0), BICHDEV1731 + 0) * is_positive(ART1731BIS) + saisies.get('BICHDEV', 0) * 1 - ART1731BIS - min(saisies.get('BICHDEC', 0), BICHDEC1731 + 0) * is_positive(ART1731BIS) + saisies.get('BICHDEC', 0) * 1 - ART1731BIS - min(saisies.get('BICHDEP', 0), BICHDEP1731 + 0) * is_positive(ART1731BIS) + saisies.get('BICHDEP', 0) * 1 - ART1731BIS + saisies.get('BNCREV', 0) + saisies.get('BNCREC', 0) + saisies.get('BNCREP', 0) + saisies.get('BNHREV', 0) + saisies.get('BNHREC', 0) + saisies.get('BNHREP', 0) - saisies.get('BNCDEV', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BNCDEC', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BNCDEP', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BNHDEV', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BNHDEC', 0) * 1 - is_positive(ART1731BIS) - saisies.get('BNHDEP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('ANOCEP', 0) - min(saisies.get('DNOCEP', 0), DNOCEP1731 + 0) * is_positive(ART1731BIS) + saisies.get('DNOCEP', 0) * 1 - ART1731BIS + saisies.get('BAFPVV', 0) + saisies.get('BAFPVC', 0) + saisies.get('BAFPVP', 0) + saisies.get('BAF1AV', 0) + saisies.get('BAF1AC', 0) + saisies.get('BAF1AP', 0) + saisies.get('MIBVENV', 0) + saisies.get('MIBVENC', 0) + saisies.get('MIBVENP', 0) + saisies.get('MIBPRESV', 0) + saisies.get('MIBPRESC', 0) + saisies.get('MIBPRESP', 0) + saisies.get('MIBPVV', 0) + saisies.get('MIBPVC', 0) + saisies.get('MIBPVP', 0) - saisies.get('BICPMVCTV', 0) - saisies.get('BICPMVCTC', 0) - saisies.get('BICPMVCTP', 0) + saisies.get('MIBNPVENV', 0) + saisies.get('MIBNPVENC', 0) + saisies.get('MIBNPVENP', 0) + saisies.get('MIBNPPRESV', 0) + saisies.get('MIBNPPRESC', 0) + saisies.get('MIBNPPRESP', 0) + saisies.get('MIBNPPVV', 0) + saisies.get('MIBNPPVC', 0) + saisies.get('MIBNPPVP', 0) - saisies.get('MIBNPDCT', 0) - min(saisies.get('DEFBIC6', 0), DEFBIC61731 + 0) * is_positive(ART1731BIS) + saisies.get('DEFBIC6', 0) * 1 - ART1731BIS - min(saisies.get('DEFBIC5', 0), DEFBIC51731 + 0) * is_positive(ART1731BIS) + saisies.get('DEFBIC5', 0) * 1 - ART1731BIS - min(saisies.get('DEFBIC4', 0), DEFBIC41731 + 0) * is_positive(ART1731BIS) + saisies.get('DEFBIC4', 0) * 1 - ART1731BIS - min(saisies.get('DEFBIC3', 0), DEFBIC31731 + 0) * is_positive(ART1731BIS) + saisies.get('DEFBIC3', 0) * 1 - ART1731BIS - min(saisies.get('DEFBIC2', 0), DEFBIC21731 + 0) * is_positive(ART1731BIS) + saisies.get('DEFBIC2', 0) * 1 - ART1731BIS - min(saisies.get('DEFBIC1', 0), DEFBIC11731 + 0) * is_positive(ART1731BIS) + saisies.get('DEFBIC1', 0) * 1 - ART1731BIS + saisies.get('BNCPROV', 0) + saisies.get('BNCPROC', 0) + saisies.get('BNCPROP', 0) + saisies.get('BNCPROPVV', 0) + saisies.get('BNCPROPVC', 0) + saisies.get('BNCPROPVP', 0) - saisies.get('BNCPMVCTV', 0) + saisies.get('BNCNPV', 0) + saisies.get('BNCNPC', 0) + saisies.get('BNCNPP', 0) + saisies.get('BNCNPPVV', 0) + saisies.get('BNCNPPVC', 0) + saisies.get('BNCNPPVP', 0) + saisies.get('PVINVE', 0) - saisies.get('BNCNPDCT', 0) + saisies.get('BA1AV', 0) + saisies.get('BA1AC', 0) + saisies.get('BA1AP', 0) + saisies.get('BI1AV', 0) + saisies.get('BI1AC', 0) + saisies.get('BI1AP', 0) + saisies.get('MIB1AV', 0) + saisies.get('MIB1AC', 0) + saisies.get('MIB1AP', 0) - saisies.get('MIBDEV', 0) - saisies.get('MIBDEC', 0) - saisies.get('MIBDEP', 0) + saisies.get('BI2AV', 0) + saisies.get('BI2AC', 0) + saisies.get('BI2AP', 0) + saisies.get('MIBNP1AV', 0) + saisies.get('MIBNP1AC', 0) + saisies.get('MIBNP1AP', 0) - saisies.get('MIBNPDEV', 0) - saisies.get('MIBNPDEC', 0) - saisies.get('MIBNPDEP', 0) - saisies.get('BNCPRODEV', 0) - saisies.get('BNCPRODEC', 0) - saisies.get('BNCPRODEP', 0) + saisies.get('BN1AV', 0) + saisies.get('BN1AC', 0) + saisies.get('BN1AP', 0) + saisies.get('BNCNP1AV', 0) + saisies.get('BNCNP1AC', 0) + saisies.get('BNCNP1AP', 0) - saisies.get('BNCNPDEV', 0) - saisies.get('BNCNPDEC', 0) - saisies.get('BNCNPDEP', 0) * 1 - is_positive(saisies.get('APPLI_COLBERT', 0) + saisies.get('APPLI_OCEANS', 0))
REVPRR = sum([PRR2V + PRR2ZV, PRR2C + PRR2ZC, PRR21 + PRR2Z1, PRR22 + PRR2Z2, PRR23 + PRR2Z3, PRR24 + PRR2Z4]) * 1 - INDTEFF + sum([TPRR2V + TPRR2ZV, TPRR2C + TPRR2ZC, TPRR21 + TPRR2Z1, TPRR22 + TPRR2Z2, TPRR23 + TPRR2Z3, TPRR24 + TPRR2Z4]) * INDTEFF
REVRF = _2REVF + _3REVF
REVTP = BPTP2 + BPTPVT + BPTP4 + BTP3A + BPTP40 + BPTP24 + BPTP18 + BPTPSJ
REVTS = sum([TSNN2TSV, TSNN2TSC, TSNN2TS1, TSNN2TS2, TSNN2TS3, TSNN2TS4]) * 1 - INDTEFF + sum([TTSNN2TSV, TTSNN2TSC, TTSNN2TS1, TTSNN2TS2, TTSNN2TS3, TTSNN2TS4]) * INDTEFF
REVTSREMP = sum([TSNN2REMPV, TSNN2REMPC, TSNN2REMP1, TSNN2REMP2, TSNN2REMP3, TSNN2REMP4]) * 1 - INDTEFF + sum([TTSNN2REMPV, TTSNN2REMPC, TTSNN2REMP1, TTSNN2REMP2, TTSNN2REMP3, TTSNN2REMP4]) * INDTEFF
RFC = min(saisies.get('RDCOM', 0), PLAF_FRCOMPTA * max(1, saisies.get('NBACT', 0))) * present(saisies.get('RDCOM', 0)) * 1 - V_CNR
RFCPI = round(BFCPI_1 * TX_FCPI / 100)
RFG = round(BRFG * TX_REDGARD / 100) * 1 - V_CNR
RFIP = round(BSOUFIP * TX_REDFIP / 100) * 1 - V_CNR
RFIPCORSE = round(AFIPC_1 * TX_FIPCORSE / 100) * 1 - V_CNR
RFIPDOMCOM = round(AFIPDOM_1 * TXFIPDOM / 100)
RGEPAHA = BGEPAHA * TX25 / 100 * 1 - V_CNR
RIDOMPROE3 = RIDOMPROE3_1 * 1 - ART1731BIS + min(RIDOMPROE3_1, max(RIDOMPROE3_P + RIDOMPROE3P2, RIDOMPROE31731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
RIDOMPROTOT = RIDOMPROE3
RINVEST = RIDOMPROE3
RINVTPME12 = max(0, saisies.get('COD7CQ', 0) - max(0, LIM_TITPRISE * 1 + BOOL_0AM - min(BSNCL + saisies.get('REPSNO2', 0) + saisies.get('REPSNO1', 0) + saisies.get('REPSNON', 0) + saisies.get('PETIPRISE', 0), LIM_SOCNOUV2 * 1 + BOOL_0AM))) * 1 - V_CNR
RINVTPME13 = max(0, saisies.get('COD7CR', 0) - max(0, LIM_TITPRISE * 1 + BOOL_0AM - max(0, min(BSNCL + saisies.get('REPSNO2', 0) + saisies.get('REPSNO1', 0) + saisies.get('REPSNON', 0) + saisies.get('PETIPRISE', 0), LIM_SOCNOUV2 * 1 + BOOL_0AM) + saisies.get('COD7CQ', 0)))) * 1 - V_CNR
RINVTPME14 = max(0, saisies.get('RDSNO', 0) - max(0, LIM_TITPRISE * 1 + BOOL_0AM - max(0, min(BSNCL + saisies.get('REPSNO2', 0) + saisies.get('REPSNO1', 0) + saisies.get('REPSNON', 0) + saisies.get('PETIPRISE', 0), LIM_SOCNOUV2 * 1 + BOOL_0AM) + saisies.get('COD7CQ', 0) + saisies.get('COD7CR', 0)))) * 1 - V_CNR
RISFDONCEE_1 = max(0, min(PLAF_ISFRED - RISFDONF_1, AISFDONCEE))
RISFDONCEE_2 = max(0, min(PLAF_ISFRED - RISFDONF_1, RISFDONCEE_1))
RISFFCPI_1 = max(0, min(18000 - RISFFIP_1, AISFFCPI))
RISFFCPI_2 = max(0, min(PLAF_ISFRED - RISFDONF_1 - RISFDONCEE_1 - RISFPMED_1 - RISFPMEI_1 - RISFFIP_1, RISFFCPI_1))
RISFFIP_2 = max(0, min(PLAF_ISFRED - RISFDONF_1 - RISFDONCEE_1 - RISFPMED_1 - RISFPMEI_1, RISFFIP_1))
RISFPMED_2 = max(0, min(PLAF_ISFRED - RISFDONF_1 - RISFDONCEE_1, RISFPMED_1))
RISFPMEI_2 = max(0, min(PLAF_ISFRED - RISFDONF_1 - RISFDONCEE_1 - RISFPMED_1, RISFPMEI_1))
RIV2012CEL1 = RCEL_2012_R * is_positive(ACEL2012_R)
RIV2012CEL2 = RIV2012CEL1
RIV2012CEL3 = RIV2012CEL1
RIV2012CEL4 = RIV2012CEL1
RIV2012CEL5 = RIV2012CEL1
RIV2012CEL6 = RIV2012CEL1
RIV2012CEL7 = RIV2012CEL1
RIV2012CEL8 = round(min(CELSOMJ, LIMCELLIER) * is_positive(saisies.get('CELLIERJM', 0)) * TX36 / 100 + min(CELSOMJ, LIMCELLIER) * is_positive(saisies.get('CELLIERJK', 0) + saisies.get('CELLIERJN', 0)) * TX24 / 100 + min(CELSOMJ, LIMCELLIER) * is_positive(saisies.get('CELLIERJD', 0)) * TX22 / 100 + min(CELSOMJ, LIMCELLIER) * is_positive(saisies.get('CELLIERJA', 0) + saisies.get('CELLIERJE', 0) + saisies.get('CELLIERJH', 0)) * TX13 / 100 + min(CELSOMJ, LIMCELLIER) * is_positive(saisies.get('CELLIERJF', 0) + saisies.get('CELLIERJJ', 0)) * TX6 / 100) - 8 * RIV2012CEL1 * 1 - V_CNR
RIVCEL1 = RCEL_2011_R * is_positive(ACEL_R)
RIVCEL2 = RIVCEL1
RIVCEL3 = RIVCEL1
RIVCEL4 = RIVCEL1
RIVCEL5 = RIVCEL1
RIVCEL6 = RIVCEL1
RIVCEL7 = RIVCEL1
RIVCEL8 = round(min(CELSOMN, LIMCELLIER) * is_positive(saisies.get('CELLIERNM', 0) + saisies.get('CELLIERNN', 0)) * TX40 / 100 + min(CELSOMN, LIMCELLIER) * is_positive(saisies.get('CELLIERNK', 0) + saisies.get('CELLIERNO', 0)) * TX36 / 100 + min(CELSOMN, LIMCELLIER) * is_positive(saisies.get('CELLIERNC', 0) + saisies.get('CELLIERND', 0) + saisies.get('CELLIERNH', 0)) * TX25 / 100 + min(CELSOMN, LIMCELLIER) * is_positive(saisies.get('CELLIERNA', 0) + saisies.get('CELLIERNE', 0)) * TX22 / 100 + min(CELSOMN, LIMCELLIER) * is_positive(saisies.get('CELLIERNI', 0)) * TX15 / 100 + min(CELSOMN, LIMCELLIER) * is_positive(saisies.get('CELLIERNF', 0) + saisies.get('CELLIERNJ', 0)) * TX13 / 100) - 8 * RIVCEL1 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RIVCELCOM1 = RCEL_COM_R * is_positive(ACELCOM_R)
RIVCELCOM2 = RIVCELCOM1
RIVCELCOM3 = RIVCELCOM1
RIVCELCOM4 = round(min(saisies.get('CELLIERNP', 0) + saisies.get('CELLIERNR', 0) + saisies.get('CELLIERNS', 0) + saisies.get('CELLIERNT', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERNP', 0) + saisies.get('CELLIERNT', 0)) * TX36 / 100 + min(saisies.get('CELLIERNP', 0) + saisies.get('CELLIERNR', 0) + saisies.get('CELLIERNS', 0) + saisies.get('CELLIERNT', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERNR', 0) + saisies.get('CELLIERNS', 0)) * TX40 / 100) - 4 * RIVCELCOM1 * 1 - V_CNR
RIVCELFABC8 = round(min(saisies.get('CELLIERFA', 0) + saisies.get('CELLIERFB', 0) + saisies.get('CELLIERFC', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERFA', 0)) * TX13 / 100 + min(saisies.get('CELLIERFA', 0) + saisies.get('CELLIERFB', 0) + saisies.get('CELLIERFC', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERFB', 0)) * TX6 / 100 + min(saisies.get('CELLIERFA', 0) + saisies.get('CELLIERFB', 0) + saisies.get('CELLIERFC', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERFC', 0)) * TX24 / 100) - 8 * RIVCELFABC1 * 1 - V_CNR
RIVCELHJK1 = RCEL_HJK_R * is_positive(ACELHJK_R)
RIVCELHJK2 = RIVCELHJK1
RIVCELHJK3 = RIVCELHJK1
RIVCELHJK4 = RIVCELHJK1
RIVCELHJK5 = RIVCELHJK1
RIVCELHJK6 = RIVCELHJK1
RIVCELHJK7 = RIVCELHJK1
RIVCELHJK8 = round(min(saisies.get('CELLIERHK', 0) + saisies.get('CELLIERHJ', 0) + 0, LIMCELLIER) * is_positive(saisies.get('CELLIERHJ', 0)) * TX25 / 100 + min(saisies.get('CELLIERHK', 0) + saisies.get('CELLIERHJ', 0) + 0, LIMCELLIER) * is_positive(saisies.get('CELLIERHK', 0)) * TX40 / 100) - 8 * RIVCELHJK1 * 1 - V_CNR
RIVCELHLM1 = RCEL_HL_R * is_positive(ACELHL_R) + RCEL_HM_R * is_positive(ACELHM_R)
RIVCELHLM2 = RIVCELHLM1
RIVCELHLM3 = RIVCELHLM1
RIVCELHLM4 = RIVCELHLM1
RIVCELHLM5 = RIVCELHLM1
RIVCELHLM6 = RIVCELHLM1
RIVCELHLM7 = RIVCELHLM1
RIVCELHLM8 = round(min(saisies.get('CELLIERHL', 0) + saisies.get('CELLIERHM', 0) + 0, LIMCELLIER) * is_positive(saisies.get('CELLIERHL', 0)) * TX25 / 100 + min(saisies.get('CELLIERHL', 0) + saisies.get('CELLIERHM', 0) + 0, LIMCELLIER) * is_positive(saisies.get('CELLIERHM', 0)) * TX40 / 100) - 8 * RIVCELHLM1 * 1 - V_CNR
RIVCELHNO1 = RCEL_HNO_R * is_positive(ACELHNO_R)
RIVCELHNO2 = RIVCELHNO1
RIVCELHNO3 = RIVCELHNO1
RIVCELHNO4 = RIVCELHNO1
RIVCELHNO5 = RIVCELHNO1
RIVCELHNO6 = RIVCELHNO1
RIVCELHNO7 = RIVCELHNO1
RIVCELHNO8 = round(min(saisies.get('CELLIERHN', 0) + saisies.get('CELLIERHO', 0) + 0, LIMCELLIER) * is_positive(saisies.get('CELLIERHN', 0)) * TX25 / 100 + min(saisies.get('CELLIERHN', 0) + saisies.get('CELLIERHO', 0) + 0, LIMCELLIER) * is_positive(saisies.get('CELLIERHO', 0)) * TX40 / 100) - 8 * RIVCELHNO1 * 1 - V_CNR
RIVCELJBGL1 = RCEL_JBGL_R * is_positive(ACELJBGL_R)
RIVCELJBGL2 = RIVCELJBGL1
RIVCELJBGL3 = RIVCELJBGL1
RIVCELJBGL4 = RIVCELJBGL1
RIVCELJBGL5 = RIVCELJBGL1
RIVCELJBGL6 = RIVCELJBGL1
RIVCELJBGL7 = RIVCELJBGL1
RIVCELJBGL8 = round(min(saisies.get('CELLIERJB', 0) + saisies.get('CELLIERJG', 0) + saisies.get('CELLIERJL', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERJB', 0)) * TX22 / 100 + min(saisies.get('CELLIERJB', 0) + saisies.get('CELLIERJG', 0) + saisies.get('CELLIERJL', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERJG', 0)) * TX13 / 100 + min(saisies.get('CELLIERJB', 0) + saisies.get('CELLIERJG', 0) + saisies.get('CELLIERJL', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERJL', 0)) * TX36 / 100) - 8 * RIVCELJBGL1 * 1 - V_CNR
RIVCELJOQR1 = RCEL_JOQR_R * is_positive(ACELJOQR_R)
RIVCELJOQR2 = RIVCELJOQR1
RIVCELJOQR3 = RIVCELJOQR1
RIVCELJOQR4 = round(min(saisies.get('CELLIERJO', 0) + saisies.get('CELLIERJQ', 0) + saisies.get('CELLIERJR', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERJQ', 0)) * TX36 / 100 + min(saisies.get('CELLIERJO', 0) + saisies.get('CELLIERJQ', 0) + saisies.get('CELLIERJR', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERJO', 0) + saisies.get('CELLIERJR', 0)) * TX24 / 100) - 4 * RIVCELJOQR1 * 1 - V_CNR
RIVCELJP1 = RCEL_JP_R * is_positive(ACELJP_R)
RIVCELJP2 = RIVCELJP1
RIVCELJP3 = RIVCELJP1
RIVCELJP4 = round(min(saisies.get('CELLIERJP', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERJP', 0)) * TX36 / 100) - 4 * RIVCELJP1 * 1 - V_CNR
RIVCELNBGL1 = RCEL_NBGL_R * is_positive(ACELNBGL_R)
RIVCELNBGL2 = RIVCELNBGL1
RIVCELNBGL3 = RIVCELNBGL1
RIVCELNBGL4 = RIVCELNBGL1
RIVCELNBGL5 = RIVCELNBGL1
RIVCELNBGL6 = RIVCELNBGL1
RIVCELNBGL7 = RIVCELNBGL1
RIVCELNBGL8 = round(min(saisies.get('CELLIERNB', 0) + saisies.get('CELLIERNG', 0) + saisies.get('CELLIERNL', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERNB', 0)) * TX25 / 100 + min(saisies.get('CELLIERNB', 0) + saisies.get('CELLIERNG', 0) + saisies.get('CELLIERNL', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERNG', 0)) * TX15 / 100 + min(saisies.get('CELLIERNB', 0) + saisies.get('CELLIERNG', 0) + saisies.get('CELLIERNL', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERNL', 0)) * TX40 / 100) - 8 * RIVCELNBGL1 * 1 - V_CNR
RIVCELNQ1 = RCEL_NQ_R * is_positive(ACELNQ_R)
RIVCELNQ2 = RIVCELNQ1
RIVCELNQ3 = RIVCELNQ1
RIVCELNQ4 = round(min(saisies.get('CELLIERNQ', 0), LIMCELLIER) * is_positive(saisies.get('CELLIERNQ', 0)) * TX40 / 100) - 4 * RIVCELNQ1 * 1 - V_CNR
RLOCENT_1 = 1 - saisies.get('V_INDTEO', 0) * sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30, RENT31, RENT32, RENT33, RENT34, RENT35, RENT36]) + saisies.get('V_INDTEO', 0) * round(saisies.get('V_RENT07', 0) + saisies.get('V_RENT31', 0) * 5263 / 10000) + round(saisies.get('V_RENT01', 0) + saisies.get('V_RENT25', 0) * 625 / 1000) + round(saisies.get('V_RENT09', 0) + saisies.get('V_RENT33', 0) * 5263 / 10000) + round(saisies.get('V_RENT03', 0) + saisies.get('V_RENT27', 0) * 625 / 1000) + round(saisies.get('V_RENT08', 0) + saisies.get('V_RENT32', 0) * 5263 / 10000) + round(saisies.get('V_RENT02', 0) + saisies.get('V_RENT26', 0) * 625 / 1000) + round(saisies.get('V_RENT10', 0) + saisies.get('V_RENT34', 0) * 5263 / 10000) + round(saisies.get('V_RENT04', 0) + saisies.get('V_RENT28', 0) * 625 / 1000) + round(saisies.get('V_RENT11', 0) + saisies.get('V_RENT35', 0) * 5263 / 10000) + round(saisies.get('V_RENT05', 0) + saisies.get('V_RENT29', 0) * 625 / 1000) + round(saisies.get('V_RENT12', 0) + saisies.get('V_RENT36', 0) * 5263 / 10000) + round(saisies.get('V_RENT06', 0) + saisies.get('V_RENT30', 0) * 625 / 1000) * 1 - V_CNR
RMOND_2 = max(0, saisies.get('RMOND', 0) + saisies.get('DEFZU', 0) - saisies.get('DMOND', 0)) * is_positive(SOMMEMOND_2) * 1 - PREM8_11 + saisies.get('RMOND', 0) * is_zero(SOMMEMOND_2 + 0) * 1 - PREM8_11 + max(0, saisies.get('RMOND', 0) + saisies.get('DEFZU', 0) - saisies.get('DMOND', 0)) * PREM8_11
RNBE = RNBE_1 * 1 - ART1731BIS + min(RNBE_1, max(RNBE_P + RNBEP2, RNBE1731 + 0) * 1 - PREM8_11) * ART1731BIS
RPRESCOMP = round(BPRESCOMP * TX_PRESCOMP / 100) * 1 - V_CNR
RRESINEUV1 = round(round(ACODIL / 9) * TX20 / 100)
RRESINEUV2 = round(round(ACODIL / 9) * TX20 / 100)
RRESINEUV3 = round(round(ACODIL / 9) * TX20 / 100)
RRESINEUV4 = round(round(ACODIL / 9) * TX20 / 100)
RRESINEUV5 = round(round(ACODIL / 9) * TX20 / 100)
RRESINEUV6 = round(round(ACODIL / 9) * TX20 / 100)
RRESINEUV7 = round(round(ACODIL / 9) * TX20 / 100)
RRESINEUV8 = round(ACODIL * TX20 / 100) - RRESINEUV1 - RRESINEUV2 - RRESINEUV3 - RRESINEUV4 - RRESINEUV5 - RRESINEUV6 - RRESINEUV7 - RRESINEUV7
RRFI = RFON + DRCF + max(0, saisies.get('RFMIC', 0) - MICFR - saisies.get('RFDANT', 0)) * 1 - is_positive(ART1731BIS) + RFON + DRCF + max(0, saisies.get('RFMIC', 0) - MICFR - DEFRF4BD) * is_positive(ART1731BIS)
RRFIPS = RRFI
RRS = round(BSURV * TX_REDSURV / 100) * 1 - V_CNR
RSE1 = round(BRSE1 * TXTQ / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
RSE2 = round(BRSE8TV * TXTV / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0)) + round(BRSE8SA * TXTV / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
RSE3 = round(BRSE3 * TXTW / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
RSE4 = round(BRSE8TX * TXTX / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0)) + round(BRSE8SB * TXTX / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
RSE5 = round(BRSE5 * TX075 / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
RSE8SA = round(BRSE8SA * TXTV / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
RSE8SB = round(BRSE8SB * TXTX / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
RSE8TV = round(BRSE8TV * TXTV / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
RSE8TX = round(BRSE8TX * TXTX / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
RSETOT = RSE1 + RSE2 + RSE3 + RSE4 + RSE5
RSN_CC = BSNCC * TX18 / 100
RSN_CF = BSNCF * TX18 / 100
RSN_CU = BSNCU * TX18 / 100
RSOCREP = round(TX_SOCREPR / 100 * BSOCREP) * 1 - V_CNR
SFCD2 = is_positive(PAC + saisies.get('V_0CH', 0)) * is_positive(saisies.get('V_0AC', 0) + saisies.get('V_0AD', 0) + is_zero(2 - BOOL_V)) * is_positive(saisies.get('V_0AP', 0) + 0) * 10 * is_positive(saisies.get('V_0BT', 0) + 0) * 1 - is_positive(saisies.get('V_0AV', 0)) + 2 * is_positive(saisies.get('V_0AV', 0)) + 2 * 1 - is_positive(saisies.get('V_0AV', 0)) * 1 - is_positive(saisies.get('V_0BT', 0) + 0) + 1 - is_positive(saisies.get('V_0AP', 0) + 0) * 11 * is_positive(saisies.get('V_0BT', 0) + 0) * 1 - is_positive(saisies.get('V_0AV', 0) + 0)
SFV1 = 2 * is_positive(saisies.get('V_0AP', 0) + 0) * is_zero(BOOL_V - 3)
SOMMEA538 = SOMMEA538VB + SOMMEA538CB + SOMMEA538PB + SOMMEA538VP + SOMMEA538CP + SOMMEA538PP
SOMMEA804 = SOMMEANOEXP + is_positive(saisies.get('GLD1V', 0)) + is_positive(saisies.get('GLD2V', 0)) + is_positive(saisies.get('GLD3V', 0)) + is_positive(saisies.get('GLD1C', 0)) + is_positive(saisies.get('GLD2C', 0)) + is_positive(saisies.get('GLD3C', 0))
SOMMEA805 = SOMMEANOEXP + is_positive(saisies.get('CODDAJ', 0)) + is_positive(saisies.get('CODEAJ', 0)) + is_positive(saisies.get('CODDBJ', 0)) + is_positive(saisies.get('CODEBJ', 0)) + is_positive(saisies.get('CARTSV', 0)) + is_positive(saisies.get('CARTSNBAV', 0)) + is_positive(saisies.get('CARTSC', 0)) + is_positive(saisies.get('CARTSNBAC', 0))
SOMMEA858 = SOMMEA881 + present(saisies.get('TSHALLOV', 0)) + present(saisies.get('TSHALLOC', 0)) + present(saisies.get('TSASSUV', 0)) + present(saisies.get('TSASSUC', 0)) + present(saisies.get('RFMIC', 0)) + present(saisies.get('RFORDI', 0)) + present(saisies.get('RFDORD', 0)) + present(saisies.get('RFDHIS', 0))
SOMMEA861 = SOMMEA881
SPEBASABC = SPETOTC
SPEBASABP = SPETOTP
SPEBASABV = SPETOTV
T2RV = _2RV1 + _2RV2 + _2RV3 + _2RV4
TBICNPF = max(0, sum([BINTAV + BINHTAV, BINTAC + BINHTAC, BINTAP + BINHTAP]) + TMIBNETNPVF + TMIBNETNPPF + MIB_NETNPCT - DEFNP)
TBICPF = TMIBNETVF + TMIBNETPF + MIB_NETCT
TEFFBENEFTOT = TSPENET + TXSPENET + TMIBNETVF + TMIBNETNPVF + TMIBNETPF + TMIBNETNPPF * 1 - is_positive(VARIPTEFP * is_positive(ART1731BIS) + saisies.get('IPTEFP', 0) * 1 - ART1731BIS + VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS + saisies.get('IPMOND', 0))
TEXPR1 = TPRB1 + saisies.get('COD1CH', 0) + T2PRB1 + saisies.get('PEBF1', 0)
TEXPR2 = TPRB2 + saisies.get('COD1DH', 0) + T2PRB2 + saisies.get('PEBF2', 0)
TEXPR3 = TPRB3 + saisies.get('COD1EH', 0) + T2PRB3 + saisies.get('PEBF3', 0)
TEXPR4 = TPRB4 + saisies.get('COD1FH', 0) + T2PRB4 + saisies.get('PEBF4', 0)
TEXPRC = TPRBC + saisies.get('COD1BH', 0) + T2PRBC + saisies.get('PEBFC', 0)
TEXPRV = TPRBV + saisies.get('COD1AH', 0) + T2PRBV + saisies.get('PEBFV', 0)
TEXTS1 = TTSBN1 + T2TSN1
TEXTS2 = TTSBN2 + T2TSN2
TEXTS3 = TTSBN3 + T2TSN3
TEXTS4 = TTSBN4 + T2TSN4
TEXTSC = TTSBNC + saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0) + T2TSNC
TEXTSV = TTSBNV + saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0) + T2TSNV
TMIB_APC = min(TMIB_TPRESC, max(MIN_MBIC, round(TMIB_TPRESC * TX_MIBPRES / 100)))
TMIB_APP = min(TMIB_TPRESP, max(MIN_MBIC, round(TMIB_TPRESP * TX_MIBPRES / 100)))
TMIB_APV = min(TMIB_TPRESV, max(MIN_MBIC, round(TMIB_TPRESV * TX_MIBPRES / 100)))
TMIB_AUTOAPC = TMIB_APC - TMIB_PRESAC
TMIB_AUTOAPP = TMIB_APP - TMIB_PRESAP
TMIB_AUTOAPV = TMIB_APV - TMIB_PRESAV
TMIB_AVC = min(TMIB_TVENC, max(MIN_MBIC, round(TMIB_TVENC * TX_MIBVEN / 100)))
TMIB_AVP = min(TMIB_TVENP, max(MIN_MBIC, round(TMIB_TVENP * TX_MIBVEN / 100)))
TMIB_AVV = min(TMIB_TVENV, max(MIN_MBIC, round(TMIB_TVENV * TX_MIBVEN / 100)))
TMIB_TTC = TMIB_TVENC + TMIB_TPRESC
TMIB_TTP = TMIB_TVENP + TMIB_TPRESP
TMIB_TTV = TMIB_TVENV + TMIB_TPRESV
TOTDABNCNP = is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * saisies.get('DABNCNP6', 0) + saisies.get('DABNCNP5', 0) + saisies.get('DABNCNP4', 0) + saisies.get('DABNCNP3', 0) + saisies.get('DABNCNP2', 0) + saisies.get('DABNCNP1', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * max(0, min(saisies.get('DABNCNP6', 0) + saisies.get('DABNCNP5', 0) + saisies.get('DABNCNP4', 0) + saisies.get('DABNCNP3', 0) + saisies.get('DABNCNP2', 0) + saisies.get('DABNCNP1', 0), TOTDABNCNP1731 * ART1731BIS * 1 - PREM8_11 + saisies.get('DABNCNP6', 0) + saisies.get('DABNCNP5', 0) + saisies.get('DABNCNP4', 0) + saisies.get('DABNCNP3', 0) + saisies.get('DABNCNP2', 0) + saisies.get('DABNCNP1', 0) * 1 - is_positive(ART1731BIS * PREM8_11)))
TPLR1 = min(MIN_DEDPR, TEXPR1)
TPLR2 = min(MIN_DEDPR, TEXPR2)
TPLR3 = min(MIN_DEDPR, TEXPR3)
TPLR4 = min(MIN_DEDPR, TEXPR4)
TPLRC = min(MIN_DEDPR, TEXPRC)
TPLRV = min(MIN_DEDPR, TEXPRV)
TRCMRABD = RCMRABD + _2RCMRABD
TRCMRTNC = RCMRTNC + _2RCMRTNC
TSALP = TSBN1 + TSBN2 + TSBN3 + TSBN4
TSB1 = EXTS1
TSB2 = EXTS2
TSB3 = EXTS3
TSB4 = EXTS4
TSBC = EXTSC + sum([saisies.get('GLD1C', 0), saisies.get('GLD2C', 0), saisies.get('GLD3C', 0)]) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0)
TSBNP = TSHALLOP + ALLOP
TSBV = EXTSV + sum([saisies.get('GLD1V', 0), saisies.get('GLD2V', 0), saisies.get('GLD3V', 0)]) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0)
TSPEBASABC = TSPETOTC
TSPEBASABP = TSPETOTP
TSPEBASABV = TSPETOTV
TSQCJ = _2TSNC + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0)
TSQVO = _2TSNV + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0)
TTSB1 = TEXTS1
TTSB2 = TEXTS2
TTSB3 = TEXTS3
TTSB4 = TEXTS4
TTSBC = TEXTSC + sum([saisies.get('GLD1C', 0), saisies.get('GLD2C', 0), saisies.get('GLD3C', 0)]) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0)
TTSBNP = TTSHALLOP + TALLOP
TTSBV = TEXTSV + sum([saisies.get('GLD1V', 0), saisies.get('GLD2V', 0), saisies.get('GLD3V', 0)]) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0)
TXINT = is_positive(2006 - round(INTAN)) * max(0, INTAN - saisies.get('V_ANREV', 0) + 1 * 12 + INTMS - 6) * TXMOISRETARD + positif_ou_nul(saisies.get('V_ANREV', 0) - 2006) * max(0, INTAN - saisies.get('V_ANREV', 0) + 1 * 12 + INTMS - 6) * TXMOISRETARD2 + 1 - is_positive(2006 - round(INTAN)) * 1 - positif_ou_nul(saisies.get('V_ANREV', 0) - 2006) * 2006 - saisies.get('V_ANREV', 0) + 1 * 12 - 6 * TXMOISRETARD * is_positive(2006 - saisies.get('V_ANREV', 0) + 1) + TXMOISRETARD2 * is_zero(2006 - saisies.get('V_ANREV', 0) + 1) + INTAN - 2006 * 12 + INTMS * TXMOISRETARD2 * present(saisies.get('MOISAN', 0))
TXINTISF = max(0, INTANISF - saisies.get('V_ANREV', 0) + 1 * 12 + INTMSISF - 6) * TXMOISRETARD2 * present(saisies.get('MOISAN_ISF', 0))
TXMOYIMPDEN3 = sum([saisies.get('BN1AV', 0) + BIH1V + saisies.get('BI1AV', 0) + saisies.get('BI2AV', 0) + saisies.get('BA1AV', 0), saisies.get('BN1AC', 0) + BIH1C + saisies.get('BI1AC', 0) + saisies.get('BI2AC', 0) + saisies.get('BA1AC', 0), saisies.get('BN1AP', 0) + BIH1P + saisies.get('BI1AP', 0) + saisies.get('BI2AP', 0) + saisies.get('BA1AP', 0)]) + MIB_1AF + BA1AF + SPEPV + saisies.get('PVINVE', 0) + saisies.get('PVINCE', 0) + saisies.get('PVINPE', 0) + saisies.get('INVENTV', 0) + saisies.get('INVENTC', 0) + saisies.get('INVENTP', 0) + BPTPVT + BPTPSJ * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0))) + BTP2 + BPTP4 + BTP40 + BTP18 * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0))) + RCM2FA * 1 - is_positive(saisies.get('IPVLOC', 0))
TXP = COPETO + TXINT
TXR = COPETO + TXINT
TXREGV = COPETO + TXINT
TXRSE1 = COPETO + TXINT
TXRSE2 = COPETO + TXINT
TXRSE3 = COPETO + TXINT
TXRSE4 = COPETO + TXINT
TXRSE5 = COPETO + TXINT
TXTO = COPETO + TXINT
VARD = max(0, min(saisies.get('REPFOR', 0), max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R) - saisies.get('REPSINFOR', 0)))
XBICIMPC = XBICHDC + XBICNPHDC
XBICIMPP = XBICHDP + XBICNPHDP
XBICIMPV = XBICHDV + XBICNPHDV
XEXTS1 = XTSB1 + saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)
XEXTS2 = XTSB2 + saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)
XEXTS3 = XTSB3 + saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)
XEXTS4 = XTSB4 + saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)
XEXTSC = XTSBC + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0)
XEXTSV = XTSBV + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0)
XTPS101 = round(XEXTS1 * TX_DEDFORFTS / 100)
XTPS102 = round(XEXTS2 * TX_DEDFORFTS / 100)
XTPS103 = round(XEXTS3 * TX_DEDFORFTS / 100)
XTPS104 = round(XEXTS4 * TX_DEDFORFTS / 100)
XTPS10C = round(XEXTSC * TX_DEDFORFTS / 100)
XTPS10V = round(XEXTSV * TX_DEDFORFTS / 100)
ZIGCDIS = is_positive(BCDIS + saisies.get('V_CDISANT', 0)) * LIG2
ZIGGLOA = is_positive(BGLOA) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
ZIGGLOANR = is_positive(BGLOACNR) * LIG2
ZIGREGV = is_positive(BREGV) * LIG2
ZIGRSE1 = is_positive(BRSE1) * LIG2
ZIGRSE2 = is_positive(BRSE2) * LIG2
ZIGRSE3 = is_positive(BRSE3) * LIG2
ZIGRSE4 = is_positive(BRSE4) * LIG2
ZIGRSE5 = is_positive(BRSE5) * LIG2
ZIG_BPCOS = is_positive(CS_BPCOS + RD_BPCOS + PS_BPCOS) * 1 - V_CNR * LIG1 * LIG2
_1RNC = RCMRNTNC
_2RAO = max(0, _2REGPRIVM)
_2RCMRNTNC = saisies.get('REVPEA', 0) - _2RCMRTNC
_2RNC = _2RCMRNTNC
_4DEFBACREC = is_positive(_4BACREC) * saisies.get('BACDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - DEFBACREC
_4DEFBACREP = is_positive(_4BACREP) * saisies.get('BACDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - DEFBACREP
_4DEFBACREV = is_positive(_4BACREV) * saisies.get('BACDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - DEFBACREV
_4DEFBAHREC = is_positive(_4BAHREC) * saisies.get('BAHDEC', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - DEFBAHREC
_4DEFBAHREP = is_positive(_4BAHREP) * saisies.get('BAHDEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - DEFBAHREP
_4DEFBAHREV = is_positive(_4BAHREV) * saisies.get('BAHDEV', 0) * 1 - is_positive(ART1731BIS * PREM8_11) - DEFBAHREV
AAIDC = BADCRE * 1 - V_CNR
ABRCM2 = min(ABTAV, RAVC)
ACODID = min(PLAF_RESINEUV - ACODIE - ACODIF, saisies.get('LOCMEUBID', 0)) * 1 - V_CNR
ACODIG = min(PLAF_RESINEUV - ACODIE - ACODIF - ACODID, saisies.get('LOCMEUBIG', 0)) * 1 - V_CNR
ACODIJ = min(PLAF_RESINEUV - ACODIL - ACODIN, saisies.get('LOCRESINEUV', 0)) * 1 - V_CNR
ACODIV = min(PLAF_RESINEUV - ACODIL - ACODIN - ACODIJ, saisies.get('INVNPROF2', 0)) * 1 - V_CNR
ACODJTJU_1 = round(ACODJT / 9) + round(ACODJU / 9)
ACOMP = RFC * 1 - ART1731BIS + min(RFC, max(ACOMP_P + ACOMPP2, ACOMP1731 + 0) * 1 - PREM8_11) * ART1731BIS
ACOTFOR = ACOTFOR_R * 1 - ART1731BIS + min(ACOTFOR_R, max(ACOTFOR_P + ACOTFORP2, ACOTFOR1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
ADIFAGRI = BDIFAGRI * 1 - ART1731BIS + min(BDIFAGRI, max(ADIFAGRI_P + ADIFAGRIP2, ADIFAGRI1731 + 0) * 1 - PREM8_11) * ART1731BIS
AFIPC = max(0, AFIPC_1 * 1 - ART1731BIS + min(AFIPC_1, max(AFIPC_P + AFIPCP2, AFIPC1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - V_CNR
AFIPDOM = max(0, AFIPDOM_1 * 1 - ART1731BIS + min(AFIPDOM_1, max(AFIPDOM_P + AFIPDOMP2, AFIPDOM1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - V_CNR
AFOREST_1 = min(FORTRA, max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR)) * 1 - V_CNR + min(saisies.get('RDFOREST', 0), PLAF_FOREST * 1 + BOOL_0AM)
AFORET = max(0, AFORET_1 * 1 - ART1731BIS + min(AFORET_1, max(AFORET_P + AFORETP2, AFORET1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - V_CNR
AGREVTP = REVTP
AHEBE = BAH * 1 - ART1731BIS + min(BAH, max(AHEBE_P + AHEBEP2, AHEBE1731 + 0) * 1 - PREM8_11) * ART1731BIS
ALOCIDEFG_1 = round(ACODIE / 9) + round(ACODIF / 9) + round(ACODID / 9) + round(ACODIG / 9)
APB1 = max(PLR1, EXPR1 * TX_DEDPER / 100)
APB2 = max(PLR2, EXPR2 * TX_DEDPER / 100)
APB3 = max(PLR3, EXPR3 * TX_DEDPER / 100)
APB4 = max(PLR4, EXPR4 * TX_DEDPER / 100)
APBC = max(PLRC, EXPRC * TX_DEDPER / 100)
APBV = max(PLRV, EXPRV * TX_DEDPER / 100)
APRESCOMP = BPRESCOMP * 1 - ART1731BIS + min(BPRESCOMP, max(APRESCOMP_P + APRESCOMPP2, APRESCOMP1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
ARESIMEUB = ARESIMEUB_1 * 1 - ART1731BIS + min(ARESIMEUB_1, max(ARESIMEUB_P + ARESIMEUBP2, ARESIMEUB1731 + 0) * 1 - PREM8_11) * ART1731BIS
ARESINEUV_1 = round(ACODIL / 9) + round(ACODIN / 9) + round(ACODIJ / 9) + round(ACODIV / 9)
ARESIVIEU = ARESIVIEU_1 * 1 - ART1731BIS + min(ARESIVIEU_1, max(ARESIVIEU_P + ARESIVIEUP2, ARESIVIEU1731 + 0) * 1 - PREM8_11) * ART1731BIS
ASURV = BSURV * 1 - ART1731BIS + min(BSURV, max(ASURV_P + ASURVP2, ASURV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AUBAINE11 = max(0, min(saisies.get('V_A11REEL', 0), saisies.get('V_DIFTEOREEL', 0) - AUBAINE13A - AUBAINE13B - AUBAINE12))
BA14UN = round(BASE7UN * TX18 / 100)
BAD1 = min(saisies.get('RVAIDE', 0), max(0, BADPLAF - BADCRE))
BAD2 = min(saisies.get('RVAIDAS', 0), max(0, BADPLAF2 - BADCRE - BAD1))
BAEC = _4BACREC - _4DEFBACREC * positif_ou_nul(BARAC) + 0
BAEMC = round(_4BAHREC - _4DEFBAHREC * MAJREV) * positif_ou_nul(BARSC) + 0
BAEMP = round(_4BAHREP - _4DEFBAHREP * MAJREV) * positif_ou_nul(BARSP) + 0
BAEMV = round(_4BAHREV - _4DEFBAHREV * MAJREV) * positif_ou_nul(BARSV) + 0
BAEP = _4BACREP - _4DEFBACREP * positif_ou_nul(BARAP) + 0
BAEV = _4BACREV - _4DEFBACREV * positif_ou_nul(BARAV) + 0
BAMC = round(saisies.get('BAHREC', 0) - DEFBAHREC * MAJREV) * positif_ou_nul(BARSC) + BARSC * 1 - is_positive(BARSC)
BAMP = round(saisies.get('BAHREP', 0) - DEFBAHREP * MAJREV) * positif_ou_nul(BARSP) + BARSP * 1 - is_positive(BARSP)
BAMV = round(saisies.get('BAHREV', 0) - DEFBAHREV * MAJREV) * positif_ou_nul(BARSV) + BARSV * 1 - is_positive(BARSV)
BANC = saisies.get('BACREC', 0) - DEFBACREC * positif_ou_nul(BARAC) + BARAC * 1 - is_positive(BARAC)
BANP = saisies.get('BACREP', 0) - DEFBACREP * positif_ou_nul(BARAP) + BARAP * 1 - is_positive(BARAP)
BANV = saisies.get('BACREV', 0) - DEFBACREV * positif_ou_nul(BARAV) + BARAV * 1 - is_positive(BARAV)
BAQC = BAEC + BAEMC
BAQP = BAEP + BAEMP
BAQV = BAEV + BAEMV
BASSURC1 = max(0, saisies.get('CESSASSC', 0) - BASSURC3 - BASSURC2 - LIM_ASSUR1)
BASSURV1 = max(0, saisies.get('CESSASSV', 0) - BASSURV3 - BASSURV2 - LIM_ASSUR1)
BCIFORET = BCIFORETUP + BCIFORETUT + BCIFORETUA + BCIFORETUB + BCIFORETUQ + BCIFORETUI
BCIHABPRIN1 = min(BCIHP, saisies.get('PREHABT', 0)) * 1 - V_CNR
BCIHABPRIN2 = min(max(0, BCIHP - BCIHABPRIN1), saisies.get('PREHABT1', 0)) * 1 - V_CNR
BCIHABPRIN3 = min(max(0, BCIHP - BCIHABPRIN1 - BCIHABPRIN2), saisies.get('PREHABTN', 0)) * 1 - V_CNR
BCIHABPRIN4 = min(max(0, BCIHP - BCIHABPRIN1 - BCIHABPRIN2 - BCIHABPRIN3), saisies.get('PREHABTN1', 0)) * 1 - V_CNR
BCIHABPRIN5 = min(max(0, BCIHP - BCIHABPRIN1 - BCIHABPRIN2 - BCIHABPRIN3 - BCIHABPRIN4), saisies.get('PREHABT2', 0)) * 1 - V_CNR
BCIHABPRIN6 = min(max(0, BCIHP - BCIHABPRIN1 - BCIHABPRIN2 - BCIHABPRIN3 - BCIHABPRIN4 - BCIHABPRIN5), saisies.get('PREHABTN2', 0)) * 1 - V_CNR
BCIHABPRIN7 = min(max(0, BCIHP - BCIHABPRIN1 - BCIHABPRIN2 - BCIHABPRIN3 - BCIHABPRIN4 - BCIHABPRIN5 - BCIHABPRIN6), saisies.get('PREHABTVT', 0)) * 1 - V_CNR
BFCPI = BFCPI_1 * 1 - ART1731BIS + min(BFCPI_1, max(BFCPI_P + BFCPIP2, BFCPI1731 + 0) * 1 - PREM8_11) * ART1731BIS
BGTECH = min(saisies.get('RDTECH', 0), P2GEWL) * 1 - V_CNR
BINNC = BINTAC + BINHTAC
BINNP = BINTAP + BINHTAP
BINNV = BINTAV + BINHTAV
BIPNC = BIPTAC + BIHTAC
BIPNP = BIPTAP + BIHTAP
BIPNV = BIPTAV + BIHTAV
BNRTOT = BNRV + BNRC + BNRP
BOOL_CDV = is_positive(BOOL_V + saisies.get('V_0AC', 0) + saisies.get('V_0AD', 0) + 0)
BPTP3 = BTP3A * 1 - is_positive(V_EAD + V_EAG) * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BPTPD = BTP3A * is_positive(V_EAD) * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
BPTPG = BTP3A * is_positive(V_EAG) * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
CDIS = CDISC
CDISAC = CDISC
CDISBASE = CDIS - saisies.get('CDISPROV', 0)
CIGARD = RFG * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
CIHABPRIN = round(BCIHABPRIN1 * TX40 / 100 + BCIHABPRIN2 * TX40 / 100 + BCIHABPRIN3 * TX30 / 100 + BCIHABPRIN4 * TX25 / 100 + BCIHABPRIN5 * TX20 / 100 + BCIHABPRIN6 * TX15 / 100 + BCIHABPRIN7 * TX10 / 100) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * 1 - V_CNR
CIRSE1 = min(RSE1, round(saisies.get('REVCSXA', 0) * TX075 / 100))
CIRSE3 = min(RSE3, round(saisies.get('REVCSXD', 0) * TX062 / 100))
CIRSE5 = min(RSE5, round(saisies.get('REVCSXB', 0) * TX075 / 100))
CIRSE8SA = min(RSE8SA, round(saisies.get('COD8XI', 0) * TX066 / 100))
CIRSE8SB = min(RSE8SB, round(saisies.get('COD8XJ', 0) * TX038 / 100))
CIRSE8TV = min(RSE8TV, round(saisies.get('REVCSXC', 0) * TX066 / 100))
CIRSE8TX = min(RSE8TX, round(saisies.get('REVCSXE', 0) * TX038 / 100))
CREREVET = min(round(BPTP3 + BPTPD + BPTPG * TX16 / 100), round(saisies.get('CIIMPPRO', 0) * TX_CREREVET / 100)) + min(round(BPTP19 * TX19 / 100), round(saisies.get('CIIMPPRO2', 0) * TX19 / 100))
CSGDED = max(0, CSGDED3UA + CSGDEDAUTRE)
CS_RVT = RDRV
DCTMIBNP = saisies.get('MIBNPDCT', 0) * positif_ou_nul(BINNV + BINNC + BINNP + MIB_NETNPCT) + 1 - positif_ou_nul(BINNV + BINNC + BINNP + MIB_NETNPCT) * saisies.get('MIBNPDCT', 0) - abs(BINNV + BINNC + BINNP + MIB_NETNPCT) + 1 - positif_ou_nul(BINNV + BINNC + BINNP + MIB_NETNPCT) * is_zero(saisies.get('MIBNPDCT', 0) - abs(BINNV + BINNC + BINNP + MIB_NETNPCT)) * saisies.get('MIBNPDCT', 0)
DCTSPE = positif_ou_nul(BNRTOT + SPENETPF) * saisies.get('BNCPMVCTV', 0) + 1 - positif_ou_nul(BNRTOT + SPENETPF) * saisies.get('BNCPMVCTV', 0) - abs(BNRTOT + SPENETPF) + 1 - positif_ou_nul(BNRTOT + SPENETPF) * is_zero(saisies.get('BNCPMVCTV', 0) - abs(BNRTOT + SPENETPF)) * saisies.get('BNCPMVCTV', 0)
DISFDEC = ISFDEC
DLMRN1TXM = min(0, MIB_NETCT * 1 - is_positive(MIBNETPTOT) + SPENETCT * 1 - is_positive(SPENETPF))
DS024 = max(QF024 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF024 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF024 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF024 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF024 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
DS026 = max(QF026 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF026 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF026 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF026 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF026 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
EXFR = max(0, saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - RCMAB - RTCAR - RCMNAB)
EXSPB1 = EXTS1 + EXPR1
EXSPB2 = EXTS2 + EXPR2
EXSPB3 = EXTS3 + EXPR3
EXSPB4 = EXTS4 + EXPR4
EXSPBC = EXTSC + EXPRC
EXSPBV = EXTSV + EXPRV
GECUM = min(P2GE, BGEPAHA + BGTECH) + BTANTGECUM
GECUMWL = max(0, BGTECH + BGEPAHA - min(P2GE, BGEPAHA + BGTECH) + BTANTGECUMWL)
IND_APB1 = positif_ou_nul(PLR1 - EXPR1 * TX_DEDPER / 100)
IND_APB2 = positif_ou_nul(PLR2 - EXPR2 * TX_DEDPER / 100)
IND_APB3 = positif_ou_nul(PLR3 - EXPR3 * TX_DEDPER / 100)
IND_APB4 = positif_ou_nul(PLR4 - EXPR4 * TX_DEDPER / 100)
IND_APBC = positif_ou_nul(PLRC - EXPRC * TX_DEDPER / 100)
IND_APBV = positif_ou_nul(PLRV - EXPRV * TX_DEDPER / 100)
IND_REV = is_positive(IND_REV8FV + is_positive(saisies.get('REVFONC', 0)))
IS024 = round(DS024 * NB2)
IS026 = round(DS026 * NB2)
ISFBRUT = round(ISF1 - ISFDEC * is_positive(LIM_ISFDEC - 1 - saisies.get('ISFBASE', 0)) + ISF1 * 1 - is_positive(LIM_ISFDEC - 1 - saisies.get('ISFBASE', 0)))
LIG0 = 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * IND_REV
LIG0010 = INDV * INDC * INDP * 1 - ART1731BIS * LIG0 * LIG2
LIG0020 = INDV * 1 - INDC * 1 - INDP * 1 - ART1731BIS * LIG0 * LIG2
LIG0030 = INDC * 1 - INDV * 1 - INDP * 1 - ART1731BIS * LIG0 * LIG2
LIG0040 = INDP * 1 - INDV * 1 - INDC * 1 - ART1731BIS * LIG0 * LIG2
LIG0050 = INDV * INDC * 1 - INDP * 1 - ART1731BIS * LIG0 * LIG2
LIG0060 = INDV * INDP * 1 - INDC * 1 - ART1731BIS * LIG0 * LIG2
LIG0070 = INDC * INDP * 1 - INDV * 1 - ART1731BIS * LIG0 * LIG2
LIG01 = 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * IND_REV
LIG10YT = INDV * INDC * INDP * ART1731BIS * LIG0 * LIG2
LIG1100 = is_positive(T2RV) * 1 - is_positive(saisies.get('IPVLOC', 0))
LIG1130 = is_positive(present(saisies.get('REPSOF', 0))) * LIG0 * LIG2
LIG1430 = is_positive(BPTP3) * LIG0 * LIG2
LIG1431 = is_positive(BPTP18) * LIG0 * LIG2
LIG1432 = is_positive(BPTP19) * LIG0 * LIG2
LIG2051 = 1 - is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_positive(RECUMBIS)
LIG20YT = INDV * 1 - INDC * 1 - INDP * ART1731BIS * LIG0 * LIG2
LIG2501 = 1 - is_positive(IND_REV) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * LIG2
LIG25012 = 1 - is_positive(IND_REV) * is_zero(2 - saisies.get('V_REGCO', 0)) * LIG2
LIG2503 = 1 - is_positive(IND_REV) * 1 - positif_ou_nul(saisies.get('IND_TDR', 0)) * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0))
LIG29 = is_positive(present(saisies.get('RFORDI', 0)) + present(saisies.get('RFDHIS', 0)) + present(saisies.get('RFDANT', 0)) + present(saisies.get('RFDORD', 0))) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(LIG30) * LIG1 * LIG2 * IND_REV
LIG30YT = INDC * 1 - INDV * 1 - INDP * ART1731BIS * LIG0 * LIG2
LIG3700 = is_positive(LIG4271 + LIG3710 + LIG3720 + LIG3730) * LIG1 * TYPE4
LIG40YT = INDP * 1 - INDV * 1 - INDC * ART1731BIS * LIG0 * LIG2
LIG4401 = is_positive(saisies.get('V_FORVA', 0)) * 1 - positif_ou_nul(saisies.get('BAFV', 0)) * LIG0
LIG4402 = is_positive(saisies.get('V_FORCA', 0)) * 1 - positif_ou_nul(saisies.get('BAFC', 0)) * LIG0
LIG4403 = is_positive(saisies.get('V_FORPA', 0)) * 1 - positif_ou_nul(saisies.get('BAFP', 0)) * LIG0
LIG50YT = INDV * INDC * 1 - INDP * ART1731BIS * LIG0 * LIG2
LIG60YT = INDV * INDP * 1 - INDC * ART1731BIS * LIG0 * LIG2
LIG65 = is_positive(LIG52 + LIG58 + LIG585 + present(saisies.get('CHRFAC', 0)) + present(saisies.get('CHNFAC', 0)) + present(saisies.get('CHRDED', 0)) + present(DPERPV) + present(DPERPC) + present(DPERPP) + LIGREPAR) * LIG1 * LIG2
LIG70YT = INDC * INDP * 1 - INDV * ART1731BIS * LIG0 * LIG2
LIG815 = V_EAD * is_positive(BPTPD) * LIG0 * LIG2
LIG816 = V_EAG * is_positive(BPTPG) * LIG0 * LIG2
LIG910 = is_positive(present(saisies.get('RCMABD', 0)) + present(saisies.get('RCMTNC', 0)) + present(saisies.get('RCMAV', 0)) + present(saisies.get('RCMHAD', 0)) + present(saisies.get('RCMHAB', 0)) + present(saisies.get('REGPRIV', 0)) + 1 - present(BRCMQ) * present(saisies.get('RCMFR', 0))) * LIG0 * LIG2
LIGANNUL2042 = LIG2 * LIG0
LIGBNCMV = is_positive(saisies.get('BNCPMVCTV', 0) + saisies.get('BNCPMVCTC', 0) + saisies.get('BNCPMVCTP', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG0
LIGBPLIB = present(saisies.get('RCMLIB', 0)) * LIG0 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGCESDOM = is_positive(BPTPDIV) * is_positive(saisies.get('PVTAXSB', 0)) * is_positive(V_EAD + 0) * LIG0 * LIG2
LIGCESDOMG = is_positive(BPTPDIV) * is_positive(saisies.get('PVTAXSB', 0)) * is_positive(V_EAG + 0) * LIG0 * LIG2
LIGDAB = is_positive(present(saisies.get('DABNCNP6', 0)) + present(saisies.get('DABNCNP5', 0)) + present(saisies.get('DABNCNP4', 0)) + present(saisies.get('DABNCNP3', 0)) + present(saisies.get('DABNCNP2', 0)) + present(saisies.get('DABNCNP1', 0))) * LIG0 * LIG2
LIGF10P = is_positive(F10AP + F10BP) * LIG0 * LIG2
LIGISFBRUT = is_positive(ISFBRUT) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIGISF * 1 - is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(saisies.get('ISFDONF', 0) + saisies.get('ISFDONEURO', 0) + saisies.get('ISFPMEDI', 0) + saisies.get('ISFPMEIN', 0) + saisies.get('ISFFIP', 0) + saisies.get('ISFFCPI', 0)) + is_positive(ISFBRUT) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(present(saisies.get('ISFDONF', 0)) + present(saisies.get('ISFDONEURO', 0)) + present(saisies.get('ISFPMEDI', 0)) + present(saisies.get('ISFPMEIN', 0)) + present(saisies.get('ISFFIP', 0)) + present(saisies.get('ISFFCPI', 0)))
LIGISFIMPU = is_positive(DISFBASE) * is_positive(saisies.get('ISFETRANG', 0) + saisies.get('ISFPLAF', 0)) * 1 - is_positive(saisies.get('ISFDONF', 0) + saisies.get('ISFDONEURO', 0) + saisies.get('ISFPMEDI', 0) + saisies.get('ISFPMEIN', 0) + saisies.get('ISFFIP', 0) + saisies.get('ISFFCPI', 0)) * LIGISF * 1 - is_positive(saisies.get('ANNUL2042', 0)) * 1 - is_zero(5 - saisies.get('V_IND_TRAIT', 0)) + is_positive(DISFBASE) * is_positive(present(saisies.get('ISFETRANG', 0)) + present(saisies.get('ISFPLAF', 0))) * 1 - is_positive(saisies.get('ISFDONF', 0) + saisies.get('ISFDONEURO', 0) + saisies.get('ISFPMEDI', 0) + saisies.get('ISFPMEIN', 0) + saisies.get('ISFFIP', 0) + saisies.get('ISFFCPI', 0)) * LIGISF * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * 1 - is_positive(LIGISFRED + LIGISFREDPEN8)
LIGLOCNEUF = is_positive(REPINV) * LIG1
LIGLOCRES = is_positive(REPINVRES) * LIG1
LIGMIBMV = is_positive(saisies.get('BICPMVCTV', 0) + saisies.get('BICPMVCTC', 0) + saisies.get('BICPMVCTP', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG0
LIGMLOC = is_positive(present(saisies.get('MIBMEUV', 0)) + present(saisies.get('MIBMEUC', 0)) + present(saisies.get('MIBMEUP', 0)) + present(saisies.get('MIBGITEV', 0)) + present(saisies.get('MIBGITEC', 0)) + present(saisies.get('MIBGITEP', 0)) + present(saisies.get('LOCGITV', 0)) + present(saisies.get('LOCGITC', 0)) + present(saisies.get('LOCGITP', 0))) * LIG0 * LIG2
LIGNOCEP = present(NOCEPV) + present(NOCEPC) + present(NOCEPP) * LIG0 * LIG2
LIGNOCEPIMP = present(NOCEPIMPV) + present(NOCEPIMPC) + present(NOCEPIMPP) * LIG0 * LIG2
LIGNPLOC = is_positive(saisies.get('LOCNPCGAV', 0) + saisies.get('LOCNPCGAC', 0) + saisies.get('LOCNPCGAPAC', 0) + saisies.get('LOCDEFNPCGAV', 0) + saisies.get('LOCDEFNPCGAC', 0) + saisies.get('LOCDEFNPCGAPAC', 0) + saisies.get('LOCNPV', 0) + saisies.get('LOCNPC', 0) + saisies.get('LOCNPPAC', 0) + saisies.get('LOCDEFNPV', 0) + saisies.get('LOCDEFNPC', 0) + saisies.get('LOCDEFNPPAC', 0) + saisies.get('LOCGITCV', 0) + saisies.get('LOCGITCC', 0) + saisies.get('LOCGITCP', 0) + saisies.get('LOCGITHCV', 0) + saisies.get('LOCGITHCC', 0) + saisies.get('LOCGITHCP', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG0
LIGNPLOCF = is_positive(saisies.get('LOCNPCGAV', 0) + saisies.get('LOCNPCGAC', 0) + saisies.get('LOCNPCGAPAC', 0) + saisies.get('LOCDEFNPCGAV', 0) + saisies.get('LOCDEFNPCGAC', 0) + saisies.get('LOCDEFNPCGAPAC', 0) + saisies.get('LOCNPV', 0) + saisies.get('LOCNPC', 0) + saisies.get('LOCNPPAC', 0) + saisies.get('LOCDEFNPV', 0) + saisies.get('LOCDEFNPC', 0) + saisies.get('LOCDEFNPPAC', 0) + saisies.get('LNPRODEF10', 0) + saisies.get('LNPRODEF9', 0) + saisies.get('LNPRODEF8', 0) + saisies.get('LNPRODEF7', 0) + saisies.get('LNPRODEF6', 0) + saisies.get('LNPRODEF5', 0) + saisies.get('LNPRODEF4', 0) + saisies.get('LNPRODEF3', 0) + saisies.get('LNPRODEF2', 0) + saisies.get('LNPRODEF1', 0) + saisies.get('LOCGITCV', 0) + saisies.get('LOCGITCC', 0) + saisies.get('LOCGITCP', 0) + saisies.get('LOCGITHCV', 0) + saisies.get('LOCGITHCC', 0) + saisies.get('LOCGITHCP', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG0
LIGPLOC = is_positive(saisies.get('LOCPROCGAV', 0) + saisies.get('LOCPROCGAC', 0) + saisies.get('LOCPROCGAP', 0) + saisies.get('LOCDEFPROCGAV', 0) + saisies.get('LOCDEFPROCGAC', 0) + saisies.get('LOCDEFPROCGAP', 0) + saisies.get('LOCPROV', 0) + saisies.get('LOCPROC', 0) + saisies.get('LOCPROP', 0) + saisies.get('LOCDEFPROV', 0) + saisies.get('LOCDEFPROC', 0) + saisies.get('LOCDEFPROP', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG0
LIGPME = is_positive(REPINVPME3 + REPINVPME2 + REPINVPME1 + REPINVPMECU) * LIG1 * LIG2 * 1 - is_positive(V_CNR) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGPME1 = is_positive(REPINVPME1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGPME2 = is_positive(REPINVPME2) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGPME3 = is_positive(REPINVPME3) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGPMECU = is_positive(REPINVPMECU) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGPRELIB = is_positive(present(saisies.get('PPLIB', 0)) + present(saisies.get('RCMLIB', 0))) * LIG0 * LIG2
LIGRCEL = is_positive(RIVCEL1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRCEL2012 = is_positive(RIV2012CEL1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRCELCOM = is_positive(RIVCELCOM1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRCELHJK = is_positive(RIVCELHJK1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRCELHLM = is_positive(RIVCELHLM1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRCELHNO = is_positive(RIVCELHNO1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRCELJBGL = is_positive(RIVCELJBGL1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRCELJOQR = is_positive(RIVCELJOQR1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRCELJP = is_positive(RIVCELJP1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRCELNBGL = is_positive(RIVCELNBGL1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRCELNQ = is_positive(RIVCELNQ1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRCODJT = is_positive(saisies.get('LOCMEUBJT', 0) + 0) * is_positive(RCODJT1 + RCODJT2 + RCODJT3 + RCODJT4 + RCODJT5 + RCODJT6 + RCODJT7 + RCODJT8) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRCODJU = is_positive(saisies.get('LOCMEUBJU', 0) + 0) * is_positive(RCODJU1 + RCODJU2 + RCODJU3 + RCODJU4 + RCODJU5 + RCODJU6 + RCODJU7 + RCODJU8) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRDUFLOTOT = LIGRDUEKL + LIGRDUGIH
LIGREP7UA = is_positive(REPCIFAD) * LIG1 * LIG2
LIGREP7UB = is_positive(REPCIFADSIN) * LIG1 * LIG2
LIGREP7UP = is_positive(REPCIF) * LIG1 * LIG2
LIGREP7UT = is_positive(REPCIFSIN) * LIG1 * LIG2
LIGREPLOCIE = is_positive(saisies.get('LOCMEUBIE', 0)) * is_positive(REPLOCIE1 + REPLOCIE2 + REPLOCIE3 + REPLOCIE4 + REPLOCIE5 + REPLOCIE6 + REPLOCIE7 + REPLOCIE8) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGREPSIN = is_positive(REPSIN) * LIG1 * LIG2
LIGRNEUV = is_positive(saisies.get('MEUBLENP', 0)) * is_positive(RRESINEUV1 + RRESINEUV2 + RRESINEUV3 + RRESINEUV4 + RRESINEUV5 + RRESINEUV6 + RRESINEUV7 + RRESINEUV8) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRPINELTOT = LIGRPIQBD + LIGRPIQAC
LIGRSN = is_positive(RINVTPME12 + RINVTPME13 + RINVTPME14) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGRSN0 = is_positive(RINVTPME14) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGRSN1 = is_positive(RINVTPME13) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGRSN2 = is_positive(RINVTPME12) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGTITREXC = 1 - is_positive(EXOVOUS) * is_positive(EXOCJT) * 1 - is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
LIGTITREXCP = 1 - is_positive(EXOVOUS) * is_positive(EXOCJT) * is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
LIGTITREXP = 1 - is_positive(EXOVOUS) * 1 - is_positive(EXOCJT) * is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
LIGTITREXV = is_positive(EXOVOUS) * 1 - is_positive(EXOCJT) * 1 - is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
LIGTITREXVC = is_positive(EXOVOUS) * is_positive(EXOCJT) * 1 - is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
LIGTITREXVCP = is_positive(EXOVOUS) * is_positive(EXOCJT) * is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
LIGTITREXVP = is_positive(EXOVOUS) * 1 - is_positive(EXOCJT) * is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
LIGTXF225 = is_positive(saisies.get('PEA', 0) + 0) * LIG0 * LIG2
LIGTXF24 = is_positive(BPTP24) * LIG0 * LIG2
LIGTXF30 = positif_ou_nul(saisies.get('BPCOPTV', 0) + saisies.get('BPCOPTC', 0) + saisies.get('BPVSK', 0)) * LIG0 * LIG2
LIGTXF40 = is_positive(saisies.get('BPV40V', 0) + saisies.get('BPV40C', 0) + 0) * LIG0 * LIG2
LIGVIAN = is_positive(saisies.get('RESIVIANT', 0)) * is_positive(RESIVIAN1 + RESIVIAN2 + RESIVIAN3 + RESIVIAN4 + RESIVIAN5 + RESIVIAN6 + RESIVIAN7 + RESIVIAN8) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGVIEU = is_positive(saisies.get('RESIVIEU', 0)) * is_positive(RESIVIEU1 + RESIVIEU2 + RESIVIEU3 + RESIVIEU4 + RESIVIEU5 + RESIVIEU6 + RESIVIEU7 + RESIVIEU8) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIG_BICNPF = is_positive(present(saisies.get('BICDEC', 0)) + present(saisies.get('BICDEP', 0)) + present(saisies.get('BICDEV', 0)) + present(saisies.get('BICHDEC', 0)) + present(saisies.get('BICHDEP', 0)) + present(saisies.get('BICHDEV', 0)) + present(saisies.get('BICHREC', 0)) + present(saisies.get('BICHREP', 0)) + present(saisies.get('BICHREV', 0)) + present(saisies.get('BICREC', 0)) + present(saisies.get('BICREP', 0)) + present(saisies.get('BICREV', 0)) + present(saisies.get('DEFBIC6', 0)) + present(saisies.get('DEFBIC5', 0)) + present(saisies.get('DEFBIC4', 0)) + present(saisies.get('DEFBIC3', 0)) + present(saisies.get('DEFBIC2', 0)) + present(saisies.get('DEFBIC1', 0))) * LIG0 * LIG2
LIG_BICPC = present(saisies.get('BICNOC', 0)) + present(saisies.get('BICDNC', 0)) + present(saisies.get('BIHNOC', 0)) + present(saisies.get('BIHDNC', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG0
LIG_BICPP = present(saisies.get('BICNOP', 0)) + present(saisies.get('BICDNP', 0)) + present(saisies.get('BIHNOP', 0)) + present(saisies.get('BIHDNP', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG0
LIG_BICPV = present(saisies.get('BICNOV', 0)) + present(saisies.get('BICDNV', 0)) + present(saisies.get('BIHNOV', 0)) + present(saisies.get('BIHDNV', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG0
LIG_DEFNPI = is_positive(present(saisies.get('DEFBIC6', 0)) + present(saisies.get('DEFBIC5', 0)) + present(saisies.get('DEFBIC4', 0)) + present(saisies.get('DEFBIC3', 0)) + present(saisies.get('DEFBIC2', 0)) + present(saisies.get('DEFBIC1', 0))) * LIG0 * LIG2
LIG_GATASA = positif_ou_nul(saisies.get('BPCOSAV', 0) + saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATV', 0) + saisies.get('GLDGRATC', 0)) * LIG0 * LIG2
LIG_REVASS = positif_ou_nul(saisies.get('ALLOV', 0) + saisies.get('ALLOC', 0) + ALLOP) * positif_ou_nul(saisies.get('TSHALLOV', 0) + saisies.get('TSHALLOC', 0) + TSHALLOP) * LIG0 * LIG2
LIG_SAL = positif_ou_nul(saisies.get('TSHALLOV', 0) + saisies.get('TSHALLOC', 0) + TSHALLOP) * positif_ou_nul(saisies.get('ALLOV', 0) + saisies.get('ALLOC', 0) + ALLOP) * LIG0 * LIG2
MAJTXREGV1 = 1 - is_positive(saisies.get('V_NBCOD1728REGV', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJREGV1) * TXPF1728REGV + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728REGV', 0)) * -1
MIB_ABPC = max(0, round(MIB_APC * saisies.get('MIBPRESC', 0) / MIB_TPRESC))
MIB_ABPP = max(0, round(MIB_APP * saisies.get('MIBPRESP', 0) / MIB_TPRESP))
MIB_ABPV = max(0, round(MIB_APV * saisies.get('MIBPRESV', 0) / MIB_TPRESV))
MIB_ABVC = max(0, round(MIB_AVC * saisies.get('MIBVENC', 0) / MIB_TVENC))
MIB_ABVP = max(0, round(MIB_AVP * saisies.get('MIBVENP', 0) / MIB_TVENP))
MIB_ABVV = max(0, round(MIB_AVV * saisies.get('MIBVENV', 0) / MIB_TVENV))
MIB_NETPC = saisies.get('MIBPRESC', 0) - MIB_ABPC
MIB_NETPP = saisies.get('MIBPRESP', 0) - MIB_ABPP
MIB_NETPV = saisies.get('MIBPRESV', 0) - MIB_ABPV
MIB_NETVC = saisies.get('MIBVENC', 0) - MIB_ABVC
MIB_NETVP = saisies.get('MIBVENP', 0) - MIB_ABVP
MIB_NETVV = saisies.get('MIBVENV', 0) - MIB_ABVV
NBPT = NSM + NPA + NIN + NSP + NBQAR * 10 / 10
NOCEPIMP = NOCEPIMPV + NOCEPIMPC + NOCEPIMPP
NPLOCCGANSC = NPLOCCGAC - NPLOCCGASC
NPLOCCGANSP = NPLOCCGAPAC - NPLOCCGASP
NPLOCCGASV = round(NPLOCCGAV * saisies.get('LOCNPCGAV', 0) / saisies.get('LOCNPCGAV', 0) + saisies.get('LOCGITCV', 0)) * present(saisies.get('LOCNPCGAV', 0)) + min(0, NPLOCCGAV) * 1 - present(saisies.get('LOCNPCGAV', 0))
NPLOCNETPAC = NPLOCCGAPAC + NPLOCPAC
NPLOCNETV = NPLOCCGAV + NPLOCV
NPLOCNSC = NPLOCC - NPLOCSC
NPLOCNSP = NPLOCPAC - NPLOCSP
NPLOCSV = round(NPLOCV * saisies.get('LOCNPV', 0) / saisies.get('LOCNPV', 0) + saisies.get('LOCGITHCV', 0)) * is_positive(saisies.get('LOCNPV', 0)) + min(0, NPLOCV) * 1 - is_positive(saisies.get('LOCNPV', 0))
P10MINSC = max(min(PERPSALC, PDEDMINC), PDFNC)
P10MINSV = max(min(PERPSALV, PDEDMINV), PDFNV)
PD10MC = PIND_MINC * PDFNC + 1 - PIND_MINC * P10MINSC
PD10MV = PIND_MINV * PDFNV + 1 - PIND_MINV * P10MINSV
PDFNP = min(PLAF_DEDFORFTS, PTPS10P)
PIND_10MIN_0P = is_positive(PDEDMINP - PDFNP) * is_positive(PERPSALP)
PIND_MINP = 1 - is_positive(PIND_10MIN_0P)
PLAF1GM = is_positive(is_zero(6 - saisies.get('V_REGCO', 0)) + is_zero(7 - saisies.get('V_REGCO', 0))) * round(31843 + 3082 * min(NBPT - 1 * 4, 4) * is_positive(NBPT - 1) + 2624.5 * min(NBPT - 2 * 4, 2) * is_positive(NBPT - 2) + 2210.5 * NBPT - 2.5 * 4 * is_positive(NBPT - 2.5))
PLAF1M = is_zero(1 - saisies.get('V_REGCO', 0)) * round(24043 + 2808.5 * min(NBPT - 1 * 4, 2) * is_positive(NBPT - 1) + 2210.5 * NBPT - 1.5 * 4 * is_positive(NBPT - 1.5))
PLAF1MGR = is_zero(5 - saisies.get('V_REGCO', 0)) * round(29058 + 3082 * min(NBPT - 1 * 4, 2) * is_positive(NBPT - 1) + 2938.5 * min(NBPT - 1.5 * 4, 2) * is_positive(NBPT - 1.5) + 2210.5 * NBPT - 2 * 4 * is_positive(NBPT - 2))
PLAF2GM = is_positive(is_zero(6 - saisies.get('V_REGCO', 0)) + is_zero(7 - saisies.get('V_REGCO', 0))) * round(33117 + 3205.5 * min(NBPT - 1 * 4, 4) * is_positive(NBPT - 1) + 2729.5 * min(NBPT - 2 * 4, 2) * is_positive(NBPT - 2) + 2299 * NBPT - 2.5 * 4 * is_positive(NBPT - 2.5))
PLAF2M = is_zero(1 - saisies.get('V_REGCO', 0)) * round(25005 + 2921 * min(NBPT - 1 * 4, 2) * is_positive(NBPT - 1) + 2299 * NBPT - 1.5 * 4 * is_positive(NBPT - 1.5))
PLAF2MGR = is_zero(5 - saisies.get('V_REGCO', 0)) * round(30220 + 3205.5 * min(NBPT - 1 * 4, 2) * is_positive(NBPT - 1) + 3056 * min(NBPT - 1.5 * 4, 2) * is_positive(NBPT - 1.5) + 2299 * NBPT - 2 * 4 * is_positive(NBPT - 2))
PLAFRED_FORTRA = max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR)
PLANT = PLAQAR + PLAF_DEMIPART * 2 * NBPT - NBQAR - 1 - BOOL_0AM - BOOL_0AZ * saisies.get('V_0AV', 0) - 2 * PLAF_DEMIPART - PLAF_COMPPART * 2 * NPS * saisies.get('V_0AC', 0) + saisies.get('V_0AD', 0) + saisies.get('V_0AV', 0) * 1 - is_positive(saisies.get('V_0BT', 0)) * min(1, EAC) - PLAF_DEMIPART - PLAFCDPART * 1 - BOOL_0AM * 2 * NSA * 1 - is_positive(saisies.get('V_0AW', 0)) * positif_ou_nul(AGV - LIM_AGE_LET_S) * 1 - saisies.get('V_0AG', 0)
PLOCNETPAC = PLOCCGAPAC + PLOCPAC
PLOCNETV = PLOCCGAV + PLOCV
PPESEUILKIR = PPE_BOOL_SIFC * PPELIMC + PPE_BOOL_SIFM * PPELIMM + NBPT - 1 - PPE_BOOL_SIFM - NBQAR * 2 * PPELIMPAC + NBQAR * PPELIMPAC * 2
PPE_BOOL_MIN1 = positif_ou_nul(PPE_RTA1 - PPELIMRPB) * 1 - PPE_BOOL_NADA1
PPE_BOOL_MIN2 = positif_ou_nul(PPE_RTA2 - PPELIMRPB) * 1 - PPE_BOOL_NADA2
PPE_BOOL_MIN3 = positif_ou_nul(PPE_RTA3 - PPELIMRPB) * 1 - PPE_BOOL_NADA3
PPE_BOOL_MIN4 = positif_ou_nul(PPE_RTA4 - PPELIMRPB) * 1 - PPE_BOOL_NADA4
PPE_DEBJJ = inf(PPE_DEBJJMM / 100)
PPE_DEBMM = PPE_DEBJJMM - PPE_DEBJJ * 100
PPE_DEBRANG = PPE_DEBJJ + PPE_DEBMM - 1 * 30
PPE_DEBUT = PPE_DEBRANG
PPE_FINJJ = inf(PPE_FINJJMM / 100)
PPE_FINMM = PPE_FINJJMM - PPE_FINJJ * 100
PPE_FINRANG = PPE_FINJJ + PPE_FINMM - 1 * 30 - 1 * is_positive(PPE_DATE_FIN)
PS_RVT = CS_RVT
PVBAR3VA = is_positive(CSGDED) * round(CSGDED * 100 / TX051)
QF025 = round(RB05) / NB2
QUOHPV = sum([TSQVO + PRQVO, TSQCJ + PRQCJ, TSQPC + PRQPC]) + PALIQV + PALIQC + PALIQP + BAQV + BAQC + BAQP + BRCMQ + RFQ + sum([saisies.get('GLD1V', 0), saisies.get('GLD1C', 0), saisies.get('GLD2V', 0), saisies.get('GLD2C', 0), saisies.get('GLD3V', 0), saisies.get('GLD3C', 0)])
RCMEXCREF = max(0, TRCMRABD + TRCMRTNC) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)))
RDOMSOC1 = RDOMSOC1_1 * 1 - ART1731BIS + min(RDOMSOC1_1, max(RDOMSOC1_P + RDOMSOC1P2, RDOMSOC11731 + 0) * 1 - PREM8_11) * ART1731BIS
RDRCM1BIS = 1 - is_positive(RDRCM1) * RDRCM1NEGPLAF * -1 + positif_ou_nul(RDRCM1) * RDRCM1
RDRCM1BISAPS = 1 - is_positive(RDRCM1APS) * RDRCM1NEGPLAFAPS * -1 + positif_ou_nul(RDRCM1APS) * RDRCM1APS
RDRCMAPS = RDRCM1BISAPS + saisies.get('COD2FA', 0)
RDRFPS = max(0, RFCFPS + saisies.get('RFMIC', 0) - MICFR - saisies.get('RFDANT', 0)) * 1 - is_positive(ART1731BIS) + max(0, RRFI + REVRF + DEFRF4BC) * is_positive(ART1731BIS)
RD_RVT = CS_RVT
REDTL = ASURV + ACOMP
REPCEL = sum([RIVCEL1, RIVCEL2, RIVCEL3, RIVCEL4, RIVCEL5, RIVCEL6, RIVCEL7]) + RIVCEL8
REPCEL2012 = sum([RIV2012CEL1, RIV2012CEL2, RIV2012CEL3, RIV2012CEL4, RIV2012CEL5, RIV2012CEL6, RIV2012CEL7]) + RIV2012CEL8
REPCELCOM = sum([RIVCELCOM1, RIVCELCOM2, RIVCELCOM3]) + RIVCELCOM4
REPCELFABC = 7 * RIVCELFABC1 + RIVCELFABC8
REPCELHJK = sum([RIVCELHJK1, RIVCELHJK2, RIVCELHJK3, RIVCELHJK4, RIVCELHJK5, RIVCELHJK6, RIVCELHJK7]) + RIVCELHJK8
REPCELHLM = sum([RIVCELHLM1, RIVCELHLM2, RIVCELHLM3, RIVCELHLM4, RIVCELHLM5, RIVCELHLM6, RIVCELHLM7]) + RIVCELHLM8
REPCELHNO = sum([RIVCELHNO1, RIVCELHNO2, RIVCELHNO3, RIVCELHNO4, RIVCELHNO5, RIVCELHNO6, RIVCELHNO7]) + RIVCELHNO8
REPCELJBGL = sum([RIVCELJBGL1, RIVCELJBGL2, RIVCELJBGL3, RIVCELJBGL4, RIVCELJBGL5, RIVCELJBGL6, RIVCELJBGL7]) + RIVCELJBGL8
REPCELJOQR = sum([RIVCELJOQR1, RIVCELJOQR2, RIVCELJOQR3]) + RIVCELJOQR4
REPCELJP = sum([RIVCELJP1, RIVCELJP2, RIVCELJP3]) + RIVCELJP4
REPCELNBGL = sum([RIVCELNBGL1, RIVCELNBGL2, RIVCELNBGL3, RIVCELNBGL4, RIVCELNBGL5, RIVCELNBGL6, RIVCELNBGL7]) + RIVCELNBGL8
REPCELNQ = sum([RIVCELNQ1, RIVCELNQ2, RIVCELNQ3]) + RIVCELNQ4
REPEST = positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD + saisies.get('REPSINFOR1', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR2', 0) + saisies.get('REPFOR2', 0) + saisies.get('REPSINFOR3', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * saisies.get('REPFOR3', 0) + 1 - positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD + saisies.get('REPSINFOR1', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR2', 0) + saisies.get('REPFOR2', 0) + saisies.get('REPSINFOR3', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, saisies.get('REPFOR3', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - saisies.get('REPSINFOR', 0) - VARD - saisies.get('REPSINFOR1', 0) - saisies.get('REPFOR1', 0) - saisies.get('REPSINFOR2', 0) - saisies.get('REPFOR2', 0) - saisies.get('REPSINFOR3', 0))) * 1 - V_CNR
REPFOREST2 = positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD + saisies.get('REPSINFOR1', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * saisies.get('REPFOR1', 0) + 1 - positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD + saisies.get('REPSINFOR1', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, saisies.get('REPFOR1', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - saisies.get('REPSINFOR', 0) - VARD - saisies.get('REPSINFOR1', 0))) * 1 - V_CNR
REPFOREST3 = positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD + saisies.get('REPSINFOR1', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR2', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * saisies.get('REPFOR2', 0) + 1 - positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD + saisies.get('REPSINFOR1', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR2', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, saisies.get('REPFOR2', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - saisies.get('REPSINFOR', 0) - VARD - saisies.get('REPSINFOR1', 0) - saisies.get('REPFOR1', 0) - saisies.get('REPSINFOR2', 0))) * 1 - V_CNR
REPFORSIN = positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * saisies.get('REPSINFOR1', 0) + 1 - positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, saisies.get('REPSINFOR1', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - saisies.get('REPSINFOR', 0) - VARD)) * 1 - V_CNR
REPFORSIN2 = positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD + saisies.get('REPSINFOR1', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * saisies.get('REPSINFOR2', 0) + 1 - positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD + saisies.get('REPSINFOR1', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, saisies.get('REPSINFOR2', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - saisies.get('REPSINFOR', 0) - VARD - saisies.get('REPSINFOR1', 0) - saisies.get('REPFOR1', 0))) * 1 - V_CNR
REPFORSIN3 = positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD + saisies.get('REPSINFOR1', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR2', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * saisies.get('REPSINFOR3', 0) + 1 - positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD + saisies.get('REPSINFOR1', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR2', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, saisies.get('REPSINFOR3', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - saisies.get('REPSINFOR', 0) - VARD - saisies.get('REPSINFOR1', 0) - saisies.get('REPFOR1', 0) - saisies.get('REPSINFOR2', 0))) * 1 - V_CNR
REPFORTOT = REPFOREST2 + REPFOREST3 + REPEST
REPINVIAN = RESIVIAN1 + RESIVIAN2 + RESIVIAN3 + RESIVIAN4 + RESIVIAN5 + RESIVIAN6 + RESIVIAN7 + RESIVIAN8
REPINVIEU = RESIVIEU1 + RESIVIEU2 + RESIVIEU3 + RESIVIEU4 + RESIVIEU5 + RESIVIEU6 + RESIVIEU7 + RESIVIEU8
REPINVMEUBLE = RRESINEUV1 + RRESINEUV2 + RRESINEUV3 + RRESINEUV4 + RRESINEUV5 + RRESINEUV6 + RRESINEUV7 + RRESINEUV8
REPLOCIE = REPLOCIE1 + REPLOCIE2 + REPLOCIE3 + REPLOCIE4 + REPLOCIE5 + REPLOCIE6 + REPLOCIE7 + REPLOCIE8
REPNIS = positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD + saisies.get('REPSINFOR1', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR2', 0) + saisies.get('REPFOR2', 0) + saisies.get('REPSINFOR3', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * saisies.get('REPSINFOR4', 0) + 1 - positif_ou_nul(saisies.get('REPSINFOR', 0) + VARD + saisies.get('REPSINFOR1', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR2', 0) + saisies.get('REPFOR2', 0) + saisies.get('REPSINFOR3', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, saisies.get('REPSINFOR4', 0) - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - saisies.get('REPSINFOR', 0) - VARD - saisies.get('REPSINFOR1', 0) - saisies.get('REPFOR1', 0) - saisies.get('REPSINFOR2', 0) - saisies.get('REPFOR2', 0) - saisies.get('REPSINFOR3', 0))) * 1 - V_CNR
RESINEUV1 = round(round(ACODIN / 9) * TX20 / 100) + round(round(ACODIJ / 9) * TX18 / 100) + round(round(ACODIV / 9) * TX18 / 100)
RESINEUV2 = round(round(ACODIN / 9) * TX20 / 100) + round(round(ACODIJ / 9) * TX18 / 100) + round(round(ACODIV / 9) * TX18 / 100)
RESINEUV3 = round(round(ACODIN / 9) * TX20 / 100) + round(round(ACODIJ / 9) * TX18 / 100) + round(round(ACODIV / 9) * TX18 / 100)
RESINEUV4 = round(round(ACODIN / 9) * TX20 / 100) + round(round(ACODIJ / 9) * TX18 / 100) + round(round(ACODIV / 9) * TX18 / 100)
RESINEUV5 = round(round(ACODIN / 9) * TX20 / 100) + round(round(ACODIJ / 9) * TX18 / 100) + round(round(ACODIV / 9) * TX18 / 100)
RESINEUV6 = round(round(ACODIN / 9) * TX20 / 100) + round(round(ACODIJ / 9) * TX18 / 100) + round(round(ACODIV / 9) * TX18 / 100)
RESINEUV7 = round(round(ACODIN / 9) * TX20 / 100) + round(round(ACODIJ / 9) * TX18 / 100) + round(round(ACODIV / 9) * TX18 / 100)
RESINEUV8 = round(ACODIN * TX20 / 100) + round(ACODIJ * TX18 / 100) + round(ACODIV * TX18 / 100) - RESINEUV1 - RESINEUV2 - RESINEUV3 - RESINEUV4 - RESINEUV5 - RESINEUV6 - RESINEUV7 - RESINEUV7
RESTIMOA = min(saisies.get('RESTIMOPPAU', 0), LIM_RESTIMO - RESTIMOD - RESTIMOB - RESTIMOC - RESTIMOF - RESTIMOY)
RESTIMOE = min(saisies.get('RIMOPPAURE', 0), LIM_RESTIMO - RESTIMOD - RESTIMOB - RESTIMOC - RESTIMOF - RESTIMOY - RESTIMOA)
RESTIMOX = min(saisies.get('COD7SX', 0), LIM_RESTIMO - RESTIMOD - RESTIMOB - RESTIMOC - RESTIMOF - RESTIMOY - RESTIMOA - RESTIMOE)
RETCODID = round(round(ACODID / 9) * TX11 / 100)
RETCODIG = round(round(ACODIG / 9) * TX11 / 100)
RETCODIJ = round(round(ACODIJ / 9) * TX18 / 100)
RETCODIV = round(round(ACODIV / 9) * TX18 / 100)
RETLOCIDEFG = round(round(ACODIE / 9) * TX18 / 100) + round(round(ACODIF / 9) * TX18 / 100) + round(round(ACODID / 9) * TX11 / 100) + round(round(ACODIG / 9) * TX11 / 100) * 1 - ART1731BIS + min(ALOCIDEFG_1, ALOCIDEFG1731 + 0) * ART1731BIS
RETLOCIDEFG_1 = round(round(ACODIE / 9) * TX18 / 100) + round(round(ACODIF / 9) * TX18 / 100) + round(round(ACODID / 9) * TX11 / 100) + round(round(ACODIG / 9) * TX11 / 100)
RETRESIMEUB = round(ARESIMEUB * TX25 / 100)
RETRESINEUV = round(round(ACODIL / 9) * TX20 / 100) + round(round(ACODIN / 9) * TX20 / 100) + round(round(ACODIJ / 9) * TX18 / 100) + round(round(ACODIV / 9) * TX18 / 100) * 1 - ART1731BIS + min(ARESINEUV_1, ARESINEUV1731 + 0) * ART1731BIS
RETRESINEUV_1 = round(round(ACODIL / 9) * TX20 / 100) + round(round(ACODIN / 9) * TX20 / 100) + round(round(ACODIJ / 9) * TX18 / 100) + round(round(ACODIV / 9) * TX18 / 100)
RETRESTIMO = round(RESTIMOD * TX40 / 100 + RESTIMOB * TX36 / 100 + RESTIMOC * TX30 / 100 + RESTIMOA * TX_RESTIMO1 / 100 + RESTIMOE * TX22 / 100 + RESTIMOF * TX30 / 100 + RESTIMOY * TX30 / 100 + RESTIMOX * TX22 / 100) * 1 - V_CNR
RETX = TXINT
RETXISF = is_positive(saisies.get('CMAJ_ISF', 0)) * TXINTISF + TXINRISF * 1 - is_positive(TXINRISF_A) + -1 * is_positive(TXINRISF_A) * is_positive(TXINRISF) * is_positive(is_positive(TXINRISF - TXINRISF_A) + is_positive(TXINRISF_A - TXINRISF)) + TXINRISF * is_positive(TXINRISF_A) * is_zero(TXINRISF - TXINRISF_A)
REVRVO = T2RV
RFNTEO = saisies.get('RFORDI', 0) + saisies.get('RFROBOR', 0) - min(min(saisies.get('RFDORD', 0), RFDORD1731 + 0) * is_positive(ART1731BIS) + saisies.get('RFDORD', 0) * 1 - ART1731BIS + min(saisies.get('RFDANT', 0), RFDANT1731 + 0) * is_positive(ART1731BIS) + saisies.get('RFDANT', 0) * 1 - ART1731BIS, saisies.get('RFORDI', 0) + saisies.get('RFROBOR', 0)) - saisies.get('RFDHIS', 0) * 1 - ART1731BIS * present(saisies.get('RFROBOR', 0)) + RRFI * 1 - present(saisies.get('RFROBOR', 0))
RFOREST1 = min(saisies.get('REPFOR', 0) + saisies.get('REPSINFOR', 0) + saisies.get('REPSINFOR1', 0), max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR))
RFOREST2 = min(saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR2', 0), max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR - RFOREST1))
RFOREST3 = min(saisies.get('REPFOR2', 0) + saisies.get('REPSINFOR3', 0) + saisies.get('REPFOR3', 0) + saisies.get('REPSINFOR4', 0), max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR - RFOREST1 - RFOREST2))
RGTECH = BGTECH * TX40 / 100 * 1 - V_CNR
RISFDONF = max(min(RISFDONF_2, ISFBRUT), 0) * is_positive(1 - is_zero(saisies.get('CODE_2042', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 34)) + max(min(RISFDONF_2, ISFBRUT), 0) * 1 - is_positive(1 - is_zero(saisies.get('CODE_2042', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 34)) * saisies.get('COD9ZA', 0)
RLOCENT = RLOCENT_1 * 1 - ART1731BIS + min(RLOCENT_1, max(RLOCENT_P + RLOCENTP2, RLOCENT1731 + 0) * 1 - PREM8_11) * ART1731BIS
RLOCIDFG1 = round(round(ACODID / 9) * TX11 / 100) + round(round(ACODIF / 9) * TX18 / 100) + round(round(ACODIG / 9) * TX11 / 100)
RLOCIDFG2 = round(round(ACODID / 9) * TX11 / 100) + round(round(ACODIF / 9) * TX18 / 100) + round(round(ACODIG / 9) * TX11 / 100)
RLOCIDFG3 = round(round(ACODID / 9) * TX11 / 100) + round(round(ACODIF / 9) * TX18 / 100) + round(round(ACODIG / 9) * TX11 / 100)
RLOCIDFG4 = round(round(ACODID / 9) * TX11 / 100) + round(round(ACODIF / 9) * TX18 / 100) + round(round(ACODIG / 9) * TX11 / 100)
RLOCIDFG5 = round(round(ACODID / 9) * TX11 / 100) + round(round(ACODIF / 9) * TX18 / 100) + round(round(ACODIG / 9) * TX11 / 100)
RLOCIDFG6 = round(round(ACODID / 9) * TX11 / 100) + round(round(ACODIF / 9) * TX18 / 100) + round(round(ACODIG / 9) * TX11 / 100)
RLOCIDFG7 = round(round(ACODID / 9) * TX11 / 100) + round(round(ACODIF / 9) * TX18 / 100) + round(round(ACODIG / 9) * TX11 / 100)
RLOCIDFG8 = round(ACODID * TX11 / 100) + round(ACODIF * TX18 / 100) + round(ACODIG * TX11 / 100) - RLOCIDFG1 - RLOCIDFG2 - RLOCIDFG3 - RLOCIDFG4 - RLOCIDFG5 - RLOCIDFG6 - RLOCIDFG7 - RLOCIDFG7
RNIBAR13 = 13465 * is_positive(is_positive(saisies.get('V_ANREV', 0) - saisies.get('V_0DA', 0) - 65) + is_positive(saisies.get('V_0AP', 0) + 0)) + 12353 * 1 - is_positive(is_positive(saisies.get('V_ANREV', 0) - saisies.get('V_0DA', 0) - 65) + is_positive(saisies.get('V_0AP', 0) + 0)) * is_zero(NBPT - 1) + 14414 * is_zero(NBPT - 1.25) + 15917 * is_zero(NBPT - 1.5) + 17420 * is_zero(NBPT - 1.75) + 18922 * is_zero(NBPT - 2) + 20425 * is_zero(NBPT - 2.25) + 21928 * is_zero(NBPT - 2.5) + 23581 * is_positive(is_positive(saisies.get('V_ANREV', 0) - saisies.get('V_0DA', 0) - 65) + is_positive(saisies.get('V_0AP', 0) + 0)) * 1 - BOOL_0AM + 23431 * 1 - is_positive(is_positive(saisies.get('V_ANREV', 0) - saisies.get('V_0DA', 0) - 65) + is_positive(saisies.get('V_0AP', 0) + 0)) * is_zero(NBPT - 2.75) + 24933 * is_zero(NBPT - 3) + 26436 * is_zero(NBPT - 3.25) + 27939 * is_zero(NBPT - 3.5) + 29442 * is_zero(NBPT - 3.75) + 30944 * is_zero(NBPT - 4) + 32447 * is_zero(NBPT - 4.25) + 33950 * is_zero(NBPT - 4.5) + 35453 * is_zero(NBPT - 4.75) + 36955 * is_zero(NBPT - 5) + 38458 * is_zero(NBPT - 5.25) + 39961 * is_zero(NBPT - 5.5) + 41464 * is_zero(NBPT - 5.75) + 42966 * is_zero(NBPT - 6) + 44470 * is_zero(NBPT - 6.25) + 45980 * is_zero(NBPT - 6.5) + 47476 * is_zero(NBPT - 6.75) + 48980 * is_zero(NBPT - 7) + 50480 * is_zero(NBPT - 7.25) + 51985 * is_zero(NBPT - 7.5) + 53487 * is_zero(NBPT - 7.75) + 54990 * is_zero(NBPT - 8) + 56493 * is_zero(NBPT - 8.25) + 57995 * is_zero(NBPT - 8.5) + 59497 * is_zero(NBPT - 8.75) + 61000 * is_zero(NBPT - 9) + 62504 * is_zero(NBPT - 9.25) + 64005 * is_zero(NBPT - 9.5) + 65515 * is_zero(NBPT - 9.75) + 67010 * is_zero(NBPT - 10)
RRFTEO = RFNTEO
RSE1AC = max(0, RSE1 - CIRSE1)
RSE1N = max(0, RSE1 - CIRSE1)
RSE2BASE = max(0, RSE8TV - CIRSE8TV - saisies.get('CSPROVYF', 0)) + max(0, RSE8SA - CIRSE8SA - saisies.get('CSPROVYN', 0))
RSE3AC = max(0, RSE3 - CIRSE3)
RSE3N = max(0, RSE3 - CIRSE3)
RSE4BASE = max(0, RSE8TX - CIRSE8TX - saisies.get('CSPROVYH', 0)) + max(0, RSE8SB - CIRSE8SB - saisies.get('CSPROVYP', 0))
RSE5AC = max(0, RSE5 - CIRSE5)
RSE5N = max(0, RSE5 - CIRSE5)
RSN = round(RSN_CL + RSN_CM + RSN_CN + RSN_CC + RSN_CU + RSN_CQ + RSN_CR + RSN_CF) * 1 - V_CNR
RTNC = RCMRNTNC + _2RCMRNTNC
SEUILCIIMSI = round(13956 + 3726 * NBPT - 1 * 2 * 1 - is_zero(saisies.get('V_REGCO', 0) - 5) * 1 - is_zero(saisies.get('V_REGCO', 0) - 6) * 1 - is_zero(saisies.get('V_REGCO', 0) - 7) + 15268 + 4098 * min(NBPT, 1.5) - 1 * 2 + 3726 * max(0, NBPT - 1.5) * 2 * is_zero(saisies.get('V_REGCO', 0) - 5) + 15994 + 4285 * min(NBPT, 1.5) - 1 * 2 + 3726 * max(0, NBPT - 1.5) * 2 * is_positive(is_zero(saisies.get('V_REGCO', 0) - 6) + is_zero(saisies.get('V_REGCO', 0) - 7)))
SEUILCIRIRF = round(10676 + 2850 * NBPT - 1 * 2 * 1 - is_zero(saisies.get('V_REGCO', 0) - 5) * 1 - is_zero(saisies.get('V_REGCO', 0) - 6) * 1 - is_zero(saisies.get('V_REGCO', 0) - 7) + 12632 + 3135 * min(NBPT, 1.5) - 1 * 2 + 2850 * max(0, NBPT - 1.5) * 2 * is_zero(saisies.get('V_REGCO', 0) - 5) + 13209 + 3278 * min(NBPT, 1.5) - 1 * 2 + 2850 * max(0, NBPT - 1.5) * 2 * is_positive(is_zero(saisies.get('V_REGCO', 0) - 6) + is_zero(saisies.get('V_REGCO', 0) - 7)))
SFCD1 = 15 * is_positive(saisies.get('V_0AN', 0) + 0) * 1 - is_positive(saisies.get('V_0AP', 0) + 0) * 1 - is_positive(saisies.get('V_0AG', 0) + 0) * 1 - BOOL_W + 2 * is_positive(saisies.get('V_0AP', 0) + 0) * 1 - is_positive(saisies.get('V_0AL', 0) + 0) + 14 * is_positive(saisies.get('V_0AG', 0) + 0) * 1 - is_positive(saisies.get('V_0AP', 0) + 0) * 1 - BOOL_W + 7 * BOOL_W * 1 - is_positive(saisies.get('V_0AP', 0) + 0) * 1 - is_positive(saisies.get('V_0AL', 0) + 0) * BOOL_CDV * BOOL_PACSFL
SFL = is_positive(saisies.get('V_0AL', 0) + 0) * BOOL_CDV * BOOL_PACSFL * 2 * is_positive(saisies.get('V_0AP', 0) + 0) + 9 * 1 - BOOL_W * is_positive(1 - saisies.get('V_0AP', 0) + 0) * is_positive(1 - saisies.get('V_0AG', 0) + 0) * is_positive(1 - saisies.get('V_0AN', 0) + 0) + 7 * BOOL_W * is_positive(1 - saisies.get('V_0AP', 0) + 0) + 15 * is_positive(saisies.get('V_0AN', 0) + 0) * 1 - BOOL_W * is_positive(1 - saisies.get('V_0AG', 0) + 0) * is_positive(1 - saisies.get('V_0AP', 0) + 0) + 14 * is_positive(saisies.get('V_0AG', 0) + 0) * 1 - BOOL_W * is_positive(1 - saisies.get('V_0AP', 0) + 0)
SFUTILE = SFM + SFCD1 + SFCD2 + SFV1 + SFV2 + SFL
SPEABC = round(max(MIN_SPEBNC, SPEBASABC * SPETXAB / 100) * positif_ou_nul(SPETOTC - MIN_SPEBNC)) + round(min(MIN_SPEBNC, SPEBASABC) * is_positive(MIN_SPEBNC - SPETOTC))
SPEABP = round(max(MIN_SPEBNC, SPEBASABP * SPETXAB / 100) * positif_ou_nul(SPETOTP - MIN_SPEBNC)) + round(min(MIN_SPEBNC, SPEBASABP) * is_positive(MIN_SPEBNC - SPETOTP))
SPEABPC = round(SPEABC * saisies.get('BNCPROC', 0) / SPETOTC)
SPEABPP = round(SPEABP * saisies.get('BNCPROP', 0) / SPETOTP)
SPEABV = round(max(MIN_SPEBNC, SPEBASABV * SPETXAB / 100) * positif_ou_nul(SPETOTV - MIN_SPEBNC)) + round(min(MIN_SPEBNC, SPEBASABV) * is_positive(MIN_SPEBNC - SPETOTV))
SPENETPC = max(0, saisies.get('BNCPROC', 0) - SPEABPC)
SPENETPP = max(0, saisies.get('BNCPROP', 0) - SPEABPP)
TAPB1 = max(TPLR1, TEXPR1 * TX_DEDPER / 100)
TAPB2 = max(TPLR2, TEXPR2 * TX_DEDPER / 100)
TAPB3 = max(TPLR3, TEXPR3 * TX_DEDPER / 100)
TAPB4 = max(TPLR4, TEXPR4 * TX_DEDPER / 100)
TAPBC = max(TPLRC, TEXPRC * TX_DEDPER / 100)
TAPBV = max(TPLRV, TEXPRV * TX_DEDPER / 100)
TAXASSURC = round(BASSURC1 * TX_ASSUR1 / 100 + BASSURC2 * TX_ASSUR2 / 100 + BASSURC3 * TX_ASSUR3 / 100) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
TAXASSURV = round(BASSURV1 * TX_ASSUR1 / 100 + BASSURV2 * TX_ASSUR2 / 100 + BASSURV3 * TX_ASSUR3 / 100) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
TBNN = sum([TSPENETPV, TSPENETPC, TSPENETPP]) + TXSPENET + max(0, sum([TSPENETNPV, TSPENETNPC, TSPENETNPP]) + NOCEPIMP - min(saisies.get('DABNCNP6', 0), DABNCNP61731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP6', 0) * 1 - ART1731BIS - min(saisies.get('DABNCNP5', 0), DABNCNP51731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP5', 0) * 1 - ART1731BIS - min(saisies.get('DABNCNP4', 0), DABNCNP41731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP4', 0) * 1 - ART1731BIS - min(saisies.get('DABNCNP3', 0), DABNCNP31731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP3', 0) * 1 - ART1731BIS - min(saisies.get('DABNCNP2', 0), DABNCNP21731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP2', 0) * 1 - ART1731BIS - min(saisies.get('DABNCNP1', 0), DABNCNP11731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP1', 0) * 1 - ART1731BIS) + SPENETCT + SPENETNPCT
TEXSPB1 = TEXTS1 + TEXPR1
TEXSPB2 = TEXTS2 + TEXPR2
TEXSPB3 = TEXTS3 + TEXPR3
TEXSPB4 = TEXTS4 + TEXPR4
TEXSPBC = TEXTSC + TEXPRC
TEXSPBV = TEXTSV + TEXPRV
TIND_APB1 = positif_ou_nul(TPLR1 - TEXPR1 * TX_DEDPER / 100)
TIND_APB2 = positif_ou_nul(TPLR2 - TEXPR2 * TX_DEDPER / 100)
TIND_APB3 = positif_ou_nul(TPLR3 - TEXPR3 * TX_DEDPER / 100)
TIND_APB4 = positif_ou_nul(TPLR4 - TEXPR4 * TX_DEDPER / 100)
TIND_APBC = positif_ou_nul(TPLRC - TEXPRC * TX_DEDPER / 100)
TIND_APBV = positif_ou_nul(TPLRV - TEXPRV * TX_DEDPER / 100)
TMIB_ABPC = max(0, round(TMIB_APC * saisies.get('MIBPRESC', 0) + saisies.get('AUTOBICPC', 0) / TMIB_TPRESC))
TMIB_ABPP = max(0, round(TMIB_APP * saisies.get('MIBPRESP', 0) + saisies.get('AUTOBICPP', 0) / TMIB_TPRESP))
TMIB_ABPV = max(0, round(TMIB_APV * saisies.get('MIBPRESV', 0) + saisies.get('AUTOBICPV', 0) / TMIB_TPRESV))
TMIB_ABVC = max(0, round(TMIB_AVC * saisies.get('MIBVENC', 0) + saisies.get('AUTOBICVC', 0) / TMIB_TVENC))
TMIB_ABVP = max(0, round(TMIB_AVP * saisies.get('MIBVENP', 0) + saisies.get('AUTOBICVP', 0) / TMIB_TVENP))
TMIB_ABVV = max(0, round(TMIB_AVV * saisies.get('MIBVENV', 0) + saisies.get('AUTOBICVV', 0) / TMIB_TVENV))
TMIB_AUTOAVC = TMIB_AVC - TMIB_VENTAC
TMIB_AUTOAVP = TMIB_AVP - TMIB_VENTAP
TMIB_AUTOAVV = TMIB_AVV - TMIB_VENTAV
TMIB_NETPC = saisies.get('MIBPRESC', 0) + saisies.get('AUTOBICPC', 0) - TMIB_ABPC
TMIB_NETPP = saisies.get('MIBPRESP', 0) + saisies.get('AUTOBICPP', 0) - TMIB_ABPP
TMIB_NETPV = saisies.get('MIBPRESV', 0) + saisies.get('AUTOBICPV', 0) - TMIB_ABPV
TMIB_NETVC = saisies.get('MIBVENC', 0) + saisies.get('AUTOBICVC', 0) - TMIB_ABVC
TMIB_NETVP = saisies.get('MIBVENP', 0) + saisies.get('AUTOBICVP', 0) - TMIB_ABVP
TMIB_NETVV = saisies.get('MIBVENV', 0) + saisies.get('AUTOBICVV', 0) - TMIB_ABVV
TOTBGE = BGTECH + BGEPAHA
TPS101 = round(TSB1 * TX_DEDFORFTS / 100)
TPS102 = round(TSB2 * TX_DEDFORFTS / 100)
TPS103 = round(TSB3 * TX_DEDFORFTS / 100)
TPS104 = round(TSB4 * TX_DEDFORFTS / 100)
TPS10C = round(TSBC * TX_DEDFORFTS / 100)
TPS10V = round(TSBV * TX_DEDFORFTS / 100)
TSPEABC = round(max(MIN_SPEBNC, TSPEBASABC * SPETXAB / 100) * positif_ou_nul(TSPETOTC - MIN_SPEBNC)) + round(min(MIN_SPEBNC, TSPEBASABC) * is_positive(MIN_SPEBNC - TSPETOTC))
TSPEABP = round(max(MIN_SPEBNC, TSPEBASABP * SPETXAB / 100) * positif_ou_nul(TSPETOTP - MIN_SPEBNC)) + round(min(MIN_SPEBNC, TSPEBASABP) * is_positive(MIN_SPEBNC - TSPETOTP))
TSPEABPC = round(TSPEABC * saisies.get('BNCPROC', 0) + saisies.get('AUTOBNCC', 0) / TSPETOTC)
TSPEABPP = round(TSPEABP * saisies.get('BNCPROP', 0) + saisies.get('AUTOBNCP', 0) / TSPETOTP)
TSPEABV = round(max(MIN_SPEBNC, TSPEBASABV * SPETXAB / 100) * positif_ou_nul(TSPETOTV - MIN_SPEBNC)) + round(min(MIN_SPEBNC, TSPEBASABV) * is_positive(MIN_SPEBNC - TSPETOTV))
TSPENETPC = max(0, saisies.get('BNCPROC', 0) + saisies.get('AUTOBNCC', 0) - TSPEABPC)
TSPENETPP = max(0, saisies.get('BNCPROP', 0) + saisies.get('AUTOBNCP', 0) - TSPEABPP)
TTPS101 = round(TTSB1 * TX_DEDFORFTS / 100)
TTPS102 = round(TTSB2 * TX_DEDFORFTS / 100)
TTPS103 = round(TTSB3 * TX_DEDFORFTS / 100)
TTPS104 = round(TTSB4 * TX_DEDFORFTS / 100)
TTPS10C = round(TTSBC * TX_DEDFORFTS / 100)
TTPS10V = round(TTSBV * TX_DEDFORFTS / 100)
TXC = COPETO + TXINT
TXCDIS = COPETO + TXINT
TXCVN = COPETO + TXINT
TXGLOA = COPETO + TXINT
TXTOISF = RETXISF + COPETOISF
TYPEPPE = 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG0 * LIG2
VAREDABNCNP = min(DABNCNP, SPENETNPF + NOCEPIMP)
VARREVKIRE = BPCAPTAXV + BPCAPTAXC + sum([XBAV + XBIPV + XBINPV + XBNV + XBNNPV, XBAC + XBIPC + XBINPC + XBNC + XBNNPC, XBAP + XBIPP + XBINPP + XBNP + XBNNPP]) + sum([saisies.get('MIBEXV', 0) + saisies.get('MIBNPEXV', 0) + saisies.get('BNCPROEXV', 0) + saisies.get('XSPENPV', 0), saisies.get('MIBEXC', 0) + saisies.get('MIBNPEXC', 0) + saisies.get('BNCPROEXC', 0) + saisies.get('XSPENPC', 0), saisies.get('MIBEXP', 0) + saisies.get('MIBNPEXP', 0) + saisies.get('BNCPROEXP', 0) + saisies.get('XSPENPP', 0)]) + sum([saisies.get('BNCCRV', 0), saisies.get('BNCCRC', 0), saisies.get('BNCCRP', 0)]) + sum([saisies.get('BNCCRFV', 0), saisies.get('BNCCRFC', 0), saisies.get('BNCCRFP', 0)]) + sum([XETSNNV, XETSNNC]) + sum([XEXOCETV, XEXOCETC]) + sum([XTSNNV, XTSNNC]) + sum([XTSNNTYV, XTSNNTYC]) + sum([XHSUPTSNN1, XHSUPTSNN2, XHSUPTSNN3, XHSUPTSNN4, XHSUPTSNNV, XHSUPTSNNC]) + XFORFAIT + XACCESS + saisies.get('RCMLIB', 0) + saisies.get('PPLIB', 0) + saisies.get('GAINABDET', 0) + RCMEXCREF + RCM2FA + XELU + saisies.get('RCMIMPAT', 0) + saisies.get('PVIMMO', 0) + saisies.get('PVMOBNR', 0) + saisies.get('PVTITRESOC', 0) + BTP3A + 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0))) * PVTAUX
XDFN1 = min(PLAF_DEDFORFTS, XTPS101)
XDFN2 = min(PLAF_DEDFORFTS, XTPS102)
XDFN3 = min(PLAF_DEDFORFTS, XTPS103)
XDFN4 = min(PLAF_DEDFORFTS, XTPS104)
XDFNC = min(PLAF_DEDFORFTS, XTPS10C)
XDFNV = min(PLAF_DEDFORFTS, XTPS10V)
ZIGGLOALL = is_positive(ZIGGLOA + ZIGGLOANR) * LIG2
_4BAQC = max(0, _4BACREC - _4DEFBACREC) * positif_ou_nul(BARAC) + round(max(0, _4BAHREC - _4DEFBAHREC) * MAJREV) * positif_ou_nul(BARSC)
_4BAQP = max(0, _4BACREP - _4DEFBACREP) * positif_ou_nul(BARAP) + round(max(0, _4BAHREP - _4DEFBAHREP) * MAJREV) * positif_ou_nul(BARSP)
_4BAQV = max(0, _4BACREV - _4DEFBACREV) * positif_ou_nul(BARAV) + round(max(0, _4BAHREV - _4DEFBAHREV) * MAJREV) * positif_ou_nul(BARSV)
ABAVC = is_positive(saisies.get('RCMAV', 0)) * round(ABRCM2 * saisies.get('RCMAV', 0) / RAVC)
ABPR1 = round(1 - IND_APB1 * min(APB1, PL_PB * APB1 / sum([APBV * 1 - IND_APBV, APBC * 1 - IND_APBC, APB1 * 1 - IND_APB1, APB2 * 1 - IND_APB2, APB3 * 1 - IND_APB3, APB4 * 1 - IND_APB4])) + IND_APB1 * APB1)
ABPR2 = round(1 - IND_APB2 * min(APB2, PL_PB * APB2 / sum([APBV * 1 - IND_APBV, APBC * 1 - IND_APBC, APB1 * 1 - IND_APB1, APB2 * 1 - IND_APB2, APB3 * 1 - IND_APB3, APB4 * 1 - IND_APB4])) + IND_APB2 * APB2)
ABPR3 = round(1 - IND_APB3 * min(APB3, PL_PB * APB3 / sum([APBV * 1 - IND_APBV, APBC * 1 - IND_APBC, APB1 * 1 - IND_APB1, APB2 * 1 - IND_APB2, APB3 * 1 - IND_APB3, APB4 * 1 - IND_APB4])) + IND_APB3 * APB3)
ABPR4 = round(1 - IND_APB4 * min(APB4, PL_PB * APB4 / sum([APBV * 1 - IND_APBV, APBC * 1 - IND_APBC, APB1 * 1 - IND_APB1, APB2 * 1 - IND_APB2, APB3 * 1 - IND_APB3, APB4 * 1 - IND_APB4])) + IND_APB4 * APB4)
ABPRC = round(1 - IND_APBC * min(APBC, PL_PB * APBC / sum([APBV * 1 - IND_APBV, APBC * 1 - IND_APBC, APB1 * 1 - IND_APB1, APB2 * 1 - IND_APB2, APB3 * 1 - IND_APB3, APB4 * 1 - IND_APB4])) + IND_APBC * APBC)
ABPRV = round(1 - IND_APBV * min(APBV, PL_PB * APBV / sum([APBV * 1 - IND_APBV, APBC * 1 - IND_APBC, APB1 * 1 - IND_APB1, APB2 * 1 - IND_APB2, APB3 * 1 - IND_APB3, APB4 * 1 - IND_APB4])) + IND_APBV * APBV)
ACODJTJU = ACODJTJU_1 * 1 - ART1731BIS + min(ACODJTJU_1, max(ACODJTJU_P + ACODJTJUP2, ACODJTJU1731 + 0) * 1 - PREM8_11) * ART1731BIS
AFOREST = AFOREST_1 * 1 - ART1731BIS + min(AFOREST_1, max(AFOREST_P + AFORESTP2, AFOREST1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
ALOCIDEFG = ALOCIDEFG_1 * 1 - ART1731BIS + min(ALOCIDEFG_1, max(ALOCIDEFG_P + ALOCIDEFGP2, ALOCIDEFG1731 + 0) * 1 - PREM8_11) * ART1731BIS
APRV = IND_APBV * ABPRV + 1 - IND_APBV * min(ABPRV, PL_PB)
ARESINEUV = ARESINEUV_1 * 1 - ART1731BIS + min(ARESINEUV_1, max(ARESINEUV_P + ARESINEUVP2, ARESINEUV1731 + 0) * 1 - PREM8_11) * ART1731BIS
ARESTIMO_1 = RESTIMOD + RESTIMOB + RESTIMOC + RESTIMOF + RESTIMOA + RESTIMOE + RESTIMOY + RESTIMOX * 1 - V_CNR
AUBAINE10 = max(0, min(saisies.get('V_A10REEL', 0), saisies.get('V_DIFTEOREEL', 0) - AUBAINE13A - AUBAINE13B - AUBAINE12 - AUBAINE11))
AUBAINE9 = max(0, saisies.get('V_DIFTEOREEL', 0) - AUBAINE13A - AUBAINE13B - AUBAINE12 - AUBAINE11 - AUBAINE10)
BA9RFOR = round(min(saisies.get('REPSINFOR', 0), PLAFRED_FORTRA) * TX25 / 100) * 1 - V_CNR
BAD = BAD1 + BAD2
BAHQC = BANC + BAMC + BAFORC
BAHQP = BANP + BAMP + BAFORP
BAHQV = BANV + BAMV + BAFORV
BALNP = max(0, NOCEPIMP)
BAQT = BAQV + BAQC + BAQP
BASE7UTF = max(0, min(saisies.get('REPFOR', 0) + saisies.get('REPSINFOR', 0) + saisies.get('REPSINFOR1', 0), PLAFRED_FORTRA) - saisies.get('REPSINFOR', 0)) * 1 - V_CNR
BASE7UVG = max(0, min(saisies.get('REPFOR', 0) + saisies.get('REPSINFOR', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR1', 0) + saisies.get('REPSINFOR2', 0), PLAFRED_FORTRA) - saisies.get('REPFOR', 0) + saisies.get('REPSINFOR', 0) + saisies.get('REPSINFOR1', 0)) * 1 - V_CNR
BASE7UWH = max(0, min(saisies.get('REPFOR', 0) + saisies.get('REPSINFOR', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR1', 0) + saisies.get('REPFOR2', 0) + saisies.get('REPSINFOR2', 0) + saisies.get('REPSINFOR3', 0), PLAFRED_FORTRA) - saisies.get('REPFOR', 0) + saisies.get('REPSINFOR', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR1', 0) + saisies.get('REPSINFOR2', 0)) * 1 - V_CNR
BASE7UXI = max(0, min(saisies.get('REPSINFOR', 0) + saisies.get('REPFOR', 0) + saisies.get('REPSINFOR1', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR2', 0) + saisies.get('REPFOR2', 0) + saisies.get('REPSINFOR2', 0) + saisies.get('REPFOR3', 0) + saisies.get('REPSINFOR4', 0), PLAFRED_FORTRA) - saisies.get('REPSINFOR', 0) + saisies.get('REPFOR', 0) + saisies.get('REPSINFOR1', 0) + saisies.get('REPFOR1', 0) + saisies.get('REPSINFOR2', 0) + saisies.get('REPFOR2', 0) + saisies.get('REPSINFOR2', 0)) * 1 - V_CNR
BCIHABPRIN = BCIHABPRIN1 + BCIHABPRIN2 + BCIHABPRIN3 + BCIHABPRIN4 + BCIHABPRIN5 + BCIHABPRIN6 + BCIHABPRIN7
BICIMPC = BIHTAC + BIPTAC + MIB_NETVC + MIB_NETPC
BICIMPP = BIHTAP + BIPTAP + MIB_NETVP + MIB_NETPP
BICIMPV = BIHTAV + BIPTAV + MIB_NETVV + MIB_NETPV
BIPN = BIPNV + BIPNC + BIPNP
BRCMBIS = RCMAB + RTNC + RAVC + RCMNAB + RTCAR + RCMPRIVM
BRCMTOT = RCMAB + RTNC + RAVC + RCMNAB + RTCAR + RCMPRIVM
CIGE = round(RGTECH + RGEPAHA) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * 1 - V_CNR
CIRSE2 = CIRSE8TV + CIRSE8SA
CIRSE4 = CIRSE8TX + CIRSE8SB
CIRSETOT = CIRSE1 + CIRSE2 + CIRSE3 + CIRSE4 + CIRSE5
CS_RFG = RDRFPS
DAGRIIMP = max(0, min(BAHQV + BAHQC + BAHQP + BAQV + BAQC + BAQP, saisies.get('DAGRI6', 0) + saisies.get('DAGRI5', 0) + saisies.get('DAGRI4', 0) + saisies.get('DAGRI3', 0) + saisies.get('DAGRI2', 0) + saisies.get('DAGRI1', 0)))
DCTMIB = saisies.get('BICPMVCTV', 0) + saisies.get('BICPMVCTC', 0) + saisies.get('BICPMVCTP', 0) * positif_ou_nul(BIPN + MIB_NETCT) + 1 - positif_ou_nul(BIPN + MIB_NETCT) * saisies.get('BICPMVCTV', 0) + saisies.get('BICPMVCTC', 0) + saisies.get('BICPMVCTP', 0) - abs(BIPN + MIB_NETCT) + 1 - positif_ou_nul(BIPN + MIB_NETCT) * is_zero(saisies.get('BICPMVCTV', 0) + saisies.get('BICPMVCTC', 0) + saisies.get('BICPMVCTP', 0) - abs(BIPN + MIB_NETCT)) * saisies.get('BICPMVCTV', 0) + saisies.get('BICPMVCTC', 0) + saisies.get('BICPMVCTP', 0)
DCTSPENP = positif_ou_nul(NOCEPIMP + SPENETNPF) * saisies.get('BNCNPDCT', 0) + 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * saisies.get('BNCNPDCT', 0) - abs(NOCEPIMP + SPENETNPF) + 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * is_zero(saisies.get('BNCNPDCT', 0) - abs(NOCEPIMP + SPENETNPF)) * saisies.get('BNCNPDCT', 0)
DFN1 = min(PLAF_DEDFORFTS, TPS101)
DFN2 = min(PLAF_DEDFORFTS, TPS102)
DFN3 = min(PLAF_DEDFORFTS, TPS103)
DFN4 = min(PLAF_DEDFORFTS, TPS104)
DFNC = min(PLAF_DEDFORFTS, TPS10C)
DFNV = min(PLAF_DEDFORFTS, TPS10V)
DIDABNCNP = min(saisies.get('DABNCNP1', 0) + saisies.get('DABNCNP2', 0) + saisies.get('DABNCNP3', 0) + saisies.get('DABNCNP4', 0) + saisies.get('DABNCNP5', 0) + saisies.get('DABNCNP6', 0), max(DIDABNCNP11731, max(DIDABNCNP1_P, DIDABNCNP1P2))) * is_positive(DEFRIBNC) * 1 - PREM8_11 + max(0, min(NOCEPIMP + SPENETNPF, saisies.get('DABNCNP1', 0) + saisies.get('DABNCNP2', 0) + saisies.get('DABNCNP3', 0) + saisies.get('DABNCNP4', 0) + saisies.get('DABNCNP5', 0) + saisies.get('DABNCNP6', 0))) * 1 - is_positive(DEFRIBNC) + 0 * PREM8_11
DIDABNCNP1 = min(NOCEPIMP + SPENETNPF, saisies.get('DABNCNP1', 0) + saisies.get('DABNCNP2', 0) + saisies.get('DABNCNP3', 0) + saisies.get('DABNCNP4', 0) + saisies.get('DABNCNP5', 0) + saisies.get('DABNCNP6', 0))
DS025 = max(QF025 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF025 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF025 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF025 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF025 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
FRAN = is_positive(saisies.get('RCMABD', 0)) * is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(saisies.get('REVACT', 0) + RTCAR + RCMNAB) * round(saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), BRCMTOT + 0) * ART1731BIS * saisies.get('RCMABD', 0) / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(saisies.get('REVACT', 0) + RTCAR + RCMNAB) * saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), BRCMTOT + 0) * ART1731BIS + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(saisies.get('REVACT', 0) + RTCAR + RCMNAB) * round(saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS * saisies.get('RCMABD', 0) / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(saisies.get('REVACT', 0) + RTCAR + RCMNAB) * saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS
FRDPROVV = TSBNV + PRV + saisies.get('PALIV', 0) - APRV
IND_10MIN_01 = is_positive(DEDMIN1 - DFN1) * is_positive(TSB1)
IND_10MIN_02 = is_positive(DEDMIN2 - DFN2) * is_positive(TSB2)
IND_10MIN_03 = is_positive(DEDMIN3 - DFN3) * is_positive(TSB3)
IND_10MIN_04 = is_positive(DEDMIN4 - DFN4) * is_positive(TSB4)
IND_10MIN_0C = is_positive(DEDMINC - DFNC) * is_positive(TSBC)
IND_10MIN_0V = is_positive(DEDMINV - DFNV) * is_positive(TSBV)
IND_MIN1 = 1 - is_positive(IND_10MIN_01)
IND_MIN2 = 1 - is_positive(IND_10MIN_02)
IND_MIN3 = 1 - is_positive(IND_10MIN_03)
IND_MIN4 = 1 - is_positive(IND_10MIN_04)
IND_MINC = 1 - is_positive(IND_10MIN_0C)
IND_MINV = 1 - is_positive(IND_10MIN_0V)
IS025 = round(DS025 * NB2)
LIG121 = is_positive(DEFRITS) * LIGANNUL2042
LIG136 = is_positive(_4BAQV + _4BAQC + _4BAQP) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1
LIG3525 = 1 - V_CNR * is_positive(RTNC) * LIG1 * LIG2
LIG899 = is_positive(RVTOT + LIG1100 + LIG910 + BRCMQ + saisies.get('RCMFR', 0) + REPRCM + LIGRCMABT + LIG2RCMABT + LIGPV3VG + LIGPV3WB + LIGPV3VE + saisies.get('RCMLIB', 0) + LIG29 + LIG30 + RFQ + _2REVF + _3REVF + LIG1130 + VLHAB + DFANT + saisies.get('ESFP', 0) + saisies.get('RE168', 0) + saisies.get('TAX1649', 0) + saisies.get('R1649', 0) + saisies.get('PREREV', 0)) * 1 - is_positive(LIG0010 + LIG0020 + LIG0030 + LIG0040 + LIG0050 + LIG0060 + LIG0070) * 1 - ART1731BIS
LIG899YT = is_positive(RVTOT + LIG1100 + LIG910 + BRCMQ + saisies.get('RCMFR', 0) + REPRCM + LIGRCMABT + LIG2RCMABT + LIGPV3VG + LIGPV3WB + LIGPV3VE + saisies.get('RCMLIB', 0) + LIG29 + LIG30 + RFQ + _2REVF + _3REVF + LIG1130 + VLHAB + DFANT + saisies.get('ESFP', 0) + saisies.get('RE168', 0) + saisies.get('TAX1649', 0) + saisies.get('R1649', 0) + saisies.get('PREREV', 0)) * 1 - is_positive(LIG10YT + LIG20YT + LIG30YT + LIG40YT + LIG50YT + LIG60YT + LIG70YT) * ART1731BIS
LIG900 = is_positive(RVTOT + LIG1100 + LIG910 + BRCMQ + saisies.get('RCMFR', 0) + REPRCM + LIGRCMABT + LIG2RCMABT + LIGPV3VG + LIGPV3WB + LIGPV3VE + saisies.get('RCMLIB', 0) + LIG29 + LIG30 + RFQ + _2REVF + _3REVF + LIG1130 + VLHAB + DFANT + saisies.get('ESFP', 0) + saisies.get('RE168', 0) + saisies.get('TAX1649', 0) + saisies.get('R1649', 0) + saisies.get('PREREV', 0)) * is_positive(LIG0010 + LIG0020 + LIG0030 + LIG0040 + LIG0050 + LIG0060 + LIG0070) * 1 - ART1731BIS
LIG900YT = is_positive(RVTOT + LIG1100 + LIG910 + BRCMQ + saisies.get('RCMFR', 0) + REPRCM + LIGRCMABT + LIG2RCMABT + LIGPV3VG + LIGPV3WB + LIGPV3VE + saisies.get('RCMLIB', 0) + LIG29 + LIG30 + RFQ + _2REVF + _3REVF + LIG1130 + VLHAB + DFANT + saisies.get('ESFP', 0) + saisies.get('RE168', 0) + saisies.get('TAX1649', 0) + saisies.get('R1649', 0) + saisies.get('PREREV', 0)) * is_positive(LIG10YT + LIG20YT + LIG30YT + LIG40YT + LIG50YT + LIG60YT + LIG70YT) * ART1731BIS
LIG931 = is_positive(DEFRIRCM) * is_positive(saisies.get('RCMFR', 0)) * LIGANNUL2042
LIG936 = is_positive(DEFRIRCM) * is_positive(REPRCM) * LIGANNUL2042
LIGDIDAB = positif_ou_nul(DIDABNCNP) * is_positive(LIGDAB) * LIG0 * LIG2
LIGFOREST = is_positive(REPFOREST2 + REPFOREST3 + REPEST) * LIG1 * LIG2 * 1 - V_CNR
LIGLOCNSEUL = is_positive(LIGNPLOC + LIGDEFNPLOC + LIGNPLOCF)
LIGLOCSEUL = 1 - is_positive(LIGNPLOC + LIGDEFNPLOC + LIGNPLOCF)
LIGMIBNPPOS = is_positive(MIBNPRV + MIBNPRC + MIBNPRP + MIB_NETNPCT) * 1 - is_positive(LIG_BICNPF) * LIG2
LIGNEUV = is_positive(saisies.get('LOCRESINEUV', 0) + saisies.get('INVNPROF1', 0) + saisies.get('INVNPROF2', 0)) * is_positive(RESINEUV1 + RESINEUV2 + RESINEUV3 + RESINEUV4 + RESINEUV5 + RESINEUV6 + RESINEUV7 + RESINEUV8) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGNFOREST = is_positive(REPSIN + REPFORSIN + REPFORSIN2 + REPFORSIN3 + REPNIS) * LIG1 * LIG2
LIGREPEST = is_positive(REPEST) * LIG1 * LIG2 * 1 - V_CNR
LIGREPFOR2 = is_positive(REPFOREST2) * LIG1 * LIG2 * 1 - V_CNR
LIGREPFOR3 = is_positive(REPFOREST3) * LIG1 * LIG2 * 1 - V_CNR
LIGREPNIS = is_positive(REPNIS) * LIG1 * LIG2
LIGRLOCIDFG = is_positive(saisies.get('LOCMEUBID', 0) + saisies.get('LOCMEUBIF', 0) + saisies.get('LOCMEUBIG', 0)) * is_positive(RLOCIDFG1 + RLOCIDFG2 + RLOCIDFG3 + RLOCIDFG4 + RLOCIDFG5 + RLOCIDFG6 + RLOCIDFG7 + RLOCIDFG8) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGSINFOR = is_positive(REPFORSIN) * LIG1 * LIG2
LIGSINFOR2 = is_positive(REPFORSIN2) * LIG1 * LIG2
LIGSINFOR3 = is_positive(REPFORSIN3) * LIG1 * LIG2
LIG_BICP = LIG_BICPV + LIG_BICPC + LIG_BICPP
MIBRABC = MIB_ABVC + MIB_ABPC
MIBRABP = MIB_ABVP + MIB_ABPP
MIBRABV = MIB_ABVV + MIB_ABPV
MIBRNETC = max(0, MIBRC - MIBRABC)
MIBRNETP = max(0, MIBRP - MIBRABP)
MIBRNETV = max(0, MIBRV - MIBRABV)
MIB_ABNPPC = max(0, round(MIB_APC * saisies.get('MIBNPPRESC', 0) / MIB_TPRESC)) * present(saisies.get('MIBMEUC', 0)) + MIB_APC - MIB_ABPC * 1 - present(saisies.get('MIBMEUC', 0))
MIB_ABNPPLC = MIB_APC - MIB_ABPC - MIB_ABNPPC * present(saisies.get('MIBMEUC', 0))
MIB_ABNPPP = max(0, round(MIB_APP * saisies.get('MIBNPPRESP', 0) / MIB_TPRESP)) * present(saisies.get('MIBMEUP', 0)) + MIB_APP - MIB_ABPP * 1 - present(saisies.get('MIBMEUP', 0))
MIB_ABNPPV = max(0, round(MIB_APV * saisies.get('MIBNPPRESV', 0) / MIB_TPRESV)) * present(saisies.get('MIBMEUV', 0)) + MIB_APV - MIB_ABPV * 1 - present(saisies.get('MIBMEUV', 0))
MIB_ABNPVC = max(0, round(MIB_AVC * saisies.get('MIBNPVENC', 0) / MIB_TVENC)) * is_positive(present(saisies.get('MIBGITEC', 0)) + present(saisies.get('LOCGITC', 0))) + MIB_AVC - MIB_ABVC * 1 - is_positive(present(saisies.get('MIBGITEC', 0)) + present(saisies.get('LOCGITC', 0)))
MIB_ABNPVLC = MIB_AVC - MIB_ABVC - MIB_ABNPVC * is_positive(present(saisies.get('MIBGITEC', 0)) + present(saisies.get('LOCGITC', 0)))
MIB_ABNPVP = max(0, round(MIB_AVP * saisies.get('MIBNPVENP', 0) / MIB_TVENP)) * is_positive(present(saisies.get('MIBGITEP', 0)) + present(saisies.get('LOCGITP', 0))) + MIB_AVP - MIB_ABVP * 1 - is_positive(present(saisies.get('MIBGITEP', 0)) + present(saisies.get('LOCGITP', 0)))
MIB_ABNPVV = max(0, round(MIB_AVV * saisies.get('MIBNPVENV', 0) / MIB_TVENV)) * is_positive(present(saisies.get('MIBGITEV', 0)) + present(saisies.get('LOCGITV', 0))) + MIB_AVV - MIB_ABVV * 1 - is_positive(present(saisies.get('MIBGITEV', 0)) + present(saisies.get('LOCGITV', 0)))
MIB_NETNPPC = saisies.get('MIBNPPRESC', 0) - MIB_ABNPPC
MIB_NETNPPLC = saisies.get('MIBMEUC', 0) - MIB_ABNPPLC
MIB_NETNPPP = saisies.get('MIBNPPRESP', 0) - MIB_ABNPPP
MIB_NETNPPV = saisies.get('MIBNPPRESV', 0) - MIB_ABNPPV
MIB_NETNPVC = saisies.get('MIBNPVENC', 0) - MIB_ABNPVC
MIB_NETNPVLC = saisies.get('MIBGITEC', 0) + saisies.get('LOCGITC', 0) - MIB_ABNPVLC
MIB_NETNPVP = saisies.get('MIBNPVENP', 0) - MIB_ABNPVP
MIB_NETNPVV = saisies.get('MIBNPVENV', 0) - MIB_ABNPVV
MLOCABC = MIB_ABNPVLC + MIB_ABNPPLC
MLOCNETC = max(0, MLOCDECC - MLOCABC)
NB1 = NBPT
NPLOCCGANSV = NPLOCCGAV - NPLOCCGASV
NPLOCNETTC = NPLOCCGAC + NPLOCC + MIB_NETNPVLC + MIB_NETNPPLC
NPLOCNSV = NPLOCV - NPLOCSV
NSA2 = min(1 - is_positive(PAC + saisies.get('V_0CH', 0)) * is_zero(SFUTILE - 14) + is_zero(SFUTILE - 7) + is_zero(SFUTILE - 15) * 1 - is_positive(NIN) + is_zero(SFUTILE - 7) * BOOL_0AZ * saisies.get('V_0AV', 0), 1) * 0.5
P10MINSP = max(min(PERPSALP, PDEDMINP), PDFNP)
PD10MP = PIND_MINP * PDFNP + 1 - PIND_MINP * P10MINSP
PLACOMP = PLAFIMP * is_positive(saisies.get('V_0AV', 0) * saisies.get('V_0CF', 0) + saisies.get('V_0DJ', 0) + saisies.get('V_0CH', 0) + saisies.get('V_0CR', 0) + saisies.get('V_9XX', 0) * 1 - is_positive(saisies.get('V_0AZ', 0))) + 2 * PLAF_PLACOMP * max(0, NIN + NSA2 + NCC) + round(PLAF_PLACOMP / 2 * saisies.get('V_0CI', 0))
PLAF1 = PLAF1M + PLAF1MGR + PLAF1GM
PLAF2 = PLAF2M + PLAF2MGR + PLAF2GM
PLAFQFT = PLANT
PLOCNETF = PLOCNETV + PLOCNETC + PLOCNETPAC
PPE_FIN = PPE_FINRANG
PPE_RPRO1C = saisies.get('FEXC', 0) + saisies.get('BAFC', 0) + saisies.get('BAEXC', 0) + saisies.get('BACREC', 0) + _4BACREC - saisies.get('BACDEC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BAHEXC', 0) + saisies.get('BAHREC', 0) + _4BAHREC - saisies.get('BAHDEC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BICEXC', 0) + saisies.get('BICNOC', 0) - saisies.get('BICDNC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BIHEXC', 0) + saisies.get('BIHNOC', 0) - saisies.get('BIHDNC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BNCEXC', 0) + saisies.get('BNCREC', 0) - saisies.get('BNCDEC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BNHEXC', 0) + saisies.get('BNHREC', 0) - saisies.get('BNHDEC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('MIBEXC', 0) + saisies.get('BNCPROEXC', 0) + TMIB_NETVC + TMIB_NETPC + TSPENETPC + saisies.get('BAFPVC', 0) + saisies.get('MIBPVC', 0) + saisies.get('BNCPROPVC', 0) + saisies.get('BAFORESTC', 0) + saisies.get('LOCPROC', 0) + saisies.get('LOCPROCGAC', 0) - saisies.get('LOCDEFPROCGAC', 0) * 1 - is_positive(ART1731BIS) - saisies.get('LOCDEFPROC', 0) * 1 - is_positive(ART1731BIS) + saisies.get('XHONOAAC', 0) + saisies.get('XHONOC', 0)
PPE_RPRO1P = saisies.get('FEXP', 0) + saisies.get('BAFP', 0) + saisies.get('BAEXP', 0) + saisies.get('BACREP', 0) + _4BACREP - saisies.get('BACDEP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BAHEXP', 0) + saisies.get('BAHREP', 0) + _4BAHREP - saisies.get('BAHDEP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BICEXP', 0) + saisies.get('BICNOP', 0) - saisies.get('BICDNP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BIHEXP', 0) + saisies.get('BIHNOP', 0) - saisies.get('BIHDNP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BNCEXP', 0) + saisies.get('BNCREP', 0) - saisies.get('BNCDEP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BNHEXP', 0) + saisies.get('BNHREP', 0) - saisies.get('BNHDEP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('MIBEXP', 0) + saisies.get('BNCPROEXP', 0) + TMIB_NETVP + TMIB_NETPP + TSPENETPP + saisies.get('BAFPVP', 0) + saisies.get('MIBPVP', 0) + saisies.get('BNCPROPVP', 0) + saisies.get('BAFORESTP', 0) + saisies.get('LOCPROP', 0) + saisies.get('LOCPROCGAP', 0) - saisies.get('LOCDEFPROCGAP', 0) * 1 - is_positive(ART1731BIS) - saisies.get('LOCDEFPROP', 0) * 1 - is_positive(ART1731BIS) + saisies.get('XHONOAAP', 0) + saisies.get('XHONOP', 0)
PPE_RPROC = is_positive(PPE_RPRO1C) * round(1 + PPETXRPRO / 100 * PPE_RPRO1C) + 1 - is_positive(PPE_RPRO1C) * round(PPE_RPRO1C * 1 - PPETXRPRO / 100)
PPE_RPROP = is_positive(PPE_RPRO1P) * round(1 + PPETXRPRO / 100 * PPE_RPRO1P) + 1 - is_positive(PPE_RPRO1P) * round(PPE_RPRO1P * 1 - PPETXRPRO / 100)
PPE_RTAN = max(0, PPE_RPROP) * 1 - PPE_BOOL_SEULPAC
PRNNV = EXPRV - APRV
PS_RFG = CS_RFG
QF014 = round(RB04) / NB1
QF015 = round(RB05) / NB1
QF016 = round(RB06) / NB1
RAD = round(BAD * TX_AIDOMI / 100) * 1 - V_CNR
RCAV = max(0, saisies.get('RCMAV', 0) - ABAVC)
RCMFRART1731 = is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * PREM8_11 * max(0, min(saisies.get('RCMFR', 0), BRCMBIS)) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * max(0, min(saisies.get('RCMFR', 0), max(BRCM1731, max(BRCM_P, BRCMP2))))
RCMFRTEMP = min(RCMAB + RTNC + RAVC + RCMNAB + RTCAR + RCMPRIVM, saisies.get('RCMFR', 0))
RDRCM = RDRCM1BIS + saisies.get('COD2FA', 0)
RD_RFG = CS_RFG
REPFORESTA = REPSIN + REPFORSIN + REPFORSIN2 + REPFORSIN3 + REPNIS
REPINVLOCNP = RESINEUV1 + RESINEUV2 + RESINEUV3 + RESINEUV4 + RESINEUV5 + RESINEUV6 + RESINEUV7 + RESINEUV8
REPLOCIDFG = RLOCIDFG1 + RLOCIDFG2 + RLOCIDFG3 + RLOCIDFG4 + RLOCIDFG5 + RLOCIDFG6 + RLOCIDFG7 + RLOCIDFG8
RESS = is_positive(positif_ou_nul(PLAF1 - saisies.get('V_BTRFRN2', 0) + 0 * 1 - present(saisies.get('RFRN2', 0)) + saisies.get('RFRN2', 0)) + 1 - positif_ou_nul(PLAF1 - saisies.get('V_BTRFRN2', 0) + 0 * 1 - present(saisies.get('RFRN2', 0)) + saisies.get('RFRN2', 0)) * positif_ou_nul(PLAF2 - saisies.get('V_BTRFRN1', 0) + 0 * 1 - present(saisies.get('RFRN1', 0)) + saisies.get('RFRN1', 0)) + present(saisies.get('COD7WX', 0)))
RFOREST = round(RFOREST1 * TX25 / 100) + round(RFOREST2 * TX22 / 100) + round(RFOREST3 * TX18 / 100) + round(max(0, AFOREST - RFOREST1 - RFOREST2 - RFOREST3) * TX18 / 100) * 1 - V_CNR
RIDOMENT = RLOCENT
RISFDONCEE = max(min(RISFDONCEE_2, ISFBRUT - RISFDONF), 0) * is_positive(1 - is_zero(saisies.get('CODE_2042', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 34)) + max(min(RISFDONCEE_2, ISFBRUT - RISFDONF), 0) * 1 - is_positive(1 - is_zero(saisies.get('CODE_2042', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 34)) * saisies.get('COD9ZA', 0)
RISFPMED = max(min(RISFPMED_2, ISFBRUT - RISFDONF - RISFDONCEE), 0) * is_positive(1 - is_zero(saisies.get('CODE_2042', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 34)) + max(min(RISFPMED_2, ISFBRUT - RISFDONF - RISFDONCEE), 0) * 1 - is_positive(1 - is_zero(saisies.get('CODE_2042', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 34)) * saisies.get('COD9ZA', 0)
RISFPMEI = max(min(RISFPMEI_2, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED), 0) * is_positive(1 - is_zero(saisies.get('CODE_2042', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 34)) + max(min(RISFPMEI_2, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED), 0) * 1 - is_positive(1 - is_zero(saisies.get('CODE_2042', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 34)) * saisies.get('COD9ZA', 0)
RNTNC = RTNC
RSE1BASE = RSE1N - saisies.get('CSPROVYD', 0)
RSE2AC = max(0, RSE2 - CIRSE2)
RSE2N = max(0, RSE2 - CIRSE2)
RSE3BASE = RSE3N - saisies.get('CSPROVYG', 0)
RSE4AC = max(0, RSE4 - CIRSE4)
RSE4N = max(0, RSE4 - CIRSE4)
RSE5BASE = RSE5N - saisies.get('CSPROVYE', 0)
SPEABNPC = SPEABC - SPEABPC
SPEABNPP = SPEABP - SPEABPP
SPEABPV = round(SPEABV * saisies.get('BNCPROV', 0) / SPETOTV)
SPENETNPC = max(0, saisies.get('BNCNPC', 0) - SPEABNPC)
SPENETNPP = max(0, saisies.get('BNCNPP', 0) - SPEABNPP)
SPENETP = SPENETPP + SPENETNPP
SPENETPV = max(0, saisies.get('BNCPROV', 0) - SPEABPV)
TABPRV = round(1 - TIND_APBV * min(TAPBV, TPL_PB * TAPBV / sum([TAPBV * 1 - TIND_APBV, TAPBC * 1 - TIND_APBC, TAPB1 * 1 - TIND_APB1, TAPB2 * 1 - TIND_APB2, TAPB3 * 1 - TIND_APB3, TAPB4 * 1 - TIND_APB4])) + TIND_APBV * TAPBV)
TAPRV = TIND_APBV * TABPRV + 1 - TIND_APBV * min(TABPRV, TPL_PB)
TAXASSUR = TAXASSURV + TAXASSURC
TBICPABV = round(TMIB_ABVV * saisies.get('AUTOBICVV', 0) / saisies.get('MIBVENV', 0) + saisies.get('AUTOBICVV', 0) + TMIB_ABPV * saisies.get('AUTOBICPV', 0) / saisies.get('MIBPRESV', 0) + saisies.get('AUTOBICPV', 0))
TBICPROVC = max(0, round(TMIB_ABVC * saisies.get('AUTOBICVC', 0) / saisies.get('MIBVENC', 0) + saisies.get('AUTOBICVC', 0) + TMIB_ABPC * saisies.get('AUTOBICPC', 0) / saisies.get('MIBPRESC', 0) + saisies.get('AUTOBICPC', 0)))
TBICPROVP = max(0, round(TMIB_ABVP * saisies.get('AUTOBICVP', 0) / saisies.get('MIBVENP', 0) + saisies.get('AUTOBICVP', 0) + TMIB_ABPP * saisies.get('AUTOBICPP', 0) / saisies.get('MIBPRESP', 0) + saisies.get('AUTOBICPP', 0)))
TBNCPABC = round(TSPEABPC * saisies.get('AUTOBNCC', 0) / saisies.get('BNCPROC', 0) + saisies.get('AUTOBNCC', 0))
TBNCPABP = round(TSPEABPP * saisies.get('AUTOBNCP', 0) / saisies.get('BNCPROP', 0) + saisies.get('AUTOBNCP', 0))
TBNCTOTABC = round(TSPEABC * saisies.get('AUTOBNCC', 0) / TSPETOTC)
TBNCTOTABP = round(TSPEABP * saisies.get('AUTOBNCP', 0) / TSPETOTP)
TBNCTOTABV = round(TSPEABV * saisies.get('AUTOBNCV', 0) / TSPETOTV)
TDFN1 = min(PLAF_DEDFORFTS, TTPS101)
TDFN2 = min(PLAF_DEDFORFTS, TTPS102)
TDFN3 = min(PLAF_DEDFORFTS, TTPS103)
TDFN4 = min(PLAF_DEDFORFTS, TTPS104)
TDFNC = min(PLAF_DEDFORFTS, TTPS10C)
TDFNV = min(PLAF_DEDFORFTS, TTPS10V)
TIND_10MIN_01 = is_positive(TDEDMIN1 - TDFN1) * is_positive(TTSB1)
TIND_10MIN_02 = is_positive(TDEDMIN2 - TDFN2) * is_positive(TTSB2)
TIND_10MIN_03 = is_positive(TDEDMIN3 - TDFN3) * is_positive(TTSB3)
TIND_10MIN_04 = is_positive(TDEDMIN4 - TDFN4) * is_positive(TTSB4)
TIND_10MIN_0C = is_positive(TDEDMINC - TDFNC) * is_positive(TTSBC)
TIND_10MIN_0V = is_positive(TDEDMINV - TDFNV) * is_positive(TTSBV)
TIND_MIN1 = 1 - is_positive(TIND_10MIN_01)
TIND_MIN2 = 1 - is_positive(TIND_10MIN_02)
TIND_MIN3 = 1 - is_positive(TIND_10MIN_03)
TIND_MIN4 = 1 - is_positive(TIND_10MIN_04)
TIND_MINC = 1 - is_positive(TIND_10MIN_0C)
TIND_MINV = 1 - is_positive(TIND_10MIN_0V)
TMIB_ABNPPC = max(0, round(TMIB_APC * saisies.get('MIBNPPRESC', 0) / TMIB_TPRESC)) * present(saisies.get('MIBMEUC', 0)) + TMIB_APC - TMIB_ABPC * 1 - present(saisies.get('MIBMEUC', 0))
TMIB_ABNPPLC = TMIB_APC - TMIB_ABPC - TMIB_ABNPPC * present(saisies.get('MIBMEUC', 0))
TMIB_ABNPPP = max(0, round(TMIB_APP * saisies.get('MIBNPPRESP', 0) / TMIB_TPRESP)) * present(saisies.get('MIBMEUP', 0)) + TMIB_APP - TMIB_ABPP * 1 - present(saisies.get('MIBMEUP', 0))
TMIB_ABNPPV = max(0, round(TMIB_APV * saisies.get('MIBNPPRESV', 0) / TMIB_TPRESV)) * present(saisies.get('MIBMEUV', 0)) + TMIB_APV - TMIB_ABPV * 1 - present(saisies.get('MIBMEUV', 0))
TMIB_ABNPVC = max(0, round(TMIB_AVC * saisies.get('MIBNPVENC', 0) / TMIB_TVENC)) * is_positive(present(saisies.get('MIBGITEC', 0)) + present(saisies.get('LOCGITC', 0))) + TMIB_AVC - TMIB_ABVC * 1 - is_positive(present(saisies.get('MIBGITEC', 0)) + present(saisies.get('LOCGITC', 0)))
TMIB_ABNPVLC = TMIB_AVC - TMIB_ABVC - TMIB_ABNPVC * is_positive(present(saisies.get('MIBGITEC', 0)) + present(saisies.get('LOCGITC', 0)))
TMIB_ABNPVP = max(0, round(TMIB_AVP * saisies.get('MIBNPVENP', 0) / TMIB_TVENP)) * is_positive(present(saisies.get('MIBGITEP', 0)) + present(saisies.get('LOCGITP', 0))) + TMIB_AVP - TMIB_ABVP * 1 - is_positive(present(saisies.get('MIBGITEP', 0)) + present(saisies.get('LOCGITP', 0)))
TMIB_ABNPVV = max(0, round(TMIB_AVV * saisies.get('MIBNPVENV', 0) / TMIB_TVENV)) * is_positive(present(saisies.get('MIBGITEV', 0)) + present(saisies.get('LOCGITV', 0))) + TMIB_AVV - TMIB_ABVV * 1 - is_positive(present(saisies.get('MIBGITEV', 0)) + present(saisies.get('LOCGITV', 0)))
TMIB_NETNPPC = saisies.get('MIBNPPRESC', 0) - TMIB_ABNPPC
TMIB_NETNPPP = saisies.get('MIBNPPRESP', 0) - TMIB_ABNPPP
TMIB_NETNPPV = saisies.get('MIBNPPRESV', 0) - TMIB_ABNPPV
TMIB_NETNPVC = saisies.get('MIBNPVENC', 0) - TMIB_ABNPVC
TMIB_NETNPVP = saisies.get('MIBNPVENP', 0) - TMIB_ABNPVP
TMIB_NETNPVV = saisies.get('MIBNPVENV', 0) - TMIB_ABNPVV
TOTDAGRI = min(saisies.get('DAGRI6', 0) + saisies.get('DAGRI5', 0) + saisies.get('DAGRI4', 0) + saisies.get('DAGRI3', 0) + saisies.get('DAGRI2', 0) + saisies.get('DAGRI1', 0), max(DAGRIIMP1731, max(DAGRIIMP_P, DAGRIIMPP2))) * is_positive(ART1731BIS * 1 - PREM8_11) + DAGRIIMP * 1 - is_positive(ART1731BIS) + 0 * is_positive(ART1731BIS * PREM8_11)
TPRNNV = TEXPRV - TAPRV
TRCM1 = _1RNC + RCAV + _1RAO
TSPEABNPC = TSPEABC - TSPEABPC
TSPEABNPP = TSPEABP - TSPEABPP
TSPEABPV = round(TSPEABV * saisies.get('BNCPROV', 0) + saisies.get('AUTOBNCV', 0) / TSPETOTV)
TSPENETNPC = max(0, saisies.get('BNCNPC', 0) - TSPEABNPC)
TSPENETNPP = max(0, saisies.get('BNCNPP', 0) - TSPEABNPP)
TSPENETP = TSPENETPP + TSPENETNPP
TSPENETPV = max(0, saisies.get('BNCPROV', 0) + saisies.get('AUTOBNCV', 0) - TSPEABPV)
VAREDAGRI = min(DAGRI, BAHQV + BAHQC + BAHQP)
X10MINS1 = max(min(XTSB1, DEDMIN1), XDFN1)
X10MINS2 = max(min(XTSB2, DEDMIN2), XDFN2)
X10MINS3 = max(min(XTSB3, DEDMIN3), XDFN3)
X10MINS4 = max(min(XTSB4, DEDMIN4), XDFN4)
X10MINSC = max(min(XTSBC, DEDMINC), XDFNC)
X10MINSV = max(min(XTSBV, DEDMINV), XDFNV)
XDF1 = X10MINS1
XDF2 = X10MINS2
XDF3 = X10MINS3
XDF4 = X10MINS4
XDFC = X10MINSC
XDFV = X10MINSV
XIND_101 = positif_ou_nul(X10MINS1 - saisies.get('FRN1', 0))
XIND_102 = positif_ou_nul(X10MINS2 - saisies.get('FRN2', 0))
XIND_103 = positif_ou_nul(X10MINS3 - saisies.get('FRN3', 0))
XIND_104 = positif_ou_nul(X10MINS4 - saisies.get('FRN4', 0))
XIND_10C = positif_ou_nul(X10MINSC - saisies.get('FRNC', 0))
XIND_10V = positif_ou_nul(X10MINSV - saisies.get('FRNV', 0))
_10MINS1 = max(min(TSB1, DEDMIN1), DFN1)
_10MINS2 = max(min(TSB2, DEDMIN2), DFN2)
_10MINS3 = max(min(TSB3, DEDMIN3), DFN3)
_10MINS4 = max(min(TSB4, DEDMIN4), DFN4)
_10MINSC = max(min(TSBC, DEDMINC), DFNC)
_10MINSP = _10MINS1 + _10MINS2 + _10MINS3 + _10MINS4
_10MINSV = max(min(TSBV, DEDMINV), DFNV)
_1RAN = 1 - is_positive(EXFR) * RCMRNABD - FRAN + is_positive(EXFR) * 0
_1RIA = _1RAN
_2ABAVC = is_positive(saisies.get('PROVIE', 0)) * min(round(ABRCM2 * saisies.get('PROVIE', 0) / RAVC), ABRCM2 - ABAVC)
_2FRAN = is_positive(saisies.get('REVACT', 0)) * is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(RTCAR + RCMNAB) * round(saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), BRCMTOT + 0) * ART1731BIS * saisies.get('REVACT', 0) / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(RTCAR + RCMNAB) * saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), BRCMTOT + 0) * ART1731BIS - FRAN + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(RTCAR + RCMNAB) * round(saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), max(max(BRCMTOTP2, BRCMTOT_P + 0), BRCMTOT1731 + 0)) * ART1731BIS * saisies.get('REVACT', 0) / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(RTCAR + RCMNAB) * saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), max(max(BRCMTOTP2, BRCMTOT_P + 0), BRCMTOT1731 + 0)) * ART1731BIS - FRAN
_2RAN = 1 - is_positive(EXFR) * _2RCMRNABD - _2FRAN + is_positive(EXFR) * 0
_2RCAV = max(0, saisies.get('PROVIE', 0) - _2ABAVC)
_2RIA = _2RAN
AAIDE = BAD * 1 - ART1731BIS + min(BAD, max(AAIDE_P + AAIDEP2, AAIDE1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
AB10V = APRV
ABICPNETC = saisies.get('AUTOBICVC', 0) + saisies.get('AUTOBICPC', 0) - max(0, TMIB_AUTOAVC - TMIB_ABNPVLC) - max(0, TMIB_AUTOAPC - TMIB_ABNPPLC)
ABNCPNETC = saisies.get('AUTOBNCC', 0) - TBNCPABC
ABNCPNETP = saisies.get('AUTOBNCP', 0) - TBNCPABP
APRC = IND_APBC * ABPRC + 1 - IND_APBC * min(ABPRC, PL_PB - 1 - IND_APBV * APRV)
ARESTIMO = ARESTIMO_1 * 1 - ART1731BIS + min(ARESTIMO_1, max(ARESTIMO_P + ARESTIMOP2, ARESTIMO1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
BA10RFOR = round(BASE7UTF * TX25 / 100)
BA11RFOR = round(BASE7UVG * TX22 / 100)
BA12RFOR = round(BASE7UWH * TX18 / 100)
BA13UXI = round(BASE7UXI * TX18 / 100)
BAHQT = BAHQV + BAHQC + BAHQP
BAHQTOT = BAHQV + BAHQC + BAHQP - TOTDAGRI * 1 - ART1731BIS
BAHQTOTMAXN = positif_ou_nul(BAHQT) * min(0, BAHQV + BAHQC + BAHQP - TOTDAGRI * 1 - ART1731BIS)
BAHQTOTMAXP = positif_ou_nul(BAHQT) * max(0, BAHQV + BAHQC + BAHQP - TOTDAGRI)
BAHQTOTMIN = is_positive(BAHQT) * BAHQT
BAQTOT = max(0, BAQV + BAQC + BAQP + BAHQTOTMAXN)
BAQTOTAV = positif_ou_nul(BAQT + BAHQT) * BAQTOT + 1 - is_positive(BAQT + BAHQT) * 0
BAQTOTMIN = min(0, BAQV + BAQC + BAQP + BAHQTOTMIN)
BAQTOTN = min(0, BAQV + BAQC + BAQP + BAHQTOTMAXN)
BDEV30 = min(PDEVDUR, saisies.get('COD7SA', 0) + saisies.get('COD7SB', 0) + saisies.get('COD7SC', 0) + saisies.get('COD7WB', 0) + saisies.get('COD7RG', 0) + saisies.get('COD7VH', 0) + saisies.get('COD7RH', 0) + saisies.get('COD7RI', 0) + saisies.get('COD7WU', 0) + saisies.get('COD7RJ', 0) + saisies.get('COD7RK', 0) + saisies.get('COD7RL', 0) + saisies.get('COD7RN', 0) + saisies.get('COD7RP', 0) + saisies.get('COD7RR', 0) + saisies.get('COD7RS', 0) + saisies.get('COD7RQ', 0) + saisies.get('COD7RT', 0) + saisies.get('COD7TV', 0) + saisies.get('COD7TW', 0) + saisies.get('COD7RV', 0) + saisies.get('COD7RW', 0) + saisies.get('COD7RZ', 0)) * is_positive(is_positive(BQRESS) * is_positive(BQTRAV) + is_positive(BQRESS) * is_zero(BQTRAV) * is_zero(RESS) + is_positive(BQRESS) * is_zero(BQTRAV) * is_positive(RESS) + is_positive(BQRESS) * is_zero(BQTRAV) * is_positive(RESS) * present(saisies.get('CRECHOBOI', 0)) + is_zero(BQRESS))
BICNPC = BINTAC + BINHTAC + MIB_NETNPVC + MIB_NETNPPC
BICNPP = BINTAP + BINHTAP + MIB_NETNPVP + MIB_NETNPPP
BICNPV = BINTAV + BINHTAV + MIB_NETNPVV + MIB_NETNPPV
BNCDF2 = 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * saisies.get('DABNCNP1', 0) + positif_ou_nul(NOCEPIMP + SPENETNPF) * min(max(NOCEPIMP + SPENETNPF - saisies.get('DABNCNP6', 0) - saisies.get('DABNCNP5', 0) - saisies.get('DABNCNP4', 0) - saisies.get('DABNCNP3', 0) - saisies.get('DABNCNP2', 0), 0) - saisies.get('DABNCNP1', 0), saisies.get('DABNCNP1', 0)) * -1 * positif_ou_nul(saisies.get('DABNCNP1', 0) - max(NOCEPIMP + SPENETNPF - saisies.get('DABNCNP6', 0) - saisies.get('DABNCNP5', 0) - saisies.get('DABNCNP4', 0) - saisies.get('DABNCNP3', 0) - saisies.get('DABNCNP2', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DABNCNP1', 0), DABNCNP - DIDABNCNP) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('DABNCNP1', 0) * is_positive(is_positive(ART1731BIS * PREM8_11) + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
BNCDF3 = 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * saisies.get('DABNCNP2', 0) + positif_ou_nul(NOCEPIMP + SPENETNPF) * min(max(NOCEPIMP + SPENETNPF - saisies.get('DABNCNP6', 0) - saisies.get('DABNCNP5', 0) - saisies.get('DABNCNP4', 0) - saisies.get('DABNCNP3', 0), 0) - saisies.get('DABNCNP2', 0), saisies.get('DABNCNP2', 0)) * -1 * positif_ou_nul(saisies.get('DABNCNP2', 0) - max(NOCEPIMP + SPENETNPF - saisies.get('DABNCNP6', 0) - saisies.get('DABNCNP5', 0) - saisies.get('DABNCNP4', 0) - saisies.get('DABNCNP3', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DABNCNP2', 0), DABNCNP - DIDABNCNP - BNCDF2) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('DABNCNP2', 0) * is_positive(is_positive(ART1731BIS * PREM8_11) + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
BNCDF4 = 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * saisies.get('DABNCNP3', 0) + positif_ou_nul(NOCEPIMP + SPENETNPF) * min(max(NOCEPIMP + SPENETNPF - saisies.get('DABNCNP6', 0) - saisies.get('DABNCNP5', 0) - saisies.get('DABNCNP4', 0), 0) - saisies.get('DABNCNP3', 0), saisies.get('DABNCNP3', 0)) * -1 * positif_ou_nul(saisies.get('DABNCNP3', 0) - max(NOCEPIMP + SPENETNPF - saisies.get('DABNCNP6', 0) - saisies.get('DABNCNP5', 0) - saisies.get('DABNCNP4', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DABNCNP3', 0), DABNCNP - DIDABNCNP - BNCDF2 - BNCDF3) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('DABNCNP3', 0) * is_positive(is_positive(ART1731BIS * PREM8_11) + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
BNCDF5 = 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * saisies.get('DABNCNP4', 0) + positif_ou_nul(NOCEPIMP + SPENETNPF) * min(max(NOCEPIMP + SPENETNPF - saisies.get('DABNCNP6', 0) - saisies.get('DABNCNP5', 0), 0) - saisies.get('DABNCNP4', 0), saisies.get('DABNCNP4', 0)) * -1 * positif_ou_nul(saisies.get('DABNCNP4', 0) - max(NOCEPIMP + SPENETNPF - saisies.get('DABNCNP6', 0) - saisies.get('DABNCNP5', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DABNCNP4', 0), DABNCNP - DIDABNCNP - BNCDF2 - BNCDF3 - BNCDF4) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('DABNCNP4', 0) * is_positive(is_positive(ART1731BIS * PREM8_11) + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
BNCDF6 = 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * saisies.get('DABNCNP5', 0) + positif_ou_nul(NOCEPIMP + SPENETNPF) * min(max(NOCEPIMP + SPENETNPF - saisies.get('DABNCNP6', 0), 0) - saisies.get('DABNCNP5', 0), saisies.get('DABNCNP5', 0)) * -1 * positif_ou_nul(saisies.get('DABNCNP5', 0) - max(NOCEPIMP + SPENETNPF - saisies.get('DABNCNP6', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DABNCNP5', 0), DABNCNP - DIDABNCNP - BNCDF2 - BNCDF3 - BNCDF4 - BNCDF5) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('DABNCNP5', 0) * is_positive(is_positive(ART1731BIS * PREM8_11) + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
BNN = sum([BNRV, BNRC, BNRP]) + SPENETPF + max(0, SPENETNPF + NOCEPIMP - TOTDABNCNP) * 1 - ART1731BIS + sum([BNRV, BNRC, BNRP]) + SPENETPF + max(0, SPENETNPF + NOCEPIMP - DIDABNCNP + DEFBNCNPF) * ART1731BIS * 1 - PREM8_11 + sum([BNRV, BNRC, BNRP]) + SPENETPF + max(0, SPENETNPF + NOCEPIMP) * ART1731BIS * PREM8_11
BNNP = BNRP + SPENETP
CS_RCM = RDRCM
D10M1 = IND_MIN1 * DFN1 + 1 - IND_MIN1 * _10MINS1
D10M2 = IND_MIN2 * DFN2 + 1 - IND_MIN2 * _10MINS2
D10M3 = IND_MIN3 * DFN3 + 1 - IND_MIN3 * _10MINS3
D10M4 = IND_MIN4 * DFN4 + 1 - IND_MIN4 * _10MINS4
D10MC = IND_MINC * DFNC + 1 - IND_MINC * _10MINSC
D10MV = IND_MINV * DFNV + 1 - IND_MINV * _10MINSV
DBAIP = TOTDAGRI
DEFBA2 = 1 - is_positive(BAHQT + BAQT) * saisies.get('DAGRI1', 0) + is_positive(BAHQT + BAQT) * abs(min(max(BAHQT + BAQT - saisies.get('DAGRI6', 0) - saisies.get('DAGRI5', 0) - saisies.get('DAGRI4', 0) - saisies.get('DAGRI3', 0) - saisies.get('DAGRI2', 0), 0) - saisies.get('DAGRI1', 0), saisies.get('DAGRI1', 0))) * positif_ou_nul(saisies.get('DAGRI1', 0) - max(BAHQT + BAQT - saisies.get('DAGRI6', 0) - saisies.get('DAGRI5', 0) - saisies.get('DAGRI4', 0) - saisies.get('DAGRI3', 0) - saisies.get('DAGRI2', 0), 0)) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DAGRI1', 0), DAGRI - DBAIP) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('DAGRI1', 0) * is_positive(is_positive(ART1731BIS * PREM8_11) + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFBA3 = 1 - is_positive(BAHQT + BAQT) * saisies.get('DAGRI2', 0) + is_positive(BAHQT + BAQT) * abs(min(max(BAHQT + BAQT - saisies.get('DAGRI6', 0) - saisies.get('DAGRI5', 0) - saisies.get('DAGRI4', 0) - saisies.get('DAGRI3', 0), 0) - saisies.get('DAGRI2', 0), saisies.get('DAGRI2', 0))) * positif_ou_nul(saisies.get('DAGRI2', 0) - max(BAHQT + BAQT - saisies.get('DAGRI6', 0) - saisies.get('DAGRI5', 0) - saisies.get('DAGRI4', 0) - saisies.get('DAGRI3', 0), 0)) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DAGRI2', 0), DAGRI - DBAIP - DEFBA2) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('DAGRI2', 0) * is_positive(is_positive(ART1731BIS * PREM8_11) + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFBA4 = 1 - is_positive(BAHQT + BAQT) * saisies.get('DAGRI3', 0) + is_positive(BAHQT + BAQT) * abs(min(max(BAHQT + BAQT - saisies.get('DAGRI6', 0) - saisies.get('DAGRI5', 0) - saisies.get('DAGRI4', 0), 0) - saisies.get('DAGRI3', 0), saisies.get('DAGRI3', 0))) * positif_ou_nul(saisies.get('DAGRI3', 0) - max(BAHQT + BAQT - saisies.get('DAGRI6', 0) - saisies.get('DAGRI5', 0) - saisies.get('DAGRI4', 0), 0)) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DAGRI3', 0), DAGRI - DBAIP - DEFBA2 - DEFBA3) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('DAGRI3', 0) * is_positive(is_positive(ART1731BIS * PREM8_11) + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFBA5 = 1 - is_positive(BAHQT + BAQT) * saisies.get('DAGRI4', 0) + is_positive(BAHQT + BAQT) * abs(min(max(BAHQT + BAQT - saisies.get('DAGRI6', 0) - saisies.get('DAGRI5', 0), 0) - saisies.get('DAGRI4', 0), saisies.get('DAGRI4', 0))) * positif_ou_nul(saisies.get('DAGRI4', 0) - max(BAHQT + BAQT - saisies.get('DAGRI6', 0) - saisies.get('DAGRI5', 0), 0)) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DAGRI4', 0), DAGRI - DBAIP - DEFBA2 - DEFBA3 - DEFBA4) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('DAGRI4', 0) * is_positive(is_positive(ART1731BIS * PREM8_11) + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFBA6 = 1 - is_positive(BAHQT + BAQT) * saisies.get('DAGRI5', 0) + is_positive(BAHQT + BAQT) * abs(min(max(BAHQT + BAQT - saisies.get('DAGRI6', 0), 0) - saisies.get('DAGRI5', 0), saisies.get('DAGRI5', 0))) * positif_ou_nul(saisies.get('DAGRI5', 0) - max(BAHQT + BAQT - saisies.get('DAGRI6', 0), 0)) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DAGRI5', 0), DAGRI - DBAIP - DEFBA2 - DEFBA3 - DEFBA4 - DEFBA5) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('DAGRI5', 0) * is_positive(is_positive(ART1731BIS * PREM8_11) + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFBANI = BAHQV + BAHQC + BAHQP - TOTDAGRI + _4BAQV + _4BAQC + _4BAQP + DBAIP + SOMDEFBANI
DEFBNCNP = NOCEPIMP + SPENETNPF + DIDABNCNP + saisies.get('DNOCEP', 0) + saisies.get('DNOCEPC', 0) + saisies.get('DNOCEPP', 0) + saisies.get('BNCAADV', 0) + saisies.get('BNCAADC', 0) + saisies.get('BNCAADP', 0)
DEFIBAANT = positif_ou_nul(BAQT + BAHQTOT - min(saisies.get('DAGRI1', 0), DAGRI11731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI1', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI2', 0), DAGRI21731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI2', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI3', 0), DAGRI31731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI3', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI4', 0), DAGRI41731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI4', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI5', 0), DAGRI51731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI5', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI6', 0), DAGRI61731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI6', 0) * 1 - ART1731BIS) * min(saisies.get('DAGRI1', 0), DAGRI11731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI1', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI2', 0), DAGRI21731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI2', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI3', 0), DAGRI31731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI3', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI4', 0), DAGRI41731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI4', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI5', 0), DAGRI51731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI5', 0) * 1 - ART1731BIS - min(saisies.get('DAGRI6', 0), DAGRI61731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI6', 0) * 1 - ART1731BIS + positif_ou_nul(min(saisies.get('DAGRI1', 0), DAGRI11731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI1', 0) * 1 - ART1731BIS + min(saisies.get('DAGRI2', 0), DAGRI21731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI2', 0) * 1 - ART1731BIS + min(saisies.get('DAGRI3', 0), DAGRI31731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI3', 0) * 1 - ART1731BIS + min(saisies.get('DAGRI4', 0), DAGRI41731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI4', 0) * 1 - ART1731BIS + min(saisies.get('DAGRI5', 0), DAGRI51731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI5', 0) * 1 - ART1731BIS + min(saisies.get('DAGRI6', 0), DAGRI61731 + 0) * is_positive(ART1731BIS) + saisies.get('DAGRI6', 0) * 1 - ART1731BIS - BAQT - BAHQTOT) * BAQT + BAHQTOT
DEFNPI = abs(min(DEFNP, sum([BICNPV * is_positive(BICNPV), BICNPC * is_positive(BICNPC), BICNPP * is_positive(BICNPP)]) + MIB_NETNPCT)) * is_positive(BICNPV + BICNPC + BICNPP + MIB_NETNPCT) * 1 - is_positive(ART1731BIS) + ART1731BIS * 1 - PREM8_11 * min(saisies.get('DEFBIC6', 0) + saisies.get('DEFBIC5', 0) + saisies.get('DEFBIC4', 0) + saisies.get('DEFBIC3', 0) + saisies.get('DEFBIC2', 0) + saisies.get('DEFBIC1', 0), max(DEFNPI1731, max(DEFNPI_P, DEFNPIP2)))
DFBICNPF = sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT + DEFNPI + saisies.get('BICDEV', 0) + saisies.get('BICDEC', 0) + saisies.get('BICDEP', 0) + saisies.get('BICHDEV', 0) + saisies.get('BICHDEC', 0) + saisies.get('BICHDEP', 0)
DLMRN2 = is_positive(saisies.get('DEFBIC1', 0)) * 1 - positif_ou_nul(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) * saisies.get('DEFBIC1', 0) + positif_ou_nul(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) * min(max(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - saisies.get('DEFBIC6', 0) - saisies.get('DEFBIC5', 0) - saisies.get('DEFBIC4', 0) - saisies.get('DEFBIC3', 0) - saisies.get('DEFBIC2', 0), 0) - saisies.get('DEFBIC1', 0), saisies.get('DEFBIC1', 0)) * -1 * positif_ou_nul(saisies.get('DEFBIC1', 0) - max(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - saisies.get('DEFBIC6', 0) - saisies.get('DEFBIC5', 0) - saisies.get('DEFBIC4', 0) - saisies.get('DEFBIC3', 0) - saisies.get('DEFBIC2', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFBIC1', 0), DEFNP - DEFNPI) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFBIC1', 0) * is_positive(ART1731BIS * PREM8_11)
DLMRN3 = is_positive(saisies.get('DEFBIC2', 0)) * 1 - positif_ou_nul(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) * saisies.get('DEFBIC2', 0) + positif_ou_nul(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) * min(max(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - saisies.get('DEFBIC6', 0) - saisies.get('DEFBIC5', 0) - saisies.get('DEFBIC4', 0) - saisies.get('DEFBIC3', 0), 0) - saisies.get('DEFBIC2', 0), saisies.get('DEFBIC2', 0)) * -1 * positif_ou_nul(saisies.get('DEFBIC2', 0) - max(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - saisies.get('DEFBIC6', 0) - saisies.get('DEFBIC5', 0) - saisies.get('DEFBIC4', 0) - saisies.get('DEFBIC3', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFBIC2', 0), DEFNP - DEFNPI - DLMRN2) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFBIC2', 0) * is_positive(ART1731BIS * PREM8_11)
DLMRN4 = is_positive(saisies.get('DEFBIC3', 0)) * 1 - positif_ou_nul(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) * saisies.get('DEFBIC3', 0) + positif_ou_nul(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) * min(max(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - saisies.get('DEFBIC6', 0) - saisies.get('DEFBIC5', 0) - saisies.get('DEFBIC4', 0), 0) - saisies.get('DEFBIC3', 0), saisies.get('DEFBIC3', 0)) * -1 * positif_ou_nul(saisies.get('DEFBIC3', 0) - max(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - saisies.get('DEFBIC6', 0) - saisies.get('DEFBIC5', 0) - saisies.get('DEFBIC4', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFBIC3', 0), DEFNP - DEFNPI - DLMRN2 - DLMRN3) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFBIC3', 0) * is_positive(ART1731BIS * PREM8_11)
DLMRN5 = is_positive(saisies.get('DEFBIC4', 0)) * 1 - positif_ou_nul(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) * saisies.get('DEFBIC4', 0) + positif_ou_nul(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) * min(max(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - saisies.get('DEFBIC6', 0) - saisies.get('DEFBIC5', 0), 0) - saisies.get('DEFBIC4', 0), saisies.get('DEFBIC4', 0)) * -1 * positif_ou_nul(saisies.get('DEFBIC4', 0) - max(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - saisies.get('DEFBIC6', 0) - saisies.get('DEFBIC5', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFBIC4', 0), DEFNP - DEFNPI - DLMRN2 - DLMRN3 - DLMRN4) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFBIC4', 0) * is_positive(ART1731BIS * PREM8_11)
DLMRN6 = is_positive(saisies.get('DEFBIC5', 0)) * 1 - positif_ou_nul(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) * saisies.get('DEFBIC5', 0) + positif_ou_nul(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) * min(max(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - saisies.get('DEFBIC6', 0), 0) - saisies.get('DEFBIC5', 0), saisies.get('DEFBIC5', 0)) * -1 * positif_ou_nul(saisies.get('DEFBIC5', 0) - max(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - saisies.get('DEFBIC6', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFBIC5', 0), DEFNP - DEFNPI - DLMRN2 - DLMRN3 - DLMRN4 - DLMRN5) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFBIC5', 0) * is_positive(ART1731BIS * PREM8_11)
DS014 = max(QF014 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF014 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF014 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF014 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF014 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
DS015 = max(QF015 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF015 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF015 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF015 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF015 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
DS016 = max(QF016 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF016 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF016 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF016 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF016 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
FRAR = is_positive(saisies.get('RCMHAB', 0)) * is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(saisies.get('INTERE', 0) + RCMNAB) * round(saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), BRCMTOT + 0) * ART1731BIS * saisies.get('RCMHAB', 0) / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(saisies.get('INTERE', 0) + RCMNAB) * saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), BRCMTOT + 0) * ART1731BIS - FRAN - _2FRAN + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(saisies.get('INTERE', 0) + RCMNAB) * round(saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS * saisies.get('RCMHAB', 0) / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(saisies.get('INTERE', 0) + RCMNAB) * saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - FRAN - _2FRAN
FRDA1 = saisies.get('FRN1', 0) * is_positive(saisies.get('FRN1', 0) - _10MINS1)
FRDA2 = saisies.get('FRN2', 0) * is_positive(saisies.get('FRN2', 0) - _10MINS2)
FRDA3 = saisies.get('FRN3', 0) * is_positive(saisies.get('FRN3', 0) - _10MINS3)
FRDA4 = saisies.get('FRN4', 0) * is_positive(saisies.get('FRN4', 0) - _10MINS4)
FRDAC = saisies.get('FRNC', 0) * is_positive(saisies.get('FRNC', 0) - _10MINSC)
FRDAV = saisies.get('FRNV', 0) * is_positive(saisies.get('FRNV', 0) - _10MINSV)
FRDPROVC = TSBNC + PRC + saisies.get('PALIC', 0) - APRC
FRDV = 1 - is_positive(PREM8_11) * saisies.get('FRNV', 0) * is_positive(saisies.get('FRNV', 0) - _10MINSV) + is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRNV', 0), FRDPROVV) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRNV', 0), min(FRDPROVV, max(FRDPROVVP2, FRDPROVV1731)))
INDEFTSV = positif_ou_nul(TSBV - FRDV)
IND_10V = positif_ou_nul(_10MINSV - FRDV)
IS014 = round(DS014 * NB1)
IS015 = round(DS015 * NB1)
IS016 = round(DS016 * NB1)
LIGBNCDF2 = is_positive(BNCDF2) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGBNCDF3 = is_positive(BNCDF3) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGBNCDF4 = is_positive(BNCDF4) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGBNCDF5 = is_positive(BNCDF5) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGBNCDF6 = is_positive(BNCDF6) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDBAIP = positif_ou_nul(DBAIP) * is_positive(saisies.get('DAGRI1', 0) + saisies.get('DAGRI2', 0) + saisies.get('DAGRI3', 0) + saisies.get('DAGRI4', 0) + saisies.get('DAGRI5', 0) + saisies.get('DAGRI6', 0)) * 1 - is_positive(saisies.get('IPVLOC', 0)) * is_positive(abs(abs(BAHQTOT) + abs(BAQTOT) - saisies.get('DAGRI6', 0) + saisies.get('DAGRI5', 0) + saisies.get('DAGRI4', 0) + saisies.get('DAGRI3', 0) + saisies.get('DAGRI2', 0) + saisies.get('DAGRI1', 0))) * LIG1
LIGDEFBA2 = is_positive(DEFBA2) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDEFBA3 = is_positive(DEFBA3) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDEFBA4 = is_positive(DEFBA4) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDEFBA5 = is_positive(DEFBA5) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDEFBA6 = is_positive(DEFBA6) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDLMRN2 = is_positive(DLMRN2) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDLMRN3 = is_positive(DLMRN3) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDLMRN4 = is_positive(DLMRN4) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDLMRN5 = is_positive(DLMRN5) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDLMRN6 = is_positive(DLMRN6) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
MIBNETNPVLSC = round(MIB_NETNPVLC * saisies.get('MIBGITEC', 0) / saisies.get('MIBGITEC', 0) + saisies.get('LOCGITC', 0))
MIBNPRABC = MIB_ABNPVC + MIB_ABNPPC
MIBNPRABP = MIB_ABNPVP + MIB_ABNPPP
MIBNPRABV = MIB_ABNPVV + MIB_ABNPPV
MIBNPRNETC = max(0, MIBNPRC - MIBNPRABC)
MIBNPRNETP = max(0, MIBNPRP - MIBNPRABP)
MIBNPRNETV = max(0, MIBNPRV - MIBNPRABV)
MIB_ABNPPLP = MIB_APP - MIB_ABPP - MIB_ABNPPP * present(saisies.get('MIBMEUP', 0))
MIB_ABNPPLV = MIB_APV - MIB_ABPV - MIB_ABNPPV * present(saisies.get('MIBMEUV', 0))
MIB_ABNPVLP = MIB_AVP - MIB_ABVP - MIB_ABNPVP * is_positive(present(saisies.get('MIBGITEP', 0)) + present(saisies.get('LOCGITP', 0)))
MIB_ABNPVLV = MIB_AVV - MIB_ABVV - MIB_ABNPVV * is_positive(present(saisies.get('MIBGITEV', 0)) + present(saisies.get('LOCGITV', 0)))
MIB_NETNPPLP = saisies.get('MIBMEUP', 0) - MIB_ABNPPLP
MIB_NETNPPLV = saisies.get('MIBMEUV', 0) - MIB_ABNPPLV
MIB_NETNPVLP = saisies.get('MIBGITEP', 0) + saisies.get('LOCGITP', 0) - MIB_ABNPVLP
MIB_NETNPVLV = saisies.get('MIBGITEV', 0) + saisies.get('LOCGITV', 0) - MIB_ABNPVLV
MLOCABP = MIB_ABNPVLP + MIB_ABNPPLP
MLOCABV = MIB_ABNPVLV + MIB_ABNPPLV
MLOCNETP = max(0, MLOCDECP - MLOCABP)
MLOCNETV = max(0, MLOCDECV - MLOCABV)
NPLOCNETTPAC = NPLOCCGAPAC + NPLOCPAC + MIB_NETNPVLP + MIB_NETNPPLP
NPLOCNETTSC = NPLOCCGASC + NPLOCSC + MIBNETNPVLSC + MIB_NETNPPLC
NPLOCNETTV = NPLOCCGAV + NPLOCV + MIB_NETNPVLV + MIB_NETNPPLV
PFRDV = FRDV + saisies.get('COD1AE', 0) * is_positive(FRDV + saisies.get('COD1AE', 0) - P10MINSV)
PIND_10V = positif_ou_nul(P10MINSV - FRDV + saisies.get('COD1AE', 0))
PLA = PLANT + PLACOMP
PPENBJ = max(1, round(min(PPENBJAN, PPE_FIN - PPE_DEBUT + 1)))
PPESALC = PPE_SALAVDEFC + PPE_RPROC * 1 - is_positive(PPE_RPROC)
PPESALU = PPE_SALAVDEFU + PPE_RPROP * 1 - is_positive(PPE_RPROP) * PPE_BOOL_SEULPAC
PPE_BOOL_MINN = positif_ou_nul(PPE_RTAN - PPELIMRPB) * 1 - PPE_BOOL_NADAN
PPE_BOOL_TP1 = is_positive(is_positive(saisies.get('PPETPP1', 0)) * is_positive(PPE_SALAVDEF1 + 0) + is_zero(saisies.get('PPENHP1', 0) + saisies.get('PPEXT1', 0) + 0) * is_zero(saisies.get('PPETPP1', 0) + 0) * is_positive(PPE_SALAVDEF1) + positif_ou_nul(360 / PPENBJ * saisies.get('PPENHP1', 0) + saisies.get('PPEXT1', 0) * is_positive(PPE_SALAVDEF1 + 0) - 1820))
PPE_BOOL_TP2 = is_positive(is_positive(saisies.get('PPETPP2', 0)) * is_positive(PPE_SALAVDEF2 + 0) + is_zero(saisies.get('PPENHP2', 0) + saisies.get('PPEXT2', 0) + 0) * is_zero(saisies.get('PPETPP2', 0) + 0) * is_positive(PPE_SALAVDEF2) + positif_ou_nul(360 / PPENBJ * saisies.get('PPENHP2', 0) + saisies.get('PPEXT2', 0) * is_positive(PPE_SALAVDEF2 + 0) - 1820))
PPE_BOOL_TP3 = is_positive(is_positive(saisies.get('PPETPP3', 0)) * is_positive(PPE_SALAVDEF3 + 0) + is_zero(saisies.get('PPENHP3', 0) + saisies.get('PPEXT3', 0) + 0) * is_zero(saisies.get('PPETPP3', 0) + 0) * is_positive(PPE_SALAVDEF3) + positif_ou_nul(360 / PPENBJ * saisies.get('PPENHP3', 0) + saisies.get('PPEXT3', 0) * is_positive(PPE_SALAVDEF3 + 0) - 1820))
PPE_BOOL_TP4 = is_positive(is_positive(saisies.get('PPETPP4', 0)) * is_positive(PPE_SALAVDEF4 + 0) + is_zero(saisies.get('PPENHP4', 0) + saisies.get('PPEXT4', 0) + 0) * is_zero(saisies.get('PPETPP4', 0) + 0) * is_positive(PPE_SALAVDEF4) + positif_ou_nul(360 / PPENBJ * saisies.get('PPENHP4', 0) + saisies.get('PPEXT4', 0) * is_positive(PPE_SALAVDEF4 + 0) - 1820))
PPE_BOOL_TPC = is_positive(is_positive(saisies.get('PPETPC', 0) + 0) * is_positive(PPE_SALAVDEFC + 0) + is_zero(saisies.get('PPENHC', 0) + saisies.get('PPEXTC', 0) + 0) * is_zero(saisies.get('PPETPC', 0) + 0) * is_positive(PPE_SALAVDEFC) + is_positive(360 / PPENBJ * saisies.get('PPENHC', 0) + saisies.get('PPEXTC', 0) * is_positive(PPE_SALAVDEFC + 0) / 1820 + saisies.get('PPENJC', 0) * is_positive(PPE_AVRPRO1C + 0) / 360 - 1) + positif_ou_nul(saisies.get('PPENHC', 0) + saisies.get('PPEXTC', 0) * is_positive(PPE_SALAVDEFC + 0) - 1820) + positif_ou_nul(saisies.get('PPENJC', 0) * is_positive(PPE_AVRPRO1C + 0) - 360) + is_positive(saisies.get('PPEACC', 0) * is_positive(PPE_AVRPRO1C + 0) + 0) + 1 - is_positive(saisies.get('PPENJC', 0) * is_positive(PPE_AVRPRO1C + 0)) * is_positive(PPE_AVRPRO1C + 0))
PPE_BOOL_TPN = is_positive(positif_ou_nul(360 / PPENBJ * saisies.get('PPENJP', 0) * is_positive(PPE_AVRPRO1P + 0) - 360) + is_positive(saisies.get('PPEACP', 0) * is_positive(PPE_AVRPRO1P + 0)) + 1 - is_positive(saisies.get('PPENJP', 0) * is_positive(PPE_AVRPRO1P + 0)) * is_positive(PPE_AVRPRO1P + 0))
PPE_BOOL_TPU = is_positive(is_positive(saisies.get('PPETPP1', 0) + saisies.get('PPETPP2', 0) + saisies.get('PPETPP3', 0) + saisies.get('PPETPP4', 0)) * is_positive(PPE_SALAVDEF1 + PPE_SALAVDEF2 + PPE_SALAVDEF3 + PPE_SALAVDEF4) + is_zero(saisies.get('PPENHP1', 0) + saisies.get('PPENHP2', 0) + saisies.get('PPENHP3', 0) + saisies.get('PPENHP4', 0) + saisies.get('PPEXT1', 0) + saisies.get('PPEXT2', 0) + saisies.get('PPEXT3', 0) + saisies.get('PPEXT4', 0) + 0) * is_zero(saisies.get('PPETPP1', 0) + saisies.get('PPETPP2', 0) + saisies.get('PPETPP3', 0) + saisies.get('PPETPP4', 0) + 0) * is_positive(PPE_SALAVDEF1 + PPE_SALAVDEF2 + PPE_SALAVDEF3 + PPE_SALAVDEF4) + is_positive(360 / PPENBJ * saisies.get('PPENHP1', 0) + saisies.get('PPENHP2', 0) + saisies.get('PPENHP3', 0) + saisies.get('PPENHP4', 0) + saisies.get('PPEXT1', 0) + saisies.get('PPEXT2', 0) + saisies.get('PPEXT3', 0) + saisies.get('PPEXT4', 0) * is_positive(PPE_SALAVDEF1 + PPE_SALAVDEF2 + PPE_SALAVDEF3 + PPE_SALAVDEF4) / 1820 + saisies.get('PPENJP', 0) * is_positive(PPE_AVRPRO1P + 0) / 360 - 1) + positif_ou_nul(saisies.get('PPENHP1', 0) + saisies.get('PPENHP2', 0) + saisies.get('PPENHP3', 0) + saisies.get('PPENHP4', 0) + saisies.get('PPEXT1', 0) + saisies.get('PPEXT2', 0) + saisies.get('PPEXT3', 0) + saisies.get('PPEXT4', 0) * is_positive(PPE_SALAVDEF1 + PPE_SALAVDEF2 + PPE_SALAVDEF3 + PPE_SALAVDEF4) - 1820) + positif_ou_nul(saisies.get('PPENJP', 0) * is_positive(PPE_AVRPRO1P + 0) - 360) + is_positive(saisies.get('PPEACP', 0) * is_positive(PPE_AVRPRO1P + 0)) + 1 - is_positive(saisies.get('PPENJP', 0) * is_positive(PPE_AVRPRO1P + 0)) * is_positive(PPE_AVRPRO1P + 0) * PPE_BOOL_SEULPAC)
PPE_BOOL_TPV = is_positive(is_positive(saisies.get('PPETPV', 0) + 0) * is_positive(PPE_SALAVDEFV + 0) + is_zero(saisies.get('PPENHV', 0) + saisies.get('PPEXTV', 0) + 0) * is_zero(saisies.get('PPETPV', 0) + 0) * is_positive(PPE_SALAVDEFV) + is_positive(360 / PPENBJ * saisies.get('PPENHV', 0) + saisies.get('PPEXTV', 0) * is_positive(PPE_SALAVDEFV + 0) / 1820 + saisies.get('PPENJV', 0) * is_positive(PPE_AVRPRO1V + 0) / 360 - 1) + positif_ou_nul(saisies.get('PPENHV', 0) + saisies.get('PPEXTV', 0) * is_positive(PPE_SALAVDEFV + 0) - 1820) + positif_ou_nul(saisies.get('PPENJV', 0) * is_positive(PPE_AVRPRO1V + 0) - 360) + is_positive(saisies.get('PPEACV', 0) * is_positive(PPE_AVRPRO1V + 0) + 0) + 1 - is_positive(saisies.get('PPENJV', 0) * is_positive(PPE_AVRPRO1V + 0)) * is_positive(PPE_AVRPRO1V + 0))
PPE_COEFF1 = PPE_BOOL_TP1 * 360 / PPENBJ + 1 - PPE_BOOL_TP1 / saisies.get('PPENHP1', 0) + saisies.get('PPEXT1', 0) * is_positive(PPE_SALAVDEF1 + 0) / 1820
PPE_COEFF2 = PPE_BOOL_TP2 * 360 / PPENBJ + 1 - PPE_BOOL_TP2 / saisies.get('PPENHP2', 0) + saisies.get('PPEXT2', 0) * is_positive(PPE_SALAVDEF2 + 0) / 1820
PPE_COEFF3 = PPE_BOOL_TP3 * 360 / PPENBJ + 1 - PPE_BOOL_TP3 / saisies.get('PPENHP3', 0) + saisies.get('PPEXT3', 0) * is_positive(PPE_SALAVDEF3 + 0) / 1820
PPE_COEFF4 = PPE_BOOL_TP4 * 360 / PPENBJ + 1 - PPE_BOOL_TP4 / saisies.get('PPENHP4', 0) + saisies.get('PPEXT4', 0) * is_positive(PPE_SALAVDEF4 + 0) / 1820
PPE_COEFFC = PPE_BOOL_TPC * 360 / PPENBJ + 1 - PPE_BOOL_TPC / saisies.get('PPENHC', 0) + saisies.get('PPEXTC', 0) * is_positive(PPE_SALAVDEFC + 0) / 1820 + saisies.get('PPENJC', 0) * is_positive(PPE_AVRPRO1C + 0) / 360
PPE_COEFFCOND1 = 1 - PPE_BOOL_TP1 * is_zero(PPENBJ - 360) * PPE_COEFF1 + 1 - is_zero(PPENBJ - 360) * PPENBJ * 1820 / 360 / saisies.get('PPENHP1', 0) + saisies.get('PPEXT1', 0) * is_positive(PPE_SALAVDEF1 + 0) + saisies.get('PPENJP', 0) * is_positive(PPE_AVRPRO1P + 0) * 1820 / 360
PPE_COEFFCOND2 = 1 - PPE_BOOL_TP2 * is_zero(PPENBJ - 360) * PPE_COEFF2 + 1 - is_zero(PPENBJ - 360) * PPENBJ * 1820 / 360 / saisies.get('PPENHP2', 0) + saisies.get('PPEXT2', 0) * is_positive(PPE_SALAVDEF2 + 0) + saisies.get('PPENJP', 0) * is_positive(PPE_AVRPRO1P + 0) * 1820 / 360
PPE_COEFFCOND3 = 1 - PPE_BOOL_TP3 * is_zero(PPENBJ - 360) * PPE_COEFF3 + 1 - is_zero(PPENBJ - 360) * PPENBJ * 1820 / 360 / saisies.get('PPENHP3', 0) + saisies.get('PPEXT3', 0) * is_positive(PPE_SALAVDEF3 + 0) + saisies.get('PPENJP', 0) * is_positive(PPE_AVRPRO1P + 0) * 1820 / 360
PPE_COEFFCOND4 = 1 - PPE_BOOL_TP4 * is_zero(PPENBJ - 360) * PPE_COEFF4 + 1 - is_zero(PPENBJ - 360) * PPENBJ * 1820 / 360 / saisies.get('PPENHP4', 0) + saisies.get('PPEXT4', 0) * is_positive(PPE_SALAVDEF4 + 0) + saisies.get('PPENJP', 0) * is_positive(PPE_AVRPRO1P + 0) * 1820 / 360
PPE_COEFFCONDC = 1 - PPE_BOOL_TPC * is_zero(PPENBJ - 360) * PPE_COEFFC + 1 - is_zero(PPENBJ - 360) * PPENBJ * 1820 / 360 / saisies.get('PPENHC', 0) + saisies.get('PPEXTC', 0) * is_positive(PPE_SALAVDEFC + 0) + saisies.get('PPENJC', 0) * is_positive(PPE_AVRPRO1C + 0) * 1820 / 360
PPE_COEFFN = PPE_BOOL_TPN * 360 / PPENBJ + 1 - PPE_BOOL_TPN / saisies.get('PPENJP', 0) * is_positive(PPE_AVRPRO1P + 0) / 360
PPE_COEFFU = PPE_BOOL_TPU * 360 / PPENBJ + 1 - PPE_BOOL_TPU / saisies.get('PPENHP1', 0) + saisies.get('PPENHP2', 0) + saisies.get('PPENHP3', 0) + saisies.get('PPENHP4', 0) + saisies.get('PPEXT1', 0) + saisies.get('PPEXT2', 0) + saisies.get('PPEXT3', 0) + saisies.get('PPEXT4', 0) / 1820 + saisies.get('PPENJP', 0) * is_positive(PPE_AVRPRO1P + 0) / 360 * PPE_BOOL_SEULPAC
PPE_COEFFV = PPE_BOOL_TPV * 360 / PPENBJ + 1 - PPE_BOOL_TPV / saisies.get('PPENHV', 0) + saisies.get('PPEXTV', 0) * is_positive(PPE_SALAVDEFV + 0) / 1820 + saisies.get('PPENJV', 0) * is_positive(PPE_AVRPRO1V + 0) / 360
PPE_RCONTP1 = round(PPE_RTA1 * PPE_COEFF1)
PPE_RCONTP2 = round(PPE_RTA2 * PPE_COEFF2)
PPE_RCONTP3 = round(PPE_RTA3 * PPE_COEFF3)
PPE_RCONTP4 = round(PPE_RTA4 * PPE_COEFF4)
PPE_RCONTPN = round(PPE_RTAN * PPE_COEFFN)
PPE_RPRO1V = saisies.get('FEXV', 0) + saisies.get('BAFV', 0) + saisies.get('BAEXV', 0) + saisies.get('BACREV', 0) + _4BACREV - saisies.get('BACDEV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BAHEXV', 0) + saisies.get('BAHREV', 0) + _4BAHREV - saisies.get('BAHDEV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BICEXV', 0) + saisies.get('BICNOV', 0) - saisies.get('BICDNV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BIHEXV', 0) + saisies.get('BIHNOV', 0) - saisies.get('BIHDNV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BNCEXV', 0) + saisies.get('BNCREV', 0) - saisies.get('BNCDEV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('BNHEXV', 0) + saisies.get('BNHREV', 0) - saisies.get('BNHDEV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('MIBEXV', 0) + saisies.get('BNCPROEXV', 0) + TMIB_NETVV + TMIB_NETPV + TSPENETPV + saisies.get('BAFPVV', 0) + saisies.get('MIBPVV', 0) + saisies.get('BNCPROPVV', 0) + saisies.get('BAFORESTV', 0) + saisies.get('LOCPROV', 0) + saisies.get('LOCPROCGAV', 0) - saisies.get('LOCDEFPROCGAV', 0) * 1 - is_positive(ART1731BIS) - saisies.get('LOCDEFPROV', 0) * 1 - is_positive(ART1731BIS) + saisies.get('XHONOAAV', 0) + saisies.get('XHONOV', 0)
PPE_RPROV = is_positive(PPE_RPRO1V) * round(1 + PPETXRPRO / 100 * PPE_RPRO1V) + 1 - is_positive(PPE_RPRO1V) * round(PPE_RPRO1V * 1 - PPETXRPRO / 100)
PPE_RTAC = max(0, PPESALC + PPE_RPROC * is_positive(PPE_RPROC))
PPE_RTAU = max(0, PPESALU + PPE_RPROP * is_positive(PPE_RPROP)) * PPE_BOOL_SEULPAC
PRNNC = EXPRC - APRC
PS_RCM = CS_RCM
RD_RCM = CS_RCM
RISFFIP = max(min(RISFFIP_2, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED - RISFPMEI), 0) * is_positive(1 - is_zero(saisies.get('CODE_2042', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 34)) + max(min(RISFFIP_2, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED - RISFPMEI), 0) * 1 - is_positive(1 - is_zero(saisies.get('CODE_2042', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 34)) * saisies.get('COD9ZA', 0)
SOMDEFTS = saisies.get('FRNV', 0) * is_positive(saisies.get('FRNV', 0) - _10MINSV) + saisies.get('FRNC', 0) * is_positive(saisies.get('FRNC', 0) - _10MINSC) + saisies.get('FRN1', 0) * is_positive(saisies.get('FRN1', 0) - _10MINS1) + saisies.get('FRN2', 0) * is_positive(saisies.get('FRN2', 0) - _10MINS2) + saisies.get('FRN3', 0) * is_positive(saisies.get('FRN3', 0) - _10MINS3) + saisies.get('FRN4', 0) * is_positive(saisies.get('FRN4', 0) - _10MINS4)
SPEABNPV = SPEABV - SPEABPV
SPENETC = SPENETPC + SPENETNPC
SPENETNPV = max(0, saisies.get('BNCNPV', 0) - SPEABNPV)
SPENETV = SPENETPV + SPENETNPV
T10MINS1 = max(min(TTSB1, TDEDMIN1), TDFN1)
T10MINS2 = max(min(TTSB2, TDEDMIN2), TDFN2)
T10MINS3 = max(min(TTSB3, TDEDMIN3), TDFN3)
T10MINS4 = max(min(TTSB4, TDEDMIN4), TDFN4)
T10MINSC = max(min(TTSBC, TDEDMINC), TDFNC)
T10MINSP = T10MINS1 + T10MINS2 + T10MINS3 + T10MINS4
T10MINSV = max(min(TTSBV, TDEDMINV), TDFNV)
TABAVC = ABAVC + _2ABAVC
TABPRC = round(1 - TIND_APBC * min(TAPBC, is_positive(TEXPR1 + TEXPR2 + TEXPR3 + TEXPR4) * TPL_PB * TAPBC / sum([TAPBV * 1 - TIND_APBV, TAPBC * 1 - TIND_APBC, TAPB1 * 1 - TIND_APB1, TAPB2 * 1 - TIND_APB2, TAPB3 * 1 - TIND_APB3, TAPB4 * 1 - TIND_APB4]) + 1 - is_positive(TEXPR1 + TEXPR2 + TEXPR3 + TEXPR4) * max(0, TPL_PB - TABPRV)) + TIND_APBC * TAPBC)
TAPRC = TIND_APBC * TABPRC + 1 - TIND_APBC * min(TABPRC, TPL_PB - 1 - TIND_APBV * TAPRV)
TBICNPABV = round(TMIB_ABNPVV / saisies.get('MIBNPVENV', 0) + TMIB_ABNPPV / saisies.get('MIBNPPRESV', 0))
TBICNPPROVC = max(0, round(TMIB_ABNPVC / saisies.get('MIBNPVENC', 0) + TMIB_ABNPPC / saisies.get('MIBNPPRESC', 0)))
TBICNPPROVP = max(0, round(TMIB_ABNPVP / saisies.get('MIBNPVENP', 0) + TMIB_ABNPPP / saisies.get('MIBNPPRESP', 0)))
TBICPABC = min(TBICPROVC, round(TMIB_ABVC * saisies.get('AUTOBICVC', 0) / saisies.get('MIBVENC', 0) + saisies.get('AUTOBICVC', 0) + TMIB_ABPC * saisies.get('AUTOBICPC', 0) / saisies.get('MIBPRESC', 0) + saisies.get('AUTOBICPC', 0)))
TBICPABP = min(TBICPROVP, round(TMIB_ABVP * saisies.get('AUTOBICVP', 0) / saisies.get('MIBVENP', 0) + saisies.get('AUTOBICVP', 0) + TMIB_ABPP * saisies.get('AUTOBICPP', 0) / saisies.get('MIBPRESP', 0) + saisies.get('AUTOBICPP', 0)))
TBNCNPABC = TBNCTOTABC - TBNCPABC
TBNCNPABP = TBNCTOTABP - TBNCPABP
TBNCPABV = round(TSPEABPV * saisies.get('AUTOBNCV', 0) / saisies.get('BNCPROV', 0) + saisies.get('AUTOBNCV', 0))
TD10M1 = TIND_MIN1 * TDFN1 + 1 - TIND_MIN1 * T10MINS1
TD10M2 = TIND_MIN2 * TDFN2 + 1 - TIND_MIN2 * T10MINS2
TD10M3 = TIND_MIN3 * TDFN3 + 1 - TIND_MIN3 * T10MINS3
TD10M4 = TIND_MIN4 * TDFN4 + 1 - TIND_MIN4 * T10MINS4
TD10MC = TIND_MINC * TDFNC + 1 - TIND_MINC * T10MINSC
TD10MV = TIND_MINV * TDFNV + 1 - TIND_MINV * T10MINSV
TMIB_ABNPPLP = TMIB_APP - TMIB_ABPP - TMIB_ABNPPP * present(saisies.get('MIBMEUP', 0))
TMIB_ABNPPLV = TMIB_APV - TMIB_ABPV - TMIB_ABNPPV * present(saisies.get('MIBMEUV', 0))
TMIB_ABNPVLP = TMIB_AVP - TMIB_ABVP - TMIB_ABNPVP * is_positive(present(saisies.get('MIBGITEP', 0)) + present(saisies.get('LOCGITP', 0)))
TMIB_ABNPVLV = TMIB_AVV - TMIB_ABVV - TMIB_ABNPVV * is_positive(present(saisies.get('MIBGITEV', 0)) + present(saisies.get('LOCGITV', 0)))
TPRNNC = TEXPRC - TAPRC
TRAN = _1RAN + _2RAN
TRCM = TRCM1 + _2RNC + _2RCAV + _2RAO
TSPEABNPV = TSPEABV - TSPEABPV
TSPENETC = TSPENETPC + TSPENETNPC
TSPENETNPV = max(0, saisies.get('BNCNPV', 0) - TSPEABNPV)
TSPENETV = TSPENETPV + TSPENETNPV
VAREDEFLOCNP = min(TOTDEFLOCNP, NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC)
XFPTV = XDFV * XIND_10V + FRDV * 1 - XIND_10V
XTSNTV = XEXTSV - XFPTV
XTSNV = is_positive(XTSNTV) * min(0, XTSNTV) + positif_ou_nul(XTSNTV) * XTSNTV
XTSV = XTSNV - sum([max(0, saisies.get('GLD1V', 0) - ABGL1V), max(0, saisies.get('GLD2V', 0) - ABGL2V), max(0, saisies.get('GLD3V', 0) - ABGL3V)])
_1RAR = 1 - is_positive(EXFR) * saisies.get('RCMHAB', 0) - FRAR + is_positive(EXFR) * 0
_2FRAR = is_positive(saisies.get('INTERE', 0)) * is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(RCMNAB) * round(saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), BRCMTOT + 0) * ART1731BIS * saisies.get('INTERE', 0) / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(RCMNAB) * saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), BRCMTOT + 0) * ART1731BIS - FRAN - _2FRAN - FRAR + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(RCMNAB) * round(saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS * saisies.get('INTERE', 0) / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(RCMNAB) * saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - FRAN - _2FRAN - FRAR
_2RAR = 1 - is_positive(EXFR) * saisies.get('INTERE', 0) - _2FRAR + is_positive(EXFR) * 0
_4BAQTOTNET = is_positive(_4BAQTOT) * max(0, _4BAQTOT + BAHQTOTMIN + BAHQTOTMAXN) * is_positive(1 - ART1731BIS + 1 - is_positive(DEFRIBASUP + DEFRIGLOBSUP) * 1 - PREM8_11) + max(0, min(_4BAQV + _4BAQC + _4BAQP + round(DEFBANIF * PROQDEFBAT), _4BACREV + _4BACREC + _4BACREP + _4BAHREV + _4BAHREC + _4BAHREP * MAJREV)) * is_positive(DEFRIBASUP + DEFRIGLOBSUP) * 1 - PREM8_11
AB10C = APRC
ABICPNETP = saisies.get('AUTOBICVP', 0) + saisies.get('AUTOBICPP', 0) - max(0, TMIB_AUTOAVP - TMIB_ABNPVLP) - max(0, TMIB_AUTOAPP - TMIB_ABNPPLP)
ABICPNETV = saisies.get('AUTOBICVV', 0) + saisies.get('AUTOBICPV', 0) - max(0, TMIB_AUTOAVV - TMIB_ABNPVLV) - max(0, TMIB_AUTOAPV - TMIB_ABNPPLV)
ABNCPNETV = saisies.get('AUTOBNCV', 0) - TBNCPABV
APR1 = IND_APB1 * ABPR1 + 1 - IND_APB1 * min(ABPR1, PL_PB - 1 - IND_APBV * APRV - 1 - IND_APBC * APRC)
APR2 = IND_APB2 * ABPR2 + 1 - IND_APB2 * min(ABPR2, PL_PB - 1 - IND_APBV * APRV - 1 - IND_APBC * APRC - 1 - IND_APB1 * APR1)
APR3 = IND_APB3 * ABPR3 + 1 - IND_APB3 * min(ABPR3, PL_PB - 1 - IND_APBV * APRV - 1 - IND_APBC * APRC - 1 - IND_APB1 * APR1 - 1 - IND_APB2 * APR2)
APR4 = IND_APB4 * ABPR4 + 1 - IND_APB4 * min(ABPR4, PL_PB - 1 - IND_APBV * APRV - 1 - IND_APBC * APRC - 1 - IND_APB1 * APR1 - 1 - IND_APB2 * APR2 - 1 - IND_APB3 * APR3)
AUTOBICPNET = ABICPNETV + ABICPNETC + ABICPNETP
AUTOBNCPNET = ABNCPNETV + ABNCPNETC + ABNCPNETP
BANOR = BAHQTOTMAXP + BAQTOTMIN * 1 - ART1731BIS + BAHQTOTMAXP + BAQTOTMIN + round(DEFBANIF * 1 - PROQDEFBAT) * ART1731BIS * 1 - PREM8_11 + BAHQTOTMAXP + BAQTOTMIN * ART1731BIS * PREM8_11
BAQTOTAVIS = _4BAQTOTNET
BDEV25 = min(max(0, PDEVDUR - BDEV30), saisies.get('CIBOIBAIL', 0) + saisies.get('CINRJBAIL', 0) + saisies.get('TRAMURWC', 0) + saisies.get('TRATOIVG', 0) + saisies.get('TRAVITWT', 0) + saisies.get('CHAUBOISN', 0) + saisies.get('POMPESP', 0) + saisies.get('POMPESR', 0) + saisies.get('CHAUFSOL', 0) + saisies.get('POMPESQ', 0) + saisies.get('ENERGIEST', 0)) * is_positive(is_positive(BQRESS) * is_positive(BQTRAV))
BICNPF = 1 - is_positive(DEFRIBIC) * 1 - PREM8_11 * max(0, sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - DEFNPI) + is_positive(DEFRIBIC) * 1 - PREM8_11 * max(0, sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - DEFNPI + DEFBICNPF)
BIN = BICPF + BICNPF
BNCDF1 = 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * abs(NOCEPIMP + SPENETNPF) + positif_ou_nul(NOCEPIMP + SPENETNPF) * positif_ou_nul(saisies.get('DABNCNP5', 0) + saisies.get('DABNCNP4', 0) + saisies.get('DABNCNP3', 0) + saisies.get('DABNCNP2', 0) + saisies.get('DABNCNP1', 0) - NOCEPIMP - SPENETNPF) * saisies.get('DABNCNP5', 0) + saisies.get('DABNCNP4', 0) + saisies.get('DABNCNP3', 0) + saisies.get('DABNCNP2', 0) + saisies.get('DABNCNP1', 0) - NOCEPIMP - SPENETNPF * is_zero(BNCDF6 + BNCDF5 + BNCDF4 + BNCDF3 + BNCDF2) * 1 - is_positive(ART1731BIS) + DEFBNCNPF * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DNOCEP', 0) + saisies.get('DNOCEPC', 0) + saisies.get('DNOCEPP', 0) + saisies.get('BNCAADV', 0) + saisies.get('BNCAADC', 0) + saisies.get('BNCAADP', 0) * is_positive(ART1731BIS * PREM8_11)
BNCIF = 1 - is_positive(ART1731BIS) * max(0, NOCEPIMP + SPENETNPF - saisies.get('DABNCNP6', 0) - saisies.get('DABNCNP5', 0) - saisies.get('DABNCNP4', 0) - saisies.get('DABNCNP3', 0) - saisies.get('DABNCNP2', 0) - saisies.get('DABNCNP1', 0)) + is_positive(ART1731BIS) * 1 - is_positive(DEFRIBNC) * 1 - PREM8_11 * max(0, NOCEPIMP + SPENETNPF - DIDABNCNP) + is_positive(DEFRIBNC) * 1 - PREM8_11 * max(0, NOCEPIMP + SPENETNPF - DIDABNCNP + DEFBNCNP)
BNNC = BNRC + SPENETC
BNNV = BNRV + SPENETV
CDEVDUR_NBJ = PPENBJ
DALNP = 1 - is_positive(saisies.get('IPVLOC', 0)) * BNCDF1 + BNCDF2 + BNCDF3 + BNCDF4 + BNCDF5 + BNCDF6
DEFNPLOCF = min(0, NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - TOTDEFLOCNPBIS - saisies.get('LNPRODEF10', 0))
DFRCMNBIS = is_positive(RCMAB + RTCAR + RCMNAB) * 1 - is_positive(RTNC + RAVC + RCMPRIVM) * max(0, saisies.get('RCMFR', 0) - RCMAB - RTCAR - RCMNAB) + 1 - is_positive(RCMAB + RTCAR + RCMNAB) * is_positive(RTNC + RAVC + RCMPRIVM) * max(0, saisies.get('RCMFR', 0) - RTNC - RAVC - TABAVC - RCMPRIVM) + is_positive(RCMAB + RTCAR + RCMNAB) * is_positive(RTNC + RAVC + RCMPRIVM) * max(0, saisies.get('RCMFR', 0) - RCMAB - RCMNAB - RTNC - RAVC - TABAVC - RTCAR - RCMPRIVM) + 1 - is_positive(RCMAB + RTCAR + RCMNAB) * 1 - is_positive(RTNC + RAVC + RCMPRIVM) * max(0, saisies.get('RCMFR', 0))
DLMRN1 = 1 - positif_ou_nul(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) * abs(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) + positif_ou_nul(sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) * positif_ou_nul(saisies.get('DEFBIC5', 0) + saisies.get('DEFBIC4', 0) + saisies.get('DEFBIC3', 0) + saisies.get('DEFBIC2', 0) + saisies.get('DEFBIC1', 0) - sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT) * saisies.get('DEFBIC5', 0) + saisies.get('DEFBIC4', 0) + saisies.get('DEFBIC3', 0) + saisies.get('DEFBIC2', 0) + saisies.get('DEFBIC1', 0) - sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT * is_zero(DLMRN6 + DLMRN5 + DLMRN4 + DLMRN3 + DLMRN2) * 1 - is_positive(ART1731BIS) + DEFBICNPF * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('BICHDEV', 0) + saisies.get('BICHDEC', 0) + saisies.get('BICHDEP', 0) + saisies.get('BICDEV', 0) + saisies.get('BICDEC', 0) + saisies.get('BICDEP', 0) * is_positive(ART1731BIS * PREM8_11)
DLMRNTXM = max(0, DEFNP - BICNPV * is_positive(BICNPV) - BICNPC * is_positive(BICNPC) - BICNPP * is_positive(BICNPP) + MIB_NETCT + MIB_NETNPCT + SPENETCT + SPENETNPCT + DLMRN1)
DNPLOCIMPU = 1 - DEFRILOC * 1 - PREM8_11 * max(0, min(TOTDEFLOCNP, NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC)) + is_positive(DEFRILOC) * 1 - PREM8_11 * min(saisies.get('LNPRODEF10', 0) + saisies.get('LNPRODEF9', 0) + saisies.get('LNPRODEF8', 0) + saisies.get('LNPRODEF7', 0) + saisies.get('LNPRODEF6', 0) + saisies.get('LNPRODEF5', 0) + saisies.get('LNPRODEF4', 0) + saisies.get('LNPRODEF3', 0) + saisies.get('LNPRODEF2', 0) + saisies.get('LNPRODEF1', 0), max(DNPLOCIMPU1731, max(DNPLOCIMPU_P, DNPLOCIMPUP2)))
F10AV = max(FRDAV, DFNV) if (IND_10V == 0 or IND_10V == 1 and IND_10MIN_0V == 0) else 0
F10BV = _10MINSV if (IND_10V == 1 and IND_10MIN_0V == 1) else 0
FPTV = max(FRDV, _10MINSV)
FRAU = is_positive(saisies.get('RCMHAD', 0)) * is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(saisies.get('DISQUO', 0)) * round(saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), BRCMTOT + 0) * ART1731BIS * saisies.get('RCMHAD', 0) / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(saisies.get('DISQUO', 0)) * saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), BRCMTOT + 0) * ART1731BIS - FRAN - _2FRAN - FRAR - _2FRAR + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(saisies.get('DISQUO', 0)) * round(saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS * saisies.get('RCMHAD', 0) / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(saisies.get('DISQUO', 0)) * saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - FRAN - _2FRAN - FRAR - _2FRAR
FRDC = 1 - is_positive(PREM8_11) * saisies.get('FRNC', 0) * is_positive(saisies.get('FRNC', 0) - _10MINSC) + is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRNC', 0), FRDPROVC) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRNC', 0), min(FRDPROVC, max(FRDPROVCP2, FRDPROVC1731)))
FRDPROV1 = TSBN1 + saisies.get('PRBR1', 0) + saisies.get('PALI1', 0) - APR1
FRDPROV2 = TSBN2 + saisies.get('PRBR2', 0) + saisies.get('PALI2', 0) - APR2
FRDPROV3 = TSBN3 + saisies.get('PRBR3', 0) + saisies.get('PALI3', 0) - APR3
FRDPROV4 = TSBN4 + saisies.get('PRBR4', 0) + saisies.get('PALI4', 0) - APR4
FRDPROVP = FRDPROV1 + FRDPROV2 + FRDPROV3 + FRDPROV4
FRDVREP = is_positive(ART1731BIS) * max(0, saisies.get('FRNV', 0) - FRDV) * is_zero(IND_10V) + max(0, FRNV1731 - _10MINSV) * IND_10V * is_positive(FRNV1731)
FRG1 = is_positive(EXFR) * round(EXFR * TRCM1 / TRCM) + 1 - is_positive(EXFR) * 0
FRG2 = is_positive(EXFR) * min(round(EXFR * _2RNC / TRCM), EXFR - FRG1) + 1 - is_positive(EXFR) * 0
FRG3 = is_positive(EXFR) * min(round(EXFR * _2RCAV / TRCM), EXFR - FRG1 - FRG2) + 1 - is_positive(EXFR) * 0
FRG5 = is_positive(EXFR) * max(0, EXFR - FRG1 - FRG2 - FRG3) + 1 - is_positive(EXFR) * 0
IN04 = max(IS014, IS024 - PLA)
IN05 = max(IS015, IS025 - PLA)
IN06 = max(IS016, IS026 - PLA)
INDEFTSC = positif_ou_nul(TSBC - FRDC)
INDPL = is_zero(PLA - PLAF_CDPART)
IND_10C = positif_ou_nul(_10MINSC - FRDC)
IPQ05 = IN05
LIG10V = positif_ou_nul(TSBNV + PRBV + saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0) + is_positive(F10AV * is_zero(TSBNV + PRBV + saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0))))
LIG3250 = is_positive(DALNP) * LIG1 * LIG2
LIGBNCDF = is_positive(BNCDF1 + BNCDF2 + BNCDF3 + BNCDF4 + BNCDF5 + BNCDF6) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGBNCDF1 = is_positive(BNCDF1) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGBNCIF = is_positive(LIGNOCEP) * 1 - is_positive(LIG3250) + is_zero(BNCIF) + is_zero(BNCIF) * is_positive(LIGBNCDF) + is_zero(BNCIF) * 1 - positif_ou_nul(NOCEPIMP + SPENETNPF - saisies.get('DABNCNP6', 0) - saisies.get('DABNCNP5', 0) - saisies.get('DABNCNP4', 0) - saisies.get('DABNCNP3', 0) - saisies.get('DABNCNP2', 0) - saisies.get('DABNCNP1', 0)) + is_positive(LIGDEFBNCNPF) + is_positive(present(saisies.get('DABNCNP6', 0)) + present(saisies.get('DABNCNP5', 0)) + present(saisies.get('DABNCNP4', 0)) + present(saisies.get('DABNCNP3', 0)) + present(saisies.get('DABNCNP2', 0)) + present(saisies.get('DABNCNP1', 0)) + present(saisies.get('BNCAADV', 0)) + present(saisies.get('DNOCEPC', 0)) + present(saisies.get('DNOCEPP', 0)) + present(saisies.get('BNCAADC', 0)) + present(saisies.get('BNCAADP', 0)) + present(saisies.get('DNOCEP', 0)) + present(saisies.get('BNCNPV', 0)) + present(saisies.get('BNCNPC', 0)) + present(saisies.get('BNCNPP', 0)) + present(saisies.get('BNCNPPVV', 0)) + present(saisies.get('BNCNPPVC', 0)) + present(saisies.get('BNCNPPVP', 0)) + present(saisies.get('BNCAABV', 0)) + present(saisies.get('ANOCEP', 0)) + present(saisies.get('BNCAABC', 0)) + present(saisies.get('ANOVEP', 0)) + present(saisies.get('BNCAABP', 0)) + present(saisies.get('ANOPEP', 0))) * 1 - is_positive(LIGSPENPNEG + LIGSPENPPOS) * LIG0 * LIG2
LIGDLMRN = is_positive(DLMRN6 + DLMRN5 + DLMRN4 + DLMRN3 + DLMRN2 + DLMRN1) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDLMRN1 = is_positive(DLMRN1) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGF10V = is_positive(F10AV + F10BV) * LIG0 * LIG2
LIGMLOCAB = is_positive(MLOCABV + MLOCABC + MLOCABP) * LIG0 * LIG2
MIBNETNPVLNSC = MIB_NETNPVLC - MIBNETNPVLSC
MIBNETNPVLSP = round(MIB_NETNPVLP * saisies.get('MIBGITEP', 0) / saisies.get('MIBGITEP', 0) + saisies.get('LOCGITP', 0))
MIBNETNPVLSV = round(MIB_NETNPVLV * saisies.get('MIBGITEV', 0) / saisies.get('MIBGITEV', 0) + saisies.get('LOCGITV', 0))
NPLOCNETF = is_positive(1 - is_positive(DEFRILOC) + PREM8_11) * max(0, NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - DNPLOCIMPU) + is_positive(DEFRILOC) * 1 - PREM8_11 * max(0, NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - DNPLOCIMPU + DEFLOCNPF)
NPLOCNETF10 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(saisies.get('LNPRODEF10', 0), LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF10', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF9', 0), LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF9', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
NPLOCNETF2 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(saisies.get('LNPRODEF10', 0), LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF10', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF9', 0), LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF9', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF8', 0), LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF8', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF7', 0), LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF7', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF6', 0), LNPRODEF61731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF6', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF5', 0), LNPRODEF51731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF5', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF4', 0), LNPRODEF41731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF4', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF3', 0), LNPRODEF31731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF3', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF2', 0), LNPRODEF21731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF2', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF1', 0), LNPRODEF11731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF1', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
NPLOCNETF3 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(saisies.get('LNPRODEF10', 0), LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF10', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF9', 0), LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF9', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF8', 0), LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF8', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF7', 0), LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF7', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF6', 0), LNPRODEF61731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF6', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF5', 0), LNPRODEF51731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF5', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF4', 0), LNPRODEF41731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF4', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF3', 0), LNPRODEF31731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF3', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF2', 0), LNPRODEF21731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF2', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
NPLOCNETF4 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(saisies.get('LNPRODEF10', 0), LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF10', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF9', 0), LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF9', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF8', 0), LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF8', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF7', 0), LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF7', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF6', 0), LNPRODEF61731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF6', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF5', 0), LNPRODEF51731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF5', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF4', 0), LNPRODEF41731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF4', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF3', 0), LNPRODEF31731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF3', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
NPLOCNETF5 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(saisies.get('LNPRODEF10', 0), LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF10', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF9', 0), LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF9', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF8', 0), LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF8', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF7', 0), LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF7', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF6', 0), LNPRODEF61731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF6', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF5', 0), LNPRODEF51731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF5', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF4', 0), LNPRODEF41731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF4', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
NPLOCNETF6 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(saisies.get('LNPRODEF10', 0), LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF10', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF9', 0), LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF9', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF8', 0), LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF8', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF7', 0), LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF7', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF6', 0), LNPRODEF61731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF6', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF5', 0), LNPRODEF51731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF5', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
NPLOCNETF7 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(saisies.get('LNPRODEF10', 0), LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF10', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF9', 0), LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF9', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF8', 0), LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF8', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF7', 0), LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF7', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF6', 0), LNPRODEF61731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF6', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
NPLOCNETF8 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(saisies.get('LNPRODEF10', 0), LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF10', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF9', 0), LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF9', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF8', 0), LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF8', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF7', 0), LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF7', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
NPLOCNETF9 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(saisies.get('LNPRODEF10', 0), LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF10', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF9', 0), LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF9', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('LNPRODEF8', 0), LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + saisies.get('LNPRODEF8', 0) * 1 - is_positive(ART1731BIS * PREM8_11)
NPLOCNETFHDEFANT = max(0, NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC)
NPLOCNETTSP = NPLOCCGASP + NPLOCSP + MIBNETNPVLSP + MIB_NETNPPLP
NPLOCNETTSV = NPLOCCGASV + NPLOCSV + MIBNETNPVLSV + MIB_NETNPPLV
PFPTV = max(PFRDV, P10MINSV)
PFRDC = FRDC + saisies.get('COD1BE', 0) * is_positive(FRDC + saisies.get('COD1BE', 0) - P10MINSC)
PIND_10C = positif_ou_nul(P10MINSC - FRDC + saisies.get('COD1BE', 0))
PPECOEFF1 = round(PPE_COEFFCOND1 * 100)
PPECOEFF2 = round(PPE_COEFFCOND2 * 100)
PPECOEFF3 = round(PPE_COEFFCOND3 * 100)
PPECOEFF4 = round(PPE_COEFFCOND4 * 100)
PPECOEFFC = round(PPE_COEFFCONDC * 100)
PPESALV = PPE_SALAVDEFV + PPE_RPROV * 1 - is_positive(PPE_RPROV)
PPETEMPS1 = round(1 / PPE_COEFF1 * 100)
PPETEMPS2 = round(1 / PPE_COEFF2 * 100)
PPETEMPS3 = round(1 / PPE_COEFF3 * 100)
PPETEMPS4 = round(1 / PPE_COEFF4 * 100)
PPETEMPSC = round(1 / PPE_COEFFC * 100)
PPETEMPSN = round(1 / PPE_COEFFN * 100)
PPETEMPSU = round(1 / PPE_COEFFU * 100)
PPETEMPSV = round(1 / PPE_COEFFV * 100)
PPE_BOOL_MAX1 = positif_ou_nul(PPELIMRPH - PPE_RCONTP1)
PPE_BOOL_MAX2 = positif_ou_nul(PPELIMRPH - PPE_RCONTP2)
PPE_BOOL_MAX3 = positif_ou_nul(PPELIMRPH - PPE_RCONTP3)
PPE_BOOL_MAX4 = positif_ou_nul(PPELIMRPH - PPE_RCONTP4)
PPE_BOOL_MAXN = positif_ou_nul(PPELIMRPH - PPE_RCONTPN)
PPE_BOOL_MINC = positif_ou_nul(PPE_RTAC - PPELIMRPB) * 1 - PPE_BOOL_NADAC
PPE_BOOL_MINU = positif_ou_nul(PPE_RTAU - PPELIMRPB) * 1 - PPE_BOOL_NADAU
PPE_COEFFCONDN = 1 - PPE_BOOL_TPN * is_zero(PPENBJ - 360) * PPE_COEFFN + 1 - is_zero(PPENBJ - 360) * PPENBJ * 1820 / 360 / saisies.get('PPENHP1', 0) + saisies.get('PPENHP2', 0) + saisies.get('PPENHP3', 0) + saisies.get('PPENHP4', 0) + saisies.get('PPEXT1', 0) + saisies.get('PPEXT2', 0) + saisies.get('PPEXT3', 0) + saisies.get('PPEXT4', 0) + saisies.get('PPENJP', 0) * is_positive(PPE_AVRPRO1P + 0) * 1820 / 360
PPE_COEFFCONDU = 1 - PPE_BOOL_TPU * is_zero(PPENBJ - 360) * PPE_COEFFU + 1 - is_zero(PPENBJ - 360) * PPENBJ * 1820 / 360 / saisies.get('PPENHP1', 0) + saisies.get('PPENHP2', 0) + saisies.get('PPENHP3', 0) + saisies.get('PPENHP4', 0) + saisies.get('PPEXT1', 0) + saisies.get('PPEXT2', 0) + saisies.get('PPEXT3', 0) + saisies.get('PPEXT4', 0) + saisies.get('PPENJP', 0) * is_positive(PPE_AVRPRO1P + 0) * 1820 / 360
PPE_COEFFCONDV = 1 - PPE_BOOL_TPV * is_zero(PPENBJ - 360) * PPE_COEFFV + 1 - is_zero(PPENBJ - 360) * PPENBJ * 1820 / 360 / saisies.get('PPENHV', 0) + saisies.get('PPEXTV', 0) * is_positive(PPE_SALAVDEFV + 0) + saisies.get('PPENJV', 0) * is_positive(PPE_AVRPRO1V + 0) * 1820 / 360
PPE_RCONTPC = round(PPE_RTAC * PPE_COEFFC)
PPE_RCONTPU = round(PPE_RTAU * PPE_COEFFU)
PPE_RTAV = max(0, PPESALV + PPE_RPROV * is_positive(PPE_RPROV))
PREP10V = PIND_10V * PD10MV + 1 - PIND_10V * PFPTV
PRNN1 = EXPR1 - APR1
PRNN2 = EXPR2 - APR2
PRNN3 = EXPR3 - APR3
PRNN4 = EXPR4 - APR4
PRNNP = PRNN1 + PRNN2 + PRNN3 + PRNN4
RBAT = max(0, BANOR)
REP10V = IND_10V * D10MV + 1 - IND_10V * FPTV
REPCT = min(0, MIB_NETNPCT) * is_positive(saisies.get('MIBNPDCT', 0)) * is_positive(DLMRN1) + min(0, SPENETNPCT) * is_positive(saisies.get('BNCNPDCT', 0)) * is_positive(BNCDF1) * -1
RISFFCPI = max(min(RISFFCPI_2, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED - RISFPMEI - RISFFIP), 0) * is_positive(1 - is_zero(saisies.get('CODE_2042', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 34)) + max(min(RISFFCPI_2, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED - RISFPMEI - RISFFIP), 0) * 1 - is_positive(1 - is_zero(saisies.get('CODE_2042', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 8) * 1 - is_zero(saisies.get('CMAJ_ISF', 0) - 34)) * saisies.get('COD9ZA', 0)
RNAVC = RAVC - TABAVC
TABPR1 = round(1 - TIND_APB1 * min(TAPB1, is_positive(TEXPR2 + TEXPR3 + TEXPR4) * TPL_PB * TAPB1 / sum([TAPBV * 1 - TIND_APBV, TAPBC * 1 - TIND_APBC, TAPB1 * 1 - TIND_APB1, TAPB2 * 1 - TIND_APB2, TAPB3 * 1 - TIND_APB3, TAPB4 * 1 - TIND_APB4]) + 1 - is_positive(TEXPR2 + TEXPR3 + TEXPR4) * max(0, TPL_PB - TABPRV - TABPRC)) + TIND_APB1 * TAPB1)
TABPR2 = round(1 - TIND_APB2 * min(TAPB2, is_positive(TEXPR3 + TEXPR4) * TPL_PB * TAPB2 / sum([TAPBV * 1 - TIND_APBV, TAPBC * 1 - TIND_APBC, TAPB1 * 1 - TIND_APB1, TAPB2 * 1 - TIND_APB2, TAPB3 * 1 - TIND_APB3, TAPB4 * 1 - TIND_APB4]) + 1 - is_positive(TEXPR3 + TEXPR4) * max(0, TPL_PB - TABPRV - TABPRC - TABPR1)) + TIND_APB2 * TAPB2)
TABPR3 = round(1 - TIND_APB3 * min(TAPB3, is_positive(TEXPR4) * TPL_PB * TAPB3 / sum([TAPBV * 1 - TIND_APBV, TAPBC * 1 - TIND_APBC, TAPB1 * 1 - TIND_APB1, TAPB2 * 1 - TIND_APB2, TAPB3 * 1 - TIND_APB3, TAPB4 * 1 - TIND_APB4]) + 1 - is_positive(TEXPR4) * max(0, TPL_PB - TABPRV - TABPRC - TABPR1 - TABPR2)) + TIND_APB3 * TAPB3)
TABPR4 = round(1 - TIND_APB4 * min(TAPB4, max(0, TPL_PB - TABPRV - TABPRC - TABPR1 - TABPR2 - TABPR3)) + TIND_APB4 * TAPB4)
TAPR1 = TIND_APB1 * TABPR1 + 1 - TIND_APB1 * min(TABPR1, TPL_PB - 1 - TIND_APBV * TAPRV - 1 - TIND_APBC * TAPRC)
TAPR2 = TIND_APB2 * TABPR2 + 1 - TIND_APB2 * min(TABPR2, TPL_PB - 1 - TIND_APBV * TAPRV - 1 - TIND_APBC * TAPRC - 1 - TIND_APB1 * TAPR1)
TAPR3 = TIND_APB3 * TABPR3 + 1 - TIND_APB3 * min(TABPR3, TPL_PB - 1 - TIND_APBV * TAPRV - 1 - TIND_APBC * TAPRC - 1 - TIND_APB1 * TAPR1 - 1 - TIND_APB2 * TAPR2)
TAPR4 = TIND_APB4 * TABPR4 + 1 - TIND_APB4 * min(TABPR4, TPL_PB - 1 - TIND_APBV * TAPRV - 1 - TIND_APBC * TAPRC - 1 - TIND_APB1 * TAPR1 - 1 - TIND_APB2 * TAPR2 - 1 - TIND_APB3 * TAPR3)
TBICNPABC = min(TBICNPPROVC, round(TMIB_ABNPVC / saisies.get('MIBNPVENC', 0) + TMIB_ABNPPC / saisies.get('MIBNPPRESC', 0)))
TBICNPABP = min(TBICNPPROVP, round(TMIB_ABNPVP / saisies.get('MIBNPVENP', 0) + TMIB_ABNPPP / saisies.get('MIBNPPRESP', 0)))
TBNCNPABV = TBNCTOTABV - TBNCPABV
TFRDPROV1 = TTSBN1 + saisies.get('PRBR1', 0) + saisies.get('PALI1', 0) - TAPR1
TFRDPROV2 = TTSBN2 + saisies.get('PRBR2', 0) + saisies.get('PALI2', 0) - TAPR2
TFRDPROV3 = TTSBN3 + saisies.get('PRBR3', 0) + saisies.get('PALI3', 0) - TAPR3
TFRDPROV4 = TTSBN4 + saisies.get('PRBR4', 0) + saisies.get('PALI4', 0) - TAPR4
TFRDPROVP = TFRDPROV1 + TFRDPROV2 + TFRDPROV3 + TFRDPROV4
TPRNN1 = TEXPR1 - TAPR1
TPRNN2 = TEXPR2 - TAPR2
TPRNN3 = TEXPR3 - TAPR3
TPRNN4 = TEXPR4 - TAPR4
TRAR = _1RAR + _2RAR
XETSNNV = round(is_positive(XTSNV) * XTSNV * saisies.get('XETRANV', 0) / XEXTSV) * XIND_10V + 1 - XIND_10V * saisies.get('XETRANV', 0)
XEXOCETV = round(is_positive(XTSNV) * XTSNV * saisies.get('EXOCETV', 0) / XEXTSV) * XIND_10V + 1 - XIND_10V * saisies.get('EXOCETV', 0)
XFPTC = XDFC * XIND_10C + FRDC * 1 - XIND_10C
XTSNNV = round(is_positive(XTSNV) * XTSNV * saisies.get('TSASSUV', 0) / XEXTSV) * XIND_10V + 1 - XIND_10V * saisies.get('TSASSUV', 0)
XTSNTC = XEXTSC - XFPTC
_1RAU = 1 - is_positive(EXFR) * saisies.get('RCMHAD', 0) - FRAU + is_positive(EXFR) * 0
_2FRAU = is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), BRCMTOT + 0) * ART1731BIS - FRAN - _2FRAN - FRAR - _2FRAR - FRAU * is_positive(saisies.get('DISQUO', 0)) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * saisies.get('RCMFR', 0) * 1 - is_positive(ART1731BIS) + min(saisies.get('RCMFR', 0), max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - FRAN - _2FRAN - FRAR - _2FRAR - FRAU * is_positive(saisies.get('DISQUO', 0))
_2RAU = 1 - is_positive(EXFR) * saisies.get('DISQUO', 0) - _2FRAU + is_positive(EXFR) * 0
AB10P = APR1 + APR2 + APR3 + APR4
ABTS1AJ = is_positive(saisies.get('TSHALLOV', 0)) * round(REP10V * saisies.get('TSHALLOV', 0) / TSBV)
ABTS1AP = is_positive(saisies.get('ALLOV', 0)) * is_positive(saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0) + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(REP10V * saisies.get('ALLOV', 0) / TSBV) + 1 - is_positive(saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0) + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, REP10V - ABTS1AJ)
ABTS3VJ = is_positive(saisies.get('BPCOSAV', 0)) * is_positive(saisies.get('GLDGRATV', 0) + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(REP10V * saisies.get('BPCOSAV', 0) / TSBV) + 1 - is_positive(saisies.get('GLDGRATV', 0) + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, REP10V - ABTS1AJ - ABTS1AP)
BCOS = max(0, min(saisies.get('RDSYVO', 0) + 0, round(TX_BASECOTSYN / 100 * TSBV * IND_10V - saisies.get('BPCOSAV', 0) + EXPRV))) + max(0, min(saisies.get('RDSYCJ', 0) + 0, round(TX_BASECOTSYN / 100 * TSBC * IND_10C - saisies.get('BPCOSAC', 0) + EXPRC))) + min(saisies.get('RDSYPP', 0) + 0, round(TX_BASECOTSYN / 100 * sum([TSB1 * IND_101 + EXPR1, TSB2 * IND_102 + EXPR2, TSB3 * IND_103 + EXPR3, TSB4 * IND_104 + EXPR4])))
BDEV15 = min(max(0, PDEVDUR - BDEV30 - BDEV25), saisies.get('CRENRJ', 0) + saisies.get('CINRJ', 0) + saisies.get('CIDEP15', 0) + saisies.get('MATISOSI', 0) + saisies.get('MATISOSJ', 0) + saisies.get('VOLISO', 0) + saisies.get('PORENT', 0) + saisies.get('DIAGPERF', 0) + saisies.get('RESCHAL', 0)) * is_positive(is_positive(BQRESS) * is_positive(BQTRAV)) + min(max(0, PDEVDUR - BDEV30), saisies.get('CIBOIBAIL', 0) + saisies.get('CINRJBAIL', 0) + saisies.get('CRENRJ', 0) + saisies.get('TRAMURWC', 0) + saisies.get('CINRJ', 0) + saisies.get('TRATOIVG', 0) + saisies.get('CIDEP15', 0) + saisies.get('MATISOSI', 0) + saisies.get('TRAVITWT', 0) + saisies.get('MATISOSJ', 0) + saisies.get('VOLISO', 0) + saisies.get('PORENT', 0) + saisies.get('CHAUBOISN', 0) + saisies.get('POMPESP', 0) + saisies.get('POMPESR', 0) + saisies.get('CHAUFSOL', 0) + saisies.get('POMPESQ', 0) + saisies.get('ENERGIEST', 0) + saisies.get('DIAGPERF', 0) + saisies.get('RESCHAL', 0) * 1 - present(saisies.get('COD7WX', 0)) + present(saisies.get('COD7WX', 0)) * saisies.get('COD7WX', 0)) * is_positive(is_positive(BQRESS) * is_zero(BQTRAV) * is_positive(RESS) * 1 - present(saisies.get('CRECHOBOI', 0))) + min(max(0, PDEVDUR - BDEV30), saisies.get('CIBOIBAIL', 0) + saisies.get('CINRJBAIL', 0) + saisies.get('CRENRJ', 0) + saisies.get('TRAMURWC', 0) + saisies.get('CINRJ', 0) + saisies.get('TRATOIVG', 0) + saisies.get('CIDEP15', 0) + saisies.get('MATISOSI', 0) + saisies.get('CHAUBOISN', 0) + saisies.get('POMPESP', 0) + saisies.get('POMPESR', 0) + saisies.get('CHAUFSOL', 0) + saisies.get('POMPESQ', 0) + saisies.get('ENERGIEST', 0) + saisies.get('DIAGPERF', 0) + saisies.get('RESCHAL', 0) * 1 - present(saisies.get('COD7WX', 0)) + present(saisies.get('COD7WX', 0)) * saisies.get('COD7WX', 0)) * is_positive(is_positive(BQRESS) * is_zero(BQTRAV) * is_positive(RESS) * present(saisies.get('CRECHOBOI', 0)))
CIDEVDUR = round(BDEV30 * TX30 / 100 + BDEV25 * TX25 / 100 + BDEV15 * TX15 / 100) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * 1 - V_CNR
CISYND = round(TX_REDCOTSYN / 100 * BCOS) * 1 - V_CNR
DEDSV = _10MINSV - DFNV * 1 - is_positive(F10BV) * IND_10V
DEFLOC2 = 1 - is_positive(NPLOCNETF2) * abs(min(max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0) - saisies.get('LNPRODEF7', 0) - saisies.get('LNPRODEF6', 0) - saisies.get('LNPRODEF5', 0) - saisies.get('LNPRODEF4', 0) - saisies.get('LNPRODEF3', 0) - saisies.get('LNPRODEF2', 0), 0) - saisies.get('LNPRODEF1', 0), saisies.get('LNPRODEF1', 0))) * positif_ou_nul(saisies.get('LNPRODEF1', 0) - max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0) - saisies.get('LNPRODEF7', 0) - saisies.get('LNPRODEF6', 0) - saisies.get('LNPRODEF5', 0) - saisies.get('LNPRODEF4', 0) - saisies.get('LNPRODEF3', 0) - saisies.get('LNPRODEF2', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('LNPRODEF1', 0), TOTDEFLOCNP - DNPLOCIMPU) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('LNPRODEF1', 0) * ART1731BIS * is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFLOC3 = 1 - is_positive(NPLOCNETF3) * abs(min(max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0) - saisies.get('LNPRODEF7', 0) - saisies.get('LNPRODEF6', 0) - saisies.get('LNPRODEF5', 0) - saisies.get('LNPRODEF4', 0) - saisies.get('LNPRODEF3', 0), 0) - saisies.get('LNPRODEF2', 0), saisies.get('LNPRODEF2', 0))) * positif_ou_nul(saisies.get('LNPRODEF2', 0) - max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0) - saisies.get('LNPRODEF7', 0) - saisies.get('LNPRODEF6', 0) - saisies.get('LNPRODEF5', 0) - saisies.get('LNPRODEF4', 0) - saisies.get('LNPRODEF3', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('LNPRODEF2', 0), TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('LNPRODEF2', 0) * ART1731BIS * is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFLOC4 = 1 - is_positive(NPLOCNETF4) * abs(min(max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0) - saisies.get('LNPRODEF7', 0) - saisies.get('LNPRODEF6', 0) - saisies.get('LNPRODEF5', 0) - saisies.get('LNPRODEF4', 0), 0) - saisies.get('LNPRODEF3', 0), saisies.get('LNPRODEF3', 0))) * positif_ou_nul(saisies.get('LNPRODEF3', 0) - max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0) - saisies.get('LNPRODEF7', 0) - saisies.get('LNPRODEF6', 0) - saisies.get('LNPRODEF5', 0) - saisies.get('LNPRODEF4', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('LNPRODEF3', 0), TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('LNPRODEF3', 0) * ART1731BIS * is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFLOC5 = 1 - is_positive(NPLOCNETF5) * abs(min(max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0) - saisies.get('LNPRODEF7', 0) - saisies.get('LNPRODEF6', 0) - saisies.get('LNPRODEF5', 0), 0) - saisies.get('LNPRODEF4', 0), saisies.get('LNPRODEF4', 0))) * positif_ou_nul(saisies.get('LNPRODEF4', 0) - max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0) - saisies.get('LNPRODEF7', 0) - saisies.get('LNPRODEF6', 0) - saisies.get('LNPRODEF5', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('LNPRODEF4', 0), TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3 - DEFLOC4) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('LNPRODEF4', 0) * ART1731BIS * is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFLOC6 = 1 - is_positive(NPLOCNETF6) * abs(min(max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0) - saisies.get('LNPRODEF7', 0) - saisies.get('LNPRODEF6', 0), 0) - saisies.get('LNPRODEF5', 0), saisies.get('LNPRODEF5', 0))) * positif_ou_nul(saisies.get('LNPRODEF5', 0) - max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0) - saisies.get('LNPRODEF7', 0) - saisies.get('LNPRODEF6', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('LNPRODEF5', 0), TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3 - DEFLOC4 - DEFLOC5) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('LNPRODEF5', 0) * ART1731BIS * is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFLOC7 = 1 - is_positive(NPLOCNETF7) * abs(min(max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0) - saisies.get('LNPRODEF7', 0), 0) - saisies.get('LNPRODEF6', 0), saisies.get('LNPRODEF6', 0))) * positif_ou_nul(saisies.get('LNPRODEF6', 0) - max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0) - saisies.get('LNPRODEF7', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('LNPRODEF6', 0), TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3 - DEFLOC4 - DEFLOC5 - DEFLOC6) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('LNPRODEF6', 0) * ART1731BIS * is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFLOC8 = 1 - is_positive(NPLOCNETF8) * abs(min(max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0), 0) - saisies.get('LNPRODEF7', 0), saisies.get('LNPRODEF7', 0))) * positif_ou_nul(saisies.get('LNPRODEF7', 0) - max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0) - saisies.get('LNPRODEF8', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('LNPRODEF7', 0), TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3 - DEFLOC4 - DEFLOC5 - DEFLOC6 - DEFLOC7) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('LNPRODEF7', 0) * ART1731BIS * is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFLOC9 = 1 - is_positive(NPLOCNETF9) * abs(min(max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0), 0) - saisies.get('LNPRODEF8', 0), saisies.get('LNPRODEF8', 0))) * positif_ou_nul(saisies.get('LNPRODEF8', 0) - max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0) - saisies.get('LNPRODEF9', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('LNPRODEF8', 0), TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3 - DEFLOC4 - DEFLOC5 - DEFLOC6 - DEFLOC7 - DEFLOC8) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('LNPRODEF8', 0) * ART1731BIS * is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFLOCNP = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - DNPLOCIMPU + saisies.get('LOCDEFNPV', 0) + saisies.get('LOCDEFNPC', 0) + saisies.get('LOCDEFNPPAC', 0) + saisies.get('LOCDEFNPCGAV', 0) + saisies.get('LOCDEFNPCGAC', 0) + saisies.get('LOCDEFNPCGAPAC', 0)
DEFNONPLOC = abs(DEFNPLOCF)
DFRCMN = DFRCMNBIS * 1 - is_positive(ART1731BIS) + saisies.get('RCMFR', 0) - RCMFRART1731 * is_positive(ART1731BIS)
DLMRN = max(0, DEFNP - BICNPV * is_positive(BICNPV) - BICNPC * is_positive(BICNPC) - BICNPP * is_positive(BICNPP) + abs(BICNPV) * 1 - is_positive(BICNPV) * is_zero(DLMRN1) + abs(BICNPC) * 1 - is_positive(BICNPC) * is_zero(DLMRN1) + abs(BICNPP) * 1 - is_positive(BICNPP) * is_zero(DLMRN1)) + DLMRN1
F10AC = max(FRDAC, DFNC) if (IND_10C == 0 or IND_10C == 1 and IND_10MIN_0C == 0) else 0
F10BC = _10MINSC if (IND_10C == 1 and IND_10MIN_0C == 1) else 0
FPTC = max(FRDC, _10MINSC)
FRDCREP = is_positive(ART1731BIS) * max(0, saisies.get('FRNC', 0) - FRDC) * is_zero(IND_10C) + max(0, FRNC1731 - _10MINSC) * IND_10C * is_positive(FRNC1731)
FRDP = 1 - is_positive(PREM8_11) * FRNP * is_positive(FRNP - _10MINSP) + is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(FRNP, FRDPROVP) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(FRNP, max(FRDPROVPP2, FRDPROVP1731))
ID14 = IN04
ID16 = IN06
INDMONO = BOOL_0AM * positif_ou_nul(PPE_RTAV - PPELIMRPB) * is_positive(PPELIMRPB - PPE_RTAC) + positif_ou_nul(PPE_RTAC - PPELIMRPB) * is_positive(PPELIMRPB - PPE_RTAV)
ISFNETRED = max(0, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED - RISFPMEI - RISFFIP - RISFFCPI)
LIG10C = positif_ou_nul(TSBNC + PRBC + saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0) + is_positive(F10AC * is_zero(TSBNC + PRBC + saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0))))
LIGDFRCMN = is_positive(DFRCMN) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGF10C = is_positive(F10AC + F10BC) * LIG0 * LIG2
LIGPLOC2 = is_positive(DEFLOC2) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGPLOC3 = is_positive(DEFLOC3) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGPLOC4 = is_positive(DEFLOC4) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGPLOC5 = is_positive(DEFLOC5) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGPLOC6 = is_positive(DEFLOC6) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGPLOC7 = is_positive(DEFLOC7) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGPLOC8 = is_positive(DEFLOC8) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGPLOC9 = is_positive(DEFLOC9) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIG_SALASS = is_positive(TSBNV + TSBNC + TSBNP + F10AV + F10AC + F10AP + is_zero(saisies.get('ALLOV', 0) + saisies.get('ALLOC', 0) + ALLOP) * is_zero(saisies.get('TSHALLOV', 0) + saisies.get('TSHALLOC', 0) + TSHALLOP)) * LIG0 * LIG2
MIBNETNPVLNSP = MIB_NETNPVLP - MIBNETNPVLSP
MIBNETNPVLNSV = MIB_NETNPVLV - MIBNETNPVLSV
NPLOCNETSF = max(0, NPLOCNETTSV + NPLOCNETTSC + NPLOCNETTSP - TOTDEFLOCNPBIS)
PERPSALDV = PREP10V
PERPSALNV = PERPSALV - PERPSALDV + saisies.get('ELURASV', 0)
PFPTC = max(PFRDC, P10MINSC)
PPECOEFFN = round(PPE_COEFFCONDN * 100)
PPECOEFFU = round(PPE_COEFFCONDU * 100)
PPECOEFFV = round(PPE_COEFFCONDV * 100)
PPE_BOOL_MAXU = positif_ou_nul(PPELIMRPH - PPE_RCONTPU)
PPE_BOOL_MINV = positif_ou_nul(PPE_RTAV - PPELIMRPB) * 1 - PPE_BOOL_NADAV
PPE_RCONTPV = round(PPE_RTAV * PPE_COEFFV)
PREP10C = PIND_10C * PD10MC + 1 - PIND_10C * PFPTC
RDNP = saisies.get('RCSV', 0) + saisies.get('RCSC', 0) + saisies.get('RCSP', 0) + max(0, NPLOCNETSF) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_zero(saisies.get('V_REGCO', 0) - 4)
REDISF = RISFDONF + RISFDONCEE + RISFPMED + RISFPMEI + RISFFIP + RISFFCPI
REP10C = IND_10C * D10MC + 1 - IND_10C * FPTC
RISFPLAF = max(0, ISFNETRED * is_positive(saisies.get('ISFPLAF', 0) - ISFNETRED) + saisies.get('ISFPLAF', 0) * 1 - is_positive(saisies.get('ISFPLAF', 0) - ISFNETRED))
TFRDP = 1 - is_positive(PREM8_11) * FRNP + saisies.get('COD1CE', 0) + saisies.get('COD1DE', 0) + saisies.get('COD1EE', 0) + saisies.get('COD1FE', 0) * is_positive(FRNP + saisies.get('COD1CE', 0) + saisies.get('COD1DE', 0) + saisies.get('COD1EE', 0) + saisies.get('COD1FE', 0) - T10MINSP) + is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(FRNP + saisies.get('COD1CE', 0) + saisies.get('COD1DE', 0) + saisies.get('COD1EE', 0) + saisies.get('COD1FE', 0), TFRDPROVP) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(FRNP + saisies.get('COD1CE', 0) + saisies.get('COD1DE', 0) + saisies.get('COD1EE', 0) + saisies.get('COD1FE', 0), max(TFRDPROVPP2, TFRDPROVP1731))
TRAU = _1RAU + _2RAU
TSN1AJ = saisies.get('TSHALLOV', 0) - ABTS1AJ
TSN1AP = saisies.get('ALLOV', 0) - ABTS1AP
TSN3VJ = saisies.get('BPCOSAV', 0) - ABTS3VJ
XTSNC = is_positive(XTSNTC) * min(0, XTSNTC) + positif_ou_nul(XTSNTC) * XTSNTC
XTSNNC = round(is_positive(XTSNC) * XTSNC * saisies.get('TSASSUC', 0) / XEXTSC) * XIND_10C + 1 - XIND_10C * saisies.get('TSASSUC', 0)
_1RCM_I = (1 - is_positive(DFRCMN) * _1RIA + _1RNC + _1RAR + _1RAU + _1RAO + RCAV - FRG1 - is_positive(DFRCMN) * 0 * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * _1RIA + _1RNC + _1RAR + _1RAU + _1RAO + RCAV - FRG1 - is_positive(DFRCMN) * 0) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
_2RCM_I = (1 - is_positive(DFRCMN) * _2RIA * 1 - is_positive(ART1731BIS) + _2RIA * is_positive(ART1731BIS)) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
_3RCM_I = (1 - is_positive(DFRCMN) * _2RNC - FRG2 * 1 - is_positive(ART1731BIS) + _2RNC - FRG2 * is_positive(ART1731BIS)) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
_4RCM_I = (1 - is_positive(DFRCMN) * _2RCAV - FRG3 * 1 - is_positive(ART1731BIS) + _2RCAV - FRG3 * is_positive(ART1731BIS)) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
_5RCM_I = (1 - is_positive(DFRCMN) * _2RAU * 1 - is_positive(ART1731BIS) + _2RAU * is_positive(ART1731BIS)) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
_6RCM_I = (1 - is_positive(DFRCMN) * _2RAO - FRG5 * 1 - is_positive(ART1731BIS) + _2RAO - FRG5 * is_positive(ART1731BIS)) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
_7RCM_I = (1 - is_positive(DFRCMN) * _2RAR * 1 - is_positive(ART1731BIS) + _2RAR * is_positive(ART1731BIS)) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
ABTS1BJ = round(REP10C * saisies.get('TSHALLOC', 0) / TSBC)
ABTS1BP = is_positive(saisies.get('ALLOC', 0)) * is_positive(saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0) + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(REP10C * saisies.get('ALLOC', 0) / TSBC) + 1 - is_positive(saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0) + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, REP10C - ABTS1BJ)
ABTS1TT = is_positive(saisies.get('GLDGRATV', 0)) * is_positive(saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(REP10V * saisies.get('GLDGRATV', 0) / TSBV) + 1 - is_positive(saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, REP10V - ABTS1AJ - ABTS1AP - ABTS3VJ)
ABTS3VK = is_positive(saisies.get('BPCOSAC', 0)) * is_positive(saisies.get('GLDGRATC', 0) + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(REP10C * saisies.get('BPCOSAC', 0) / TSBC) + 1 - is_positive(saisies.get('GLDGRATC', 0) + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, REP10C - ABTS1BJ - ABTS1BP)
ABTSRAJ = is_positive(saisies.get('CARTSV', 0)) * is_positive(saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(REP10V * saisies.get('CARTSV', 0) / TSBV) + 1 - is_positive(saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, REP10V - ABTS1AJ - ABTS1AP - ABTS3VJ - ABTS1TT)
ABTSRAP = is_positive(saisies.get('REMPLAV', 0)) * is_positive(saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(REP10V * saisies.get('REMPLAV', 0) / TSBV) + 1 - is_positive(saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, REP10V - ABTS1AJ - ABTS1AP - ABTS1TT - ABTS3VJ - ABTSRAJ)
ABTSV = ABTS1AJ + ABTS1AP + ABTS3VJ + ABTS1TT + ABTSRAJ + ABTSRAP
ADEVDUR = BDEV30 + BDEV25 + BDEV15
ASYND = BCOS * 1 - V_CNR
BCSG = round(RDRFPS * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) + saisies.get('COD8XK', 0) + saisies.get('COD8YK', 0) + RDRV + RDRCM + RDNP + RDNCP + RDPTP + saisies.get('ESFP', 0) + saisies.get('R1649', 0) + saisies.get('PREREV', 0) * 1 - V_CNR) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) + saisies.get('RE168', 0) + saisies.get('TAX1649', 0) * 1 - V_CNR
BCSGAPS = round(RDRFAPS * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) + RDRVAPS + RDRCMAPS + RDNP + saisies.get('ESFP', 0) + saisies.get('R1649', 0) + saisies.get('PREREV', 0) * 1 - V_CNR) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) + saisies.get('RE168', 0) + saisies.get('TAX1649', 0) * 1 - V_CNR
BDCSG3VA = is_positive(saisies.get('ABDETPLUS', 0)) * max(0, RDRV + max(0, RDRCM1) + RDRFPS + RDNP + PVBAR3VA - saisies.get('IPPNCS', 0)) * 1 - V_CNR * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0)))
BPRS = round(RDRFPS * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) + saisies.get('COD8XK', 0) + saisies.get('COD8YK', 0) + RDRV + RDRCM + RDNP + RDNCP + RDPTP + saisies.get('ESFP', 0) + saisies.get('R1649', 0) + saisies.get('PREREV', 0) * 1 - V_CNR) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) + saisies.get('RE168', 0) + saisies.get('TAX1649', 0) * 1 - V_CNR
BPRSAPS = round(RDRFAPS * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) + RDRVAPS + RDRCMAPS + RDNP + saisies.get('ESFP', 0) + saisies.get('R1649', 0) + saisies.get('PREREV', 0) * 1 - V_CNR) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) + saisies.get('RE168', 0) + saisies.get('TAX1649', 0) * 1 - V_CNR
BRDS = round(RDRFPS * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) + saisies.get('COD8XK', 0) + saisies.get('COD8YK', 0) + RDRV + RDRCM + RDNP + RDNCP + RDPTP + RGLOA + saisies.get('SALECS', 0) + saisies.get('SALECSG', 0) + saisies.get('ALLECS', 0) + saisies.get('INDECS', 0) + saisies.get('PENECS', 0) + saisies.get('COD8SA', 0) + saisies.get('COD8SB', 0) + saisies.get('ESFP', 0) + saisies.get('R1649', 0) + saisies.get('PREREV', 0) * 1 - V_CNR) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) + saisies.get('RE168', 0) + saisies.get('TAX1649', 0) * 1 - V_CNR
BRDSAPS = round(RDRFAPS * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) + RDRVAPS + RDRCMAPS + RDNP + saisies.get('SALECS', 0) + saisies.get('SALECSG', 0) + saisies.get('ALLECS', 0) + saisies.get('INDECS', 0) + saisies.get('PENECS', 0) + saisies.get('ESFP', 0) + saisies.get('R1649', 0) + saisies.get('PREREV', 0) * 1 - V_CNR) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) + saisies.get('RE168', 0) + saisies.get('TAX1649', 0) * 1 - V_CNR
CIMPTL = ATEC + ADEVDUR + TOTBGE
CSGC = round(BCSG * T_CSG / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
CSGCAPS = round(BCSGAPS * T_CSG / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
CS_BASE = BCSG
CS_REVCS = RDNP
DEDSC = _10MINSC - DFNC * 1 - is_positive(F10BC) * IND_10C
DEFLOC10 = 1 - is_positive(NPLOCNETF10) * abs(min(max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0), 0) - saisies.get('LNPRODEF9', 0), saisies.get('LNPRODEF9', 0))) * positif_ou_nul(saisies.get('LNPRODEF9', 0) - max(NPLOCNETFHDEFANT - saisies.get('LNPRODEF10', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('LNPRODEF9', 0), TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3 - DEFLOC4 - DEFLOC5 - DEFLOC6 - DEFLOC7 - DEFLOC8 - DEFLOC9) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('LNPRODEF9', 0) * ART1731BIS * is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DEFNPLOCFAV = max(0, abs(DEFNPLOCF) - DEFLOC2 - DEFLOC3 - DEFLOC4 - DEFLOC5 - DEFLOC6 - DEFLOC7 - DEFLOC8 - DEFLOC9 - DEFLOC10)
DEVDURCUM = ADEVDUR + saisies.get('V_BTDEVDUR', 0) * 1 - present(saisies.get('DEPCHOBAS', 0)) + saisies.get('DEPCHOBAS', 0)
FRD1 = 1 - is_positive(PREM8_11) * saisies.get('FRN1', 0) * is_positive(saisies.get('FRN1', 0) - _10MINS1) + is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRN1', 0), FRDPROV1) * is_positive(saisies.get('FRN2', 0) + saisies.get('FRN3', 0) + saisies.get('FRN4', 0)) + is_positive(PREM8_11) * max(0, FRDP) * 1 - is_positive(saisies.get('FRN2', 0) + saisies.get('FRN3', 0) + saisies.get('FRN4', 0)) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRN1', 0), min(FRDPROV1, max(FRDPROV1P2, FRDPROV11731))) * is_positive(saisies.get('FRN2', 0) + saisies.get('FRN3', 0) + saisies.get('FRN4', 0)) + is_positive(PREM8_11) * max(0, FRDP) * 1 - is_positive(saisies.get('FRN2', 0) + saisies.get('FRN3', 0) + saisies.get('FRN4', 0))
FRD2 = 1 - is_positive(PREM8_11) * saisies.get('FRN2', 0) * is_positive(saisies.get('FRN2', 0) - _10MINS2) + is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRN2', 0), FRDPROV2) * is_positive(saisies.get('FRN3', 0) + saisies.get('FRN4', 0)) + is_positive(PREM8_11) * max(0, FRDP - FRD1) * 1 - is_positive(saisies.get('FRN3', 0) + saisies.get('FRN4', 0)) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRN2', 0), min(FRDPROV2, max(FRDPROV2P2, FRDPROV21731))) * is_positive(saisies.get('FRN3', 0) + saisies.get('FRN4', 0)) + is_positive(PREM8_11) * max(0, FRDP - FRD1) * 1 - is_positive(saisies.get('FRN3', 0) + saisies.get('FRN4', 0))
FRD3 = 1 - is_positive(PREM8_11) * saisies.get('FRN3', 0) * is_positive(saisies.get('FRN3', 0) - _10MINS3) + is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRN3', 0), FRDPROV3) * is_positive(saisies.get('FRN4', 0)) + is_positive(PREM8_11) * max(0, FRDP - FRD1 - FRD2) * 1 - is_positive(saisies.get('FRN4', 0)) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRN3', 0), min(FRDPROV3, max(FRDPROV3P2, FRDPROV31731))) * is_positive(saisies.get('FRN4', 0)) + is_positive(PREM8_11) * max(0, FRDP - FRD1 - FRD2) * 1 - is_positive(saisies.get('FRN4', 0))
FRD4 = max(0, FRDP - FRD1 - FRD2 - FRD3)
FRDREPTOT = is_positive(ART1731BIS) * FRDAV - FRDV + FRDAC - FRDC + FRDA1 - FRD1 + FRDA2 - FRD2 + FRDA3 - FRD3 + FRDA4 - FRD4
INDEFTS1 = positif_ou_nul(TSB1 - FRD1)
INDEFTS2 = positif_ou_nul(TSB2 - FRD2)
INDEFTS3 = positif_ou_nul(TSB3 - FRD3)
INDEFTS4 = positif_ou_nul(TSB4 - FRD4)
IND_101 = positif_ou_nul(_10MINS1 - FRD1)
IND_102 = positif_ou_nul(_10MINS2 - FRD2)
IND_103 = positif_ou_nul(_10MINS3 - FRD3)
IND_104 = positif_ou_nul(_10MINS4 - FRD4)
IND_CTXC = is_positive(CS_DEG) * is_positive(BCSG) * is_positive(INDCTX)
IND_CTXP = is_positive(CS_DEG) * is_positive(BPRS) * is_positive(INDCTX)
IND_CTXR = is_positive(CS_DEG) * is_positive(BRDS) * is_positive(INDCTX)
ISFPOSTPLAF = max(0, ISFNETRED - RISFPLAF)
LIG10 = is_positive(LIG10V + LIG10C + LIG10P)
LIGPLOC10 = is_positive(DEFLOC10) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGPS = is_positive(BCSG + BRDS + BPRS + BCVNSAL + BREGV + BCDIS + BGLOA + BRSE1 + BRSE2 + BRSE3 + BRSE4 + BRSE5 + 0) * 1 - is_positive(saisies.get('ANNUL2042', 0))
LIGPSP = 1 - is_zero(LIGPS) * is_zero(saisies.get('V_ANTCR', 0))
NONLIGPS = is_positive(is_positive(1 - LIGPS) + is_positive(is_zero(saisies.get('V_NOTRAIT', 0) - 23) + is_zero(saisies.get('V_NOTRAIT', 0) - 33) + is_zero(saisies.get('V_NOTRAIT', 0) - 43) + is_zero(saisies.get('V_NOTRAIT', 0) - 53) + is_zero(saisies.get('V_NOTRAIT', 0) - 63)))
PERPREVTOTV = max(0, PERPSALNV + PERPNONSALV)
PERPSALDC = PREP10C
PERPSALNC = PERPSALC - PERPSALDC + saisies.get('ELURASC', 0)
PFRDP = FRD1 + saisies.get('COD1CE', 0) * is_positive(FRD1 + saisies.get('COD1CE', 0) - P10MINSP)
PIND_10P = positif_ou_nul(P10MINSP - FRD1 + saisies.get('COD1CE', 0))
PPE_BOOL_MAJO = 1 - PPE_BOOL_BT * is_positive(positif_ou_nul(PPELIMRPH - PPE_RCONTPV) * positif_ou_nul(PPE_RTAV - PPELIMRPB) * 1 - is_positive(PPE_BOOL_NADAV) + positif_ou_nul(PPELIMRPH - PPE_RCONTPC) * positif_ou_nul(PPE_RTAC - PPELIMRPB) * 1 - is_positive(PPE_BOOL_NADAC))
PPE_BOOL_MAJOBT = is_positive(positif_ou_nul(PPELIMRPH - PPE_RCONTPV) * positif_ou_nul(PPE_RTAV - PPELIMRPB) * 1 - is_positive(PPE_BOOL_NADAV)) * PPE_BOOL_BT
PPE_BOOL_MONO = 1 - PPE_BOOL_MAJO * 1 - PPE_BOOL_MAJOBT * is_positive(PPE_NB_PAC + PPE_NB_PAC_QAR - PPE_NBNONELI) * INDMONO * is_positive(PPE_BOOL_BT + BOOL_0AM) * positif_ou_nul(PPE_RTAV - PPELIMRPB) * positif_ou_nul(PPELIMRPH2 - PPE_RCONTPV) * 1 - is_positive(PPE_BOOL_NADAV) + is_positive(BOOL_0AM) * positif_ou_nul(PPE_RTAC - PPELIMRPB) * positif_ou_nul(PPELIMRPH2 - PPE_RCONTPC) * 1 - is_positive(PPE_BOOL_NADAC)
PPE_HAUTE = PPELIMRPH * 1 - BOOL_0AM + PPELIMRPH * BOOL_0AM * is_zero(INDMONO) * positif_ou_nul(PPE_RCONTPV - PPELIMRPB) * positif_ou_nul(PPE_RCONTPC - PPELIMRPB) + PPELIMRPH2 * INDMONO
PPE_MABT = PPE_BOOL_MAJOBT * is_positive(PPE_NBMAJO) * PPE_NBMAJO + 1 * PPEMONMAJO + PPE_NBMAJOQAR * PPEMONMAJO / 2 + PPE_BOOL_MAJOBT * is_zero(PPE_NBMAJO + 0) * is_positive(PPE_NBMAJOQAR) * is_positive(PPE_NBMAJOQAR - 1) * PPE_NBMAJOQAR * PPEMONMAJO / 2 + PPEMONMAJO + positif_ou_nul(PPELIMRPH2 - PPE_RCONTPV) * positif_ou_nul(PPE_RTAV - PPELIMRPB) * 1 - PPE_BOOL_MAJOBT * 1 - is_positive(PPE_BOOL_NADAV) * PPE_BOOL_BT * is_positive(PPE_NB_PAC) * 2 * PPEMONMAJO + is_positive(PPE_NB_PAC_QAR) * is_zero(PPE_NB_PAC + 0) * PPEMONMAJO
PPE_MAJO = PPE_BOOL_MAJO * is_positive(PPE_NBELIGI) * PPE_NBMAJO * PPEMONMAJO + PPE_NBMAJOQAR * PPEMONMAJO / 2
PPE_MONO = PPE_BOOL_MONO * 1 + PPE_BOOL_BT * is_positive(PPE_NBMAJO) * PPEMONMAJO + is_zero(PPE_NBMAJO) * is_positive(PPE_NBMAJOQAR) * PPEMONMAJO / 2
PRSC = round(BPRS * T_PREL_SOC / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
PRSCAPS = round(BPRSAPS * T_PREL_SOC / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
PS_BASE = BPRS
PS_REVCS = CS_REVCS
RCM_I = _1RCM_I + _2RCM_I + _3RCM_I + _4RCM_I + _5RCM_I + _6RCM_I + _7RCM_I
RDSC = round(BRDS * T_RDS / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
RDSCAPS = round(BRDSAPS * T_RDS / 100) * 1 - is_positive(saisies.get('ANNUL2042', 0))
RD_BASE = BRDS
RD_REVCS = CS_REVCS
REPRCM1 = is_positive(REPRCMBIS) * round(REPRCMBIS * _1RCM_I / RCM_I) + 1 - is_positive(REPRCMBIS) * 0
REPRCM2 = is_positive(REPRCMBIS) * min(round(REPRCMBIS * _2RCM_I / RCM_I), REPRCMBIS - REPRCM1) + 1 - is_positive(REPRCMBIS) * 0
REPRCM3 = is_positive(REPRCMBIS) * min(round(REPRCMBIS * _3RCM_I / RCM_I), REPRCMBIS - REPRCM1 - REPRCM2) + 1 - is_positive(REPRCMBIS) * 0
REPRCM4 = is_positive(REPRCMBIS) * min(round(REPRCMBIS * _4RCM_I / RCM_I), REPRCMBIS - REPRCM1 - REPRCM2 - REPRCM3) + 1 - is_positive(REPRCMBIS) * 0
REPRCM5 = is_positive(REPRCMBIS) * min(round(REPRCMBIS * _5RCM_I / RCM_I), REPRCMBIS - REPRCM1 - REPRCM2 - REPRCM3 - REPRCM4) + 1 - is_positive(REPRCMBIS) * 0
REPRCM6 = is_positive(REPRCMBIS) * min(round(REPRCMBIS * _6RCM_I / RCM_I), REPRCMBIS - REPRCM1 - REPRCM2 - REPRCM3 - REPRCM4 - REPRCM5) + 1 - is_positive(REPRCMBIS) * 0
REPRCM7 = is_positive(REPRCMBIS) * max(0, REPRCMBIS - REPRCM1 - REPRCM2 - REPRCM3 - REPRCM4 - REPRCM5 - REPRCM6) + 1 - is_positive(REPRCMBIS) * 0
REV4RAJV = max(saisies.get('CARTSV', 0) - ABTSRAJ, 0)
RISFE = is_positive(DISFBASE) * is_positive(saisies.get('ISFETRANG', 0)) * min(ISFPOSTPLAF, saisies.get('ISFETRANG', 0))
TFRD1 = 1 - is_positive(PREM8_11) * saisies.get('FRN1', 0) + saisies.get('COD1CE', 0) * is_positive(saisies.get('FRN1', 0) + saisies.get('COD1CE', 0) - T10MINS1) + is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRN1', 0) + saisies.get('COD1CE', 0), TFRDPROV1) * is_positive(saisies.get('FRN2', 0) + saisies.get('FRN3', 0) + saisies.get('FRN4', 0) + saisies.get('COD1DE', 0) + saisies.get('COD1EE', 0) + saisies.get('COD1FE', 0)) + is_positive(PREM8_11) * max(0, TFRDP) * 1 - is_positive(saisies.get('FRN2', 0) + saisies.get('FRN3', 0) + saisies.get('FRN4', 0) + saisies.get('COD1DE', 0) + saisies.get('COD1EE', 0) + saisies.get('COD1FE', 0)) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRN1', 0) + saisies.get('COD1CE', 0), min(TFRDPROV1, max(TFRDPROV1P2, TFRDPROV11731))) * is_positive(saisies.get('FRN2', 0) + saisies.get('FRN3', 0) + saisies.get('FRN4', 0) + saisies.get('COD1DE', 0) + saisies.get('COD1EE', 0) + saisies.get('COD1FE', 0)) + is_positive(PREM8_11) * max(0, TFRDP) * 1 - is_positive(saisies.get('FRN2', 0) + saisies.get('FRN3', 0) + saisies.get('FRN4', 0) + saisies.get('COD1DE', 0) + saisies.get('COD1EE', 0) + saisies.get('COD1FE', 0))
TFRD2 = 1 - is_positive(PREM8_11) * saisies.get('FRN2', 0) + saisies.get('COD1DE', 0) * is_positive(saisies.get('FRN2', 0) + saisies.get('COD1DE', 0) - T10MINS2) + is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRN2', 0) + saisies.get('COD1DE', 0), TFRDPROV2) * is_positive(saisies.get('FRN3', 0) + saisies.get('FRN4', 0) + saisies.get('COD1EE', 0) + saisies.get('COD1FE', 0)) + is_positive(PREM8_11) * max(0, TFRDP - TFRD1) * 1 - is_positive(saisies.get('FRN3', 0) + saisies.get('FRN4', 0) + saisies.get('COD1EE', 0) + saisies.get('COD1FE', 0)) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRN2', 0) + saisies.get('COD1DE', 0), min(TFRDPROV2, max(TFRDPROV2P2, TFRDPROV21731))) * is_positive(saisies.get('FRN3', 0) + saisies.get('FRN4', 0) + saisies.get('COD1EE', 0) + saisies.get('COD1FE', 0)) + is_positive(PREM8_11) * max(0, TFRDP - TFRD1) * 1 - is_positive(saisies.get('FRN3', 0) + saisies.get('FRN4', 0) + saisies.get('COD1EE', 0) + saisies.get('COD1FE', 0))
TFRD3 = 1 - is_positive(PREM8_11) * saisies.get('FRN3', 0) + saisies.get('COD1EE', 0) * is_positive(saisies.get('FRN3', 0) + saisies.get('COD1EE', 0) - T10MINS3) + is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRN3', 0) + saisies.get('COD1EE', 0), TFRDPROV3) * is_positive(saisies.get('FRN4', 0) + saisies.get('COD1FE', 0)) + is_positive(PREM8_11) * max(0, TFRDP - TFRD1 - TFRD2) * 1 - is_positive(saisies.get('FRN4', 0) + saisies.get('COD1FE', 0)) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRN3', 0) + saisies.get('COD1EE', 0), min(TFRDPROV3, max(TFRDPROV3P2, TFRDPROV31731))) * is_positive(saisies.get('FRN4', 0) + saisies.get('COD1FE', 0)) + is_positive(PREM8_11) * max(0, TFRDP - TFRD1 - TFRD2) * 1 - is_positive(saisies.get('FRN4', 0) + saisies.get('COD1FE', 0))
TFRD4 = max(0, TFRDP - TFRD1 - TFRD2 - TFRD3)
TIND_101 = positif_ou_nul(T10MINS1 - TFRD1 + saisies.get('COD1CE', 0))
TIND_102 = positif_ou_nul(T10MINS2 - TFRD2 + saisies.get('COD1DE', 0))
TIND_103 = positif_ou_nul(T10MINS3 - TFRD3 + saisies.get('COD1EE', 0))
TIND_104 = positif_ou_nul(T10MINS4 - TFRD4 + saisies.get('COD1FE', 0))
TSN1BJ = saisies.get('TSHALLOC', 0) - ABTS1BJ
TSN1BP = saisies.get('ALLOC', 0) - ABTS1BP
TSN1TT = saisies.get('GLDGRATV', 0) - ABTS1TT
TSN3VK = saisies.get('BPCOSAC', 0) - ABTS3VK
TSNRAJ = saisies.get('CARTSV', 0) - ABTSRAJ
TSNRAP = saisies.get('REMPLAV', 0) - ABTSRAP
VAREPRCM = min(saisies.get('DEFRCM', 0) + saisies.get('DEFRCM2', 0) + saisies.get('DEFRCM3', 0) + saisies.get('DEFRCM4', 0) + saisies.get('DEFRCM5', 0) + saisies.get('DEFRCM6', 0), _1RCM_I + _2RCM_I + _3RCM_I + _4RCM_I + _5RCM_I + _6RCM_I + _7RCM_I)
XETSNNC = round(is_positive(XTSNC) * XTSNC * saisies.get('XETRANC', 0) / XEXTSC) * XIND_10C + 1 - XIND_10C * saisies.get('XETRANC', 0)
XEXOCETC = round(is_positive(XTSNC) * XTSNC * saisies.get('EXOCETC', 0) / XEXTSC) * XIND_10C + 1 - XIND_10C * saisies.get('EXOCETC', 0)
XFPT1 = XDF1 * XIND_101 + FRD1 * 1 - XIND_101
XFPT2 = XDF2 * XIND_102 + FRD2 * 1 - XIND_102
XFPT3 = XDF3 * XIND_103 + FRD3 * 1 - XIND_103
XFPT4 = XDF4 * XIND_104 + FRD4 * 1 - XIND_104
XTSC = XTSNC - sum([max(0, saisies.get('GLD1C', 0) - ABGL1C), max(0, saisies.get('GLD2C', 0) - ABGL2C), max(0, saisies.get('GLD3C', 0) - ABGL3C)])
XTSNT1 = XEXTS1 - XFPT1
XTSNT2 = XEXTS2 - XFPT2
XTSNT3 = XEXTS3 - XFPT3
XTSNT4 = XEXTS4 - XFPT4
ZIGBASECS = is_positive(BCSG + saisies.get('V_CSANT', 0))
ZIGBASECS1 = is_positive(BCSG + saisies.get('V_CSANT', 0)) * is_positive(INDCTX)
ZIGBASEPS = is_positive(BPRS + saisies.get('V_PSANT', 0))
ZIGBASEPS1 = is_positive(BPRS + saisies.get('V_PSANT', 0)) * is_positive(INDCTX)
ZIGBASERD = is_positive(BRDS + saisies.get('V_RDANT', 0))
ZIGBASERD1 = is_positive(BRDS + saisies.get('V_RDANT', 0)) * is_positive(INDCTX)
ZIGMONTCS = is_positive(BCSG + saisies.get('V_CSANT', 0))
ZIGMONTPS = is_positive(BPRS + saisies.get('V_PSANT', 0))
ZIGMONTRD = is_positive(BRDS + saisies.get('V_RDANT', 0))
ZIGTITRECRS = is_positive(BCSG + saisies.get('V_CSANT', 0)) * is_positive(BRDS + saisies.get('V_RDANT', 0)) * is_positive(BCVNSAL + saisies.get('V_CVNANT', 0)) * 1 - is_positive(BPRS + saisies.get('V_PSANT', 0)) * 1 - V_CNR * LIG2
ZIGTITRERS = 1 - is_positive(BCSG + saisies.get('V_CSANT', 0)) * is_positive(BRDS + saisies.get('V_RDANT', 0)) * 1 - is_positive(BPRS + saisies.get('V_PSANT', 0)) * is_positive(BCVNSAL + saisies.get('V_CVNANT', 0)) * 1 - V_CNR * LIG2
ZIGTITRES = is_positive(BCVNSAL + saisies.get('V_CVNANT', 0)) * 1 - is_positive(BRDS + saisies.get('V_RDANT', 0)) * 1 - is_positive(BCSG + saisies.get('V_CSANT', 0)) * 1 - is_positive(BPRS + saisies.get('V_PSANT', 0)) * LIG2
ZIG_BASE = is_positive(BCSG + BRDS + BPRS + BCVNSAL + saisies.get('V_CSANT', 0) + saisies.get('V_RDANT', 0) + saisies.get('V_PSANT', 0) + saisies.get('V_CVNANT', 0)) * LIG2
ZIG_MONTANT = is_positive(BCSG + BRDS + BPRS + BCVNSAL + saisies.get('V_CSANT', 0) + saisies.get('V_RDANT', 0) + saisies.get('V_PSANT', 0) + saisies.get('V_CVNANT', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0))
ZIG_NETAP = is_positive(BCSG + BRDS + BPRS + BCVNSAL + BREGV + BCDIS + BGLOA + BRSE1 + BRSE2 + BRSE3 + BRSE4 + BRSE5) * LIG2
ZIG_TITREC = is_positive(BCSG + saisies.get('V_CSANT', 0)) * 1 - is_positive(BRDS + saisies.get('V_RDANT', 0)) * 1 - is_positive(BPRS + saisies.get('V_PSANT', 0)) * 1 - is_positive(BCVNSAL + saisies.get('V_CVNANT', 0)) * 1 - V_CNR * LIG2
ZIG_TITRECP = is_positive(BCSG + saisies.get('V_CSANT', 0)) * 1 - is_positive(BRDS + saisies.get('V_RDANT', 0)) * is_positive(BPRS + saisies.get('V_PSANT', 0)) * 1 - is_positive(BCVNSAL + saisies.get('V_CVNANT', 0)) * 1 - V_CNR * LIG2
ZIG_TITRECR = is_positive(BCSG + saisies.get('V_CSANT', 0)) * is_positive(BRDS + saisies.get('V_RDANT', 0)) * 1 - is_positive(BPRS + saisies.get('V_PSANT', 0)) * 1 - is_positive(BCVNSAL + saisies.get('V_CVNANT', 0)) * 1 - V_CNR * LIG2
ZIG_TITREPN = is_positive(BPRS + saisies.get('V_PSANT', 0)) * 1 - V_CNR * LIG2
ZIG_TITRER = is_positive(BRDS + saisies.get('V_RDANT', 0)) * 1 - is_positive(BCSG + saisies.get('V_CSANT', 0)) * 1 - is_positive(BPRS + saisies.get('V_PSANT', 0)) * 1 - is_positive(BCVNSAL + saisies.get('V_CVNANT', 0)) * 1 - V_CNR * LIG2
ZIG_TITRERP = 1 - is_positive(BCSG + saisies.get('V_CSANT', 0)) * is_positive(BRDS + saisies.get('V_RDANT', 0)) * is_positive(BPRS + saisies.get('V_PSANT', 0)) * 1 - is_positive(BCVNSAL + saisies.get('V_CVNANT', 0)) * 1 - V_CNR * LIG2
ABDOMDAJ = is_positive(saisies.get('CODDAJ', 0)) * is_positive(saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(REP10V * saisies.get('CODDAJ', 0) / TSBV) + 1 - is_positive(saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, REP10V - ABTSV) + 0
ABDOMEAJ = is_positive(saisies.get('CODEAJ', 0)) * is_positive(saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(REP10V * saisies.get('CODEAJ', 0) / TSBV) + 1 - is_positive(saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, REP10V - ABTSV - ABDOMDAJ) + 0
ABGL1V = is_positive(saisies.get('GLD1V', 0)) * is_positive(saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(REP10V * saisies.get('GLD1V', 0) / TSBV) + 1 - is_positive(saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, REP10V - ABTSV - ABDOMDAJ - ABDOMEAJ) + 0
ABGL2V = is_positive(saisies.get('GLD2V', 0)) * is_positive(saisies.get('GLD3V', 0)) * round(REP10V * saisies.get('GLD2V', 0) / TSBV) + 1 - is_positive(saisies.get('GLD3V', 0)) * max(0, REP10V - ABTSV - ABDOMDAJ - ABDOMEAJ - ABGL1V) + 0
ABGL3V = max(0, REP10V - ABTSV - ABDOMDAJ - ABDOMEAJ - ABGL1V - ABGL2V) + 0
ABGLTV = sum([ABGL1V, ABGL2V, ABGL3V]) + ABDOMDAJ + ABDOMEAJ
ABTS1UT = is_positive(saisies.get('GLDGRATC', 0)) * is_positive(saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(REP10C * saisies.get('GLDGRATC', 0) / TSBC) + 1 - is_positive(saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, REP10C - ABTS1BJ - ABTS1BP - ABTS3VK)
ABTSRBJ = is_positive(saisies.get('CARTSC', 0)) * is_positive(saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(REP10C * saisies.get('CARTSC', 0) / TSBC) + 1 - is_positive(saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, REP10C - ABTS1BJ - ABTS1BP - ABTS3VK - ABTS1UT)
ABTSRBP = is_positive(saisies.get('REMPLAC', 0)) * is_positive(saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(REP10C * saisies.get('REMPLAC', 0) / TSBC) + 1 - is_positive(saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, REP10C - ABTS1BJ - ABTS1BP - ABTS3VK - ABTS1UT - ABTSRBJ)
BDCSG = min(BCSG * 1 - V_CNR, max(0, RDRFPS + RDRV + RDNP + max(0, RDRCM1) + PVBARPS - saisies.get('IPPNCS', 0) * 1 - V_CNR)) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * 1 - is_positive(saisies.get('ABDETPLUS', 0)) + min(BCSG * 1 - V_CNR, BDCSG3VA)
CICSG = min(CSGC, round(saisies.get('IPPNCS', 0) * T_CSG / 100))
CICSGAPS = min(CSGCAPS, round(saisies.get('IPPNCS', 0) * T_CSG / 100))
CIPRS = min(PRSC, round(saisies.get('IPPNCS', 0) * T_PREL_SOC / 100))
CIPRSAPS = min(PRSCAPS, round(saisies.get('IPPNCS', 0) * T_PREL_SOC / 100))
CIRDS = min(RDSC, round(saisies.get('IPPNCS', 0) + saisies.get('REVCSXA', 0) + saisies.get('REVCSXB', 0) + saisies.get('REVCSXC', 0) + saisies.get('REVCSXD', 0) + saisies.get('REVCSXE', 0) + saisies.get('COD8XI', 0) + saisies.get('COD8XJ', 0) * T_RDS / 100))
CIRDSAPS = min(RDSCAPS, round(saisies.get('IPPNCS', 0) + saisies.get('REVCSXA', 0) + saisies.get('REVCSXB', 0) + saisies.get('REVCSXC', 0) + saisies.get('REVCSXD', 0) + saisies.get('REVCSXE', 0) * T_RDS / 100))
CSG = max(0, CSGC - CICSG)
CSGAC = max(0, CSGC - CICSG)
CSGAPS = max(0, CSGCAPS - CICSGAPS)
DEFLOC1 = is_positive(DEFNONPLOC) * DEFNPLOCFAV * 1 - is_positive(ART1731BIS) + DEFLOCNPF * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('LOCDEFNPCGAV', 0) + saisies.get('LOCDEFNPV', 0) + saisies.get('LOCDEFNPCGAC', 0) + saisies.get('LOCDEFNPC', 0) + saisies.get('LOCDEFNPCGAPAC', 0) + saisies.get('LOCDEFNPPAC', 0) * ART1731BIS * is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))
DFRCM5 = saisies.get('DEFRCM6', 0) * is_positive(DFRCMN) + saisies.get('DEFRCM6', 0) * is_positive(saisies.get('DEFRCM', 0) + saisies.get('DEFRCM2', 0) + saisies.get('DEFRCM3', 0) + saisies.get('DEFRCM4', 0) + saisies.get('DEFRCM5', 0) - RCM_I) * 1 - is_positive(DFRCMN) + max(0, saisies.get('DEFRCM6', 0) - RCM_I - saisies.get('DEFRCM', 0) - saisies.get('DEFRCM2', 0) - saisies.get('DEFRCM3', 0) - saisies.get('DEFRCM4', 0) - saisies.get('DEFRCM5', 0)) * positif_ou_nul(RCM_I - saisies.get('DEFRCM', 0) - saisies.get('DEFRCM2', 0) - saisies.get('DEFRCM3', 0) - saisies.get('DEFRCM4', 0) - saisies.get('DEFRCM5', 0)) * 1 - is_positive(DFRCMN) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFRCM6', 0), REPRCM - REPRCMBIS) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFRCM6', 0) * is_positive(ART1731BIS * PREM8_11)
F10A1 = max(FRDA1, DFN1) if (IND_101 == 0 or IND_101 == 1 and IND_10MIN_01 == 0) else 0
F10A2 = max(FRDA2, DFN2) if (IND_102 == 0 or IND_102 == 1 and IND_10MIN_02 == 0) else 0
F10A3 = max(FRDA3, DFN3) if (IND_103 == 0 or IND_103 == 1 and IND_10MIN_03 == 0) else 0
F10A4 = max(FRDA4, DFN4) if (IND_104 == 0 or IND_104 == 1 and IND_10MIN_04 == 0) else 0
F10B1 = _10MINS1 if (IND_101 == 1 and IND_10MIN_01 == 1) else 0
F10B2 = _10MINS2 if (IND_102 == 1 and IND_10MIN_02 == 1) else 0
F10B3 = _10MINS3 if (IND_103 == 1 and IND_10MIN_03 == 1) else 0
F10B4 = _10MINS4 if (IND_104 == 1 and IND_10MIN_04 == 1) else 0
FPT1 = max(FRD1, _10MINS1)
FPT2 = max(FRD2, _10MINS2)
FPT3 = max(FRD3, _10MINS3)
FPT4 = max(FRD4, _10MINS4)
GLDOMAVDAJV = max(saisies.get('CODDAJ', 0) - ABDOMDAJ, 0) * INDEFTSV
GLDOMAVEAJV = max(saisies.get('CODEAJ', 0) - ABDOMEAJ, 0) * INDEFTSV
GLN1V = max(saisies.get('GLD1V', 0) - ABGL1V, 0) * INDEFTSV
GLN2V = max(saisies.get('GLD2V', 0) - ABGL2V, 0) * INDEFTSV
GLN3V = max(saisies.get('GLD3V', 0) - ABGL3V, 0) * INDEFTSV
GLN4DAJV = max(saisies.get('CODDAJ', 0) - ABDOMDAJ, 0) * INDEFTSV
GLN4V = max(saisies.get('CODDAJ', 0) - ABDOMDAJ, 0) + max(saisies.get('CODEAJ', 0) - ABDOMEAJ, 0) * INDEFTSV
GLNAV1V = max(saisies.get('GLD1V', 0) - ABGL1V, 0) * INDEFTSV
GLNAV2V = max(saisies.get('GLD2V', 0) - ABGL2V, 0) * INDEFTSV
GLNAV3V = max(saisies.get('GLD3V', 0) - ABGL3V, 0) * INDEFTSV
INDIRPS = 1 * 1 - LIGPS * is_positive(3 - ANTINDIRPS) + 3 * 1 - is_positive(1 - LIGPS * is_positive(3 - ANTINDIRPS))
ISF5 = max(0, ISFPOSTPLAF - RISFE)
ISFTRED = RISFDONF + RISFDONCEE + RISFPMED + RISFPMEI + RISFFIP + RISFFCPI + RISFE
LIG2200 = is_positive(IDEGR) * positif_ou_nul(IDEGR - SEUIL_8) * 1 - LIGPS * TYPE2
LIG2200S = is_positive(IDEGR) * positif_ou_nul(IDEGR - SEUIL_8) * LIGPS * TYPE2
LIG2205 = is_positive(IDEGR) * 1 - positif_ou_nul(IDEGR - SEUIL_8) * 1 - LIGPS * LIG2
LIG2205S = is_positive(IDEGR) * 1 - positif_ou_nul(IDEGR - SEUIL_8) * LIGPS * LIG2
LIGDEFPLOC = is_positive(DEFLOC1 + DEFLOC2 + DEFLOC3 + DEFLOC4 + DEFLOC5 + DEFLOC6 + DEFLOC7 + DEFLOC8 + DEFLOC9 + DEFLOC10) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDFRCM5 = is_positive(DFRCM5) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGISFDEGR = is_zero(2 - is_positive(SEUIL_8 - ISFDEGR) + positif_ou_nul(ISF5 - SEUIL_12)) + is_zero(saisies.get('V_ANTISF', 0)) * INDCTX23 * is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0))
LIGISFINF8 = IND9HI0 * is_positive(LIGISFDEGR) * 1 - is_positive(saisies.get('ANNUL2042', 0))
LIGISFNMR = is_positive(SEUIL_12 - ISF5) * 1 - is_zero(ISF5) * 1 - is_positive(INDCTX23) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * LIGISF * 1 - is_positive(saisies.get('ANNUL2042', 0))
LIGISFZERO = is_zero(ISF5) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * LIGISF
LIGPLOC1 = is_positive(DEFLOC1) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
NAPCRAC = PRSAC + CSGAC + RDSNAC + CDIS + RSE1N + RSE2N + RSE3N + RSE4N + RSE5N
NMAJISF1 = max(0, MAJO1728ISF + round(ISF5 * COPETOISF / 100) * positif_ou_nul(ISF5 - SEUIL_12) + saisies.get('FLAG_TRTARDIF', 0) * MAJOISFTARDIF_D + FLAG_TRTARDIF_F * MAJOISFTARDIF_D - FLAG_TRTARDIF_F * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOISFTARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOISFTARDIF_A)
PERPPLAFV = is_positive(PERPINDV) * max(0, is_positive(PERPREVTOTV) * max(min(round(PERPREVTOTV * TX_PERPPLAF / 100), LIM_PERPMAX), LIM_PERPMIN) - saisies.get('PERPV', 0) + 1 - is_positive(PERPREVTOTV) * LIM_PERPMIN - saisies.get('PERPV', 0)) * 1 - V_CNR
PERPREVTOTC = max(0, PERPSALNC + PERPNONSALC)
PFPTP = max(PFRDP, P10MINSP)
PISF = INCISF_NET + NMAJISF1 + round(ISF5 * TXINTISF / 100) * 1 - is_positive(saisies.get('FLAG_PRIM', 0) + saisies.get('FLAG_RETARD', 0) + saisies.get('FLAG_DEFAUT', 0))
PPE_BOOL_MAXC = positif_ou_nul(PPE_HAUTE - PPE_RCONTPC)
PPE_BOOL_MAXV = positif_ou_nul(PPE_HAUTE - PPE_RCONTPV)
PREP10P = PIND_10P * PD10MP + 1 - PIND_10P * PFPTP
PRS = max(0, PRSC - CIPRS)
PRSAPS = PRSCAPS - CIPRSAPS
PSBASE = PRS - saisies.get('PRSPROV', 0)
PTOISF = round(ISF5 * COPETOISF / 100) + round(ISF5 * TXINTISF / 100)
RDSAC = max(0, RDSC - CIRDS)
RDSN = RDSC - CIRDS
RDSNAPS = RDSCAPS - CIRDSAPS
REP101 = IND_101 * D10M1 + 1 - IND_101 * FPT1
REP102 = IND_102 * D10M2 + 1 - IND_102 * FPT2
REP103 = IND_103 * D10M3 + 1 - IND_103 * FPT3
REP104 = IND_104 * D10M4 + 1 - IND_104 * FPT4
REV4RBJC = max(saisies.get('CARTSC', 0) - ABTSRBJ, 0)
REV4V = GLN4DAJV
TFPT1 = max(TFRD1, T10MINS1)
TFPT2 = max(TFRD2, T10MINS2)
TFPT3 = max(TFRD3, T10MINS3)
TFPT4 = max(TFRD4, T10MINS4)
TREP101 = TIND_101 * TD10M1 + 1 - TIND_101 * TFPT1
TREP102 = TIND_102 * TD10M2 + 1 - TIND_102 * TFPT2
TREP103 = TIND_103 * TD10M3 + 1 - TIND_103 * TFPT3
TREP104 = TIND_104 * TD10M4 + 1 - TIND_104 * TFPT4
TSN1UT = saisies.get('GLDGRATC', 0) - ABTS1UT
TSNDAJ = saisies.get('CODDAJ', 0) - ABDOMDAJ
TSNEAJ = saisies.get('CODEAJ', 0) - ABDOMEAJ
TSNGL1V = saisies.get('GLD1V', 0) - ABGL1V
TSNGL2V = saisies.get('GLD2V', 0) - ABGL2V
TSNGL3V = saisies.get('GLD3V', 0) - ABGL3V
TSNRBJ = saisies.get('CARTSC', 0) - ABTSRBJ
TSNRBP = saisies.get('REMPLAC', 0) - ABTSRBP
TSNTV = TSN1AJ + TSN1AP + TSN3VJ + TSN1TT + TSNRAJ + TSNRAP + TSNDAJ + TSNEAJ + TSNGL1V + TSNGL2V + TSNGL3V
TSNV = is_positive(TSNTV) * min(0, TSNTV + PRNNV) + positif_ou_nul(TSNTV) * TSNTV
TSV = TSNV - sum([max(0, saisies.get('GLD1V', 0) - ABGL1V), max(0, saisies.get('GLD2V', 0) - ABGL2V), max(0, saisies.get('GLD3V', 0) - ABGL3V)]) - max(saisies.get('CODDAJ', 0) - ABDOMDAJ, 0) - max(saisies.get('CODEAJ', 0) - ABDOMEAJ, 0)
XETRAN = XETSNNV + XETSNNC
XTSN1 = is_positive(XTSNT1) * min(0, XTSNT1) + positif_ou_nul(XTSNT1) * XTSNT1
XTSN2 = is_positive(XTSNT2) * min(0, XTSNT2) + positif_ou_nul(XTSNT2) * XTSNT2
XTSN3 = is_positive(XTSNT3) * min(0, XTSNT3) + positif_ou_nul(XTSNT3) * XTSNT3
XTSN4 = is_positive(XTSNT4) * min(0, XTSNT4) + positif_ou_nul(XTSNT4) * XTSNT4
ZIGTAUX3 = ZIGTITRECRS
ZIGTAUX4 = ZIG_TITRECR
ZIG_CRDETR = is_positive(CICSG + CIRDS + CIPRS) * LIG2
ZIG_PROF = is_positive(CS_REVCS + RD_REVCS + PS_REVCS + IND_ZIGPROF) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1 * is_zero(3 - INDIRPS)
ZIG_RCM = is_positive(CS_RCM + RD_RCM + PS_RCM + IND_ZIGRCM) * 1 - V_CNR * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1 * LIG2 * is_zero(3 - INDIRPS)
ZIG_RF = is_positive(CS_RFG + RD_RFG + PS_RFG + IND_ZIGRFG) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1 * LIG2 * is_zero(3 - INDIRPS)
ZIG_RTF = is_positive(CS_RTF + RD_RTF + PS_RTF + IND_ZIGRTF) * 1 - V_CNR * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1 * LIG2 * is_zero(3 - INDIRPS)
ZIG_RVTO = is_positive(CS_RVT + RD_RVT + PS_RVT + IND_ZIGRVT) * 1 - V_CNR * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1 * LIG2 * is_zero(3 - INDIRPS)
ZIG_TAUXCP = ZIG_TITRECP
ZIG_TAUXCR = ZIG_TITRECR
ZIG_TAUXR = ZIG_TITRER
ZIG_TAUXRP = ZIG_TITRERP
ZIG_TITRECRP = is_positive(BCSG + saisies.get('V_CSANT', 0)) * is_positive(BRDS + saisies.get('V_RDANT', 0)) * is_positive(BPRS + saisies.get('V_PSANT', 0)) * 1 - is_positive(BCVNSAL + saisies.get('V_CVNANT', 0)) * 1 - V_CNR * 1 - is_positive(ZIG_RF + max(0, NPLOCNETSF)) * LIG2
ABTS1CJ = round(REP101 * saisies.get('TSHALLO1', 0) / TSB1)
ABTS1CP = is_positive(saisies.get('ALLO1', 0)) * is_positive(saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)) * round(REP101 * saisies.get('ALLO1', 0) / TSB1) + 1 - is_positive(saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)) * max(0, REP101 - ABTS1CJ)
ABTS1DJ = round(REP102 * saisies.get('TSHALLO2', 0) / TSB2)
ABTS1DP = is_positive(saisies.get('ALLO2', 0)) * is_positive(saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)) * round(REP102 * saisies.get('ALLO2', 0) / TSB2) + 1 - is_positive(saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)) * max(0, REP102 - ABTS1DJ)
ABTS1EJ = round(REP103 * saisies.get('TSHALLO3', 0) / TSB3)
ABTS1EP = is_positive(saisies.get('ALLO3', 0)) * is_positive(saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)) * round(REP103 * saisies.get('ALLO3', 0) / TSB3) + 1 - is_positive(saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)) * max(0, REP103 - ABTS1EJ)
ABTS1FJ = round(REP104 * saisies.get('TSHALLO4', 0) / TSB4)
ABTS1FP = is_positive(saisies.get('ALLO4', 0)) * is_positive(saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)) * round(REP104 * saisies.get('ALLO4', 0) / TSB4) + 1 - is_positive(saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)) * max(0, REP104 - ABTS1FJ)
ABTSC = ABTS1BJ + ABTS1BP + ABTS3VK + ABTS1UT + ABTSRBJ + ABTSRBP
ABTSRCJ = is_positive(saisies.get('CARTSP1', 0)) * is_positive(saisies.get('REMPLAP1', 0)) * round(REP101 * saisies.get('CARTSP1', 0) / TSB1) + 1 - is_positive(saisies.get('REMPLAP1', 0)) * max(0, REP101 - ABTS1CJ - ABTS1CP)
ABTSRCP = max(0, REP101 - ABTS1CJ + ABTS1CP + ABTSRCJ) + 0
ABTSRDJ = is_positive(saisies.get('CARTSP2', 0)) * is_positive(saisies.get('REMPLAP2', 0)) * round(REP102 * saisies.get('CARTSP2', 0) / TSB2) + 1 - is_positive(saisies.get('REMPLAP2', 0)) * max(0, REP102 - ABTS1DJ - ABTS1DP)
ABTSRDP = max(0, REP102 - ABTS1DJ + ABTS1DP + ABTSRDJ) + 0
ABTSREJ = is_positive(saisies.get('CARTSP3', 0)) * is_positive(saisies.get('REMPLAP3', 0)) * round(REP103 * saisies.get('CARTSP3', 0) / TSB3) + 1 - is_positive(saisies.get('REMPLAP3', 0)) * max(0, REP103 - ABTS1EJ - ABTS1EP)
ABTSREP = max(0, REP103 - ABTS1EJ + ABTS1EP + ABTSREJ) + 0
ABTSRFJ = is_positive(saisies.get('CARTSP4', 0)) * is_positive(saisies.get('REMPLAP4', 0)) * round(REP104 * saisies.get('CARTSP4', 0) / TSB4) + 1 - is_positive(saisies.get('REMPLAP4', 0)) * max(0, REP104 - ABTS1FJ - ABTS1FP)
ABTSRFP = max(0, REP104 - ABTS1FJ + ABTS1FP + ABTSRFJ) + 0
BINRPS = max(0, CSG - saisies.get('CSGIM', 0)) + max(0, RDSN - saisies.get('CRDSIM', 0)) + max(0, PRS - saisies.get('PRSPROV', 0)) + max(0, CVNSALC - saisies.get('COD8YT', 0)) + max(0, CDIS - saisies.get('CDISPROV', 0)) + max(0, CGLOA - saisies.get('COD8YL', 0)) + max(0, RSE1 - saisies.get('CSPROVYD', 0)) + max(0, RSE2 - CSPROVRSE2) + max(0, RSE3 - saisies.get('CSPROVYG', 0)) + max(0, RSE4 - CSPROVRSE4) + max(0, RSE5 - saisies.get('CSPROVYE', 0)) + BREGV
CSBASE = CSG - saisies.get('CSGIM', 0)
CSTOTSSPENA = max(0, CSG + RDSN + PRS + BREGV + CVNSALC + CDIS + CGLOA + RSE1N + RSE2N + RSE3N + RSE4N + RSE5N)
DEDS1 = _10MINS1 - DFN1 * 1 - is_positive(F10B1) * IND_101
DEDS2 = _10MINS2 - DFN2 * 1 - is_positive(F10B2) * IND_102
DEDS3 = _10MINS3 - DFN3 * 1 - is_positive(F10B3) * IND_103
DEDS4 = _10MINS4 - DFN4 * 1 - is_positive(F10B4) * IND_104
DFRCM4 = saisies.get('DEFRCM5', 0) * is_positive(DFRCMN) + saisies.get('DEFRCM5', 0) * is_positive(saisies.get('DEFRCM', 0) + saisies.get('DEFRCM2', 0) + saisies.get('DEFRCM3', 0) + saisies.get('DEFRCM4', 0) - RCM_I) * 1 - is_positive(DFRCMN) + max(0, saisies.get('DEFRCM5', 0) - RCM_I - saisies.get('DEFRCM', 0) - saisies.get('DEFRCM2', 0) - saisies.get('DEFRCM3', 0) - saisies.get('DEFRCM4', 0)) * positif_ou_nul(RCM_I - saisies.get('DEFRCM', 0) - saisies.get('DEFRCM2', 0) - saisies.get('DEFRCM3', 0) - saisies.get('DEFRCM4', 0)) * 1 - is_positive(DFRCMN) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFRCM5', 0), REPRCM - REPRCMBIS - DFRCM5) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFRCM5', 0) * is_positive(ART1731BIS * PREM8_11)
ISF4BIS = max(0, ISF5)
LIGDFRCM4 = is_positive(DFRCM4) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGISF0DEG = IND9HI0 * is_zero(ISF4BIS) * 1 - is_positive(saisies.get('ANNUL2042', 0))
LIGISF17281 = is_positive(NMAJISF1) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIGISF * 1 - is_positive(SEUIL_12 - ISF4BIS) * 1 - is_zero(ISF5) * 1 - is_positive(V_FLAGR34 + is_zero(saisies.get('CMAJ_ISF', 0) - 34))
LIGISF17285 = is_positive(NMAJISF1) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIGISF * 1 - is_positive(SEUIL_12 - ISF4BIS) * 1 - is_zero(ISF5) * is_positive(V_FLAGR34 + is_zero(saisies.get('CMAJ_ISF', 0) - 34))
LIGISFCOR = present(ISF4BIS) * is_positive(DISFBASE) * is_positive(PISF) * 1 - is_positive(SEUIL_12 - ISF4BIS) * 1 - is_zero(ISF4BIS) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIGISF * 1 - is_positive(saisies.get('V_NOTRAIT', 0) - 20) + is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIGISF * 1 - is_positive(saisies.get('ANNUL2042', 0))
LIGISFDEG = 1 - is_positive(LIGISFDEGR) * IND9HI0 * is_positive(ISFDEG)
LIGISFNMRDEG = 1 - is_positive(LIGISFDEGR) * 1 - is_zero(ISF5) * is_positive(SEUIL_12 - ISF4BIS) * is_positive(DISFBASE) * INDCTX23 * is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0))
LIGISFNOPEN = present(ISF5) * is_positive(DISFBASE) * 1 - is_positive(PISF) * 1 - is_positive(LIGISFCOR) * LIGISF * 1 - is_positive(saisies.get('ANNUL2042', 0))
LIGNMAJISF1 = is_positive(NMAJISF1) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIGISF * 1 - is_positive(SEUIL_12 - ISF4BIS) * 1 - is_zero(ISF5)
MAJTXISF1 = 1 - is_positive(saisies.get('V_NBCOD1728ISF', 0)) * 1 - is_positive(saisies.get('CMAJ_ISF', 0)) * is_positive(NMAJISF1) * TXPF1728ISF + is_positive(saisies.get('CMAJ_ISF', 0)) * COPETOISF + is_positive(saisies.get('V_NBCOD1728ISF', 0)) * -1
NAPCRPIAMD1 = PRS + CSG + RDSN + CVNSALC + CDIS + CGLOA + RSE1N + RSE2N + RSE3N + RSE4N + RSE5N
NAPISFTOT = ISF5 + PISF
NMAJC1 = max(0, MAJO1728CS + round(CSG - saisies.get('CSGIM', 0) * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJOCSTARDIF_D + FLAG_TRTARDIF_F * is_positive(PROPCS_A) * MAJOCSTARDIF_P + 1 - is_positive(PROPCS_A) * MAJOCSTARDIF_D - FLAG_TRTARDIF_F * 1 - is_positive(PROPCS_A) * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOCSTARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOCSTARDIF_A) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJC4 = sum([MAJOCS30, MAJOCS32, MAJOCS55, MAJOCS3, MAJOCS4, MAJOCS5, MAJOCS6]) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJCDIS1 = max(0, MAJO1728CDIS + round(CDIS - saisies.get('CDISPROV', 0) * COPETO / 100) * 1 - V_CNR + saisies.get('FLAG_TRTARDIF', 0) * MAJOCDISTARDIF_D + FLAG_TRTARDIF_F * MAJOCDISTARDIF_D - FLAG_TRTARDIF_F * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOCDISTARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOCDISTARDIF_A) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJCDIS4 = sum([MAJOCDIS55, MAJOCDIS3, MAJOCDIS4, MAJOCDIS5, MAJOCDIS6]) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJCVN1 = max(0, MAJO1728CVN + round(CVNSALC - saisies.get('COD8YT', 0) * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJOCVNTARDIF_D + FLAG_TRTARDIF_F * MAJOCVNTARDIF_D - FLAG_TRTARDIF_F * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOCVNTARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOCVNTARDIF_A) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJCVN4 = sum([MAJOCVN55, MAJOCVN3, MAJOCVN4, MAJOCVN5, MAJOCVN6]) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJGLO1 = max(0, MAJO1728GLO + round(CGLOA - saisies.get('COD8YL', 0) * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJOGLOTARDIF_D + FLAG_TRTARDIF_F * MAJOGLOTARDIF_D - FLAG_TRTARDIF_F * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOGLOTARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOGLOTARDIF_A) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJGLO4 = sum([MAJOGLO55, MAJOGLO3, MAJOGLO4, MAJOGLO5, MAJOGLO6]) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJP1 = max(0, MAJO1728PS + round(PRS - saisies.get('PRSPROV', 0) * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJOPSTARDIF_D + FLAG_TRTARDIF_F * is_positive(PROPPS_A) * MAJOPSTARDIF_P + 1 - is_positive(PROPPS_A) * MAJOPSTARDIF_D - FLAG_TRTARDIF_F * 1 - is_positive(PROPPS_A) * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOPSTARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOPSTARDIF_A) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJP4 = sum([MAJOPS30, MAJOPS32, MAJOPS55, MAJOPS3, MAJOPS4, MAJOPS5, MAJOPS6]) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJR1 = max(0, MAJO1728RD + round(RDSN - saisies.get('CRDSIM', 0) * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJORDTARDIF_D + FLAG_TRTARDIF_F * is_positive(PROPRD_A) * MAJORDTARDIF_P + 1 - is_positive(PROPRD_A) * MAJORDTARDIF_D - FLAG_TRTARDIF_F * 1 - is_positive(PROPCS_A) * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJORDTARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJORDTARDIF_A) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJR4 = sum([MAJORD30, MAJORD32, MAJORD55, MAJORD3, MAJORD4, MAJORD5, MAJORD6]) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJRSE11 = max(0, MAJO1728RSE1 + round(RSE1N - saisies.get('CSPROVYD', 0) * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJORSE1TARDIF_D + FLAG_TRTARDIF_F * MAJORSE1TARDIF_D - FLAG_TRTARDIF_F * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJORSE1TARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJORSE1TARDIF_A) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJRSE14 = sum([MAJORSE155, MAJORSE13, MAJORSE14, MAJORSE15, MAJORSE16]) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJRSE21 = max(0, MAJO1728RSE2 + round(max(0, RSE8TV - CIRSE8TV - saisies.get('CSPROVYF', 0)) + max(0, RSE8SA - CIRSE8SA - saisies.get('CSPROVYN', 0)) * COPETO / 100) * 1 - V_CNR + saisies.get('FLAG_TRTARDIF', 0) * MAJORSE2TARDIF_D + FLAG_TRTARDIF_F * MAJORSE2TARDIF_D - FLAG_TRTARDIF_F * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJORSE2TARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJORSE2TARDIF_A) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJRSE24 = sum([MAJORSE255, MAJORSE23, MAJORSE24, MAJORSE25, MAJORSE26]) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJRSE31 = max(0, MAJO1728RSE3 + round(RSE3N - saisies.get('CSPROVYG', 0) * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJORSE3TARDIF_D + FLAG_TRTARDIF_F * MAJORSE3TARDIF_D - FLAG_TRTARDIF_F * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJORSE3TARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJORSE3TARDIF_A) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJRSE34 = sum([MAJORSE355, MAJORSE33, MAJORSE34, MAJORSE35, MAJORSE36]) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJRSE41 = max(0, MAJO1728RSE4 + round(max(0, RSE8TX - CIRSE8TX - saisies.get('CSPROVYH', 0)) + max(0, RSE8SB - CIRSE8SB - saisies.get('CSPROVYP', 0)) * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJORSE4TARDIF_D + FLAG_TRTARDIF_F * MAJORSE4TARDIF_D - FLAG_TRTARDIF_F * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJORSE4TARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJORSE4TARDIF_A) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJRSE44 = sum([MAJORSE455, MAJORSE43, MAJORSE44, MAJORSE45, MAJORSE46]) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJRSE51 = max(0, MAJO1728RSE5 + round(RSE5N - saisies.get('CSPROVYE', 0) * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJORSE5TARDIF_D + FLAG_TRTARDIF_F * MAJORSE5TARDIF_D - FLAG_TRTARDIF_F * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJORSE5TARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJORSE5TARDIF_A) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
NMAJRSE54 = sum([MAJORSE555, MAJORSE53, MAJORSE54, MAJORSE55, MAJORSE56]) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
PERPPLAFC = is_positive(PERPINDC) * BOOL_0AM * max(0, is_positive(PERPREVTOTC) * max(min(round(PERPREVTOTC * TX_PERPPLAF / 100), LIM_PERPMAX), LIM_PERPMIN) - saisies.get('PERPC', 0) + 1 - is_positive(PERPREVTOTC) * LIM_PERPMIN - saisies.get('PERPC', 0)) * 1 - V_CNR
PERPPLAFCOMC = is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLAFC * 3 + 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * 0
PERPPLAFCOMV = is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLAFV * 3 + 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * 0
PERPPLAFIMPC = is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLAFCOMC + PERPPLAFC + 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * 0
PERPPLAFIMPV = is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLAFCOMV + PERPPLAFV + 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * 0
PERPSALDP = PREP10P * PERP_BOOL
PERPSALNP = PERPSALP - PERPSALDP
PERP_COND1 = is_positive(PERP_MUT) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * is_positive(saisies.get('PERP_COTV', 0) - PERPPLATVANT) * is_positive(PERPPLATCANT - saisies.get('PERP_COTC', 0)) + is_positive(saisies.get('PERPIMPATRIE', 0)) * is_positive(saisies.get('PERP_COTV', 0) - PERPPLAFIMPV) * is_positive(PERPPLAFIMPC - saisies.get('PERP_COTC', 0))
PERP_COND2 = is_positive(PERP_MUT) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * is_positive(saisies.get('PERP_COTC', 0) - PERPPLATCANT) * is_positive(PERPPLATVANT - saisies.get('PERP_COTV', 0)) + is_positive(saisies.get('PERPIMPATRIE', 0)) * is_positive(saisies.get('PERP_COTC', 0) - PERPPLAFIMPC) * is_positive(PERPPLAFIMPV - saisies.get('PERP_COTV', 0))
PRNV = is_positive(TSNTV) * is_positive(TSNTV + PRNNV) * TSNTV + PRNNV + positif_ou_nul(TSNTV) * PRNNV
PRRV = round(PRNV * PRBV / EXPRV)
RDBASE = RDSN - saisies.get('CRDSIM', 0)
RETISF = RETISF2 + round(ISF5 * TXINTISF / 100) * positif_ou_nul(ISF4BIS - SEUIL_12)
RPERPMUTC = is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTC', 0) - PERPPLATCANT, PERPPLATVANT - saisies.get('PERP_COTV', 0))) + is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTC', 0) - PERPPLAFIMPC, PERPPLAFIMPV - saisies.get('PERP_COTV', 0)))
RPERPMUTV = is_positive(PERP_COND1) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTV', 0) - PERPPLATVANT, PERPPLATCANT - saisies.get('PERP_COTC', 0))) + is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTV', 0) - PERPPLAFIMPV, PERPPLAFIMPC - saisies.get('PERP_COTC', 0)))
TABTS1CJ = round(TREP101 * saisies.get('TSHALLO1', 0) / TTSB1)
TABTS1DJ = round(TREP102 * saisies.get('TSHALLO2', 0) / TTSB2)
TABTS1EJ = round(TREP103 * saisies.get('TSHALLO3', 0) / TTSB3)
TABTS1FJ = round(TREP104 * saisies.get('TSHALLO4', 0) / TTSB4)
TPRV = TSNV + PRNV - sum([GLN1V, GLN2V, GLN3V])
TSN1CJ = saisies.get('TSHALLO1', 0) - ABTS1CJ
TSN1CP = saisies.get('ALLO1', 0) - ABTS1CP
TSN1DJ = saisies.get('TSHALLO2', 0) - ABTS1DJ
TSN1DP = saisies.get('ALLO2', 0) - ABTS1DP
TSN1EJ = saisies.get('TSHALLO3', 0) - ABTS1EJ
TSN1EP = saisies.get('ALLO3', 0) - ABTS1EP
TSN1FJ = saisies.get('TSHALLO4', 0) - ABTS1FJ
TSN1FP = saisies.get('ALLO4', 0) - ABTS1FP
TSNNV = is_positive(TSV) * round(TSV * TSBNV + saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0) / EXTSV) + 1 - is_positive(TSV) * TSV
TSNRCJ = saisies.get('CARTSP1', 0) - ABTSRCJ
TSNRCP = saisies.get('REMPLAP1', 0) - ABTSRCP
TSNRDJ = saisies.get('CARTSP2', 0) - ABTSRDJ
TSNRDP = saisies.get('REMPLAP2', 0) - ABTSRDP
TSNREJ = saisies.get('CARTSP3', 0) - ABTSREJ
TSNREP = saisies.get('REMPLAP3', 0) - ABTSREP
TSNRFJ = saisies.get('CARTSP4', 0) - ABTSRFJ
TSNRFP = saisies.get('REMPLAP4', 0) - ABTSRFP
TSNT1 = TSN1CJ + TSN1CP + TSNRCJ + TSNRCP
TSNT2 = TSN1DJ + TSN1DP + TSNRDJ + TSNRDP
TSNT3 = TSN1EJ + TSN1EP + TSNREJ + TSNREP
TSNT4 = TSN1FJ + TSN1FP + TSNRFJ + TSNRFP
TSPRDV = min(0, TSNNV + PRRV) * ART1731BIS
TSPRV = TSNNV + PRRV * 1 - PREM8_11 + max(0, TSNNV + PRRV) * PREM8_11
TTSN1CJ = saisies.get('TSHALLO1', 0) - TABTS1CJ
TTSN1DJ = saisies.get('TSHALLO2', 0) - TABTS1DJ
TTSN1EJ = saisies.get('TSHALLO3', 0) - TABTS1EJ
TTSN1FJ = saisies.get('TSHALLO4', 0) - TABTS1FJ
ZIGTITRE = is_positive(is_positive(BCSG + saisies.get('V_CSANT', 0) + BRDS + saisies.get('V_RDANT', 0) + BPRS + saisies.get('V_PSANT', 0)) * 1 - V_CNR * 1 - is_positive(ZIG_RF + max(0, NPLOCNETSF)) + is_positive(BCVNSAL + saisies.get('V_CVNANT', 0) + BCDIS + saisies.get('V_CDISANT', 0)) * TYPE4) * 1 - is_positive(saisies.get('ANNUL2042', 0))
ZIGTITRECRPS = is_positive(BCSG + saisies.get('V_CSANT', 0)) * is_positive(BRDS + saisies.get('V_RDANT', 0)) * is_positive(BPRS + saisies.get('V_PSANT', 0)) * is_positive(BCVNSAL + saisies.get('V_CVNANT', 0)) * 1 - V_CNR * 1 - is_positive(ZIG_RF + max(0, NPLOCNETSF)) * LIG2
ZIG_TAUXCRP = ZIG_TITRECRP
ABDOMDBJ = is_positive(saisies.get('CODDBJ', 0)) * is_positive(saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(REP10C * saisies.get('CODDBJ', 0) / TSBC) + 1 - is_positive(saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, REP10C - ABTSC) + 0
ABDOMEBJ = is_positive(saisies.get('CODEBJ', 0)) * is_positive(saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(REP10C * saisies.get('CODEBJ', 0) / TSBC) + 1 - is_positive(saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, REP10C - ABTSC - ABDOMDBJ) + 0
ABGL1C = is_positive(saisies.get('GLD1C', 0)) * is_positive(saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(REP10C * saisies.get('GLD1C', 0) / TSBC) + 1 - is_positive(saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, REP10C - ABTSC - ABDOMDBJ - ABDOMEBJ) + 0
ABGL2C = is_positive(saisies.get('GLD2C', 0)) * is_positive(saisies.get('GLD3C', 0)) * round(REP10C * saisies.get('GLD2C', 0) / TSBC) + 1 - is_positive(saisies.get('GLD3C', 0)) * max(0, REP10C - ABTSC - ABDOMDBJ - ABDOMEBJ - ABGL1C) + 0
ABGL3C = max(0, REP10C - ABTSC - ABDOMDBJ - ABDOMEBJ - ABGL1C - ABGL2C) + 0
ABGLTC = sum([ABGL1C, ABGL2C, ABGL3C]) + ABDOMDBJ + ABDOMEBJ
DFRCM3 = saisies.get('DEFRCM4', 0) * is_positive(DFRCMN) + saisies.get('DEFRCM4', 0) * is_positive(saisies.get('DEFRCM', 0) + saisies.get('DEFRCM2', 0) + saisies.get('DEFRCM3', 0) - RCM_I) * 1 - is_positive(DFRCMN) + max(0, saisies.get('DEFRCM4', 0) - RCM_I - saisies.get('DEFRCM', 0)) * positif_ou_nul(RCM_I - saisies.get('DEFRCM', 0) - saisies.get('DEFRCM2', 0) - saisies.get('DEFRCM3', 0)) * 1 - is_positive(DFRCMN) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFRCM4', 0), REPRCM - REPRCMBIS - DFRCM5 - DFRCM4) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFRCM4', 0) * is_positive(ART1731BIS * PREM8_11)
FRNRETENUV = max(0, FRNRETV + TSPRDV)
GLDOMAVDBJC = max(saisies.get('CODDBJ', 0) - ABDOMDBJ, 0) * INDEFTSC
GLDOMAVEBJC = max(saisies.get('CODEBJ', 0) - ABDOMEBJ, 0) * INDEFTSC
GLN1C = max(saisies.get('GLD1C', 0) - ABGL1C, 0) * INDEFTSC
GLN2C = max(saisies.get('GLD2C', 0) - ABGL2C, 0) * INDEFTSC
GLN3C = max(saisies.get('GLD3C', 0) - ABGL3C, 0) * INDEFTSC
GLN4C = max(saisies.get('CODDBJ', 0) - ABDOMDBJ, 0) + max(saisies.get('CODEBJ', 0) - ABDOMEBJ, 0) * INDEFTSC
GLN4DBJC = max(saisies.get('CODDBJ', 0) - ABDOMDBJ, 0) * INDEFTSC
GLNAV1C = max(saisies.get('GLD1C', 0) - ABGL1C, 0) * INDEFTSC
GLNAV2C = max(saisies.get('GLD2C', 0) - ABGL2C, 0) * INDEFTSC
GLNAV3C = max(saisies.get('GLD3C', 0) - ABGL3C, 0) * INDEFTSC
ILI_SYNT_ISF = 1 - positif_ou_nul(ISF4BIS - SEUIL_12) * is_zero(saisies.get('V_ANTISF', 0) + 0) * ISF4BIS + positif_ou_nul(ISF4BIS - SEUIL_12) * ISF4BIS
ISF4BASE = ISF4BIS * positif_ou_nul(ISF4BIS - SEUIL_12)
ISFIN = ISF4BASE
ISFNET = NAPISFTOT
LIGDFRCM3 = is_positive(DFRCM3) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGISFRET = is_positive(RETISF) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIGISF * 1 - is_positive(SEUIL_12 - ISF4BIS) * 1 - is_zero(ISF5)
MAJOTOT28PS = NMAJC1 + NMAJR1 + NMAJP1 + NMAJCVN1 + NMAJREGV1 + NMAJCDIS1 + NMAJGLO1 + NMAJRSE11 + NMAJRSE21 + NMAJRSE31 + NMAJRSE41 + NMAJRSE51
MAJTXC1 = 1 - is_positive(saisies.get('V_NBCOD1728CRP', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJC1 + NMAJR1 + NMAJP1) * TXPF1728CRP + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728CRP', 0)) * -1
MAJTXC4 = 1 - is_positive(saisies.get('V_NBCODICRP', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJC4 + NMAJR4 + NMAJP4) * TXPFICRP + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCODICRP', 0)) * -1
MAJTXCDIS1 = 1 - is_positive(saisies.get('V_NBCOD1728CDIS', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJCDIS1) * TXPF1728CDIS + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728CDIS', 0)) * -1
MAJTXCDIS4 = 1 - is_positive(saisies.get('V_NBCODICDIS', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJCDIS4) * TXPFICDIS + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCODICDIS', 0)) * -1
MAJTXCVN1 = 1 - is_positive(saisies.get('V_NBCOD1728CVN', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJCVN1) * TXPF1728CVN + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728CVN', 0)) * -1
MAJTXGLO1 = 1 - is_positive(saisies.get('V_NBCOD1728GLO', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJGLO1) * TXPF1728GLO + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728GLO', 0)) * -1
MAJTXP1 = MAJTXC1
MAJTXP4 = MAJTXC4
MAJTXR1 = MAJTXC1
MAJTXR4 = MAJTXC4
MAJTXRSE11 = 1 - is_positive(saisies.get('V_NBCOD1728RSE1', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJRSE11) * TXPF1728RSE1 + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728RSE1', 0)) * -1
MAJTXRSE14 = 1 - is_positive(saisies.get('V_NBCODIRSE1', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJRSE14) * TXPFIRSE1 + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCODIRSE1', 0)) * -1
MAJTXRSE21 = 1 - is_positive(saisies.get('V_NBCOD1728RSE2', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJRSE21) * TXPF1728RSE2 + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728RSE2', 0)) * -1
MAJTXRSE24 = 1 - is_positive(saisies.get('V_NBCODIRSE2', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJRSE24) * TXPFIRSE2 + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCODIRSE2', 0)) * -1
MAJTXRSE31 = 1 - is_positive(saisies.get('V_NBCOD1728RSE3', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJRSE31) * TXPF1728RSE3 + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728RSE3', 0)) * -1
MAJTXRSE34 = 1 - is_positive(saisies.get('V_NBCODIRSE3', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJRSE34) * TXPFIRSE3 + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCODIRSE3', 0)) * -1
MAJTXRSE41 = 1 - is_positive(saisies.get('V_NBCOD1728RSE4', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJRSE41) * TXPF1728RSE4 + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728RSE4', 0)) * -1
MAJTXRSE44 = 1 - is_positive(saisies.get('V_NBCODIRSE4', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJRSE44) * TXPFIRSE4 + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCODIRSE4', 0)) * -1
MAJTXRSE51 = 1 - is_positive(saisies.get('V_NBCOD1728RSE5', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJRSE51) * TXPF1728RSE5 + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728RSE5', 0)) * -1
NATMAJISF = is_positive(is_positive(RETISF) * is_positive(NMAJISF1) + is_positive(NMAJISF1)) + 2 * is_positive(RETISF) * 1 - is_positive(NMAJISF1)
NMAJISF1BIS = max(0, MAJO1728ISF + round(ISF4BASE * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJOISFTARDIF_D + FLAG_TRTARDIF_F * MAJOISFTARDIF_D - FLAG_TRTARDIF_F * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOISFTARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOISFTARDIF_A)
NMAJRSE1TOT = NMAJRSE11 + NMAJRSE21 + NMAJRSE31 + NMAJRSE41 + NMAJRSE51
NMAJRSE4TOT = NMAJRSE14 + NMAJRSE24 + NMAJRSE34 + NMAJRSE44 + NMAJRSE54
PERPPLAFMU1C = is_positive(PERP_COND1) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLATCANT - RPERPMUTV + is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLAFIMPC - RPERPMUTV + is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLATCANT + RPERPMUTC + is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLAFIMPC + RPERPMUTC
PERPPLAFMU1V = is_positive(PERP_COND1) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLATVANT + RPERPMUTV + is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLAFIMPV + RPERPMUTV + is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLATVANT - RPERPMUTC + is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLAFIMPV - RPERPMUTC
PERPPLAFMUTC = is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLATCANT + max(0, PERPPLATVANT - saisies.get('PERP_COTV', 0)) + is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLAFIMPC + max(0, PERPPLAFIMPV - saisies.get('PERP_COTV', 0))
PERPPLAFMUTV = is_positive(PERP_COND1) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLATVANT + max(0, PERPPLATCANT - saisies.get('PERP_COTC', 0)) + is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLAFIMPV + max(0, PERPPLAFIMPC - saisies.get('PERP_COTC', 0))
PERPREVTOTP = max(0, PERPSALNP + PERPNONSALP)
PRN1 = is_positive(TSNT1) * is_positive(TSNT1 + PRNN1) * TSNT1 + PRNN1 + positif_ou_nul(TSNT1) * PRNN1
PRN2 = is_positive(TSNT2) * is_positive(TSNT2 + PRNN2) * TSNT2 + PRNN2 + positif_ou_nul(TSNT2) * PRNN2
PRN3 = is_positive(TSNT3) * is_positive(TSNT3 + PRNN3) * TSNT3 + PRNN3 + positif_ou_nul(TSNT3) * PRNN3
PRN4 = is_positive(TSNT4) * is_positive(TSNT4 + PRNN4) * TSNT4 + PRNN4 + positif_ou_nul(TSNT4) * PRNN4
PRR1 = round(PRN1 * PRB1 / EXPR1)
PRR2 = round(PRN2 * PRB2 / EXPR2)
PRR21 = is_positive(saisies.get('PEBF1', 0) + saisies.get('PENSALP1', 0) + saisies.get('CODRCZ', 0)) * round(PRN1 * saisies.get('CARPEP1', 0) / EXPR1) + 1 - is_positive(saisies.get('PEBF1', 0) + saisies.get('PENSALP1', 0) + saisies.get('CODRCZ', 0)) * PRN1 - PRR1
PRR22 = is_positive(saisies.get('PEBF2', 0) + saisies.get('PENSALP2', 0) + saisies.get('CODRDZ', 0)) * round(PRN2 * saisies.get('CARPEP2', 0) / EXPR2) + 1 - is_positive(saisies.get('PEBF2', 0) + saisies.get('PENSALP2', 0) + saisies.get('CODRDZ', 0)) * PRN2 - PRR2
PRR2V = is_positive(saisies.get('PEBFV', 0) + saisies.get('PENSALV', 0) + saisies.get('CODRAZ', 0)) * round(PRNV * saisies.get('CARPEV', 0) / EXPRV) + 1 - is_positive(saisies.get('PEBFV', 0) + saisies.get('PENSALV', 0) + saisies.get('CODRAZ', 0)) * PRNV - PRRV
PRR2Z1 = is_positive(saisies.get('PEBF1', 0) + saisies.get('PENSALP1', 0)) * round(PRN1 * saisies.get('CODRCZ', 0) / EXPR1) + 1 - is_positive(saisies.get('PEBF1', 0) + saisies.get('PENSALP1', 0)) * PRN1 - PRR1 - PRR21
PRR2Z2 = is_positive(saisies.get('PEBF2', 0) + saisies.get('PENSALP2', 0)) * round(PRN2 * saisies.get('CODRDZ', 0) / EXPR2) + 1 - is_positive(saisies.get('PEBF2', 0) + saisies.get('PENSALP2', 0)) * PRN2 - PRR2 - PRR22
PRR2ZV = is_positive(saisies.get('PEBFV', 0) + saisies.get('PENSALV', 0)) * round(PRNV * saisies.get('CODRAZ', 0) / EXPRV) + 1 - is_positive(saisies.get('PEBFV', 0) + saisies.get('PENSALV', 0)) * PRNV - PRRV - PRR2V
PRR3 = round(PRN3 * PRB3 / EXPR3)
PRR4 = round(PRN4 * PRB4 / EXPR4)
REV4 = _4BAQTOTNET + GLN4V + GLN4C
REV4C = GLN4DBJC
REV4TVC = GLN4V + GLN4C
REV4VC = GLN4DAJV + GLN4DBJC
RPERPC = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTC', 0), PERPPLATCANT) + saisies.get('RACCOTC', 0)) + is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTC', 0), PERPPLAFIMPC) + saisies.get('RACCOTC', 0)) + is_positive(PERP_COND1) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTC', 0), PERPPLATCANT) + saisies.get('RACCOTC', 0)) + is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTC', 0), PERPPLAFIMPC) + saisies.get('RACCOTC', 0)) + is_positive(PERP_COND2) * min(saisies.get('PERP_COTC', 0), PERPPLAFMUTC) + saisies.get('RACCOTC', 0)
RPERPV = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTV', 0), PERPPLATVANT) + saisies.get('RACCOTV', 0)) + is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTV', 0), PERPPLAFIMPV) + saisies.get('RACCOTV', 0)) + is_positive(PERP_COND1) * min(saisies.get('PERP_COTV', 0), PERPPLAFMUTV) + saisies.get('RACCOTV', 0) + is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTV', 0), PERPPLATVANT) + saisies.get('RACCOTV', 0)) + is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTV', 0), PERPPLAFIMPV) + saisies.get('RACCOTV', 0))
TABTS1CC = is_positive(saisies.get('ALLO1', 0) + saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)) * round(TREP101 * max(0, saisies.get('SALEXT1', 0) - saisies.get('COD1CD', 0)) / TTSB1) + 1 - is_positive(saisies.get('ALLO1', 0) + saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)) * max(0, TREP101 - TABTS1CJ)
TABTS1CP = is_positive(saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)) * round(TREP101 * saisies.get('ALLO1', 0) / TTSB1) + 1 - is_positive(saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)) * max(0, TREP101 - TABTS1CJ - TABTS1CC)
TABTS1DC = is_positive(saisies.get('ALLO2', 0) + saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)) * round(TREP102 * max(0, saisies.get('SALEXT2', 0) - saisies.get('COD1DD', 0)) / TTSB2) + 1 - is_positive(saisies.get('ALLO2', 0) + saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)) * max(0, TREP102 - TABTS1DJ)
TABTS1DP = is_positive(saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)) * round(TREP102 * saisies.get('ALLO2', 0) / TTSB2) + 1 - is_positive(saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)) * max(0, TREP102 - TABTS1DJ - TABTS1DC)
TABTS1EC = is_positive(saisies.get('ALLO3', 0) + saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)) * round(TREP103 * max(0, saisies.get('SALEXT3', 0) - saisies.get('COD1ED', 0)) / TTSB3) + 1 - is_positive(saisies.get('ALLO3', 0) + saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)) * max(0, TREP103 - TABTS1EJ)
TABTS1EP = is_positive(saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)) * round(TREP103 * saisies.get('ALLO3', 0) / TTSB3) + 1 - is_positive(saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)) * max(0, TREP103 - TABTS1EJ - TABTS1EC)
TABTS1FC = is_positive(saisies.get('ALLO4', 0) + saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)) * round(TREP104 * max(0, saisies.get('SALEXT4', 0) - saisies.get('COD1FD', 0)) / TTSB4) + 1 - is_positive(saisies.get('ALLO4', 0) + saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)) * max(0, TREP104 - TABTS1FJ)
TABTS1FP = is_positive(saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)) * round(TREP104 * saisies.get('ALLO4', 0) / TTSB4) + 1 - is_positive(saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)) * max(0, TREP104 - TABTS1FJ - TABTS1FC)
TABTSRCJ = is_positive(saisies.get('REMPLAP1', 0)) * round(TREP101 * saisies.get('CARTSP1', 0) / TTSB1) + 1 - is_positive(saisies.get('REMPLAP1', 0)) * max(0, TREP101 - TABTS1CJ - TABTS1CC - TABTS1CP)
TABTSRCP = max(0, TREP101 - TABTS1CJ - TABTS1CC - TABTS1CP - TABTSRCJ)
TABTSRDJ = is_positive(saisies.get('REMPLAP2', 0)) * round(TREP102 * saisies.get('CARTSP2', 0) / TTSB2) + 1 - is_positive(saisies.get('REMPLAP2', 0)) * max(0, TREP102 - TABTS1DJ - TABTS1DC - TABTS1DP)
TABTSRDP = max(0, TREP102 - TABTS1DJ - TABTS1DC - TABTS1DP - TABTSRDJ)
TABTSREJ = is_positive(saisies.get('REMPLAP3', 0)) * round(TREP103 * saisies.get('CARTSP3', 0) / TTSB3) + 1 - is_positive(saisies.get('REMPLAP3', 0)) * max(0, TREP103 - TABTS1EJ - TABTS1EC - TABTS1EP)
TABTSREP = max(0, TREP103 - TABTS1EJ - TABTS1EC - TABTS1EP - TABTSREJ)
TABTSRFJ = is_positive(saisies.get('REMPLAP4', 0)) * round(TREP104 * saisies.get('CARTSP4', 0) / TTSB4) + 1 - is_positive(saisies.get('REMPLAP4', 0)) * max(0, TREP104 - TABTS1FJ - TABTS1FC - TABTS1FP)
TABTSRFP = max(0, TREP104 - TABTS1FJ - TABTS1FC - TABTS1FP - TABTSRFJ)
TFRDPROVV = TTSBNV + TPRV + saisies.get('PALIV', 0) - TAPRV
TFRDV = 1 - is_positive(PREM8_11) * saisies.get('FRNV', 0) + saisies.get('COD1AE', 0) * is_positive(saisies.get('FRNV', 0) + saisies.get('COD1AE', 0) - T10MINSV) + is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRNV', 0) + saisies.get('COD1AE', 0), TFRDPROVV) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRNV', 0) + saisies.get('COD1AE', 0), min(TFRDPROVV, max(TFRDPROVVP2, TFRDPROVV1731)))
TFRNRETENUV = max(0, TFRNRETV + TSPRDV)
TIND_10V = positif_ou_nul(T10MINSV - TFRDV + saisies.get('COD1AE', 0))
TSN1 = is_positive(TSNT1) * min(0, TSNT1 + PRNN1) + positif_ou_nul(TSNT1) * TSNT1
TSN2 = is_positive(TSNT2) * min(0, TSNT2 + PRNN2) + positif_ou_nul(TSNT2) * TSNT2
TSN3 = is_positive(TSNT3) * min(0, TSNT3 + PRNN3) + positif_ou_nul(TSNT3) * TSNT3
TSN4 = is_positive(TSNT4) * min(0, TSNT4 + PRNN4) + positif_ou_nul(TSNT4) * TSNT4
TSNDBJ = saisies.get('CODDBJ', 0) - ABDOMDBJ
TSNEBJ = saisies.get('CODEBJ', 0) - ABDOMEBJ
TSNGL1C = saisies.get('GLD1C', 0) - ABGL1C
TSNGL2C = saisies.get('GLD2C', 0) - ABGL2C
TSNGL3C = saisies.get('GLD3C', 0) - ABGL3C
TSNN2TSV = is_positive(TSV) * is_positive(saisies.get('REMPLAV', 0)) * round(TSV * saisies.get('CARTSV', 0) / EXTSV) + 1 - is_positive(saisies.get('REMPLAV', 0)) * TSV - TSNNV
TSNN2V = is_positive(TSV) * is_positive(saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0)) * round(TSV * _2TSNV / EXTSV) + 1 - is_positive(saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0)) * TSV - TSNNV
TSNN2VAFF = is_positive(TSV) * is_positive(saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0)) * round(TSV * _2TSNV / EXTSV) + 1 - is_positive(saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0)) * TSV - TSNNV + is_positive(saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0)) * max(saisies.get('CODDAJ', 0) - ABDOMDAJ, 0) + max(saisies.get('CODEAJ', 0) - ABDOMEAJ, 0)
TSNTC = TSN1BJ + TSN1BP + TSN3VK + TSN1UT + TSNRBJ + TSNRBP + TSNDBJ + TSNEBJ + TSNGL1C + TSNGL2C + TSNGL3C
TTSN1CC = max(0, saisies.get('SALEXT1', 0) - saisies.get('COD1CD', 0)) - TABTS1CC
TTSN1CP = saisies.get('ALLO1', 0) - TABTS1CP
TTSN1DC = max(0, saisies.get('SALEXT2', 0) - saisies.get('COD1DD', 0)) - TABTS1DC
TTSN1DP = saisies.get('ALLO2', 0) - TABTS1DP
TTSN1EC = max(0, saisies.get('SALEXT3', 0) - saisies.get('COD1ED', 0)) - TABTS1EC
TTSN1EP = saisies.get('ALLO3', 0) - TABTS1EP
TTSN1FC = max(0, saisies.get('SALEXT4', 0) - saisies.get('COD1FD', 0)) - TABTS1FC
TTSN1FP = saisies.get('ALLO4', 0) - TABTS1FP
TTSNRCJ = saisies.get('CARTSP1', 0) - TABTSRCJ
TTSNRCP = saisies.get('REMPLAP1', 0) - TABTSRCP
TTSNRDJ = saisies.get('CARTSP2', 0) - TABTSRDJ
TTSNRDP = saisies.get('REMPLAP2', 0) - TABTSRDP
TTSNREJ = saisies.get('CARTSP3', 0) - TABTSREJ
TTSNREP = saisies.get('REMPLAP3', 0) - TABTSREP
TTSNRFJ = saisies.get('CARTSP4', 0) - TABTSRFJ
TTSNRFP = saisies.get('REMPLAP4', 0) - TABTSRFP
TTSNT1 = TTSN1CJ + TTSN1CC + TTSN1CP + TTSNRCJ + TTSNRCP
TTSNT2 = TTSN1DJ + TTSN1DC + TTSN1DP + TTSNRDJ + TTSNRDP
TTSNT3 = TTSN1EJ + TTSN1EC + TTSN1EP + TTSNREJ + TTSNREP
TTSNT4 = TTSN1FJ + TTSN1FC + TTSN1FP + TTSNRFJ + TTSNRFP
ZIGTAUX1 = ZIGTITRECRPS
DFRCM2 = saisies.get('DEFRCM3', 0) * is_positive(DFRCMN) + saisies.get('DEFRCM3', 0) * is_positive(saisies.get('DEFRCM', 0) + saisies.get('DEFRCM2', 0) - RCM_I) * 1 - is_positive(DFRCMN) + max(0, saisies.get('DEFRCM3', 0) - RCM_I - saisies.get('DEFRCM', 0)) * positif_ou_nul(RCM_I - saisies.get('DEFRCM', 0) - saisies.get('DEFRCM2', 0)) * 1 - is_positive(DFRCMN) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFRCM3', 0), REPRCM - REPRCMBIS - DFRCM5 - DFRCM4 - DFRCM3) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFRCM3', 0) * is_positive(ART1731BIS * PREM8_11)
FRD1REP = is_positive(ART1731BIS) * max(0, max(0, saisies.get('FRN1', 0) - FRD1) - PRN1 * 1 - is_positive(saisies.get('FRN1', 0) - FRD1) * is_zero(IND_101) + max(0, saisies.get('FRN2', 0) - FRD2) - PRN2 * 1 - is_positive(saisies.get('FRN2', 0) - FRD2) * is_zero(IND_102) + max(0, saisies.get('FRN3', 0) - FRD3) - PRN3 * 1 - is_positive(saisies.get('FRN3', 0) - FRD3) * is_zero(IND_103) + max(0, saisies.get('FRN4', 0) - FRD4) - PRN4 * 1 - is_positive(saisies.get('FRN4', 0) - FRD4) * is_zero(IND_104) + max(0, FRN11731 - _10MINS1) * IND_101 * is_positive(FRN11731) + max(0, FRN21731 - _10MINS2) * IND_102 * is_positive(FRN21731) + max(0, FRN31731 - _10MINS3) * IND_103 * is_positive(FRN31731) + max(0, FRN41731 - _10MINS4) * IND_104 * is_positive(FRN41731))
GLN1 = GLN1V + GLN1C
GLN2 = GLN2V + GLN2C
GLN3 = GLN3V + GLN3C
ISFCUM = is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * ISFNET * positif_ou_nul(ISFNET - SEUIL_12) + min(0, ISFNET) * is_positive(SEUIL_12 - ISFNET) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(SEUIL_12 - ISF4BIS) * 0 + 1 - is_positive(SEUIL_12 - ISF4BIS) * is_positive(positif_ou_nul(ISFNET + saisies.get('V_ANTISF', 0) - SEUIL_8) + positif_ou_nul(ISFNET - saisies.get('V_ANTISF', 0) - SEUIL_12)) * ISFNET + 1 - is_positive(positif_ou_nul(ISFNET + saisies.get('V_ANTISF', 0) - SEUIL_8) + positif_ou_nul(ISFNET - saisies.get('V_ANTISF', 0) - SEUIL_12)) * saisies.get('V_ANTISF', 0) * 1 - is_positive(saisies.get('APPLI_OCEANS', 0))
ISFNAP = ISFCUM - saisies.get('V_ANTISF', 0)
LIGDFRCM2 = is_positive(DFRCM2) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGISF9269 = 1 - is_positive(LIGISFRET + LIGNMAJISF1) * 1 - is_positive(SEUIL_12 - ISFNAP) * INDIS26
LIGISF9749 = is_positive(LIGNMAJISF1) * 1 - is_positive(LIGISFRET)
LIGISFNET = is_positive(PISF) * is_positive(DISFBASE) * 1 - is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * 1 - is_positive(SEUIL_12 - ISF4BIS) * 1 - is_zero(ISF5) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIGISF + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(LIGISFRET + LIGNMAJISF1) * is_positive(ISFNAP) * 1 - is_positive(SEUIL_12 - ISFNAP) * 1 - is_positive(INDCTX23)
LIGISFNMRIS = is_positive(SEUIL_12 - ISFNAP) * INDIS26 * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * 1 - is_positive(saisies.get('ANNUL2042', 0))
NATIMPISF = max(0, 1 * is_positive(ISFCUM) + 2 * 1 - is_positive(ISFCUM) * 1 - is_zero(ISFNET) + 3 * is_zero(ISFNET) * is_positive(saisies.get('ISFBASE', 0)) + 0 * is_zero(INDCTX23) * is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_zero(saisies.get('ISFBASE', 0)) + positif_ou_nul(saisies.get('ISF_LIMINF', 0) + saisies.get('ISF_LIMSUP', 0)) * is_zero(4 - saisies.get('V_IND_TRAIT', 0)))
NBLIGNESISF = is_positive(LIGISFBASE) * 3 + is_positive(LIGISFDEC) * 3 + is_positive(LIGISFBRUT) * 6 + is_positive(LIGISFRED) * 2 + is_positive(LIGISFREDPEN8) * 2 + is_positive(LIGISFDON) * 2 + is_positive(LIGISFRAN) + is_positive(LIGISFCEE) + is_positive(LIGISFINV) * 2 + is_positive(LIGISFPMED) + is_positive(LIGISFPMEI) + is_positive(LIGISFIP) + is_positive(LIGISFCPI) + is_positive(LIGISFIMPU) * 3 + is_positive(LIGISFPLAF) * 5 + is_positive(LIGISFE) * 3 + is_positive(LIGISFNOPEN) * 1 + is_positive(LIGISFCOR) * 1 + is_positive(LIGISFRET) * 2 + is_positive(LIGISF9749) + is_positive(LIGNMAJISF1) * 2 + is_positive(LIGISFANT) * 2 + is_positive(LIGISFNET) * 3 + is_positive(LIGISF9269) * 3 + is_positive(LIGISFANNUL) * 3 + is_positive(LIGISFDEG) * 2 + is_positive(LIGISFDEGR) * 2 + is_positive(LIGISFZERO) * 3 + is_positive(LIGISFNMR) * 4 + is_positive(LIGISFNMRIS) * 3 + is_positive(LIGISF0DEG) * 2 + is_positive(LIGISFNMRDEG) * 3 + is_positive(LIGISFNMRDEG) * 3 + is_positive(LIGISFINF8) * 3 + is_positive(LIGISFNEW) * 2 + is_positive(LIGISFTRCT) + 0
PENF1 = is_positive(saisies.get('PENSALP1', 0)) * round(PRN1 * saisies.get('PEBF1', 0) / EXPR1) + 1 - is_positive(saisies.get('PENSALP1', 0)) * PRN1 - PRR1 - PRR21 - PRR2Z1
PENF2 = is_positive(saisies.get('PENSALP2', 0)) * round(PRN2 * saisies.get('PEBF2', 0) / EXPR2) + 1 - is_positive(saisies.get('PENSALP2', 0)) * PRN2 - PRR2 - PRR22 - PRR2Z2
PENFV = is_positive(saisies.get('PENSALV', 0)) * round(PRNV * saisies.get('PEBFV', 0) / EXPRV) + 1 - is_positive(saisies.get('PENSALV', 0)) * max(0, PRNV - PRRV - PRR2V - PRR2ZV)
PERPDCOTC = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * min(saisies.get('PERP_COTC', 0), PERPPLATCANT) + is_positive(saisies.get('PERPIMPATRIE', 0)) * min(saisies.get('PERP_COTC', 0), PERPPLAFIMPC) + is_positive(PERP_COND1) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * min(saisies.get('PERP_COTC', 0), PERPPLATCANT) + is_positive(saisies.get('PERPIMPATRIE', 0)) * min(saisies.get('PERP_COTC', 0), PERPPLAFIMPC) + is_positive(PERP_COND2) * min(saisies.get('PERP_COTC', 0), PERPPLAFMU1C)
PERPDCOTV = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * min(saisies.get('PERP_COTV', 0), PERPPLATVANT) + is_positive(saisies.get('PERPIMPATRIE', 0)) * min(saisies.get('PERP_COTV', 0), PERPPLAFIMPV) + is_positive(PERP_COND1) * min(saisies.get('PERP_COTV', 0), PERPPLAFMU1V) + is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * min(saisies.get('PERP_COTV', 0), PERPPLATVANT) + is_positive(saisies.get('PERPIMPATRIE', 0)) * min(saisies.get('PERP_COTV', 0), PERPPLAFIMPV)
PERPPLAFNU2C = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * is_positive(PERPPLAFCANT + PERPPLAFNUC3ANT - RPERPC) * PERPPLAFNUC2ANT + 1 - is_positive(PERPPLAFCANT + PERPPLAFNUC3ANT - RPERPC) * max(0, PERPPLAFNUC2ANT - RPERPC - PERPPLAFCANT - PERPPLAFNUC3ANT) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * 0 + is_positive(PERP_COND1) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * is_positive(PERPPLAFCANT + PERPPLAFNUC3ANT - RPERPC - RPERPMUTV - saisies.get('RACCOTV', 0)) * PERPPLAFNUC2ANT + 1 - is_positive(PERPPLAFCANT + PERPPLAFNUC3ANT - RPERPC - RPERPMUTV - saisies.get('RACCOTV', 0)) * max(0, PERPPLAFNUC2ANT - RPERPC + RPERPMUTV + saisies.get('RACCOTV', 0) - PERPPLAFCANT + PERPPLAFNUC3ANT) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * 0 + is_positive(PERP_COND2) * 0
PERPPLAFNU2V = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * is_positive(PERPPLAFVANT + PERPPLAFNUV3ANT - RPERPV) * PERPPLAFNUV2ANT + 1 - is_positive(PERPPLAFVANT + PERPPLAFNUV3ANT - RPERPV) * max(0, PERPPLAFNUV2ANT - RPERPV - PERPPLAFVANT - PERPPLAFNUV3ANT) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * 0 + is_positive(PERP_COND1) * 0 + is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * is_positive(PERPPLAFVANT + PERPPLAFNUV3ANT - RPERPV - RPERPMUTC - saisies.get('RACCOTC', 0)) * PERPPLAFNUV2ANT + 1 - is_positive(PERPPLAFVANT + PERPPLAFNUV3ANT - RPERPV - RPERPMUTC - saisies.get('RACCOTC', 0)) * max(0, PERPPLAFNUV2ANT - RPERPV + RPERPMUTC + saisies.get('RACCOTC', 0) - PERPPLAFVANT + PERPPLAFNUV3ANT) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * 0
PERPPLAFNUC = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * max(0, PERPPLAFCANT - RPERPC) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * max(0, PERPPLAFC - RPERPC) + is_positive(PERP_COND1) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, PERPPLAFCANT - RPERPC - RPERPMUTV - saisies.get('RACCOTV', 0)) + is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, PERPPLAFC - RPERPC - RPERPMUTV - saisies.get('RACCOTV', 0)) + is_positive(PERP_COND2) * 0
PERPPLAFNUNC = max(0, PERPPLAFNUC)
PERPPLAFNUTC = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * max(PERPPLATCANT - RPERPC, 0) + is_positive(PERP_COND1) * max(0, PERPPLATCANT - RPERPC - RPERPMUTV - saisies.get('RACCOTV', 0)) + is_positive(PERP_COND2) * 0
PERPPLAFNUTV = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * max(PERPPLATVANT - RPERPV, 0) + is_positive(PERP_COND1) * 0 + is_positive(PERP_COND2) * max(0, PERPPLATVANT - RPERPV - RPERPMUTC - saisies.get('RACCOTC', 0))
PERPPLAFNUV = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * max(0, PERPPLAFVANT - RPERPV) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * max(0, PERPPLAFV - RPERPV) + is_positive(PERP_COND1) * 0 + is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, PERPPLAFVANT - RPERPV - RPERPMUTC - saisies.get('RACCOTC', 0)) + is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, PERPPLAFV - RPERPV - RPERPMUTC - saisies.get('RACCOTC', 0))
PERPPLAFP = is_positive(PERPINDP) * max(0, is_positive(PERPREVTOTP) * max(min(round(PERPREVTOTP * TX_PERPPLAF / 100), LIM_PERPMAX), LIM_PERPMIN) - saisies.get('PERPP', 0) + 1 - is_positive(PERPREVTOTP) * LIM_PERPMIN - saisies.get('PERPP', 0)) * 1 - V_CNR
PRNC = is_positive(TSNTC) * is_positive(TSNTC + PRNNC) * TSNTC + PRNNC + positif_ou_nul(TSNTC) * PRNNC
PRR23 = is_positive(saisies.get('PEBF3', 0) + saisies.get('PENSALP3', 0) + saisies.get('CODREZ', 0)) * round(PRN3 * saisies.get('CARPEP3', 0) / EXPR3) + 1 - is_positive(saisies.get('PEBF3', 0) + saisies.get('PENSALP3', 0) + saisies.get('CODREZ', 0)) * PRN3 - PRR3
PRR24 = is_positive(saisies.get('PEBF4', 0) + saisies.get('PENSALP4', 0) + saisies.get('CODRFZ', 0)) * round(PRN4 * saisies.get('CARPEP4', 0) / EXPR4) + 1 - is_positive(saisies.get('PEBF4', 0) + saisies.get('PENSALP4', 0) + saisies.get('CODRFZ', 0)) * PRN4 - PRR4
PRR2Z3 = is_positive(saisies.get('PEBF3', 0) + saisies.get('PENSALP3', 0)) * round(PRN3 * saisies.get('CODREZ', 0) / EXPR3) + 1 - is_positive(saisies.get('PEBF3', 0) + saisies.get('PENSALP3', 0)) * PRN3 - PRR3 - PRR23
PRR2Z4 = is_positive(saisies.get('PEBF4', 0) + saisies.get('PENSALP4', 0)) * round(PRN4 * saisies.get('CODRFZ', 0) / EXPR4) + 1 - is_positive(saisies.get('PEBF4', 0) + saisies.get('PENSALP4', 0)) * PRN4 - PRR4 - PRR24
PRR2ZP = PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4
PRRC = round(PRNC * PRBC / EXPRC)
TFPTV = max(TFRDV, T10MINSV)
TFRDVREP = is_positive(ART1731BIS) * max(0, saisies.get('FRNV', 0) - TFRDV) * is_zero(TIND_10V)
TPR1 = TSN1 + PRN1
TPR2 = TSN2 + PRN2
TPR3 = TSN3 + PRN3
TPR4 = TSN4 + PRN4
TPRN1 = is_positive(TTSNT1) * is_positive(TTSNT1 + TPRNN1) * TTSNT1 + TPRNN1 + positif_ou_nul(TTSNT1) * TPRNN1
TPRN2 = is_positive(TTSNT2) * is_positive(TTSNT2 + TPRNN2) * TTSNT2 + TPRNN2 + positif_ou_nul(TTSNT2) * TPRNN2
TPRN3 = is_positive(TTSNT3) * is_positive(TTSNT3 + TPRNN3) * TTSNT3 + TPRNN3 + positif_ou_nul(TTSNT3) * TPRNN3
TPRN4 = is_positive(TTSNT4) * is_positive(TTSNT4 + TPRNN4) * TTSNT4 + TPRNN4 + positif_ou_nul(TTSNT4) * TPRNN4
TPRR1 = round(TPRN1 * PRB1 / TEXPR1) + round(TPRN1 * saisies.get('COD1CH', 0) / TEXPR1)
TPRR2 = round(TPRN2 * PRB2 / TEXPR2) + round(TPRN2 * saisies.get('COD1DH', 0) / TEXPR2)
TPRR21 = is_positive(saisies.get('PEBF1', 0) + saisies.get('PENSALP1', 0) + saisies.get('CODRCZ', 0)) * round(TPRN1 * saisies.get('CARPEP1', 0) / TEXPR1) + 1 - is_positive(saisies.get('PEBF1', 0) + saisies.get('PENSALP1', 0) + saisies.get('CODRCZ', 0)) * TPRN1 - TPRR1
TPRR22 = is_positive(saisies.get('PEBF2', 0) + saisies.get('PENSALP2', 0) + saisies.get('CODRDZ', 0)) * round(TPRN2 * saisies.get('CARPEP2', 0) / TEXPR2) + 1 - is_positive(saisies.get('PEBF2', 0) + saisies.get('PENSALP2', 0) + saisies.get('CODRDZ', 0)) * TPRN2 - TPRR2
TPRR2Z1 = is_positive(saisies.get('PEBF1', 0) + saisies.get('PENSALP1', 0)) * round(TPRN1 * saisies.get('CODRCZ', 0) / TEXPR1) + 1 - is_positive(saisies.get('PEBF1', 0) + saisies.get('PENSALP1', 0)) * TPRN1 - TPRR1 - TPRR21
TPRR2Z2 = is_positive(saisies.get('PEBF2', 0) + saisies.get('PENSALP2', 0)) * round(TPRN2 * saisies.get('CODRDZ', 0) / TEXPR2) + 1 - is_positive(saisies.get('PEBF2', 0) + saisies.get('PENSALP2', 0)) * TPRN2 - TPRR2 - TPRR22
TPRR3 = round(TPRN3 * PRB3 / TEXPR3) + round(TPRN3 * saisies.get('COD1EH', 0) / TEXPR3)
TPRR4 = round(TPRN4 * PRB4 / TEXPR4) + round(TPRN4 * saisies.get('COD1FH', 0) / TEXPR4)
TREP10V = TIND_10V * TD10MV + 1 - TIND_10V * TFPTV
TS1 = TSN1
TS2 = TSN2
TS3 = TSN3
TS4 = TSN4
TSNC = is_positive(TSNTC) * min(0, TSNTC + PRNNC) + positif_ou_nul(TSNTC) * TSNTC
TSNN1 = is_positive(TS1) * round(TS1 * TSBN1 / EXTS1) + 1 - is_positive(TS1) * TS1
TSNN2 = is_positive(TS2) * round(TS2 * TSBN2 / EXTS2) + 1 - is_positive(TS2) * TS2
TSNN21 = is_positive(TS1) * is_positive(saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)) * round(TS1 * _2TSN1 / EXTS1) + 1 - is_positive(saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)) * TS1 - TSNN1
TSNN21AFF = is_positive(TS1) * is_positive(saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)) * round(TS1 * _2TSN1 / EXTS1) + 1 - is_positive(saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)) * TS1 - TSNN1
TSNN22 = is_positive(TS2) * is_positive(saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)) * round(TS2 * _2TSN2 / EXTS2) + 1 - is_positive(saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)) * TS2 - TSNN2
TSNN22AFF = is_positive(TS2) * is_positive(saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)) * round(TS2 * _2TSN2 / EXTS2) + 1 - is_positive(saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)) * TS2 - TSNN2
TSNN2REMPV = is_positive(TSV) * TSV - TSNNV - TSNN2TSV
TSNN2TS1 = is_positive(TS1) * is_positive(saisies.get('REMPLAP1', 0)) * round(TS1 * saisies.get('CARTSP1', 0) / EXTS1) + 1 - is_positive(saisies.get('REMPLAP1', 0)) * TS1 - TSNN1
TSNN2TS2 = is_positive(TS2) * is_positive(saisies.get('REMPLAP2', 0)) * round(TS2 * saisies.get('CARTSP2', 0) / EXTS2) + 1 - is_positive(saisies.get('REMPLAP2', 0)) * TS2 - TSNN2
TSNN3 = is_positive(TS3) * round(TS3 * TSBN3 / EXTS3) + 1 - is_positive(TS3) * TS3
TSNN4 = is_positive(TS4) * round(TS4 * TSBN4 / EXTS4) + 1 - is_positive(TS4) * TS4
TSPR1 = TSNN1 + PRR1 * 1 - PREM8_11 + max(0, TSNN1 + PRR1) * PREM8_11
TSPR2 = TSNN2 + PRR2 * 1 - PREM8_11 + max(0, TSNN2 + PRR2) * PREM8_11
TSPR3 = TSNN3 + PRR3 * 1 - PREM8_11 + max(0, TSNN3 + PRR3) * PREM8_11
TSPR4 = TSNN4 + PRR4 * 1 - PREM8_11 + max(0, TSNN4 + PRR4) * PREM8_11
TSPRD1 = min(0, TSNN1 + PRR1) * ART1731BIS
TSPRD2 = min(0, TSNN2 + PRR2) * ART1731BIS
TSPRD3 = min(0, TSNN3 + PRR3) * ART1731BIS
TSPRD4 = min(0, TSNN4 + PRR4) * ART1731BIS
TSPRP = sum([TSPR1, TSPR2, TSPR3, TSPR4]) * 1 - PREM8_11 + max(0, TSNN1 + PRR1 + TSNN2 + PRR2 + TSNN3 + PRR3 + TSNN4 + PRR4) * PREM8_11
TTSN1 = is_positive(TTSNT1) * min(0, TTSNT1 + TPRNN1) + positif_ou_nul(TTSNT1) * TTSNT1
TTSN2 = is_positive(TTSNT2) * min(0, TTSNT2 + TPRNN2) + positif_ou_nul(TTSNT2) * TTSNT2
TTSN3 = is_positive(TTSNT3) * min(0, TTSNT3 + TPRNN3) + positif_ou_nul(TTSNT3) * TTSNT3
TTSN4 = is_positive(TTSNT4) * min(0, TTSNT4 + TPRNN4) + positif_ou_nul(TTSNT4) * TTSNT4
DFRCM1 = saisies.get('DEFRCM2', 0) * is_positive(DFRCMN) + saisies.get('DEFRCM2', 0) * is_positive(saisies.get('DEFRCM', 0) - RCM_I) * 1 - is_positive(DFRCMN) + max(0, saisies.get('DEFRCM2', 0) - RCM_I - saisies.get('DEFRCM', 0)) * positif_ou_nul(RCM_I - saisies.get('DEFRCM', 0)) * 1 - is_positive(DFRCMN) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFRCM2', 0), REPRCM - REPRCMBIS - DFRCM5 - DFRCM4 - DFRCM3 - DFRCM2) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFRCM2', 0) * is_positive(ART1731BIS * PREM8_11)
FRNRETENU1 = max(0, FRNRET1 + TSPRD1)
FRNRETENU2 = max(0, FRNRET2 + TSPRD2)
FRNRETENU3 = max(0, FRNRET3 + TSPRD3)
FRNRETENU4 = max(0, FRNRET4 + TSPRD4)
LIGDFRCM = is_positive(DFRCMN + DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGDFRCM1 = is_positive(DFRCM1) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGNBPAGESISF = is_positive(NBLIGNESISF - 41 + 0)
PENALIM1 = is_positive(EXPR1) * PRN1 - PRR1 - PRR21 - PRR2Z1 - PENF1
PENALIM2 = is_positive(EXPR2) * PRN2 - PRR2 - PRR22 - PRR2Z2 - PENF2
PENALIMV = is_positive(EXPRV) * PRNV - PRRV - PRR2V - PRR2ZV - PENFV
PENF3 = is_positive(saisies.get('PENSALP3', 0)) * round(PRN3 * saisies.get('PEBF3', 0) / EXPR3) + 1 - is_positive(saisies.get('PENSALP3', 0)) * PRN3 - PRR3 - PRR23 - PRR2Z3
PENF4 = is_positive(saisies.get('PENSALP4', 0)) * round(PRN4 * saisies.get('PEBF4', 0) / EXPR4) + 1 - is_positive(saisies.get('PENSALP4', 0)) * PRN4 - PRR4 - PRR24 - PRR2Z4
PENFP = PENF1 + PENF2 + PENF3 + PENF4
PENSTOTV = PRR2V + PRR2ZV + PENALIMV
PERPINDAFFC = is_positive(PERPINDC * 1 - V_CNR * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_zero(IND_BTANC - 1) * is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * is_positive(PERPPLAFNUNC + PERPPLAFC + positif_ou_nul(saisies.get('PERPC', 0)) * is_positive(PERPREVTOTC)) + 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * present(saisies.get('PERPPLAFCC', 0)) + present(saisies.get('V_BTPERPC', 0)) * present(saisies.get('PERPPLAFNUC1', 0)) + present(saisies.get('V_BTPERPNUC1', 0)) * present(saisies.get('PERPPLAFNUC2', 0)) + present(saisies.get('V_BTPERPNUC2', 0)) * present(saisies.get('PERPPLAFNUC3', 0)) + present(saisies.get('V_BTPERPNUC3', 0)) + is_zero(IND_BTANC - 2) * is_positive(saisies.get('V_BTPERPC', 0) + saisies.get('V_BTPERPNUC1', 0) + saisies.get('V_BTPERPNUC2', 0) + saisies.get('V_BTPERPNUC3', 0) + saisies.get('PERPPLAFCC', 0) + saisies.get('PERPPLAFNUC1', 0) + saisies.get('PERPPLAFNUC2', 0) + saisies.get('PERPPLAFNUC3', 0)))
PERPINDCC = BOOL_0AM * is_positive(saisies.get('V_BTPERPTOTC', 0) + saisies.get('PERPPLAFCC', 0) + saisies.get('PERPPLAFNUC1', 0) + saisies.get('PERPPLAFNUC2', 0) + PERPPLAFNUNC + saisies.get('PERP_COTC', 0) + saisies.get('RACCOTC', 0)) * PERPINDC * 1 - V_CNR
PERPPLAFCOMP = is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLAFP * 3 + 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * 0
PERPPLAFIMPP = is_positive(saisies.get('PERPIMPATRIE', 0)) * PERPPLAFCOMP + PERPPLAFP + 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * 0
PERPPLAFNU3C = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * is_positive(PERPPLAFNUC) * PERPPLAFNUC3ANT + 1 - is_positive(PERPPLAFNUC) * max(0, PERPPLAFNUC3ANT - RPERPC - PERPPLAFCANT) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * 0 + is_positive(PERP_COND1) * is_positive(PERPPLAFNUC) * PERPPLAFNUC3ANT + 1 - is_positive(PERPPLAFNUC) * max(0, PERPPLAFNUC3ANT - RPERPC + RPERPMUTV + saisies.get('RACCOTV', 0) - PERPPLAFCANT) + is_positive(PERP_COND2) * 0
PERPPLAFNU3V = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * is_positive(PERPPLAFNUV) * PERPPLAFNUV3ANT + 1 - is_positive(PERPPLAFNUV) * max(0, PERPPLAFNUV3ANT - RPERPV - PERPPLAFVANT) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * 0 + is_positive(PERP_COND1) * 0 + is_positive(PERP_COND2) * is_positive(PERPPLAFNUV) * PERPPLAFNUV3ANT + 1 - is_positive(PERPPLAFNUV) * max(0, PERPPLAFNUV3ANT - RPERPV + RPERPMUTC + saisies.get('RACCOTC', 0) - PERPPLAFVANT)
PERPPLAFNUNV = max(0, PERPPLAFNUV)
PRR2C = is_positive(saisies.get('PEBFC', 0) + saisies.get('PENSALC', 0) + saisies.get('CODRBZ', 0)) * round(PRNC * saisies.get('CARPEC', 0) / EXPRC) + 1 - is_positive(saisies.get('PEBFC', 0) + saisies.get('PENSALC', 0) + saisies.get('CODRBZ', 0)) * PRNC - PRRC
PRR2ZC = is_positive(saisies.get('PEBFC', 0) + saisies.get('PENSALC', 0)) * round(PRNC * saisies.get('CODRBZ', 0) / EXPRC) + 1 - is_positive(saisies.get('PEBFC', 0) + saisies.get('PENSALC', 0)) * PRNC - PRRC - PRR2C
RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _1RCM_I - REPRCM1) - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * 0 * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _1RCM_I - REPRCM1)) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
RPERPP = 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTP', 0), PERPPLATPANT) + saisies.get('RACCOTP', 0)) + is_positive(saisies.get('PERPIMPATRIE', 0)) * max(0, min(saisies.get('PERP_COTP', 0), PERPPLAFIMPP) + saisies.get('RACCOTP', 0))
RRCM = max(0, RCM)
TABTS1AJ = is_positive(saisies.get('SALEXTV', 0) + saisies.get('ALLOV', 0) + saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0) + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(TREP10V * saisies.get('TSHALLOV', 0) / TTSBV) + 1 - is_positive(saisies.get('SALEXTV', 0) + saisies.get('ALLOV', 0) + saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0) + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * TREP10V
TFRD1REP = is_positive(ART1731BIS) * max(0, max(0, saisies.get('FRN1', 0) - TFRD1) - TPRN1 * 1 - is_positive(saisies.get('FRN1', 0) - TFRD1) * is_zero(TIND_101) + max(0, saisies.get('FRN2', 0) - TFRD2) - TPRN2 * 1 - is_positive(saisies.get('FRN2', 0) - TFRD2) * is_zero(TIND_102) + max(0, saisies.get('FRN3', 0) - TFRD3) - TPRN3 * 1 - is_positive(saisies.get('FRN3', 0) - TFRD3) * is_zero(TIND_103) + max(0, saisies.get('FRN4', 0) - TFRD4) - TPRN4 * 1 - is_positive(saisies.get('FRN4', 0) - TFRD4) * is_zero(TIND_104))
TFRNRETENU1 = max(0, TFRNRET1 + TSPRD1)
TFRNRETENU2 = max(0, TFRNRET2 + TSPRD2)
TFRNRETENU3 = max(0, TFRNRET3 + TSPRD3)
TFRNRETENU4 = max(0, TFRNRET4 + TSPRD4)
TPENF1 = is_positive(saisies.get('PENSALP1', 0)) * round(TPRN1 * saisies.get('PEBF1', 0) / TEXPR1) + 1 - is_positive(saisies.get('PENSALP1', 0)) * TPRN1 - TPRR1 - TPRR21 - TPRR2Z1
TPENF2 = is_positive(saisies.get('PENSALP2', 0)) * round(TPRN2 * saisies.get('PEBF2', 0) / TEXPR2) + 1 - is_positive(saisies.get('PENSALP2', 0)) * TPRN2 - TPRR2 - TPRR22 - TPRR2Z2
TPRC = TSNC + PRNC - sum([GLN1C, GLN2C, GLN3C])
TPRR23 = is_positive(saisies.get('PEBF3', 0) + saisies.get('PENSALP3', 0) + saisies.get('CODREZ', 0)) * round(TPRN3 * saisies.get('CARPEP3', 0) / TEXPR3) + 1 - is_positive(saisies.get('PEBF3', 0) + saisies.get('PENSALP3', 0) + saisies.get('CODREZ', 0)) * TPRN3 - TPRR3
TPRR24 = is_positive(saisies.get('PEBF4', 0) + saisies.get('PENSALP4', 0) + saisies.get('CODRFZ', 0)) * round(TPRN4 * saisies.get('CARPEP4', 0) / TEXPR4) + 1 - is_positive(saisies.get('PEBF4', 0) + saisies.get('PENSALP4', 0) + saisies.get('CODRFZ', 0)) * TPRN4 - TPRR4
TPRR2Z3 = is_positive(saisies.get('PEBF3', 0) + saisies.get('PENSALP3', 0)) * round(TPRN3 * saisies.get('CODREZ', 0) / TEXPR3) + 1 - is_positive(saisies.get('PEBF3', 0) + saisies.get('PENSALP3', 0)) * TPRN3 - TPRR3 - TPRR23
TPRR2Z4 = is_positive(saisies.get('PEBF4', 0) + saisies.get('PENSALP4', 0)) * round(TPRN4 * saisies.get('CODRFZ', 0) / TEXPR4) + 1 - is_positive(saisies.get('PEBF4', 0) + saisies.get('PENSALP4', 0)) * TPRN4 - TPRR4 - TPRR24
TSC = TSNC - sum([max(0, saisies.get('GLD1C', 0) - ABGL1C), max(0, saisies.get('GLD2C', 0) - ABGL2C), max(0, saisies.get('GLD3C', 0) - ABGL3C)]) - max(saisies.get('CODDBJ', 0) - ABDOMDBJ, 0) - max(saisies.get('CODEBJ', 0) - ABDOMEBJ, 0)
TSNN23 = is_positive(TS3) * is_positive(saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)) * round(TS3 * _2TSN3 / EXTS3) + 1 - is_positive(saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)) * TS3 - TSNN3
TSNN23AFF = is_positive(TS3) * is_positive(saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)) * round(TS3 * _2TSN3 / EXTS3) + 1 - is_positive(saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)) * TS3 - TSNN3
TSNN24 = is_positive(TS4) * is_positive(saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)) * round(TS4 * _2TSN4 / EXTS4) + 1 - is_positive(saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)) * TS4 - TSNN4
TSNN24AFF = is_positive(TS4) * is_positive(saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)) * round(TS4 * _2TSN4 / EXTS4) + 1 - is_positive(saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)) * TS4 - TSNN4
TSNN2REMP1 = is_positive(TS1) * TS1 - TSNN1 - TSNN2TS1
TSNN2REMP2 = is_positive(TS2) * TS2 - TSNN2 - TSNN2TS2
TSNN2TS3 = is_positive(TS3) * is_positive(saisies.get('REMPLAP3', 0)) * round(TS3 * saisies.get('CARTSP3', 0) / EXTS3) + 1 - is_positive(saisies.get('REMPLAP3', 0)) * TS3 - TSNN3
TSNN2TS4 = is_positive(TS4) * is_positive(saisies.get('REMPLAP4', 0)) * round(TS4 * saisies.get('CARTSP4', 0) / EXTS4) + 1 - is_positive(saisies.get('REMPLAP4', 0)) * TS4 - TSNN4
TSNNC = is_positive(TSC) * round(TSC * TSBNC + saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0) / EXTSC) + 1 - is_positive(TSC) * TSC
TSNNT = abs(TSNNV + PRRV + TSNNC + PRRC + TSNN1 + PRR1 + TSNN2 + PRR2 + TSNN3 + PRR3 + TSNN4 + PRR4) * 1 - is_positive(TSNNV + PRRV + TSNNC + PRRC + TSNN1 + PRR1 + TSNN2 + PRR2 + TSNN3 + PRR3 + TSNN4 + PRR4)
TSPRC = TSNNC + PRRC * 1 - PREM8_11 + max(0, TSNNC + PRRC) * PREM8_11
TSPRDC = min(0, TSNNC + PRRC) * ART1731BIS
TSPRT = TSNNV + PRRV + TSNNC + PRRC + TSNN1 + PRR1 + TSNN2 + PRR2 + TSNN3 + PRR3 + TSNN4 + PRR4
TSPRTOT = sum([TSPRV, TSPRC, TSPR1, TSPR2, TSPR3, TSPR4]) * 1 - ART1731BIS + max(0, TSNNV + PRRV + TSNNC + PRRC + TSNN1 + PRR1 + TSNN2 + PRR2 + TSNN3 + PRR3 + TSNN4 + PRR4) * ART1731BIS
TTPR1 = TTSN1 + TPRN1
TTPR2 = TTSN2 + TPRN2
TTPR3 = TTSN3 + TPRN3
TTPR4 = TTSN4 + TPRN4
TTS1 = TTSN1
TTS2 = TTSN2
TTS3 = TTSN3
TTS4 = TTSN4
TTSN1AJ = saisies.get('TSHALLOV', 0) - TABTS1AJ
TTSNN1 = is_positive(TTS1) * round(TTS1 * TTSBN1 / TEXTS1) + 1 - is_positive(TTS1) * TTS1
TTSNN2 = is_positive(TTS2) * round(TTS2 * TTSBN2 / TEXTS2) + 1 - is_positive(TTS2) * TTS2
TTSNN21 = is_positive(TTS1) * is_positive(saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)) * round(TTS1 * T2TSN1 / TEXTS1) + 1 - is_positive(saisies.get('CARTSP1', 0) + saisies.get('REMPLAP1', 0)) * TTS1 - TTSNN1
TTSNN22 = is_positive(TTS2) * is_positive(saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)) * round(TTS2 * T2TSN2 / TEXTS2) + 1 - is_positive(saisies.get('CARTSP2', 0) + saisies.get('REMPLAP2', 0)) * TTS2 - TTSNN2
TTSNN2TS1 = is_positive(TTS1) * is_positive(saisies.get('REMPLAP1', 0)) * round(TTS1 * saisies.get('CARTSP1', 0) / TEXTS1) + 1 - is_positive(saisies.get('REMPLAP1', 0)) * TTS1 - TTSNN1
TTSNN2TS2 = is_positive(TTS2) * is_positive(saisies.get('REMPLAP2', 0)) * round(TTS2 * saisies.get('CARTSP2', 0) / TEXTS2) + 1 - is_positive(saisies.get('REMPLAP2', 0)) * TTS2 - TTSNN2
TTSNN3 = is_positive(TTS3) * round(TTS3 * TTSBN3 / TEXTS3) + 1 - is_positive(TTS3) * TTS3
TTSNN4 = is_positive(TTS4) * round(TTS4 * TTSBN4 / TEXTS4) + 1 - is_positive(TTS4) * TTS4
TTSPR1 = TTSNN1 + TPRR1 * 1 - PREM8_11 + max(0, TTSNN1 + TPRR1) * PREM8_11
TTSPR2 = TTSNN2 + TPRR2 * 1 - PREM8_11 + max(0, TTSNN2 + TPRR2) * PREM8_11
TTSPR3 = TTSNN3 + TPRR3 * 1 - PREM8_11 + max(0, TTSNN3 + TPRR3) * PREM8_11
TTSPR4 = TTSNN4 + TPRR4 * 1 - PREM8_11 + max(0, TTSNN4 + TPRR4) * PREM8_11
TTSPRD1 = min(0, TTSNN1 + TPRR1) * ART1731BIS
TTSPRD2 = min(0, TTSNN2 + TPRR2) * ART1731BIS
TTSPRD3 = min(0, TTSNN3 + TPRR3) * ART1731BIS
TTSPRD4 = min(0, TTSNN4 + TPRR4) * ART1731BIS
_2RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _2RCM_I - REPRCM2) * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _2RCM_I - REPRCM2)) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
_3RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _3RCM_I - REPRCM3) * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _3RCM_I - REPRCM3)) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
_4RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _4RCM_I - REPRCM4) * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _4RCM_I - REPRCM4)) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
_5RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _5RCM_I - REPRCM5) * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _5RCM_I - REPRCM5)) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
_6RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _6RCM_I - REPRCM6) * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _6RCM_I - REPRCM6)) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
_7RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _7RCM_I - REPRCM7) * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _7RCM_I - REPRCM7)) if ((saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]) else 0
B1FIS = max(RCM + _2RCM + _3RCM + _4RCM + _5RCM + _6RCM + _7RCM, 0)
DFRCM = DFRCMN + DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5 * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)))
FRNRETENUC = max(0, FRNRETC + TSPRDC)
PENALIM3 = is_positive(EXPR3) * PRN3 - PRR3 - PRR23 - PRR2Z3 - PENF3
PENALIM4 = is_positive(EXPR4) * PRN4 - PRR4 - PRR24 - PRR2Z4 - PENF4
PENALIMP = PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4
PENFC = is_positive(saisies.get('PENSALC', 0)) * round(PRNC * saisies.get('PEBFC', 0) / EXPRC) + 1 - is_positive(saisies.get('PENSALC', 0)) * max(0, PRNC - PRRC - PRR2C - PRR2ZC)
PENSTOTP = PRR2P + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + PENALIMP
PERPDCOTP = 1 - is_positive(saisies.get('PERPIMPATRIE', 0)) * min(saisies.get('PERP_COTP', 0), PERPPLATPANT) + is_positive(saisies.get('PERPIMPATRIE', 0)) * min(saisies.get('PERP_COTP', 0), PERPPLAFIMPP)
PERPINDAFFV = is_positive(PERPINDV * 1 - V_CNR * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_zero(IND_BTANC - 1) * is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * is_positive(PERPPLAFNUNV + PERPPLAFV + positif_ou_nul(saisies.get('PERPV', 0)) * is_positive(PERPREVTOTV)) + 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * present(saisies.get('PERPPLAFCV', 0)) + present(saisies.get('V_BTPERPV', 0)) * present(saisies.get('PERPPLAFNUV1', 0)) + present(saisies.get('V_BTPERPNUV1', 0)) * present(saisies.get('PERPPLAFNUV2', 0)) + present(saisies.get('V_BTPERPNUV2', 0)) * present(saisies.get('PERPPLAFNUV3', 0)) + present(saisies.get('V_BTPERPNUV3', 0)) + is_zero(IND_BTANC - 2) * is_positive(saisies.get('V_BTPERPV', 0) + saisies.get('V_BTPERPNUV1', 0) + saisies.get('V_BTPERPNUV2', 0) + saisies.get('V_BTPERPNUV3', 0) + saisies.get('PERPPLAFCV', 0) + saisies.get('PERPPLAFNUV1', 0) + saisies.get('PERPPLAFNUV2', 0) + saisies.get('PERPPLAFNUV3', 0)))
PERPINDCV = is_positive(saisies.get('V_BTPERPTOTV', 0) + saisies.get('PERPPLAFCV', 0) + saisies.get('PERPPLAFNUV1', 0) + saisies.get('PERPPLAFNUV2', 0) + PERPPLAFNUNV + saisies.get('PERP_COTV', 0) + saisies.get('RACCOTV', 0)) * PERPINDV * 1 - V_CNR
PERPPLAFNU1C = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * max(PERPPLAFNUTC - PERPPLAFNUNC - PERPPLAFNU3C - PERPPLAFNU2C, 0) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * 0 + is_positive(PERP_COND1) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * max(PERPPLAFNUTC - PERPPLAFNUNC - PERPPLAFNU3C - PERPPLAFNU2C, 0) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * 0 + is_positive(PERP_COND2) * 0
PERPPLAFNU1V = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * max(PERPPLAFNUTV - PERPPLAFNUNV - PERPPLAFNU3V - PERPPLAFNU2V, 0) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * 0 + is_positive(PERP_COND1) * 0 + is_positive(PERP_COND2) * 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * max(PERPPLAFNUTV - PERPPLAFNUNV - PERPPLAFNU3V - PERPPLAFNU2V, 0) + is_positive(PERP_COND2) * 0
PERPPLAFNU2P = 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * max(0, is_positive(PERPPLAFPANT + PERPPLAFNUP3ANT - RPERPP) * PERPPLAFNUP2ANT + 1 - is_positive(PERPPLAFPANT + PERPPLAFNUP3ANT - RPERPP) * max(0, PERPPLAFNUP2ANT - RPERPP - PERPPLAFPANT - PERPPLAFNUP3ANT)) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * 0
PERPPLAFNUP = 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * max(0, PERPPLAFPANT - RPERPP) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * max(0, PERPPLAFP - RPERPP)
PERPPLAFNUTP = max(PERPPLATPANT - RPERPP, 0)
PERPPLAFTC = PERPINDC * max(0, PERPPLAFC + PERPPLAFNUNC + PERPPLAFNU1C + PERPPLAFNU2C) * 1 - V_CNR
PERPPLAFTV = PERPINDV * max(0, PERPPLAFV + PERPPLAFNUNV + PERPPLAFNU1V + PERPPLAFNU2V) * 1 - V_CNR
REVRCM = _2RCM + _3RCM + _4RCM + _5RCM + _6RCM + _7RCM
TABTS1AC = is_positive(saisies.get('ALLOV', 0) + saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0) + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(TREP10V * max(0, saisies.get('SALEXTV', 0) - saisies.get('COD1AD', 0)) / TTSBV) + 1 - is_positive(saisies.get('ALLOV', 0) + saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0) + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, TREP10V - TABTS1AJ)
TABTS1AP = is_positive(saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0) + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(TREP10V * saisies.get('ALLOV', 0) / TTSBV) + 1 - is_positive(saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0) + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, TREP10V - TABTS1AJ - TABTS1AC)
TABTS3VJ = is_positive(saisies.get('GLDGRATV', 0) + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(TREP10V * saisies.get('BPCOSAV', 0) / TTSBV) + 1 - is_positive(saisies.get('GLDGRATV', 0) + saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, TREP10V - TABTS1AJ - TABTS1AC - TABTS1AP)
TFRDPROVC = TTSBNC + TPRC + saisies.get('PALIC', 0) - TAPRC
TFRNRETENUC = max(0, TFRNRETC + TSPRDC)
TPENALIM1 = is_positive(TEXPR1) * TPRN1 - TPRR1 - TPRR21 - TPRR2Z1 - TPENF1
TPENALIM2 = is_positive(TEXPR2) * TPRN2 - TPRR2 - TPRR22 - TPRR2Z2 - TPENF2
TPENF3 = is_positive(saisies.get('PENSALP3', 0)) * round(TPRN3 * saisies.get('PEBF3', 0) / TEXPR3) + 1 - is_positive(saisies.get('PENSALP3', 0)) * TPRN3 - TPRR3 - TPRR23 - TPRR2Z3
TPENF4 = is_positive(saisies.get('PENSALP4', 0)) * round(TPRN4 * saisies.get('PEBF4', 0) / TEXPR4) + 1 - is_positive(saisies.get('PENSALP4', 0)) * TPRN4 - TPRR4 - TPRR24 - TPRR2Z4
TSNN2C = is_positive(TSC) * is_positive(saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0)) * round(TSC * _2TSNC / EXTSC) + 1 - is_positive(saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0)) * TSC - TSNNC
TSNN2CAFF = is_positive(TSC) * is_positive(saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0)) * round(TSC * _2TSNC / EXTSC) + 1 - is_positive(saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0)) * TSC - TSNNC + is_positive(saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0)) * max(saisies.get('CODDBJ', 0) - ABDOMDBJ, 0) + max(saisies.get('CODEBJ', 0) - ABDOMEBJ, 0)
TSNN2REMP3 = is_positive(TS3) * TS3 - TSNN3 - TSNN2TS3
TSNN2REMP4 = is_positive(TS4) * TS4 - TSNN4 - TSNN2TS4
TSNN2TSC = is_positive(TSC) * is_positive(saisies.get('REMPLAC', 0)) * round(TSC * saisies.get('CARTSC', 0) / EXTSC) + 1 - is_positive(saisies.get('REMPLAC', 0)) * TSC - TSNNC
TSPR = TSPRT + RVTOT
TTSN1AC = max(0, saisies.get('SALEXTV', 0) - saisies.get('COD1AD', 0)) - TABTS1AC
TTSN1AP = saisies.get('ALLOV', 0) - TABTS1AP
TTSN3VJ = saisies.get('BPCOSAV', 0) - TABTS3VJ
TTSNN23 = is_positive(TTS3) * is_positive(saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)) * round(TTS3 * T2TSN3 / TEXTS3) + 1 - is_positive(saisies.get('CARTSP3', 0) + saisies.get('REMPLAP3', 0)) * TTS3 - TTSNN3
TTSNN24 = is_positive(TTS4) * is_positive(saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)) * round(TTS4 * T2TSN4 / TEXTS4) + 1 - is_positive(saisies.get('CARTSP4', 0) + saisies.get('REMPLAP4', 0)) * TTS4 - TTSNN4
TTSNN2REMP1 = is_positive(TTS1) * TTS1 - TTSNN1 - TTSNN2TS1
TTSNN2REMP2 = is_positive(TTS2) * TTS2 - TTSNN2 - TTSNN2TS2
TTSNN2TS3 = is_positive(TTS3) * is_positive(saisies.get('REMPLAP3', 0)) * round(TTS3 * saisies.get('CARTSP3', 0) / TEXTS3) + 1 - is_positive(saisies.get('REMPLAP3', 0)) * TTS3 - TTSNN3
TTSNN2TS4 = is_positive(TTS4) * is_positive(saisies.get('REMPLAP4', 0)) * round(TTS4 * saisies.get('CARTSP4', 0) / TEXTS4) + 1 - is_positive(saisies.get('REMPLAP4', 0)) * TTS4 - TTSNN4
PENALIMC = is_positive(EXPRC) * PRNC - PRRC - PRR2C - PRR2ZC - PENFC
PENSTOTC = PRR2C + PRR2ZC + PENALIMC
PERPPLAFNU3P = 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * max(0, is_positive(PERPPLAFNUP) * PERPPLAFNUP3ANT + 1 - is_positive(PERPPLAFNUP + 0) * PERPPLAFNUP3ANT - RPERPP - PERPPLAFPANT) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * 0
PERPPLAFNUNP = max(0, PERPPLAFNUP)
REVQTOT = saisies.get('CODRWB', 0) * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + saisies.get('CODRWB', 0) + saisies.get('CODRWA', 0) * is_zero(2 - saisies.get('FLAG_EXIT', 0)) + saisies.get('CODRVG', 0) + sum([REV1, REV2, REV3, REV4]) + REVALIM + REVF + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF
REVQTOTQHT = saisies.get('CODRWB', 0) * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + saisies.get('CODRWB', 0) + saisies.get('CODRWA', 0) * is_zero(2 - saisies.get('FLAG_EXIT', 0)) + saisies.get('CODRVG', 0) + sum([GLN1, GLN2, GLN3]) + REV4 + REVALIMQHT + REVF + REVTSQHT + REVTSREMPQHT + REVPRRQHT + REVRVO + REVRCM + REVRF
SHBA = saisies.get('ESFP', 0) + TSPR + RCM + BIN + BNN + PLOCNETF + NPLOCNETF + saisies.get('COD3UV', 0) + saisies.get('BPVRCM', 0) + saisies.get('PVTAXSB', 0) + saisies.get('PVIMPOS', 0) * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + saisies.get('COD3VE', 0) + saisies.get('PVIMPOS', 0) + saisies.get('PVSURSI', 0) * is_zero(2 - saisies.get('FLAG_EXIT', 0)) + RRFI + 0 * 1 - saisies.get('V_INDTEO', 0) + RRFTEO + 0 * saisies.get('V_INDTEO', 0) * 1 - ART1731BIS + saisies.get('ESFP', 0) + TSPR + RCM + BIN + BNN + PLOCNETF + NPLOCNETF + saisies.get('COD3UV', 0) + saisies.get('BPVRCM', 0) + saisies.get('PVTAXSB', 0) + saisies.get('PVIMPOS', 0) * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + saisies.get('COD3VE', 0) + saisies.get('PVIMPOS', 0) + saisies.get('PVSURSI', 0) * is_zero(2 - saisies.get('FLAG_EXIT', 0)) + RRFI + 0 * 1 - saisies.get('V_INDTEO', 0) + RRFTEO + 0 * saisies.get('V_INDTEO', 0) * ART1731BIS
SHBARFR = saisies.get('ESFP', 0) + TSPR + RCM + BIN + BNN + PLOCNETF + NPLOCNETF + PVBAR + RRFI + 0 * 1 - saisies.get('V_INDTEO', 0) + RRFTEO + 0 * saisies.get('V_INDTEO', 0)
SHBARFRHR = saisies.get('ESFP', 0) + TSPR + RCM + BIN + BNN + PLOCNETF + NPLOCNETF + PVBARHR + RRFI
SOMDEFBASUP = saisies.get('BACDEV', 0) + saisies.get('BAHDEV', 0) + saisies.get('BACDEC', 0) + saisies.get('BAHDEC', 0) + saisies.get('BACDEP', 0) + saisies.get('BAHDEP', 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - sum([GLN1, GLN2, GLN3]) + max(0, _4BAQV + _4BAQC + _4BAQP + BAHQTOTMIN + BAHQTOTMAXN) + GLN4V + GLN4C + sum([PENALIMV, PENALIMC, PENALIM1, PENALIM2, PENALIM3, PENALIM4]) + sum([PENFV, PENFC, PENF1, PENF2, PENF3, PENF4]) + sum([TSNN2TSV, TSNN2TSC, TSNN2TS1, TSNN2TS2, TSNN2TS3, TSNN2TS4]) + sum([TSNN2REMPV, TSNN2REMPC, TSNN2REMP1, TSNN2REMP2, TSNN2REMP3, TSNN2REMP4]) + sum([PRR2V, PRR2C, PRR21, PRR22, PRR23, PRR24]) + T2RV + _2RCM + _3RCM + _4RCM + _5RCM + _6RCM + _7RCM + _2REVF + _3REVF) + 0 + saisies.get('BACDEV', 0) + saisies.get('BAHDEV', 0) + saisies.get('BACDEC', 0) + saisies.get('BAHDEC', 0) + saisies.get('BACDEP', 0) + saisies.get('BAHDEP', 0) - DEFBANIF * 1 - is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - sum([GLN1, GLN2, GLN3]) + max(0, _4BAQV + _4BAQC + _4BAQP + BAHQTOTMIN + BAHQTOTMAXN) + GLN4V + GLN4C + sum([PENALIMV, PENALIMC, PENALIM1, PENALIM2, PENALIM3, PENALIM4]) + sum([PENFV, PENFC, PENF1, PENF2, PENF3, PENF4]) + sum([TSNN2TSV, TSNN2TSC, TSNN2TS1, TSNN2TS2, TSNN2TS3, TSNN2TS4]) + sum([TSNN2REMPV, TSNN2REMPC, TSNN2REMP1, TSNN2REMP2, TSNN2REMP3, TSNN2REMP4]) + sum([PRR2V, PRR2C, PRR21, PRR22, PRR23, PRR24]) + T2RV + _2RCM + _3RCM + _4RCM + _5RCM + _6RCM + _7RCM + _2REVF + _3REVF) + 0
SOMDEFICIT = SOMDEFANT + SOMDEFLOC + SOMDEFBNC + SOMDEFBASUP + SOMDEFTS + SOMDEFBIC + saisies.get('RFDHIS', 0)
SOMDEFICITHTS = SOMDEFANT + SOMDEFLOC + SOMDEFBNC + SOMDEFBASUP + SOMDEFBIC + saisies.get('RFDHIS', 0)
TABTS1TT = is_positive(saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(TREP10V * saisies.get('GLDGRATV', 0) / TTSBV) + 1 - is_positive(saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, TREP10V - TABTS1AJ - TABTS1AC - TABTS1AP - TABTS3VJ)
TABTSRAJ = is_positive(saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(TREP10V * saisies.get('CARTSV', 0) / TTSBV) + 1 - is_positive(saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, TREP10V - TABTS1AJ - TABTS1AC - TABTS1AP - TABTS3VJ - TABTS1TT)
TABTSRAP = is_positive(saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(TREP10V * saisies.get('REMPLAV', 0) / TTSBV) + 1 - is_positive(saisies.get('REMPLAV', 0) + saisies.get('CODDAJ', 0) + saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, TREP10V - TABTS1AJ - TABTS1AC - TABTS1AP - TABTS3VJ - TABTS1TT - TABTSRAJ)
TABTSV = TABTS1AJ + TABTS1AC + TABTS1AP + TABTS3VJ + TABTS1TT + TABTSRAJ + TABTSRAP
TFRDC = 1 - is_positive(ART1731BIS) * saisies.get('FRNC', 0) + saisies.get('COD1BE', 0) * is_positive(saisies.get('FRNC', 0) + saisies.get('COD1BE', 0) - T10MINSC) + is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRNC', 0) + saisies.get('COD1BE', 0), TFRDPROVC) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(PREM8_11) * min(saisies.get('FRNC', 0) + saisies.get('COD1BE', 0), min(TFRDPROVC, max(TFRDPROVCP2, TFRDPROVC1731)))
TIND_10C = positif_ou_nul(T10MINSC - TFRDC + saisies.get('COD1BE', 0))
TOTALQUO = 1 - is_positive(saisies.get('IPVLOC', 0)) * REVQTOT
TOTALQUOHT = 1 - is_positive(saisies.get('IPVLOC', 0)) * REVQTOTQHT
TOTALQUORET = min(TOTALQUO, max(TOTALQUO1731, max(TOTALQUO_P, TOTALQUOP2)))
TPENALIM3 = is_positive(TEXPR3) * TPRN3 - TPRR3 - TPRR23 - TPRR2Z3 - TPENF3
TPENALIM4 = is_positive(TEXPR4) * TPRN4 - TPRR4 - TPRR24 - TPRR2Z4 - TPENF4
TSNN2REMPC = is_positive(TSC) * TSC - TSNNC - TSNN2TSC
TTSN1TT = saisies.get('GLDGRATV', 0) - TABTS1TT
TTSNN2REMP3 = is_positive(TTS3) * TTS3 - TTSNN3 - TTSNN2TS3
TTSNN2REMP4 = is_positive(TTS4) * TTS4 - TTSNN4 - TTSNN2TS4
TTSNRAJ = saisies.get('CARTSV', 0) - TABTSRAJ
TTSNRAP = saisies.get('REMPLAV', 0) - TABTSRAP
AGRBG = SHBA + REVTP - BA1 + REVQTOTQHT
CDBA = positif_ou_nul(SEUIL_IMPDEFBA - SHBA - REVTP - BA1 - REVQTOTQHT)
DEFIBA = min(max(1 + SEUIL_IMPDEFBA - SHBA - REVTP - BA1 - REVQTOTQHT, 0), 1) * min(0, BANOR)
DFANTIMPU = 1 - is_positive(saisies.get('IPVLOC', 0)) * saisies.get('DEFAA5', 0) + saisies.get('DEFAA4', 0) + saisies.get('DEFAA3', 0) + saisies.get('DEFAA2', 0) + saisies.get('DEFAA1', 0) + saisies.get('DEFAA0', 0) * 1 - is_positive(ART1731BIS) + max(0, min(SOMDEFICIT, max(DFANTPROV1731, max(DFANTPROV_P, DFANTPROVP2)) + SOMDEFICIT)) * is_positive(DEFRIGLOBINF + DEFRIGLOBSUP) * 1 - PREM8_11
LIG1111 = is_positive(DFANTIMPU) * LIGANNUL2042
LIG1112 = is_positive(DFANTIMPU) * is_positive(DEFRF4BC) * is_positive(RDRFPS) * LIGANNUL2042
LIG134 = is_positive(LIG134V + LIG134C + LIG134P + present(saisies.get('DAGRI6', 0)) + present(saisies.get('DAGRI5', 0)) + present(saisies.get('DAGRI4', 0)) + present(saisies.get('DAGRI3', 0)) + present(saisies.get('DAGRI2', 0)) + present(saisies.get('DAGRI1', 0))) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(abs(DEFIBA)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1
LIGPRR2 = is_positive(PRR2V + PRR2C + PRR2P + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + PENALIMV + PENALIMC + PENALIMP + 0)
PERPINDAFFP = is_positive(PERPINDP * 1 - V_CNR * 1 - is_positive(saisies.get('ANNUL2042', 0)) * is_zero(IND_BTANC - 1) * is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * is_positive(PERPPLAFNUNP + PERPPLAFP + positif_ou_nul(saisies.get('PERPP', 0)) * is_positive(PERPREVTOTP)) + 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * present(saisies.get('PERPPLAFCP', 0)) + present(saisies.get('V_BTPERPP', 0)) * present(saisies.get('PERPPLAFNUP1', 0)) + present(saisies.get('V_BTPERPNUP1', 0)) * present(saisies.get('PERPPLAFNUP2', 0)) + present(saisies.get('V_BTPERPNUP2', 0)) * present(saisies.get('PERPPLAFNUP3', 0)) + present(saisies.get('V_BTPERPNUP3', 0)) + is_zero(IND_BTANC - 2) * is_positive(saisies.get('V_BTPERPP', 0) + saisies.get('V_BTPERPNUP1', 0) + saisies.get('V_BTPERPNUP2', 0) + saisies.get('V_BTPERPNUP3', 0) + saisies.get('PERPPLAFCP', 0) + saisies.get('PERPPLAFNUP1', 0) + saisies.get('PERPPLAFNUP2', 0) + saisies.get('PERPPLAFNUP3', 0)))
PERPINDCP = PERP_BOOL * is_positive(saisies.get('V_BTPERPTOTP', 0) + saisies.get('PERPPLAFCP', 0) + saisies.get('PERPPLAFNUP1', 0) + saisies.get('PERPPLAFNUP2', 0) + PERPPLAFNUNP + saisies.get('PERP_COTP', 0) + saisies.get('RACCOTP', 0)) + 0 * 1 - V_CNR
PERPPLAFNU1P = 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * max(PERPPLAFNUTP - PERPPLAFNUNP - PERPPLAFNU3P - PERPPLAFNU2P, 0) + is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * 0
PERPPLAFTP = PERPINDP * max(0, PERPPLAFP + PERPPLAFNUNP + PERPPLAFNU1P + PERPPLAFNU2P) * 1 - V_CNR
RG = 1 - is_positive(saisies.get('IPVLOC', 0)) * SHBA + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + is_positive(saisies.get('IPVLOC', 0)) * saisies.get('IPVLOC', 0)
RGRFR = 1 - is_positive(saisies.get('IPVLOC', 0)) * SHBARFR + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBARFR - REVTP - BA1 - REVQTOTQHT) + is_positive(saisies.get('IPVLOC', 0)) * saisies.get('IPVLOC', 0)
RGRFRHR = 1 - is_positive(saisies.get('IPVLOC', 0)) * SHBARFRHR + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBARFRHR - REVTP - BA1 - REVQTOTQHT) + is_positive(saisies.get('IPVLOC', 0)) * saisies.get('IPVLOC', 0)
RNIDF = 1 - positif_ou_nul(RG - DAR + TOTALQUO) * 1 - positif_ou_nul(RG + TOTALQUO) * RG + TOTALQUO * -1 + DAR_REP + is_zero(RG + TOTALQUO) * DAR_REP + is_positive(RG + TOTALQUO) * is_positive(RG + TOTALQUO - saisies.get('DEFAA5', 0)) * RG + TOTALQUO - DAR + 1 - is_positive(RG + TOTALQUO - saisies.get('DEFAA5', 0)) * DAR_REP * 1 - is_positive(ART1731BIS) + max(0, saisies.get('FRNV', 0) - FRDV + saisies.get('FRNC', 0) - FRDC + saisies.get('FRN1', 0) - FRD1 + saisies.get('FRN2', 0) - FRD2 + saisies.get('FRN3', 0) - FRD3 + saisies.get('FRN4', 0) - FRD4 + SOMDEFICITHTS - saisies.get('DEFAA5', 0) - saisies.get('BACDEV', 0) + saisies.get('BAHDEV', 0) + saisies.get('BACDEC', 0) + saisies.get('BAHDEC', 0) + saisies.get('BACDEP', 0) + saisies.get('BAHDEP', 0) * 1 - is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - sum([GLN1, GLN2, GLN3]) + max(0, _4BAQV + _4BAQC + _4BAQP + BAHQTOTMIN + BAHQTOTMAXN) + GLN4V + GLN4C + sum([PENALIMV, PENALIMC, PENALIM1, PENALIM2, PENALIM3, PENALIM4]) + sum([PENFV, PENFC, PENF1, PENF2, PENF3, PENF4]) + sum([TSNN2TSV, TSNN2TSC, TSNN2TS1, TSNN2TS2, TSNN2TS3, TSNN2TS4]) + sum([TSNN2REMPV, TSNN2REMPC, TSNN2REMP1, TSNN2REMP2, TSNN2REMP3, TSNN2REMP4]) + sum([PRR2V, PRR2C, PRR21, PRR22, PRR23, PRR24]) + T2RV + _2RCM + _3RCM + _4RCM + _5RCM + _6RCM + _7RCM + _2REVF + _3REVF)) * is_positive(ART1731BIS) * PREM8_11 + is_positive(DFANTIMPU - DFANT) * max(0, DFANTIMPU - TOTALQUORET - saisies.get('DEFAA5', 0)) + 1 - is_positive(DFANTIMPU - DFANT) * max(0, DFANTIMPU - TOTALQUORET - max(0, saisies.get('DEFAA5', 0) + DFANTIMPU - TOTALQUORET - DFANT)) * is_positive(ART1731BIS) * 1 - PREM8_11
RNIDF1 = 1 - positif_ou_nul(RG + TOTALQUO) * saisies.get('DEFAA0', 0) + positif_ou_nul(RG + TOTALQUO) * min(max(RG + TOTALQUO - saisies.get('DEFAA5', 0) - saisies.get('DEFAA4', 0) - saisies.get('DEFAA3', 0) - saisies.get('DEFAA2', 0) - saisies.get('DEFAA1', 0), 0) - saisies.get('DEFAA0', 0), saisies.get('DEFAA0', 0)) * -1 * positif_ou_nul(saisies.get('DEFAA0', 0) - max(RG + TOTALQUO - saisies.get('DEFAA5', 0) - saisies.get('DEFAA4', 0) - saisies.get('DEFAA3', 0) - saisies.get('DEFAA2', 0) - saisies.get('DEFAA1', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFAA0', 0), RNIDF) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFAA0', 0) * is_positive(ART1731BIS * PREM8_11)
RNIDF2 = 1 - positif_ou_nul(RG + TOTALQUO) * saisies.get('DEFAA1', 0) + positif_ou_nul(RG + TOTALQUO) * min(max(RG + TOTALQUO - saisies.get('DEFAA5', 0) - saisies.get('DEFAA4', 0) - saisies.get('DEFAA3', 0) - saisies.get('DEFAA2', 0), 0) - saisies.get('DEFAA1', 0), saisies.get('DEFAA1', 0)) * -1 * positif_ou_nul(saisies.get('DEFAA1', 0) - max(RG + TOTALQUO - saisies.get('DEFAA5', 0) - saisies.get('DEFAA4', 0) - saisies.get('DEFAA3', 0) - saisies.get('DEFAA2', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFAA1', 0), RNIDF - RNIDF1) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFAA1', 0) * is_positive(ART1731BIS * PREM8_11)
RNIDF3 = 1 - positif_ou_nul(RG + TOTALQUO) * saisies.get('DEFAA2', 0) + positif_ou_nul(RG + TOTALQUO) * min(max(RG + TOTALQUO - saisies.get('DEFAA5', 0) - saisies.get('DEFAA4', 0) - saisies.get('DEFAA3', 0), 0) - saisies.get('DEFAA2', 0), saisies.get('DEFAA2', 0)) * -1 * positif_ou_nul(saisies.get('DEFAA2', 0) - max(RG + TOTALQUO - saisies.get('DEFAA5', 0) - saisies.get('DEFAA4', 0) - saisies.get('DEFAA3', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFAA2', 0), RNIDF - RNIDF1 - RNIDF2) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFAA2', 0) * is_positive(ART1731BIS * PREM8_11)
RNIDF4 = 1 - positif_ou_nul(RG + TOTALQUO) * saisies.get('DEFAA3', 0) + positif_ou_nul(RG + TOTALQUO) * min(max(RG + TOTALQUO - saisies.get('DEFAA5', 0) - saisies.get('DEFAA4', 0), 0) - saisies.get('DEFAA3', 0), saisies.get('DEFAA3', 0)) * -1 * positif_ou_nul(saisies.get('DEFAA3', 0) - max(RG + TOTALQUO - saisies.get('DEFAA5', 0) - saisies.get('DEFAA4', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFAA3', 0), RNIDF - RNIDF1 - RNIDF2 - RNIDF3) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFAA3', 0) * is_positive(ART1731BIS * PREM8_11)
RNIDF5 = 1 - positif_ou_nul(RG + TOTALQUO) * saisies.get('DEFAA4', 0) + positif_ou_nul(RG + TOTALQUO) * min(max(RG + TOTALQUO - saisies.get('DEFAA5', 0), 0) - saisies.get('DEFAA4', 0), saisies.get('DEFAA4', 0)) * -1 * positif_ou_nul(saisies.get('DEFAA4', 0) - max(RG + TOTALQUO - saisies.get('DEFAA5', 0), 0)) * 1 - is_positive(ART1731BIS) + min(saisies.get('DEFAA4', 0), RNIDF - RNIDF1 - RNIDF2 - RNIDF3 - RNIDF4) * is_positive(ART1731BIS * 1 - PREM8_11) + saisies.get('DEFAA4', 0) * is_positive(ART1731BIS * PREM8_11)
RP = sum([TSNNV + TSNN2V + BICIMPV + BICNPV + BNNV + max(0, BANV) + BAEV, TSNNC + TSNN2C + BICIMPC + BICNPC + BNNC + max(0, BANC) + BAEC]) + min(0, BANV) + min(0, BANC) * 1 - is_positive(1 + SEUIL_IMPDEFBA - SHBA - REVQTOTQHT - REVTP - BA1) + max(0, saisies.get('ANOCEP', 0) - min(saisies.get('DNOCEP', 0), DNOCEP1731 + 0) * is_positive(ART1731BIS) + saisies.get('DNOCEP', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('DABNCNP6', 0), DABNCNP61731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP6', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('DABNCNP5', 0), DABNCNP51731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP5', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('DABNCNP4', 0), DABNCNP41731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP4', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('DABNCNP3', 0), DABNCNP31731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP3', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('DABNCNP2', 0), DABNCNP21731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP2', 0) * 1 - is_positive(ART1731BIS * PREM8_11) + min(saisies.get('DABNCNP1', 0), DABNCNP11731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP1', 0) * 1 - is_positive(ART1731BIS * PREM8_11)) + sum([GLN1, GLN2, GLN3])
RRBG = RG - DAR * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) + is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * saisies.get('RE168', 0) + saisies.get('TAX1649', 0) * 1 - ART1731BIS + RG - DAR - DFANTIMPU * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) + is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * saisies.get('RE168', 0) + saisies.get('TAX1649', 0) * ART1731BIS
RRRBG = max(0, RRBG)
SDD = max(0, DAR - RG)
TABDOMDAJ = is_positive(saisies.get('CODDAJ', 0)) * is_positive(saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(TREP10V * saisies.get('CODDAJ', 0) / TTSBV) + 1 - is_positive(saisies.get('CODEAJ', 0) + saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, TREP10V - TABTSV) + 0
TABDOMEAJ = is_positive(saisies.get('CODEAJ', 0)) * is_positive(saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(TREP10V * saisies.get('CODEAJ', 0) / TTSBV) + 1 - is_positive(saisies.get('GLD1V', 0) + saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, TREP10V - TABTSV - TABDOMDAJ) + 0
TABGL1V = is_positive(saisies.get('GLD1V', 0)) * is_positive(saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * round(TREP10V * saisies.get('GLD1V', 0) / TTSBV) + 1 - is_positive(saisies.get('GLD2V', 0) + saisies.get('GLD3V', 0)) * max(0, TREP10V - TABTSV - TABDOMDAJ - TABDOMEAJ) + 0
TABGL2V = is_positive(saisies.get('GLD2V', 0)) * is_positive(saisies.get('GLD3V', 0)) * round(TREP10V * saisies.get('GLD2V', 0) / TTSBV) + 1 - is_positive(saisies.get('GLD3V', 0)) * max(0, TREP10V - TABTSV - TABDOMDAJ - TABDOMEAJ - TABGL1V) + 0
TABGL3V = is_positive(saisies.get('GLD3V', 0)) * max(0, TREP10V - TABTSV - TABDOMDAJ - TABDOMEAJ - TABGL1V - TABGL2V) + 0
TABGLTV = sum([TABGL1V, TABGL2V, TABGL3V]) + TABDOMDAJ + TABDOMEAJ
TFPTC = max(TFRDC, T10MINSC)
TFRDCREP = is_positive(ART1731BIS) * max(0, saisies.get('FRNC', 0) - TFRDC) * is_zero(TIND_10C)
TFRDREPTOT = is_positive(ART1731BIS) * TFRDVREP + TFRDCREP + TFRD1REP
TGLDOMAVDAJV = max(saisies.get('CODDAJ', 0) - TABDOMDAJ, 0)
TGLDOMAVEAJV = max(saisies.get('CODEAJ', 0) - TABDOMEAJ, 0)
TGLN1V = max(saisies.get('GLD1V', 0) - TABGL1V, 0)
TGLN2V = max(saisies.get('GLD2V', 0) - TABGL2V, 0)
TGLN3V = max(saisies.get('GLD3V', 0) - TABGL3V, 0)
TGLN4V = max(saisies.get('CODDAJ', 0) - TABDOMDAJ, 0) + max(saisies.get('CODEAJ', 0) - TABDOMEAJ, 0)
TGLNAV1V = max(saisies.get('GLD1V', 0) - TABGL1V, 0)
TGLNAV2V = max(saisies.get('GLD2V', 0) - TABGL2V, 0)
TGLNAV3V = max(saisies.get('GLD3V', 0) - TABGL3V, 0)
TONEQUOM = max(0, TOTALQUO - VARDMOND * is_positive(ART1731BIS) + saisies.get('DMOND', 0) * 1 - ART1731BIS)
TONEQUOMHT = max(0, TOTALQUOHT - VARDMOND * is_positive(ART1731BIS) + saisies.get('DMOND', 0) * 1 - ART1731BIS)
TREP10C = TIND_10C * TD10MC + 1 - TIND_10C * TFPTC
TTSNDAJ = saisies.get('CODDAJ', 0) - TABDOMDAJ
TTSNEAJ = saisies.get('CODEAJ', 0) - TABDOMEAJ
TTSNGL1V = saisies.get('GLD1V', 0) - TABGL1V
TTSNGL2V = saisies.get('GLD2V', 0) - TABGL2V
TTSNGL3V = saisies.get('GLD3V', 0) - TABGL3V
TTSNTV = TTSN1AJ + TTSN1AC + TTSN1AP + TTSN3VJ + TTSN1TT + TTSNRAJ + TTSNRAP + TTSNDAJ + TTSNEAJ + TTSNGL1V + TTSNGL2V + TTSNGL3V
TTSNV = is_positive(TTSNTV) * min(0, TTSNTV + TPRNNV) + positif_ou_nul(TTSNTV) * TTSNTV
TTSV = TTSNV - sum([max(0, saisies.get('GLD1V', 0) - TABGL1V), max(0, saisies.get('GLD2V', 0) - TABGL2V), max(0, saisies.get('GLD3V', 0) - TABGL3V)]) - max(saisies.get('CODDAJ', 0) - TABDOMDAJ, 0) - max(saisies.get('CODEAJ', 0) - TABDOMEAJ, 0)
ABADON4 = round(min(ID14 * TX_RABDOM / 100 * saisies.get('PRODOM', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) + round(min(ID14 * TX_RABGUY / 100 * saisies.get('PROGUY', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY))
ABADON6 = round(min(ID16 * TX_RABDOM / 100 * saisies.get('PRODOM', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) + round(min(ID16 * TX_RABGUY / 100 * saisies.get('PROGUY', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY))
BASEXOGEN = 1 - present(saisies.get('IPTEFP', 0)) * max(0, RG + TOTALQUO + AB * 1 - present(saisies.get('IPVLOC', 0))) * 1 - is_positive(saisies.get('APPLI_COLBERT', 0))
DEFBA1 = 1 - is_positive(BAHQT + BAQT) * abs(BAHQT + BAQT) - abs(DEFIBA) + is_positive(BAHQT + BAQT) * positif_ou_nul(saisies.get('DAGRI5', 0) + saisies.get('DAGRI4', 0) + saisies.get('DAGRI3', 0) + saisies.get('DAGRI2', 0) + saisies.get('DAGRI1', 0) - BAHQT - BAQT) * saisies.get('DAGRI5', 0) + saisies.get('DAGRI4', 0) + saisies.get('DAGRI3', 0) + saisies.get('DAGRI2', 0) + saisies.get('DAGRI1', 0) - BAHQT - BAQT * is_zero(DEFBA2 + DEFBA3 + DEFBA4 + DEFBA5 + DEFBA6) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(ART1731BIS) + DEFBANIF * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0)))) + saisies.get('BACDEV', 0) + saisies.get('BACDEC', 0) + saisies.get('BACDEP', 0) + saisies.get('BAHDEV', 0) + saisies.get('BAHDEC', 0) + saisies.get('BAHDEP', 0) * is_positive(is_positive(ART1731BIS * PREM8_11) + is_zero(8 - saisies.get('CMAJ', 0)) + is_zero(11 - saisies.get('CMAJ', 0))) * 1 - is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT)
DFANTPROV = min(0, RG - DAR * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) + is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) + SOMDEFICIT
DRBG = min(0, RRBG)
EXO1 = 1 - ART1731BIS * 1 - min(abs(VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS) + VARIPTEFP * is_positive(ART1731BIS) + saisies.get('IPTEFP', 0) * 1 - ART1731BIS + INDTEFF, 1) * is_positive(saisies.get('R1649', 0) + saisies.get('PREREV', 0) + RG + TOTALQUO + AB * 1 - present(saisies.get('IPVLOC', 0)) - SEUILEXO) + min(abs(VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS) + VARIPTEFP * is_positive(ART1731BIS) + saisies.get('IPTEFP', 0) * 1 - ART1731BIS + INDTEFF, 1) + ART1731BIS * 1 - min(abs(VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS) + VARIPTEFP * is_positive(ART1731BIS) + saisies.get('IPTEFP', 0) * 1 - ART1731BIS + INDTEFF, 1) * is_positive(saisies.get('R1649', 0) + saisies.get('PREREV', 0) + RG + SOMDEFICIT + TOTALQUO + AB * 1 - present(saisies.get('IPVLOC', 0)) - SEUILEXO) + min(abs(VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS) + VARIPTEFP * is_positive(ART1731BIS) + saisies.get('IPTEFP', 0) * 1 - ART1731BIS + INDTEFF, 1)
GL4CM = round(TONEQUOMHT * REV4C / TOTALQUOHT)
GL4TVCM = round(TONEQUOMHT * REV4TVC / TOTALQUOHT)
GL4VCM = round(TONEQUOMHT * REV4VC / TOTALQUOHT)
GL4VM = round(TONEQUOMHT * REV4V / TOTALQUOHT)
IFG = is_positive(min(PLAF_REDGARD, saisies.get('RDGARD1', 0)) + min(PLAF_REDGARD, saisies.get('RDGARD2', 0)) + min(PLAF_REDGARD, saisies.get('RDGARD3', 0)) + min(PLAF_REDGARD, saisies.get('RDGARD4', 0)) - max(0, RP)) * is_positive(sum([saisies.get('RDGARD1', 0), saisies.get('RDGARD2', 0), saisies.get('RDGARD3', 0), saisies.get('RDGARD4', 0)]))
INDDG = is_positive(DAR - RG - TOTALQUO) * is_positive(DAR)
INDEXOGEN = 1 - EXO1
INDGARD = IFG + 9 * 1 - is_positive(IFG)
IPRODOM4 = round(ID14 * saisies.get('PRODOM', 0) / RG)
IPRODOM6 = round(ID16 * saisies.get('PRODOM', 0) / RG)
IPROGUY4 = round(ID14 * saisies.get('PROGUY', 0) / RG)
IPROGUY6 = round(ID16 * saisies.get('PROGUY', 0) / RG)
LIG49 = INDREV1A8 * positif_ou_nul(DRBG) * LIG2
LIG68 = INDREV1A8 * 1 - is_positive(abs(RNIDF)) * LIG2
LIGDEFBA = is_positive(DEFBA1 + DEFBA2 + DEFBA3 + DEFBA4 + DEFBA5 + DEFBA6) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGDEFBA1 = is_positive(DEFBA1) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2
LIGRNIDF = is_positive(abs(RNIDF)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRNIDF1 = is_positive(abs(RNIDF1)) * is_positive(is_positive(abs(RNIDF)) + is_positive(FLAGRETARD08 + FLAGDEFAUT11)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRNIDF2 = is_positive(abs(RNIDF2)) * is_positive(is_positive(abs(RNIDF)) + is_positive(FLAGRETARD08 + FLAGDEFAUT11)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRNIDF3 = is_positive(abs(RNIDF3)) * is_positive(is_positive(abs(RNIDF)) + is_positive(FLAGRETARD08 + FLAGDEFAUT11)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRNIDF4 = is_positive(abs(RNIDF4)) * is_positive(is_positive(abs(RNIDF)) + is_positive(FLAGRETARD08 + FLAGDEFAUT11)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRNIDF5 = is_positive(abs(RNIDF5)) * is_positive(is_positive(abs(RNIDF)) + is_positive(FLAGRETARD08 + FLAGDEFAUT11)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
RBG = 1 - is_positive(RG + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR) * min(0, RG + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR + TOTALQUO) + is_positive(RG + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR) * RG + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR * 1 - is_positive(ART1731BIS) + 1 - is_positive(RG + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR - DFANTIMPU) * min(0, RG + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR - DFANTIMPU + TOTALQUO) + is_positive(RG + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR - DFANTIMPU) * RG + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR - DFANTIMPU * ART1731BIS
RBG2 = RBG - min(RBG, DDCSG)
RBGRFR = 1 - is_positive(RGRFR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR) * min(0, RGRFR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR + TOTALQUO) + is_positive(RGRFR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR) * RGRFR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR * 1 - is_positive(ART1731BIS) + 1 - is_positive(RGRFR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR - DFANTIMPU) * min(0, RGRFR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR - DFANTIMPU + TOTALQUO) + is_positive(RGRFR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR - DFANTIMPU) * RGRFR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR - DFANTIMPU * is_positive(ART1731BIS)
RBGRFRHR = 1 - is_positive(RGRFRHR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR) * min(0, RGRFRHR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR + TOTALQUO) + is_positive(RGRFRHR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR) * RGRFRHR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR * 1 - is_positive(ART1731BIS) + 1 - is_positive(RGRFRHR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR - DFANTIMPU) * min(0, RGRFRHR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR - DFANTIMPU + TOTALQUO) + is_positive(RGRFRHR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR - DFANTIMPU) * RGRFRHR + saisies.get('R1649', 0) + saisies.get('PREREV', 0) - DAR - DFANTIMPU * is_positive(ART1731BIS)
RDCSG = max(min(DDCSG, RBG + TOTALQUO - SDD), 0)
REVMETRO = max(0, RG - saisies.get('PRODOM', 0) - saisies.get('PROGUY', 0))
RNIDF0 = 1 - is_positive(RG + TOTALQUO) * RG + TOTALQUO * -1 * 1 - is_positive(ART1731BIS) + RNIDF - RNIDF1 - RNIDF2 - RNIDF3 - RNIDF4 - RNIDF5 * is_positive(ART1731BIS)
RPALE = max(0, min(sum([min(saisies.get('NCHENF1', 0), LIM_PENSALENF) + min(round(saisies.get('CHENF1', 0) * MAJREV), LIM_PENSALENF), min(saisies.get('NCHENF2', 0), LIM_PENSALENF) + min(round(saisies.get('CHENF2', 0) * MAJREV), LIM_PENSALENF), min(saisies.get('NCHENF3', 0), LIM_PENSALENF) + min(round(saisies.get('CHENF3', 0) * MAJREV), LIM_PENSALENF), min(saisies.get('NCHENF4', 0), LIM_PENSALENF) + min(round(saisies.get('CHENF4', 0) * MAJREV), LIM_PENSALENF)]), RBG - DDCSG + TOTALQUO - SDD)) * 1 - V_CNR
RPALP = max(min(TOTPA, RBG - RPALE - DDCSG + TOTALQUO - SDD), 0) * 1 - V_CNR
RPQ4CM = round(GL4CM / DIVGL4)
RPQ4TVCM = round(GL4TVCM / DIVGL4)
RPQ4VCM = round(GL4VCM / DIVGL4)
RPQ4VM = round(GL4VM / DIVGL4)
TABTS1BJ = is_positive(saisies.get('SALEXTC', 0) + saisies.get('ALLOC', 0) + saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0) + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(TREP10C * saisies.get('TSHALLOC', 0) / TTSBC) + 1 - is_positive(saisies.get('SALEXTC', 0) + saisies.get('ALLOC', 0) + saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0) + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * TREP10C
TGL4CM = round(TONEQUOM * REV4C / TOTALQUO)
TGL4TVCM = round(TONEQUOM * REV4TVC / TOTALQUO)
TGL4VCM = round(TONEQUOM * REV4VC / TOTALQUO)
TGL4VM = round(TONEQUOM * REV4V / TOTALQUO)
TPRNV = is_positive(TTSNTV) * is_positive(TTSNTV + TPRNNV) * TTSNTV + TPRNNV + positif_ou_nul(TTSNTV) * TPRNNV
TPRRV = round(TPRNV * PRBV / TEXPRV) + round(TPRNV * saisies.get('COD1AH', 0) / TEXPRV)
TRPQ4CM = round(TGL4CM / DIVGL4) + 0
TRPQ4TVCM = round(TGL4TVCM / DIVGL4) + 0
TRPQ4VCM = round(TGL4VCM / DIVGL4) + 0
TRPQ4VM = round(TGL4VM / DIVGL4) + 0
TTPRV = TTSNV + TPRNV - sum([TGLN1V, TGLN2V, TGLN3V])
TTSN1BJ = saisies.get('TSHALLOC', 0) - TABTS1BJ
TTSNNV = is_positive(TTSV) * round(TTSV * TTSBNV + saisies.get('BPCOSAV', 0) + saisies.get('GLDGRATV', 0) / TEXTSV) + 1 - is_positive(TTSV) * TTSV
TTSPRDV = min(0, TTSNNV + TPRRV) * ART1731BIS
TTSPRV = TTSNNV + TPRRV * 1 - PREM8_11 + max(0, TTSNNV + TPRRV) * PREM8_11
TXMOYIMPDEN1 = sum([TSNT1, TSNT2, TSNT3, TSNT4, TSNTV, TSNTC]) * 1 - is_positive(abs(DRBG)) + sum([saisies.get('PALI1', 0) + saisies.get('PRBR1', 0) + saisies.get('PENIN1', 0), saisies.get('PALI2', 0) + saisies.get('PRBR2', 0) + saisies.get('PENIN2', 0), saisies.get('PALI3', 0) + saisies.get('PRBR3', 0) + saisies.get('PENIN3', 0), saisies.get('PALI4', 0) + saisies.get('PRBR4', 0) + saisies.get('PENIN4', 0), saisies.get('PALIV', 0) + saisies.get('PRBRV', 0) + saisies.get('PENINV', 0), saisies.get('PALIC', 0) + saisies.get('PRBRC', 0) + saisies.get('PENINC', 0)]) * 1 - is_positive(abs(DRBG)) + RVTOT + T2RV + max(0, TRCMABD + DRTNC + RCMNAB + RAVC + RTCAR + RCMPRIVM - max(0, saisies.get('RCMFR', 0) - DFRCMN) * 1 - is_positive(abs(DRBG)) - RCM_I * is_positive(REPRCM - RCM_I) - REPRCM * positif_ou_nul(RCM_I - REPRCM)) * 1 - is_positive(abs(DRBG)) + RMFN * 1 - is_positive(abs(DRBG)) + RFCG + DRCF * 1 - is_positive(abs(DRBG)) + PLOCNETF + max(0, NPLOCNETF) + MIBNETPTOT + SPENETPF * 1 - is_positive(abs(DRBG)) + SPENETNPF + NOCEPIMP * is_zero(DALNP) * 1 - is_positive(abs(DRBG)) + max(0, BAHQTOT) + min(0, BAHQTOT) * 1 - is_positive(SHBA - SEUIL_IMPDEFBA) + sum([BIPTAV + BIHTAV + BNNSV + BNNAV, BIPTAC + BIHTAC + BNNSC + BNNAC, BIPTAP + BIHTAP + BNNSP + BNNAP]) * 1 - is_positive(abs(DRBG)) + BICNPF * 1 - is_positive(abs(DRBG)) + saisies.get('REPSOF', 0) * 1 - is_positive(abs(DRBG)) - min(saisies.get('DABNCNP6', 0), DABNCNP61731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP6', 0) * 1 - ART1731BIS * is_positive(BNCDF6) + min(min(saisies.get('DABNCNP6', 0), DABNCNP61731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP6', 0) * 1 - ART1731BIS, NOCEPIMP + SPENETNPF) * is_zero(BNCDF6) * is_positive(min(saisies.get('DABNCNP6', 0), DABNCNP61731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP6', 0) * 1 - ART1731BIS) + min(saisies.get('DABNCNP5', 0), DABNCNP51731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP5', 0) * 1 - ART1731BIS + min(saisies.get('DABNCNP4', 0), DABNCNP41731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP4', 0) * 1 - ART1731BIS + min(saisies.get('DABNCNP3', 0), DABNCNP31731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP3', 0) * 1 - ART1731BIS + min(saisies.get('DABNCNP2', 0), DABNCNP21731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP2', 0) * 1 - ART1731BIS + min(saisies.get('DABNCNP1', 0), DABNCNP11731 + 0) * is_positive(ART1731BIS) + saisies.get('DABNCNP1', 0) * 1 - ART1731BIS * is_zero(BNCDF1 + BNCDF2 + BNCDF3 + BNCDF4 + BNCDF5 + BNCDF6) * 1 - is_positive(abs(DRBG)) + saisies.get('BPVRCM', 0) + saisies.get('PVTAXSB', 0) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
TXMOYIMPDEN4 = _2PRBV + _2PRBC + _2PRB1 + _2PRB2 + _2PRB3 + _2PRB4 + saisies.get('CODRVG', 0) + max(0, BAQTOT) * 1 - is_positive(DEFBA6 + DEFBA5 + DEFBA4 + DEFBA3 + DEFBA2 + DEFBA1) + sum([saisies.get('PEBFV', 0), saisies.get('PEBFC', 0), saisies.get('PEBF1', 0), saisies.get('PEBF2', 0), saisies.get('PEBF3', 0), saisies.get('PEBF4', 0)])
ABADO4 = round(min(IPRODOM4 + ID14 * TX_RABDOM / 100, PLAF_RABDOM))
ABADO6 = round(min(IPRODOM6 + ID16 * TX_RABDOM / 100, PLAF_RABDOM))
ABAGU4 = round(min(IPROGUY4 + ID14 * TX_RABGUY / 100, PLAF_RABGUY))
ABAGU6 = round(min(IPROGUY6 + ID16 * TX_RABGUY / 100, PLAF_RABGUY))
ABATOT4 = ABADO4 + ABAGU4
ABATOT6 = ABADO6 + ABAGU6
ADO4 = ABADON4 * 1 - is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0))) + ABATOT4 * is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0)))
ADO6 = ABADON6 * 1 - is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0))) + ABATOT6 * is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0)))
AGREPARET = RPALE + RPALP
DEFBA = DEFBA1 + DEFBA2 + DEFBA3 + DEFBA4 + DEFBA5 + DEFBA6
IMETRO4 = round(ID14 * EXO1 * REVMETRO / RG)
IMETRO6 = round(ID16 * REVMETRO / RG)
INETABADAJ4 = max(0, IPRODOM4 - ABADO4)
INETABADAJ6 = max(0, IPRODOM6 - ABADO6)
INETABAEAJ4 = max(0, IPROGUY4 - ABAGU4)
INETABAEAJ6 = max(0, IPROGUY6 - ABAGU6)
ISNETDAJ4 = round(INETABADAJ4 * IPRODOM4 / IPRODOM4)
ISNETEAJ4 = max(0, INETABAEAJ4 - ISNETDAJ4)
ITOTDOM4 = IMETRO4 + ISNETDAJ4 + ISNETEAJ4
ITOTDOM6 = IMETRO6 + INETABADAJ6 + INETABAEAJ6
LIGRNIDF0 = is_positive(abs(RNIDF0)) * is_positive(is_positive(abs(RNIDF)) + is_positive(FLAGRETARD08 + FLAGDEFAUT11)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
R8ZT = min(RBG2 + TOTALQUO, saisies.get('V_8ZT', 0))
RBG2RFR = RBGRFR - min(RBGRFR, DDCSG)
RBG2RFRHR = RBGRFRHR - min(RBGRFRHR, DDCSG)
RFACC = max(min(DFA, RBG - RPALE - RPALP - DDCSG + TOTALQUO - SDD), 0)
RNETU = max(0, min(sum([min(saisies.get('CHENF1', 0), LIM_PENSALENF), min(saisies.get('CHENF2', 0), LIM_PENSALENF), min(saisies.get('CHENF3', 0), LIM_PENSALENF), min(saisies.get('CHENF4', 0), LIM_PENSALENF)]), RBG + TOTALQUO - SDD - RPALE)) * 1 - V_CNR
TABTS1BC = is_positive(saisies.get('ALLOC', 0) + saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0) + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(TREP10C * max(0, saisies.get('SALEXTC', 0) - saisies.get('COD1BD', 0)) / TTSBC) + 1 - is_positive(saisies.get('ALLOC', 0) + saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0) + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, TREP10C - TABTS1BJ)
TABTS1BP = is_positive(saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0) + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(TREP10C * saisies.get('ALLOC', 0) / TTSBC) + 1 - is_positive(saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0) + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, TREP10C - TABTS1BJ - TABTS1BC)
TABTS3VK = is_positive(saisies.get('GLDGRATC', 0) + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(TREP10C * saisies.get('BPCOSAC', 0) / TTSBC) + 1 - is_positive(saisies.get('GLDGRATC', 0) + saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, TREP10C - TABTS1BJ - TABTS1BC - TABTS1BP)
TEGL4CM = GL4CM * 1 - is_positive(INDTEFF) + TGL4CM * is_positive(INDTEFF)
TEGL4TVCM = GL4TVCM * 1 - is_positive(INDTEFF) + TGL4TVCM * is_positive(INDTEFF)
TEGL4VCM = GL4VCM * 1 - is_positive(INDTEFF) + TGL4VCM * is_positive(INDTEFF)
TEGL4VM = GL4VM * 1 - is_positive(INDTEFF) + TGL4VM * is_positive(INDTEFF)
TERPQ4CM = RPQ4CM * 1 - is_positive(INDTEFF) + TRPQ4CM * is_positive(INDTEFF)
TERPQ4TVCM = RPQ4TVCM * 1 - is_positive(INDTEFF) + TRPQ4TVCM * is_positive(INDTEFF)
TERPQ4VCM = RPQ4VCM * 1 - is_positive(INDTEFF) + TRPQ4VCM * is_positive(INDTEFF)
TERPQ4VM = RPQ4VM * 1 - is_positive(INDTEFF) + TRPQ4VM * is_positive(INDTEFF)
TPRR2V = is_positive(saisies.get('PEBFV', 0) + saisies.get('PENSALV', 0) + saisies.get('CODRAZ', 0)) * round(TPRNV * saisies.get('CARPEV', 0) / TEXPRV) + 1 - is_positive(saisies.get('PEBFV', 0) + saisies.get('PENSALV', 0) + saisies.get('CODRAZ', 0)) * TPRNV - TPRRV
TPRR2ZV = is_positive(saisies.get('PEBFV', 0) + saisies.get('PENSALV', 0)) * round(TPRNV * saisies.get('CODRAZ', 0) / TEXPRV) + 1 - is_positive(saisies.get('PEBFV', 0) + saisies.get('PENSALV', 0)) * TPRNV - TPRRV - TPRR2V
TTSN1BC = max(0, saisies.get('SALEXTC', 0) - saisies.get('COD1BD', 0)) - TABTS1BC
TTSN1BP = saisies.get('ALLOC', 0) - TABTS1BP
TTSN3VK = saisies.get('BPCOSAC', 0) - TABTS3VK
TTSNN2TSV = is_positive(TTSV) * is_positive(saisies.get('REMPLAV', 0)) * round(TTSV * saisies.get('CARTSV', 0) / TEXTSV) + 1 - is_positive(saisies.get('REMPLAV', 0)) * TTSV - TTSNNV
TTSNN2V = is_positive(TTSV) * is_positive(saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0)) * round(TTSV * T2TSNV / TEXTSV) + 1 - is_positive(saisies.get('CARTSV', 0) + saisies.get('REMPLAV', 0)) * TTSV - TTSNNV
CUMSALEXTEF = TTSN1AC + TTSN1BC + TTSN1CC + TTSN1DC + TTSN1EC + TTSN1FC
RDDIV = max(min(DEDIV * 1 - V_CNR, RBG - RPALE - RPALP - RFACC - DDCSG + TOTALQUO - SDD), 0)
TABTS1UT = is_positive(saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(TREP10C * saisies.get('GLDGRATC', 0) / TTSBC) + 1 - is_positive(saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, TREP10C - TABTS1BJ - TABTS1BC - TABTS1BP - TABTS3VK)
TABTSRBJ = is_positive(saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(TREP10C * saisies.get('CARTSC', 0) / TTSBC) + 1 - is_positive(saisies.get('REMPLAC', 0) + saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, TREP10C - TABTS1BJ - TABTS1BC - TABTS1BP - TABTS3VK - TABTS1UT)
TABTSRBP = is_positive(saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(TREP10C * saisies.get('REMPLAC', 0) / TTSBC) + 1 - is_positive(saisies.get('CODDBJ', 0) + saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, TREP10C - TABTS1BJ - TABTS1BC - TABTS1BP - TABTS3VK - TABTS1UT - TABTSRBJ)
TAPERPV = 1 - V_CNR * max(min(RPERPV, RBG * 1 - INDTEFF + TEFFREVTOT3 - RPALE - RPALP - RFACC - RDDIV - DDCSG + TOTALQUO - SDD), 0)
TPENFV = is_positive(saisies.get('PENSALV', 0)) * round(TPRNV * saisies.get('PEBFV', 0) / TEXPRV) + 1 - is_positive(saisies.get('PENSALV', 0)) * max(0, TPRNV - TPRRV - TPRR2V - TPRR2ZV)
TTSN1UT = saisies.get('GLDGRATC', 0) - TABTS1UT
TTSNN2REMPV = is_positive(TTSV) * TTSV - TTSNNV - TTSNN2TSV
TTSNRBJ = saisies.get('CARTSC', 0) - TABTSRBJ
TTSNRBP = saisies.get('REMPLAC', 0) - TABTSRBP
APERPV = 1 - V_CNR * max(min(RPERPV, RBG - RPALE - RPALP - RFACC - RDDIV - DDCSG + TOTALQUO - SDD), 0)
TABTSC = TABTS1BJ + TABTS1BC + TABTS1BP + TABTS3VK + TABTS1UT + TABTSRBJ + TABTSRBP
TAPERPC = 1 - V_CNR * max(min(RPERPC, RBG * 1 - INDTEFF + TEFFREVTOT3 - RPALE - RPALP - RFACC - RDDIV - DDCSG + TOTALQUO - SDD - APERPV), 0)
TPENALIMV = is_positive(TEXPRV) * TPRNV - TPRRV - TPRR2V - TPRR2ZV - TPENFV
APERPC = 1 - V_CNR * max(min(RPERPC, RBG - RPALE - RPALP - RFACC - RDDIV - DDCSG + TOTALQUO - SDD - APERPV), 0)
APERPP = 1 - V_CNR * max(min(RPERPP, RBG - RPALE - RPALP - RFACC - RDDIV - DDCSG + TOTALQUO - SDD - APERPV - APERPC), 0)
NUREPAR = min(NUPROPT, max(0, min(PLAF_NUREPAR, RRBG - RPALE - RPALP - RFACC - RDDIV - APERPV - APERPC - APERPP - DDCSG + TOTALQUO - SDD))) * (saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]
RBL = RBG2 - min(RBG2, DPA + DFA + DEDIV + APERPV + APERPC + APERPP + NUREPAR) * 1 - V_CNR - min(RBG2, saisies.get('V_8ZT', 0)) * V_CR2 * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
RBLRFR = RBG2RFR - min(RBG2RFR, DPA + DFA + DEDIV + APERPV + APERPC + APERPP + NUREPAR) * 1 - V_CNR - min(RBG2RFR, saisies.get('V_8ZT', 0)) * V_CR2 * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
RBLRFRHR = RBG2RFRHR - min(RBG2RFRHR, DPA + DFA + DEDIV + APERPV + APERPC + APERPP + NUREPAR) * 1 - V_CNR - min(RBG2RFRHR, saisies.get('V_8ZT', 0)) * V_CR2 * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
REPAR1 = positif_ou_nul(saisies.get('REPGROREP1', 0) + saisies.get('REPGROREP2', 0) + saisies.get('REPGROREP11', 0) + saisies.get('REPGROREP12', 0) - NUREPAR) * saisies.get('REPGROREP13', 0) + 1 - positif_ou_nul(saisies.get('REPGROREP1', 0) + saisies.get('REPGROREP2', 0) + saisies.get('REPGROREP11', 0) + saisies.get('REPGROREP12', 0) - NUREPAR) * max(saisies.get('REPGROREP13', 0) + saisies.get('REPGROREP12', 0) + saisies.get('REPGROREP11', 0) + saisies.get('REPGROREP1', 0) + saisies.get('REPGROREP2', 0) - NUREPAR, 0) * (saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]
REPAR2 = positif_ou_nul(saisies.get('REPGROREP1', 0) + saisies.get('REPGROREP2', 0) + saisies.get('REPGROREP11', 0) - NUREPAR) * saisies.get('REPGROREP12', 0) + 1 - positif_ou_nul(saisies.get('REPGROREP1', 0) + saisies.get('REPGROREP2', 0) + saisies.get('REPGROREP11', 0) - NUREPAR) * max(saisies.get('REPGROREP12', 0) + saisies.get('REPGROREP11', 0) + saisies.get('REPGROREP1', 0) + saisies.get('REPGROREP2', 0) - NUREPAR, 0) * (saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]
REPAR3 = positif_ou_nul(saisies.get('REPGROREP1', 0) + saisies.get('REPGROREP2', 0) - NUREPAR) * saisies.get('REPGROREP11', 0) + 1 - positif_ou_nul(saisies.get('REPGROREP1', 0) + saisies.get('REPGROREP2', 0) - NUREPAR) * max(saisies.get('REPGROREP11', 0) + saisies.get('REPGROREP1', 0) + saisies.get('REPGROREP2', 0) - NUREPAR, 0) * (saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]
REPAR4 = positif_ou_nul(saisies.get('REPGROREP2', 0) - NUREPAR) * saisies.get('REPGROREP1', 0) + 1 - positif_ou_nul(saisies.get('REPGROREP2', 0) - NUREPAR) * max(saisies.get('REPGROREP1', 0) + saisies.get('REPGROREP2', 0) - NUREPAR, 0) * (saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]
REPAR5 = max(saisies.get('REPGROREP2', 0) - NUREPAR, 0) * (saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]
REPNUREPART = max(NUPROPT - NUREPAR, 0)
RNG = is_zero(saisies.get('V_REGCO', 0) - 4) * is_zero(V_CNR - 1) * is_zero(V_CNR2 - 1) * is_zero(V_CR2 - 1) * saisies.get('IPVLOC', 0) + 1 - is_zero(saisies.get('V_REGCO', 0) - 4) * is_zero(V_CNR - 1) * is_zero(V_CNR2 - 1) * is_zero(V_CR2 - 1) * RBL
RNGRFR = is_zero(saisies.get('V_REGCO', 0) - 4) * is_zero(V_CNR - 1) * is_zero(V_CNR2 - 1) * is_zero(V_CR2 - 1) * saisies.get('IPVLOC', 0) + 1 - is_zero(saisies.get('V_REGCO', 0) - 4) * is_zero(V_CNR - 1) * is_zero(V_CNR2 - 1) * is_zero(V_CR2 - 1) * RBLRFR
RNGRFRHR = is_zero(saisies.get('V_REGCO', 0) - 4) * is_zero(V_CNR - 1) * is_zero(V_CNR2 - 1) * is_zero(V_CR2 - 1) * saisies.get('IPVLOC', 0) + 1 - is_zero(saisies.get('V_REGCO', 0) - 4) * is_zero(V_CNR - 1) * is_zero(V_CNR2 - 1) * is_zero(V_CR2 - 1) * RBLRFRHR
SDC = max(0, DDCSG + DPA + DFA + DEDIV + APERPV + APERPC + APERPP + NUREPAR - max(0, RBG)) * 1 - V_CNR + max(0, saisies.get('V_8ZT', 0) - max(0, RBG)) * V_CR2
SDC1 = max(0, DDCSG + DPA + DFA + DEDIV - APERPV - APERPC - APERPP - max(0, RBG)) * 1 - V_CNR + max(0, saisies.get('V_8ZT', 0) - max(0, RBG)) * V_CR2
SOFIRNG = RBL + TOTALQUO - SDD - SDC1
TABDOMDBJ = is_positive(saisies.get('CODDBJ', 0)) * is_positive(saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(TREP10C * saisies.get('CODDBJ', 0) / TTSBC) + 1 - is_positive(saisies.get('CODEBJ', 0) + saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, TREP10C - TABTSC) + 0
TABDOMEBJ = is_positive(saisies.get('CODEBJ', 0)) * is_positive(saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(TREP10C * saisies.get('CODEBJ', 0) / TTSBC) + 1 - is_positive(saisies.get('GLD1C', 0) + saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, TREP10C - TABTSC - TABDOMDBJ) + 0
TABGL1C = is_positive(saisies.get('GLD1C', 0)) * is_positive(saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * round(TREP10C * saisies.get('GLD1C', 0) / TTSBC) + 1 - is_positive(saisies.get('GLD2C', 0) + saisies.get('GLD3C', 0)) * max(0, TREP10C - TABTSC - TABDOMDBJ - TABDOMEBJ) + 0
TABGL2C = is_positive(saisies.get('GLD2C', 0)) * is_positive(saisies.get('GLD3C', 0)) * round(TREP10C * saisies.get('GLD2C', 0) / TTSBC) + 1 - is_positive(saisies.get('GLD3C', 0)) * max(0, TREP10C - TABTSC - TABDOMDBJ - TABDOMEBJ - TABGL1C) + 0
TABGL3C = is_positive(saisies.get('GLD3C', 0)) * max(0, TREP10C - TABTSC - TABDOMDBJ - TABDOMEBJ - TABGL1C - TABGL2C) + 0
TABGLTC = sum([TABGL1C, TABGL2C, TABGL3C]) + TABDOMDBJ + TABDOMEBJ
TAPERPP = 1 - V_CNR * max(min(RPERPP, RBG * 1 - INDTEFF + TEFFREVTOT3 - RPALE - RPALP - RFACC - RDDIV - DDCSG + TOTALQUO - SDD - APERPV - APERPC), 0)
TGLDOMAVDBJC = max(saisies.get('CODDBJ', 0) - TABDOMDBJ, 0)
TGLDOMAVEBJC = max(saisies.get('CODEBJ', 0) - TABDOMEBJ, 0)
TGLN1C = max(saisies.get('GLD1C', 0) - TABGL1C, 0)
TGLN2C = max(saisies.get('GLD2C', 0) - TABGL2C, 0)
TGLN3C = max(saisies.get('GLD3C', 0) - TABGL3C, 0)
TGLN4C = max(saisies.get('CODDBJ', 0) - TABDOMDBJ, 0) + max(saisies.get('CODEBJ', 0) - TABDOMEBJ, 0)
TGLNAV1C = max(saisies.get('GLD1C', 0) - TABGL1C, 0)
TGLNAV2C = max(saisies.get('GLD2C', 0) - TABGL2C, 0)
TGLNAV3C = max(saisies.get('GLD3C', 0) - TABGL3C, 0)
TTSNDBJ = saisies.get('CODDBJ', 0) - TABDOMDBJ
TTSNEBJ = saisies.get('CODEBJ', 0) - TABDOMEBJ
TTSNGL1C = saisies.get('GLD1C', 0) - TABGL1C
TTSNGL2C = saisies.get('GLD2C', 0) - TABGL2C
TTSNGL3C = saisies.get('GLD3C', 0) - TABGL3C
TTSNTC = TTSN1BJ + TTSN1BC + TTSN1BP + TTSN3VK + TTSN1UT + TTSNRBJ + TTSNRBP + TTSNDBJ + TTSNEBJ + TTSNGL1C + TTSNGL2C + TTSNGL3C
TXMOYIMPDEN2 = sum([saisies.get('DEFAA0', 0) * 1 - is_positive(ART1731BIS), saisies.get('DEFAA1', 0) * 1 - is_positive(ART1731BIS), saisies.get('DEFAA2', 0) * 1 - is_positive(ART1731BIS), saisies.get('DEFAA3', 0) * 1 - is_positive(ART1731BIS), saisies.get('DEFAA4', 0) * 1 - is_positive(ART1731BIS), saisies.get('DEFAA5', 0) * 1 - is_positive(ART1731BIS)]) * 1 - is_positive(RNIDF) + RDCSG + DPA + APERPV + APERPC + APERPP + DRFRP * is_positive(RRFI)
ABSPRNG = RNG + TOTALQUO - SDD - SDC
ACINE_1 = max(0, min(saisies.get('CINE1', 0) + saisies.get('CINE2', 0), min(round(SOFIRNG * TX_CINE3 / 100), PLAF_CINE))) * 1 - V_CNR
CHTOT = max(0, min(DPA + DFA + 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * saisies.get('CHRDED', 0) + APERPV + APERPC + APERPP + NUREPAR, RBG - DDCSG + TOTALQUO - SDD)) * 1 - V_CNR
LIGREPAR1 = is_positive(REPAR1) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2 * 1 - V_CNR
LIGREPAR2 = is_positive(REPAR2) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2 * 1 - V_CNR
LIGREPAR3 = is_positive(REPAR3) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2 * 1 - V_CNR
LIGREPAR4 = is_positive(REPAR4) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2 * 1 - V_CNR
LIGREPAR5 = is_positive(REPAR5) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2 * 1 - V_CNR
LIGREPREPAR = is_positive(REPNUREPART) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2 * 1 - V_CNR
NAB = min(max(LIM_ABTRNGDBL + 1 - RNG + TOTALQUO - SDD - SDC, 0), 1) + min(max(LIM_ABTRNGSIMP + 1 - RNG + TOTALQUO - SDD - SDC, 0), 1)
REPAR = max(REPNUREPART - REPAR5 - REPAR4 - REPAR3 - REPAR2 - REPAR1, 0) * (saisies.get('V_REGCO', 0) + 0) in [{'values': [1, 3, 5, 6, 7], 'type': 'enumeration_values'}]
REPNUREPAR = REPAR5 + REPAR4 + REPAR3 + REPAR2 + REPAR1 + REPAR
REVDON = max(0, RBL + TOTALQUOHT - SDD - SDC1)
RRCN = round(min(saisies.get('CINE1', 0), min(max(SOFIRNG, RNG) * TX_CINE3 / 100, PLAF_CINE)) * TX_CINE1 / 100 + min(saisies.get('CINE2', 0), max(min(max(SOFIRNG, RNG) * TX_CINE3 / 100, PLAF_CINE) - saisies.get('CINE1', 0), 0)) * TX_CINE2 / 100) * 1 - V_CNR
TGLN1 = TGLN1V + TGLN1C
TGLN2 = TGLN2V + TGLN2C
TGLN3 = TGLN3V + TGLN3C
TPRNC = is_positive(TTSNTC) * is_positive(TTSNTC + TPRNNC) * TTSNTC + TPRNNC + positif_ou_nul(TTSNTC) * TPRNNC
TPRRC = round(TPRNC * PRBC / TEXPRC) + round(TPRNC * saisies.get('COD1BH', 0) / TEXPRC)
TTSNC = is_positive(TTSNTC) * min(0, TTSNTC + TPRNNC) + positif_ou_nul(TTSNTC) * TTSNTC
TXMOYIMPDEN = max(0, TXMOYIMPDEN1 - TXMOYIMPDEN2 + TXMOYIMPDEN3 + TXMOYIMPDEN4 + TXMOYIMPDEN5 + TXMOYIMPDEN6)
ABSPE = 1 - is_positive(NDA) * 9 + is_positive(NAB) * 1 - is_positive(NAB - 1) * 1 - is_positive(NDA - 1) * is_positive(NDA) + is_positive(NAB - 1) * 1 - is_positive(NDA - 1) * is_positive(NDA) * 2 + is_positive(NAB) * 1 - is_positive(NAB - 1) * is_positive(NDA - 1) * 3 + is_positive(NAB - 1) * is_positive(NDA - 1) * 6
ABTPA = NDA * NAB * ABAT_UNVIEUX * 1 - V_CNR
ABVIE = min(ABTPA, max(RNG + TOTALQUO - SDD - SDC, 0))
ACINE = max(0, ACINE_1 * 1 - ART1731BIS + min(ACINE_1, max(ACINE_P + ACINEP2, ACINE1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - V_CNR
BASEDONF = min(saisies.get('REPDON03', 0), round(REVDON * TX_BASEDUP / 100))
BON = round(min(saisies.get('REPDON03', 0) + saisies.get('REPDON04', 0) + saisies.get('REPDON05', 0) + saisies.get('REPDON06', 0) + saisies.get('REPDON07', 0) + saisies.get('RDDOUP', 0) + BDON7UH + saisies.get('DONAUTRE', 0) + EXCEDANTA, REVDON * TX_BASEDUP / 100))
LIGREPARN = is_positive(REPAR) * LIG1 * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG2 * 1 - V_CNR
REPDON = max(BASEDONF + saisies.get('REPDON04', 0) + saisies.get('REPDON05', 0) + saisies.get('REPDON06', 0) + saisies.get('REPDON07', 0) + BASEDONP - round(REVDON * TX_BASEDUP / 100), 0) * 1 - V_CNR
REPDONR1 = positif_ou_nul(BASEDONF + saisies.get('REPDON04', 0) + saisies.get('REPDON05', 0) + saisies.get('REPDON06', 0) - round(REVDON * TX_BASEDUP / 100)) * saisies.get('REPDON07', 0) + 1 - positif_ou_nul(BASEDONF + saisies.get('REPDON04', 0) + saisies.get('REPDON05', 0) + saisies.get('REPDON06', 0) - round(REVDON * TX_BASEDUP / 100)) * max(saisies.get('REPDON07', 0) + BASEDONF + saisies.get('REPDON04', 0) + saisies.get('REPDON05', 0) + saisies.get('REPDON06', 0) - round(REVDON * TX_BASEDUP / 100), 0) * 1 - V_CNR
REPDONR2 = positif_ou_nul(BASEDONF + saisies.get('REPDON04', 0) + saisies.get('REPDON05', 0) - round(REVDON * TX_BASEDUP / 100)) * saisies.get('REPDON06', 0) + 1 - positif_ou_nul(BASEDONF + saisies.get('REPDON04', 0) + saisies.get('REPDON05', 0) - round(REVDON * TX_BASEDUP / 100)) * max(saisies.get('REPDON06', 0) + BASEDONF + saisies.get('REPDON04', 0) + saisies.get('REPDON05', 0) - round(REVDON * TX_BASEDUP / 100), 0) * 1 - V_CNR
REPDONR3 = positif_ou_nul(BASEDONF + saisies.get('REPDON04', 0) - round(REVDON * TX_BASEDUP / 100)) * saisies.get('REPDON05', 0) + 1 - positif_ou_nul(BASEDONF + saisies.get('REPDON04', 0) - round(REVDON * TX_BASEDUP / 100)) * max(saisies.get('REPDON05', 0) + BASEDONF + saisies.get('REPDON04', 0) - round(REVDON * TX_BASEDUP / 100), 0) * 1 - V_CNR
REPDONR4 = positif_ou_nul(BASEDONF - round(REVDON * TX_BASEDUP / 100)) * saisies.get('REPDON04', 0) + 1 - positif_ou_nul(BASEDONF - round(REVDON * TX_BASEDUP / 100)) * max(saisies.get('REPDON04', 0) + BASEDONF - round(REVDON * TX_BASEDUP / 100), 0) * 1 - V_CNR
REV1 = GLN1 * 1 - INDTEFF + TGLN1 * INDTEFF
REV2 = GLN2 * 1 - INDTEFF + TGLN2 * INDTEFF
REV3 = GLN3 * 1 - INDTEFF + TGLN3 * INDTEFF
RI1 = max(RNG - 1 - min(1, saisies.get('IPVLOC', 0)) * ABTPA - ABTMA, 0)
RI1RFR = max(RNGRFR - 1 - min(1, saisies.get('IPVLOC', 0)) * ABTPA - ABTMA, 0)
RI1RFRHR = max(RNGRFRHR - 1 - min(1, saisies.get('IPVLOC', 0)) * ABTPA - ABTMA, 0)
RI2 = RI1 + DPAE
RNI = 1 - ART1731BIS * is_positive(RG + saisies.get('R1649', 0) + saisies.get('PREREV', 0)) * round(RI1) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) + saisies.get('RE168', 0) + saisies.get('TAX1649', 0) * is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) + ART1731BIS * is_positive(RG + saisies.get('R1649', 0) + saisies.get('PREREV', 0) + SOMDEFICIT) * round(RI1) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) + saisies.get('RE168', 0) + saisies.get('TAX1649', 0) * is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
RNICOL = RNI + RNIDF
RON = round(BON * TX_REDDON / 100) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
SDM = max(0, ABTMA - max(0, RNG - ABTPA))
SDV = max(0, ABTPA - RNG)
TGLRWBM = is_positive(saisies.get('CODRWA', 0) + saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * saisies.get('CODRWB', 0) / TOTALQUO) + 1 - is_positive(saisies.get('CODRWA', 0) + saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM * is_positive(is_zero(1 - saisies.get('FLAG_EXIT', 0)) + is_zero(2 - saisies.get('FLAG_EXIT', 0)))
TPRR2C = is_positive(saisies.get('PEBFC', 0) + saisies.get('PENSALC', 0) + saisies.get('CODRBZ', 0)) * round(TPRNC * saisies.get('CARPEC', 0) / TEXPRC) + 1 - is_positive(saisies.get('PEBFC', 0) + saisies.get('PENSALC', 0) + saisies.get('CODRBZ', 0)) * TPRNC - TPRRC
TPRR2ZC = is_positive(saisies.get('PEBFC', 0) + saisies.get('PENSALC', 0)) * round(TPRNC * saisies.get('CODRBZ', 0) / TEXPRC) + 1 - is_positive(saisies.get('PEBFC', 0) + saisies.get('PENSALC', 0)) * TPRNC - TPRRC - TPRR2C
TRPQRWBM = inf(TGLRWBM / saisies.get('CODNWB', 0))
TTPRC = TTSNC + TPRNC - sum([TGLN1C, TGLN2C, TGLN3C])
TTSC = TTSNC - sum([max(0, saisies.get('GLD1C', 0) - TABGL1C), max(0, saisies.get('GLD2C', 0) - TABGL2C), max(0, saisies.get('GLD3C', 0) - TABGL3C)]) - max(saisies.get('CODDBJ', 0) - TABDOMDBJ, 0) - max(saisies.get('CODEBJ', 0) - TABDOMEBJ, 0)
TTSNNC = is_positive(TTSC) * round(TTSC * TTSBNC + saisies.get('BPCOSAC', 0) + saisies.get('GLDGRATC', 0) / TEXTSC) + 1 - is_positive(TTSC) * TTSC
TTSPRC = TTSNNC + TPRRC * 1 - PREM8_11 + max(0, TTSNNC + TPRRC) * PREM8_11
TTSPRDC = min(0, TTSNNC + TPRRC) * ART1731BIS
TTSPRT = TTSNNV + TPRRV + TTSNNC + TPRRC + TTSNN1 + TPRR1 + TTSNN2 + TPRR2 + TTSNN3 + TPRR3 + TTSNN4 + TPRR4
TTSPRT1731 = max(0, TTSPRV) + max(0, TTSPRC) + max(0, TTSPR1) + max(0, TTSPR2) + max(0, TTSPR3) + max(0, TTSPR4)
ABMAR = min(ABTMA, max(RNG + TOTALQUO - SDD - SDC - ABTPA, 0))
ABSRE = ABMAR + ABVIE
ADONS = BON * 1 - ART1731BIS + min(BON, max(ADONS_P + ADONSP2, ADONS1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
AGABAT = ABVIE + ABMAR
GLRWBM = is_positive(saisies.get('CODRWA', 0) + saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * saisies.get('CODRWB', 0) / TOTALQUOHT) + 1 - is_positive(saisies.get('CODRWA', 0) + saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT * is_positive(is_zero(1 - saisies.get('FLAG_EXIT', 0)) + is_zero(2 - saisies.get('FLAG_EXIT', 0)))
LIG1390 = is_positive(is_positive(ABMAR) + 1 - is_positive(RI1) * is_positive(saisies.get('V_0DN', 0))) * LIG1 * LIG2
LIGREPDONR1 = is_positive(REPDONR1) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPDONR2 = is_positive(REPDONR2) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPDONR3 = is_positive(REPDONR3) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPDONR4 = is_positive(REPDONR4) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
REPDONR = max(REPDON - REPDONR1 - REPDONR2 - REPDONR3 - REPDONR4 - REPDONR5, 0) * 1 - V_CNR
REVQUO = max(0, TOTALQUO - SDD - SDC - SDV - SDM)
REVQUOQHT = max(0, TOTALQUOHT - SDD - SDC - SDV - SDM)
RPQRWBM = inf(GLRWBM / saisies.get('CODNWB', 0))
SEUILRED1 = round(round(RI1) + REVQUO / NBPT)
TEGLRWBM = GLRWBM * 1 - is_positive(INDTEFF) + TGLRWBM * is_positive(INDTEFF)
TERPQRWBM = RPQRWBM * 1 - is_positive(INDTEFF) + TRPQRWBM * is_positive(INDTEFF)
TGLRWAM = is_positive(saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * saisies.get('CODRWA', 0) / TOTALQUO) + 1 - is_positive(saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM * is_zero(2 - saisies.get('FLAG_EXIT', 0))
TPENFC = is_positive(saisies.get('PENSALC', 0)) * round(TPRNC * saisies.get('PEBFC', 0) / TEXPRC) + 1 - is_positive(saisies.get('PENSALC', 0)) * max(0, TPRNC - TPRRC - TPRR2C - TPRR2ZC)
TRPQRWAM = inf(TGLRWAM / saisies.get('CODNWA', 0))
TTSNN2C = is_positive(TTSC) * is_positive(saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0)) * round(TTSC * T2TSNC / TEXTSC) + 1 - is_positive(saisies.get('CARTSC', 0) + saisies.get('REMPLAC', 0)) * TTSC - TTSNNC
TTSNN2TSC = is_positive(TTSC) * is_positive(saisies.get('REMPLAC', 0)) * round(TTSC * saisies.get('CARTSC', 0) / TEXTSC) + 1 - is_positive(saisies.get('REMPLAC', 0)) * TTSC - TTSNNC
TTSPR = TTSPRT * 1 - ART1731BIS + TTSPRT1731 * ART1731BIS + RVTOT
BMI = round(RI1 + REVQUO - saisies.get('PRODOM', 0) - saisies.get('PROGUY', 0))
GLRWAM = is_positive(saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * saisies.get('CODRWA', 0) / TOTALQUOHT) + 1 - is_positive(saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM * is_zero(2 - saisies.get('FLAG_EXIT', 0))
IMI = round(BMI * TX_MIN_MET / 100 + round(saisies.get('PRODOM', 0) + saisies.get('PROGUY', 0)) * TX_MIN_DOM / 100) * V_CR2
LIGREPDON = is_positive(REPDONR + REPDONR1 + REPDONR2 + REPDONR3 + REPDONR4) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPDONR = is_positive(REPDONR) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
RPQRWAM = inf(GLRWAM / saisies.get('CODNWA', 0))
TEFFREV = INDTEFF * TBICPF + TBICNPF + TBNN + BIHTAV + BIHTAC + BIHTAP + BIPTAV + BIPTAC + BIPTAP + saisies.get('ESFP', 0) + TTSPR + RCM + PLOCNETF + NPLOCNETF + RFNTEO * saisies.get('V_INDTEO', 0) + RRFI * 1 - saisies.get('V_INDTEO', 0) + saisies.get('BPVRCM', 0) + saisies.get('PVTAXSB', 0) + saisies.get('PVIMPOS', 0) * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + saisies.get('COD3VE', 0) + saisies.get('PVIMPOS', 0) + saisies.get('PVSURSI', 0) * is_zero(2 - saisies.get('FLAG_EXIT', 0)) + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + saisies.get('R1649', 0)
TEFFREVINTER = INDTEFF * TBICPF + TBICNPF + TBNN + BIHTAV + BIHTAC + BIHTAP + BIPTAV + BIPTAC + BIPTAP + saisies.get('ESFP', 0) + TTSPR + RCM + PLOCNETF + NPLOCNETF + RFNTEO * saisies.get('V_INDTEO', 0) + RRFI * 1 - saisies.get('V_INDTEO', 0) + PVBAR + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + saisies.get('R1649', 0) - DAR
TEFFREVRFR = INDTEFF * TBICPF + TBICNPF + TBNN + BIHTAV + BIHTAC + BIHTAP + BIPTAV + BIPTAC + BIPTAP + saisies.get('ESFP', 0) + TTSPR + RCM + PLOCNETF + NPLOCNETF + RFNTEO * saisies.get('V_INDTEO', 0) + RRFI * 1 - saisies.get('V_INDTEO', 0) + PVBAR + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + saisies.get('R1649', 0)
TEGLRWAM = GLRWAM * 1 - is_positive(INDTEFF) + TGLRWAM * is_positive(INDTEFF)
TERPQRWAM = RPQRWAM * 1 - is_positive(INDTEFF) + TRPQRWAM * is_positive(INDTEFF)
TGLRVGM = is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * saisies.get('CODRVG', 0) / TOTALQUO) + 1 - is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM
TGLTOTM = sum([TGL1M, TGL2M, TGL3M, TGL4M]) + TGLRVGM + TGLRWBM + TGLRWAM
TGLTSVM = is_positive(TTSNN2TSC + TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TTSNN2TSV / TOTALQUO) + 1 - is_positive(TTSNN2TSC + TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM
TPENALIMC = is_positive(TEXPRC) * TPRNC - TPRRC - TPRR2C - TPRR2ZC - TPENFC
TRPQRVGM = inf(TGLRVGM / saisies.get('CODNVG', 0))
TRPQTSVM = inf(TGLTSVM / saisies.get('CARTSNBAV', 0))
TTSNN2REMPC = is_positive(TTSC) * TTSC - TTSNNC - TTSNN2TSC
GLRVGM = is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * saisies.get('CODRVG', 0) / TOTALQUOHT) + 1 - is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM
GLTOTM = sum([GL1M, GL2M, GL3M, GL4M]) + GLRVGM + GLRWBM + GLRWAM
GLTSREMPVM = is_positive(TSNN2REMPC + TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * TSNN2REMPV / TOTALQUOHT) + 1 - is_positive(TSNN2REMPC + TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM
GLTSVM = is_positive(TSNN2TSC + TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * TSNN2TSV / TOTALQUOHT) + 1 - is_positive(TSNN2TSC + TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM
RBGTEF = 1 - is_positive(TEFFREV + saisies.get('PREREV', 0) - DAR) * min(0, TEFFREV + saisies.get('PREREV', 0) - DAR + TOTALQUO) + is_positive(TEFFREV + saisies.get('PREREV', 0) - DAR) * TEFFREV + saisies.get('PREREV', 0) - DAR
RBGTEFRFR = 1 - is_positive(TEFFREVRFR + saisies.get('PREREV', 0) - DAR) * min(0, TEFFREVRFR + saisies.get('PREREV', 0) - DAR + TOTALQUO) + is_positive(TEFFREVRFR + saisies.get('PREREV', 0) - DAR) * TEFFREVRFR + saisies.get('PREREV', 0) - DAR
RPALETEF = max(0, min(sum([min(saisies.get('NCHENF1', 0), LIM_PENSALENF) + min(round(saisies.get('CHENF1', 0) * MAJREV), LIM_PENSALENF), min(saisies.get('NCHENF2', 0), LIM_PENSALENF) + min(round(saisies.get('CHENF2', 0) * MAJREV), LIM_PENSALENF), min(saisies.get('NCHENF3', 0), LIM_PENSALENF) + min(round(saisies.get('CHENF3', 0) * MAJREV), LIM_PENSALENF), min(saisies.get('NCHENF4', 0), LIM_PENSALENF) + min(round(saisies.get('CHENF4', 0) * MAJREV), LIM_PENSALENF)]), RBGTEF - DDCSG + TOTALQUO - SDD)) * 1 - V_CNR
RPALETEFRFR = max(0, min(sum([min(saisies.get('NCHENF1', 0), LIM_PENSALENF) + min(round(saisies.get('CHENF1', 0) * MAJREV), LIM_PENSALENF), min(saisies.get('NCHENF2', 0), LIM_PENSALENF) + min(round(saisies.get('CHENF2', 0) * MAJREV), LIM_PENSALENF), min(saisies.get('NCHENF3', 0), LIM_PENSALENF) + min(round(saisies.get('CHENF3', 0) * MAJREV), LIM_PENSALENF), min(saisies.get('NCHENF4', 0), LIM_PENSALENF) + min(round(saisies.get('CHENF4', 0) * MAJREV), LIM_PENSALENF)]), RBGTEFRFR - DDCSG + TOTALQUO - SDD)) * 1 - V_CNR
RPALPTEF = max(min(TOTPA, RBGTEF - RPALETEF - DDCSG + TOTALQUO - SDD), 0) * 1 - V_CNR
RPALPTEFRFR = max(min(TOTPA, RBGTEFRFR - RPALETEFRFR - DDCSG + TOTALQUO - SDD), 0) * 1 - V_CNR
RPQRVGM = inf(GLRVGM / saisies.get('CODNVG', 0))
RPQTSREMPVM = inf(GLTSREMPVM / saisies.get('REMPLANBV', 0))
RPQTSVM = inf(GLTSVM / saisies.get('CARTSNBAV', 0))
RRBGTEF = TEFFREV - DAR * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) + is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * saisies.get('RE168', 0) + saisies.get('TAX1649', 0)
RRBGTEFRFR = TEFFREVRFR - DAR * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) + is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * saisies.get('RE168', 0) + saisies.get('TAX1649', 0)
TEGLRVGM = GLRVGM * 1 - is_positive(INDTEFF) + TGLRVGM * is_positive(INDTEFF)
TEGLTSVM = GLTSVM * 1 - is_positive(INDTEFF) + TGLTSVM * is_positive(INDTEFF)
TERPQRVGM = RPQRVGM * 1 - is_positive(INDTEFF) + TRPQRVGM * is_positive(INDTEFF)
TERPQTSVM = RPQTSVM * 1 - is_positive(INDTEFF) + TRPQTSVM * is_positive(INDTEFF)
TGL1M = is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TGLN1 / TOTALQUO) + 1 - is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM - TGLRVGM
TGL2M = is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TGLN2 / TOTALQUO) + 1 - is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM - TGLRVGM - TGL1M
TGL3M = is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TGLN3 / TOTALQUO) + 1 - is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM - TGLRVGM - TGL1M - TGL2M
TGL4M = is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * REV4 / TOTALQUO) + 1 - is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM - TGLRVGM - TGL1M - TGL2M - TGL3M
TGLFVM = is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * PENFV / TOTALQUO) + 1 - is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM
TGLPALIMVM = is_positive(TPENALIMC + TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPENALIMV / TOTALQUO) + 1 - is_positive(TPENALIMC + TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM
TGLPRRVM = is_positive(TPRR2C + TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPRR2V / TOTALQUO) + 1 - is_positive(TPRR2C + TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM
TGLRVOM = is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * round(TONEQUOM * _2RV1 / TOTALQUO) + 1 - is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM
TGLTSCM = is_positive(TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TTSNN2TSC / TOTALQUO) + 1 - is_positive(TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM
TGLTSREMPVM = is_positive(TTSNN2REMPC + TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TTSNN2REMPV / TOTALQUO) + 1 - is_positive(TTSNN2REMPC + TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM
TRPQ1M = inf(TGL1M / DIVGL1)
TRPQ2M = inf(TGL2M / DIVGL2)
TRPQ3M = inf(TGL3M / DIVGL3)
TRPQ4M = inf(TGL4M / DIVGL4)
TRPQFVM = inf(TGLFVM / saisies.get('COTFV', 0))
TRPQPALIMVM = inf(TGLPALIMVM / saisies.get('PENSALNBV', 0))
TRPQPRRVM = inf(TGLPRRVM / saisies.get('CARPENBAV', 0))
TRPQRVOM = inf(TGLRVOM / saisies.get('RENTAXNB', 0))
TRPQTSCM = inf(TGLTSCM / saisies.get('CARTSNBAC', 0))
TRPQTSREMPVM = inf(TGLTSREMPVM / saisies.get('REMPLANBV', 0))
GL1M = is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * GLN1 / TOTALQUOHT) + 1 - is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM - GLRVGM
GL2M = is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * GLN2 / TOTALQUOHT) + 1 - is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM - GLRVGM - GL1M
GL3M = is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * GLN3 / TOTALQUOHT) + 1 - is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM - GLRVGM - GL1M - GL2M
GL4M = is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * REV4 / TOTALQUOHT) + 1 - is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM - GLRVGM - GL1M - GL2M - GL3M
GLFVM = is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PENFV / TOTALQUOHT) + 1 - is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM
GLPALIMVM = is_positive(PENALIMC + PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PENALIMV / TOTALQUOHT) + 1 - is_positive(PENALIMC + PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM
GLPRRVM = is_positive(PRR2C + PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PRR2V / TOTALQUOHT) + 1 - is_positive(PRR2C + PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM
GLRVOM = is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * round(TONEQUOMHT * _2RV1 / TOTALQUOHT) + 1 - is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM
GLTSCM = is_positive(TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * TSNN2TSC / TOTALQUOHT) + 1 - is_positive(TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM
GLTSREMPCM = is_positive(TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * TSNN2REMPC / TOTALQUOHT) + 1 - is_positive(TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM
RBG2TEF = RBGTEF - max(0, min(RBGTEF, DDCSG))
RBG2TEFRFR = RBGTEFRFR - max(0, min(RBGTEFRFR, DDCSG))
RFACCTEF = max(min(DFA, RBGTEF - RPALETEF - RPALPTEF - DDCSG + TOTALQUO - SDD), 0)
RFACCTEFRFR = max(min(DFA, RBGTEFRFR - RPALETEFRFR - RPALPTEFRFR - DDCSG + TOTALQUO - SDD), 0)
RPQ1M = inf(GL1M / DIVGL1)
RPQ2M = inf(GL2M / DIVGL2)
RPQ3M = inf(GL3M / DIVGL3)
RPQ4M = inf(GL4M / DIVGL4)
RPQFVM = inf(GLFVM / saisies.get('COTFV', 0))
RPQPALIMVM = inf(GLPALIMVM / saisies.get('PENSALNBV', 0))
RPQPRRVM = inf(GLPRRVM / saisies.get('CARPENBAV', 0))
RPQRVOM = inf(GLRVOM / saisies.get('RENTAXNB', 0))
RPQTSCM = inf(GLTSCM / saisies.get('CARTSNBAC', 0))
RPQTSREMPCM = inf(GLTSREMPCM / saisies.get('REMPLANBC', 0))
TEGL1M = GL1M * 1 - is_positive(INDTEFF) + TGL1M * is_positive(INDTEFF)
TEGL2M = GL2M * 1 - is_positive(INDTEFF) + TGL2M * is_positive(INDTEFF)
TEGL3M = GL3M * 1 - is_positive(INDTEFF) + TGL3M * is_positive(INDTEFF)
TEGL4M = GL4M * 1 - is_positive(INDTEFF) + TGL4M * is_positive(INDTEFF)
TEGLFVM = GLFVM * 1 - is_positive(INDTEFF) + TGLFVM * is_positive(INDTEFF)
TEGLPALIMVM = GLPALIMVM * 1 - is_positive(INDTEFF) + TGLPALIMVM * is_positive(INDTEFF)
TEGLPRRVM = GLPRRVM * 1 - is_positive(INDTEFF) + TGLPRRVM * is_positive(INDTEFF)
TEGLRVOM = GLRVOM * 1 - is_positive(INDTEFF) + TGLRVOM * is_positive(INDTEFF)
TEGLTOTM = TEGL1M + TEGL2M + TEGL3M + TEGL4M
TEGLTSCM = GLTSCM * 1 - is_positive(INDTEFF) + TGLTSCM * is_positive(INDTEFF)
TEGLTSREMPVM = GLTSREMPVM * 1 - is_positive(INDTEFF) + TGLTSREMPVM * is_positive(INDTEFF)
TERPQ1M = RPQ1M * 1 - is_positive(INDTEFF) + TRPQ1M * is_positive(INDTEFF)
TERPQ2M = RPQ2M * 1 - is_positive(INDTEFF) + TRPQ2M * is_positive(INDTEFF)
TERPQ3M = RPQ3M * 1 - is_positive(INDTEFF) + TRPQ3M * is_positive(INDTEFF)
TERPQ4M = RPQ4M * 1 - is_positive(INDTEFF) + TRPQ4M * is_positive(INDTEFF)
TERPQFVM = RPQFVM * 1 - is_positive(INDTEFF) + TRPQFVM * is_positive(INDTEFF)
TERPQPALIMVM = RPQPALIMVM * 1 - is_positive(INDTEFF) + TRPQPALIMVM * is_positive(INDTEFF)
TERPQPRRVM = RPQPRRVM * 1 - is_positive(INDTEFF) + TRPQPRRVM * is_positive(INDTEFF)
TERPQRVOM = RPQRVOM * 1 - is_positive(INDTEFF) + TRPQRVOM * is_positive(INDTEFF)
TERPQTSCM = RPQTSCM * 1 - is_positive(INDTEFF) + TRPQTSCM * is_positive(INDTEFF)
TERPQTSREMPVM = RPQTSREMPVM * 1 - is_positive(INDTEFF) + TRPQTSREMPVM * is_positive(INDTEFF)
TGLFCM = is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * PENFC / TOTALQUO) + 1 - is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFVM
TGLPALIMCM = is_positive(TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPENALIMC / TOTALQUO) + 1 - is_positive(TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM
TGLPRRCM = is_positive(TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPRR2C / TOTALQUO) + 1 - is_positive(TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM
TGLRVO5M = is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * round(TONEQUOM * _2RV2 / TOTALQUO) + 1 - is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOM
TGLRVO6M = is_positive(_2RV4 + REVRCM + REVRF) * round(TONEQUOM * _2RV3 / TOTALQUO) + 1 - is_positive(_2RV4 + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOM - TGLRVO5M
TGLRVO7M = is_positive(REVRCM + REVRF) * round(TONEQUOM * _2RV4 / TOTALQUO) + 1 - is_positive(REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOM - TGLRVO5M - TGLRVO6M
TGLRVOTOTM = TGLRVOM + TGLRVO5M + TGLRVO6M + TGLRVO7M
TGLTS1M = is_positive(TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TTSNN2TS1 / TOTALQUO) + 1 - is_positive(TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM - TGLTSCM
TGLTS2M = is_positive(TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TTSNN2TS2 / TOTALQUO) + 1 - is_positive(TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM - TGLTSCM - TGLTS1M
TGLTS3M = is_positive(TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TTSNN2TS3 / TOTALQUO) + 1 - is_positive(TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM - TGLTSCM - TGLTS1M - TGLTS2M
TGLTS4M = is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TTSNN2TS4 / TOTALQUO) + 1 - is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM - TGLTSCM - TGLTS1M - TGLTS2M - TGLTS3M
TGLTSREMPCM = is_positive(TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TTSNN2REMPC / TOTALQUO) + 1 - is_positive(TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM
TRPQFCM = inf(TGLFCM / saisies.get('COTFC', 0))
TRPQPALIMCM = inf(TGLPALIMCM / saisies.get('PENSALNBC', 0))
TRPQPRRCM = inf(TGLPRRCM / saisies.get('CARPENBAC', 0))
TRPQRVO6M = inf(TGLRVO6M / saisies.get('RENTAXNB6', 0))
TRPQRVO7M = inf(TGLRVO7M / saisies.get('RENTAXNB7', 0))
TRPQTS1M = inf(TGLTS1M / saisies.get('CARTSNBAP1', 0))
TRPQTS2M = inf(TGLTS2M / saisies.get('CARTSNBAP2', 0))
TRPQTS3M = inf(TGLTS3M / saisies.get('CARTSNBAP3', 0))
TRPQTS4M = inf(TGLTS4M / saisies.get('CARTSNBAP4', 0))
TRPQTSREMPCM = inf(TGLTSREMPCM / saisies.get('REMPLANBC', 0))
GLFCM = is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PENFC / TOTALQUOHT) + 1 - is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFVM
GLPALIMCM = is_positive(PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PENALIMC / TOTALQUOHT) + 1 - is_positive(PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM
GLPRRCM = is_positive(PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PRR2C / TOTALQUOHT) + 1 - is_positive(PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM
GLRVO5M = is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * round(TONEQUOMHT * _2RV2 / TOTALQUOHT) + 1 - is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOM
GLRVO6M = is_positive(_2RV4 + REVRCM + REVRF) * round(TONEQUOMHT * _2RV3 / TOTALQUOHT) + 1 - is_positive(_2RV4 + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOM - GLRVO5M
GLRVO7M = is_positive(REVRCM + REVRF) * round(TONEQUOMHT * _2RV4 / TOTALQUOHT) + 1 - is_positive(REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOM - GLRVO5M - GLRVO6M
GLRVOTOTM = GLRVOM + GLRVO5M + GLRVO6M + GLRVO7M
GLTS1M = is_positive(TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * TSNN2TS1 / TOTALQUOHT) + 1 - is_positive(TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM - GLTSCM
GLTS2M = is_positive(TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * TSNN2TS2 / TOTALQUOHT) + 1 - is_positive(TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM - GLTSCM - GLTS1M
GLTS3M = is_positive(TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * TSNN2TS3 / TOTALQUOHT) + 1 - is_positive(TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM - GLTSCM - GLTS1M - GLTS2M
GLTS4M = is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * TSNN2TS4 / TOTALQUOHT) + 1 - is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM - GLTSCM - GLTS1M - GLTS2M - GLTS3M
GLTSREMP1M = is_positive(TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * TSNN2REMP1 / TOTALQUOHT) + 1 - is_positive(TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM - GLTSREMPCM
GLTSREMP2M = is_positive(TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * TSNN2REMP2 / TOTALQUOHT) + 1 - is_positive(TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM - GLTSREMPCM - GLTSREMP1M
GLTSREMP3M = is_positive(TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * TSNN2REMP3 / TOTALQUOHT) + 1 - is_positive(TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM - GLTSREMPCM - GLTSREMP1M - GLTSREMP2M
GLTSREMP4M = is_positive(REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * TSNN2REMP4 / TOTALQUOHT) + 1 - is_positive(REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM - GLTSREMPCM - GLTSREMP1M - GLTSREMP2M - GLTSREMP3M
RDDIVTEF = max(min(DEDIV * 1 - V_CNR, RBGTEF - RPALETEF - RPALPTEF - RFACCTEF - DDCSG + TOTALQUO - SDD), 0)
RDDIVTEFRFR = max(min(DEDIV * 1 - V_CNR, RBGTEFRFR - RPALETEFRFR - RPALPTEFRFR - RFACCTEFRFR - DDCSG + TOTALQUO - SDD), 0)
RPQFCM = inf(GLFCM / saisies.get('COTFC', 0))
RPQPALIMCM = inf(GLPALIMCM / saisies.get('PENSALNBC', 0))
RPQPRRCM = inf(GLPRRCM / saisies.get('CARPENBAC', 0))
RPQRVO5M = inf(GLRVO5M / saisies.get('RENTAXNB5', 0))
RPQRVO6M = inf(GLRVO6M / saisies.get('RENTAXNB6', 0))
RPQRVO7M = inf(GLRVO7M / saisies.get('RENTAXNB7', 0))
RPQTS1M = inf(GLTS1M / saisies.get('CARTSNBAP1', 0))
RPQTS2M = inf(GLTS2M / saisies.get('CARTSNBAP2', 0))
RPQTS3M = inf(GLTS3M / saisies.get('CARTSNBAP3', 0))
RPQTS4M = inf(GLTS4M / saisies.get('CARTSNBAP4', 0))
RPQTSREMP1M = inf(GLTSREMP1M / saisies.get('REMPLANBP1', 0))
RPQTSREMP2M = inf(GLTSREMP2M / saisies.get('REMPLANBP2', 0))
RPQTSREMP3M = inf(GLTSREMP3M / saisies.get('REMPLANBP3', 0))
RPQTSREMP4M = inf(GLTSREMP4M / saisies.get('REMPLANBP4', 0))
TEGLFCM = GLFCM * 1 - is_positive(INDTEFF) + TGLFCM * is_positive(INDTEFF)
TEGLPALIMCM = GLPALIMCM * 1 - is_positive(INDTEFF) + TGLPALIMCM * is_positive(INDTEFF)
TEGLPRRCM = GLPRRCM * 1 - is_positive(INDTEFF) + TGLPRRCM * is_positive(INDTEFF)
TEGLRVO5M = GLRVO5M * 1 - is_positive(INDTEFF) + TGLRVO5M * is_positive(INDTEFF)
TEGLRVO6M = GLRVO6M * 1 - is_positive(INDTEFF) + TGLRVO6M * is_positive(INDTEFF)
TEGLRVO7M = GLRVO7M * 1 - is_positive(INDTEFF) + TGLRVO7M * is_positive(INDTEFF)
TEGLRVOTOTM = TEGLRVOM + TEGLRVO5M + TEGLRVO6M + TEGLRVO7M
TEGLTS1M = GLTS1M * 1 - is_positive(INDTEFF) + TGLTS1M * is_positive(INDTEFF)
TEGLTS2M = GLTS2M * 1 - is_positive(INDTEFF) + TGLTS2M * is_positive(INDTEFF)
TEGLTS3M = GLTS3M * 1 - is_positive(INDTEFF) + TGLTS3M * is_positive(INDTEFF)
TEGLTS4M = GLTS4M * 1 - is_positive(INDTEFF) + TGLTS4M * is_positive(INDTEFF)
TEGLTSREMPCM = GLTSREMPCM * 1 - is_positive(INDTEFF) + TGLTSREMPCM * is_positive(INDTEFF)
TEGLTSTOTM = TEGLTSVM + TEGLTSCM + TEGLTS1M + TEGLTS2M + TEGLTS3M + TEGLTS4M
TERPQFCM = RPQFCM * 1 - is_positive(INDTEFF) + TRPQFCM * is_positive(INDTEFF)
TERPQPALIMCM = RPQPALIMCM * 1 - is_positive(INDTEFF) + TRPQPALIMCM * is_positive(INDTEFF)
TERPQPRRCM = RPQPRRCM * 1 - is_positive(INDTEFF) + TRPQPRRCM * is_positive(INDTEFF)
TERPQRVO5M = RPQRVO5M * 1 - is_positive(INDTEFF) + TRPQRVO5M * is_positive(INDTEFF)
TERPQRVO6M = RPQRVO6M * 1 - is_positive(INDTEFF) + TRPQRVO6M * is_positive(INDTEFF)
TERPQRVO7M = RPQRVO7M * 1 - is_positive(INDTEFF) + TRPQRVO7M * is_positive(INDTEFF)
TERPQTS1M = RPQTS1M * 1 - is_positive(INDTEFF) + TRPQTS1M * is_positive(INDTEFF)
TERPQTS2M = RPQTS2M * 1 - is_positive(INDTEFF) + TRPQTS2M * is_positive(INDTEFF)
TERPQTS3M = RPQTS3M * 1 - is_positive(INDTEFF) + TRPQTS3M * is_positive(INDTEFF)
TERPQTS4M = RPQTS4M * 1 - is_positive(INDTEFF) + TRPQTS4M * is_positive(INDTEFF)
TERPQTSREMPCM = RPQTSREMPCM * 1 - is_positive(INDTEFF) + TRPQTSREMPCM * is_positive(INDTEFF)
TGLF1M = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * PENF1 / TOTALQUO) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFVM - TGLFCM
TGLF2M = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * PENF2 / TOTALQUO) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFVM - TGLFCM - TGLF1M
TGLF3M = is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * PENF3 / TOTALQUO) + 1 - is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFVM - TGLFCM - TGLF1M - TGLF2M
TGLPALIM1M = is_positive(TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPENALIM1 / TOTALQUO) + 1 - is_positive(TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM - TGLPALIMCM
TGLPALIM2M = is_positive(TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPENALIM2 / TOTALQUO) + 1 - is_positive(TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM - TGLPALIMCM - TGLPALIM1M
TGLPALIM3M = is_positive(TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * PENALIM3 / TOTALQUO) + 1 - is_positive(TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM - TGLPALIMCM - TGLPALIM1M - TGLPALIM2M
TGLPALIM4M = is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPENALIM4 / TOTALQUO) + 1 - is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM - TGLPALIMCM - TGLPALIM1M - TGLPALIM2M - TGLPALIM3M
TGLPRR1M = is_positive(TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPRR21 / TOTALQUO) + 1 - is_positive(TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM
TGLPRR2M = is_positive(TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPRR22 / TOTALQUO) + 1 - is_positive(TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M
TGLPRR3M = is_positive(TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPRR23 / TOTALQUO) + 1 - is_positive(TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M
TGLPRR4M = is_positive(TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPRR24 / TOTALQUO) + 1 - is_positive(TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M
TGLPRRZVM = is_positive(TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPRR2ZV / TOTALQUO) + 1 - is_positive(TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M
TGLRCMDCM = is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * round(TONEQUOM * _2RCM / TOTALQUO) + 1 - is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM
TGLRCMFUM = is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * round(TONEQUOM * _3RCM / TOTALQUO) + 1 - is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM
TGLTSREMP1M = is_positive(TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TTSNN2REMP1 / TOTALQUO) + 1 - is_positive(TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM - TGLTSREMPCM
TGLTSREMP2M = is_positive(TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TTSNN2REMP2 / TOTALQUO) + 1 - is_positive(TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM - TGLTSREMPCM - TGLTSREMP1M
TGLTSREMP3M = is_positive(TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TTSNN2REMP3 / TOTALQUO) + 1 - is_positive(TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM - TGLTSREMPCM - TGLTSREMP1M - TGLTSREMP2M
TGLTSREMP4M = is_positive(REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TTSNN2REMP4 / TOTALQUO) + 1 - is_positive(REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM - TGLTSREMPCM - TGLTSREMP1M - TGLTSREMP2M - TGLTSREMP3M
TRPQF1M = inf(TGLF1M / saisies.get('COTF1', 0))
TRPQF2M = inf(TGLF2M / saisies.get('COTF2', 0))
TRPQF3M = inf(TGLF3M / saisies.get('COTF3', 0))
TRPQPALIM1M = inf(TGLPALIM1M / saisies.get('PENSALNBP1', 0))
TRPQPALIM2M = inf(TGLPALIM2M / saisies.get('PENSALNBP2', 0))
TRPQPALIM3M = inf(TGLPALIM3M / saisies.get('PENSALNBP3', 0))
TRPQPALIM4M = inf(TGLPALIM4M / saisies.get('PENSALNBP4', 0))
TRPQPRR1M = inf(TGLPRR1M / saisies.get('CARPENBAP1', 0))
TRPQPRR2M = inf(TGLPRR2M / saisies.get('CARPENBAP2', 0))
TRPQPRR3M = inf(TGLPRR3M / saisies.get('CARPENBAP3', 0))
TRPQPRR4M = inf(TGLPRR4M / saisies.get('CARPENBAP4', 0))
TRPQPRRZVM = inf(TGLPRRZVM / saisies.get('CODNAZ', 0))
TRPQRCMDCM = inf(TGLRCMDCM / saisies.get('REVACTNB', 0))
TRPQRCMFUM = inf(TGLRCMFUM / saisies.get('REVPEANB', 0))
TRPQTSREMP1M = inf(TGLTSREMP1M / saisies.get('REMPLANBP1', 0))
TRPQTSREMP2M = inf(TGLTSREMP2M / saisies.get('REMPLANBP2', 0))
TRPQTSREMP3M = inf(TGLTSREMP3M / saisies.get('REMPLANBP3', 0))
TRPQTSREMP4M = inf(TGLTSREMP4M / saisies.get('REMPLANBP4', 0))
APERPVTEF = 1 - V_CNR * max(min(RPERPV, RBGTEF - RPALETEF - RPALPTEF - RFACCTEF - RDDIVTEF - DDCSG + TOTALQUO - SDD), 0)
APERPVTEFRFR = 1 - V_CNR * max(min(RPERPV, RBGTEFRFR - RPALETEFRFR - RPALPTEFRFR - RFACCTEFRFR - RDDIVTEFRFR - DDCSG + TOTALQUO - SDD), 0)
GLF1M = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PENF1 / TOTALQUOHT) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFVM - GLFCM
GLF2M = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PENF2 / TOTALQUOHT) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFVM - GLFCM - GLF1M
GLF3M = is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PENF3 / TOTALQUOHT) + 1 - is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFVM - GLFCM - GLF1M - GLF2M
GLPALIM1M = is_positive(PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PENALIM1 / TOTALQUOHT) + 1 - is_positive(PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM - GLPALIMCM
GLPALIM2M = is_positive(PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PENALIM2 / TOTALQUOHT) + 1 - is_positive(PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM - GLPALIMCM - GLPALIM1M
GLPALIM3M = is_positive(PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PENALIM3 / TOTALQUOHT) + 1 - is_positive(PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM - GLPALIMCM - GLPALIM1M - GLPALIM2M
GLPALIM4M = is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PENALIM4 / TOTALQUOHT) + 1 - is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM - GLPALIMCM - GLPALIM1M - GLPALIM2M - GLPALIM3M
GLPRR1M = is_positive(PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PRR21 / TOTALQUOHT) + 1 - is_positive(PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM
GLPRR2M = is_positive(PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PRR22 / TOTALQUOHT) + 1 - is_positive(PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M
GLPRR3M = is_positive(PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PRR23 / TOTALQUOHT) + 1 - is_positive(PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M
GLPRR4M = is_positive(PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PRR24 / TOTALQUOHT) + 1 - is_positive(PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M
GLPRRZVM = is_positive(PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PRR2ZV / TOTALQUOHT) + 1 - is_positive(PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M
GLRCMDCM = is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * round(TONEQUOMHT * _2RCM / TOTALQUOHT) + 1 - is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM
GLRCMFUM = is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * round(TONEQUOMHT * _3RCM / TOTALQUOHT) + 1 - is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM
RPQF1M = inf(GLF1M / saisies.get('COTF1', 0))
RPQF2M = inf(GLF2M / saisies.get('COTF2', 0))
RPQF3M = inf(GLF3M / saisies.get('COTF3', 0))
RPQPALIM1M = inf(GLPALIM1M / saisies.get('PENSALNBP1', 0))
RPQPALIM2M = inf(GLPALIM2M / saisies.get('PENSALNBP2', 0))
RPQPALIM3M = inf(GLPALIM3M / saisies.get('PENSALNBP3', 0))
RPQPALIM4M = inf(GLPALIM4M / saisies.get('PENSALNBP4', 0))
RPQPRR1M = inf(GLPRR1M / saisies.get('CARPENBAP1', 0))
RPQPRR2M = inf(GLPRR2M / saisies.get('CARPENBAP2', 0))
RPQPRR3M = inf(GLPRR3M / saisies.get('CARPENBAP3', 0))
RPQPRR4M = inf(GLPRR4M / saisies.get('CARPENBAP4', 0))
RPQPRRZVM = inf(GLPRRZVM / saisies.get('CODNAZ', 0))
RPQRCMDCM = inf(GLRCMDCM / saisies.get('REVACTNB', 0))
RPQRCMFUM = inf(GLRCMFUM / saisies.get('REVPEANB', 0))
TEGLF1M = GLF1M * 1 - is_positive(INDTEFF) + TGLF1M * is_positive(INDTEFF)
TEGLF2M = GLF2M * 1 - is_positive(INDTEFF) + TGLF2M * is_positive(INDTEFF)
TEGLF3M = GLF3M * 1 - is_positive(INDTEFF) + TGLF3M * is_positive(INDTEFF)
TEGLPALIM1M = GLPALIM1M * 1 - is_positive(INDTEFF) + TGLPALIM1M * is_positive(INDTEFF)
TEGLPALIM2M = GLPALIM2M * 1 - is_positive(INDTEFF) + TGLPALIM2M * is_positive(INDTEFF)
TEGLPALIM3M = GLPALIM3M * 1 - is_positive(INDTEFF) + TGLPALIM3M * is_positive(INDTEFF)
TEGLPALIM4M = GLPALIM4M * 1 - is_positive(INDTEFF) + TGLPALIM4M * is_positive(INDTEFF)
TEGLPALIMTOTM = TEGLPALIMVM + TEGLPALIMCM + TEGLPALIM1M + TEGLPALIM2M + TEGLPALIM3M + TEGLPALIM4M
TEGLPRR1M = GLPRR1M * 1 - is_positive(INDTEFF) + TGLPRR1M * is_positive(INDTEFF)
TEGLPRR2M = GLPRR2M * 1 - is_positive(INDTEFF) + TGLPRR2M * is_positive(INDTEFF)
TEGLPRR3M = GLPRR3M * 1 - is_positive(INDTEFF) + TGLPRR3M * is_positive(INDTEFF)
TEGLPRR4M = GLPRR4M * 1 - is_positive(INDTEFF) + TGLPRR4M * is_positive(INDTEFF)
TEGLPRRTOTM = TEGLPRRVM + TEGLPRRCM + TEGLPRR1M + TEGLPRR2M + TEGLPRR3M + TEGLPRR4M
TEGLPRRZVM = GLPRRZVM * 1 - is_positive(INDTEFF) + TGLPRRZVM * is_positive(INDTEFF)
TEGLRCMDCM = GLRCMDCM * 1 - is_positive(INDTEFF) + TGLRCMDCM * is_positive(INDTEFF)
TEGLRCMFUM = GLRCMFUM * 1 - is_positive(INDTEFF) + TGLRCMFUM * is_positive(INDTEFF)
TEGLTSREMP1M = GLTSREMP1M * 1 - is_positive(INDTEFF) + TGLTSREMP1M * is_positive(INDTEFF)
TEGLTSREMP2M = GLTSREMP2M * 1 - is_positive(INDTEFF) + TGLTSREMP2M * is_positive(INDTEFF)
TEGLTSREMP3M = GLTSREMP3M * 1 - is_positive(INDTEFF) + TGLTSREMP3M * is_positive(INDTEFF)
TEGLTSREMP4M = GLTSREMP4M * 1 - is_positive(INDTEFF) + TGLTSREMP4M * is_positive(INDTEFF)
TEGLTSREMPTOTM = TEGLTSREMPVM + TEGLTSREMPCM + TEGLTSREMP1M + TEGLTSREMP2M + TEGLTSREMP3M + TEGLTSREMP4M
TERPQF1M = RPQF1M * 1 - is_positive(INDTEFF) + TRPQF1M * is_positive(INDTEFF)
TERPQF2M = RPQF2M * 1 - is_positive(INDTEFF) + TRPQF2M * is_positive(INDTEFF)
TERPQF3M = RPQF3M * 1 - is_positive(INDTEFF) + TRPQF3M * is_positive(INDTEFF)
TERPQPALIM1M = RPQPALIM1M * 1 - is_positive(INDTEFF) + TRPQPALIM1M * is_positive(INDTEFF)
TERPQPALIM2M = RPQPALIM2M * 1 - is_positive(INDTEFF) + TRPQPALIM2M * is_positive(INDTEFF)
TERPQPALIM3M = RPQPALIM3M * 1 - is_positive(INDTEFF) + TRPQPALIM3M * is_positive(INDTEFF)
TERPQPALIM4M = RPQPALIM4M * 1 - is_positive(INDTEFF) + TRPQPALIM4M * is_positive(INDTEFF)
TERPQPRR1M = RPQPRR1M * 1 - is_positive(INDTEFF) + TRPQPRR1M * is_positive(INDTEFF)
TERPQPRR2M = RPQPRR2M * 1 - is_positive(INDTEFF) + TRPQPRR2M * is_positive(INDTEFF)
TERPQPRR3M = RPQPRR3M * 1 - is_positive(INDTEFF) + TRPQPRR3M * is_positive(INDTEFF)
TERPQPRR4M = RPQPRR4M * 1 - is_positive(INDTEFF) + TRPQPRR4M * is_positive(INDTEFF)
TERPQPRRZVM = RPQPRRZVM * 1 - is_positive(INDTEFF) + TRPQPRRZVM * is_positive(INDTEFF)
TERPQRCMDCM = RPQRCMDCM * 1 - is_positive(INDTEFF) + TRPQRCMDCM * is_positive(INDTEFF)
TERPQRCMFUM = RPQRCMFUM * 1 - is_positive(INDTEFF) + TRPQRCMFUM * is_positive(INDTEFF)
TERPQTSREMP1M = RPQTSREMP1M * 1 - is_positive(INDTEFF) + TRPQTSREMP1M * is_positive(INDTEFF)
TERPQTSREMP2M = RPQTSREMP2M * 1 - is_positive(INDTEFF) + TRPQTSREMP2M * is_positive(INDTEFF)
TERPQTSREMP3M = RPQTSREMP3M * 1 - is_positive(INDTEFF) + TRPQTSREMP3M * is_positive(INDTEFF)
TERPQTSREMP4M = RPQTSREMP4M * 1 - is_positive(INDTEFF) + TRPQTSREMP4M * is_positive(INDTEFF)
TGLPRRZCM = is_positive(TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPRR2ZC / TOTALQUO) + 1 - is_positive(TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM
TGLRCMCHM = is_positive(_5RCM + _6RCM + _7RCM + REVRF) * round(TONEQUOM * _4RCM / TOTALQUO) + 1 - is_positive(_5RCM + _6RCM + _7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM - TGLRCMFUM
TGLRCMTSM = is_positive(_6RCM + _7RCM + REVRF) * round(TONEQUOM * _5RCM / TOTALQUO) + 1 - is_positive(_6RCM + _7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM - TGLRCMFUM - TGLRCMCHM
TRPQPRRZCM = inf(TGLPRRZCM / saisies.get('CODNBZ', 0))
TRPQRCMCHM = inf(TGLRCMCHM / saisies.get('PROVIENB', 0))
TRPQRCMTSM = inf(TGLRCMTSM / saisies.get('DISQUONB', 0))
APERPCTEF = 1 - V_CNR * max(min(RPERPC, RBGTEF - RPALETEF - RPALPTEF - RFACCTEF - RDDIVTEF - DDCSG + TOTALQUO - SDD - APERPVTEF), 0)
APERPCTEFRFR = 1 - V_CNR * max(min(RPERPC, RBGTEFRFR - RPALETEFRFR - RPALPTEFRFR - RFACCTEFRFR - RDDIVTEFRFR - DDCSG + TOTALQUO - SDD - APERPVTEFRFR), 0)
APERPPTEF = 1 - V_CNR * max(min(RPERPP, RBGTEF - RPALETEF - RPALPTEF - RFACCTEF - RDDIVTEF - DDCSG + TOTALQUO - SDD - APERPVTEF - APERPCTEF), 0)
APERPPTEFRFR = 1 - V_CNR * max(min(RPERPP, RBGTEFRFR - RPALETEFRFR - RPALPTEFRFR - RFACCTEFRFR - RDDIVTEFRFR - DDCSG + TOTALQUO - SDD - APERPVTEFRFR - APERPCTEFRFR), 0)
GLPRRZCM = is_positive(PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PRR2ZC / TOTALQUOHT) + 1 - is_positive(PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM
GLRCMCHM = is_positive(_5RCM + _6RCM + _7RCM + REVRF) * round(TONEQUOMHT * _4RCM / TOTALQUOHT) + 1 - is_positive(_5RCM + _6RCM + _7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM - GLRCMFUM
GLRCMTSM = is_positive(_6RCM + _7RCM + REVRF) * round(TONEQUOMHT * _5RCM / TOTALQUOHT) + 1 - is_positive(_6RCM + _7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM - GLRCMFUM - GLRCMCHM
NUREPARTEF = min(NUPROPT, max(0, min(PLAF_NUREPAR, RRBGTEF - RPALETEF - RPALPTEF - RFACCTEF - RDDIVTEF - APERPVTEF - APERPCTEF - APERPPTEF - DDCSG + TOTALQUO - SDD))) * 1 - V_CNR
NUREPARTEFRFR = min(NUPROPT, max(0, min(PLAF_NUREPAR, RRBGTEFRFR - RPALETEFRFR - RPALPTEFRFR - RFACCTEFRFR - RDDIVTEFRFR - APERPVTEFRFR - APERPCTEFRFR - APERPPTEFRFR - DDCSG + TOTALQUO - SDD))) * 1 - V_CNR
RBLTEF = RBG2TEF - max(0, min(RBG2TEF, DPA + DFA + DEDIV + APERPVTEF + APERPCTEF + APERPPTEF + NUREPARTEF)) * 1 - V_CNR - min(RBG2TEF, saisies.get('V_8ZT', 0)) * V_CR2 * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
RBLTEFRFR = RBG2TEFRFR - max(0, min(RBG2TEFRFR, DPA + DFA + DEDIV + APERPVTEFRFR + APERPCTEFRFR + APERPPTEFRFR + NUREPARTEFRFR)) * 1 - V_CNR - min(RBG2TEFRFR, saisies.get('V_8ZT', 0)) * V_CR2 * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
RNGTEF = is_zero(saisies.get('V_REGCO', 0) - 4) * is_zero(V_CNR - 1) * is_zero(V_CNR2 - 1) * is_zero(V_CR2 - 1) * saisies.get('IPVLOC', 0) + 1 - is_zero(saisies.get('V_REGCO', 0) - 4) * is_zero(V_CNR - 1) * is_zero(V_CNR2 - 1) * is_zero(V_CR2 - 1) * RBLTEF
RNGTEFRFR = is_zero(saisies.get('V_REGCO', 0) - 4) * is_zero(V_CNR - 1) * is_zero(V_CNR2 - 1) * is_zero(V_CR2 - 1) * saisies.get('IPVLOC', 0) + 1 - is_zero(saisies.get('V_REGCO', 0) - 4) * is_zero(V_CNR - 1) * is_zero(V_CNR2 - 1) * is_zero(V_CR2 - 1) * RBLTEFRFR
RPQPRRZCM = inf(GLPRRZCM / saisies.get('CODNBZ', 0))
RPQRCMCHM = inf(GLRCMCHM / saisies.get('PROVIENB', 0))
RPQRCMTSM = inf(GLRCMTSM / saisies.get('DISQUONB', 0))
TEGLPRRZCM = GLPRRZCM * 1 - is_positive(INDTEFF) + TGLPRRZCM * is_positive(INDTEFF)
TEGLRCMCHM = GLRCMCHM * 1 - is_positive(INDTEFF) + TGLRCMCHM * is_positive(INDTEFF)
TEGLRCMTSM = GLRCMTSM * 1 - is_positive(INDTEFF) + TGLRCMTSM * is_positive(INDTEFF)
TERPQPRRZCM = RPQPRRZCM * 1 - is_positive(INDTEFF) + TRPQPRRZCM * is_positive(INDTEFF)
TERPQRCMCHM = RPQRCMCHM * 1 - is_positive(INDTEFF) + TRPQRCMCHM * is_positive(INDTEFF)
TERPQRCMTSM = RPQRCMTSM * 1 - is_positive(INDTEFF) + TRPQRCMTSM * is_positive(INDTEFF)
TGLPRRZ1M = is_positive(TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPRR2Z1 / TOTALQUO) + 1 - is_positive(TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM - TGLPRRZCM
TGLPRRZ2M = is_positive(TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPRR2Z2 / TOTALQUO) + 1 - is_positive(TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM - TGLPRRZCM - TGLPRRZ1M
TGLPRRZ3M = is_positive(TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPRR2Z3 / TOTALQUO) + 1 - is_positive(TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM - TGLPRRZCM - TGLPRRZ1M - TGLPRRZ2M
TGLPRRZ4M = is_positive(REVRVO + REVRCM + REVRF) * round(TONEQUOM * TPRR2Z4 / TOTALQUO) + 1 - is_positive(REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM - TGLPRRZCM - TGLPRRZ1M - TGLPRRZ2M - TGLPRRZ3M
TGLRCMGOM = is_positive(_7RCM + REVRF) * round(TONEQUOM * _6RCM / TOTALQUO) + 1 - is_positive(_7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM - TGLRCMFUM - TGLRCMCHM - TGLRCMTSM
TGLRCMTRM = is_positive(REVRF) * round(TONEQUOM * _7RCM / TOTALQUO) + 1 - is_positive(REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM - TGLRCMFUM - TGLRCMCHM - TGLRCMGOM - TGLRCMTSM
TRPQPRRZ1M = inf(TGLPRRZ1M / saisies.get('CODNCZ', 0))
TRPQPRRZ2M = inf(TGLPRRZ2M / saisies.get('CODNDZ', 0))
TRPQPRRZ3M = inf(TGLPRRZ3M / saisies.get('CODNEZ', 0))
TRPQPRRZ4M = inf(TGLPRRZ4M / saisies.get('CODNFZ', 0))
TRPQRCMGOM = inf(TGLRCMGOM / saisies.get('RESTUCNB', 0))
TRPQRCMTRM = inf(TGLRCMTRM / saisies.get('INTERENB', 0))
GLPRRZ1M = is_positive(PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PRR2Z1 / TOTALQUOHT) + 1 - is_positive(PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM - GLPRRZCM
GLPRRZ2M = is_positive(PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PRR2Z2 / TOTALQUOHT) + 1 - is_positive(PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM - GLPRRZCM - GLPRRZ1M
GLPRRZ3M = is_positive(PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PRR2Z3 / TOTALQUOHT) + 1 - is_positive(PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM - GLPRRZCM - GLPRRZ1M - GLPRRZ2M
GLPRRZ4M = is_positive(REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PRR2Z4 / TOTALQUOHT) + 1 - is_positive(REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM - GLPRRZCM - GLPRRZ1M - GLPRRZ2M - GLPRRZ3M
GLRCMGOM = is_positive(_7RCM + REVRF) * round(TONEQUOMHT * _6RCM / TOTALQUOHT) + 1 - is_positive(_7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM - GLRCMFUM - GLRCMCHM - GLRCMTSM
GLRCMTRM = is_positive(REVRF) * round(TONEQUOMHT * _7RCM / TOTALQUOHT) + 1 - is_positive(REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM - GLRCMFUM - GLRCMCHM - GLRCMGOM - GLRCMTSM
NABTEF = min(max(LIM_ABTRNGDBL + 1 - RNGTEF + TOTALQUO - SDD - SDC, 0), 1) + min(max(LIM_ABTRNGSIMP + 1 - RNGTEF + TOTALQUO - SDD - SDC, 0), 1)
NABTEFRFR = min(max(LIM_ABTRNGDBL + 1 - RNGTEFRFR + TOTALQUO - SDD - SDC, 0), 1) + min(max(LIM_ABTRNGSIMP + 1 - RNGTEFRFR + TOTALQUO - SDD - SDC, 0), 1)
RPQPRRZ1M = inf(GLPRRZ1M / saisies.get('CODNCZ', 0))
RPQPRRZ2M = inf(GLPRRZ2M / saisies.get('CODNDZ', 0))
RPQPRRZ3M = inf(GLPRRZ3M / saisies.get('CODNEZ', 0))
RPQPRRZ4M = inf(GLPRRZ4M / saisies.get('CODNFZ', 0))
RPQRCMGOM = inf(GLRCMGOM / saisies.get('RESTUCNB', 0))
RPQRCMTRM = inf(GLRCMTRM / saisies.get('INTERENB', 0))
TEGLPRRZ1M = GLPRRZ1M * 1 - is_positive(INDTEFF) + TGLPRRZ1M * is_positive(INDTEFF)
TEGLPRRZ2M = GLPRRZ2M * 1 - is_positive(INDTEFF) + TGLPRRZ2M * is_positive(INDTEFF)
TEGLPRRZ3M = GLPRRZ3M * 1 - is_positive(INDTEFF) + TGLPRRZ3M * is_positive(INDTEFF)
TEGLPRRZ4M = GLPRRZ4M * 1 - is_positive(INDTEFF) + TGLPRRZ4M * is_positive(INDTEFF)
TEGLPRRZTOTM = TEGLPRRZVM + TEGLPRRZCM + TEGLPRRZ1M + TEGLPRRZ2M + TEGLPRRZ3M + TEGLPRRZ4M
TEGLRCMGOM = GLRCMGOM * 1 - is_positive(INDTEFF) + TGLRCMGOM * is_positive(INDTEFF)
TEGLRCMTRM = GLRCMTRM * 1 - is_positive(INDTEFF) + TGLRCMTRM * is_positive(INDTEFF)
TERPQPRRZ1M = RPQPRRZ1M * 1 - is_positive(INDTEFF) + TRPQPRRZ1M * is_positive(INDTEFF)
TERPQPRRZ2M = RPQPRRZ2M * 1 - is_positive(INDTEFF) + TRPQPRRZ2M * is_positive(INDTEFF)
TERPQPRRZ3M = RPQPRRZ3M * 1 - is_positive(INDTEFF) + TRPQPRRZ3M * is_positive(INDTEFF)
TERPQPRRZ4M = RPQPRRZ4M * 1 - is_positive(INDTEFF) + TRPQPRRZ4M * is_positive(INDTEFF)
TERPQRCMGOM = RPQRCMGOM * 1 - is_positive(INDTEFF) + TRPQRCMGOM * is_positive(INDTEFF)
TERPQRCMTRM = RPQRCMTRM * 1 - is_positive(INDTEFF) + TRPQRCMTRM * is_positive(INDTEFF)
TGLRCMTOTM = TGLRCMDCM + TGLRCMFUM + TGLRCMCHM + TGLRCMGOM + TGLRCMTRM + TGLRCMTSM
TGLRF1M = is_positive(_3REVF) * round(TONEQUOM * _2REVF / TOTALQUO) + 1 - is_positive(_3REVF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMTOTM
TGLRF2M = TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMTOTM - TGLRF1M
TGLRFTOTM = TGLRF1M + TGLRF2M
TONEQUOM1 = sum([RPQ1M, RPQ2M, RPQ3M, RPQ4M]) + sum([RPQFVM, RPQFCM, RPQF1M, RPQF2M, RPQF3M, RPQF4M]) + sum([RPQPALIMVM, RPQPALIMCM, RPQPALIM1M, RPQPALIM2M, RPQPALIM3M, RPQPALIM4M]) + sum([RPQRF1M, RPQRF2M]) + RPQRCMDCM + RPQRCMFUM + RPQRCMCHM + RPQRCMTRM + RPQRCMTSM + RPQRCMGOM + sum([RPQPRRVM, RPQPRRCM, RPQPRR1M, RPQPRR2M, RPQPRR3M, RPQPRR4M]) + sum([RPQPRRZVM, RPQPRRZCM, RPQPRRZ1M, RPQPRRZ2M, RPQPRRZ3M, RPQPRRZ4M]) + RPQRVOM + RPQRVO5M + RPQRVO6M + RPQRVO7M + sum([RPQTSVM, RPQTSCM, RPQTS1M, RPQTS2M, RPQTS3M, RPQTS4M]) + sum([RPQTSREMPVM, RPQTSREMPCM, RPQTSREMP1M, RPQTSREMP2M, RPQTSREMP3M, RPQTSREMP4M]) + RPQRVGM + RPQRWBM * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + RPQRWBM + RPQRWAM * is_zero(2 - saisies.get('FLAG_EXIT', 0))
TONEQUOM1T = sum([TRPQ1M, TRPQ2M, TRPQ3M, TRPQ4M]) + sum([TRPQFVM, TRPQFCM, TRPQF1M, TRPQF2M, TRPQF3M, TRPQF4M]) + sum([TRPQPALIMVM, TRPQPALIMCM, TRPQPALIM1M, TRPQPALIM2M, TRPQPALIM3M, TRPQPALIM4M]) + sum([TRPQRF1M, TRPQRF2M]) + TRPQRCMDCM + TRPQRCMFUM + TRPQRCMCHM + TRPQRCMTRM + TRPQRCMTSM + TRPQRCMGOM + sum([TRPQPRRVM, TRPQPRRCM, TRPQPRR1M, TRPQPRR2M, TRPQPRR3M, TRPQPRR4M]) + sum([TRPQPRRZVM, TRPQPRRZCM, TRPQPRRZ1M, TRPQPRRZ2M, TRPQPRRZ3M, TRPQPRRZ4M]) + TRPQRVOM + TRPQRVO5M + TRPQRVO6M + TRPQRVO7M + sum([TRPQTSVM, TRPQTSCM, TRPQTS1M, TRPQTS2M, TRPQTS3M, TRPQTS4M]) + sum([TRPQTSREMPVM, TRPQTSREMPCM, TRPQTSREMP1M, TRPQTSREMP2M, TRPQTSREMP3M, TRPQTSREMP4M]) + TRPQRVGM + TRPQRWBM * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + TRPQRWBM + TRPQRWAM * is_zero(2 - saisies.get('FLAG_EXIT', 0))
TRPQRF1M = inf(TGLRF1M / saisies.get('FONCINB', 0))
TRPQRF2M = inf(TGLRF2M / saisies.get('REAMORNB', 0))
ABTPATEF = NDA * NABTEF * ABAT_UNVIEUX * 1 - V_CNR
ABTPATEFRFR = NDA * NABTEFRFR * ABAT_UNVIEUX * 1 - V_CNR
GLRCMTOTM = GLRCMDCM + GLRCMFUM + GLRCMCHM + GLRCMGOM + GLRCMTRM + GLRCMTSM
GLRF1M = is_positive(_3REVF) * round(TONEQUOMHT * _2REVF / TOTALQUOHT) + 1 - is_positive(_3REVF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMTOTM
GLRF2M = TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMTOTM - GLRF1M
GLRFTOTM = GLRF1M + GLRF2M
RPQRF1M = inf(GLRF1M / saisies.get('FONCINB', 0))
RPQRF2M = inf(GLRF2M / saisies.get('REAMORNB', 0))
TEFFREVTOT = INDTEFF * TBICPF + TBICNPF + TBNN + BIHTAV + BIHTAC + BIHTAP + BIPTAV + BIPTAC + BIPTAP + saisies.get('ESFP', 0) + TTSPR + RCM + PLOCNETF + NPLOCNETF + RFNTEO * saisies.get('V_INDTEO', 0) + RRFI * 1 - saisies.get('V_INDTEO', 0) + saisies.get('BPVRCM', 0) + saisies.get('PVTAXSB', 0) + saisies.get('PVIMPOS', 0) * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + saisies.get('COD3VE', 0) + saisies.get('PVIMPOS', 0) + saisies.get('PVSURSI', 0) * is_zero(2 - saisies.get('FLAG_EXIT', 0)) + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + saisies.get('R1649', 0) - DAR - max(0, min(TEFFREVINTER, DPA + DFA + DEDIV + APERPVTEF + APERPCTEF + APERPPTEF + NUREPARTEF + ABTPATEF + ABTMA + DDCSG))
TEFFREVTOTRFR = INDTEFF * TBICPF + TBICNPF + TBNN + BIHTAV + BIHTAC + BIHTAP + BIPTAV + BIPTAC + BIPTAP + saisies.get('ESFP', 0) + TTSPR + RCM + PLOCNETF + NPLOCNETF + RFNTEO * saisies.get('V_INDTEO', 0) + RRFI * 1 - saisies.get('V_INDTEO', 0) + PVBAR + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + saisies.get('R1649', 0) - DAR - max(0, min(TEFFREVINTER, DPA + DFA + DEDIV + APERPVTEFRFR + APERPCTEFRFR + APERPPTEFRFR + NUREPARTEFRFR + ABTPATEFRFR + ABTMA + DDCSG))
TEFFREVTOTRFRHR = INDTEFF * TBICPF + TBICNPF + TBNN + BIHTAV + BIHTAC + BIHTAP + BIPTAV + BIPTAC + BIPTAP + saisies.get('ESFP', 0) + TTSPR + RCM + PLOCNETF + NPLOCNETF + RFNTEO * saisies.get('V_INDTEO', 0) + RRFI * 1 - saisies.get('V_INDTEO', 0) + PVBARHR + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + saisies.get('R1649', 0) - DAR - max(0, min(TEFFREVINTER, DPA + DFA + DEDIV + APERPVTEFRFR + APERPCTEFRFR + APERPPTEFRFR + NUREPARTEFRFR + ABTPATEFRFR + ABTMA + DDCSG))
TEGLRCMTOTM = TEGLRCMDCM + TEGLRCMFUM + TEGLRCMCHM + TEGLRCMGOM + TEGLRCMTRM + TEGLRCMTSM
TEGLRF1M = GLRF1M * 1 - is_positive(INDTEFF) + TGLRF1M * is_positive(INDTEFF)
TEGLRF2M = GLRF2M * 1 - is_positive(INDTEFF) + TGLRF2M * is_positive(INDTEFF)
TEGLRFTOTM = TEGLRF1M + TEGLRF2M
TERPQRF1M = RPQRF1M * 1 - is_positive(INDTEFF) + TRPQRF1M * is_positive(INDTEFF)
TERPQRF2M = RPQRF2M * 1 - is_positive(INDTEFF) + TRPQRF2M * is_positive(INDTEFF)
TETONEQUOM1 = TONEQUOM1 * 1 - is_positive(INDTEFF) + TONEQUOM1T * is_positive(INDTEFF)
TONEQUO = max(0, TOTALQUO - SDD + SDC + SDV + SDM * 1 - is_positive(VARIPTEFP * is_positive(ART1731BIS) + saisies.get('IPTEFP', 0) * 1 - ART1731BIS + VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS + TEFFREVTOT * INDTEFF) - VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS)
TONEQUOHT = max(0, TOTALQUOHT - SDD + SDC + SDV + SDM * 1 - is_positive(VARIPTEFP * is_positive(ART1731BIS) + saisies.get('IPTEFP', 0) * 1 - ART1731BIS + VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS + TEFFREVTOT * INDTEFF) - VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS)
TTPVQ = TONEQUOHT
GL4C = round(TONEQUOHT * REV4C / TOTALQUOHT)
GL4RAJV = round(TONEQUOHT * REV4RAJV / TOTALQUOHT)
GL4RBJC = round(TONEQUOHT * REV4RBJC / TOTALQUOHT)
GL4TVC = round(TONEQUOHT * REV4TVC / TOTALQUOHT)
GL4V = round(TONEQUOHT * REV4V / TOTALQUOHT)
GL4VC = round(TONEQUOHT * REV4VC / TOTALQUOHT)
GLRWB = is_positive(saisies.get('CODRWA', 0) + saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * saisies.get('CODRWB', 0) / TOTALQUOHT) + 1 - is_positive(saisies.get('CODRWA', 0) + saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT * is_positive(is_zero(1 - saisies.get('FLAG_EXIT', 0)) + is_zero(2 - saisies.get('FLAG_EXIT', 0)))
LIG1500 = is_positive(is_positive(saisies.get('IPMOND', 0)) * is_positive(present(saisies.get('IPTEFP', 0)) + is_positive(VARIPTEFP) * present(saisies.get('DEFZU', 0))) + is_positive(INDTEFF) * is_positive(TEFFREVTOT)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_positive(DEFRIMOND) * LIG1 * LIG2
LIG1500YT = is_positive(is_positive(saisies.get('IPMOND', 0)) * is_positive(present(saisies.get('IPTEFP', 0)) + is_positive(VARIPTEFP) * present(saisies.get('DEFZU', 0))) + is_positive(INDTEFF) * is_positive(TEFFREVTOT)) * is_positive(is_positive(max(0, saisies.get('IPTEFP', 0) + saisies.get('DEFZU', 0) - saisies.get('IPTEFN', 0))) + is_positive(max(0, saisies.get('RMOND', 0) + saisies.get('DEFZU', 0) - saisies.get('DMOND', 0)))) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * is_positive(DEFRIMOND) * LIG1 * LIG2
LIG1510 = is_positive(is_positive(saisies.get('IPMOND', 0)) * present(saisies.get('IPTEFN', 0)) + is_positive(INDTEFF) * 1 - is_positive(TEFFREVTOT)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_positive(DEFRIMOND) * LIG1 * LIG2
RB01 = RI1 * 1 - is_positive(VARIPTEFP * is_positive(ART1731BIS) + saisies.get('IPTEFP', 0) * 1 - ART1731BIS + VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS + INDTEFF) + ZONIPTEFP + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFP) + ZONIPTEFN + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFN - saisies.get('PVIMPOS', 0)) + saisies.get('PVIMPOS', 0) - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - saisies.get('PVIMPOS', 0)) * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + saisies.get('PVIMPOS', 0) + saisies.get('PVSURSI', 0) * is_positive(ZONIPTEFP) + ZONIPTEFN + saisies.get('PVSURSI', 0) * is_positive(ZONIPTEFN - saisies.get('PVSURSI', 0)) + saisies.get('PVSURSI', 0) - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - saisies.get('PVSURSI', 0)) * is_zero(2 - saisies.get('FLAG_EXIT', 0)) + saisies.get('RFROBOR', 0) * saisies.get('V_INDTEO', 0) * is_positive(ZONIPTEFP) + TEFFREVTOT * 1 - is_positive(ZONIPTEFP + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFP) + ZONIPTEFN + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFN - saisies.get('PVIMPOS', 0)) + saisies.get('PVIMPOS', 0) - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - saisies.get('PVIMPOS', 0)) * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + saisies.get('PVSURSI', 0) + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFP) + ZONIPTEFN + saisies.get('PVSURSI', 0) * is_positive(ZONIPTEFN - saisies.get('PVSURSI', 0)) + saisies.get('PVSURSI', 0) - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - saisies.get('PVSURSI', 0)) * is_zero(2 - saisies.get('FLAG_EXIT', 0))) * INDTEFF
RB018XR = RNG * 1 - is_positive(VARIPTEFP * is_positive(ART1731BIS) + saisies.get('IPTEFP', 0) * 1 - ART1731BIS + VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS + INDTEFF) + ABVIE + ABMAR * is_positive(ZONIPTEFP) + ZONIPTEFP + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFP) + ZONIPTEFN + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFN - saisies.get('PVIMPOS', 0)) + saisies.get('PVIMPOS', 0) - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - saisies.get('PVIMPOS', 0)) * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + saisies.get('PVIMPOS', 0) + saisies.get('PVSURSI', 0) * is_positive(ZONIPTEFP) + ZONIPTEFN + saisies.get('PVSURSI', 0) * is_positive(ZONIPTEFN - saisies.get('PVSURSI', 0)) + saisies.get('PVSURSI', 0) - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - saisies.get('PVSURSI', 0)) * is_zero(2 - saisies.get('FLAG_EXIT', 0)) + saisies.get('RFROBOR', 0) * saisies.get('V_INDTEO', 0) * is_positive(ZONIPTEFP) + ABMAR + ABTPATEF + TEFFREVTOT * 1 - is_positive(ZONIPTEFP + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFP) + ZONIPTEFN + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFN - saisies.get('PVIMPOS', 0)) + saisies.get('PVIMPOS', 0) - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - saisies.get('PVIMPOS', 0)) * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + saisies.get('PVSURSI', 0) + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFP) + ZONIPTEFN + saisies.get('PVSURSI', 0) * is_positive(ZONIPTEFN - saisies.get('PVSURSI', 0)) + saisies.get('PVSURSI', 0) - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - saisies.get('PVSURSI', 0)) * is_zero(2 - saisies.get('FLAG_EXIT', 0))) * INDTEFF
RB02 = RI2 * 1 - is_positive(VARIPTEFP * is_positive(ART1731BIS) + saisies.get('IPTEFP', 0) * 1 - ART1731BIS + VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS + INDTEFF) + ZONIPTEFP + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFP) + ZONIPTEFN + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFN - saisies.get('PVIMPOS', 0)) + saisies.get('PVIMPOS', 0) - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - saisies.get('PVIMPOS', 0)) * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + saisies.get('PVSURSI', 0) + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFP) + ZONIPTEFN + saisies.get('PVSURSI', 0) * is_positive(ZONIPTEFN - saisies.get('PVSURSI', 0)) + saisies.get('PVSURSI', 0) - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - saisies.get('PVSURSI', 0)) * is_zero(2 - saisies.get('FLAG_EXIT', 0)) + saisies.get('RFROBOR', 0) * saisies.get('V_INDTEO', 0) * is_positive(ZONIPTEFP) + DPAE + TEFFREVTOT * 1 - is_positive(ZONIPTEFP + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFP) + ZONIPTEFN + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFN - saisies.get('PVIMPOS', 0)) + saisies.get('PVIMPOS', 0) - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - saisies.get('PVIMPOS', 0)) * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + saisies.get('PVSURSI', 0) + saisies.get('PVIMPOS', 0) * is_positive(ZONIPTEFP) + ZONIPTEFN + saisies.get('PVSURSI', 0) * is_positive(ZONIPTEFN - saisies.get('PVSURSI', 0)) + saisies.get('PVSURSI', 0) - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - saisies.get('PVSURSI', 0)) * is_zero(2 - saisies.get('FLAG_EXIT', 0))) * INDTEFF
RB55 = max(0, RB05 + TETONEQUOM1)
RNIDOM1 = round(RNG + TTPVQ * TX15 / 100)
RNIDOM2 = round(RNG + TTPVQ * TX13 / 100)
RNIDOM3 = round(RNG + TTPVQ * TX11 / 100)
RPQ4C = round(GL4C / DIVGL4) + 0
RPQ4RAJV = round(GL4RAJV / DIVGL4) + 0
RPQ4RBJC = round(GL4RBJC / DIVGL4) + 0
RPQ4TVC = round(GL4TVC / DIVGL4) + 0
RPQ4V = round(GL4V / DIVGL4) + 0
RPQ4VC = round(GL4VC / DIVGL4) + 0
RPQRWB = inf(GLRWB / saisies.get('CODNWB', 0)) + 0
TEFF = VARIPTEFP - VARIPTEFN + TEFFREVTOT
TEFFN_1 = 1 - positif_ou_nul(TEFF) * min(0, TEFF) * -1 + 0
TEFFN_2 = 1 - positif_ou_nul(TEFF) * min(0, TEFF) * -1 + 0 * is_zero(SOMMEMOND_2 + 0) * 1 - PREM8_11 + 0
TEFFP_1 = max(0, TEFF)
TEFFP_2 = max(0, TEFF) * is_zero(SOMMEMOND_2 + 0) + is_positive(SOMMEMOND_2) * max(0, saisies.get('IPTEFP', 0) + saisies.get('DEFZU', 0) - saisies.get('IPTEFN', 0)) * 1 - PREM8_11 + max(0, saisies.get('IPTEFP', 0) + saisies.get('DEFZU', 0) - saisies.get('IPTEFN', 0)) * PREM8_11
TGL4C = round(TONEQUO * REV4C / TOTALQUO)
TGL4RAJV = round(TONEQUO * REV4RAJV / TOTALQUO)
TGL4RBJC = round(TONEQUO * REV4RBJC / TOTALQUO)
TGL4TVC = round(TONEQUO * REV4TVC / TOTALQUO)
TGL4V = round(TONEQUO * REV4V / TOTALQUO)
TGL4VC = round(TONEQUO * REV4VC / TOTALQUO)
TGLRWB = is_positive(saisies.get('CODRWA', 0) + saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * saisies.get('CODRWB', 0) / TOTALQUO) + 1 - is_positive(saisies.get('CODRWA', 0) + saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO * is_positive(is_zero(1 - saisies.get('FLAG_EXIT', 0)) + is_zero(2 - saisies.get('FLAG_EXIT', 0)))
TOTTP = TTPVQ + REVTP
TRPQ4C = round(TGL4C / DIVGL4) + 0
TRPQ4RAJV = round(TGL4RAJV / DIVGL4) + 0
TRPQ4RBJC = round(TGL4RBJC / DIVGL4) + 0
TRPQ4TVC = round(TGL4TVC / DIVGL4) + 0
TRPQ4V = round(TGL4V / DIVGL4) + 0
TRPQ4VC = round(TGL4VC / DIVGL4) + 0
TRPQRWB = inf(TGLRWB / saisies.get('CODNWB', 0)) + 0
GLRWA = is_positive(saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * saisies.get('CODRWA', 0) / TOTALQUOHT) + 1 - is_positive(saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB * is_zero(2 - saisies.get('FLAG_EXIT', 0))
QF011 = round(RB01) / NB1
QF012 = round(RB02) / NB1
QF021 = round(RB01) / NB2
QF022 = round(RB02) / NB2
QF515 = round(RB55) / NB1
QF525 = round(RB55) / NB2
RDMO = TEFF + VARRMOND * is_positive(SOMMEMOND_2) + saisies.get('RMOND', 0) * 1 - is_positive(SOMMEMOND_2 * PREM8_11) - VARDMOND * is_positive(SOMMEMOND_2) + saisies.get('DMOND', 0) * 1 - is_positive(SOMMEMOND_2 * PREM8_11)
RPQRWA = inf(GLRWA / saisies.get('CODNWA', 0)) + 0
TEFFN = TEFFN_1 * 1 - is_positive(SOMMEMOND_2) + TEFFN_2 * is_positive(SOMMEMOND_2)
TEFFP = TEFFP_1 * 1 - is_positive(SOMMEMOND_2) + TEFFP_2 * is_positive(is_positive(SOMMEMOND_2 + 0) + PREM8_11)
TEGL4C = GL4C * 1 - is_positive(INDTEFF) + TGL4C * is_positive(INDTEFF)
TEGL4TVC = GL4TVC * 1 - is_positive(INDTEFF) + TGL4TVC * is_positive(INDTEFF)
TEGL4V = GL4V * 1 - is_positive(INDTEFF) + TGL4V * is_positive(INDTEFF)
TEGL4VC = GL4VC * 1 - is_positive(INDTEFF) + TGL4VC * is_positive(INDTEFF)
TEGLRWB = GLRWB * 1 - is_positive(INDTEFF) + TGLRWB * is_positive(INDTEFF)
TERPQ4C = RPQ4C * 1 - is_positive(INDTEFF) + TRPQ4C * is_positive(INDTEFF)
TERPQ4RAJV = RPQ4RAJV * 1 - is_positive(INDTEFF) + TRPQ4RAJV * is_positive(INDTEFF)
TERPQ4RBJC = RPQ4RBJC * 1 - is_positive(INDTEFF) + TRPQ4RBJC * is_positive(INDTEFF)
TERPQ4TVC = RPQ4TVC * 1 - is_positive(INDTEFF) + TRPQ4TVC * is_positive(INDTEFF)
TERPQ4V = RPQ4V * 1 - is_positive(INDTEFF) + TRPQ4V * is_positive(INDTEFF)
TERPQ4VC = RPQ4VC * 1 - is_positive(INDTEFF) + TRPQ4VC * is_positive(INDTEFF)
TERPQRWB = RPQRWB * 1 - is_positive(INDTEFF) + TRPQRWB * is_positive(INDTEFF)
TGLRWA = is_positive(saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * saisies.get('CODRWA', 0) / TOTALQUO) + 1 - is_positive(saisies.get('CODRVG', 0) + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB * is_zero(2 - saisies.get('FLAG_EXIT', 0))
TRPQRWA = inf(TGLRWA / saisies.get('CODNWA', 0)) + 0
DS011 = max(QF011 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF011 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF011 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF011 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF011 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
DS012 = max(QF012 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF012 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF012 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF012 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF012 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
DS021 = max(QF021 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF021 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF021 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF021 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF021 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
DS022 = max(QF022 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF022 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF022 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF022 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF022 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
DS515 = max(QF515 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF515 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF515 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF515 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF515 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
DS525 = max(QF525 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF525 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF525 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF525 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF525 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
GLRVG = is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * saisies.get('CODRVG', 0) / TOTALQUOHT) + 1 - is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB - GLRWA
GLTOT = sum([GL1, GL2, GL3, GL4]) + GLRVG + GLRWB + GLRWA
GLTSREMPV = is_positive(TSNN2REMPC + TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * TSNN2REMPV / TOTALQUOHT) + 1 - is_positive(TSNN2REMPC + TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLTSTOT - GLPALIMTOT
GLTSV = is_positive(TSNN2TSC + TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * TSNN2TSV / TOTALQUOHT) + 1 - is_positive(TSNN2TSC + TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT
IS011 = round(DS011 * NB1)
IS012 = round(DS012 * NB1)
IS021 = round(DS021 * NB2)
IS022 = round(DS022 * NB2)
IS515 = round(DS515 * NB1)
IS525 = round(DS525 * NB2)
RPQRVG = inf(GLRVG / saisies.get('CODNVG', 0)) + 0
RPQTSREMPV = inf(GLTSREMPV / saisies.get('REMPLANBV', 0))
RPQTSV = inf(GLTSV / saisies.get('CARTSNBAV', 0))
TEGLRWA = GLRWA * 1 - is_positive(INDTEFF) + TGLRWA * is_positive(INDTEFF)
TERPQRWA = RPQRWA * 1 - is_positive(INDTEFF) + TRPQRWA * is_positive(INDTEFF)
TGLRVG = is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * saisies.get('CODRVG', 0) / TOTALQUO) + 1 - is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA
TGLTOT = sum([TGL1, TGL2, TGL3, TGL4]) + TGLRVG + TGLRWB + TGLRWA
TGLTSREMPV = is_positive(TTSNN2REMPC + TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TTSNN2REMPV / TOTALQUO) + 1 - is_positive(TTSNN2REMPC + TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLTSTOT - GLPALIMTOT
TGLTSV = is_positive(TTSNN2TSC + TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TTSNN2TSV / TOTALQUO) + 1 - is_positive(TTSNN2TSC + TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT
TRPQRVG = inf(TGLRVG / saisies.get('CODNVG', 0)) + 0
TRPQTSREMPV = inf(TGLTSREMPV / saisies.get('REMPLANBV', 0))
TRPQTSV = inf(TGLTSV / saisies.get('CARTSNBAV', 0))
GL1 = is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * GLN1 / TOTALQUOHT) + 1 - is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRVG - GLRWB - GLRWA
GL2 = is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * GLN2 / TOTALQUOHT) + 1 - is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB - GLRWA - GLRVG - GL1
GL3 = is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * GLN3 / TOTALQUOHT) + 1 - is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB - GLRWA - GLRVG - GL1 - GL2
GL4 = is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * REV4 / TOTALQUOHT) + 1 - is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB - GLRWA - GLRVG - GL1 - GL2 - GL3
GLF4M = is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOMHT * PENF4 / TOTALQUOHT) + 1 - is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOT - GLFVM - GLFCM - GLF1M - GLF2M - GLF3M
GLFV = is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PENFV / TOTALQUOHT) + 1 - is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT
GLN2NET = round(GLN2 * GL2 / REV2)
GLN3NET = round(GLN3 * GL3 / REV3)
GLPALIMV = is_positive(PENALIMC + PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PENALIMV / TOTALQUOHT) + 1 - is_positive(PENALIMC + PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT
GLPRRV = is_positive(PRR2C + PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PRR2V / TOTALQUOHT) + 1 - is_positive(PRR2C + PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT
GLRVO = is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * round(TONEQUOHT * _2RV1 / TOTALQUOHT) + 1 - is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT
GLRVO5 = is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * round(TONEQUOHT * _2RV2 / TOTALQUOHT) + 1 - is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVO
GLRVO6 = is_positive(_2RV4 + REVRCM + REVRF) * round(TONEQUOHT * _2RV3 / TOTALQUOHT) + 1 - is_positive(_2RV4 + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLPRRTOT - GLTSREMPTOT - GLRVO - GLRVO5
GLRVO7 = is_positive(REVRCM + REVRF) * round(TONEQUOHT * _2RV4 / TOTALQUOHT) + 1 - is_positive(REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVO - GLRVO5 - GLRVO6
GLRVOTOT = GLRVO + GLRVO5 + GLRVO6 + GLRVO7
GLTSC = is_positive(TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * TSNN2TSC / TOTALQUOHT) + 1 - is_positive(TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV
GLTSREMPC = is_positive(TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * TSNN2REMPC / TOTALQUOHT) + 1 - is_positive(TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV
IN01 = max(IS011, IS021 - PLA)
IN02 = max(IS012, IS022 - PLA)
IN55 = max(IS515, IS525 - PLA)
INANT01 = max(IS011, IS021 - PLANT)
INANT02 = max(IS012, IS022 - PLANT)
IPQ01 = IN01
IPQ02 = IN02
IPQANT01 = INANT01
IPRODOM1 = round(IPQ01 * EXO1 * saisies.get('PRODOM', 0) / RG)
IPRODOM2 = round(IPQ02 * EXO1 * saisies.get('PRODOM', 0) / RG)
IPRODOM31 = round(IPQ01 * saisies.get('PRODOM', 0) / RG)
IPRODOM32 = round(IPQ02 * saisies.get('PRODOM', 0) / RG)
IPROGUY1 = round(IPQ01 * EXO1 * saisies.get('PROGUY', 0) / RG)
IPROGUY2 = round(IPQ02 * EXO1 * saisies.get('PROGUY', 0) / RG)
IPROGUY31 = round(IPQ01 * saisies.get('PROGUY', 0) / RG)
IPROGUY32 = round(IPQ02 * saisies.get('PROGUY', 0) / RG)
IQUOTOT5 = IN55 - IN05
RPQ1 = inf(GL1 / DIVGL1) + 0
RPQ2 = inf(GL2 / DIVGL2) + 0
RPQ3 = inf(GL3 / DIVGL3) + 0
RPQ4 = inf(GL4 / DIVGL4) + 0
RPQF4M = inf(GLF4M / saisies.get('COTF4', 0))
RPQFV = inf(GLFV / saisies.get('COTFV', 0))
RPQPALIMV = inf(GLPALIMV / saisies.get('PENSALNBV', 0))
RPQPRRV = inf(GLPRRV / saisies.get('CARPENBAV', 0))
RPQRVO = inf(GLRVO / saisies.get('RENTAXNB', 0))
RPQRVO5 = inf(GLRVO5 / saisies.get('RENTAXNB5', 0))
RPQRVO6 = inf(GLRVO6 / saisies.get('RENTAXNB6', 0))
RPQRVO7 = inf(GLRVO7 / saisies.get('RENTAXNB7', 0))
RPQTSC = inf(GLTSC / saisies.get('CARTSNBAC', 0))
RPQTSREMPC = inf(GLTSREMPC / saisies.get('REMPLANBC', 0))
TEGLRVG = GLRVG * 1 - is_positive(INDTEFF) + TGLRVG * is_positive(INDTEFF)
TEGLTSREMPV = GLTSREMPV * 1 - is_positive(INDTEFF) + TGLTSREMPV * is_positive(INDTEFF)
TEGLTSV = GLTSV * 1 - is_positive(INDTEFF) + TGLTSV * is_positive(INDTEFF)
TERPQRVG = RPQRVG * 1 - is_positive(INDTEFF) + TRPQRVG * is_positive(INDTEFF)
TERPQTSREMPV = RPQTSREMPV * 1 - is_positive(INDTEFF) + TRPQTSREMPV * is_positive(INDTEFF)
TERPQTSV = RPQTSV * 1 - is_positive(INDTEFF) + TRPQTSV * is_positive(INDTEFF)
TGL1 = is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TGLN1 / TOTALQUO) + 1 - is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA - TGLRVG
TGL2 = is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TGLN2 / TOTALQUO) + 1 - is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA - TGLRVG - TGL1
TGL3 = is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TGLN3 / TOTALQUO) + 1 - is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA - TGLRVG - TGL1 - TGL2
TGL4 = is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * REV4 / TOTALQUO) + 1 - is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA - TGLRVG - TGL1 - TGL2 - TGL3
TGLF4M = is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOM * PENF4 / TOTALQUO) + 1 - is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOT - TGLFVM - TGLFCM - TGLF1M - TGLF2M - TGLF3M
TGLFV = is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * PENFV / TOTALQUO) + 1 - is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT
TGLPALIMV = is_positive(TPENALIMC + TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPENALIMV / TOTALQUO) + 1 - is_positive(TPENALIMC + TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT
TGLPRRV = is_positive(TPRR2C + TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPRR2V / TOTALQUO) + 1 - is_positive(TPRR2C + TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT
TGLRVO = is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * round(TONEQUO * _2RV1 / TOTALQUO) + 1 - is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT
TGLRVO5 = is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * round(TONEQUO * _2RV2 / TOTALQUO) + 1 - is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVO
TGLRVO6 = is_positive(_2RV4 + REVRCM + REVRF) * round(TONEQUO * _2RV3 / TOTALQUO) + 1 - is_positive(_2RV4 + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLPRRTOT - TGLTSREMPTOT - TGLRVO - TGLRVO5
TGLRVO7 = is_positive(REVRCM + REVRF) * round(TONEQUO * _2RV4 / TOTALQUO) + 1 - is_positive(REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVO - TGLRVO5 - TGLRVO6
TGLRVOTOT = TGLRVO + TGLRVO5 + TGLRVO6 + TGLRVO7
TGLTSC = is_positive(TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TTSNN2TSC / TOTALQUO) + 1 - is_positive(TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSV
TGLTSREMPC = is_positive(TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TTSNN2REMPC / TOTALQUO) + 1 - is_positive(TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV
TRPQ1 = inf(TGL1 / DIVGL1) + 0
TRPQ2 = inf(TGL2 / DIVGL2) + 0
TRPQ3 = inf(TGL3 / DIVGL3) + 0
TRPQ4 = inf(TGL4 / DIVGL4) + 0
TRPQF4M = inf(TGLF4M / saisies.get('COTF4', 0))
TRPQFV = inf(TGLFV / saisies.get('COTFV', 0))
TRPQPALIMV = inf(TGLPALIMV / saisies.get('PENSALNBV', 0))
TRPQPRRV = inf(TGLPRRV / saisies.get('CARPENBAV', 0))
TRPQRVO = inf(TGLRVO / saisies.get('RENTAXNB', 0))
TRPQRVO5 = inf(TGLRVO5 / saisies.get('RENTAXNB5', 0))
TRPQRVO6 = inf(TGLRVO6 / saisies.get('RENTAXNB6', 0))
TRPQRVO7 = inf(TGLRVO7 / saisies.get('RENTAXNB7', 0))
TRPQTSC = inf(TGLTSC / saisies.get('CARTSNBAC', 0))
TRPQTSREMPC = inf(TGLTSREMPC / saisies.get('REMPLANBC', 0))
GLFC = is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PENFC / TOTALQUOHT) + 1 - is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV
GLPALIMC = is_positive(PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PENALIMC / TOTALQUOHT) + 1 - is_positive(PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV
GLPRRC = is_positive(PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PRR2C / TOTALQUOHT) + 1 - is_positive(PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV
GLRCMDC = is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * round(TONEQUOHT * _2RCM / TOTALQUOHT) + 1 - is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT
GLRCMFU = is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * round(TONEQUOHT * _3RCM / TOTALQUOHT) + 1 - is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC
GLTS1 = is_positive(TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * TSNN2TS1 / TOTALQUOHT) + 1 - is_positive(TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV - GLTSC
GLTS2 = is_positive(TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * TSNN2TS2 / TOTALQUOHT) + 1 - is_positive(TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV - GLTSC - GLTS1
GLTS3 = is_positive(TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * TSNN2TS3 / TOTALQUOHT) + 1 - is_positive(TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV - GLTSC - GLTS1 - GLTS2
GLTS4 = is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * TSNN2TS4 / TOTALQUOHT) + 1 - is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV - GLTSC - GLTS1 - GLTS2 - GLTS3
GLTSREMP1 = is_positive(TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * TSNN2REMP1 / TOTALQUOHT) + 1 - is_positive(TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV - GLTSREMPC
GLTSREMP2 = is_positive(TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * TSNN2REMP2 / TOTALQUOHT) + 1 - is_positive(TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV - GLTSREMPC - GLTSREMP1
GLTSREMP3 = is_positive(TSNN2REMP4 + TSNN2REMPC + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * TSNN2REMP3 / TOTALQUOHT) + 1 - is_positive(TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV - GLTSREMPC - GLTSREMP1 - GLTSREMP2
GLTSREMP4 = is_positive(REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * TSNN2REMP4 / TOTALQUOHT) + 1 - is_positive(REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV - GLTSREMPC - GLTSREMP1 - GLTSREMP2 - GLTSREMP3
IMETRO1 = round(IPQ01 * EXO1 * REVMETRO / RG)
IMETRO2 = round(IPQ02 * EXO1 * REVMETRO / RG)
IMETRO31 = round(IPQ01 * REVMETRO / RG)
IMETRO32 = round(IPQ02 * REVMETRO / RG)
RPQFC = inf(GLFC / saisies.get('COTFC', 0))
RPQPALIMC = inf(GLPALIMC / saisies.get('PENSALNBC', 0))
RPQPRRC = inf(GLPRRC / saisies.get('CARPENBAC', 0))
RPQRCMDC = inf(GLRCMDC / saisies.get('REVACTNB', 0))
RPQRCMFU = inf(GLRCMFU / saisies.get('REVPEANB', 0))
RPQTS1 = inf(GLTS1 / saisies.get('CARTSNBAP1', 0))
RPQTS2 = inf(GLTS2 / saisies.get('CARTSNBAP2', 0))
RPQTS3 = inf(GLTS3 / saisies.get('CARTSNBAP3', 0))
RPQTS4 = inf(GLTS4 / saisies.get('CARTSNBAP4', 0))
RPQTSREMP1 = inf(GLTSREMP1 / saisies.get('REMPLANBP1', 0))
RPQTSREMP2 = inf(GLTSREMP2 / saisies.get('REMPLANBP2', 0))
RPQTSREMP3 = inf(GLTSREMP3 / saisies.get('REMPLANBP3', 0))
RPQTSREMP4 = inf(GLTSREMP4 / saisies.get('REMPLANBP4', 0))
TEGL1 = GL1 * 1 - is_positive(INDTEFF) + TGL1 * is_positive(INDTEFF)
TEGL2 = GL2 * 1 - is_positive(INDTEFF) + TGL2 * is_positive(INDTEFF)
TEGL3 = GL3 * 1 - is_positive(INDTEFF) + TGL3 * is_positive(INDTEFF)
TEGL4 = GL4 * 1 - is_positive(INDTEFF) + TGL4 * is_positive(INDTEFF)
TEGLF4M = GLF4M * 1 - is_positive(INDTEFF) + TGLF4M * is_positive(INDTEFF)
TEGLFTOTM = TEGLFVM + TEGLFCM + TEGLF1M + TEGLF2M + TEGLF3M + TEGLF4M
TEGLFV = GLFV * 1 - is_positive(INDTEFF) + TGLFV * is_positive(INDTEFF)
TEGLPALIMV = GLPALIMV * 1 - is_positive(INDTEFF) + TGLPALIMV * is_positive(INDTEFF)
TEGLPRRV = GLPRRV * 1 - is_positive(INDTEFF) + TGLPRRV * is_positive(INDTEFF)
TEGLRVO = GLRVO * 1 - is_positive(INDTEFF) + TGLRVO * is_positive(INDTEFF)
TEGLRVO5 = GLRVO5 * 1 - is_positive(INDTEFF) + TGLRVO5 * is_positive(INDTEFF)
TEGLRVO6 = GLRVO6 * 1 - is_positive(INDTEFF) + TGLRVO6 * is_positive(INDTEFF)
TEGLRVO7 = GLRVO7 * 1 - is_positive(INDTEFF) + TGLRVO7 * is_positive(INDTEFF)
TEGLRVOTOT = TEGLRVO + TEGLRVO5 + TEGLRVO6 + TEGLRVO7
TEGLTOT = TEGLRVG + TEGL1 + TEGL2 + TEGL3 + TEGL4
TEGLTSC = GLTSC * 1 - is_positive(INDTEFF) + TGLTSC * is_positive(INDTEFF)
TEGLTSREMPC = GLTSREMPC * 1 - is_positive(INDTEFF) + TGLTSREMPC * is_positive(INDTEFF)
TERPQ1 = RPQ1 * 1 - is_positive(INDTEFF) + TRPQ1 * is_positive(INDTEFF)
TERPQ2 = RPQ2 * 1 - is_positive(INDTEFF) + TRPQ2 * is_positive(INDTEFF)
TERPQ3 = RPQ3 * 1 - is_positive(INDTEFF) + TRPQ3 * is_positive(INDTEFF)
TERPQ4 = RPQ4 * 1 - is_positive(INDTEFF) + TRPQ4 * is_positive(INDTEFF)
TERPQF4M = RPQF4M * 1 - is_positive(INDTEFF) + TRPQF4M * is_positive(INDTEFF)
TERPQFV = RPQFV * 1 - is_positive(INDTEFF) + TRPQFV * is_positive(INDTEFF)
TERPQPALIMV = RPQPALIMV * 1 - is_positive(INDTEFF) + TRPQPALIMV * is_positive(INDTEFF)
TERPQPRRV = RPQPRRV * 1 - is_positive(INDTEFF) + TRPQPRRV * is_positive(INDTEFF)
TERPQRVO = RPQRVO * 1 - is_positive(INDTEFF) + TRPQRVO * is_positive(INDTEFF)
TERPQRVO5 = RPQRVO5 * 1 - is_positive(INDTEFF) + TRPQRVO5 * is_positive(INDTEFF)
TERPQRVO6 = RPQRVO6 * 1 - is_positive(INDTEFF) + TRPQRVO6 * is_positive(INDTEFF)
TERPQRVO7 = RPQRVO7 * 1 - is_positive(INDTEFF) + TRPQRVO7 * is_positive(INDTEFF)
TERPQTSC = RPQTSC * 1 - is_positive(INDTEFF) + TRPQTSC * is_positive(INDTEFF)
TERPQTSREMPC = RPQTSREMPC * 1 - is_positive(INDTEFF) + TRPQTSREMPC * is_positive(INDTEFF)
TGLFC = is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * PENFC / TOTALQUO) + 1 - is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV
TGLPALIMC = is_positive(TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPENALIMC / TOTALQUO) + 1 - is_positive(TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV
TGLPRRC = is_positive(TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPRR2C / TOTALQUO) + 1 - is_positive(TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV
TGLRCMDC = is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * round(TONEQUO * _2RCM / TOTALQUO) + 1 - is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT
TGLRCMFU = is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * round(TONEQUO * _3RCM / TOTALQUO) + 1 - is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC
TGLTS1 = is_positive(TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TTSNN2TS1 / TOTALQUO) + 1 - is_positive(TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - GLTOT - GLFTOT - GLPALIMTOT - TGLTSV - TGLTSC
TGLTS2 = is_positive(TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TTSNN2TS2 / TOTALQUO) + 1 - is_positive(TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSV - TGLTSC - TGLTS1
TGLTS3 = is_positive(TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TTSNN2TS3 / TOTALQUO) + 1 - is_positive(TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSV - TGLTSC - TGLTS1 - TGLTS2
TGLTS4 = is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TTSNN2TS4 / TOTALQUO) + 1 - is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSV - TGLTSC - TGLTS1 - TGLTS2 - TGLTS3
TGLTSREMP1 = is_positive(TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TTSNN2REMP1 / TOTALQUO) + 1 - is_positive(TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV - TGLTSREMPC
TGLTSREMP2 = is_positive(TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TTSNN2REMP2 / TOTALQUO) + 1 - is_positive(TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV - TGLTSREMPC - TGLTSREMP1
TGLTSREMP3 = is_positive(TTSNN2REMP4 + TTSNN2REMPC + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TTSNN2REMP3 / TOTALQUO) + 1 - is_positive(TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV - TGLTSREMPC - TGLTSREMP1 - TGLTSREMP2
TGLTSREMP4 = is_positive(REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TTSNN2REMP4 / TOTALQUO) + 1 - is_positive(REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV - TGLTSREMPC - TGLTSREMP1 - TGLTSREMP2 - TGLTSREMP3
TRPQFC = inf(TGLFC / saisies.get('COTFC', 0))
TRPQPALIMC = inf(TGLPALIMC / saisies.get('PENSALNBC', 0))
TRPQPRRC = inf(TGLPRRC / saisies.get('CARPENBAC', 0))
TRPQRCMDC = inf(TGLRCMDC / saisies.get('REVACTNB', 0))
TRPQRCMFU = inf(TGLRCMFU / saisies.get('REVPEANB', 0))
TRPQTS1 = inf(TGLTS1 / saisies.get('CARTSNBAP1', 0))
TRPQTS2 = inf(TGLTS2 / saisies.get('CARTSNBAP2', 0))
TRPQTS3 = inf(TGLTS3 / saisies.get('CARTSNBAP3', 0))
TRPQTS4 = inf(TGLTS4 / saisies.get('CARTSNBAP4', 0))
TRPQTSREMP1 = inf(TGLTSREMP1 / saisies.get('REMPLANBP1', 0))
TRPQTSREMP2 = inf(TGLTSREMP2 / saisies.get('REMPLANBP2', 0))
TRPQTSREMP3 = inf(TGLTSREMP3 / saisies.get('REMPLANBP3', 0))
TRPQTSREMP4 = inf(TGLTSREMP4 / saisies.get('REMPLANBP4', 0))
ZIPQRWB5 = is_positive(TEGLRWA + TEGLRVG + sum([TEGL1M, TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQRWBM / TETONEQUOM1) + 1 - is_positive(TEGLRWA + TEGLRVG + sum([TEGL1M, TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7
GLF1 = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PENF1 / TOTALQUOHT) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV - GLFC
GLF2 = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PENF2 / TOTALQUOHT) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV - GLFC - GLF1
GLF3 = is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PENF3 / TOTALQUOHT) + 1 - is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV - GLFC - GLF1 - GLF2
GLF4 = is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PENF4 / TOTALQUOHT) + 1 - is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV - GLFC - GLF1 - GLF2 - GLF3
GLPALIM1 = is_positive(PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PENALIM1 / TOTALQUOHT) + 1 - is_positive(PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV - GLPALIMC
GLPALIM2 = is_positive(PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PENALIM2 / TOTALQUOHT) + 1 - is_positive(PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV - GLPALIMC - GLPALIM1
GLPALIM3 = is_positive(PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PENALIM3 / TOTALQUOHT) + 1 - is_positive(PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV - GLPALIMC - GLPALIM1 - GLPALIM2
GLPALIM4 = is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PENALIM4 / TOTALQUOHT) + 1 - is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV - GLPALIMC - GLPALIM1 - GLPALIM2 - GLPALIM3
GLPRR1 = is_positive(PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PRR21 / TOTALQUOHT) + 1 - is_positive(PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC
GLPRR2 = is_positive(PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PRR22 / TOTALQUOHT) + 1 - is_positive(PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1
GLPRR3 = is_positive(PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PRR23 / TOTALQUOHT) + 1 - is_positive(PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2
GLPRR4 = is_positive(PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PRR24 / TOTALQUOHT) + 1 - is_positive(PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3
GLPRRZV = is_positive(PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PRR2ZV / TOTALQUOHT) + 1 - is_positive(PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4
GLRCMCH = is_positive(_5RCM + _6RCM + _7RCM + REVRF) * round(TONEQUOHT * _4RCM / TOTALQUOHT) + 1 - is_positive(_5RCM + _6RCM + _7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC - GLRCMFU
GLRCMTS = is_positive(_6RCM + _7RCM + REVRF) * round(TONEQUOHT * _5RCM / TOTALQUOHT) + 1 - is_positive(_6RCM + _7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC - GLRCMFU - GLRCMCH
IPQRWB5 = ZIPQRWB5 * saisies.get('CODNWB', 0)
RPQF1 = inf(GLF1 / saisies.get('COTF1', 0))
RPQF2 = inf(GLF2 / saisies.get('COTF2', 0))
RPQF3 = inf(GLF3 / saisies.get('COTF3', 0))
RPQF4 = inf(GLF4 / saisies.get('COTF4', 0))
RPQPALIM1 = inf(GLPALIM1 / saisies.get('PENSALNBP1', 0))
RPQPALIM2 = inf(GLPALIM2 / saisies.get('PENSALNBP2', 0))
RPQPALIM3 = inf(GLPALIM3 / saisies.get('PENSALNBP3', 0))
RPQPALIM4 = inf(GLPALIM4 / saisies.get('PENSALNBP4', 0))
RPQPRR1 = inf(GLPRR1 / saisies.get('CARPENBAP1', 0))
RPQPRR2 = inf(GLPRR2 / saisies.get('CARPENBAP2', 0))
RPQPRR3 = inf(GLPRR3 / saisies.get('CARPENBAP3', 0))
RPQPRR4 = inf(GLPRR4 / saisies.get('CARPENBAP4', 0))
RPQPRRZV = inf(GLPRRZV / saisies.get('CODNAZ', 0))
RPQRCMCH = inf(GLRCMCH / saisies.get('PROVIENB', 0))
RPQRCMTS = inf(GLRCMTS / saisies.get('DISQUONB', 0))
TEGLFC = GLFC * 1 - is_positive(INDTEFF) + TGLFC * is_positive(INDTEFF)
TEGLPALIMC = GLPALIMC * 1 - is_positive(INDTEFF) + TGLPALIMC * is_positive(INDTEFF)
TEGLPRRC = GLPRRC * 1 - is_positive(INDTEFF) + TGLPRRC * is_positive(INDTEFF)
TEGLRCMDC = GLRCMDC * 1 - is_positive(INDTEFF) + TGLRCMDC * is_positive(INDTEFF)
TEGLRCMFU = GLRCMFU * 1 - is_positive(INDTEFF) + TGLRCMFU * is_positive(INDTEFF)
TEGLTS1 = GLTS1 * 1 - is_positive(INDTEFF) + TGLTS1 * is_positive(INDTEFF)
TEGLTS2 = GLTS2 * 1 - is_positive(INDTEFF) + TGLTS2 * is_positive(INDTEFF)
TEGLTS3 = GLTS3 * 1 - is_positive(INDTEFF) + TGLTS3 * is_positive(INDTEFF)
TEGLTS4 = GLTS4 * 1 - is_positive(INDTEFF) + TGLTS4 * is_positive(INDTEFF)
TEGLTSREMP1 = GLTSREMP1 * 1 - is_positive(INDTEFF) + TGLTSREMP1 * is_positive(INDTEFF)
TEGLTSREMP2 = GLTSREMP2 * 1 - is_positive(INDTEFF) + TGLTSREMP2 * is_positive(INDTEFF)
TEGLTSREMP3 = GLTSREMP3 * 1 - is_positive(INDTEFF) + TGLTSREMP3 * is_positive(INDTEFF)
TEGLTSREMP4 = GLTSREMP4 * 1 - is_positive(INDTEFF) + TGLTSREMP4 * is_positive(INDTEFF)
TEGLTSREMPTOT = TEGLTSREMPV + TEGLTSREMPC + TEGLTSREMP1 + TEGLTSREMP2 + TEGLTSREMP3 + TEGLTSREMP4
TEGLTSTOT = TEGLTSV + TEGLTSC + TEGLTS1 + TEGLTS2 + TEGLTS3 + TEGLTS4
TERPQFC = RPQFC * 1 - is_positive(INDTEFF) + TRPQFC * is_positive(INDTEFF)
TERPQPALIMC = RPQPALIMC * 1 - is_positive(INDTEFF) + TRPQPALIMC * is_positive(INDTEFF)
TERPQPRRC = RPQPRRC * 1 - is_positive(INDTEFF) + TRPQPRRC * is_positive(INDTEFF)
TERPQRCMDC = RPQRCMDC * 1 - is_positive(INDTEFF) + TRPQRCMDC * is_positive(INDTEFF)
TERPQRCMFU = RPQRCMFU * 1 - is_positive(INDTEFF) + TRPQRCMFU * is_positive(INDTEFF)
TERPQTS1 = RPQTS1 * 1 - is_positive(INDTEFF) + TRPQTS1 * is_positive(INDTEFF)
TERPQTS2 = RPQTS2 * 1 - is_positive(INDTEFF) + TRPQTS2 * is_positive(INDTEFF)
TERPQTS3 = RPQTS3 * 1 - is_positive(INDTEFF) + TRPQTS3 * is_positive(INDTEFF)
TERPQTS4 = RPQTS4 * 1 - is_positive(INDTEFF) + TRPQTS4 * is_positive(INDTEFF)
TERPQTSREMP1 = RPQTSREMP1 * 1 - is_positive(INDTEFF) + TRPQTSREMP1 * is_positive(INDTEFF)
TERPQTSREMP2 = RPQTSREMP2 * 1 - is_positive(INDTEFF) + TRPQTSREMP2 * is_positive(INDTEFF)
TERPQTSREMP3 = RPQTSREMP3 * 1 - is_positive(INDTEFF) + TRPQTSREMP3 * is_positive(INDTEFF)
TERPQTSREMP4 = RPQTSREMP4 * 1 - is_positive(INDTEFF) + TRPQTSREMP4 * is_positive(INDTEFF)
TGLF1 = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * PENF1 / TOTALQUO) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV - TGLFC
TGLF2 = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * PENF2 / TOTALQUO) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV - TGLFC - TGLF1
TGLF3 = is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * PENF3 / TOTALQUO) + 1 - is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV - TGLFC - TGLF1 - TGLF2
TGLF4 = is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * PENF4 / TOTALQUO) + 1 - is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV - TGLFC - TGLF1 - TGLF2 - TGLF3
TGLPALIM1 = is_positive(TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPENALIM1 / TOTALQUO) + 1 - is_positive(TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV - TGLPALIMC
TGLPALIM2 = is_positive(TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPENALIM2 / TOTALQUO) + 1 - is_positive(TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV - TGLPALIMC - TGLPALIM1
TGLPALIM3 = is_positive(TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPENALIM3 / TOTALQUO) + 1 - is_positive(TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV - TGLPALIMC - TGLPALIM1 - TGLPALIM2
TGLPALIM4 = is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPENALIM4 / TOTALQUO) + 1 - is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV - TGLPALIMC - TGLPALIM1 - TGLPALIM2 - TGLPALIM3
TGLPRR1 = is_positive(TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPRR21 / TOTALQUO) + 1 - is_positive(TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC
TGLPRR2 = is_positive(TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPRR22 / TOTALQUO) + 1 - is_positive(TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1
TGLPRR3 = is_positive(TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPRR23 / TOTALQUO) + 1 - is_positive(TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2
TGLPRR4 = is_positive(TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPRR24 / TOTALQUO) + 1 - is_positive(TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3
TGLPRRZV = is_positive(TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPRR2ZV / TOTALQUO) + 1 - is_positive(TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4
TGLRCMCH = is_positive(_5RCM + _6RCM + _7RCM + REVRF) * round(TONEQUO * _4RCM / TOTALQUO) + 1 - is_positive(_5RCM + _6RCM + _7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC - TGLRCMFU
TGLRCMTS = is_positive(_6RCM + _7RCM + REVRF) * round(TONEQUO * _5RCM / TOTALQUO) + 1 - is_positive(_6RCM + _7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC - TGLRCMFU - TGLRCMCH
TRPQF1 = inf(TGLF1 / saisies.get('COTF1', 0))
TRPQF2 = inf(TGLF2 / saisies.get('COTF2', 0))
TRPQF3 = inf(TGLF3 / saisies.get('COTF3', 0))
TRPQF4 = inf(TGLF4 / saisies.get('COTF4', 0))
TRPQPALIM1 = inf(TGLPALIM1 / saisies.get('PENSALNBP1', 0))
TRPQPALIM2 = inf(TGLPALIM2 / saisies.get('PENSALNBP2', 0))
TRPQPALIM3 = inf(TGLPALIM3 / saisies.get('PENSALNBP3', 0))
TRPQPALIM4 = inf(TGLPALIM4 / saisies.get('PENSALNBP4', 0))
TRPQPRR1 = inf(TGLPRR1 / saisies.get('CARPENBAP1', 0))
TRPQPRR2 = inf(TGLPRR2 / saisies.get('CARPENBAP2', 0))
TRPQPRR3 = inf(TGLPRR3 / saisies.get('CARPENBAP3', 0))
TRPQPRR4 = inf(TGLPRR4 / saisies.get('CARPENBAP4', 0))
TRPQPRRZV = inf(TGLPRRZV / saisies.get('CODNAZ', 0))
TRPQRCMCH = inf(TGLRCMCH / saisies.get('PROVIENB', 0))
TRPQRCMTS = inf(TGLRCMTS / saisies.get('DISQUONB', 0))
ZIPQRWA5 = is_positive(TEGLRVG + sum([TEGL1M, TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQRWAM / TETONEQUOM1) + 1 - is_positive(TEGLRVG + sum([TEGL1M, TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7 - ZIPQRWB5
GLPRRZC = is_positive(PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PRR2ZC / TOTALQUOHT) + 1 - is_positive(PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV
GLRCMGO = is_positive(_7RCM + REVRF) * round(TONEQUOHT * _6RCM / TOTALQUOHT) + 1 - is_positive(_7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC - GLRCMFU - GLRCMCH - GLRCMTS
GLRCMTR = is_positive(REVRF) * round(TONEQUOHT * _7RCM / TOTALQUOHT) + 1 - is_positive(REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC - GLRCMFU - GLRCMCH - GLRCMGO - GLRCMTS
IPQRWA5 = ZIPQRWA5 * saisies.get('CODNWA', 0)
RPQPRRZC = inf(GLPRRZC / saisies.get('CODNBZ', 0))
RPQRCMGO = inf(GLRCMGO / saisies.get('RESTUCNB', 0))
RPQRCMTR = inf(GLRCMTR / saisies.get('INTERENB', 0))
TEGLF1 = GLF1 * 1 - is_positive(INDTEFF) + TGLF1 * is_positive(INDTEFF)
TEGLF2 = GLF2 * 1 - is_positive(INDTEFF) + TGLF2 * is_positive(INDTEFF)
TEGLF3 = GLF3 * 1 - is_positive(INDTEFF) + TGLF3 * is_positive(INDTEFF)
TEGLF4 = GLF4 * 1 - is_positive(INDTEFF) + TGLF4 * is_positive(INDTEFF)
TEGLFTOT = TEGLFV + TEGLFC + TEGLF1 + TEGLF2 + TEGLF3 + TEGLF4
TEGLPALIM1 = GLPALIM1 * 1 - is_positive(INDTEFF) + TGLPALIM1 * is_positive(INDTEFF)
TEGLPALIM2 = GLPALIM2 * 1 - is_positive(INDTEFF) + TGLPALIM2 * is_positive(INDTEFF)
TEGLPALIM3 = GLPALIM3 * 1 - is_positive(INDTEFF) + TGLPALIM3 * is_positive(INDTEFF)
TEGLPALIM4 = GLPALIM4 * 1 - is_positive(INDTEFF) + TGLPALIM4 * is_positive(INDTEFF)
TEGLPALIMTOT = TEGLPALIMV + TEGLPALIMC + TEGLPALIM1 + TEGLPALIM2 + TEGLPALIM3 + TEGLPALIM4
TEGLPRR1 = GLPRR1 * 1 - is_positive(INDTEFF) + TGLPRR1 * is_positive(INDTEFF)
TEGLPRR2 = GLPRR2 * 1 - is_positive(INDTEFF) + TGLPRR2 * is_positive(INDTEFF)
TEGLPRR3 = GLPRR3 * 1 - is_positive(INDTEFF) + TGLPRR3 * is_positive(INDTEFF)
TEGLPRR4 = GLPRR4 * 1 - is_positive(INDTEFF) + TGLPRR4 * is_positive(INDTEFF)
TEGLPRRTOT = TEGLPRRV + TEGLPRRC + TEGLPRR1 + TEGLPRR2 + TEGLPRR3 + TEGLPRR4
TEGLPRRZV = GLPRRZV * 1 - is_positive(INDTEFF) + TGLPRRZV * is_positive(INDTEFF)
TEGLRCMCH = GLRCMCH * 1 - is_positive(INDTEFF) + TGLRCMCH * is_positive(INDTEFF)
TEGLRCMTS = GLRCMTS * 1 - is_positive(INDTEFF) + TGLRCMTS * is_positive(INDTEFF)
TERPQF1 = RPQF1 * 1 - is_positive(INDTEFF) + TRPQF1 * is_positive(INDTEFF)
TERPQF2 = RPQF2 * 1 - is_positive(INDTEFF) + TRPQF2 * is_positive(INDTEFF)
TERPQF3 = RPQF3 * 1 - is_positive(INDTEFF) + TRPQF3 * is_positive(INDTEFF)
TERPQF4 = RPQF4 * 1 - is_positive(INDTEFF) + TRPQF4 * is_positive(INDTEFF)
TERPQPALIM1 = RPQPALIM1 * 1 - is_positive(INDTEFF) + TRPQPALIM1 * is_positive(INDTEFF)
TERPQPALIM2 = RPQPALIM2 * 1 - is_positive(INDTEFF) + TRPQPALIM2 * is_positive(INDTEFF)
TERPQPALIM3 = RPQPALIM3 * 1 - is_positive(INDTEFF) + TRPQPALIM3 * is_positive(INDTEFF)
TERPQPALIM4 = RPQPALIM4 * 1 - is_positive(INDTEFF) + TRPQPALIM4 * is_positive(INDTEFF)
TERPQPRR1 = RPQPRR1 * 1 - is_positive(INDTEFF) + TRPQPRR1 * is_positive(INDTEFF)
TERPQPRR2 = RPQPRR2 * 1 - is_positive(INDTEFF) + TRPQPRR2 * is_positive(INDTEFF)
TERPQPRR3 = RPQPRR3 * 1 - is_positive(INDTEFF) + TRPQPRR3 * is_positive(INDTEFF)
TERPQPRR4 = RPQPRR4 * 1 - is_positive(INDTEFF) + TRPQPRR4 * is_positive(INDTEFF)
TERPQPRRZV = RPQPRRZV * 1 - is_positive(INDTEFF) + TRPQPRRZV * is_positive(INDTEFF)
TERPQRCMCH = RPQRCMCH * 1 - is_positive(INDTEFF) + TRPQRCMCH * is_positive(INDTEFF)
TERPQRCMTS = RPQRCMTS * 1 - is_positive(INDTEFF) + TRPQRCMTS * is_positive(INDTEFF)
TGLPRRZC = is_positive(TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPRR2ZC / TOTALQUO) + 1 - is_positive(TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV
TGLRCMGO = is_positive(_7RCM + REVRF) * round(TONEQUO * _6RCM / TOTALQUO) + 1 - is_positive(_7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC - TGLRCMFU - TGLRCMCH - TGLRCMTS
TGLRCMTR = is_positive(REVRF) * round(TONEQUO * _7RCM / TOTALQUO) + 1 - is_positive(REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC - TGLRCMFU - TGLRCMCH - TGLRCMGO - TGLRCMTS
TONEQUO1 = sum([RPQ1, RPQ2, RPQ3, RPQ4]) + sum([RPQFV, RPQFC, RPQF1, RPQF2, RPQF3, RPQF4]) + sum([RPQPALIMV, RPQPALIMC, RPQPALIM1, RPQPALIM2, RPQPALIM3, RPQPALIM4]) + sum([RPQRF1, RPQRF2]) + RPQRCMDC + RPQRCMFU + RPQRCMCH + RPQRCMTR + RPQRCMTS + RPQRCMGO + sum([RPQPRRV, RPQPRRC, RPQPRR1, RPQPRR2, RPQPRR3, RPQPRR4]) + sum([RPQPRRZV, RPQPRRZC, RPQPRRZ1, RPQPRRZ2, RPQPRRZ3, RPQPRRZ4]) + RPQRVO + RPQRVO5 + RPQRVO6 + RPQRVO7 + sum([RPQTSV, RPQTSC, RPQTS1, RPQTS2, RPQTS3, RPQTS4]) + sum([RPQTSREMPV, RPQTSREMPC, RPQTSREMP1, RPQTSREMP2, RPQTSREMP3, RPQTSREMP4]) + RPQRVG + RPQRWB * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + RPQRWB + RPQRWA * is_zero(2 - saisies.get('FLAG_EXIT', 0))
TRPQPRRZC = inf(TGLPRRZC / saisies.get('CODNBZ', 0))
TRPQRCMGO = inf(TGLRCMGO / saisies.get('RESTUCNB', 0))
TRPQRCMTR = inf(TGLRCMTR / saisies.get('INTERENB', 0))
ZIPQRVG5 = is_positive(sum([TEGL1M, TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQRVGM / TETONEQUOM1) + 1 - is_positive(sum([TEGL1M, TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7 - ZIPQRWB5 - ZIPQRWA5
GLPRRZ1 = is_positive(PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PRR2Z1 / TOTALQUOHT) + 1 - is_positive(PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV - GLPRRZC
GLPRRZ2 = is_positive(PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PRR2Z2 / TOTALQUOHT) + 1 - is_positive(PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV - GLPRRZC - GLPRRZ1
GLPRRZ3 = is_positive(PRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PRR2Z3 / TOTALQUOHT) + 1 - is_positive(PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV - GLPRRZC - GLPRRZ1 - GLPRRZ2
GLPRRZ4 = is_positive(REVRVO + REVRCM + REVRF) * round(TONEQUOHT * PRR2Z4 / TOTALQUOHT) + 1 - is_positive(REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV - GLPRRZC - GLPRRZ1 - GLPRRZ2 - GLPRRZ3
GLRCMTOT = GLRCMDC + GLRCMFU + GLRCMCH + GLRCMGO + GLRCMTR + GLRCMTS
GLRF1 = is_positive(_3REVF) * round(TONEQUOHT * _2REVF / TOTALQUOHT) + 1 - is_positive(_3REVF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMTOT
GLRF2 = TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMTOT - GLRF1
GLRFTOT = GLRF1 + GLRF2
IPQRVG5 = ZIPQRVG5 * saisies.get('CODNVG', 0)
LIMIT10 = 20000 + max(0, round(max(0, RI1 + TONEQUO1) * 8 / 100)) * 1 - is_positive(VARRMOND * is_positive(ART1731BIS) + saisies.get('RMOND', 0) * 1 - ART1731BIS) + max(0, round(max(0, VARRMOND * is_positive(ART1731BIS) + saisies.get('RMOND', 0) * 1 - ART1731BIS + TONEQUOM1) * 8 / 100)) * is_positive(VARRMOND * is_positive(ART1731BIS) + saisies.get('RMOND', 0) * 1 - ART1731BIS)
LIMIT11 = 18000 + max(0, round(max(0, RI1 + TONEQUO1) * 6 / 100)) * 1 - is_positive(VARRMOND * is_positive(ART1731BIS) + saisies.get('RMOND', 0) * 1 - ART1731BIS) + max(0, round(max(0, VARRMOND * is_positive(ART1731BIS) + saisies.get('RMOND', 0) * 1 - ART1731BIS + TONEQUOM1) * 6 / 100)) * is_positive(VARRMOND * is_positive(ART1731BIS) + saisies.get('RMOND', 0) * 1 - ART1731BIS)
LIMIT12 = 18000 + max(0, round(max(0, RI1 + TONEQUO1) * 4 / 100)) * 1 - is_positive(VARRMOND * is_positive(ART1731BIS) + saisies.get('RMOND', 0) * 1 - ART1731BIS) + max(0, round(max(0, VARRMOND * is_positive(ART1731BIS) + saisies.get('RMOND', 0) * 1 - ART1731BIS + TONEQUOM1) * 4 / 100)) * is_positive(VARRMOND * is_positive(ART1731BIS) + saisies.get('RMOND', 0) * 1 - ART1731BIS)
LIMIT9 = 25000 + max(0, round(max(0, RI1 + TONEQUO1) * 10 / 100)) * 1 - is_positive(VARRMOND * is_positive(ART1731BIS) + saisies.get('RMOND', 0) * 1 - ART1731BIS) + max(0, round(max(0, VARRMOND * is_positive(ART1731BIS) + saisies.get('RMOND', 0) * 1 - ART1731BIS + TONEQUOM1) * 10 / 100)) * is_positive(VARRMOND * is_positive(ART1731BIS) + saisies.get('RMOND', 0) * 1 - ART1731BIS)
RPQPRRZ1 = inf(GLPRRZ1 / saisies.get('CODNCZ', 0))
RPQPRRZ2 = inf(GLPRRZ2 / saisies.get('CODNDZ', 0))
RPQPRRZ3 = inf(GLPRRZ3 / saisies.get('CODNEZ', 0))
RPQPRRZ4 = inf(GLPRRZ4 / saisies.get('CODNFZ', 0))
RPQRF1 = inf(GLRF1 / saisies.get('FONCINB', 0))
RPQRF2 = inf(GLRF2 / saisies.get('REAMORNB', 0))
TEGLPRRZC = GLPRRZC * 1 - is_positive(INDTEFF) + TGLPRRZC * is_positive(INDTEFF)
TEGLRCMGO = GLRCMGO * 1 - is_positive(INDTEFF) + TGLRCMGO * is_positive(INDTEFF)
TEGLRCMTR = GLRCMTR * 1 - is_positive(INDTEFF) + TGLRCMTR * is_positive(INDTEFF)
TERPQPRRZC = RPQPRRZC * 1 - is_positive(INDTEFF) + TRPQPRRZC * is_positive(INDTEFF)
TERPQRCMGO = RPQRCMGO * 1 - is_positive(INDTEFF) + TRPQRCMGO * is_positive(INDTEFF)
TERPQRCMTR = RPQRCMTR * 1 - is_positive(INDTEFF) + TRPQRCMTR * is_positive(INDTEFF)
TGLPRRZ1 = is_positive(TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPRR2Z1 / TOTALQUO) + 1 - is_positive(TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV - TGLPRRZC
TGLPRRZ2 = is_positive(TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPRR2Z2 / TOTALQUO) + 1 - is_positive(TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV - TGLPRRZC - TGLPRRZ1
TGLPRRZ3 = is_positive(TPRR2Z4 + REVRVO + REVRCM + REVRF) * round(TONEQUO * TPRR2Z3 / TOTALQUO) + 1 - is_positive(TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV - TGLPRRZC - TGLPRRZ1 - TGLPRRZ2
TGLPRRZ4 = is_positive(REVRVO + REVRCM + REVRF) * round(TONEQUO * TPRR2Z4 / TOTALQUO) + 1 - is_positive(REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV - TGLPRRZC - TGLPRRZ1 - TGLPRRZ2 - TGLPRRZ3
TGLRCMTOT = TGLRCMDC + TGLRCMFU + TGLRCMCH + TGLRCMGO + TGLRCMTR + TGLRCMTS
TGLRF1 = is_positive(_3REVF) * round(TONEQUO * _2REVF / TOTALQUO) + 1 - is_positive(_3REVF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMTOT
TGLRF2 = TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMTOT - TGLRF1
TGLRFTOT = TGLRF1 + TGLRF2
TONEQUO1T = sum([TRPQ1, TRPQ2, TRPQ3, TRPQ4]) + sum([TRPQFV, TRPQFC, TRPQF1, TRPQF2, TRPQF3, TRPQF4]) + sum([TRPQPALIMV, TRPQPALIMC, TRPQPALIM1, TRPQPALIM2, TRPQPALIM3, TRPQPALIM4]) + sum([TRPQRF1, TRPQRF2]) + TRPQRCMDC + TRPQRCMFU + TRPQRCMCH + TRPQRCMTR + TRPQRCMTS + TRPQRCMGO + sum([TRPQPRRV, TRPQPRRC, TRPQPRR1, TRPQPRR2, TRPQPRR3, TRPQPRR4]) + sum([TRPQPRRZV, TRPQPRRZC, TRPQPRRZ1, TRPQPRRZ2, TRPQPRRZ3, TRPQPRRZ4]) + TRPQRVO + TRPQRVO5 + TRPQRVO6 + TRPQRVO7 + sum([TRPQTSV, TRPQTSC, TRPQTS1, TRPQTS2, TRPQTS3, TRPQTS4]) + sum([TRPQTSREMPV, TRPQTSREMPC, TRPQTSREMP1, TRPQTSREMP2, TRPQTSREMP3, TRPQTSREMP4]) + TRPQRVG + TRPQRWB * is_zero(1 - saisies.get('FLAG_EXIT', 0)) + TRPQRWB + TRPQRWA * is_zero(2 - saisies.get('FLAG_EXIT', 0))
TRPQPRRZ1 = inf(TGLPRRZ1 / saisies.get('CODNCZ', 0))
TRPQPRRZ2 = inf(TGLPRRZ2 / saisies.get('CODNDZ', 0))
TRPQPRRZ3 = inf(TGLPRRZ3 / saisies.get('CODNEZ', 0))
TRPQPRRZ4 = inf(TGLPRRZ4 / saisies.get('CODNFZ', 0))
TRPQRF1 = inf(TGLRF1 / saisies.get('FONCINB', 0))
TRPQRF2 = inf(TGLRF2 / saisies.get('REAMORNB', 0))
ZIPQ15 = is_positive(sum([TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQ1M / TETONEQUOM1) + 1 - is_positive(sum([TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7 - ZIPQRWB5 - ZIPQRWA5 - ZIPQRVG5
ZIPQ25 = is_positive(sum([TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQ2M / TETONEQUOM1) + 1 - is_positive(sum([TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7 - ZIPQRWB5 - ZIPQRWA5 - ZIPQRVG5 - ZIPQ15
ZIPQ35 = is_positive(TEGL4M + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQ3M / TETONEQUOM1) + 1 - is_positive(TEGL4M + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7 - ZIPQRWB5 - ZIPQRWA5 - ZIPQRVG5 - sum([ZIPQ15, ZIPQ25])
ZIPQ45 = is_positive(TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQ4M / TETONEQUOM1) + 1 - is_positive(TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7 - ZIPQRWB5 - ZIPQRWA5 - ZIPQRVG5 - sum([ZIPQ15, ZIPQ25, ZIPQ35])
ZIPQ5TOT = sum([ZIPQ15, ZIPQ25, ZIPQ35, ZIPQ45]) + ZIPQRVG5 + ZIPQRWB5 + ZIPQRWA5
ZIPQF15 = is_positive(sum([TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQF1M / TETONEQUOM1) + 1 - is_positive(sum([TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - sum([ZIPQFV5, ZIPQFC5])
ZIPQF25 = is_positive(sum([TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQF2M / TETONEQUOM1) + 1 - is_positive(sum([TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - sum([ZIPQF15, ZIPQFV5, ZIPQFC5])
ZIPQF35 = is_positive(TEGLF4M + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQF3M / TETONEQUOM1) + 1 - is_positive(TEGLF4M + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - sum([ZIPQF15, ZIPQF25, ZIPQFV5, ZIPQFC5])
ZIPQF45 = is_positive(TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQF4M / TETONEQUOM1) + 1 - is_positive(TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - sum([ZIPQFV5, ZIPQFC5, ZIPQF15, ZIPQF25, ZIPQF35])
ZIPQFV5 = is_positive(sum([TEGLFCM, TEGLF1M, TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQFVM / TETONEQUOM1) + 1 - is_positive(sum([TEGLFCM, TEGLF1M, TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT
ZIPQPALIM15 = is_positive(sum([TEGLPALIM2M, TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPALIM1M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPALIM2M, TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - sum([ZIPQPALIMV5, ZIPQPALIMC5])
ZIPQPALIM25 = is_positive(sum([TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPALIM2M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - sum([ZIPQPALIM15, ZIPQPALIMV5, ZIPQPALIMC5])
ZIPQPALIM35 = is_positive(TEGLPALIM4M + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPALIM3M / TETONEQUOM1) + 1 - is_positive(TEGLPALIM4M + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - sum([ZIPQPALIMV5, ZIPQPALIMC5, ZIPQPALIM15, ZIPQPALIM25])
ZIPQPALIM45 = is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPALIM4M / TETONEQUOM1) + 1 - is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - sum([ZIPQPALIMV5, ZIPQPALIMC5, ZIPQPALIM15, ZIPQPALIM25, ZIPQPALIM35])
ZIPQPALIMV5 = is_positive(sum([TEGLPALIMCM, TEGLPALIM1M, TEGLPALIM2M, TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPALIMVM / TETONEQUOM1) + 1 - is_positive(sum([TEGLPALIMCM, TEGLPALIM1M, TEGLPALIM2M, TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT
ZIPQRCMDC5 = is_positive(TEGLRCMFUM + TEGLRCMCHM + TEGLRCMTSM + TEGLRCMGOM + TEGLRCMTRM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQRCMDCM / TETONEQUOM1) + 1 - is_positive(TEGLRCMFUM + TEGLRCMCHM + TEGLRCMTSM + TEGLRCMGOM + TEGLRCMTRM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT
ZIPQRCMFU5 = is_positive(TEGLRCMCHM + TEGLRCMTSM + TEGLRCMGOM + TEGLRCMTRM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQRCMFUM / TETONEQUOM1) + 1 - is_positive(TEGLRCMCHM + TEGLRCMTSM + TEGLRCMGOM + TEGLRCMTRM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCMDC5
AVPLAF12 = max(0, AUBAINE13A + AUBAINE13B + AUBAINE12 - AVPLAF13 - LIMIT12) * is_positive(saisies.get('V_DIFTEOREEL', 0))
IPQ15 = ZIPQ15 * 1
IPQ25 = ZIPQ25 * 2
IPQ35 = ZIPQ35 * 3
IPQ45 = ZIPQ45 * 4
IPQF15 = ZIPQF15 * saisies.get('COTF1', 0)
IPQF25 = ZIPQF25 * saisies.get('COTF2', 0)
IPQF35 = ZIPQF35 * saisies.get('COTF3', 0)
IPQF45 = ZIPQF45 * saisies.get('COTF4', 0)
IPQFV5 = ZIPQFV5 * saisies.get('COTFV', 0)
IPQPALIM15 = ZIPQPALIM15 * saisies.get('PENSALNBP1', 0)
IPQPALIM25 = ZIPQPALIM25 * saisies.get('PENSALNBP2', 0)
IPQPALIM35 = ZIPQPALIM35 * saisies.get('PENSALNBP3', 0)
IPQPALIM45 = ZIPQPALIM45 * saisies.get('PENSALNBP4', 0)
IPQPALIMV5 = ZIPQPALIMV5 * saisies.get('PENSALNBV', 0)
IPQRCMDC5 = ZIPQRCMDC5 * saisies.get('REVACTNB', 0)
IPQRCMFU5 = ZIPQRCMFU5 * saisies.get('REVPEANB', 0)
QUOKIREHR = TGL1 + TGL2 + TGL3 + TGL4 + sum([TGLPRRV + TGLPRRZV + TGLFV + TGLTSV + TGLTSREMPV + TGLPALIMV, TGLPRRC + TGLPRRZC + TGLFC + TGLTSC + TGLTSREMPC + TGLPALIMC, TGLPRR1 + TGLPRRZ1 + TGLF1 + TGLTS1 + TGLTSREMP1 + TGLPALIM1, TGLPRR2 + TGLPRRZ2 + TGLF2 + TGLTS2 + TGLTSREMP2 + TGLPALIM2, TGLPRR3 + TGLPRRZ3 + TGLF3 + TGLTS3 + TGLTSREMP3 + TGLPALIM3, TGLPRR4 + TGLPRRZ4 + TGLF4 + TGLTS4 + TGLTSREMP4 + TGLPALIM4]) + TGLRF1 + TGLRF2 + TGLRCMDC + TGLRCMFU + TGLRCMCH + TGLRCMTS + TGLRCMGO + TGLRCMTR + TGLRVO + TGLRVO5 + TGLRVO6 + TGLRVO7
REVKIREHR = 1 - is_zero(saisies.get('IND_TDR', 0)) * round(max(0, 1 - is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, saisies.get('IPTEFP', 0) - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(saisies.get('IPTEFN', 0)) * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) + PVTXEFF * present(saisies.get('IPTEFN', 0)) * 1 - ART1731BIS + INDTEFF) * RI1RFRHR + is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, saisies.get('IPTEFP', 0) - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(saisies.get('IPTEFN', 0)) * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) + PVTXEFF * present(saisies.get('IPTEFN', 0)) * 1 - ART1731BIS + INDTEFF) * max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, saisies.get('IPTEFP', 0) - PVTXEFF) * 1 - ART1731BIS + is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, saisies.get('IPTEFP', 0) - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(saisies.get('IPTEFN', 0)) * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) + PVTXEFF * present(saisies.get('IPTEFN', 0)) * 1 - ART1731BIS + INDTEFF) * is_positive(TEFFN - DRBG - RNIDF + APERPV + APERPC + APERPP * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0))) + QUOKIREHR) * APERPV + APERPC + APERPP * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0))) + QUOKIREHR + max(0, TEFFREVTOTRFRHR * INDTEFF) * 1 - is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, saisies.get('IPTEFP', 0) - PVTXEFF) * 1 - ART1731BIS) * 1 - present(saisies.get('IND_TDR', 0)) + saisies.get('IND_TDR', 0) + 1 - is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, saisies.get('IPTEFP', 0) - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(saisies.get('IPTEFN', 0)) * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) + PVTXEFF * present(saisies.get('IPTEFN', 0)) * 1 - ART1731BIS + INDTEFF) * QUOKIREHR + APERPV + APERPC + APERPP * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0))) + VARREVKIRE)) * 1 - present(saisies.get('COD8YM', 0)) + saisies.get('COD8YM', 0)
TEGLPRRZ1 = GLPRRZ1 * 1 - is_positive(INDTEFF) + TGLPRRZ1 * is_positive(INDTEFF)
TEGLPRRZ2 = GLPRRZ2 * 1 - is_positive(INDTEFF) + TGLPRRZ2 * is_positive(INDTEFF)
TEGLPRRZ3 = GLPRRZ3 * 1 - is_positive(INDTEFF) + TGLPRRZ3 * is_positive(INDTEFF)
TEGLPRRZ4 = GLPRRZ4 * 1 - is_positive(INDTEFF) + TGLPRRZ4 * is_positive(INDTEFF)
TEGLPRRZTOT = TEGLPRRZV + TEGLPRRZC + TEGLPRRZ1 + TEGLPRRZ2 + TEGLPRRZ3 + TEGLPRRZ4
TEGLRCMTOT = TEGLRCMDC + TEGLRCMFU + TEGLRCMCH + TEGLRCMGO + TEGLRCMTR + TEGLRCMTS
TEGLRF1 = GLRF1 * 1 - is_positive(INDTEFF) + TGLRF1 * is_positive(INDTEFF)
TEGLRF2 = GLRF2 * 1 - is_positive(INDTEFF) + TGLRF2 * is_positive(INDTEFF)
TEGLRFTOT = TEGLRF1 + TEGLRF2
TERPQPRRZ1 = RPQPRRZ1 * 1 - is_positive(INDTEFF) + TRPQPRRZ1 * is_positive(INDTEFF)
TERPQPRRZ2 = RPQPRRZ2 * 1 - is_positive(INDTEFF) + TRPQPRRZ2 * is_positive(INDTEFF)
TERPQPRRZ3 = RPQPRRZ3 * 1 - is_positive(INDTEFF) + TRPQPRRZ3 * is_positive(INDTEFF)
TERPQPRRZ4 = RPQPRRZ4 * 1 - is_positive(INDTEFF) + TRPQPRRZ4 * is_positive(INDTEFF)
TERPQRF1 = RPQRF1 * 1 - is_positive(INDTEFF) + TRPQRF1 * is_positive(INDTEFF)
TERPQRF2 = RPQRF2 * 1 - is_positive(INDTEFF) + TRPQRF2 * is_positive(INDTEFF)
TETONEQUO1 = TONEQUO1 * 1 - is_positive(INDTEFF) + TONEQUO1T * is_positive(INDTEFF)
ZIPQFC5 = is_positive(sum([TEGLF1M, TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQFCM / TETONEQUOM1) + 1 - is_positive(sum([TEGLFCM, TEGLF1M, TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQFV5
ZIPQPALIMC5 = is_positive(sum([TEGLPALIM1M, TEGLPALIM2M, TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPALIMCM / TETONEQUOM1) + 1 - is_positive(sum([TEGLPALIM1M, TEGLPALIM2M, TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIMV5
ZIPQRCMCH5 = is_positive(TEGLRCMTSM + TEGLRCMGOM + TEGLRCMTRM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQRCMCHM / TETONEQUOM1) + 1 - is_positive(TEGLRCMTSM + TEGLRCMGOM + TEGLRCMTRM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCMDC5 - ZIPQRCMFU5
ZIPQRCMTR5 = is_positive(TEGLRCMGOM + TEGLRCMTSM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQRCMTRM / TETONEQUOM1) + 1 - is_positive(TEGLRCMGOM + TEGLRCMTSM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCMDC5 - ZIPQRCMFU5 - ZIPQRCMCH5
AVPLAF11 = max(0, AUBAINE13A + AUBAINE13B + AUBAINE12 + AUBAINE11 - AVPLAF13 - AVPLAF12 - LIMIT11) * is_positive(saisies.get('V_DIFTEOREEL', 0))
BHAUTREV = max(0, REVKIREHR - LIMHR1 * 1 + BOOL_0AM)
CHRREEL1 = positif_ou_nul(LIMHRTX1 * 1 + BOOL_0AM - REVKIREHR) * REVKIREHR - LIMHR1 * 1 + BOOL_0AM * TXHR1 / 100 + LIMHR1 * 1 + BOOL_0AM * TXHR1 / 100 * is_positive(REVKIREHR - LIMHRTX1 * 1 + BOOL_0AM)
CHRREEL2 = max(0, REVKIREHR - LIMHR2 * 1 + BOOL_0AM * TXHR2 / 100)
CHRREELTOT = round(max(0, CHRREEL1 + CHRREEL2))
HRBASEFRAC = round(REVKIREHR - HRMOYBTRFR / 2)
HRBASELISSE = HRBASEFRAC + HRMOYBTRFR
HRLIM15 = positif_ou_nul(REVKIREHR - 1.5 * HRMOYBTRFR)
IPQFC5 = ZIPQFC5 * saisies.get('COTFC', 0)
IPQPALIMC5 = ZIPQPALIMC5 * saisies.get('PENSALNBC', 0)
IPQRCMCH5 = ZIPQRCMCH5 * saisies.get('PROVIENB', 0)
IPQRCMTR5 = ZIPQRCMTR5 * saisies.get('INTERENB', 0)
LIGHAUTNET = is_positive(BHAUTREV * INDREV1A8IR + HAUTREVANTAF) * 1 - is_positive(saisies.get('ANNUL2042', 0) + 0) * LIG1
LIG_IRNET = is_positive(LIGTAXANET + LIGPCAPNET + LIGLOYNET + LIGHAUTNET) * 1 - is_positive(saisies.get('ANNUL2042', 0) + 0)
QUOKIRE = TEGL1 + TEGL2 + TEGL3 + RPQ4 + sum([TERPQPRRV + TERPQPRRZV + TEGLFV + TERPQTSV + TERPQTSREMPV + TERPQPALIMV, TERPQPRRC + TERPQPRRZC + TEGLFC + TERPQTSC + TERPQTSREMPC + TERPQPALIMC, TERPQPRR1 + TERPQPRRZ1 + TEGLF1 + TERPQTS1 + TERPQTSREMP1 + TERPQPALIM1, TERPQPRR2 + TERPQPRRZ2 + TEGLF2 + TERPQTS2 + TERPQTSREMP2 + TERPQPALIM2, TERPQPRR3 + TERPQPRRZ3 + TEGLF3 + TERPQTS3 + TERPQTSREMP3 + TERPQPALIM3, TERPQPRR4 + TERPQPRRZ4 + TEGLF4 + TERPQTS4 + TERPQTSREMP4 + TERPQPALIM4]) + TERPQRF1 + TEGLRF2 + TERPQRCMDC + TERPQRCMFU + TERPQRCMCH + TERPQRCMTS + TERPQRCMGO + TERPQRCMTR + TERPQRVO + TERPQRVO5 + TERPQRVO6 + TERPQRVO7
RB51 = max(0, RB01 + TETONEQUO1)
RB52 = max(0, RB02 + TETONEQUO1)
REVKIRE = 1 - is_zero(saisies.get('IND_TDR', 0)) * round(max(0, 1 - is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, saisies.get('IPTEFP', 0) - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(saisies.get('IPTEFN', 0)) * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) + PVTXEFF * present(saisies.get('IPTEFN', 0)) * 1 - ART1731BIS + INDTEFF) * RI1RFR + is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, saisies.get('IPTEFP', 0) - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(saisies.get('IPTEFN', 0)) * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) + PVTXEFF * present(saisies.get('IPTEFN', 0)) * 1 - ART1731BIS + INDTEFF) * max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, saisies.get('IPTEFP', 0) - PVTXEFF) * 1 - ART1731BIS + is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, saisies.get('IPTEFP', 0) - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(saisies.get('IPTEFN', 0)) * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) + PVTXEFF * present(saisies.get('IPTEFN', 0)) * 1 - ART1731BIS + INDTEFF) * is_positive(TEFFN - DRBG - RNIDF + APERPV + APERPC + APERPP * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0))) + QUOKIRE) * APERPV + APERPC + APERPP * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0))) + QUOKIRE + max(0, TEFFREVTOTRFR * INDTEFF) * 1 - is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, saisies.get('IPTEFP', 0) - PVTXEFF) * 1 - ART1731BIS) * 1 - present(saisies.get('IND_TDR', 0)) + saisies.get('IND_TDR', 0) + 1 - is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, saisies.get('IPTEFP', 0) - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(saisies.get('IPTEFN', 0)) * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) + PVTXEFF * present(saisies.get('IPTEFN', 0)) * 1 - ART1731BIS + INDTEFF) * QUOKIRE + APERPV + APERPC + APERPP * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0))) + VARREVKIRE))
ZIPQRCMGO5 = is_positive(TEGLRCMTSM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQRCMGOM / TETONEQUOM1) + 1 - is_positive(TEGLRCMTSM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCMDC5 - ZIPQRCMFU5 - ZIPQRCMCH5 - ZIPQRCMTR5
ZIPQRCMTS5 = is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQRCMTSM / TETONEQUOM1) + 1 - is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCMDC5 - ZIPQRCMFU5 - ZIPQRCMCH5 - ZIPQRCMTR5 - ZIPQRCMGO5
AVPLAF10 = max(0, AUBAINE13A + AUBAINE13B + AUBAINE12 + AUBAINE11 + AUBAINE10 - AVPLAF13 - AVPLAF12 - AVPLAF11 - LIMIT10) * is_positive(saisies.get('V_DIFTEOREEL', 0))
AVPLAF9 = max(0, AUBAINE13A + AUBAINE13B + AUBAINE12 + AUBAINE11 + AUBAINE10 + AUBAINE9 - AVPLAF13 - AVPLAF12 - AVPLAF11 - AVPLAF10 - LIMIT9) * is_positive(saisies.get('V_DIFTEOREEL', 0))
CHRTHEO11 = round(positif_ou_nul(LIMHRTX1 * 1 + BOOL_0AM - HRBASELISSE) * HRBASELISSE - LIMHR1 * 1 + BOOL_0AM * TXHR1 / 100 + LIMHR1 * 1 + BOOL_0AM * TXHR1 / 100 * is_positive(HRBASELISSE - LIMHRTX1 * 1 + BOOL_0AM))
CHRTHEO21 = round(max(0, HRBASELISSE - LIMHR2 * 1 + BOOL_0AM * TXHR2 / 100))
CHRTHEOTOT = round(max(0, CHRTHEO11 + CHRTHEO21) * 2)
CIIMSI = is_zero(1 - is_zero(saisies.get('IND_TDR', 0)) + is_positive(SEUILCIIMSI - REVKIRE) - 2) + 2 * 1 - is_zero(1 - is_zero(saisies.get('IND_TDR', 0)) + is_positive(SEUILCIIMSI - REVKIRE) - 2)
CIRIRF = is_zero(1 - is_zero(saisies.get('IND_TDR', 0)) + positif_ou_nul(SEUILCIRIRF - REVKIRE) - 2) + 2 * 1 - is_zero(1 - is_zero(saisies.get('IND_TDR', 0)) + positif_ou_nul(SEUILCIRIRF - REVKIRE) - 2)
CKIREDUR = round(REVKIRE * 360 / CDEVDUR_NBJ)
HRCONDTHEO = is_positive(is_zero(2 - HRNBTRFR) * is_positive(HRLIM15) * is_positive(HRLIMBTRFR1 * HRLIMBTRFR2) * 1 - is_positive(saisies.get('CASECHR', 0) + 0))
IPQRCMGO5 = ZIPQRCMGO5 * saisies.get('RESTUCNB', 0)
IPQRCMTS5 = ZIPQRCMTS5 * saisies.get('DISQUONB', 0)
LIG1950 = INDREV1A8 * positif_ou_nul(REVKIRE) * 1 - positif_ou_nul(saisies.get('IND_TDR', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0) + 0)
PPE_KIRE = REVKIRE * PPENBJAN / PPENBJ
QF511 = round(RB51) / NB1
QF512 = round(RB52) / NB1
QF521 = round(RB51) / NB2
QF522 = round(RB52) / NB2
REVKIREDUR2 = CKIREDUR
ZIPQRCM5TOT = ZIPQRCMDC5 + ZIPQRCMFU5 + ZIPQRCMCH5 + ZIPQRCMTS5 + ZIPQRCMGO5 + ZIPQRCMTR5
ZIPQRF15 = is_positive(TEGLRF2M + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM) * round(IQUOTOT5 * TERPQRF1M / TETONEQUOM1) + 1 - is_positive(TEGLRF2M + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT
ZIPQRF25 = is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM) * round(IQUOTOT5 * TERPQRF2M / TETONEQUOM1) + 1 - is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF15 - ZIPQPRRZ5TOT
ZIPQRVO5 = is_positive(TEGLRVO5M + TEGLRVO6M + TEGLRVO7M + TEGLTSTOTM + TEGLTSREMPTOTM) * round(IQUOTOT5 * TERPQRVOM / TETONEQUOM1) + 1 - is_positive(TEGLRVO5M + TEGLRVO6M + TEGLRVO7M + TEGLTSTOTM + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQPRRZ5TOT
ZIPQRVO55 = is_positive(TEGLRVO6M + TEGLRVO7M + TEGLTSTOTM + TEGLTSREMPTOTM) * round(IQUOTOT5 * TERPQRVO5M / TETONEQUOM1) + 1 - is_positive(TEGLRVO6M + TEGLRVO7M + TEGLTSTOTM + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5 - ZIPQPRRZ5TOT
ZIPQRVO65 = is_positive(TEGLRVO7M + TEGLTSTOTM + TEGLTSREMPTOTM) * round(IQUOTOT5 * TERPQRVO6M / TETONEQUOM1) + 1 - is_positive(TEGLRVO7M + TEGLTSTOTM + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5 - ZIPQRVO55 - ZIPQPRRZ5TOT
ZIPQRVO75 = is_positive(TEGLTSTOTM + TEGLTSREMPTOTM) * round(IQUOTOT5 * TERPQRVO7M / TETONEQUOM1) + 1 - is_positive(TEGLTSTOTM + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5 - ZIPQRVO55 - ZIPQRVO65 - ZIPQPRRZ5TOT
AVFISCOPTER = AVPLAF9 + AVPLAF10 + AVPLAF11 + AVPLAF12 + AVPLAF13
CHRAVANT = max(0, min(CHRREELTOT, CHRTHEOTOT)) * HRCONDTHEO + CHRREELTOT * 1 - HRCONDTHEO
CHRTEFF = round(CHRAVANT * REVKIREHR - saisies.get('TEFFHRC', 0) + saisies.get('COD8YJ', 0) / REVKIREHR)
DS511 = max(QF511 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF511 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF511 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF511 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF511 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
DS512 = max(QF512 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF512 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF512 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF512 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF512 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
DS521 = max(QF521 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF521 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF521 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF521 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF521 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
DS522 = max(QF522 - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0), 0) * TAUX1 / 100 + max(QF522 - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0), 0) * TAUX2 / 100 + max(QF522 - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0), 0) * TAUX3 / 100 + max(QF522 - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0), 0) * TAUX4 / 100 + max(QF522 - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0), 0) * TAUX5 / 100
IPQRF15 = ZIPQRF15 * saisies.get('FONCINB', 0)
IPQRF25 = ZIPQRF25 * saisies.get('REAMORNB', 0)
IPQRVO5 = ZIPQRVO5 * saisies.get('RENTAXNB', 0)
IPQRVO55 = ZIPQRVO55 * saisies.get('RENTAXNB5', 0)
IPQRVO65 = ZIPQRVO65 * saisies.get('RENTAXNB6', 0)
IPQRVO75 = ZIPQRVO75 * saisies.get('RENTAXNB7', 0)
IS511 = round(DS511 * NB1)
IS512 = round(DS512 * NB1)
IS521 = round(DS521 * NB2)
IS522 = round(DS522 * NB2)
LIGAVFISC = is_positive(AVFISCOPTER) * LIG1 * LIG2
LIGHRTEFF = is_positive(CHRTEFF) * is_positive(saisies.get('TEFFHRC', 0) + saisies.get('COD8YJ', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1
LIGIHAUT = is_positive(CHRAVANT) * 1 - is_positive(saisies.get('TEFFHRC', 0) + saisies.get('COD8YJ', 0)) * 1 - is_positive(saisies.get('ANNUL2042', 0)) * LIG1
PPE_BOOL_KIR_COND = 1 - is_zero(saisies.get('IND_TDR', 0)) * positif_ou_nul(PPESEUILKIR - PPE_KIRE)
PPE_FORMULE1 = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN1 * PPE_BOOL_MAX1 * round(positif_ou_nul(PPELIMSMIC - PPE_RCONTP1) * round(PPE_RCONTP1 * PPETX1 / 100) / PPE_COEFF1 + is_positive(PPE_RCONTP1 - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTP1) * round(round(PPELIMRPH - PPE_RCONTP1 * PPETX2 / 100) / PPE_COEFF1) + is_positive(PPE_RCONTP1 - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTP1) * round(round(PPELIMRPH2 - PPE_RCONTP1 * PPETX3 / 100) / PPE_COEFF1))
PPE_FORMULE2 = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN2 * PPE_BOOL_MAX2 * round(positif_ou_nul(PPELIMSMIC - PPE_RCONTP2) * round(PPE_RCONTP2 * PPETX1 / 100) / PPE_COEFF2 + is_positive(PPE_RCONTP2 - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTP2) * round(round(PPELIMRPH - PPE_RCONTP2 * PPETX2 / 100) / PPE_COEFF2) + is_positive(PPE_RCONTP2 - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTP2) * round(round(PPELIMRPH2 - PPE_RCONTP2 * PPETX3 / 100) / PPE_COEFF2))
PPE_FORMULE3 = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN3 * PPE_BOOL_MAX3 * round(positif_ou_nul(PPELIMSMIC - PPE_RCONTP3) * round(PPE_RCONTP3 * PPETX1 / 100) / PPE_COEFF3 + is_positive(PPE_RCONTP3 - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTP3) * round(round(PPELIMRPH - PPE_RCONTP3 * PPETX2 / 100) / PPE_COEFF3) + is_positive(PPE_RCONTP3 - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTP3) * round(round(PPELIMRPH2 - PPE_RCONTP3 * PPETX3 / 100) / PPE_COEFF3))
PPE_FORMULE4 = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN4 * PPE_BOOL_MAX4 * round(positif_ou_nul(PPELIMSMIC - PPE_RCONTP4) * round(PPE_RCONTP4 * PPETX1 / 100) / PPE_COEFF4 + is_positive(PPE_RCONTP4 - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTP4) * round(round(PPELIMRPH - PPE_RCONTP4 * PPETX2 / 100) / PPE_COEFF4) + is_positive(PPE_RCONTP4 - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTP4) * round(round(PPELIMRPH2 - PPE_RCONTP4 * PPETX3 / 100) / PPE_COEFF4))
PPE_FORMULEC = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINC * PPE_BOOL_MAXC * round(positif_ou_nul(PPELIMSMIC - PPE_RCONTPC) * round(PPE_RCONTPC * PPETX1 / 100) / PPE_COEFFC + is_positive(PPE_RCONTPC - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTPC) * round(round(PPELIMRPH - PPE_RCONTPC * PPETX2 / 100) / PPE_COEFFC) + is_positive(PPE_RCONTPC - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTPC) * round(round(PPELIMRPH2 - PPE_RCONTPC * PPETX3 / 100) / PPE_COEFFC))
PPE_FORMULEN = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINN * PPE_BOOL_MAXN * round(positif_ou_nul(PPELIMSMIC - PPE_RCONTPN) * round(PPE_RCONTPN * PPETX1 / 100) / PPE_COEFFN + is_positive(PPE_RCONTPN - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTPN) * round(round(PPELIMRPH - PPE_RCONTPN * PPETX2 / 100) / PPE_COEFFN) + is_positive(PPE_RCONTPN - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTPN) * round(round(PPELIMRPH2 - PPE_RCONTPN * PPETX3 / 100) / PPE_COEFFN))
PPE_FORMULEU = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINU * PPE_BOOL_MAXU * round(positif_ou_nul(PPELIMSMIC - PPE_RCONTPU) * round(PPE_RCONTPU * PPETX1 / 100) / PPE_COEFFU + is_positive(PPE_RCONTPU - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTPU) * round(round(PPELIMRPH - PPE_RCONTPU * PPETX2 / 100) / PPE_COEFFU) + is_positive(PPE_RCONTPU - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTPU) * round(round(PPELIMRPH2 - PPE_RCONTPU * PPETX3 / 100) / PPE_COEFFU))
PPE_FORMULEV = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINV * PPE_BOOL_MAXV * round(positif_ou_nul(PPELIMSMIC - PPE_RCONTPV) * round(PPE_RCONTPV * PPETX1 / 100) / PPE_COEFFV + is_positive(PPE_RCONTPV - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTPV) * round(round(PPELIMRPH - PPE_RCONTPV * PPETX2 / 100) / PPE_COEFFV) + is_positive(PPE_RCONTPV - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTPV) * round(round(PPELIMRPH2 - PPE_RCONTPV * PPETX3 / 100) / PPE_COEFFV))
ZIPQPRRV5 = is_positive(sum([TEGLPRRCM, TEGLPRR1M, TEGLPRR2M, TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPRRVM / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRRCM, TEGLPRR1M, TEGLPRR2M, TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT
ZIPQPRRZV5 = is_positive(sum([TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPRRZVM / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT
ZIPQRVO5TOT = ZIPQRVO5 + ZIPQRVO55 + ZIPQRVO65 + ZIPQRVO75
ZIPQTSREMPV5 = is_positive(sum([TEGLTSREMPCM, TEGLTSREMP1M, TEGLTSREMP2M, TEGLTSREMP3M, TEGLTSREMP4M])) * round(IQUOTOT5 * TERPQTSREMPVM / TETONEQUOM1) + 1 - is_positive(sum([TEGLTSREMPCM, TEGLTSREMP1M, TEGLTSREMP2M, TEGLTSREMP3M, TEGLTSREMP4M])) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQTS5TOT
ZIPQTSV5 = is_positive(sum([TEGLTSCM, TEGLTS1M, TEGLTS2M, TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * round(IQUOTOT5 * TERPQTSVM / TETONEQUOM1) + 1 - is_positive(sum([TEGLTSCM, TEGLTS1M, TEGLTS2M, TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQPRRZ5TOT
CHRAPRES = CHRAVANT * 1 - is_positive(is_positive(saisies.get('IPMOND', 0)) + is_positive(INDTEFF)) + CHRTEFF * is_positive(is_positive(saisies.get('IPMOND', 0)) + is_positive(INDTEFF))
IN51 = max(IS511, IS521 - PLA)
IN52 = max(IS512, IS522 - PLA)
INANT51 = max(IS511, IS521 - PLANT)
INANT52 = max(IS512, IS522 - PLANT)
IPQ1005 = IPQRWB5 + IPQRWA5 + IPQRVG5 + sum([IPQ15, IPQ25, IPQ35, IPQ45]) + sum([IPQFV5, IPQFC5, IPQF15, IPQF25, IPQF35, IPQF45]) + sum([IPQPALIMV5, IPQPALIMC5, IPQPALIM15, IPQPALIM25, IPQPALIM35, IPQPALIM45]) + sum([IPQTSV5, IPQTSC5, IPQTS15, IPQTS25, IPQTS35, IPQTS45]) + sum([IPQTSREMPV5, IPQTSREMPC5, IPQTSREMP15, IPQTSREMP25, IPQTSREMP35, IPQTSREMP45]) + IPQRF15 + IPQRF25 + sum([IPQPRRV5 + IPQPRRZV5, IPQPRRC5 + IPQPRRZC5, IPQPRR15 + IPQPRRZ15, IPQPRR25 + IPQPRRZ25, IPQPRR35 + IPQPRRZ35, IPQPRR45 + IPQPRRZ45]) + IPQRCMDC5 + IPQRCMFU5 + IPQRCMCH5 + IPQRCMTS5 + IPQRCMGO5 + IPQRCMTR5 + IPQRVO5 + IPQRVO55 + IPQRVO65 + IPQRVO75
IPQ5 = IPQ05 + IPQ1005
IPQPRRV5 = ZIPQPRRV5 * saisies.get('CARPENBAV', 0)
IPQPRRZV5 = ZIPQPRRZV5 * saisies.get('CODNAZ', 0)
IPQTSREMPV5 = ZIPQTSREMPV5 * saisies.get('REMPLANBV', 0)
IPQTSV5 = ZIPQTSV5 * saisies.get('CARTSNBAV', 0)
IQUOTOT1 = IN51 - IN01
IQUOTOT2 = IN52 - IN02
IQUOTOTANT1 = INANT51 - INANT01
PPEMAJORETTE = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * round(PPE_MONO + PPE_MAJO + PPE_MABT) * 1 - V_CNR
PPENARPRIME1 = PPE_FORMULE1 * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCOND1 - 2) * 1 - PPE_BOOL_TP1 + round(PPE_FORMULE1 * PPETXMAJ1) + round(PPE_FORMULE1 * PPE_COEFF1 * PPETXMAJ2) * is_positive(2 - PPE_COEFFCOND1) * is_positive(PPE_COEFFCOND1 - 1) * 1 - PPE_BOOL_TP1 + PPE_FORMULE1 * is_positive(PPE_BOOL_TP1 + positif_ou_nul(1 - PPE_COEFFCOND1))
PPENARPRIME2 = PPE_FORMULE2 * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCOND2 - 2) * 1 - PPE_BOOL_TP2 + round(PPE_FORMULE2 * PPETXMAJ1) + round(PPE_FORMULE2 * PPE_COEFF2 * PPETXMAJ2) * is_positive(2 - PPE_COEFFCOND2) * is_positive(PPE_COEFFCOND2 - 1) * 1 - PPE_BOOL_TP2 + PPE_FORMULE2 * is_positive(PPE_BOOL_TP2 + positif_ou_nul(1 - PPE_COEFFCOND2))
PPENARPRIME3 = PPE_FORMULE3 * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCOND3 - 2) * 1 - PPE_BOOL_TP3 + round(PPE_FORMULE3 * PPETXMAJ1) + round(PPE_FORMULE3 * PPE_COEFF3 * PPETXMAJ2) * is_positive(2 - PPE_COEFFCOND3) * is_positive(PPE_COEFFCOND3 - 1) * 1 - PPE_BOOL_TP3 + PPE_FORMULE3 * is_positive(PPE_BOOL_TP3 + positif_ou_nul(1 - PPE_COEFFCOND3))
PPENARPRIME4 = PPE_FORMULE4 * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCOND4 - 2) * 1 - PPE_BOOL_TP4 + round(PPE_FORMULE4 * PPETXMAJ1) + round(PPE_FORMULE4 * PPE_COEFF4 * PPETXMAJ2) * is_positive(2 - PPE_COEFFCOND4) * is_positive(PPE_COEFFCOND4 - 1) * 1 - PPE_BOOL_TP4 + PPE_FORMULE4 * is_positive(PPE_BOOL_TP4 + positif_ou_nul(1 - PPE_COEFFCOND4))
PPENARPRIMEC = PPE_FORMULEC * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCONDC - 2) * 1 - PPE_BOOL_TPC + round(PPE_FORMULEC * PPETXMAJ1) + round(PPE_FORMULEC * PPE_COEFFC * PPETXMAJ2) * is_positive(2 - PPE_COEFFCONDC) * is_positive(PPE_COEFFCONDC - 1) * 1 - PPE_BOOL_TPC + PPE_FORMULEC * is_positive(PPE_BOOL_TPC + positif_ou_nul(1 - PPE_COEFFCONDC))
PPENARPRIMEN = PPE_FORMULEN * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCONDN - 2) * 1 - PPE_BOOL_TPN + round(PPE_FORMULEN * PPETXMAJ1) + round(PPE_FORMULEN * PPE_COEFFN * PPETXMAJ2) * is_positive(2 - PPE_COEFFCONDN) * is_positive(PPE_COEFFCONDN - 1) * 1 - PPE_BOOL_TPN + PPE_FORMULEN * is_positive(PPE_BOOL_TPN + positif_ou_nul(1 - PPE_COEFFCONDN))
PPENARPRIMEU = PPE_FORMULEU * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCONDU - 2) * 1 - PPE_BOOL_TPU + round(PPE_FORMULEU * PPETXMAJ1) + round(PPE_FORMULEU * PPE_COEFFU * PPETXMAJ2) * is_positive(2 - PPE_COEFFCONDU) * is_positive(PPE_COEFFCONDU - 1) * 1 - PPE_BOOL_TPU + PPE_FORMULEU * is_positive(PPE_BOOL_TPU + positif_ou_nul(1 - PPE_COEFFCONDU))
PPENARPRIMEV = PPE_FORMULEV * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCONDV - 2) * 1 - PPE_BOOL_TPV + round(PPE_FORMULEV * PPETXMAJ1) + round(PPE_FORMULEV * PPE_COEFFV * PPETXMAJ2) * is_positive(2 - PPE_COEFFCONDV) * is_positive(PPE_COEFFCONDV - 1) * 1 - PPE_BOOL_TPV + PPE_FORMULEV * is_positive(PPE_BOOL_TPV + positif_ou_nul(1 - PPE_COEFFCONDV))
PPEPRIME1 = round(PPENARPRIME1)
PPEPRIME2 = round(PPENARPRIME2)
PPEPRIME3 = round(PPENARPRIME3)
PPEPRIME4 = round(PPENARPRIME4)
PPEPRIMEC = round(PPENARPRIMEC)
PPEPRIMEN = round(PPENARPRIMEN)
PPEPRIMETTEC = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_PRIMETTE * BOOL_0AM * INDMONO * positif_ou_nul(PPELIMRPHI - PPE_RCONTPC) * positif_ou_nul(PPE_RTAC - PPELIMRPB) * 1 - is_positive(PPE_BOOL_NADAC) * 1 - V_CNR
PPEPRIMETTEV = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_PRIMETTE * BOOL_0AM * INDMONO * positif_ou_nul(PPE_RTAV - PPELIMRPB) * positif_ou_nul(PPELIMRPHI - PPE_RCONTPV) * 1 - is_positive(PPE_BOOL_NADAV) * 1 - V_CNR
PPEPRIMEU = round(PPENARPRIMEU)
PPEPRIMEV = round(PPENARPRIMEV)
PPEPRIMEVT = PPEPRIMEV + PPEPRIMETTEV * 1 - V_CNR
TMOY = inf(IPQ5 / max(0, RB05 + TONEQUOM) * 10000) / 100 * V_CR2
ZIPQANTRWB = is_positive(TEGLRWA + TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQRWB / TETONEQUO1) + 1 - is_positive(TEGLRWA + TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1
ZIPQPRRC5 = is_positive(sum([TEGLPRR1M, TEGLPRR2M, TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPRRCM / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRR1M, TEGLPRR2M, TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRRV5
ZIPQPRRZC5 = is_positive(sum([TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPRRZCM / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZV5
ZIPQRWB1 = is_positive(TEGLRWA + TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQRWB / TETONEQUO1) + 1 - is_positive(TEGLRWA + TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1
ZIPQRWB2 = is_positive(TEGLRWA + TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQRWB / TETONEQUO1) + 1 - is_positive(TEGLRWA + TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2
ZIPQTSC5 = is_positive(sum([TEGLTS1M, TEGLTS2M, TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * round(IQUOTOT5 * TERPQTSCM / TETONEQUOM1) + 1 - is_positive(sum([TEGLTS1M, TEGLTS2M, TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQPRRZ5TOT - ZIPQTSV5
ZIPQTSREMPC5 = is_positive(sum([TEGLTSREMP1M, TEGLTSREMP2M, TEGLTSREMP3M, TEGLTSREMP4M])) * round(IQUOTOT5 * TERPQTSREMPCM / TETONEQUOM1) + 1 - is_positive(sum([TEGLTSREMP1M, TEGLTSREMP2M, TEGLTSREMP3M, TEGLTSREMP4M])) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQTS5TOT - ZIPQTSREMPV5
BCICHR = round(CHRAPRES * saisies.get('REGCI', 0) * 1 - present(saisies.get('COD8XY', 0)) + saisies.get('COD8XY', 0) + 0 / REVKIREHR - saisies.get('TEFFHRC', 0) + saisies.get('COD8YJ', 0))
IMO = round(BMI * TMOY / 100 + round(saisies.get('PRODOM', 0) + saisies.get('PROGUY', 0)) * TX_MIN_DOM / 100) * V_CR2
INDTXMOY = is_positive(TX_MIN_MET - TMOY) * is_positive(present(saisies.get('RMOND', 0)) + present(saisies.get('DMOND', 0))) * V_CR2
IPQANTRWB = ZIPQANTRWB * saisies.get('CODNWB', 0)
IPQPRRC5 = ZIPQPRRC5 * saisies.get('CARPENBAC', 0)
IPQPRRZC5 = ZIPQPRRZC5 * saisies.get('CODNBZ', 0)
IPQRWB1 = ZIPQRWB1 * saisies.get('CODNWB', 0)
IPQRWB2 = ZIPQRWB2 * saisies.get('CODNWB', 0)
IPQTSC5 = ZIPQTSC5 * saisies.get('CARTSNBAC', 0)
IPQTSREMPC5 = ZIPQTSREMPC5 * saisies.get('REMPLANBC', 0)
LIG1550 = 1 - present(saisies.get('IND_TDR', 0)) * INDTXMOY * LIG2
LIG1760 = 1 - present(saisies.get('IND_TDR', 0)) * INDTXMOY * LIG2
PPEPRIMECT = PPEPRIMEC + PPEPRIMETTEC * 1 - V_CNR
PPEPRIMEPAC = PPEPRIMEU + PPEPRIME1 + PPEPRIME2 + PPEPRIME3 + PPEPRIME4 + PPEPRIMEN
PPEPRIMETTE = PPEPRIMETTEV + PPEPRIMETTEC
PPETOT = is_positive(sum([PPENARPRIME1, PPENARPRIME2, PPENARPRIME3, PPENARPRIME4, PPENARPRIMEV, PPENARPRIMEC, PPENARPRIMEU, PPENARPRIMEN]) + PPEPRIMETTE + PPEMAJORETTE + 0 + sum([1 - is_positive(PPELIMRPH - PPE_RCONTP1 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN1 * PPE_BOOL_MAX1, 1 - is_positive(PPELIMRPH - PPE_RCONTP2 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN2 * PPE_BOOL_MAX2, 1 - is_positive(PPELIMRPH - PPE_RCONTP3 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN3 * PPE_BOOL_MAX3, 1 - is_positive(PPELIMRPH - PPE_RCONTP4 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN4 * PPE_BOOL_MAX4, 1 - is_positive(PPELIMRPH - PPE_RCONTPV - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINV * PPE_BOOL_MAXV, 1 - is_positive(PPELIMRPH - PPE_RCONTPC - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINC * PPE_BOOL_MAXC, 1 - is_positive(PPELIMRPH - PPE_RCONTPU - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINU * PPE_BOOL_MAXU, 1 - is_positive(PPELIMRPH - PPE_RCONTPN - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINN * PPE_BOOL_MAXN]) + sum([1 - is_positive(PPELIMRPH2 - PPE_RCONTP1 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN1 * PPE_BOOL_MAX1, 1 - is_positive(PPELIMRPH2 - PPE_RCONTP2 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN2 * PPE_BOOL_MAX2, 1 - is_positive(PPELIMRPH2 - PPE_RCONTP3 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN3 * PPE_BOOL_MAX3, 1 - is_positive(PPELIMRPH2 - PPE_RCONTP4 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN4 * PPE_BOOL_MAX4, 1 - is_positive(PPELIMRPH2 - PPE_RCONTPV - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINV * PPE_BOOL_MAXV, 1 - is_positive(PPELIMRPH2 - PPE_RCONTPC - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINC * PPE_BOOL_MAXC, 1 - is_positive(PPELIMRPH2 - PPE_RCONTPU - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINU * PPE_BOOL_MAXU, 1 - is_positive(PPELIMRPH2 - PPE_RCONTPN - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINN * PPE_BOOL_MAXN])) * max(0, round(sum([PPEPRIME1, PPEPRIME2, PPEPRIME3, PPEPRIME4, PPEPRIMEV, PPEPRIMEC, PPEPRIMEU, PPEPRIMEN]) + PPEPRIMETTE + PPEMAJORETTE)) * positif_ou_nul(round(sum([PPEPRIME1, PPEPRIME2, PPEPRIME3, PPEPRIME4, PPEPRIMEV, PPEPRIMEC, PPEPRIMEU, PPEPRIMEN]) + PPEPRIMETTE + PPEMAJORETTE - PPELIMTOT)) * 1 - is_positive(saisies.get('V_PPEISF', 0) + saisies.get('PPEISFPIR', 0) + saisies.get('PPEREVPRO', 0)) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * 1 - is_zero(7 - PPENEXOV) * 1 - is_zero(11 - PPENEXOV) * 1 - is_zero(7 - PPENEXOC) * 1 - is_zero(11 - PPENEXOC) * 1 - is_zero(7 - PPENEXO1) * 1 - is_zero(11 - PPENEXO1) * 1 - is_zero(7 - PPENEXO2) * 1 - is_zero(11 - PPENEXO2) * 1 - is_zero(7 - PPENEXO3) * 1 - is_zero(11 - PPENEXO3) * 1 - is_zero(7 - PPENEXO4) * 1 - is_zero(11 - PPENEXO4) * 1 - is_zero(2 - PPEPEXOV) * 1 - is_zero(2 - PPEPEXOC) * 1 - is_zero(2 - PPEPEXO1) * 1 - is_zero(2 - PPEPEXO2) * 1 - is_zero(2 - PPEPEXO3) * 1 - is_zero(2 - PPEPEXO4) * 1 - V_CNR
PPETOT2 = PPETOT
PPETOTMAY = round(PPETOT * 81 / 100) * positif_ou_nul(round(PPETOT * 81 / 100) - PPELIMTOT) * is_zero(7 - saisies.get('V_REGCO', 0))
PPETOTX = PPETOT * 1 - is_zero(7 - saisies.get('V_REGCO', 0)) + PPETOTMAY
ZIPQANTRWA = is_positive(TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQRWA / TETONEQUO1) + 1 - is_positive(TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANTRWB
ZIPQPRR15 = is_positive(sum([TEGLPRR2M, TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPRR1M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRR2M, TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRRV5 - ZIPQPRRC5
ZIPQPRR25 = is_positive(sum([TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPRR2M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRRV5 - ZIPQPRRC5 - ZIPQPRR15
ZIPQPRR35 = is_positive(TEGLPRR4M + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPRR3M / TETONEQUOM1) + 1 - is_positive(TEGLPRR4M + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRRV5 - ZIPQPRRC5 - ZIPQPRR15 - ZIPQPRR25
ZIPQPRR45 = is_positive(sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPRR4M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRRV5 - ZIPQPRRC5 - ZIPQPRR15 - ZIPQPRR25 - ZIPQPRR35
ZIPQPRRZ15 = is_positive(sum([TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPRRZ1M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZV5 - ZIPQPRRZC5
ZIPQPRRZ25 = is_positive(sum([TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPRRZ2M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZV5 - ZIPQPRRZC5 - ZIPQPRRZ15
ZIPQPRRZ35 = is_positive(TEGLPRRZ4M + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPRRZ3M / TETONEQUOM1) + 1 - is_positive(TEGLPRRZ4M + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZV5 - ZIPQPRRZC5 - ZIPQPRRZ15 - ZIPQPRRZ25
ZIPQPRRZ45 = is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * round(IQUOTOT5 * TERPQPRRZ4M / TETONEQUOM1) + 1 - is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZV5 - ZIPQPRRZC5 - ZIPQPRRZ15 - ZIPQPRRZ25 - ZIPQPRRZ35
ZIPQRWA1 = is_positive(TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQRWA / TETONEQUO1) + 1 - is_positive(TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQRWB1
ZIPQRWA2 = is_positive(TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQRWA / TETONEQUO1) + 1 - is_positive(TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQRWB2
ZIPQTS15 = is_positive(sum([TEGLTS2M, TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * round(IQUOTOT5 * TERPQTS1M / TETONEQUOM1) + 1 - is_positive(sum([TEGLTS2M, TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQPRRZ5TOT - ZIPQTSV5 - ZIPQTSC5
ZIPQTS25 = is_positive(sum([TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * round(IQUOTOT5 * TERPQTS2M / TETONEQUOM1) + 1 - is_positive(sum([TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQPRRZ5TOT - ZIPQTSV5 - ZIPQTSC5 - ZIPQTS15
ZIPQTS35 = is_positive(TEGLTS4M + TEGLTSREMPTOTM) * round(IQUOTOT5 * TERPQTS3M / TETONEQUOM1) + 1 - is_positive(TEGLTS4M + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQPRRZ5TOT - ZIPQTSV5 - ZIPQTSC5 - ZIPQTS15 - ZIPQTS25
ZIPQTS45 = is_positive(TEGLTSREMPTOTM) * round(IQUOTOT5 * TERPQTS4M / TETONEQUOM1) + 1 - is_positive(TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQPRRZ5TOT - ZIPQTSV5 - ZIPQTSC5 - ZIPQTS15 - ZIPQTS25 - ZIPQTS35
ZIPQTSREMP15 = is_positive(sum([TEGLTSREMP2M, TEGLTSREMP3M, TEGLTSREMP4M])) * round(IQUOTOT5 * TERPQTSREMP1M / TETONEQUOM1) + 1 - is_positive(sum([TEGLTSREMP2M, TEGLTSREMP3M, TEGLTSREMP4M])) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQTS5TOT - ZIPQTSREMPV5 - ZIPQTSREMPC5
ZIPQTSREMP25 = is_positive(sum([TEGLTSREMP3M, TEGLTSREMP4M])) * round(IQUOTOT5 * TERPQTSREMP2M / TETONEQUOM1) + 1 - is_positive(sum([TEGLTSREMP3M, TEGLTSREMP4M])) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQTS5TOT - ZIPQTSREMPV5 - ZIPQTSREMPC5 - ZIPQTSREMP15
ZIPQTSREMP35 = is_positive(TEGLTSREMP4M) * round(IQUOTOT5 * TERPQTSREMP3M / TETONEQUOM1) + 1 - is_positive(TEGLTSREMP4M) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQTS5TOT - ZIPQTSREMPV5 - ZIPQTSREMPC5 - ZIPQTSREMP15 - ZIPQTSREMP25
ZIPQTSREMP45 = IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQTS5TOT - ZIPQTSREMPV5 - ZIPQTSREMPC5 - ZIPQTSREMP15 - ZIPQTSREMP25 - ZIPQTSREMP35
IDOM14 = max(ID14 - ADO4 * 1 - is_positive(INDCODDAJ) + ITOTDOM4 * is_positive(INDCODDAJ), IMI) * 1 - INDTXMOY + IMO * INDTXMOY
IDOM16 = max(ID16 - ADO6 * 1 - is_positive(INDCODDAJ) + ITOTDOM6 * is_positive(INDCODDAJ), IMI) * 1 - INDTXMOY + IMO * INDTXMOY
IPQANTRWA = ZIPQANTRWA * saisies.get('CODNWA', 0)
IPQPRR15 = ZIPQPRRZ15 * saisies.get('CARPENBAP1', 0)
IPQPRR25 = ZIPQPRRZ25 * saisies.get('CARPENBAP2', 0)
IPQPRR35 = ZIPQPRRZ35 * saisies.get('CARPENBAP3', 0)
IPQPRR45 = ZIPQPRRZ45 * saisies.get('CARPENBAP4', 0)
IPQPRRZ15 = ZIPQPRRZ15 * saisies.get('CODNCZ', 0)
IPQPRRZ25 = ZIPQPRRZ25 * saisies.get('CODNDZ', 0)
IPQPRRZ35 = ZIPQPRRZ35 * saisies.get('CODNEZ', 0)
IPQPRRZ45 = ZIPQPRRZ45 * saisies.get('CODNFZ', 0)
IPQRWA1 = ZIPQRWA1 * saisies.get('CODNWA', 0)
IPQRWA2 = ZIPQRWA2 * saisies.get('CODNWA', 0)
IPQTS15 = ZIPQTS15 * saisies.get('CARTSNBAP1', 0)
IPQTS25 = ZIPQTS25 * saisies.get('CARTSNBAP2', 0)
IPQTS35 = ZIPQTS35 * saisies.get('CARTSNBAP3', 0)
IPQTS45 = ZIPQTS45 * saisies.get('CARTSNBAP4', 0)
IPQTSREMP15 = ZIPQTSREMP15 * saisies.get('REMPLANBP1', 0)
IPQTSREMP25 = ZIPQTSREMP25 * saisies.get('REMPLANBP2', 0)
IPQTSREMP35 = ZIPQTSREMP35 * saisies.get('REMPLANBP3', 0)
IPQTSREMP45 = ZIPQTSREMP45 * saisies.get('REMPLANBP4', 0)
LIGPIPPE = is_positive(PPETOTX) * LIG0
LIGPPEMAY = is_positive(PPETOTMAY) * is_zero(7 - saisies.get('V_REGCO', 0))
LIGPPETOT = is_positive(PPETOT) * 1 - is_zero(7 - saisies.get('V_REGCO', 0))
LIGRSA = is_positive(PPERSATOT) * is_positive(PPETOTX) * LIG1 * LIG2
PPERPROC = PPE_RPROC * is_positive(PPETOTX + is_positive(PPESALCTOT) + present(saisies.get('PPEACC', 0)) + present(saisies.get('PPENJC', 0)))
PPERPROP = PPE_RPROP * is_positive(PPETOTX + is_positive(PPESALPTOT) + present(saisies.get('PPEACP', 0)) + present(saisies.get('PPENJP', 0)))
PPERPROV = PPE_RPROV * is_positive(PPETOTX + is_positive(PPESALVTOT) + present(saisies.get('PPEACV', 0)) + present(saisies.get('PPENJV', 0)))
PPERSA = min(PPETOTX, PPERSATOT) * 1 - V_CNR
PPESAISINBJC = is_positive(saisies.get('PPENJC', 0) * is_positive(abs(PPERPROC)))
PPESAISINBJP = is_positive(saisies.get('PPENJP', 0) * is_positive(abs(PPERPROP)))
PPESAISINBJV = is_positive(saisies.get('PPENJV', 0) * is_positive(abs(PPERPROV)))
PPESAISITPC = is_positive(saisies.get('PPEACC', 0) * is_positive(abs(PPERPROC)))
PPESAISITPP = is_positive(saisies.get('PPEACP', 0) * is_positive(abs(PPERPROP)))
PPESAISITPV = is_positive(saisies.get('PPEACV', 0) * is_positive(abs(PPERPROV)))
ZIPQANTRVG = is_positive(sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQRVG / TETONEQUO1) + 1 - is_positive(sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANTRWB - ZIPQANTRWA
ZIPQRVG1 = is_positive(sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQRVG / TETONEQUO1) + 1 - is_positive(sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQRWB1 - ZIPQRWA1
ZIPQRVG2 = is_positive(sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQRVG / TETONEQUO1) + 1 - is_positive(sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQRWB2 - ZIPQRWA2
AGREPPE = max(0, PPETOTX - PPERSA)
DEC6 = min(max(round(SEUIL_DECOTE1 * 1 - BOOL_0AM + SEUIL_DECOTE2 * BOOL_0AM - IDOM16), 0), IDOM16) * 1 - saisies.get('V_ANC_BAR', 0) + min(max(round(SEUIL_DECOTEA / 2 - IDOM16 / 2), 0), IDOM16) * saisies.get('V_ANC_BAR', 0) * 1 - V_CNR
INDPPEC = is_positive(saisies.get('PPETPC', 0) * PPESALCTOT + PPENBHC * PPESALCTOT + is_positive(present(saisies.get('BPCOSAC', 0)) + present(saisies.get('GLDGRATV', 0)) + present(saisies.get('GLD1C', 0)) + present(saisies.get('GLD2C', 0)) + present(saisies.get('GLD3C', 0)) + present(saisies.get('TSASSUC', 0)) + present(saisies.get('CARTSC', 0)) * present(saisies.get('CARTSNBAC', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0))) * PPEPRIMECT + saisies.get('PPEACC', 0) + saisies.get('PPENJC', 0) * abs(PPERPROC) * is_zero(saisies.get('TSHALLOC', 0) + 0) + is_positive(saisies.get('PPETPC', 0) + PPENBHC + 0) + abs(PPERPROC) * PPEPRIMECT)
INDPPEP = is_positive(sum([saisies.get('PPETPP1', 0), saisies.get('PPETPP2', 0), saisies.get('PPETPP3', 0), saisies.get('PPETPP4', 0)]) * PPESALPTOT + sum([PPENBH1, PPENBH2, PPENBH3, PPENBH4]) * PPESALPTOT + saisies.get('PPEACP', 0) + saisies.get('PPENJP', 0) * abs(PPERPROP) * is_zero(saisies.get('TSHALLO1', 0) + saisies.get('TSHALLO2', 0) + saisies.get('TSHALLO3', 0) + saisies.get('TSHALLO4', 0) + 0) + is_positive(sum([saisies.get('PPETPP1', 0) + PPENBH1 + 0, saisies.get('PPETPP2', 0) + PPENBH2 + 0, saisies.get('PPETPP3', 0) + PPENBH3 + 0, saisies.get('PPETPP4', 0) + PPENBH4 + 0])) + sum([present(saisies.get('CARTSP1', 0)) * present(saisies.get('CARTSNBAP1', 0)), present(saisies.get('CARTSP2', 0)) * present(saisies.get('CARTSNBAP2', 0)), present(saisies.get('CARTSP3', 0)) * present(saisies.get('CARTSNBAP3', 0)), present(saisies.get('CARTSP4', 0)) * present(saisies.get('CARTSNBAP4', 0))]) * PPEPRIMEPT + abs(PPERPROP) * PPEPRIMEPT)
INDPPEV = is_positive(saisies.get('PPETPV', 0) * PPESALVTOT + PPENBHV * PPESALVTOT + is_positive(present(saisies.get('BPCOSAV', 0)) + present(saisies.get('GLDGRATV', 0)) + present(saisies.get('GLD1V', 0)) + present(saisies.get('GLD2V', 0)) + present(saisies.get('GLD3V', 0)) + present(saisies.get('TSASSUV', 0)) + present(saisies.get('CARTSV', 0)) * present(saisies.get('CARTSNBAV', 0)) + present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0))) * PPEPRIMEVT + PPEMAJORETTE * is_zero(PPEPRIMECT) + saisies.get('PPEACV', 0) + saisies.get('PPENJV', 0) * abs(PPERPROV) * is_zero(saisies.get('TSHALLOV', 0) + 0) + is_positive(saisies.get('PPETPV', 0) + PPENBHV + 0) + abs(PPERPROV) * PPEPRIMEVT + PPEMAJORETTE * is_zero(PPEPRIMECT))
IPQANTRVG = ZIPQANTRVG * saisies.get('CODNVG', 0)
IPQRVG1 = ZIPQRVG1 * saisies.get('CODNVG', 0)
IPQRVG2 = ZIPQRVG2 * saisies.get('CODNVG', 0)
IRE = 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0) + 0) * CIDIREPARGNE + EPAV + CRICH + saisies.get('CICORSENOW', 0) + CIGE + CIDEVDUR + CITEC + saisies.get('IPELUS', 0) + CICA + CIGARD + CISYND + CIPRETUD + CIADCRE + CIHABPRIN + saisies.get('CREFAM', 0) + saisies.get('CREAPP', 0) + saisies.get('CREAGRIBIO', 0) + saisies.get('CREPROSP', 0) + CRESINTER + saisies.get('CREFORMCHENT', 0) + saisies.get('CREINTERESSE', 0) + saisies.get('CREARTS', 0) + CICONGAGRI + saisies.get('CRERESTAU', 0) + CILOYIMP + saisies.get('AUTOVERSLIB', 0) + PPETOTX - PPERSA + CI2CK + CIFORET + CIEXCEDENT + saisies.get('COD8TL', 0) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
IRE2 = IRE + BCIGA * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
LIGPPEC = is_zero(INDPPEV) * is_positive(INDPPEC) * is_zero(INDPPEP) * TYPEPPE
LIGPPECP = is_zero(INDPPEV) * is_positive(INDPPEC) * is_positive(INDPPEP) * TYPEPPE
LIGPPEP = is_zero(INDPPEV) * is_zero(INDPPEC) * is_positive(INDPPEP) * TYPEPPE
LIGPPEV = is_positive(INDPPEV) * is_zero(INDPPEC) * is_zero(INDPPEP) * TYPEPPE
LIGPPEVC = is_positive(INDPPEV) * is_positive(INDPPEC) * is_zero(INDPPEP) * TYPEPPE
LIGPPEVCP = is_positive(INDPPEV) * is_positive(INDPPEC) * is_positive(INDPPEP) * TYPEPPE
LIGPPEVP = is_positive(INDPPEV) * is_zero(INDPPEC) * is_positive(INDPPEP) * TYPEPPE
PPEFINAL = PPETOTX - PPERSA
ZIPQ11 = is_positive(sum([TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQ1 / TETONEQUO1) + 1 - is_positive(sum([TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQRWB1 - ZIPQRWA1 - ZIPQRVG1
ZIPQ12 = is_positive(sum([TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQ1 / TETONEQUO1) + 1 - is_positive(sum([TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQRWB2 - ZIPQRWA2 - ZIPQRVG2
ZIPQ1TOT = sum([ZIPQ11, ZIPQ21, ZIPQ31, ZIPQ41]) + ZIPQRVG1 + ZIPQRWB1 + ZIPQRWA1
ZIPQ21 = is_positive(sum([TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQ2 / TETONEQUO1) + 1 - is_positive(sum([TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQRWB1 - ZIPQRWA1 - ZIPQRVG1 - ZIPQ11
ZIPQ22 = is_positive(sum([TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQ2 / TETONEQUO1) + 1 - is_positive(sum([TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQRWB2 - ZIPQRWA2 - ZIPQRVG2 - ZIPQ12
ZIPQ2TOT = sum([ZIPQ12, ZIPQ22, ZIPQ32, ZIPQ42]) + ZIPQRVG2 + ZIPQRWB2 + ZIPQRWA2
ZIPQ31 = is_positive(TEGL4 + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQ3 / TETONEQUO1) + 1 - is_positive(TEGL4 + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQRWB1 - ZIPQRWA1 - ZIPQRVG1 - sum([ZIPQ11, ZIPQ21])
ZIPQ32 = is_positive(TEGL4 + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQ3 / TETONEQUO1) + 1 - is_positive(TEGL4 + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQRWB2 - ZIPQRWA2 - ZIPQRVG2 - sum([ZIPQ12, ZIPQ22])
ZIPQ41 = is_positive(TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQ4 / TETONEQUO1) + 1 - is_positive(TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQRWB1 - ZIPQRWA1 - ZIPQRVG1 - sum([ZIPQ11, ZIPQ21, ZIPQ31])
ZIPQ42 = is_positive(TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQ4 / TETONEQUO1) + 1 - is_positive(TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQRWB2 - ZIPQRWA2 - ZIPQRVG2 - sum([ZIPQ12, ZIPQ22, ZIPQ32])
ZIPQANT11 = is_positive(sum([TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQ1 / TETONEQUO1) + 1 - is_positive(sum([TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANTRWB - ZIPQANTRWA - ZIPQANTRVG
ZIPQANT1TOT = sum([ZIPQANT11, ZIPQANT21, ZIPQANT31, ZIPQANT41]) + ZIPQANTRVG + ZIPQANTRWB + ZIPQANTRWA
ZIPQANT21 = is_positive(sum([TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQ2 / TETONEQUO1) + 1 - is_positive(sum([TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANTRWB - ZIPQANTRWA - ZIPQANTRVG - ZIPQANT11
ZIPQANT31 = is_positive(TEGL4 + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQ3 / TETONEQUO1) + 1 - is_positive(TEGL4 + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANTRWB - ZIPQANTRWA - ZIPQANTRVG - sum([ZIPQANT11, ZIPQANT21])
ZIPQANT41 = is_positive(TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQ4 / TETONEQUO1) + 1 - is_positive(TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANTRWB - ZIPQANTRWA - ZIPQANTRVG - sum([ZIPQANT11, ZIPQANT21, ZIPQANT31])
ZIPQF11 = is_positive(sum([TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQF1 / TETONEQUO1) + 1 - is_positive(sum([TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - sum([ZIPQFV1, ZIPQFC1])
ZIPQF12 = is_positive(sum([TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQF1 / TETONEQUO1) + 1 - is_positive(sum([TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - sum([ZIPQFV2, ZIPQFC2])
ZIPQF21 = is_positive(sum([TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQF2 / TETONEQUO1) + 1 - is_positive(sum([TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - sum([ZIPQF11, ZIPQFV1, ZIPQFC1])
ZIPQF22 = is_positive(sum([TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQF2 / TETONEQUO1) + 1 - is_positive(sum([TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - sum([ZIPQF12, ZIPQFV2, ZIPQFC2])
ZIPQF31 = is_positive(TEGLF4 + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQF3 / TETONEQUO1) + 1 - is_positive(TEGLF4 + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - sum([ZIPQF11, ZIPQF21, ZIPQFV1, ZIPQFC1])
ZIPQF32 = is_positive(TEGLF4 + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQF3 / TETONEQUO1) + 1 - is_positive(TEGLF4 + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - sum([ZIPQF12, ZIPQF22, ZIPQFV2, ZIPQFC2])
ZIPQF41 = is_positive(TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQF4 / TETONEQUO1) + 1 - is_positive(TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - sum([ZIPQFV1, ZIPQFC1, ZIPQF11, ZIPQF21, ZIPQF31])
ZIPQF42 = is_positive(TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQF4 / TETONEQUO1) + 1 - is_positive(TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - sum([ZIPQFV2, ZIPQFC2, ZIPQF12, ZIPQF22, ZIPQF32])
ZIPQFANT11 = is_positive(sum([TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQF1 / TETONEQUO1) + 1 - is_positive(sum([TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - sum([ZIPQFANTV1, ZIPQFANTC1])
ZIPQFANT21 = is_positive(sum([TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQF2 / TETONEQUO1) + 1 - is_positive(sum([TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - sum([ZIPQFANT11, ZIPQFANTV1, ZIPQFANTC1])
ZIPQFANT31 = is_positive(TEGLF4 + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQF3 / TETONEQUO1) + 1 - is_positive(TEGLF4 + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - sum([ZIPQFANT11, ZIPQFANT21, ZIPQFANTV1, ZIPQFANTC1])
ZIPQFANT41 = is_positive(TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQF4 / TETONEQUO1) + 1 - is_positive(TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - sum([ZIPQFANTV1, ZIPQFANTC1, ZIPQFANT11, ZIPQFANT21, ZIPQFANT31])
ZIPQFANTV1 = is_positive(sum([TEGLFC, TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQFV / TETONEQUO1) + 1 - is_positive(sum([TEGLFC, TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT
ZIPQFV1 = is_positive(sum([TEGLFC, TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQFV / TETONEQUO1) + 1 - is_positive(sum([TEGLFC, TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT
ZIPQFV2 = is_positive(sum([TEGLFC, TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQFV / TETONEQUO1) + 1 - is_positive(sum([TEGLFC, TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT
ZIPQPALIM11 = is_positive(sum([TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPALIM1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - sum([ZIPQPALIMV1, ZIPQPALIMC1])
ZIPQPALIM12 = is_positive(sum([TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPALIM1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - sum([ZIPQPALIMV2, ZIPQPALIMC2])
ZIPQPALIM21 = is_positive(sum([TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPALIM2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - sum([ZIPQPALIM11, ZIPQPALIMV1, ZIPQPALIMC1])
ZIPQPALIM22 = is_positive(sum([TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPALIM2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - sum([ZIPQPALIM12, ZIPQPALIMV2, ZIPQPALIMC2])
ZIPQPALIM31 = is_positive(TEGLPALIM4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPALIM3 / TETONEQUO1) + 1 - is_positive(TEGLPALIM4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - sum([ZIPQPALIMV1, ZIPQPALIMC1, ZIPQPALIM11, ZIPQPALIM21])
ZIPQPALIM32 = is_positive(TEGLPALIM4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPALIM3 / TETONEQUO1) + 1 - is_positive(TEGLPALIM4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - sum([ZIPQPALIMV2, ZIPQPALIMC2, ZIPQPALIM12, ZIPQPALIM22])
ZIPQPALIM41 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPALIM4 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - sum([ZIPQPALIMV1, ZIPQPALIMC1, ZIPQPALIM11, ZIPQPALIM21, ZIPQPALIM31])
ZIPQPALIM42 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPALIM4 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - sum([ZIPQPALIMV2, ZIPQPALIMC2, ZIPQPALIM12, ZIPQPALIM22, ZIPQPALIM32])
ZIPQPALIMANT11 = is_positive(sum([TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPALIM1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - sum([ZIPQPALIMANTV1, ZIPQPALIMANTC1])
ZIPQPALIMANT21 = is_positive(sum([TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPALIM2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - sum([ZIPQPALIMANT11, ZIPQPALIMANTV1, ZIPQPALIMANTC1])
ZIPQPALIMANT31 = is_positive(TEGLPALIM4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPALIM3 / TETONEQUO1) + 1 - is_positive(TEGLPALIM4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - sum([ZIPQPALIMANTV1, ZIPQPALIMANTC1, ZIPQPALIMANT11, ZIPQPALIMANT21])
ZIPQPALIMANT41 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPALIM4 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - sum([ZIPQPALIMANTV1, ZIPQPALIMANTC1, ZIPQPALIMANT11, ZIPQPALIMANT21, ZIPQPALIMANT31])
ZIPQPALIMANTV1 = is_positive(sum([TEGLPALIMC, TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPALIMV / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIMC, TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT
ZIPQPALIMV1 = is_positive(sum([TEGLPALIMC, TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPALIMV / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIMC, TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT
ZIPQPALIMV2 = is_positive(sum([TEGLPALIMC, TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPALIMV / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIMC, TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT
ZIPQRCMDC1 = is_positive(TEGLRCMFU + TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQRCMDC / TETONEQUO1) + 1 - is_positive(TEGLRCMFU + TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT
ZIPQRCMDC2 = is_positive(TEGLRCMFU + TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQRCMDC / TETONEQUO1) + 1 - is_positive(TEGLRCMFU + TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT
ZIPQRCMDCANT1 = is_positive(TEGLRCMFU + TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQRCMDC / TETONEQUO1) + 1 - is_positive(TEGLRCMFU + TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT
ZIPQRCMFU1 = is_positive(TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQRCMFU / TETONEQUO1) + 1 - is_positive(TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCMDC1
ZIPQRCMFU2 = is_positive(TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQRCMFU / TETONEQUO1) + 1 - is_positive(TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCMDC2
ZIPQRCMFUANT1 = is_positive(TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQRCMFU / TETONEQUO1) + 1 - is_positive(TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMDCANT1
INDLIGPPE = is_positive(LIGPPEVCP + LIGPPEV + LIGPPEVC + LIGPPEVP + LIGPPEC + LIGPPECP + LIGPPEP) * 1 - is_zero(7 - PPENEXOV) * 1 - is_zero(11 - PPENEXOV) * 1 - is_zero(7 - PPENEXOC) * 1 - is_zero(11 - PPENEXOC) * 1 - is_zero(7 - PPENEXO1) * 1 - is_zero(11 - PPENEXO1) * 1 - is_zero(7 - PPENEXO2) * 1 - is_zero(11 - PPENEXO2) * 1 - is_zero(7 - PPENEXO3) * 1 - is_zero(11 - PPENEXO3) * 1 - is_zero(7 - PPENEXO4) * 1 - is_zero(11 - PPENEXO4) * 1 - is_zero(2 - PPEPEXOV) * 1 - is_zero(2 - PPEPEXOC) * 1 - is_zero(2 - PPEPEXO1) * 1 - is_zero(2 - PPEPEXO2) * 1 - is_zero(2 - PPEPEXO3) * 1 - is_zero(2 - PPEPEXO4)
IPQ11 = ZIPQ11 * 1
IPQ12 = ZIPQ12 * 1
IPQ21 = ZIPQ21 * 2
IPQ22 = ZIPQ22 * 2
IPQ31 = ZIPQ31 * 3
IPQ32 = ZIPQ32 * 3
IPQ41 = ZIPQ41 * 4
IPQ42 = ZIPQ42 * 4
IPQANT11 = ZIPQANT11 * 1
IPQANT21 = ZIPQANT21 * 2
IPQANT31 = ZIPQANT31 * 3
IPQANT41 = ZIPQANT41 * 4
IPQF11 = ZIPQF11 * saisies.get('COTF1', 0)
IPQF12 = ZIPQF12 * saisies.get('COTF1', 0)
IPQF21 = ZIPQF21 * saisies.get('COTF2', 0)
IPQF22 = ZIPQF22 * saisies.get('COTF2', 0)
IPQF31 = ZIPQF31 * saisies.get('COTF3', 0)
IPQF32 = ZIPQF32 * saisies.get('COTF3', 0)
IPQF41 = ZIPQF41 * saisies.get('COTF4', 0)
IPQF42 = ZIPQF42 * saisies.get('COTF4', 0)
IPQFANT11 = ZIPQFANT11 * saisies.get('COTF1', 0)
IPQFANT21 = ZIPQFANT21 * saisies.get('COTF2', 0)
IPQFANT31 = ZIPQFANT31 * saisies.get('COTF3', 0)
IPQFANT41 = ZIPQFANT41 * saisies.get('COTF4', 0)
IPQFANTV1 = ZIPQFANTV1 * saisies.get('COTFV', 0)
IPQFV1 = ZIPQFV1 * saisies.get('COTFV', 0)
IPQFV2 = ZIPQFV2 * saisies.get('COTFV', 0)
IPQPALIM11 = ZIPQPALIM11 * saisies.get('PENSALNBP1', 0)
IPQPALIM12 = ZIPQPALIM12 * saisies.get('PENSALNBP1', 0)
IPQPALIM21 = ZIPQPALIM21 * saisies.get('PENSALNBP2', 0)
IPQPALIM22 = ZIPQPALIM22 * saisies.get('PENSALNBP2', 0)
IPQPALIM31 = ZIPQPALIM31 * saisies.get('PENSALNBP3', 0)
IPQPALIM32 = ZIPQPALIM32 * saisies.get('PENSALNBP3', 0)
IPQPALIM41 = ZIPQPALIM41 * saisies.get('PENSALNBP4', 0)
IPQPALIM42 = ZIPQPALIM42 * saisies.get('PENSALNBP4', 0)
IPQPALIMANT11 = ZIPQPALIMANT11 * saisies.get('PENSALNBP1', 0)
IPQPALIMANT21 = ZIPQPALIMANT21 * saisies.get('PENSALNBP2', 0)
IPQPALIMANT31 = ZIPQPALIMANT31 * saisies.get('PENSALNBP3', 0)
IPQPALIMANT41 = ZIPQPALIMANT41 * saisies.get('PENSALNBP4', 0)
IPQPALIMANTV1 = ZIPQPALIMANTV1 * saisies.get('PENSALNBV', 0)
IPQPALIMV1 = ZIPQPALIMV1 * saisies.get('PENSALNBV', 0)
IPQPALIMV2 = ZIPQPALIMV2 * saisies.get('PENSALNBV', 0)
IPQRCMDC1 = ZIPQRCMDC1 * saisies.get('REVACTNB', 0)
IPQRCMDC2 = ZIPQRCMDC2 * saisies.get('REVACTNB', 0)
IPQRCMDCANT1 = ZIPQRCMDCANT1 * saisies.get('REVACTNB', 0)
IPQRCMFU1 = ZIPQRCMFU1 * saisies.get('REVPEANB', 0)
IPQRCMFU2 = ZIPQRCMFU2 * saisies.get('REVPEANB', 0)
IPQRCMFUANT1 = ZIPQRCMFUANT1 * saisies.get('REVPEANB', 0)
LIGPASPPE = INDLIGPPE * is_zero(PPETOTX)
LIGPPEHC = positif_ou_nul(1820 - PPENBHC) * present(PPENBHC) * INDPPEC * is_positive(INDLIGPPE) * LIG0 * LIG2
LIGPPEHP = is_positive(positif_ou_nul(1820 - PPENBH1) * present(PPENBH1) + positif_ou_nul(1820 - PPENBH2) * present(PPENBH2) + positif_ou_nul(1820 - PPENBH3) * present(PPENBH3) + positif_ou_nul(1820 - PPENBH4) * present(PPENBH4)) * INDPPEP * is_positive(INDLIGPPE) * LIG0 * LIG2
LIGPPEHV = positif_ou_nul(1820 - PPENBHV) * present(PPENBHV) * INDPPEV * is_positive(INDLIGPPE) * LIG0 * LIG2
LIGPPEJC = positif_ou_nul(360 - saisies.get('PPENJC', 0)) * is_positive(INDLIGPPE) * LIG0 * LIG2 * is_positive(saisies.get('PPENJC', 0)) * present(saisies.get('PPENJC', 0)) + is_positive(PPESAISITPC) * is_positive(saisies.get('PPEACC', 0))
LIGPPEJP = positif_ou_nul(360 - saisies.get('PPENJP', 0)) * is_positive(INDLIGPPE) * LIG0 * LIG2 * is_positive(saisies.get('PPENJP', 0)) * present(saisies.get('PPENJP', 0)) + is_positive(PPESAISITPP) * is_positive(saisies.get('PPEACP', 0))
LIGPPEJV = positif_ou_nul(360 - saisies.get('PPENJV', 0)) * is_positive(INDLIGPPE) * LIG0 * LIG2 * present(saisies.get('PPENJV', 0)) * is_positive(saisies.get('PPENJV', 0)) + is_positive(PPESAISITPV) * is_positive(saisies.get('PPEACV', 0))
PPEREVSALC = is_positive(PPESALCTOT * INDLIGPPE + PPESALC * is_positive(PPEPRIMECT) * is_positive(PPETOTX)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * INDPPEC * INDLIGPPE
PPEREVSALP = is_positive(PPESALPTOT + PPESALPTOT * INDLIGPPE + PPESALPTOT * is_positive(PPEPRIMEPT) * is_positive(PPETOTX)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * INDPPEP * INDLIGPPE
PPEREVSALV = is_positive(PPESALVTOT * INDLIGPPE + PPESALV * is_positive(PPEPRIMEVT) * is_positive(PPETOTX)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * INDPPEV * INDLIGPPE
TPLEINNSALC = is_positive(is_positive(saisies.get('PPEACC', 0) + is_positive(saisies.get('PPENJC', 0) - 360) + is_positive(is_positive(1 - is_zero(PPE_AVRPRO1C + 0)) * is_positive(is_positive(PPETOTX) + is_positive(PPEREVSALC)) * is_positive(abs(PPERPROC))) * 1 - is_positive(LIGPPEJC)) * is_positive(INDLIGPPE) + is_positive(PPESAISITPC) * is_positive(saisies.get('PPEACC', 0))) * INDPPEC * LIG0 * LIG2
TPLEINNSALP = is_positive(is_positive(saisies.get('PPEACP', 0) + is_positive(saisies.get('PPENJP', 0) - 360) + is_positive(is_positive(1 - is_zero(PPE_AVRPRO1P + 0)) * is_positive(is_positive(PPETOTX) + is_positive(PPEREVSALP)) * is_positive(abs(PPERPROP))) * 1 - is_positive(LIGPPEJP)) * is_positive(INDLIGPPE) + is_positive(PPESAISITPP) * is_positive(saisies.get('PPEACP', 0))) * INDPPEP * LIG0 * LIG2
TPLEINNSALV = is_positive(is_positive(saisies.get('PPEACV', 0) + is_positive(saisies.get('PPENJV', 0) - 360) + is_positive(is_positive(1 - is_zero(PPE_AVRPRO1V + 0)) * is_positive(is_positive(PPETOTX) + is_positive(PPEREVSALV)) * is_positive(abs(PPERPROV))) * 1 - is_positive(LIGPPEJV)) * is_positive(INDLIGPPE) + is_positive(PPESAISITPV) * is_positive(saisies.get('PPEACV', 0))) * INDPPEV * LIG0 * LIG2
TPLEINSALC = is_positive(saisies.get('PPETPC', 0) * PPESALCTOT + PPESALCTOT * INDLIGPPE * 1 - is_positive(LIGPPEHC) + is_positive(PPENBHC - 1820) + is_positive(PPEPRIMECT) * is_positive(PPETOTX) * is_positive(PPESALC) * 1 - is_positive(LIGPPEHC) + is_positive(PPESALC) * 1 - is_positive(LIGPPEHC)) * INDPPEC * is_positive(INDLIGPPE) * LIG0 * LIG2
TPLEINSALP = is_positive(saisies.get('PPETPP1', 0) + saisies.get('PPETPP2', 0) + saisies.get('PPETPP3', 0) + saisies.get('PPETPP4', 0) * PPESALPTOT + is_positive(PPENBH1 - 1820) + is_positive(PPENBH2 - 1820) + is_positive(PPENBH3 - 1820) + is_positive(PPENBH4 - 1820) + PPESALPTOT * INDLIGPPE * 1 - is_positive(LIGPPEHP) + is_positive(PPEPRIMEPT) * is_positive(PPETOTX) * is_positive(PPESALPTOT) * 1 - is_positive(LIGPPEHP) + is_positive(PPESALPTOT) * 1 - is_positive(LIGPPEHP)) * INDPPEP * is_positive(INDLIGPPE) * LIG0 * LIG2
TPLEINSALV = is_positive(saisies.get('PPETPV', 0) * PPESALVTOT + is_positive(PPENBHV - 1820) + PPESALVTOT * INDLIGPPE * 1 - is_positive(LIGPPEHV) + is_positive(PPEPRIMEVT) * is_positive(PPETOTX) * is_positive(PPESALV) * 1 - is_positive(LIGPPEHV) + is_positive(PPESALV) * 1 - is_positive(LIGPPEHV)) * INDPPEV * is_positive(INDLIGPPE) * LIG0 * LIG2
ZIPQFANTC1 = is_positive(sum([TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQFC / TETONEQUO1) + 1 - is_positive(sum([TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANTV1
ZIPQFC1 = is_positive(sum([TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQFC / TETONEQUO1) + 1 - is_positive(sum([TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQFV1
ZIPQFC2 = is_positive(sum([TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQFC / TETONEQUO1) + 1 - is_positive(sum([TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQFV2
ZIPQPALIMANTC1 = is_positive(sum([TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPALIMC / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANTV1
ZIPQPALIMC1 = is_positive(sum([TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPALIMC / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIMV1
ZIPQPALIMC2 = is_positive(sum([TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPALIMC / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIMV2
ZIPQRCMCH1 = is_positive(TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQRCMCH / TETONEQUO1) + 1 - is_positive(TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCMDC1 - ZIPQRCMFU1
ZIPQRCMCH2 = is_positive(TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQRCMCH / TETONEQUO1) + 1 - is_positive(TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCMDC2 - ZIPQRCMFU2
ZIPQRCMCHANT1 = is_positive(TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQRCMCH / TETONEQUO1) + 1 - is_positive(TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMDCANT1 - ZIPQRCMFUANT1
ZIPQRCMTR1 = is_positive(TEGLRCMGO + TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQRCMTR / TETONEQUO1) + 1 - is_positive(TEGLRCMGO + TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCMDC1 - ZIPQRCMFU1 - ZIPQRCMCH1
ZIPQRCMTR2 = is_positive(TEGLRCMGO + TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQRCMTR / TETONEQUO1) + 1 - is_positive(TEGLRCMGO + TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCMDC2 - ZIPQRCMFU2 - ZIPQRCMCH2
ZIPQRCMTRANT1 = is_positive(TEGLRCMGO + TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQRCMTR / TETONEQUO1) + 1 - is_positive(TEGLRCMGO + TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMDCANT1 - ZIPQRCMFUANT1 - ZIPQRCMCHANT1
IPQFANTC1 = ZIPQFANTC1 * saisies.get('COTFC', 0)
IPQFC1 = ZIPQFC1 * saisies.get('COTFC', 0)
IPQFC2 = ZIPQFC2 * saisies.get('COTFC', 0)
IPQPALIMANTC1 = ZIPQPALIMANTC1 * saisies.get('PENSALNBC', 0)
IPQPALIMC1 = ZIPQPALIMC1 * saisies.get('PENSALNBC', 0)
IPQPALIMC2 = ZIPQPALIMC2 * saisies.get('PENSALNBC', 0)
IPQRCMCH1 = ZIPQRCMCH1 * saisies.get('PROVIENB', 0)
IPQRCMCH2 = ZIPQRCMCH2 * saisies.get('PROVIENB', 0)
IPQRCMCHANT1 = ZIPQRCMCHANT1 * saisies.get('PROVIENB', 0)
IPQRCMTR1 = ZIPQRCMTR1 * saisies.get('INTERENB', 0)
IPQRCMTR2 = ZIPQRCMTR2 * saisies.get('INTERENB', 0)
IPQRCMTRANT1 = ZIPQRCMTRANT1 * saisies.get('INTERENB', 0)
LIGPPENSC = is_positive(is_positive(is_positive(1 - is_zero(PPE_AVRPRO1C + 0)) * is_positive(is_positive(PPETOTX) + is_positive(PPEREVSALC)) * is_positive(INDLIGPPE)) + is_positive(PPESAISITPC + PPESAISINBJC)) * INDPPEC * LIG0 * LIG2
LIGPPENSP = is_positive(is_positive(is_positive(1 - is_zero(PPE_AVRPRO1P + 0)) * is_positive(is_positive(PPETOTX) + is_positive(PPEREVSALP)) * is_positive(INDLIGPPE)) + is_positive(PPESAISITPP + PPESAISINBJP)) * INDPPEP * LIG0 * LIG2
LIGPPENSV = is_positive(is_positive(is_positive(1 - is_zero(PPE_AVRPRO1V + 0)) * is_positive(is_positive(PPETOTX) + is_positive(PPEREVSALV)) * is_positive(INDLIGPPE)) + is_positive(PPESAISITPV + PPESAISINBJV)) * INDPPEV * LIG0 * LIG2
ZIPQRCMGO1 = is_positive(TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQRCMGO / TETONEQUO1) + 1 - is_positive(TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCMDC1 - ZIPQRCMFU1 - ZIPQRCMCH1 - ZIPQRCMTR1
ZIPQRCMGO2 = is_positive(TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQRCMGO / TETONEQUO1) + 1 - is_positive(TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCMDC2 - ZIPQRCMFU2 - ZIPQRCMCH2 - ZIPQRCMTR2
ZIPQRCMGOANT1 = is_positive(TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQRCMGO / TETONEQUO1) + 1 - is_positive(TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMDCANT1 - ZIPQRCMFUANT1 - ZIPQRCMCHANT1 - ZIPQRCMTRANT1
ZIPQRCMTS1 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQRCMTS / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCMDC1 - ZIPQRCMFU1 - ZIPQRCMCH1 - ZIPQRCMTR1 - ZIPQRCMGO1
ZIPQRCMTS2 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQRCMTS / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCMDC2 - ZIPQRCMFU2 - ZIPQRCMCH2 - ZIPQRCMTR2 - ZIPQRCMGO2
ZIPQRCMTSANT1 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQRCMTS / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMDCANT1 - ZIPQRCMFUANT1 - ZIPQRCMCHANT1 - ZIPQRCMTRANT1 - ZIPQRCMGOANT1
IPQRCMGO1 = ZIPQRCMGO1 * saisies.get('RESTUCNB', 0)
IPQRCMGO2 = ZIPQRCMGO2 * saisies.get('RESTUCNB', 0)
IPQRCMGOANT1 = ZIPQRCMGOANT1 * saisies.get('RESTUCNB', 0)
IPQRCMTS1 = ZIPQRCMTS1 * saisies.get('DISQUONB', 0)
IPQRCMTS2 = ZIPQRCMTS2 * saisies.get('DISQUONB', 0)
IPQRCMTSANT1 = ZIPQRCMTSANT1 * saisies.get('DISQUONB', 0)
ZIPQRCM1TOT = ZIPQRCMDC1 + ZIPQRCMFU1 + ZIPQRCMCH1 + ZIPQRCMTS1 + ZIPQRCMGO1 + ZIPQRCMTR1
ZIPQRCM2TOT = ZIPQRCMDC2 + ZIPQRCMFU2 + ZIPQRCMCH2 + ZIPQRCMTS2 + ZIPQRCMGO2 + ZIPQRCMTR2
ZIPQRCMANT1TOT = ZIPQRCMDCANT1 + ZIPQRCMFUANT1 + ZIPQRCMCHANT1 + ZIPQRCMTSANT1 + ZIPQRCMGOANT1 + ZIPQRCMTRANT1
ZIPQRF11 = is_positive(TEGLRF2 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * round(IQUOTOT1 * TERPQRF1 / TETONEQUO1) + 1 - is_positive(TEGLRF2 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT
ZIPQRF12 = is_positive(TEGLRF2 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * round(IQUOTOT2 * TERPQRF1 / TETONEQUO1) + 1 - is_positive(TEGLRF2 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT
ZIPQRF21 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * round(IQUOTOT1 * TERPQRF2 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF11 - ZIPQPRRZ1TOT
ZIPQRF22 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * round(IQUOTOT2 * TERPQRF2 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF12 - ZIPQPRRZ2TOT
ZIPQRFANT11 = is_positive(TEGLRF2 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * round(IQUOTOTANT1 * TERPQRF1 / TETONEQUO1) + 1 - is_positive(TEGLRF2 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT
ZIPQRFANT21 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * round(IQUOTOTANT1 * TERPQRF2 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT11 - ZIPQPRRANTZ1TOT
ZIPQRVO1 = is_positive(TEGLRVO5 + TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * round(IQUOTOT1 * TERPQRVO / TETONEQUO1) + 1 - is_positive(TEGLRVO5 + TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQPRRZ1TOT
ZIPQRVO2 = is_positive(TEGLRVO5 + TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * round(IQUOTOT2 * TERPQRVO / TETONEQUO1) + 1 - is_positive(TEGLRVO5 + TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQPRRZ2TOT
ZIPQRVO51 = is_positive(TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * round(IQUOTOT1 * TERPQRVO5 / TETONEQUO1) + 1 - is_positive(TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQRVO1 - ZIPQPRRZ1TOT
ZIPQRVO52 = is_positive(TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * round(IQUOTOT2 * TERPQRVO5 / TETONEQUO1) + 1 - is_positive(TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQRVO2 - ZIPQPRRZ2TOT
ZIPQRVO61 = is_positive(TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * round(IQUOTOT1 * TERPQRVO6 / TETONEQUO1) + 1 - is_positive(TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQRVO1 - ZIPQRVO51 - ZIPQPRRZ1TOT
ZIPQRVO62 = is_positive(TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * round(IQUOTOT2 * TERPQRVO6 / TETONEQUO1) + 1 - is_positive(TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQRVO2 - ZIPQRVO52 - ZIPQPRRZ2TOT
ZIPQRVO71 = is_positive(TEGLTSTOT + TEGLTSREMPTOT) * round(IQUOTOT1 * TERPQRVO7 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQPRRZ1TOT - ZIPQRVO1 - ZIPQRVO51 - ZIPQRVO61
ZIPQRVO72 = is_positive(TEGLTSTOT + TEGLTSREMPTOT) * round(IQUOTOT2 * TERPQRVO7 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQPRRZ2TOT - ZIPQRVO2 - ZIPQRVO52 - ZIPQRVO62
ZIPQRVOANT1 = is_positive(TEGLRVO5 + TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * round(IQUOTOTANT1 * TERPQRVO / TETONEQUO1) + 1 - is_positive(TEGLRVO5 + TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT1TOT - ZIPQPRRANTZ1TOT
IPQRF11 = ZIPQRF11 * saisies.get('FONCINB', 0)
IPQRF12 = ZIPQRF12 * saisies.get('FONCINB', 0)
IPQRF21 = ZIPQRF21 * saisies.get('REAMORNB', 0)
IPQRF22 = ZIPQRF22 * saisies.get('REAMORNB', 0)
IPQRFANT11 = ZIPQRFANT11 * saisies.get('FONCINB', 0)
IPQRFANT21 = ZIPQRFANT21 * saisies.get('REAMORNB', 0)
IPQRVO1 = ZIPQRVO1 * saisies.get('RENTAXNB', 0)
IPQRVO2 = ZIPQRVO2 * saisies.get('RENTAXNB', 0)
IPQRVO51 = ZIPQRVO51 * saisies.get('RENTAXNB5', 0)
IPQRVO52 = ZIPQRVO52 * saisies.get('RENTAXNB5', 0)
IPQRVO61 = ZIPQRVO61 * saisies.get('RENTAXNB6', 0)
IPQRVO62 = ZIPQRVO62 * saisies.get('RENTAXNB6', 0)
IPQRVO71 = ZIPQRVO71 * saisies.get('RENTAXNB7', 0)
IPQRVO72 = ZIPQRVO72 * saisies.get('RENTAXNB7', 0)
IPQRVOANT1 = ZIPQRVOANT1 * saisies.get('RENTAXNB', 0)
ZIPQPRRANTV1 = is_positive(sum([TEGLPRRC, TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPRRV / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRC, TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT
ZIPQPRRANTZV1 = is_positive(sum([TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPRRZV / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT
ZIPQPRRV1 = is_positive(sum([TEGLPRRC, TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPRRV / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRC, TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT
ZIPQPRRV2 = is_positive(sum([TEGLPRRC, TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPRRV / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRC, TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT
ZIPQPRRZV1 = is_positive(sum([TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPRRZV / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT
ZIPQPRRZV2 = is_positive(sum([TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPRRZV / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT
ZIPQRVO1TOT = ZIPQRVO1 + ZIPQRVO51 + ZIPQRVO61 + ZIPQRVO71
ZIPQRVO2TOT = ZIPQRVO2 + ZIPQRVO52 + ZIPQRVO62 + ZIPQRVO72
ZIPQRVO5ANT1 = is_positive(TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * round(IQUOTOTANT1 * TERPQRVO5 / TETONEQUO1) + 1 - is_positive(TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1 - ZIPQPRRANTZ1TOT
ZIPQRVO6ANT1 = is_positive(TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * round(IQUOTOTANT1 * TERPQRVO6 / TETONEQUO1) + 1 - is_positive(TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1 - ZIPQRVO5ANT1 - ZIPQPRRANTZ1TOT
ZIPQRVO7ANT1 = is_positive(TEGLTSTOT + TEGLTSREMPTOT) * round(IQUOTOTANT1 * TERPQRVO7 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1 - ZIPQRVO5ANT1 - ZIPQRVO6ANT1
ZIPQRVOANT1TOT = ZIPQRVOANT1 + ZIPQRVO5ANT1 + ZIPQRVO6ANT1 + ZIPQRVO7ANT1
ZIPQTSANTV1 = is_positive(sum([TEGLTSC, TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * round(IQUOTOTANT1 * TERPQTSV / TETONEQUO1) + 1 - is_positive(sum([TEGLTSC, TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQPRRANTZ1TOT
ZIPQTSREMPANTV1 = is_positive(sum([TEGLTSREMPC, TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * round(IQUOTOTANT1 * TERPQTSREMPV / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMPC, TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANT1TOT
ZIPQTSREMPV1 = is_positive(sum([TEGLTSREMPC, TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * round(IQUOTOT1 * TERPQTSREMPV / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMPC, TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTS1TOT
ZIPQTSREMPV2 = is_positive(sum([TEGLTSREMPC, TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * round(IQUOTOT2 * TERPQTSREMPV / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMPC, TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTS2TOT
ZIPQTSV1 = is_positive(sum([TEGLTSC, TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * round(IQUOTOT1 * TERPQTSV / TETONEQUO1) + 1 - is_positive(sum([TEGLTSC, TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQPRRZ1TOT
ZIPQTSV2 = is_positive(sum([TEGLTSC, TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * round(IQUOTOT2 * TERPQTSV / TETONEQUO1) + 1 - is_positive(sum([TEGLTSC, TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQPRRZ2TOT
IPQ1001 = IPQRWB1 + IPQRWA1 + IPQRVG1 + sum([IPQ11, IPQ21, IPQ31, IPQ41]) + sum([IPQFV1, IPQFC1, IPQF11, IPQF21, IPQF31, IPQF41]) + sum([IPQPALIMV1, IPQPALIMC1, IPQPALIM11, IPQPALIM21, IPQPALIM31, IPQPALIM41]) + sum([IPQTSV1, IPQTSC1, IPQTS11, IPQTS21, IPQTS31, IPQTS41]) + sum([IPQTSREMPV1, IPQTSREMPC1, IPQTSREMP11, IPQTSREMP21, IPQTSREMP31, IPQTSREMP41]) + IPQRF11 + IPQRF21 + sum([IPQPRRV1 + IPQPRRZV1, IPQPRRC1 + IPQPRRZC1, IPQPRR11 + IPQPRRZ11, IPQPRR21 + IPQPRRZ21, IPQPRR31 + IPQPRRZ31, IPQPRR41 + IPQPRRZ41]) + IPQRCMDC1 + IPQRCMFU1 + IPQRCMCH1 + IPQRCMTS1 + IPQRCMGO1 + IPQRCMTR1 + IPQRVO1 + IPQRVO51 + IPQRVO61 + IPQRVO71
IPQ1002 = IPQRWB2 + IPQRWA2 + IPQRVG2 + sum([IPQ12, IPQ22, IPQ32, IPQ42]) + sum([IPQFV2, IPQFC2, IPQF12, IPQF22, IPQF32, IPQF42]) + sum([IPQPALIMV2, IPQPALIMC2, IPQPALIM12, IPQPALIM22, IPQPALIM32, IPQPALIM42]) + sum([IPQTSV2, IPQTSC2, IPQTS12, IPQTS22, IPQTS32, IPQTS42]) + sum([IPQTSREMPV2, IPQTSREMPC2, IPQTSREMP12, IPQTSREMP22, IPQTSREMP32, IPQTSREMP42]) + IPQRF11 + IPQRF21 + sum([IPQPRRV2 + IPQPRRZV2, IPQPRRC2 + IPQPRRZC2, IPQPRR12 + IPQPRRZ12, IPQPRR22 + IPQPRRZ22, IPQPRR32 + IPQPRRZ32, IPQPRR42 + IPQPRRZ42]) + IPQRCMDC2 + IPQRCMFU2 + IPQRCMCH2 + IPQRCMTS2 + IPQRCMGO2 + IPQRCMTR2 + IPQRVO2 + IPQRVO52 + IPQRVO62 + IPQRVO72
IPQ2 = IPQ02 * EXO1 + IPQ1002
IPQPRRANTV1 = ZIPQPRRANTV1 * saisies.get('CARPENBAV', 0)
IPQPRRANTZV1 = ZIPQPRRANTZV1 * saisies.get('CODNAZ', 0)
IPQPRRV1 = ZIPQPRRV1 * saisies.get('CARPENBAV', 0)
IPQPRRV2 = ZIPQPRRV2 * saisies.get('CARPENBAV', 0)
IPQPRRZV1 = ZIPQPRRZV1 * saisies.get('CODNAZ', 0)
IPQPRRZV2 = ZIPQPRRZV2 * saisies.get('CODNAZ', 0)
IPQRVO5ANT1 = ZIPQRVO5ANT1 * saisies.get('RENTAXNB5', 0)
IPQRVO6ANT1 = ZIPQRVO6ANT1 * saisies.get('RENTAXNB6', 0)
IPQRVO7ANT1 = ZIPQRVO7ANT1 * saisies.get('RENTAXNB7', 0)
IPQTSANTV1 = ZIPQTSANTV1 * saisies.get('CARTSNBAV', 0)
IPQTSREMPANTV1 = ZIPQTSREMPANTV1 * saisies.get('REMPLANBV', 0)
IPQTSREMPV1 = ZIPQTSREMPV1 * saisies.get('REMPLANBV', 0)
IPQTSREMPV2 = ZIPQTSREMPV2 * saisies.get('REMPLANBV', 0)
IPQTSV1 = ZIPQTSV1 * saisies.get('CARTSNBAV', 0)
IPQTSV2 = ZIPQTSV2 * saisies.get('CARTSNBAV', 0)
IQUODAJ1 = round(IPQ1001 * TERPQ4V + TERPQ4C / TERPQ4TVC + TERPQTSV + TERPQTSC)
IQUODAJ2 = round(IPQ1002 * TERPQ4V + TERPQ4C / TERPQ4TVC + TERPQTSV + TERPQTSC)
IQUODAJ31 = round(IPQ1001 * TERPQ4V + TERPQ4C / TERPQ4TVC + TERPQTSV + TERPQTSC)
IQUODAJ32 = round(IPQ1002 * TERPQ4V + TERPQ4C / TERPQ4TVC + TERPQTSV + TERPQTSC)
IQUORAJ1 = round(IPQ1001 * TERPQ4RAJV + TERPQ4RBJC / TERPQ4TVC + TERPQTSV + TERPQTSC)
IQUORAJ2 = round(IPQ1002 * TERPQ4RAJV + TERPQ4RBJC / TERPQ4TVC + TERPQTSV + TERPQTSC)
IQUORAJ31 = round(IPQ1001 * TERPQ4RAJV + TERPQ4RBJC / TERPQ4TVC + TERPQTSV + TERPQTSC)
IQUORAJ32 = round(IPQ1002 * TERPQ4RAJV + TERPQ4RBJC / TERPQ4TVC + TERPQTSV + TERPQTSC)
ZIPQPRRANTC1 = is_positive(sum([TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPRRC / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTV1
ZIPQPRRANTZC1 = is_positive(sum([TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPRRZC / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTZV1
ZIPQPRRC1 = is_positive(sum([TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPRRC / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRV1
ZIPQPRRC2 = is_positive(sum([TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPRRC / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRV2
ZIPQPRRZC1 = is_positive(sum([TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPRRZC / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRZV1
ZIPQPRRZC2 = is_positive(sum([TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPRRZC / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRZV2
ZIPQTSANTC1 = is_positive(sum([TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * round(IQUOTOTANT1 * TERPQTSC / TETONEQUO1) + 1 - is_positive(sum([TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQPRRANTZ1TOT - ZIPQTSANTV1
ZIPQTSC1 = is_positive(sum([TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * round(IQUOTOT1 * TERPQTSC / TETONEQUO1) + 1 - is_positive(sum([TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQPRRZ1TOT - ZIPQTSV1
ZIPQTSC2 = is_positive(sum([TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * round(IQUOTOT2 * TERPQTSC / TETONEQUO1) + 1 - is_positive(sum([TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQPRRZ2TOT - ZIPQTSV2
ZIPQTSREMPANTC1 = is_positive(sum([TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * round(IQUOTOTANT1 * TERPQTSREMPC / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANT1TOT - ZIPQTSREMPANTV1
ZIPQTSREMPC1 = is_positive(sum([TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * round(IQUOTOT1 * TERPQTSREMPC / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTS1TOT - ZIPQTSREMPV1
ZIPQTSREMPC2 = is_positive(sum([TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * round(IQUOTOT2 * TERPQTSREMPC / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTS2TOT - ZIPQTSREMPV2
ABADO1 = round(min(IPRODOM1 + IQUODAJ1 * TX_RABDOM / 100, PLAF_RABDOM))
ABADO2 = round(min(IPRODOM2 + IQUODAJ2 * TX_RABDOM / 100, PLAF_RABDOM))
ABADO31 = round(min(IPRODOM1 + IQUODAJ31 * TX_RABDOM / 100, PLAF_RABDOM))
ABADO32 = round(min(IPRODOM2 + IQUODAJ32 * TX_RABDOM / 100, PLAF_RABDOM))
ABADON32 = round(min(IPQ2 * TX_RABDOM / 100 * saisies.get('PRODOM', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) + round(min(IPQ2 * TX_RABGUY / 100 * saisies.get('PROGUY', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY))
ID12 = round(IPQ2 * round(RI2 + REVQUOQHT) / round(RB02 + TONEQUO))
INETABADAJ1 = max(0, IPRODOM1 + IQUODAJ1 - ABADO1)
INETABADAJ2 = max(0, IPRODOM2 + IQUODAJ2 - ABADO2)
INETABADAJ31 = max(0, IPRODOM1 + IQUODAJ31 - ABADO31)
INETABADAJ32 = max(0, IPRODOM2 + IQUODAJ32 - ABADO32)
IPQ1 = IPQ01 * EXO1 + IPQ1001
IPQANT1001 = IPQANTRWB + IPQANTRWA + IPQANTRVG + sum([IPQANT11, IPQANT21, IPQANT31, IPQANT41]) + sum([IPQFANTV1, IPQFANTC1, IPQFANT11, IPQFANT21, IPQFANT31, IPQFANT41]) + sum([IPQPALIMANTV1, IPQPALIMANTC1, IPQPALIMANT11, IPQPALIMANT21, IPQPALIMANT31, IPQPALIMANT41]) + sum([IPQTSANTV1, IPQTSANTC1, IPQTSANT11, IPQTSANT21, IPQTSANT31, IPQTSANT41]) + sum([IPQTSREMPV1, IPQTSREMPC1, IPQTSREMP11, IPQTSREMP21, IPQTSREMP31, IPQTSREMP41]) + IPQRFANT11 + IPQRFANT21 + sum([IPQPRRANTV1 + IPQPRRANTZV1, IPQPRRANTC1 + IPQPRRANTZC1, IPQPRRANT11 + IPQPRRANTZ11, IPQPRRANT21 + IPQPRRANTZ21, IPQPRRANT31 + IPQPRRANTZ31, IPQPRRANT41 + IPQPRRANTZ41]) + IPQRCMDCANT1 + IPQRCMFUANT1 + IPQRCMCHANT1 + IPQRCMTSANT1 + IPQRCMGOANT1 + IPQRCMTRANT1 + IPQRVOANT1 + IPQRVO5ANT1 + IPQRVO6ANT1 + IPQRVO7ANT1
IPQPRRANTC1 = ZIPQPRRANTC1 * saisies.get('CARPENBAC', 0)
IPQPRRANTZC1 = ZIPQPRRANTZC1 * saisies.get('CODNBZ', 0)
IPQPRRC1 = ZIPQPRRC1 * saisies.get('CARPENBAC', 0)
IPQPRRC2 = ZIPQPRRC2 * saisies.get('CARPENBAC', 0)
IPQPRRZC1 = ZIPQPRRZC1 * saisies.get('CODNBZ', 0)
IPQPRRZC2 = ZIPQPRRZC2 * saisies.get('CODNBZ', 0)
IPQTSANTC1 = ZIPQTSANTC1 * saisies.get('CARTSNBAC', 0)
IPQTSC1 = ZIPQTSC1 * saisies.get('CARTSNBAC', 0)
IPQTSC2 = ZIPQTSC2 * saisies.get('CARTSNBAC', 0)
IPQTSREMPANTC1 = ZIPQTSREMPANTC1 * saisies.get('REMPLANBC', 0)
IPQTSREMPC1 = ZIPQTSREMPC1 * saisies.get('REMPLANBC', 0)
IPQTSREMPC2 = ZIPQTSREMPC2 * saisies.get('REMPLANBC', 0)
IQNETDAJ31 = round(INETABADAJ31 * IQUODAJ31 / IPRODOM1 + IQUODAJ31)
IQNETDAJ32 = round(INETABADAJ32 * IQUODAJ32 / IPRODOM2 + IQUODAJ32)
IQUOEAJ1 = max(0, IPQ1001 - IQUODAJ1 - IQUORAJ1)
IQUOEAJ2 = max(0, IPQ1002 - IQUODAJ2 - IQUORAJ2)
IQUOEAJ31 = max(0, IPQ1001 - IQUORAJ31 - IQUODAJ31)
IQUOEAJ32 = max(0, IPQ1002 - IQUORAJ32 - IQUODAJ32)
ISNETDAJ31 = round(INETABADAJ31 * IPRODOM1 / IPRODOM1 + IQUODAJ31)
ISNETDAJ32 = round(INETABADAJ32 * IPRODOM2 / IPRODOM2 + IQUODAJ32)
ZIPQPRR11 = is_positive(sum([TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPRR1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRV1 - ZIPQPRRC1
ZIPQPRR12 = is_positive(sum([TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPRR1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRV2 - ZIPQPRRC2
ZIPQPRR21 = is_positive(sum([TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPRR2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRV1 - ZIPQPRRC1 - ZIPQPRR11
ZIPQPRR22 = is_positive(sum([TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPRR2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRV2 - ZIPQPRRC2 - ZIPQPRR12
ZIPQPRR31 = is_positive(TEGLPRR4 + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPRR3 / TETONEQUO1) + 1 - is_positive(TEGLPRR4 + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRV1 - ZIPQPRRC1 - ZIPQPRR11 - ZIPQPRR21
ZIPQPRR32 = is_positive(TEGLPRR4 + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPRR3 / TETONEQUO1) + 1 - is_positive(TEGLPRR4 + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRV2 - ZIPQPRRC2 - ZIPQPRR12 - ZIPQPRR22
ZIPQPRR41 = is_positive(sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPRR4 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRV1 - ZIPQPRRC1 - ZIPQPRR11 - ZIPQPRR21 - ZIPQPRR31
ZIPQPRR42 = is_positive(sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPRR4 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRV2 - ZIPQPRRC2 - ZIPQPRR12 - ZIPQPRR22 - ZIPQPRR32
ZIPQPRRANT11 = is_positive(sum([TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPRR1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTV1 - ZIPQPRRANTC1
ZIPQPRRANT21 = is_positive(sum([TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPRR2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTV1 - ZIPQPRRANTC1 - ZIPQPRRANT11
ZIPQPRRANT31 = is_positive(TEGLPRR4 + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPRR3 / TETONEQUO1) + 1 - is_positive(TEGLPRR4 + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTV1 - ZIPQPRRANTC1 - ZIPQPRRANT11 - ZIPQPRRANT21
ZIPQPRRANT41 = is_positive(sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPRR4 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTV1 - ZIPQPRRANTC1 - ZIPQPRRANT11 - ZIPQPRRANT21 - ZIPQPRRANT31
ZIPQPRRANTZ11 = is_positive(sum([TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPRRZ1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTZV1 - ZIPQPRRANTZC1
ZIPQPRRANTZ21 = is_positive(sum([TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPRRZ2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTZV1 - ZIPQPRRANTZC1 - ZIPQPRRANTZ11
ZIPQPRRANTZ31 = is_positive(TEGLPRRZ4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPRRZ3 / TETONEQUO1) + 1 - is_positive(TEGLPRRZ4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTZV1 - ZIPQPRRANTZC1 - ZIPQPRRANTZ11 - ZIPQPRRANTZ21
ZIPQPRRANTZ41 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOTANT1 * TERPQPRRZ4 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTZV1 - ZIPQPRRANTZC1 - ZIPQPRRANTZ11 - ZIPQPRRANTZ21 - ZIPQPRRANTZ31
ZIPQPRRZ11 = is_positive(sum([TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPRRZ1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRZV1 - ZIPQPRRZC1
ZIPQPRRZ12 = is_positive(sum([TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPRRZ1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRZV2 - ZIPQPRRZC2
ZIPQPRRZ21 = is_positive(sum([TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPRRZ2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRZV1 - ZIPQPRRZC1 - ZIPQPRRZ11
ZIPQPRRZ22 = is_positive(sum([TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPRRZ2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRZV2 - ZIPQPRRZC2 - ZIPQPRRZ12
ZIPQPRRZ31 = is_positive(TEGLPRRZ4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPRRZ3 / TETONEQUO1) + 1 - is_positive(TEGLPRRZ4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRZV1 - ZIPQPRRZC1 - ZIPQPRRZ11 - ZIPQPRRZ21
ZIPQPRRZ32 = is_positive(TEGLPRRZ4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPRRZ3 / TETONEQUO1) + 1 - is_positive(TEGLPRRZ4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRZV2 - ZIPQPRRZC2 - ZIPQPRRZ12 - ZIPQPRRZ22
ZIPQPRRZ41 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT1 * TERPQPRRZ4 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRZV1 - ZIPQPRRZC1 - ZIPQPRRZ11 - ZIPQPRRZ21 - ZIPQPRRZ31
ZIPQPRRZ42 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * round(IQUOTOT2 * TERPQPRRZ4 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRZV2 - ZIPQPRRZC2 - ZIPQPRRZ12 - ZIPQPRRZ22 - ZIPQPRRZ32
ZIPQTS11 = is_positive(sum([TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * round(IQUOTOT1 * TERPQTS1 / TETONEQUO1) + 1 - is_positive(sum([TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQPRRZ1TOT - ZIPQTSV1 - ZIPQTSC1
ZIPQTS12 = is_positive(sum([TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * round(IQUOTOT2 * TERPQTS1 / TETONEQUO1) + 1 - is_positive(sum([TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQPRRZ2TOT - ZIPQTSV2 - ZIPQTSC2
ZIPQTS21 = is_positive(sum([TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * round(IQUOTOT1 * TERPQTS2 / TETONEQUO1) + 1 - is_positive(sum([TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTSV1 - ZIPQTSC1 - ZIPQTS11
ZIPQTS22 = is_positive(sum([TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * round(IQUOTOT2 * TERPQTS2 / TETONEQUO1) + 1 - is_positive(sum([TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTSV2 - ZIPQTSC2 - ZIPQTS12
ZIPQTS31 = is_positive(TEGLTS4 + TEGLTSREMPTOT) * round(IQUOTOT1 * TERPQTS3 / TETONEQUO1) + 1 - is_positive(TEGLTS4 + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTSV1 - ZIPQTSC1 - ZIPQTS11 - ZIPQTS21
ZIPQTS32 = is_positive(TEGLTS4 + TEGLTSREMPTOT) * round(IQUOTOT2 * TERPQTS3 / TETONEQUO1) + 1 - is_positive(TEGLTS4 + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTSV2 - ZIPQTSC2 - ZIPQTS12 - ZIPQTS22
ZIPQTS41 = is_positive(TEGLTSREMPTOT) * round(IQUOTOT1 * TERPQTS4 / TETONEQUO1) + 1 - is_positive(TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTSV1 - ZIPQTSC1 - ZIPQTS11 - ZIPQTS21 - ZIPQTS31
ZIPQTS42 = is_positive(TEGLTSREMPTOT) * round(IQUOTOT2 * TERPQTS4 / TETONEQUO1) + 1 - is_positive(TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTSV2 - ZIPQTSC2 - ZIPQTS12 - ZIPQTS22 - ZIPQTS32
ZIPQTSANT11 = is_positive(sum([TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * round(IQUOTOTANT1 * TERPQTS1 / TETONEQUO1) + 1 - is_positive(sum([TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQPRRANTZ1TOT - ZIPQTSANTV1 - ZIPQTSANTC1
ZIPQTSANT21 = is_positive(sum([TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * round(IQUOTOTANT1 * TERPQTS2 / TETONEQUO1) + 1 - is_positive(sum([TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANTV1 - ZIPQTSANTC1 - ZIPQTSANT11
ZIPQTSANT31 = is_positive(TEGLTS4 + TEGLTSREMPTOT) * round(IQUOTOTANT1 * TERPQTS3 / TETONEQUO1) + 1 - is_positive(TEGLTS4 + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANTV1 - ZIPQTSANTC1 - ZIPQTSANT11 - ZIPQTSANT21
ZIPQTSANT41 = is_positive(TEGLTSREMPTOT) * round(IQUOTOTANT1 * TERPQTS4 / TETONEQUO1) + 1 - is_positive(TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANTV1 - ZIPQTSANTC1 - ZIPQTSANT11 - ZIPQTSANT21 - ZIPQTSANT31
ZIPQTSREMP11 = is_positive(sum([TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * round(IQUOTOT1 * TERPQTSREMP1 / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTS1TOT - ZIPQTSREMPV1 - ZIPQTSREMPC1
ZIPQTSREMP12 = is_positive(sum([TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * round(IQUOTOT2 * TERPQTSREMP1 / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTS2TOT - ZIPQTSREMPV2 - ZIPQTSREMPC2
ZIPQTSREMP21 = is_positive(sum([TEGLTSREMP3, TEGLTSREMP4])) * round(IQUOTOT1 * TERPQTSREMP2 / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTS1TOT - ZIPQTSREMPV1 - ZIPQTSREMPC1 - ZIPQTSREMP11
ZIPQTSREMP22 = is_positive(sum([TEGLTSREMP3, TEGLTSREMP4])) * round(IQUOTOT2 * TERPQTSREMP2 / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTS2TOT - ZIPQTSREMPV2 - ZIPQTSREMPC2 - ZIPQTSREMP12
ZIPQTSREMP31 = is_positive(TEGLTSREMP4) * round(IQUOTOT1 * TERPQTSREMP3 / TETONEQUO1) + 1 - is_positive(TEGLTSREMP4) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTS1TOT - ZIPQTSREMPV1 - ZIPQTSREMPC1 - ZIPQTSREMP11 - ZIPQTSREMP21
ZIPQTSREMP32 = is_positive(TEGLTSREMP4) * round(IQUOTOT2 * TERPQTSREMP3 / TETONEQUO1) + 1 - is_positive(TEGLTSREMP4) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTS2TOT - ZIPQTSREMPV2 - ZIPQTSREMPC2 - ZIPQTSREMP12 - ZIPQTSREMP22
ZIPQTSREMP41 = IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTS1TOT - ZIPQTSREMPV1 - ZIPQTSREMPC1 - ZIPQTSREMP11 - ZIPQTSREMP21 - ZIPQTSREMP31
ZIPQTSREMP42 = IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTS2TOT - ZIPQTSREMPV2 - ZIPQTSREMPC2 - ZIPQTSREMP12 - ZIPQTSREMP22 - ZIPQTSREMP32
ZIPQTSREMPANT11 = is_positive(sum([TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * round(IQUOTOTANT1 * TERPQTSREMP1 / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANT1TOT - ZIPQTSREMPANTV1 - ZIPQTSREMPANTC1
ZIPQTSREMPANT21 = is_positive(sum([TEGLTSREMP3, TEGLTSREMP4])) * round(IQUOTOTANT1 * TERPQTSREMP2 / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANT1TOT - ZIPQTSREMPANTV1 - ZIPQTSREMPANTC1 - ZIPQTSREMPANT11
ZIPQTSREMPANT31 = is_positive(TEGLTSREMP4) * round(IQUOTOTANT1 * TERPQTSREMP3 / TETONEQUO1) + 1 - is_positive(TEGLTSREMP4) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANT1TOT - ZIPQTSREMPANTV1 - ZIPQTSREMPANTC1 - ZIPQTSREMPANT11 - ZIPQTSREMPANT21
ZIPQTSREMPANT41 = IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANT1TOT - ZIPQTSREMPANTV1 - ZIPQTSREMPANTC1 - ZIPQTSREMPANT11 - ZIPQTSREMPANT21 - ZIPQTSREMPANT31
ABADON2 = round(min(ID12 * TX_RABDOM / 100 * saisies.get('PRODOM', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) + round(min(ID12 * TX_RABGUY / 100 * saisies.get('PROGUY', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY))
ABADON31 = round(min(IPQ1 * TX_RABDOM / 100 * saisies.get('PRODOM', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) + round(min(IPQ1 * TX_RABGUY / 100 * saisies.get('PROGUY', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY))
ABAGU1 = round(min(IPROGUY1 + IQUOEAJ1 * TX_RABGUY / 100, PLAF_RABGUY))
ABAGU2 = round(min(IPROGUY2 + IQUOEAJ2 * TX_RABGUY / 100, PLAF_RABGUY))
ABAGU31 = round(min(IPROGUY1 + IQUOEAJ31 * TX_RABGUY / 100, PLAF_RABGUY))
ABAGU32 = round(min(IPROGUY2 + IQUOEAJ32 * TX_RABGUY / 100, PLAF_RABGUY))
ABATOT1 = ABADO1 + ABAGU1
ABATOT2 = ABADO2 + ABAGU2
ABATOT31 = ABADO31 + ABAGU31
ABATOT32 = ABADO32 + ABAGU32
ADO2 = ABADON2 * 1 - is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0))) + ABATOT2 * is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0)))
ADO31 = ABADON31 * 1 - is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0))) + ABATOT31 * is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0)))
ADO32 = ABADON32 * 1 - is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0))) + ABATOT32 * is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0)))
CRCFA = round(IPQ1 * saisies.get('REGCI', 0) / RB018XR + TONEQUO) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
ID11 = round(IPQ1 * round(RI1 + REVQUOQHT) / round(RB01 + TONEQUO))
IMPFHQ1 = 1 - is_positive(VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS) * EXO1 * round(ID11 * IPQ01 / IPQ1)
IMT12 = max(ID11, IMI) * 1 - INDTXMOY + IMO * INDTXMOY
INDTXMIN = positif_ou_nul(IMI - IPQ1) * is_positive(1 - INDTXMOY) * V_CR2
INETABAEAJ1 = max(0, IPROGUY1 + IQUOEAJ1 - ABAGU1)
INETABAEAJ2 = max(0, IPROGUY2 + IQUOEAJ2 - ABAGU2)
INETABAEAJ31 = max(0, IPROGUY1 + IQUOEAJ31 - ABAGU31)
INETABAEAJ32 = max(0, IPROGUY2 + IQUOEAJ32 - ABAGU32)
IPHQ2 = round(IMT12 * IMPFHQ1 / ID11)
IPQANT1 = IPQANT01 * EXO1 + IPQANT1001
IPQPRR11 = ZIPQPRR11 * saisies.get('CARPENBAP1', 0)
IPQPRR12 = ZIPQPRR12 * saisies.get('CARPENBAP1', 0)
IPQPRR21 = ZIPQPRR21 * saisies.get('CARPENBAP2', 0)
IPQPRR22 = ZIPQPRR22 * saisies.get('CARPENBAP2', 0)
IPQPRR31 = ZIPQPRR31 * saisies.get('CARPENBAP3', 0)
IPQPRR32 = ZIPQPRR32 * saisies.get('CARPENBAP3', 0)
IPQPRR41 = ZIPQPRR41 * saisies.get('CARPENBAP4', 0)
IPQPRR42 = ZIPQPRR42 * saisies.get('CARPENBAP4', 0)
IPQPRRANT11 = ZIPQPRRANT11 * saisies.get('CARPENBAP1', 0)
IPQPRRANT21 = ZIPQPRRANT21 * saisies.get('CARPENBAP2', 0)
IPQPRRANT31 = ZIPQPRRANT31 * saisies.get('CARPENBAP3', 0)
IPQPRRANT41 = ZIPQPRRANT41 * saisies.get('CARPENBAP4', 0)
IPQPRRANTZ11 = ZIPQPRRANTZ11 * saisies.get('CODNCZ', 0)
IPQPRRANTZ21 = ZIPQPRRANTZ21 * saisies.get('CODNDZ', 0)
IPQPRRANTZ31 = ZIPQPRRANTZ31 * saisies.get('CODNEZ', 0)
IPQPRRANTZ41 = ZIPQPRRANTZ41 * saisies.get('CODNFZ', 0)
IPQPRRZ11 = ZIPQPRRZ11 * saisies.get('CODNCZ', 0)
IPQPRRZ12 = ZIPQPRRZ12 * saisies.get('CODNCZ', 0)
IPQPRRZ21 = ZIPQPRRZ21 * saisies.get('CODNDZ', 0)
IPQPRRZ22 = ZIPQPRRZ22 * saisies.get('CODNDZ', 0)
IPQPRRZ31 = ZIPQPRRZ31 * saisies.get('CODNEZ', 0)
IPQPRRZ32 = ZIPQPRRZ32 * saisies.get('CODNEZ', 0)
IPQPRRZ41 = ZIPQPRRZ41 * saisies.get('CODNFZ', 0)
IPQPRRZ42 = ZIPQPRRZ42 * saisies.get('CODNFZ', 0)
IPQT2 = IMT12 - IPHQ2
IPQTS11 = ZIPQTS11 * saisies.get('CARTSNBAP1', 0)
IPQTS12 = ZIPQTS12 * saisies.get('CARTSNBAP1', 0)
IPQTS21 = ZIPQTS21 * saisies.get('CARTSNBAP2', 0)
IPQTS22 = ZIPQTS22 * saisies.get('CARTSNBAP2', 0)
IPQTS31 = ZIPQTS31 * saisies.get('CARTSNBAP3', 0)
IPQTS32 = ZIPQTS32 * saisies.get('CARTSNBAP3', 0)
IPQTS41 = ZIPQTS41 * saisies.get('CARTSNBAP4', 0)
IPQTS42 = ZIPQTS42 * saisies.get('CARTSNBAP4', 0)
IPQTSANT11 = ZIPQTSANT11 * saisies.get('CARTSNBAP1', 0)
IPQTSANT21 = ZIPQTSANT21 * saisies.get('CARTSNBAP2', 0)
IPQTSANT31 = ZIPQTSANT31 * saisies.get('CARTSNBAP3', 0)
IPQTSANT41 = ZIPQTSANT41 * saisies.get('CARTSNBAP4', 0)
IPQTSREMP11 = ZIPQTSREMP11 * saisies.get('REMPLANBP1', 0)
IPQTSREMP12 = ZIPQTSREMP12 * saisies.get('REMPLANBP1', 0)
IPQTSREMP21 = ZIPQTSREMP21 * saisies.get('REMPLANBP2', 0)
IPQTSREMP22 = ZIPQTSREMP22 * saisies.get('REMPLANBP2', 0)
IPQTSREMP31 = ZIPQTSREMP31 * saisies.get('REMPLANBP3', 0)
IPQTSREMP32 = ZIPQTSREMP32 * saisies.get('REMPLANBP3', 0)
IPQTSREMP41 = ZIPQTSREMP41 * saisies.get('REMPLANBP4', 0)
IPQTSREMP42 = ZIPQTSREMP42 * saisies.get('REMPLANBP4', 0)
IPQTSREMPANT11 = ZIPQTSREMPANT11 * saisies.get('REMPLANBP1', 0)
IPQTSREMPANT21 = ZIPQTSREMPANT21 * saisies.get('REMPLANBP2', 0)
IPQTSREMPANT31 = ZIPQTSREMPANT31 * saisies.get('REMPLANBP3', 0)
IPQTSREMPANT41 = ZIPQTSREMPANT41 * saisies.get('REMPLANBP4', 0)
IQNETEAJ31 = max(0, INETABAEAJ31 - IQNETDAJ31)
IQNETEAJ32 = max(0, INETABAEAJ32 - IQNETDAJ32)
ISNETEAJ31 = max(0, INETABAEAJ31 - ISNETDAJ31)
ISNETEAJ32 = max(0, INETABAEAJ32 - ISNETDAJ32)
ITOTDOM1 = IMETRO1 + IQUORAJ1 + INETABADAJ1 + INETABAEAJ1
ITOTDOM2 = IMETRO2 + IQUORAJ2 + INETABADAJ2 + INETABAEAJ2
ITOTDOM31 = IMETRO31 + IQUORAJ31 + INETABADAJ31 + INETABAEAJ31
ITOTDOM32 = IMETRO32 + IQUORAJ32 + INETABADAJ32 + INETABAEAJ32
LIG1522 = 1 - present(saisies.get('IND_TDR', 0)) * 1 - INDTXMIN * 1 - INDTXMOY * V_CR2 * LIG2
LIG1545 = 1 - present(saisies.get('IND_TDR', 0)) * INDTXMIN * is_positive(IND_REV) * LIG2
LIG3740 = is_positive(INDTXMIN) * LIG1 * is_positive(IND_REV) * 1 - is_positive(saisies.get('ANNUL2042', 0))
LIG74 = 1 - present(saisies.get('IND_TDR', 0)) * 1 - INDTXMIN * is_positive(LIG1500 + LIG1510 + LIG1500YT + LIG1510YT) * LIG2
LIG75 = 1 - INDTXMIN * 1 - INDTXMOY * 1 - LIG1500 + LIG1500YT * 1 - LIG1510 + LIG1510YT * INDREV1A8 * LIG2
LIGIBAEX = is_positive(REVQTOT) * LIG1 * LIG2 * 1 - INDTXMIN * 1 - INDTXMOY * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - LIG1522 * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
ABADO = round(min(ID11 * TX_RABDOM / 100 * saisies.get('PRODOM', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) * 1 - is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0))) + ABADO1 * is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0)))
ABADON1 = round(min(ID11 * TX_RABDOM / 100 * saisies.get('PRODOM', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) + round(min(ID11 * TX_RABGUY / 100 * saisies.get('PROGUY', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY))
ABAGU = round(min(ID11 * TX_RABGUY / 100 * saisies.get('PROGUY', 0) * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY)) * 1 - is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0))) + ABAGU1 * is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0)))
ADO1 = ABADON1 * 1 - is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0))) + ABATOT1 * is_positive(present(saisies.get('CODDAJ', 0)) + present(saisies.get('CODEAJ', 0)) + present(saisies.get('CODDBJ', 0)) + present(saisies.get('CODEBJ', 0)))
DOMABDB = max(PLAF_RABDOM - ABADO, 0) * is_positive(V_EAD) + max(PLAF_RABGUY - ABAGU, 0) * is_positive(V_EAG)
DOMDOM = max(DOMAVTO - DOMABDB, 0) * is_positive(V_EAD + V_EAG)
IBAEX = IPQT2 * 1 - INDTXMIN * 1 - INDTXMOY
IDANT11 = round(IPQANT1 * round(RI1 + REVQUOQHT) / round(RB01 + TONEQUO))
IDOM11 = max(ID11 - ADO1 * 1 - is_positive(INDCODDAJ) + ITOTDOM1 * is_positive(INDCODDAJ), IMI) * 1 - INDTXMOY + IMO * INDTXMOY * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
IDOM12 = max(ID12 - ADO2 * 1 - is_positive(INDCODDAJ) + ITOTDOM2 * is_positive(INDCODDAJ), IMI) * 1 - INDTXMOY + IMO * INDTXMOY * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
IDOM31 = is_positive(saisies.get('IND_TDR', 0)) * IDOM14 + 1 - is_positive(saisies.get('IND_TDR', 0)) * V_CR2 * IDOM11 + 1 - V_CR2 * ID11 - ADO31 * 1 - is_positive(INDCODDAJ) + ITOTDOM31 * is_positive(INDCODDAJ)
IDOM32 = is_positive(saisies.get('IND_TDR', 0)) * IDOM14 + 1 - is_positive(saisies.get('IND_TDR', 0)) * V_CR2 * IDOM12 + 1 - V_CR2 * ID12 - ADO32 * 1 - is_positive(INDCODDAJ) + ITOTDOM32 * is_positive(INDCODDAJ)
IDRS = INDTXMIN * IMI + INDTXMOY * IMO + 1 - INDTXMIN * 1 - INDTXMOY * max(0, IPHQ2 - ADO1)
IDRT = IDOM11
IMPFHQANT1 = 1 - is_positive(VARIPTEFN * is_positive(ART1731BIS) + saisies.get('IPTEFN', 0) * 1 - ART1731BIS) * EXO1 * round(IDANT11 * IPQANT01 / IPQANT1)
IMT11 = max(ID11 - ADO1, IMI) * 1 - INDTXMOY + IMO * INDTXMOY
IMTANT11 = max(IDANT11 - ADO1, IMI) * 1 - INDTXMOY + IMO * INDTXMOY
IMTANT12 = max(IDANT11, IMI) * 1 - INDTXMOY + IMO * INDTXMOY
IPHQ = round(IMT11 * IMPFHQ1 / ID11)
IPHQANT2 = round(IMTANT12 * IMPFHQANT1 / IDANT11)
IPQT = IMT11 - IPHQ
ITP = round(BPTP2 * TX225 / 100 + BPTPVT * TX19 / 100 + BPTP4 * TX30 / 100 + DOMITPD + DOMITPG + BPTP3 * TX16 / 100 + BPTP40 * TX41 / 100 + DOMDOM * is_positive(V_EAD + V_EAG) + BPTP18 * TX18 / 100 + BPTPSJ * TX19 / 100 + BPTP24 * TX24 / 100) * 1 - is_positive(saisies.get('IPVLOC', 0)) * 1 - is_positive(present(saisies.get('TAX1649', 0)) + present(saisies.get('RE168', 0)))
PLAFQF = is_positive(IS521 - PLANT - IS511) * is_positive(abs(TEFF)) * is_positive(IDRS) + 1 - is_positive(abs(TEFF))
RECOMP = max(0, IPHQANT2 - IPHQ2 * 1 - INDTXMIN * 1 - INDTXMOY) * 1 - is_positive(saisies.get('IPMOND', 0) + INDTEFF)
WTXMARJ = RB51 / NB1 * is_zero(PLAFQF) + NB2 * is_zero(1 - PLAFQF)
DEC11 = min(max(round(SEUIL_DECOTE1 * 1 - BOOL_0AM + SEUIL_DECOTE2 * BOOL_0AM - IDOM11), 0), IDOM11) * 1 - saisies.get('V_ANC_BAR', 0) + min(max(round(SEUIL_DECOTEA / 2 - IDOM11 / 2), 0), IDOM11) * saisies.get('V_ANC_BAR', 0) * 1 - V_CNR
DEC12 = min(max(round(SEUIL_DECOTE1 * 1 - BOOL_0AM + SEUIL_DECOTE2 * BOOL_0AM - IDOM12), 0), IDOM12) * 1 - saisies.get('V_ANC_BAR', 0) + min(max(round(SEUIL_DECOTEA / 2 - IDOM12 / 2), 0), IDOM12) * saisies.get('V_ANC_BAR', 0) * 1 - V_CNR
DEC31 = min(max(round(SEUIL_DECOTE1 * 1 - BOOL_0AM + SEUIL_DECOTE2 * BOOL_0AM - IDOM31), 0), IDOM31) * 1 - saisies.get('V_ANC_BAR', 0) + min(max(round(SEUIL_DECOTEA / 2 - IDOM31 / 2), 0), IDOM31) * saisies.get('V_ANC_BAR', 0) * 1 - V_CNR
DEC32 = min(max(round(SEUIL_DECOTE1 * 1 - BOOL_0AM + SEUIL_DECOTE2 * BOOL_0AM - IDOM32), 0), IDOM32) * 1 - saisies.get('V_ANC_BAR', 0) + min(max(round(SEUIL_DECOTEA / 2 - IDOM32 / 2), 0), IDOM32) * saisies.get('V_ANC_BAR', 0) * 1 - V_CNR
IAD31 = IDOM31 - DEC31 * 1 - is_positive(V_CR2 + saisies.get('IPVLOC', 0)) + is_positive(V_CR2 + saisies.get('IPVLOC', 0)) * IDOM31
IAD32 = IDOM32 - DEC32 * 1 - is_positive(V_CR2 + saisies.get('IPVLOC', 0)) + is_positive(V_CR2 + saisies.get('IPVLOC', 0)) * IDOM32
IBM33 = IAD31 + ITP + REI
IDEC = DEC11 * 1 - is_positive(V_CR2 + V_CNR + saisies.get('IPVLOC', 0))
IDRS3 = IDRT
IDRSANT = INDTXMIN * IMI + INDTXMOY * IMO + 1 - INDTXMIN * 1 - INDTXMOY * max(0, IPHQANT2 - ADO1)
IMPIM3 = IAD31
IPROP = ITP
LIG1740 = is_positive(RECOMP) * LIG2
LIG1820 = is_positive(ABADO + ABAGU + RECOMP) * LIG2
RCOTFOR_1 = max(min(round(ACOTFOR_R * TX76 / 100), IDOM11 - DEC11), 0)
RREPA_1 = max(min(RAA, IDOM11 - DEC11 - RCOTFOR_1), 0)
ANG3 = IAD32 - IAD31
CODMESGOUV = is_positive(NBPT - 10) + is_positive(LIG74 + LIGTTPVQ) + is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)) + is_positive(saisies.get('CESSASSV', 0) + saisies.get('CESSASSC', 0) + saisies.get('PCAPTAXV', 0) + saisies.get('PCAPTAXC', 0) + saisies.get('LOYELEV', 0) + 0) + is_positive(IPROP + AVFISCOPTER + saisies.get('IPREP', 0) + saisies.get('IPPRICORSE', 0))
MESGOUV = 1 * is_zero(IDRS3 - IDEC) * positif_ou_nul(RNI - RNIBAR13) + 2 * is_positive(IDRS3 - IDEC + 0) * is_positive(IDEC + 0) * 1 - is_positive(CODMESGOUV) * 1 - is_positive(RNIBAR13 - RNI) + 3 * is_positive(CODMESGOUV + is_positive(RNIBAR13 - RNI) + 1 - is_positive(is_zero(IDRS3 - IDEC) * positif_ou_nul(RNI - RNIBAR13) + is_positive(IDRS3 - IDEC + 0) * is_positive(IDEC + 0)))
MESGOUV2 = 4 * is_zero(IDRS3 - IDEC) * positif_ou_nul(RNI - RNIBAR13) + 5 * is_positive(IDRS3 - IDEC + 0) * is_positive(IDEC + 0) + 6 * is_positive(RNIBAR13 - RNI) * 1 - is_positive(CODMESGOUV) + 7 * is_positive(CODMESGOUV + 1 - is_positive(is_zero(IDRS3 - IDEC) * positif_ou_nul(RNI - RNIBAR13) + is_positive(IDRS3 - IDEC + 0) * is_positive(IDEC + 0) + is_positive(RNIBAR13 - RNI)))
RAIDE_1 = max(min(RAD, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1), 0)
RCOTFOR = max(0, RCOTFOR_1 * 1 - ART1731BIS + min(RCOTFOR_1, max(RCOTFOR_P + RCOTFORP2, RCOTFOR1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RDIFAGRI_1 = max(min(RAGRI, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1), 0)
RFORET_1 = max(min(RAFORET, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1), 0)
RREPA = RREPA_1 * 1 - ART1731BIS + min(RREPA_1, max(RREPA_P + RREPAP2, RREPA1731 + 0) * 1 - PREM8_11) * ART1731BIS
ACP3 = max(0, sum([min(round(saisies.get('CHENF1', 0) * TX_DPAEAV / 100), SEUIL_AVMAXETU), min(round(saisies.get('CHENF2', 0) * TX_DPAEAV / 100), SEUIL_AVMAXETU), min(round(saisies.get('CHENF3', 0) * TX_DPAEAV / 100), SEUIL_AVMAXETU), min(round(saisies.get('CHENF4', 0) * TX_DPAEAV / 100), SEUIL_AVMAXETU)]) - ANG3) * 1 - is_positive(V_CR2 + saisies.get('IPVLOC', 0)) * is_positive(ANG3) * is_positive(IMPIM3)
IAMD3 = IBM33 - min(ACP3, IMPIM3)
KIR = IAMD3
RAIDE = max(RAIDE_1 * 1 - ART1731BIS + min(RAIDE_1, max(RAIDE_P + RAIDEP2, RAIDE1731 + 0) * 1 - PREM8_11) * ART1731BIS, 0)
RDIFAGRI = max(0, RDIFAGRI_1 * 1 - ART1731BIS + min(RDIFAGRI_1, max(RDIFAGRI_P + RDIFAGRIP2, RDIFAGRI1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RFIPDOM_1 = max(min(RFIPDOMCOM, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1), 0)
RFORET = max(0, RFORET_1 * 1 - ART1731BIS + min(RFORET_1, max(RFORET_P + RFORETP2, RFORET1731 + 0) * 1 - PREM8_11) * ART1731BIS)
IKIRN = KIR
RFIPC_1 = max(min(RFIPCORSE, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1), 0)
RFIPDOM = max(0, RFIPDOM_1 * 1 - ART1731BIS + min(RFIPDOM_1, max(RFIPDOM_P + RFIPDOMP2, RFIPDOM1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCINE_1 = max(min(RRCN, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1 - RFIPC_1), 0)
RFIPC = max(0, RFIPC_1 * 1 - ART1731BIS + min(RFIPC_1, max(RFIPC_P + RFIPCP2, RFIPC1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RRESTIMOD = max(min(RESTIMOD * TX40 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1), 0)
RRESTIMO_1 = max(min(RETRESTIMO, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1), 0)
RSOCREPR_1 = max(min(RSOCREP, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1), 0)
RCINE = max(0, RCINE_1 * 1 - ART1731BIS + min(RCINE_1, max(RCINE_P + RCINEP2, RCINE1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RRESTIMO = max(0, RRESTIMO_1 * 1 - ART1731BIS + min(RRESTIMO_1, max(RRESTIMO_P + RRESTIMOP2, RRESTIMO1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RRESTIMOB = max(min(RESTIMOB * TX36 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMOD), 0)
RRESTIMOC = max(min(RESTIMOC * TX30 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMOD - RRESTIMOB), 0)
RRESTIMOF = max(min(RESTIMOF * TX30 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMOD - RRESTIMOB - RRESTIMOC), 0)
RRESTIMOY = max(min(RESTIMOY * TX30 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMOD - RRESTIMOB - RRESTIMOC - RRESTIMOC), 0)
RRPRESCOMP_1 = max(min(RPRESCOMP, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1 - RSOCREPR_1), 0)
RSOCREPR = max(0, RSOCREPR_1 * 1 - ART1731BIS + min(RSOCREPR_1, max(RSOCREPR_P + RSOCREPRP2, RSOCREPR1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RHEBE_1 = max(min(RAH, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1 - RSOCREPR_1 - RRPRESCOMP_1), 0)
RPRESCOMPREP = max(min(RPRESCOMP, IDOM11 - DEC11 - RCOTFOR - RREPA - RFIPDOM - RAIDE - RDIFAGRI - RFORET - RFIPC - RCINE - RRESTIMO - RSOCREPR), 0) * is_positive(saisies.get('RDPRESREPORT', 0))
RRESTIMOA = max(min(RESTIMOA * TX_RESTIMO1 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMOD - RRESTIMOB - RRESTIMOC - RRESTIMOC - RRESTIMOY), 0)
RRESTIMOE = max(min(RESTIMOE * TX22 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMOD - RRESTIMOB - RRESTIMOC - RRESTIMOC - RRESTIMOY - RRESTIMOA), 0)
RRESTIMOX = max(min(RESTIMOX * TX22 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RCINE_1 - RRESTIMOD - RRESTIMOB - RRESTIMOC - RRESTIMOC - RRESTIMOY - RRESTIMOA - RRESTIMOE), 0)
RRPRESCOMP = max(0, RRPRESCOMP_1 * 1 - ART1731BIS + min(RRPRESCOMP_1, max(RRPRESCOMP_P + RRPRESCOMPP2, RRPRESCOMP1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RSURV_1 = max(min(RRS, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1 - RSOCREPR_1 - RRPRESCOMP_1 - RHEBE_1), 0)
A12RRESTIMO = round(max(min(RRESTIMO, RRESTIMOD + RRESTIMOB + RRESTIMOC + RRESTIMOF + RRESTIMOA + RRESTIMOE), 0)) * 1 - V_CNR
RHEBE = max(0, RHEBE_1 * 1 - ART1731BIS + min(RHEBE_1, max(RHEBE_P + RHEBEP2, RHEBE1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RINNO_1 = max(min(RFCPI, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1 - RSOCREPR_1 - RRPRESCOMP_1 - RHEBE - RSURV_1), 0)
RPRESCOMPAN = RRPRESCOMP * 1 - is_positive(saisies.get('RDPRESREPORT', 0))
RRESTIMOXY = max(RRESTIMO - A12RRESTIMO, 0) * 1 - V_CNR
RSOUFIP_1 = max(min(RFIP, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1 - RSOCREPR_1 - RRPRESCOMP_1 - RHEBE_1 - RSURV_1 - RINNO_1), 0)
RSURV = max(0, RSURV_1 * 1 - ART1731BIS + min(RSURV_1, max(RSURV_P + RSURVP2, RSURV1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RINNO = max(0, RINNO_1 * 1 - ART1731BIS + min(RINNO_1, max(RINNO_P + RINNOP2, RINNO1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RRIRENOV_1 = max(min(RENOV, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1 - RSOCREPR_1 - RRPRESCOMP_1 - RHEBE_1 - RSURV_1 - RINNO_1 - RSOUFIP_1), 0)
RSOUFIP = max(0, RSOUFIP_1 * 1 - ART1731BIS + min(RSOUFIP_1, max(RSOUFIP_P + RSOUFIPP2, RSOUFIP1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RRIRENOV = max(0, RRIRENOV_1 * 1 - ART1731BIS + min(RRIRENOV_1, max(RRIRENOV_P + RRIRENOVP2, RRIRENOV1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RRI1 = IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV
RRI1_1 = IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV * 1 - ART1731BIS + min(IDOM111731 + 0, IDOM11) - min(DEC111731 + 0, DEC11) - min(RCOTFOR1731 + 0, RCOTFOR) - min(RREPA1731 + 0, RREPA) - min(RFIPDOM1731 + 0, RFIPDOM) - min(RAIDE1731 + 0, RAIDE) - min(RDIFAGRI1731 + 0, RDIFAGRI) - min(RFORET1731 + 0, RFORET) - min(RFIPC1731 + 0, RFIPC) - min(RCINE1731 + 0, RCINE) - min(RRESTIMO1731 + 0, RRESTIMO) - min(RSOCREPR1731 + 0, RSOCREPR) - min(RRPRESCOMP1731 + 0, RRPRESCOMP) - min(RHEBE1731 + 0, RHEBE) - min(RSURV1731 + 0, RSURV) - min(RINNO1731 + 0, RINNO) - min(RSOUFIP1731 + 0, RSOUFIP) - min(RRIRENOV1731 + 0, RRIRENOV) * ART1731BIS
NINVRETOA = max(min(saisies.get('INVOMLOGOA', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0)), 0) * 1 - V_CNR
NINVRETOH = max(min(saisies.get('INVOMLOGOH', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0)), 0) * 1 - V_CNR
NINVRETOL = max(min(saisies.get('INVOMLOGOL', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0)), 0) * 1 - V_CNR
NINVRETOO = max(min(saisies.get('INVOMLOGOO', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0)), 0) * 1 - V_CNR
NINVRETOS = max(min(saisies.get('INVOMLOGOS', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0)), 0) * 1 - V_CNR
NINVRETQB = max(min(saisies.get('INVLOG2008', 0), RRI1), 0) * 1 - V_CNR
NINVRETQC = max(min(saisies.get('INVLGDEB2009', 0), RRI1 - saisies.get('INVLOG2008', 0)), 0) * 1 - V_CNR
NINVRETQL = max(min(saisies.get('INVLGAUTRE', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0)), 0) * 1 - V_CNR
NINVRETQM = max(min(saisies.get('INVLGDEB2010', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL), 0) * 1 - V_CNR
NINVRETQT = max(min(saisies.get('INVLGDEB', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0)), 0) * 1 - V_CNR
RLOG01 = max(min(saisies.get('INVLOG2008', 0), RRI1), 0) * 1 - V_CNR
RLOG02 = max(min(saisies.get('INVLGDEB2009', 0), RRI1 - RLOG01), 0) * 1 - V_CNR
RLOG03 = max(min(saisies.get('INVLGDEB', 0), RRI1 - RLOG01 - RLOG02), 0) * 1 - V_CNR
RLOG04 = max(min(saisies.get('INVOMLOGOA', 0), RRI1 - RLOG01 - RLOG02 - RLOG03), 0) * 1 - V_CNR
RLOG05 = max(min(saisies.get('INVOMLOGOH', 0), RRI1 - RLOG01 - RLOG02 - RLOG03 - RLOG04), 0) * 1 - V_CNR
RLOG06 = max(min(saisies.get('INVOMLOGOL', 0), RRI1 - RLOG01 - RLOG02 - RLOG03 - RLOG04 - RLOG05), 0) * 1 - V_CNR
RLOG07 = max(min(saisies.get('INVOMLOGOO', 0), RRI1 - RLOG01 - RLOG02 - RLOG03 - RLOG04 - RLOG05 - RLOG06), 0) * 1 - V_CNR
RLOG08 = max(min(saisies.get('INVOMLOGOS', 0), RRI1 - RLOG01 - RLOG02 - RLOG03 - RLOG04 - RLOG05 - RLOG06 - RLOG07), 0) * 1 - V_CNR
RLOGDOM_1 = 1 - saisies.get('V_INDTEO', 0) * sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33, RLOG34, RLOG35, RLOG36, RLOG37, RLOG38, RLOG39]) + saisies.get('V_INDTEO', 0) * RLOG01 + RLOG02 + RLOG03 + RLOG04 + RLOG05 + RLOG06 + RLOG07 + RLOG08
INVRETQB = NINVRETQB * 1 - V_CNR
INVRETQC = NINVRETQC * 1 - V_CNR
INVRETQT = NINVRETQT * 1 - V_CNR
NINVRETQD = max(min(saisies.get('INVLOG2009', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM), 0) * 1 - V_CNR
RLOGDOM = RLOGDOM_1 * 1 - ART1731BIS + min(RLOGDOM_1, max(RLOGDOM_P + RLOGDOMP2, RLOGDOM1731 + 0) * 1 - PREM8_11) * ART1731BIS
NINVRETOB = max(min(saisies.get('INVOMLOGOB', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD), 0) * 1 - V_CNR
NINVRETOC = max(min(saisies.get('INVOMLOGOC', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB), 0) * 1 - V_CNR
NINVRETOI = max(min(saisies.get('INVOMLOGOI', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC), 0) * 1 - V_CNR
NINVRETOJ = max(min(saisies.get('INVOMLOGOJ', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI), 0) * 1 - V_CNR
NINVRETOK = max(min(saisies.get('INVOMLOGOK', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ), 0) * 1 - V_CNR
NINVRETOM = max(min(saisies.get('INVOMLOGOM', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK), 0) * 1 - V_CNR
NINVRETON = max(min(saisies.get('INVOMLOGON', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM), 0) * 1 - V_CNR
NINVRETOP = max(min(saisies.get('INVOMLOGOP', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON), 0) * 1 - V_CNR
NINVRETOQ = max(min(saisies.get('INVOMLOGOQ', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP), 0) * 1 - V_CNR
NINVRETOR = max(min(saisies.get('INVOMLOGOR', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ), 0) * 1 - V_CNR
NINVRETOT = max(min(saisies.get('INVOMLOGOT', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR), 0) * 1 - V_CNR
NINVRETOU = max(min(saisies.get('INVOMLOGOU', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT), 0) * 1 - V_CNR
NINVRETOV = max(min(saisies.get('INVOMLOGOV', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU), 0) * 1 - V_CNR
NINVRETOW = max(min(saisies.get('INVOMLOGOW', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV), 0) * 1 - V_CNR
RCREAT_1 = max(min(RCREATEUR + RCREATEURHANDI, RRI1 - RLOGDOM), 0)
RINVDOMTOMLG = RLOGDOM
NINVRETOD = max(min(saisies.get('CODHOD', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW), 0) * 1 - V_CNR
NINVRETOE = max(min(saisies.get('CODHOE', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD), 0) * 1 - V_CNR
NINVRETOF = max(min(saisies.get('CODHOF', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE), 0) * 1 - V_CNR
NINVRETOG = max(min(saisies.get('CODHOG', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF), 0) * 1 - V_CNR
NINVRETOX = max(min(saisies.get('CODHOX', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG), 0) * 1 - V_CNR
NINVRETOY = max(min(saisies.get('CODHOY', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX), 0) * 1 - V_CNR
NINVRETOZ = max(min(saisies.get('CODHOZ', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY), 0) * 1 - V_CNR
NINVRETUA = max(min(saisies.get('CODHUA', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ), 0) * 1 - V_CNR
NINVRETUB = max(min(saisies.get('CODHUB', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ - NINVRETUA), 0) * 1 - V_CNR
NINVRETUC = max(min(saisies.get('CODHUC', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ - NINVRETUA - NINVRETUB), 0) * 1 - V_CNR
NINVRETUD = max(min(saisies.get('CODHUD', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ - NINVRETUA - NINVRETUB - NINVRETUC), 0) * 1 - V_CNR
NINVRETUE = max(min(saisies.get('CODHUE', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ - NINVRETUA - NINVRETUB - NINVRETUC - NINVRETUD), 0) * 1 - V_CNR
NINVRETUF = max(min(saisies.get('CODHUF', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ - NINVRETUA - NINVRETUB - NINVRETUC - NINVRETUD - NINVRETUE), 0) * 1 - V_CNR
NINVRETUG = max(min(saisies.get('CODHUG', 0), RRI1 - saisies.get('INVLOG2008', 0) - saisies.get('INVLGDEB2009', 0) - saisies.get('INVLGDEB', 0) - saisies.get('INVOMLOGOA', 0) - saisies.get('INVOMLOGOH', 0) - saisies.get('INVOMLOGOL', 0) - saisies.get('INVOMLOGOO', 0) - saisies.get('INVOMLOGOS', 0) - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ - NINVRETUA - NINVRETUB - NINVRETUC - NINVRETUD - NINVRETUE - NINVRETUF), 0) * 1 - V_CNR
NRLOGDOM = saisies.get('INVLOG2008', 0) + saisies.get('INVLGDEB2009', 0) + saisies.get('INVLGDEB', 0) + saisies.get('INVOMLOGOA', 0) + saisies.get('INVOMLOGOH', 0) + saisies.get('INVOMLOGOL', 0) + saisies.get('INVOMLOGOO', 0) + saisies.get('INVOMLOGOS', 0) + NINVRETQL + NINVRETQM + NINVRETQD + NINVRETOB + NINVRETOC + NINVRETOI + NINVRETOJ + NINVRETOK + NINVRETOM + NINVRETON + NINVRETOP + NINVRETOQ + NINVRETOR + NINVRETOT + NINVRETOU + NINVRETOV + NINVRETOW + NINVRETOD + NINVRETOE + NINVRETOF + NINVRETOG + NINVRETOX + NINVRETOY + NINVRETOZ + NINVRETUA + NINVRETUB + NINVRETUC + NINVRETUD + NINVRETUE + NINVRETUF + NINVRETUG * 1 - V_CNR
RCREAT = max(0, RCREAT_1 * 1 - ART1731BIS + min(RCREAT_1, max(RCREAT_P + RCREATP2, RCREAT1731 + 0) * 1 - PREM8_11) * ART1731BIS)
NRCREAT = max(min(RCREATEUR + RCREATEURHANDI, RRI1 - NRLOGDOM), 0)
RCOMP_1 = max(min(RFC, RRI1 - RLOGDOM - RCREAT), 0)
NRCOMP = max(min(RFC, RRI1 - NRLOGDOM - NRCREAT), 0)
NRRETU = max(min(RETUD, RRI1 - NRLOGDOM - NRCREAT - NRCOMP), 0)
RCOMP = max(0, RCOMP_1 * 1 - ART1731BIS + min(RCOMP_1, max(RCOMP_P + RCOMPP2, RCOMP1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RRETU_1 = max(min(RETUD, RRI1 - RLOGDOM - RCREAT - RCOMP), 0)
NRDONS = max(min(RON, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU), 0)
NRDUFREPFI = max(min(ADUFREPFI, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS), 0)
RRETU = max(0, RRETU_1 * 1 - ART1731BIS + min(RRETU_1, max(RRETU_P + RRETUP2, RRETU1731 + 0) * 1 - PREM8_11) * ART1731BIS)
LIG2040 = is_positive(DNBE + RNBE + RRETU) * LIG1 * LIG2
LIG98B = is_positive(LIG80 + LIGFIPC + LIGFIPDOM + present(DAIDE) + LIGDUFLOT + LIGPINEL + LIG7CY + LIGREDAGRI + LIGFORET + LIGRESTIMO + LIGCINE + LIGRSOCREPR + LIGCOTFOR + present(saisies.get('PRESCOMP2000', 0)) + present(saisies.get('RDPRESREPORT', 0)) + present(saisies.get('FCPI', 0)) + present(DSOUFIP) + LIGRIRENOV + present(DFOREST) + present(DHEBE) + present(DSURV) + LIGLOGDOM + LIGREPTOUR + LIGLOCHOTR + LIGREPHA + LIGCREAT + LIG1780 + LIG2040 + LIG81 + LIGLOGSOC + LIGDOMSOC1 + sum([LIGCELLA, LIGCELLB, LIGCELLE, LIGCELLM, LIGCELLC, LIGCELLD, LIGCELLS, LIGCELLF, LIGCELLZ, LIGCELLN, LIGCELLT, LIGCELLX]) + LIGCELMG + LIGCELMH + sum([LIGCELHA, LIGCELHB, LIGCELHD, LIGCELHE, LIGCELHF, LIGCELHH, LIGCELHG, LIGCELHL, LIGCELHM, LIGCELHS, LIGCELHR, LIGCELHU, LIGCELHT, LIGCELHZ, LIGCELHX, LIGCELHW, LIGCELHV]) + sum([LIGCELGU, LIGCELGX, LIGCELGT, LIGCELGS, LIGCELGW, LIGCELGP, LIGCELGL, LIGCELGV, LIGCELGK, LIGCELGJ]) + sum([LIGCELYA, LIGCELYB, LIGCELYC, LIGCELYD, LIGCELYE, LIGCELYF, LIGCELYG, LIGCELYH, LIGCELYI, LIGCELYJ, LIGCELYK, LIGCELYL]) + LIGCELHNO + LIGCELHJK + LIGCELNQ + LIGCELCOM + LIGCELNBGL + LIGCEL + LIGCELJP + LIGCELJBGL + LIGCELJOQR + LIGCEL2012 + LIGCELFD + LIGCELFABC + LIGILMPA + LIGILMPB + LIGILMPC + LIGILMPD + LIGILMPE + LIGILMOA + LIGILMOB + LIGILMOC + LIGILMOD + LIGILMOE + LIGREDMEUB + LIGREDREP + LIGILMIX + LIGILMIY + LIGINVRED + LIGILMIH + LIGILMJC + LIGILMIZ + LIGILMJI + LIGILMJS + LIGMEUBLE + LIGPROREP + LIGREPNPRO + LIGMEUREP + LIGILMIC + LIGILMIB + LIGILMIA + LIGILMJY + LIGILMJX + LIGILMJW + LIGILMJV + LIGRESIMEUB + LIGRESINEUV + LIGRESIVIEU + LIGLOCIDEFG + LIGCODJTJU + LIGCODOU + present(DNOUV) + LIGLOCENT + LIGCOLENT + LIGRIDOMPRO + LIGPATNAT1 + LIGPATNAT2 + LIGPATNAT3 + LIGPATNAT4) * LIG1 * LIG2
LIGRED = LIG98B * 1 - is_positive(RIDEFRI) * LIG1 * LIG2
LIGREDYT = LIG98B * is_positive(RIDEFRI) * LIG1 * LIG2
NRDUFLOGIH = max(min(RDUFLO_GIH, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI), 0)
RDONS_1 = max(min(RON, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU), 0)
NRDUFLOEKL = max(min(RDUFLO_EKL, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH), 0)
NRPIQABCD = max(min(RPI_QABCD, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL), 0)
RDONS = max(0, RDONS_1 * 1 - ART1731BIS + min(RDONS_1, max(RDONS_P + RDONSP2, RDONS1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RDUFREPFI = max(0, min(ADUFREPFI, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS))
NRNOUV = max(min(RSN, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL - NRPIQABCD), 0)
NRPLAFPME = max(min(saisies.get('COD7CY', 0), RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL - NRPIQABCD - NRNOUV), 0)
RDUFLOGIH_1 = max(0, min(RDUFLO_GIH, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFREPFI))
NRFOR = max(min(RFOREST, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL - NRPIQABCD - NRNOUV - NRPLAFPME), 0)
NRTOURREP = max(min(round(ATOURREP * TX_REDIL25 / 100), RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL - NRPIQABCD - NRNOUV - NRPLAFPME - NRFOR), 0)
RDUFLOGIH = max(0, RDUFLOGIH_1 * 1 - ART1731BIS + min(RDUFLOGIH_1, max(RDUFLOGIH_P + RDUFLOGIHP2, RDUFLOGIH1731 + 0) * 1 - PREM8_11) * ART1731BIS)
NRTOUHOTR = max(min(RIHOTR, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL - NRPIQABCD - NRNOUV - NRPLAFPME - NRFOR - NRTOURREP), 0) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)))
NRTOUREPA = max(min(round(ATOUREPA * TX_REDIL20 / 100), RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL - NRPIQABCD - NRNOUV - NRPLAFPME - NRFOR - NRTOURREP - NRTOUHOTR), 0)
RDUFLOEKL_1 = max(0, min(RDUFLO_EKL, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFREPFI - RDUFLOGIH))
NRRI2 = NRCREAT + NRCOMP + NRRETU + NRDONS + NRDUFREPFI + NRDUFLOGIH + NRDUFLOEKL + NRPIQABCD + NRNOUV + NRPLAFPME + NRFOR + NRTOURREP + NRTOUHOTR + NRTOUREPA
RDUFLOEKL = max(0, RDUFLOEKL_1 * 1 - ART1731BIS)
RDUFLOTOT = RDUFREPFI + RDUFLOGIH + RDUFLOEKL
RPIQABCD_1 = max(0, min(RPI_QABCD, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFREPFI - RDUFLOGIH - RDUFLOEKL))
NRCELRREDLA = max(min(saisies.get('CELRREDLA', 0), RRI1 - NRLOGDOM - NRRI2), 0)
NRCELRREDLB = max(min(saisies.get('CELRREDLB', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELRREDLA), 0)
NRCELRREDLC = max(min(saisies.get('CELRREDLC', 0), RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN])), 0)
NRCELRREDLD = max(min(saisies.get('CELRREDLD', 0), RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC])), 0)
NRCELRREDLE = max(min(saisies.get('CELRREDLE', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELRREDLA - NRCELRREDLB), 0)
NRCELRREDLF = max(min(saisies.get('CELRREDLF', 0), RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT])), 0)
NRCELRREDLM = max(min(saisies.get('CELRREDLM', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELRREDLA - NRCELRREDLB - NRCELRREDLE), 0)
NRCELRREDLN = max(min(saisies.get('CELRREDLN', 0), RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM])), 0)
NRCELRREDLS = max(min(saisies.get('CELRREDLS', 0), RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD])), 0)
NRCELRREDLT = max(min(saisies.get('CELRREDLT', 0), RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS])), 0)
NRCELRREDLX = max(min(saisies.get('CELRREDLX', 0), RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ])), 0)
NRCELRREDLZ = max(min(saisies.get('CELRREDLZ', 0), RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF])), 0)
NRCELRREDMG = max(min(saisies.get('CELRREDMG', 0), RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX])), 0)
NRCELRREDMH = max(min(saisies.get('CELRREDMH', 0), RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG), 0)
RPIQABCD = max(0, RPIQABCD_1 * 1 - ART1731BIS)
NRCELHM = max(min(RCEL_HM, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA])), 0)
NRCELREPGJ = max(min(ACELREPGJ, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK])), 0)
NRCELREPGK = max(min(ACELREPGK, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV])), 0)
NRCELREPGL = max(min(ACELREPGL, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP])), 0)
NRCELREPGP = max(min(ACELREPGP, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW])), 0)
NRCELREPGS = max(min(ACELREPGS, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT])), 0)
NRCELREPGT = max(min(ACELREPGT, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX])), 0)
NRCELREPGU = max(min(ACELREPGU, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB])), 0)
NRCELREPGV = max(min(ACELREPGV, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL])), 0)
NRCELREPGW = max(min(ACELREPGW, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS])), 0)
NRCELREPGX = max(min(ACELREPGX, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU])), 0)
NRCELREPHA = max(min(ACELREPHA, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB])), 0)
NRCELREPHB = max(min(ACELREPHB, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG])), 0)
NRCELREPHD = max(min(ACELREPHD, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE])), 0)
NRCELREPHE = max(min(ACELREPHE, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF])), 0)
NRCELREPHF = max(min(ACELREPHF, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV])), 0)
NRCELREPHG = max(min(ACELREPHG, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH])), 0)
NRCELREPHH = max(min(ACELREPHH, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD])), 0)
NRCELREPHR = max(min(RCELREP_HR, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS])), 0)
NRCELREPHS = max(min(RCELREP_HS, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH), 0)
NRCELREPHT = max(min(RCELREP_HT, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU])), 0)
NRCELREPHU = max(min(RCELREP_HU, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR])), 0)
NRCELREPHV = max(min(RCELREP_HV, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW])), 0)
NRCELREPHW = max(min(RCELREP_HW, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX])), 0)
NRCELREPHX = max(min(RCELREP_HX, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ])), 0)
NRCELREPHZ = max(min(RCELREP_HZ, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT])), 0)
NRCELREPYA = max(min(ACELREPYA, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI])), 0)
NRCELREPYB = max(min(ACELREPYB, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC])), 0)
NRCELREPYC = max(min(ACELREPYC, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ])), 0)
NRCELREPYD = max(min(ACELREPYD, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE])), 0)
NRCELREPYE = max(min(ACELREPYE, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK])), 0)
NRCELREPYF = max(min(ACELREPYF, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG])), 0)
NRCELREPYG = max(min(ACELREPYG, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL])), 0)
NRCELREPYH = max(min(ACELREPYH, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ])), 0)
NRCELREPYI = max(min(ACELREPYI, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB])), 0)
NRCELREPYJ = max(min(ACELREPYJ, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD])), 0)
NRCELREPYK = max(min(ACELREPYK, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF])), 0)
NRCELREPYL = max(min(ACELREPYL, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH])), 0)
RPINELTOT = RPIQABCD
RSNCL = max(0, min(RSN_CL, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT))
RSNCM = max(0, min(RSN_CM, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL))
RSNCN = max(0, min(RSN_CN, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL - RSNCM))
NRCELHL = max(min(RCEL_HL, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM), 0)
NRCELHNO = max(min(RCEL_HNO, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL), 0)
RNOUV_1 = max(min(RSN, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT), 0)
RSNCC = max(0, min(RSN_CC, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL - RSNCM - RSNCN))
RSNCU = max(0, min(RSN_CU, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL - RSNCM - RSNCN - RSNCC))
NRCELHJK = max(min(RCEL_HJK, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO), 0)
NRCELNQ = max(min(RCEL_NQ, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK), 0)
RNOUV = RNOUV_1 * 1 - ART1731BIS + min(RNOUV_1, max(RNOUV_P + RNOUVP2, RNOUV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
RPLAFREPME4 = max(min(APLAFREPME4, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV), 0)
RSNCQ = max(0, min(RSN_CQ, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL - RSNCM - RSNCN - RSNCC - RSNCU))
RSNCR = max(0, min(RSN_CR, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL - RSNCM - RSNCN - RSNCC - RSNCU - RSNCQ))
A9RFOR = max(0, min(BA9RFOR, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4)) * 1 - ART1731BIS
NRCELNBGL = max(min(RCEL_NBGL, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ), 0)
RFOR_1 = max(min(RFOREST, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4), 0)
RPENTCY = RPLAFREPME4
RSNCF = max(0, min(RSN_CF, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL - RSNCM - RSNCN - RSNCC - RSNCU - RSNCQ - RSNCR))
A10RFOR = max(0, min(BA10RFOR, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - A9RFOR)) * 1 - ART1731BIS
A11RFOR = max(0, min(BA11RFOR, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - A9RFOR - A10RFOR)) * 1 - ART1731BIS
A12RFOR = max(0, min(BA12RFOR, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - A9RFOR - A10RFOR - A11RFOR)) * 1 - ART1731BIS
A13UXI = max(0, min(BA13UXI, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - A9RFOR - A10RFOR - A11RFOR - A12RFOR)) * 1 - ART1731BIS
A14UN = max(0, min(BA14UN, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - A9RFOR - A10RFOR - A11RFOR - A12RFOR - A13UXI)) * 1 - ART1731BIS
NRCELCOM = max(min(RCEL_COM, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL), 0)
PLAFREPETOT = round(max(0, RSNCR + RSNCF + RPLAFREPME4 - 10000)) * 1 - V_CNR * is_positive(AVFISCOPTER)
PLAFREPSN4 = round(max(0, RSNCF - 10000)) * 1 - V_CNR * is_positive(AVFISCOPTER)
RFOR = max(0, RFOR_1 * 1 - ART1731BIS + min(RFOR_1, max(RFOR_P + RFORP2, RFOR1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RTOURREP_1 = max(min(round(ATOURREP * TX_REDIL25 / 100), RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR), 0)
A13RFOR = A13UXI + A14UN * 1 - ART1731BIS
LIGPLAFRSN4 = is_positive(PLAFREPSN4) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
NRCEL = max(min(RCEL_2011, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM), 0)
NRCELJP = max(min(RCEL_JP, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM - NRCEL), 0)
PLAFREPSN3 = round(max(0, PLAFREPETOT - PLAFREPSN4))
RPLAFPME13 = PLAFREPSN4 + PLAFREPSN3
RTOURREP = RTOURREP_1 * 1 - ART1731BIS + min(RTOURREP_1, max(RTOURREP_P + RTOURREPP2, RTOURREP1731 + 0) * 1 - PREM8_11) * ART1731BIS
LIGPLAFRSN = is_positive(PLAFREPSN4 + PLAFREPSN3) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGPLAFRSN3 = is_positive(PLAFREPSN3) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
NRCELJBGL = max(min(RCEL_JBGL, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM - NRCEL - NRCELJP), 0)
NRCELJOQR = max(min(RCEL_JOQR, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM - NRCEL - NRCELJP - NRCELJBGL), 0)
RTOUHOTR_1 = max(min(RIHOTR, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP), 0) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)))
RTOUR = RTOURREP
NRCEL2012 = max(min(RCEL_2012, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM - NRCEL - NRCELJP - NRCELJBGL - NRCELJOQR), 0)
NRCELFD = max(min(RCEL_FD, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM - NRCEL - NRCELJP - NRCELJBGL - NRCELJOQR - NRCEL2012), 0)
RTOUHOTR = RTOUHOTR_1 * 1 - ART1731BIS + min(RTOUHOTR_1, max(RTOUHOTR_P + RTOUHOTRP2, RTOUHOTR1731 + 0) * 1 - PREM8_11) * ART1731BIS
RTOUREPA_1 = max(min(round(ATOUREPA * TX_REDIL20 / 100), RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP - RTOUHOTR), 0)
NRCELFABC = max(min(RCEL_FABC, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM - NRCEL - NRCELJP - NRCELJBGL - NRCELJOQR - NRCEL2012 - NRCELFD), 0)
NRCELTOT = sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) + NRCELRREDMG + NRCELRREDMH + sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) + sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) + sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) + NRCELHM + NRCELHL + NRCELHNO + NRCELHJK + NRCELNQ + NRCELNBGL + NRCELCOM + NRCEL + NRCELJP + NRCELJBGL + NRCELJOQR + NRCEL2012 + NRCELFD + NRCELFABC
NRREDMEUB = max(min(AREDMEUB, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT), 0)
NRREDREP = max(min(AREDREP, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB), 0)
RTOUREPA = RTOUREPA_1 * 1 - ART1731BIS + min(RTOUREPA_1, max(RTOUREPA_P + RTOUREPAP2, RTOUREPA1731 + 0) * 1 - PREM8_11) * ART1731BIS
A10TOURSOC_1 = RTOURREP * is_positive(saisies.get('REPINVTOU', 0)) + RTOUHOTR * is_positive(saisies.get('INVLOGHOT', 0)) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0))) + RTOUREPA * is_positive(saisies.get('INVLOGREHA', 0))
NRILMIX = max(min(AILMIX, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP), 0)
NRILMIY = max(min(AILMIY, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX), 0)
NRILMPA = max(min(AILMPA, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY), 0)
NRINVRED = max(min(AINVRED, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA), 0)
REDUCAVTCEL = RCOTFOR + RREPA + RAIDE + RDIFAGRI + RFORET + RFIPDOM + RFIPC + RCINE + RRESTIMO + RSOCREPR + RRPRESCOMP + RHEBE + RSURV + RINNO + RSOUFIP + RRIRENOV + RLOGDOM + RCREAT + RCOMP + RRETU + RDONS + RDUFLOTOT + RPINELTOT + RNOUV + RPLAFREPME4 + RFOR + RTOURREP + RTOUHOTR + RTOUREPA
A10TOURSOC = max(0, A10TOURSOC_1 * 1 - ART1731BIS + min(A10TOURSOC1731 + 0, A10TOURSOC_1) * ART1731BIS)
NRILMIH = max(min(AILMIH, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED), 0)
NRILMJC = max(min(AILMJC, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH), 0)
NRILMPB = max(min(AILMPB, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC), 0)
RCELRREDLA_1 = max(min(ACELRREDLA, IDOM11 - DEC11 - REDUCAVTCEL), 0)
RCELRREDLB_1 = max(min(ACELRREDLB, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1), 0)
RCELRREDLE_1 = max(min(ACELRREDLE, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1), 0)
RCELRREDLM_1 = max(min(ACELRREDLM, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1), 0)
RCELRREDLN_1 = max(min(ACELRREDLN, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1), 0)
NRILMIZ = max(min(AILMIZ, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB), 0)
NRILMJI = max(min(AILMJI, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ), 0)
NRILMPC = max(min(AILMPC, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI), 0)
RCELRREDLA = max(0, RCELRREDLA_1 * 1 - ART1731BIS + min(RCELRREDLA_1, max(RCELRREDLA_P + RCELRREDLAP2, RCELRREDLA1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCELRREDLB = max(0, RCELRREDLB_1 * 1 - ART1731BIS + min(RCELRREDLB_1, max(RCELRREDLB_P + RCELRREDLBP2, RCELRREDLB1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCELRREDLC_1 = max(min(ACELRREDLC, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1), 0)
RCELRREDLD_1 = max(min(ACELRREDLD, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1), 0)
RCELRREDLE = max(0, RCELRREDLE_1 * 1 - ART1731BIS + min(RCELRREDLE_1, max(RCELRREDLE_P + RCELRREDLEP2, RCELRREDLE1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCELRREDLM = max(0, RCELRREDLM_1 * 1 - ART1731BIS + min(RCELRREDLM_1, max(RCELRREDLM_P + RCELRREDLMP2, RCELRREDLM1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCELRREDLN = max(0, RCELRREDLN_1 * 1 - ART1731BIS + min(RCELRREDLN_1, max(RCELRREDLN_P + RCELRREDLNP2, RCELRREDLN1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCELRREDLS_1 = max(min(ACELRREDLS, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1), 0)
RCELRREDLT_1 = max(min(ACELRREDLT, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1 - RCELRREDLS_1), 0)
RRCELLA = max(0, saisies.get('CELRREDLA', 0) - RCELRREDLA) * is_positive(saisies.get('CELRREDLA', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCELLB = max(0, saisies.get('CELRREDLB', 0) - RCELRREDLB) * is_positive(saisies.get('CELRREDLB', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCELLE = max(0, saisies.get('CELRREDLE', 0) - RCELRREDLE) * is_positive(saisies.get('CELRREDLE', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCELLM = max(0, saisies.get('CELRREDLM', 0) - RCELRREDLM) * is_positive(saisies.get('CELRREDLM', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCELLN = max(0, saisies.get('CELRREDLN', 0) - RCELRREDLN) * is_positive(saisies.get('CELRREDLN', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRRCEL41 = is_positive(RRCELLA) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL42 = is_positive(RRCELLB) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL43 = is_positive(RRCELLE) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL44 = is_positive(RRCELLM) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL45 = is_positive(RRCELLN) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
NRILMJS = max(min(AILMJS, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC), 0)
NRILMPD = max(min(AILMPD, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS), 0)
NRILMPE = max(min(AILMPE, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD), 0)
NRMEUBLE = max(min(MEUBLERET, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE), 0)
NRPROREP = max(min(RETPROREP, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE), 0)
NRREPNPRO = max(min(RETREPNPRO, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP), 0)
RCELRREDLC = max(0, RCELRREDLC_1 * 1 - ART1731BIS + min(RCELRREDLC_1, max(RCELRREDLC_P + RCELRREDLCP2, RCELRREDLC1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCELRREDLD = max(0, RCELRREDLD_1 * 1 - ART1731BIS + min(RCELRREDLD_1, max(RCELRREDLD_P + RCELRREDLDP2, RCELRREDLD1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCELRREDLF_1 = max(min(ACELRREDLF, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1 - RCELRREDLS_1 - RCELRREDLT_1), 0)
RCELRREDLS = max(0, RCELRREDLS_1 * 1 - ART1731BIS + min(RCELRREDLS_1, max(RCELRREDLS_P + RCELRREDLSP2, RCELRREDLS1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCELRREDLT = max(0, RCELRREDLT_1 * 1 - ART1731BIS + min(RCELRREDLT_1, max(RCELRREDLT_P + RCELRREDLTP2, RCELRREDLT1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCELRREDLZ_1 = max(min(ACELRREDLZ, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1 - RCELRREDLS_1 - RCELRREDLT_1 - RCELRREDLF_1), 0)
RRCELLC = max(0, saisies.get('CELRREDLC', 0) - RCELRREDLC) * is_positive(saisies.get('CELRREDLC', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCELLD = max(0, saisies.get('CELRREDLD', 0) - RCELRREDLD) * is_positive(saisies.get('CELRREDLD', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCELLS = max(0, saisies.get('CELRREDLS', 0) - RCELRREDLS) * is_positive(saisies.get('CELRREDLS', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCELLT = max(0, saisies.get('CELRREDLT', 0) - RCELRREDLT) * is_positive(saisies.get('CELRREDLT', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRRCEL31 = is_positive(RRCELLC) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL32 = is_positive(RRCELLD) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL33 = is_positive(RRCELLS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL34 = is_positive(RRCELLT) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
NRREPMEU = max(min(RETREPMEU, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO), 0)
RCELRREDLF = max(0, RCELRREDLF_1 * 1 - ART1731BIS + min(RCELRREDLF_1, max(RCELRREDLF_P + RCELRREDLFP2, RCELRREDLF1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCELRREDLX_1 = max(min(ACELRREDLX, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1 - RCELRREDLS_1 - RCELRREDLT_1 - RCELRREDLF_1 - RCELRREDLZ_1), 0)
RCELRREDLZ = max(0, RCELRREDLZ_1 * 1 - ART1731BIS + min(RCELRREDLZ_1, max(RCELRREDLZ_P + RCELRREDLZP2, RCELRREDLZ1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCELRREDMG_1 = max(min(ACELRREDMG, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1 - RCELRREDLS_1 - RCELRREDLT_1 - RCELRREDLF_1 - RCELRREDLZ_1 - RCELRREDLX_1), 0)
RCELRREDMH_1 = max(min(ACELRREDMH, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1 - RCELRREDLS_1 - RCELRREDLT_1 - RCELRREDLF_1 - RCELRREDLZ_1 - RCELRREDLX_1 - RCELRREDMG_1), 0)
RCELRREDSOM = sum([RCELRREDLA_1, RCELRREDLB_1, RCELRREDLE_1, RCELRREDLM_1, RCELRREDLN_1, RCELRREDLC_1, RCELRREDLD_1, RCELRREDLS_1, RCELRREDLT_1, RCELRREDLF_1, RCELRREDLZ_1, RCELRREDLX_1]) + RCELRREDMG_1 + RCELRREDMH_1
RRCELLF = max(0, saisies.get('CELRREDLF', 0) - RCELRREDLF) * is_positive(saisies.get('CELRREDLF', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCELLZ = max(0, saisies.get('CELRREDLZ', 0) - RCELRREDLZ) * is_positive(saisies.get('CELRREDLZ', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRRCEL21 = is_positive(RRCELLF) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL22 = is_positive(RRCELLZ) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
NRILMIC = max(min(AILMIC, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU), 0)
RCELHM_1 = max(min(RCEL_HM, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGJ_1 = max(min(ACELREPGJ, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGK_1 = max(min(ACELREPGK, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGL_1 = max(min(ACELREPGL, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGP_1 = max(min(ACELREPGP, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGS_1 = max(min(ACELREPGS, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGT_1 = max(min(ACELREPGT, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGU_1 = max(min(ACELREPGU, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGV_1 = max(min(ACELREPGV, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGW_1 = max(min(ACELREPGW, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGX_1 = max(min(ACELREPGX, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - RCELREPGU_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHA_1 = max(min(ACELREPHA, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHB_1 = max(min(ACELREPHB, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHD_1 = max(min(ACELREPHD, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHE_1 = max(min(ACELREPHE, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHF_1 = max(min(ACELREPHF, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHG_1 = max(min(ACELREPHG, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHH_1 = max(min(ACELREPHH, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHS_1 = max(min(RCELREP_HS, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYA_1 = max(min(ACELREPYA, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYB_1 = max(min(ACELREPYB, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYC_1 = max(min(ACELREPYC, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYD_1 = max(min(ACELREPYD, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYE_1 = max(min(ACELREPYE, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYF_1 = max(min(ACELREPYF, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYG_1 = max(min(ACELREPYG, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYH_1 = max(min(ACELREPYH, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYI_1 = max(min(ACELREPYI, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYJ_1 = max(min(ACELREPYJ, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYK_1 = max(min(ACELREPYK, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1])), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYL_1 = max(min(ACELREPYL, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - RCELREPYH_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELRREDLX = max(0, RCELRREDLX_1 * 1 - ART1731BIS + min(RCELRREDLX_1, max(RCELRREDLX_P + RCELRREDLXP2, RCELRREDLX1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCELRREDMG = max(0, RCELRREDMG_1 * 1 - ART1731BIS + min(RCELRREDMG_1, max(RCELRREDMG_P + RCELRREDMGP2, RCELRREDMG1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCELRREDMH = max(0, RCELRREDMH_1 * 1 - ART1731BIS + min(RCELRREDMH_1, max(RCELRREDMH_P + RCELRREDMHP2, RCELRREDMH1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RRCELLX = max(0, saisies.get('CELRREDLX', 0) - RCELRREDLX) * is_positive(saisies.get('CELRREDLX', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCELMG = max(0, saisies.get('CELRREDMG', 0) - RCELRREDMG) * is_positive(saisies.get('CELRREDMG', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCELMH = max(0, saisies.get('CELRREDMH', 0) - RCELRREDMH) * is_positive(saisies.get('CELRREDMH', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRRCEL11 = is_positive(RRCELMG) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL12 = is_positive(RRCELMH) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL23 = is_positive(RRCELLX) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
NRILMIB = max(min(AILMIB, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC), 0)
RCELHL_1 = max(min(RCEL_HL, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELHM = max(0, RCELHM_1 * 1 - ART1731BIS + min(RCELHM_1, max(RCELHM_P + RCELHMP2, RCELHM1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELHNO_1 = max(min(RCEL_HNO, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGJ = max(0, RCELREPGJ_1 * 1 - ART1731BIS + min(RCELREPGJ_1, max(RCELREPGJ_P + RCELREPGJP2, RCELREPGJ1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGK = max(0, RCELREPGK_1 * 1 - ART1731BIS + min(RCELREPGK_1, max(RCELREPGK_P + RCELREPGKP2, RCELREPGK1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGL = max(0, RCELREPGL_1 * 1 - ART1731BIS + min(RCELREPGL_1, max(RCELREPGL_P + RCELREPGLP2, RCELREPGL1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGP = max(0, RCELREPGP_1 * 1 - ART1731BIS + min(RCELREPGP_1, max(RCELREPGP_P + RCELREPGPP2, RCELREPGP1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGS = max(0, RCELREPGS_1 * 1 - ART1731BIS + min(RCELREPGS_1, max(RCELREPGS_P + RCELREPGSP2, RCELREPGS1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGT = max(0, RCELREPGT_1 * 1 - ART1731BIS + min(RCELREPGT_1, max(RCELREPGT_P + RCELREPGTP2, RCELREPGT1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGU = max(0, RCELREPGU_1 * 1 - ART1731BIS + min(RCELREPGU_1, max(RCELREPGU_P + RCELREPGUP2, RCELREPGU1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGV = max(0, RCELREPGV_1 * 1 - ART1731BIS + min(RCELREPGV_1, max(RCELREPGV_P + RCELREPGVP2, RCELREPGV1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGW = max(0, RCELREPGW_1 * 1 - ART1731BIS + min(RCELREPGW_1, max(RCELREPGW_P + RCELREPGWP2, RCELREPGW1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPGX = max(0, RCELREPGX_1 * 1 - ART1731BIS + min(RCELREPGX_1, max(RCELREPGX_P + RCELREPGXP2, RCELREPGX1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHA = max(0, RCELREPHA_1 * 1 - ART1731BIS + min(RCELREPHA_1, max(RCELREPHA_P + RCELREPHAP2, RCELREPHA1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHB = max(0, RCELREPHB_1 * 1 - ART1731BIS + min(RCELREPHB_1, max(RCELREPHB_P + RCELREPHBP2, RCELREPHB1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHD = max(0, RCELREPHD_1 * 1 - ART1731BIS + min(RCELREPHD_1, max(RCELREPHD_P + RCELREPHDP2, RCELREPHD1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHE = max(0, RCELREPHE_1 * 1 - ART1731BIS + min(RCELREPHE_1, max(RCELREPHE_P + RCELREPHEP2, RCELREPHE1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHF = max(0, RCELREPHF_1 * 1 - ART1731BIS + min(RCELREPHF_1, max(RCELREPHF_P + RCELREPHFP2, RCELREPHF1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHG = max(0, RCELREPHG_1 * 1 - ART1731BIS + min(RCELREPHG_1, max(RCELREPHG_P + RCELREPHGP2, RCELREPHG1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHH = max(0, RCELREPHH_1 * 1 - ART1731BIS + min(RCELREPHH_1, max(RCELREPHH_P + RCELREPHHP2, RCELREPHH1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHR_1 = max(min(RCELREP_HR, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHS = max(0, RCELREPHS_1 * 1 - ART1731BIS + min(RCELREPHS_1, max(RCELREPHS_P + RCELREPHSP2, RCELREPHS1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHU_1 = max(min(RCELREP_HU, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1 - RCELREPHR_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYA = max(0, RCELREPYA_1 * 1 - ART1731BIS + min(RCELREPYA_1, max(RCELREPYA_P + RCELREPYAP2, RCELREPYA1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYB = max(0, RCELREPYB_1 * 1 - ART1731BIS + min(RCELREPYB_1, max(RCELREPYB_P + RCELREPYBP2, RCELREPYB1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYC = max(0, RCELREPYC_1 * 1 - ART1731BIS + min(RCELREPYC_1, max(RCELREPYC_P + RCELREPYCP2, RCELREPYC1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYD = max(0, RCELREPYD_1 * 1 - ART1731BIS + min(RCELREPYD_1, max(RCELREPYD_P + RCELREPYDP2, RCELREPYD1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYE = max(0, RCELREPYE_1 * 1 - ART1731BIS + min(RCELREPYE_1, max(RCELREPYE_P + RCELREPYEP2, RCELREPYE1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYF = max(0, RCELREPYF_1 * 1 - ART1731BIS + min(RCELREPYF_1, max(RCELREPYF_P + RCELREPYFP2, RCELREPYF1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYG = max(0, RCELREPYG_1 * 1 - ART1731BIS + min(RCELREPYG_1, max(RCELREPYG_P + RCELREPYGP2, RCELREPYG1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYH = max(0, RCELREPYH_1 * 1 - ART1731BIS + min(RCELREPYH_1, max(RCELREPYH_P + RCELREPYHP2, RCELREPYH1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYI = max(0, RCELREPYI_1 * 1 - ART1731BIS + min(RCELREPYI_1, max(RCELREPYI_P + RCELREPYIP2, RCELREPYI1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYJ = max(0, RCELREPYJ_1 * 1 - ART1731BIS + min(RCELREPYJ_1, max(RCELREPYJ_P + RCELREPYJP2, RCELREPYJ1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYK = max(0, RCELREPYK_1 * 1 - ART1731BIS + min(RCELREPYK_1, max(RCELREPYK_P + RCELREPYKP2, RCELREPYK1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPYL = max(0, RCELREPYL_1 * 1 - ART1731BIS + min(RCELREPYL_1, max(RCELREPYL_P + RCELREPYLP2, RCELREPYL1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NRILMIA = max(min(AILMIA, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB), 0)
NRILMJY = max(min(AILMJY, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA), 0)
RCELHJK_1 = max(min(RCEL_HJK, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELHL = max(0, RCELHL_1 * 1 - ART1731BIS + min(RCELHL_1, max(RCELHL_P + RCELHLP2, RCELHL1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELHNO = max(0, RCELHNO_1 * 1 - ART1731BIS + min(RCELHNO_1, max(RCELHNO_P + RCELHNOP2, RCELHNO1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELNQ_1 = max(min(RCEL_NQ, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHR = max(0, RCELREPHR_1 * 1 - ART1731BIS + min(RCELREPHR_1, max(RCELREPHR_P + RCELREPHRP2, RCELREPHR1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHT_1 = max(min(RCELREP_HT, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1 - RCELREPHR_1 - RCELREPHU_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHU = max(0, RCELREPHU_1 * 1 - ART1731BIS + min(RCELREPHU_1, max(RCELREPHU_P + RCELREPHUP2, RCELREPHU1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHZ_1 = max(min(RCELREP_HZ, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1 - RCELREPHR_1 - RCELREPHU_1 - RCELREPHT_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCELHH = max(0, RCEL_HL_R + RCEL_HM_R + RCEL_HNO_R + sum([RCELREP_HR_R, RCELREP_HS_R, RCELREP_HT_R, RCELREP_HU_R, RCELREP_HX_R, RCELREP_HZ_R]) - RCELHL + RCELHM + RCELHNO + sum([RCELREPHR, RCELREPHS, RCELREPHT, RCELREPHU, RCELREPHX, RCELREPHZ])) * is_positive(sum([saisies.get('CELREPHR', 0), saisies.get('CELREPHS', 0), saisies.get('CELREPHT', 0), saisies.get('CELREPHU', 0), saisies.get('CELREPHX', 0), saisies.get('CELREPHZ', 0)]) + sum([saisies.get('CELLIERHL', 0), saisies.get('CELLIERHM', 0), saisies.get('CELLIERHN', 0), saisies.get('CELLIERHO', 0)]))
NRILMJX = max(min(AILMJX, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY), 0)
RCELHJK = max(0, RCELHJK_1 * 1 - ART1731BIS + min(RCELHJK_1, max(RCELHJK_P + RCELHJKP2, RCELHJK1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELNBGL_1 = max(min(RCEL_NBGL, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELNQ = max(0, RCELNQ_1 * 1 - ART1731BIS + min(RCELNQ_1, max(RCELNQ_P + RCELNQP2, RCELNQ1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHT = max(0, RCELREPHT_1 * 1 - ART1731BIS + min(RCELREPHT_1, max(RCELREPHT_P + RCELREPHTP2, RCELREPHT1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHX_1 = max(min(RCELREP_HX, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1 - RCELREPHR_1 - RCELREPHU_1 - RCELREPHT_1 - RCELREPHZ_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHZ = max(0, RCELREPHZ_1 * 1 - ART1731BIS + min(RCELREPHZ_1, max(RCELREPHZ_P + RCELREPHZP2, RCELREPHZ1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCEL2009 = max(0, RRCELHH + saisies.get('CELREPGU', 0) + saisies.get('CELREPGT', 0) + saisies.get('CELREPHF', 0) + saisies.get('CELREPHE', 0) - RCELREPGU - RCELREPGT - RCELREPHF - RCELREPHE * is_positive(saisies.get('CELREPGU', 0) + saisies.get('CELREPGT', 0) + saisies.get('CELREPHF', 0) + saisies.get('CELREPHE', 0)) + saisies.get('CELREPYG', 0) + saisies.get('CELREPYH', 0) - RCELREPYG - RCELREPYH * is_positive(saisies.get('CELREPYG', 0) + saisies.get('CELREPYH', 0))) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRRCEL4 = is_positive(RRCEL2009 + RRCELLA + RRCELLB + RRCELLE + RRCELLM + RRCELLN) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL46 = is_positive(RRCEL2009) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
NRILMJW = max(min(AILMJW, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX), 0)
RCELCOM_1 = max(min(RCEL_COM, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELNBGL = max(0, RCELNBGL_1 * 1 - ART1731BIS + min(RCELNBGL_1, max(RCELNBGL_P + RCELNBGLP2, RCELNBGL1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHW_1 = max(min(RCELREP_HW, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1 - RCELREPHR_1 - RCELREPHU_1 - RCELREPHT_1 - RCELREPHZ_1 - RCELREPHX_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHX = max(0, RCELREPHX_1 * 1 - ART1731BIS + min(RCELREPHX_1, max(RCELREPHX_P + RCELREPHXP2, RCELREPHX1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCEL_1 = max(min(RCEL_2011, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NRILMJV = max(min(AILMJV, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW), 0)
NRILMOE = max(min(AILMOE, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV), 0)
RCEL = max(0, RCEL_1 * 1 - ART1731BIS + min(RCEL_1, max(RCEL_P + RCELP2, RCEL1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELCOM = max(0, RCELCOM_1 * 1 - ART1731BIS + min(RCELCOM_1, max(RCELCOM_P + RCELCOMP2, RCELCOM1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_positive(is_zero(saisies.get('CMAJ2', 0) - 8) + is_zero(saisies.get('CMAJ2', 0) - 11))) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELJP_1 = max(min(RCEL_JP, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1 - RCEL_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHV_1 = max(min(RCELREP_HV, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1 - RCELREPHR_1 - RCELREPHU_1 - RCELREPHT_1 - RCELREPHZ_1 - RCELREPHX_1 - RCELREPHW_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHW = max(0, RCELREPHW_1 * 1 - ART1731BIS + min(RCELREPHW_1, max(RCELREPHW_P + RCELREPHWP2, RCELREPHW1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NRILMOD = max(min(AILMOD, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE), 0)
RCELJBGL_1 = max(min(RCEL_JBGL, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1 - RCEL_1 - RCELJP_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELJOQR_1 = max(min(RCEL_JOQR, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1 - RCEL_1 - RCELJP_1 - RCELJBGL_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELJP = max(0, RCELJP_1 * 1 - ART1731BIS + min(RCELJP_1, max(RCELJP_P + RCELJPP2, RCELJP1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELREPHV = max(0, RCELREPHV_1 * 1 - ART1731BIS + min(RCELREPHV_1, max(RCELREPHV_P + RCELREPHVP2, RCELREPHV1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCEL2010 = max(0, saisies.get('CELREPYE', 0) + saisies.get('CELREPYF', 0) + saisies.get('CELREPYL', 0) - RCELREPYE - RCELREPYF - RCELREPYL * is_positive(saisies.get('CELREPYE', 0) + saisies.get('CELREPYF', 0) + saisies.get('CELREPYL', 0)) + saisies.get('CELREPGX', 0) + saisies.get('CELREPGS', 0) + saisies.get('CELREPGP', 0) - RCELREPGX - RCELREPGS - RCELREPGP * is_positive(saisies.get('CELREPGX', 0) + saisies.get('CELREPGS', 0) + saisies.get('CELREPGP', 0)) + saisies.get('CELREPHH', 0) + saisies.get('CELREPHD', 0) + saisies.get('CELREPHB', 0) + RCELREP_HW_R + RCELREP_HV_R - RCELREPHH - RCELREPHD - RCELREPHB - RCELREPHW - RCELREPHV * is_positive(saisies.get('CELREPHH', 0) + saisies.get('CELREPHD', 0) + saisies.get('CELREPHB', 0) + saisies.get('CELREPHW', 0) + saisies.get('CELREPHV', 0)) + RCEL_NQ_R + RCEL_NBGL_R + RCEL_HJK_R - RCELNQ - RCELNBGL - RCELHJK * is_positive(sum([saisies.get('CELLIERNQ', 0), saisies.get('CELLIERNB', 0), saisies.get('CELLIERNG', 0), saisies.get('CELLIERNL', 0)]) + saisies.get('CELLIERHJ', 0) + saisies.get('CELLIERHK', 0))) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRRCEL3 = is_positive(RRCEL2010 + RRCELLC + RRCELLD + RRCELLS + RRCELLT) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL35 = is_positive(RRCEL2010) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
NRILMOC = max(min(AILMOC, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD), 0)
RCEL2012_1 = max(min(RCEL_2012, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1 - RCEL_1 - RCELJP_1 - RCELJBGL_1 - RCELJOQR_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELFD_1 = max(min(RCEL_FD, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1 - RCEL_1 - RCELJP_1 - RCELJBGL_1 - RCELJOQR_1 - RCEL2012_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELJBGL = max(0, RCELJBGL_1 * 1 - ART1731BIS + min(RCELJBGL_1, max(RCELJBGL_P + RCELJBGLP2, RCELJBGL1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELJOQR = max(0, RCELJOQR_1 * 1 - ART1731BIS + min(RCELJOQR_1, max(RCELJOQR_P + RCELJOQRP2, RCELJOQR1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRCEL2011 = max(0, RCEL_2011_R - RCEL * is_positive(CELSOMN) + RCEL_COM_R - RCELCOM * is_positive(sum([saisies.get('CELLIERNP', 0), saisies.get('CELLIERNR', 0), saisies.get('CELLIERNS', 0), saisies.get('CELLIERNT', 0)])) + saisies.get('CELREPYC', 0) + saisies.get('CELREPYD', 0) + saisies.get('CELREPYK', 0) - RCELREPYC - RCELREPYD - RCELREPYK * is_positive(sum([saisies.get('CELREPYC', 0), saisies.get('CELREPYD', 0), saisies.get('CELREPYK', 0)])) + saisies.get('CELREPGW', 0) + saisies.get('CELREPGL', 0) + saisies.get('CELREPGK', 0) + saisies.get('CELREPHG', 0) + saisies.get('CELREPHA', 0) + RCEL_JBGL_R + RCEL_JP_R - RCELREPGW - RCELREPGL - RCELREPGK - RCELREPHG - RCELREPHA - RCELJBGL - RCELJP * is_positive(sum([saisies.get('CELREPGW', 0), saisies.get('CELREPGL', 0), saisies.get('CELREPGK', 0)]) + saisies.get('CELREPHG', 0) + saisies.get('CELREPHA', 0) + sum([saisies.get('CELLIERJB', 0), saisies.get('CELLIERJG', 0), saisies.get('CELLIERJL', 0), saisies.get('CELLIERJP', 0)]))) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRRCEL2 = is_positive(RRCEL2011 + RRCELLF + RRCELLZ + RRCELLX) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL24 = is_positive(RRCEL2011) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
NRILMOB = max(min(AILMOB, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC), 0)
RCEL2012 = max(0, RCEL2012_1 * 1 - ART1731BIS + min(RCEL2012_1, max(RCEL2012_P + RCEL2012P2, RCEL20121731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELFABC_1 = max(min(RCEL_FABC, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1 - RCEL_1 - RCELJP_1 - RCELJBGL_1 - RCELJOQR_1 - RCEL2012_1 - RCELFD_1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELFD = max(0, RCELFD_1 * 1 - ART1731BIS + min(RCELFD_1, max(RCELFD_P + RCELFDP2, RCELFD1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELTOT_1 = RCELRREDSOM + sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) + sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) + sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) + RCELHM_1 + RCELHL_1 + RCELHNO_1 + RCELHJK_1 + RCELNQ_1 + RCELNBGL_1 + RCELCOM_1 + RCEL_1 + RCELJP_1 + RCELJBGL_1 + RCELJOQR_1 + RCEL2012_1 + RCELFD_1 + RCELFABC_1
NRILMOA = max(min(AILMOA, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB), 0)
NRRESIMEUB = max(min(RETRESIMEUB, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA), 0)
NRRESINEUV = max(min(RETRESINEUV, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA - NRRESIMEUB - NRRESIMEUB), 0)
NRRESIVIEU = max(min(RETRESIVIEU, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA - NRRESIMEUB), 0)
RCELFABC = max(0, RCELFABC_1 * 1 - ART1731BIS + min(RCELFABC_1, max(RCELFABC_P + RCELFABCP2, RCELFABC1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCELTOT = RCELRREDSOM + sum([RCELREPHS, RCELREPHR, RCELREPHU, RCELREPHT, RCELREPHZ, RCELREPHX, RCELREPHW, RCELREPHV, RCELREPHF, RCELREPHE, RCELREPHD, RCELREPHH, RCELREPHG, RCELREPHB, RCELREPHA]) + sum([RCELREPGU, RCELREPGX, RCELREPGT, RCELREPGS, RCELREPGW, RCELREPGP, RCELREPGL, RCELREPGV, RCELREPGK, RCELREPGJ]) + sum([RCELREPYH, RCELREPYL, RCELREPYG, RCELREPYF, RCELREPYK, RCELREPYE, RCELREPYD, RCELREPYJ, RCELREPYC, RCELREPYB, RCELREPYI, RCELREPYA]) + RCELHM + RCELHL + RCELHNO + RCELHJK + RCELNQ + RCELNBGL + RCELCOM + RCEL + RCELJP + RCELJBGL + RCELJOQR + RCEL2012 + RCELFD + RCELFABC
RRCEL2012 = max(0, saisies.get('CELREPYJ', 0) + saisies.get('CELREPYI', 0) + saisies.get('CELREPYB', 0) + saisies.get('CELREPYA', 0) - RCELREPYJ - RCELREPYI - RCELREPYB - RCELREPYA) * is_positive(sum([saisies.get('CELREPYJ', 0), saisies.get('CELREPYI', 0), saisies.get('CELREPYB', 0), saisies.get('CELREPYA', 0)])) + max(0, RCEL_2012_R - RCEL2012) * is_positive(CELSOMJ) + max(0, RCEL_JOQR_R - RCELJOQR) * is_positive(sum([saisies.get('CELLIERJO', 0), saisies.get('CELLIERJQ', 0), saisies.get('CELLIERJR', 0)])) + max(0, saisies.get('CELREPGV', 0) - RCELREPGV) * is_positive(saisies.get('CELREPGV', 0)) + max(0, saisies.get('CELREPGJ', 0) - RCELREPGJ) * is_positive(saisies.get('CELREPGJ', 0)) + max(0, RCEL_FABC_R - RCELFABC) * is_positive(saisies.get('CELLIERFA', 0) + saisies.get('CELLIERFB', 0) + saisies.get('CELLIERFC', 0)) + max(0, RCEL_FD_R - RCELFD) * is_positive(saisies.get('CELLIERFD', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RREDMEUB_1 = max(min(AREDMEUB, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT), 0)
LIGRRCEL1 = is_positive(RRCELMG + RRCELMH + RRCEL2012) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGRRCEL13 = is_positive(RRCEL2012) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
NRLOCIDEFG = max(min(RETLOCIDEFG, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA - NRRESIMEUB - NRRESIMEUB - NRRESINEUV), 0)
RREDMEUB = max(0, RREDMEUB_1 * 1 - ART1731BIS + min(RREDMEUB_1, max(RREDMEUB_P + RREDMEUBP2, RREDMEUB1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RREDREP_1 = max(min(AREDREP, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB), 0)
NRCODJU = max(min(RETCODJU, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA - NRRESIMEUB - NRRESIMEUB - NRRESINEUV - NRLOCIDEFG), 0)
REPMEUIS = DREDMEUB - RREDMEUB * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RREDREP = max(0, RREDREP_1 * 1 - ART1731BIS + min(RREDREP_1, max(RREDREP_P + RREDREPP2, RREDREP1731 + 0) * 1 - PREM8_11) * ART1731BIS)
MEUBLERED = REPMEUIS
NRCODJT = max(min(RETCODJT, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA - NRRESIMEUB - NRRESIMEUB - NRRESINEUV - NRLOCIDEFG - NRCODJU), 0)
NRCODOU = max(min(ACODOU, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA - NRRESIMEUB - NRRESIMEUB - NRRESINEUV - NRLOCIDEFG - NRCODJU - NRCODJT), 0)
NRLOCNPRO = NRREDMEUB + NRREDREP + NRILMIX + NRILMIY + NRILMPA + NRINVRED + NRILMIH + NRILMJC + NRILMPB + NRILMIZ + NRILMJI + NRILMPC + NRILMJS + NRILMPD + NRILMPE + NRMEUBLE + NRPROREP + NRREPNPRO + NRREPMEU + NRILMIC + NRILMIB + NRILMIA + NRILMJY + NRILMJX + NRILMJW + NRILMJV + NRILMOE + NRILMOD + NRILMOC + NRILMOB + NRILMOA + NRRESIMEUB + NRRESIVIEU + NRRESINEUV + NRLOCIDEFG + NRCODJU + NRCODJT + NRCODOU
NRPATNAT1 = max(min(APATNAT1, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO), 0)
NRPATNAT2 = max(min(APATNAT2, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT1), 0)
NRPATNAT3 = max(min(APATNAT3, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT1 - NRPATNAT2), 0)
REPMEUIU = DREDREP - RREDREP * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPREDREP = REPMEUIU
RILMIX_1 = max(min(AILMIX, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP), 0)
LIGREPRED = is_positive(MEUBLERED) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGREPRESI = is_positive(REPREDREP) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NRPATNAT = max(min(APATNAT, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT1 - NRPATNAT2 - NRPATNAT3), 0)
NRRI3 = NRCELTOT + NRLOCNPRO + NRPATNAT1 + NRPATNAT2 + NRPATNAT3 + NRPATNAT
RILMIX = max(0, RILMIX_1 * 1 - ART1731BIS + min(RILMIX_1, max(RILMIX_P + RILMIXP2, RILMIX1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RILMIY_1 = max(min(AILMIY, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX), 0)
NINVRETKG = max(min(saisies.get('INVSOCNRET', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT), 0) * 1 - V_CNR
NINVRETKGR = NINVRETKG - round(NINVRETKG * TX35 / 100) * 1 - V_CNR
NINVRETKH = max(min(saisies.get('INVOMSOCKH', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG), 0) * 1 - V_CNR
NINVRETKHR = NINVRETKH - round(NINVRETKH * TX35 / 100) * 1 - V_CNR
NINVRETKI = max(min(saisies.get('INVOMSOCKI', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH), 0) * 1 - V_CNR
NINVRETKIR = NINVRETKI - round(NINVRETKI * TX35 / 100) * 1 - V_CNR
NINVRETQN = max(min(saisies.get('INVSOC2010', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI), 0) * 1 - V_CNR
NINVRETQNR = NINVRETQN - round(NINVRETQN * TX35 / 100) * 1 - V_CNR
NINVRETQU = max(min(saisies.get('INVOMSOCQU', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN), 0) * 1 - V_CNR
NINVRETQUR = NINVRETQU - round(NINVRETQU * TX35 / 100) * 1 - V_CNR
REPMEUIX = AILMIX_R - RILMIX * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMIY = max(0, RILMIY_1 * 1 - ART1731BIS + min(RILMIY_1, max(RILMIY_P + RILMIYP2, RILMIY1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RILMPA = max(min(AILMPA, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY), 0)
RINVRED_1 = max(min(AINVRED, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA), 0)
INVRETKG = min(round(NINVRETKG * TX35 / 100), PLAF_INVDOM) * 1 - V_CNR
INVRETKGA = min(round(NINVRETKG * TX35 / 100), RNIDOM1) * 1 - V_CNR
INVRETKGR = min(max(min(round(INVRETKG * 13 / 7), NINVRETKG - INVRETKG), NINVRETKG - INVRETKG), PLAF_INVDOM1) * 1 - V_CNR
INVRETKH = min(round(NINVRETKH * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG)) * 1 - V_CNR
INVRETKHA = min(round(NINVRETKH * TX35 / 100), max(0, RNIDOM1 - INVRETKGA)) * 1 - V_CNR
INVRETKHR = min(max(min(round(INVRETKH * 13 / 7), NINVRETKH - INVRETKH), NINVRETKH - INVRETKH), max(0, PLAF_INVDOM1 - INVRETKGR)) * 1 - V_CNR
INVRETKI = min(round(NINVRETKI * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH)) * 1 - V_CNR
INVRETKIA = min(round(NINVRETKI * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA)) * 1 - V_CNR
INVRETKIR = min(max(min(round(INVRETKI * 13 / 7), NINVRETKI - INVRETKI), NINVRETKI - INVRETKI), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR)) * 1 - V_CNR
INVRETQN = min(round(NINVRETQN * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI)) * 1 - V_CNR
INVRETQNA = min(round(NINVRETQN * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA)) * 1 - V_CNR
INVRETQNR = min(max(min(round(INVRETQN * 13 / 7), NINVRETQN - INVRETQN), NINVRETQN - INVRETQN), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR)) * 1 - V_CNR
INVRETQU = min(round(NINVRETQU * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN)) * 1 - V_CNR
INVRETQUA = min(round(NINVRETQU * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA)) * 1 - V_CNR
INVRETQUR = min(max(min(round(INVRETQU * 13 / 7), NINVRETQU - INVRETQU), NINVRETQU - INVRETQU), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR)) * 1 - V_CNR
LIGREPLOCIX = is_positive(REPMEUIX) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NINVRETQK = max(min(saisies.get('INVLOGSOC', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU), 0) * 1 - V_CNR
NINVRETQKR = NINVRETQK - round(NINVRETQK * TX35 / 100) * 1 - V_CNR
REPMEUIY = DILMIY - RILMIY * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPMEUPA = DILMPA - RILMPA * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RINVRED = max(0, RINVRED_1 * 1 - ART1731BIS + min(RINVRED_1, max(RINVRED_P + RINVREDP2, RINVRED1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETQK = min(round(NINVRETQK * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU)) * 1 - V_CNR
INVRETQKA = min(round(NINVRETQK * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA)) * 1 - V_CNR
INVRETQKR = min(max(min(round(INVRETQK * 13 / 7), NINVRETQK - INVRETQK), NINVRETQK - INVRETQK), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR)) * 1 - V_CNR
LIGREP7PA = is_positive(REPMEUPA) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NINVRETQJ = max(min(saisies.get('INVOMSOCQJ', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK), 0) * 1 - V_CNR
NINVRETQJR = NINVRETQJ - round(NINVRETQJ * TX35 / 100) * 1 - V_CNR
NINVRETQS = max(min(saisies.get('INVOMSOCQS', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ), 0) * 1 - V_CNR
NINVRETQSR = NINVRETQS - round(NINVRETQS * TX35 / 100) * 1 - V_CNR
NINVRETQW = max(min(saisies.get('INVOMSOCQW', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS), 0) * 1 - V_CNR
NINVRETQWR = NINVRETQW - round(NINVRETQW * TX35 / 100) * 1 - V_CNR
NINVRETQX = max(min(saisies.get('INVOMSOCQX', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW), 0) * 1 - V_CNR
NINVRETQXR = NINVRETQX - round(NINVRETQX * TX35 / 100) * 1 - V_CNR
NINVRETRA = max(min(saisies.get('CODHRA', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX), 0) * 1 - V_CNR
NINVRETRAR = NINVRETRA - round(NINVRETRA * TX35 / 100) * 1 - V_CNR
NINVRETRB = max(min(saisies.get('CODHRB', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA), 0) * 1 - V_CNR
NINVRETRBR = NINVRETRB - round(NINVRETRB * TX35 / 100) * 1 - V_CNR
NINVRETRC = max(min(saisies.get('CODHRC', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA - NINVRETRB), 0) * 1 - V_CNR
NINVRETRCR = NINVRETRC - round(NINVRETRC * TX35 / 100) * 1 - V_CNR
NINVRETRD = max(min(saisies.get('CODHRD', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA - NINVRETRB - NINVRETRC), 0) * 1 - V_CNR
NINVRETRDR = NINVRETRD - round(NINVRETRD * TX35 / 100) * 1 - V_CNR
NINVRETXA = max(min(saisies.get('CODHXA', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA - NINVRETRB - NINVRETRC - NINVRETRD), 0) * 1 - V_CNR
NINVRETXAR = NINVRETXA - round(NINVRETXA * TX35 / 100) * 1 - V_CNR
NINVRETXB = max(min(saisies.get('CODHXB', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA - NINVRETRB - NINVRETRC - NINVRETRD - NINVRETXA), 0) * 1 - V_CNR
NINVRETXBR = NINVRETXB - round(NINVRETXB * TX35 / 100) * 1 - V_CNR
NINVRETXC = max(min(saisies.get('CODHXC', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA - NINVRETRB - NINVRETRC - NINVRETRD - NINVRETXA - NINVRETXB), 0) * 1 - V_CNR
NINVRETXCR = NINVRETXC - round(NINVRETXC * TX35 / 100) * 1 - V_CNR
NINVRETXE = max(min(saisies.get('CODHXE', 0), RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA - NINVRETRB - NINVRETRC - NINVRETRD - NINVRETXA - NINVRETXB - NINVRETXC), 0) * 1 - V_CNR
NINVRETXER = NINVRETXE - round(NINVRETXE * TX35 / 100) * 1 - V_CNR
NRDOMSOC1 = NINVRETKG + NINVRETKH + NINVRETKI + NINVRETQN + NINVRETQU + NINVRETQK + NINVRETQJ + NINVRETQS + NINVRETQW + NINVRETQX + NINVRETRA + NINVRETRB + NINVRETRC + NINVRETRD
NRLOGSOC = NINVRETXA + NINVRETXB + NINVRETXC + NINVRETXE
REPLOCN2 = REPMEUIY
REPMEUIT = DINVRED - RINVRED * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMIH_1 = max(min(AILMIH, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED), 0)
INVRETQJ = min(round(NINVRETQJ * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK)) * 1 - V_CNR
INVRETQJA = min(round(NINVRETQJ * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA)) * 1 - V_CNR
INVRETQJR = min(max(min(round(INVRETQJ * 13 / 7), NINVRETQJ - INVRETQJ), NINVRETQJ - INVRETQJ), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR)) * 1 - V_CNR
INVRETQS = min(round(NINVRETQS * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ)) * 1 - V_CNR
INVRETQSA = min(round(NINVRETQS * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA)) * 1 - V_CNR
INVRETQSR = min(max(min(round(INVRETQS * 13 / 7), NINVRETQS - INVRETQS), NINVRETQS - INVRETQS), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR)) * 1 - V_CNR
INVRETQW = min(round(NINVRETQW * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS)) * 1 - V_CNR
INVRETQWA = min(round(NINVRETQW * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA)) * 1 - V_CNR
INVRETQWR = min(max(min(round(INVRETQW * 13 / 7), NINVRETQW - INVRETQW), NINVRETQW - INVRETQW), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR)) * 1 - V_CNR
INVRETQX = min(round(NINVRETQX * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW)) * 1 - V_CNR
INVRETQXA = min(round(NINVRETQX * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA)) * 1 - V_CNR
INVRETQXR = min(max(min(round(INVRETQX * 13 / 7), NINVRETQX - INVRETQX), NINVRETQX - INVRETQX), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR)) * 1 - V_CNR
INVRETRA = min(round(NINVRETRA * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX)) * 1 - V_CNR
INVRETRAA = min(round(NINVRETRA * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA)) * 1 - V_CNR
INVRETRAR = min(max(min(round(INVRETRA * 13 / 7), NINVRETRA - INVRETRA), NINVRETRA - INVRETRA), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR)) * 1 - V_CNR
INVRETRB = min(round(NINVRETRB * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA)) * 1 - V_CNR
INVRETRBA = min(round(NINVRETRB * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA)) * 1 - V_CNR
INVRETRBR = min(max(min(round(INVRETRB * 13 / 7), NINVRETRB - INVRETRB), NINVRETRB - INVRETRB), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR)) * 1 - V_CNR
INVRETRC = min(round(NINVRETRC * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA - INVRETRB)) * 1 - V_CNR
INVRETRCA = min(round(NINVRETRC * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA)) * 1 - V_CNR
INVRETRCR = min(max(min(round(INVRETRC * 13 / 7), NINVRETRC - INVRETRC), NINVRETRC - INVRETRC), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR - INVRETRBR)) * 1 - V_CNR
INVRETRD = min(round(NINVRETRD * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA - INVRETRB - INVRETRC)) * 1 - V_CNR
INVRETRDA = min(round(NINVRETRD * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA)) * 1 - V_CNR
INVRETRDR = min(max(min(round(INVRETRD * 13 / 7), NINVRETRD - INVRETRD), NINVRETRD - INVRETRD), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR - INVRETRBR - INVRETRCR)) * 1 - V_CNR
INVRETXA = min(round(NINVRETXA * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA - INVRETRB - INVRETRC - INVRETRD)) * 1 - V_CNR
INVRETXAA = min(round(NINVRETXA * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA)) * 1 - V_CNR
INVRETXAR = min(max(min(round(INVRETXA * 13 / 7), NINVRETXA - INVRETXA), NINVRETXA - INVRETXA), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR - INVRETRBR - INVRETRCR - INVRETRDR)) * 1 - V_CNR
INVRETXB = min(round(NINVRETXB * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA - INVRETRB - INVRETRC - INVRETRD - INVRETXA)) * 1 - V_CNR
INVRETXBA = min(round(NINVRETXB * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA)) * 1 - V_CNR
INVRETXBR = min(max(min(round(INVRETXB * 13 / 7), NINVRETXB - INVRETXB), NINVRETXB - INVRETXB), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR - INVRETRBR - INVRETRCR - INVRETRDR - INVRETXAR)) * 1 - V_CNR
INVRETXC = min(round(NINVRETXC * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA - INVRETRB - INVRETRC - INVRETRD - INVRETXA - INVRETXB)) * 1 - V_CNR
INVRETXCA = min(round(NINVRETXC * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA)) * 1 - V_CNR
INVRETXCR = min(max(min(round(INVRETXC * 13 / 7), NINVRETXC - INVRETXC), NINVRETXC - INVRETXC), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR - INVRETRBR - INVRETRCR - INVRETRDR - INVRETXAR - INVRETXBR)) * 1 - V_CNR
INVRETXE = min(round(NINVRETXE * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA - INVRETRB - INVRETRC - INVRETRD - INVRETXA - INVRETXB - INVRETXC)) * 1 - V_CNR
INVRETXEA = min(round(NINVRETXE * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA)) * 1 - V_CNR
INVRETXER = min(max(min(round(INVRETXE * 13 / 7), NINVRETXE - INVRETXE), NINVRETXE - INVRETXE), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR - INVRETRBR - INVRETRCR - INVRETRDR - INVRETXAR - INVRETXBR - INVRETXCR)) * 1 - V_CNR
LIGREPLOC2 = is_positive(REPLOCN2) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NINVRETMM = max(min(saisies.get('INVOMREP', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3), 0) * 1 - V_CNR
NINVRETMN = max(min(saisies.get('INVOMENTMN', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0)), 0) * 1 - V_CNR
NINVRETPM = max(min(saisies.get('INVOMRETPM', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0)), 0) * 1 - V_CNR
NINVRETQE = max(min(saisies.get('INVENDEB2009', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0)), 0) * 1 - V_CNR
NINVRETQV = max(min(saisies.get('INVOMQV', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVENDEB2009', 0)), 0) * 1 - V_CNR
NINVRETRJ = max(min(saisies.get('INVOMENTRJ', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM), 0) * 1 - V_CNR
REPINVRED = REPMEUIT
RILMIH = max(0, RILMIH_1 * 1 - ART1731BIS + min(RILMIH_1, max(RILMIH_P + RILMIHP2, RILMIH1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RILMJC_1 = max(min(AILMJC, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH), 0)
INVRETMM = NINVRETMM * 1 - V_CNR
INVRETMN = NINVRETMN * 1 - V_CNR
INVRETQE = NINVRETQE * 1 - V_CNR
INVRETQV = NINVRETQV * 1 - V_CNR
INVRETSOC = INVRETKG + INVRETKH + INVRETKI + INVRETQN + INVRETQU + INVRETQK + INVRETQJ + INVRETQS + INVRETQW + INVRETQX + INVRETRA + INVRETRB + INVRETRC + INVRETRD + INVRETXA + INVRETXB + INVRETXC + INVRETXE
LIGREPINV = is_positive(REPINVRED) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NINVRETMA = max(min(saisies.get('NRETROC40', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ), 0) * 1 - V_CNR
NINVRETMAR = NINVRETMA - round(NINVRETMA * TX40 / 100) * 1 - V_CNR
REPMEUIH = AILMIH_R - RILMIH * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMJC = max(0, RILMJC_1 * 1 - ART1731BIS + min(RILMJC_1, max(RILMJC_P + RILMJCP2, RILMJC1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RILMPB = max(min(AILMPB, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC), 0)
INVRETMA = min(round(NINVRETMA * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC)) * 1 - V_CNR
INVRETMAA = min(round(NINVRETMA * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA)) * 1 - V_CNR
INVRETMAR = min(round(INVRETMA * 3 / 2), NINVRETMA - INVRETMA) * 1 - V_CNR
LIGREPLOCIH = is_positive(REPMEUIH) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NINVRETLG = max(min(saisies.get('NRETROC50', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA), 0) * 1 - V_CNR
NINVRETLGR = NINVRETLG - round(NINVRETLG * TX50 / 100) * 1 - V_CNR
REPMEUJC = DILMJC - RILMJC * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPMEUPB = DILMPB - RILMPB * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMIZ_1 = max(min(AILMIZ, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB), 0)
INVRETLG = min(round(NINVRETLG * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA)) * 1 - V_CNR
INVRETLGA = min(round(NINVRETLG * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA)) * 1 - V_CNR
INVRETLGR = min(INVRETLG, max(0, NINVRETLG - INVRETLG)) * 1 - V_CNR
LIGREP7PB = is_positive(REPMEUPB) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NINVRETKS = max(min(saisies.get('INVENDI', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG), 0) * 1 - V_CNR
NINVRETMB = max(min(saisies.get('RETROCOMMB', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS), 0) * 1 - V_CNR
NINVRETMBR = NINVRETMB - round(NINVRETMB * TX40 / 100) * 1 - V_CNR
NINVRETMC = max(min(saisies.get('RETROCOMMC', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB), 0) * 1 - V_CNR
NINVRETMCR = NINVRETMC - round(NINVRETMC * TX40 / 100) * 1 - V_CNR
REPLOCN1 = REPMEUJC
RILMIZ = max(0, RILMIZ_1 * 1 - ART1731BIS + min(RILMIZ_1, max(RILMIZ_P + RILMIZP2, RILMIZ1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RILMJI_1 = max(min(AILMJI, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ), 0)
INVRETKS = NINVRETKS * 1 - V_CNR
INVRETKSA = min(NINVRETKS, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA)) * 1 - V_CNR
INVRETMB = min(round(NINVRETMB * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG)) * 1 - V_CNR
INVRETMBA = min(round(NINVRETMB * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA)) * 1 - V_CNR
INVRETMBR = min(round(INVRETMB * 3 / 2), NINVRETMB - INVRETMB) * 1 - V_CNR
INVRETMC = min(round(NINVRETMC * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB)) * 1 - V_CNR
INVRETMCA = min(round(NINVRETMC * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA)) * 1 - V_CNR
INVRETMCR = min(round(INVRETMC * 3 / 2), NINVRETMC - INVRETMC) * 1 - V_CNR
LIGREPLOC1 = is_positive(REPLOCN1) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NINVRETLH = max(min(saisies.get('RETROCOMLH', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC), 0) * 1 - V_CNR
NINVRETLHR = NINVRETLH - round(NINVRETLH * TX50 / 100) * 1 - V_CNR
NINVRETLI = max(min(saisies.get('RETROCOMLI', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH), 0) * 1 - V_CNR
NINVRETLIR = NINVRETLI - round(NINVRETLI * TX50 / 100) * 1 - V_CNR
REPMEUIZ = AILMIZ_R - RILMIZ * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMJI = max(0, RILMJI_1 * 1 - ART1731BIS + min(RILMJI_1, max(RILMJI_P + RILMJIP2, RILMJI1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RILMPC = max(min(AILMPC, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI), 0)
INVRETLH = min(round(NINVRETLH * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC)) * 1 - V_CNR
INVRETLHA = min(round(NINVRETLH * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETMCA)) * 1 - V_CNR
INVRETLHR = min(INVRETLH, max(0, NINVRETLH - INVRETLH)) * 1 - V_CNR
INVRETLI = min(round(NINVRETLI * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH)) * 1 - V_CNR
INVRETLIA = min(round(NINVRETLI * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA)) * 1 - V_CNR
INVRETLIR = min(INVRETLI, max(0, NINVRETLI - INVRETLI)) * 1 - V_CNR
LIGREPLOCIZ = is_positive(REPMEUIZ) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NINVRETKT = max(min(saisies.get('INVOMENTKT', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI), 0) * 1 - V_CNR
NINVRETKU = max(min(saisies.get('INVOMENTKU', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT), 0) * 1 - V_CNR
NINVRETQP = max(min(saisies.get('INVRETRO2', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU), 0) * 1 - V_CNR
NINVRETQPR = NINVRETQP - round(NINVRETQP * TX40 / 100) * 1 - V_CNR
REPMEUJI = DILMJI - RILMJI * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPMEUPC = DILMPC - RILMPC * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPRESINEUV = REPMEUJI
RILMJS_1 = max(min(AILMJS, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC), 0)
INVRETKT = NINVRETKT * 1 - V_CNR
INVRETKTA = min(NINVRETKT, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA)) * 1 - V_CNR
INVRETKU = NINVRETKU * 1 - V_CNR
INVRETKUA = min(NINVRETKU, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA)) * 1 - V_CNR
INVRETQP = min(round(NINVRETQP * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI)) * 1 - V_CNR
INVRETQPA = min(round(NINVRETQP * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA)) * 1 - V_CNR
INVRETQPR = min(round(INVRETQP * 3 / 2), NINVRETQP - INVRETQP) * 1 - V_CNR
LIGREP7PC = is_positive(REPMEUPC) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGREPLOCIJ = is_positive(REPRESINEUV) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NINVRETQG = max(min(saisies.get('INVDOMRET60', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP), 0) * 1 - V_CNR
NINVRETQGR = NINVRETQG - round(NINVRETQG * TX40 / 100) * 1 - V_CNR
RILMJS = max(0, RILMJS_1 * 1 - ART1731BIS + min(RILMJS_1, max(RILMJS_P + RILMJSP2, RILMJS1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RILMPD = max(min(AILMPD, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS), 0)
RILMPE = max(min(AILMPE, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD), 0)
RMEUBLE_1 = max(min(MEUBLERET, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE), 0)
INVRETQG = min(round(NINVRETQG * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP)) * 1 - V_CNR
INVRETQGA = min(round(NINVRETQG * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA)) * 1 - V_CNR
INVRETQGR = min(round(INVRETQG * 3 / 2), NINVRETQG - INVRETQG) * 1 - V_CNR
NINVRETPB = max(min(saisies.get('INVOMRETPB', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG), 0) * 1 - V_CNR
NINVRETPBR = NINVRETPB - round(NINVRETPB * TX375 / 100) * 1 - V_CNR
NINVRETPF = max(min(saisies.get('INVOMRETPF', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB), 0) * 1 - V_CNR
NINVRETPFR = NINVRETPF - round(NINVRETPF * TX375 / 100) * 1 - V_CNR
NINVRETPJ = max(min(saisies.get('INVOMRETPJ', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF), 0) * 1 - V_CNR
NINVRETPJR = NINVRETPJ - round(NINVRETPJ * TX375 / 100) * 1 - V_CNR
NINVRETQO = max(min(saisies.get('INVRETRO1', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ), 0) * 1 - V_CNR
NINVRETQOR = NINVRETQO - round(NINVRETQO * TX50 / 100) * 1 - V_CNR
REPMEUJS = DILMJS - RILMJS * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPMEUPD = DILMPD - RILMPD * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPMEUPE = DILMPE - RILMPE * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RMEUBLE = max(0, RMEUBLE_1 * 1 - ART1731BIS + min(RMEUBLE_1, max(RMEUBLE_P + RMEUBLEP2, RMEUBLE1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RPROREP_1 = max(min(RETPROREP, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE), 0)
INVRETQO = min(round(NINVRETQO * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG)) * 1 - V_CNR
INVRETQOA = min(round(NINVRETQO * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA)) * 1 - V_CNR
INVRETQOR = min(INVRETQO, max(0, NINVRETQO - INVRETQO)) * 1 - V_CNR
LIGREP7PD = is_positive(REPMEUPD) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGREP7PE = is_positive(REPMEUPE) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NINVRETQF = max(min(saisies.get('INVDOMRET50', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETQO), 0) * 1 - V_CNR
NINVRETQFR = NINVRETQF - round(NINVRETQF * TX50 / 100) * 1 - V_CNR
REPLOCNT = REPMEUJS
REPMEUIK = MEUBLERET - RMEUBLE * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RPROREP = max(0, RPROREP_1 * 1 - ART1731BIS + min(RPROREP_1, max(RPROREP_P + RPROREPP2, RPROREP1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RREPNPRO_1 = max(min(RETREPNPRO, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP), 0)
INVRETQF = min(round(NINVRETQF * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO)) * 1 - V_CNR
INVRETQFA = min(round(NINVRETQF * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA)) * 1 - V_CNR
INVRETQFR = min(INVRETQF, max(0, NINVRETQF - INVRETQF)) * 1 - V_CNR
LIGREPLOCJS = is_positive(REPLOCNT) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
NINVRETPA = max(min(saisies.get('INVOMRETPA', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETQO - NINVRETQF), 0) * 1 - V_CNR
NINVRETPAR = NINVRETPA - round(NINVRETPA * TX4737 / 100) * 1 - V_CNR
NINVRETPE = max(min(saisies.get('INVOMRETPE', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETQO - NINVRETQF - NINVRETPA), 0) * 1 - V_CNR
NINVRETPER = NINVRETPE - round(NINVRETPE * TX4737 / 100) * 1 - V_CNR
NINVRETPI = max(min(saisies.get('INVOMRETPI', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETQO - NINVRETQF - NINVRETPA - NINVRETPE), 0) * 1 - V_CNR
NINVRETPIR = NINVRETPI - round(NINVRETPI * TX4737 / 100) * 1 - V_CNR
NINVRETQR = max(min(saisies.get('INVIMP', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETQO - NINVRETQF - NINVRETPA - NINVRETPE - NINVRETPI), 0) * 1 - V_CNR
REPMEUIR = RETPROREP - RPROREP * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RREPNPRO = max(0, RREPNPRO_1 * 1 - ART1731BIS + min(RREPNPRO_1, max(RREPNPRO_P + RREPNPROP2, RREPNPRO1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETPB = min(round(NINVRETPB * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF)) * 1 - V_CNR
INVRETPBR = min(round(INVRETPB * 5 / 3), NINVRETPB - INVRETPB) * 1 - is_zero(1 - abs(round(INVRETPB * 5 / 3) - NINVRETPB - INVRETPB)) + NINVRETPB - INVRETPB * is_zero(1 - abs(round(INVRETPB * 5 / 3) - NINVRETPB - INVRETPB)) * 1 - V_CNR
INVRETPF = min(round(NINVRETPF * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB)) * 1 - V_CNR
INVRETPFR = min(round(INVRETPF * 5 / 3), NINVRETPF - INVRETPF) * 1 - is_zero(1 - abs(round(INVRETPF * 5 / 3) - NINVRETPF - INVRETPF)) + NINVRETPF - INVRETPF * is_zero(1 - abs(round(INVRETPF * 5 / 3) - NINVRETPF - INVRETPF)) * 1 - V_CNR
INVRETPJ = min(round(NINVRETPJ * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF)) * 1 - V_CNR
INVRETPJR = min(round(INVRETPJ * 5 / 3), NINVRETPJ - INVRETPJ) * 1 - is_zero(1 - abs(round(INVRETPJ * 5 / 3) - NINVRETPJ - INVRETPJ)) + NINVRETPJ - INVRETPJ * is_zero(1 - abs(round(INVRETPJ * 5 / 3) - NINVRETPJ - INVRETPJ)) * 1 - V_CNR
INVRETQR = NINVRETQR * 1 - V_CNR
INVRETQRA = min(NINVRETQR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA)) * 1 - V_CNR
NINVRETQI = max(min(saisies.get('INVDIR2009', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETQO - NINVRETQF - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETQR), 0) * 1 - V_CNR
REPMEUIQ = RETREPNPRO - RREPNPRO * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RREPMEU_1 = max(min(RETREPMEU, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO), 0)
INVRETPA = min(round(NINVRETPA * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ)) * 1 - V_CNR
INVRETPAR = min(round(INVRETPA * 10 / 9), NINVRETPA - INVRETPA) * 1 - is_zero(1 - abs(round(INVRETPA * 10 / 9) - NINVRETPA - INVRETPA)) + NINVRETPA - INVRETPA * is_zero(1 - abs(round(INVRETPA * 10 / 9) - NINVRETPA - INVRETPA)) * 1 - V_CNR
INVRETPE = min(round(NINVRETPE * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA)) * 1 - V_CNR
INVRETPER = min(round(INVRETPE * 10 / 9), NINVRETPE - INVRETPE) * 1 - is_zero(1 - abs(round(INVRETPE * 10 / 9) - NINVRETPE - INVRETPE)) + NINVRETPE - INVRETPE * is_zero(1 - abs(round(INVRETPE * 10 / 9) - NINVRETPE - INVRETPE)) * 1 - V_CNR
INVRETPI = min(round(NINVRETPI * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE)) * 1 - V_CNR
INVRETPIR = min(round(INVRETPI * 10 / 9), NINVRETPI - INVRETPI) * 1 - is_zero(1 - abs(round(INVRETPI * 10 / 9) - NINVRETPI - INVRETPI)) + NINVRETPI - INVRETPI * is_zero(1 - abs(round(INVRETPI * 10 / 9) - NINVRETPI - INVRETPI)) * 1 - V_CNR
INVRETQI = NINVRETQI * 1 - V_CNR
INVRETQIA = min(NINVRETQI, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA)) * 1 - V_CNR
NINVRETPD = max(min(saisies.get('INVOMRETPD', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI), 0) * 1 - V_CNR
NINVRETPH = max(min(saisies.get('INVOMRETPH', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD), 0) * 1 - V_CNR
NINVRETPL = max(min(saisies.get('INVOMRETPL', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH), 0) * 1 - V_CNR
NINVRETPO = max(min(saisies.get('INVOMRETPO', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL), 0) * 1 - V_CNR
NINVRETPOR = NINVRETPO - round(NINVRETPO * TX40 / 100) * 1 - V_CNR
NINVRETPT = max(min(saisies.get('INVOMRETPT', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO), 0) * 1 - V_CNR
NINVRETPTR = NINVRETPT - round(NINVRETPT * TX40 / 100) * 1 - V_CNR
NINVRETPY = max(min(saisies.get('INVOMRETPY', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT), 0) * 1 - V_CNR
NINVRETPYR = NINVRETPY - round(NINVRETPY * TX375 / 100) * 1 - V_CNR
NINVRETRL = max(min(saisies.get('INVOMENTRL', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY), 0) * 1 - V_CNR
NINVRETRLR = NINVRETRL - round(NINVRETRL * TX375 / 100) * 1 - V_CNR
NINVRETRQ = max(min(saisies.get('INVOMENTRQ', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL), 0) * 1 - V_CNR
NINVRETRQR = NINVRETRQ - round(NINVRETRQ * TX375 / 100) * 1 - V_CNR
NINVRETRV = max(min(saisies.get('INVOMENTRV', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ), 0) * 1 - V_CNR
NINVRETRVR = NINVRETRV - round(NINVRETRV * TX375 / 100) * 1 - V_CNR
RREPMEU = max(0, RREPMEU_1 * 1 - ART1731BIS + min(RREPMEU_1, max(RREPMEU_P + RREPMEUP2, RREPMEU1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETPD = NINVRETPD * 1 - V_CNR
INVRETPH = NINVRETPH * 1 - V_CNR
INVRETPL = NINVRETPL * 1 - V_CNR
INVRETPO = min(round(NINVRETPO * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI)) * 1 - V_CNR
INVRETPOA = min(round(NINVRETPO * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA)) * 1 - V_CNR
INVRETPOR = min(round(INVRETPO * 3 / 2), NINVRETPO - INVRETPO) * 1 - V_CNR
INVRETPT = min(round(NINVRETPT * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO)) * 1 - V_CNR
INVRETPTA = min(round(NINVRETPT * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA)) * 1 - V_CNR
INVRETPTR = min(round(INVRETPT * 3 / 2), NINVRETPT - INVRETPT) * 1 - V_CNR
INVRETPY = min(round(NINVRETPY * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT)) * 1 - V_CNR
INVRETPYR = min(round(INVRETPY * 5 / 3), NINVRETPY - INVRETPY) * 1 - is_zero(1 - abs(round(INVRETPY * 5 / 3) - NINVRETPY - INVRETPY)) + NINVRETPY - INVRETPY * is_zero(1 - abs(round(INVRETPY * 5 / 3) - NINVRETPY - INVRETPY)) * 1 - V_CNR
INVRETRL = min(round(NINVRETRL * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY)) * 1 - V_CNR
INVRETRLR = min(round(INVRETRL * 5 / 3), NINVRETRL - INVRETRL) * 1 - is_zero(1 - abs(round(INVRETRL * 5 / 3) - NINVRETRL - INVRETRL)) + NINVRETRL - INVRETRL * is_zero(1 - abs(round(INVRETRL * 5 / 3) - NINVRETRL - INVRETRL)) * 1 - V_CNR
INVRETRQ = min(round(NINVRETRQ * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL)) * 1 - V_CNR
INVRETRQR = min(round(INVRETRQ * 5 / 3), NINVRETRQ - INVRETRQ) * 1 - is_zero(1 - abs(round(INVRETRQ * 5 / 3) - NINVRETRQ - INVRETRQ)) + NINVRETRQ - INVRETRQ * is_zero(1 - abs(round(INVRETRQ * 5 / 3) - NINVRETRQ - INVRETRQ)) * 1 - V_CNR
INVRETRV = min(round(NINVRETRV * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ)) * 1 - V_CNR
INVRETRVR = min(round(INVRETRV * 5 / 3), NINVRETRV - INVRETRV) * 1 - is_zero(1 - abs(round(INVRETRV * 5 / 3) - NINVRETRV - INVRETRV)) + NINVRETRV - INVRETRV * is_zero(1 - abs(round(INVRETRV * 5 / 3) - NINVRETRV - INVRETRV)) * 1 - V_CNR
NINVRETNV = max(min(saisies.get('INVOMENTNV', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV), 0) * 1 - V_CNR
NINVRETNVR = NINVRETNV - round(NINVRETNV * TX375 / 100) * 1 - V_CNR
NINVRETPN = max(min(saisies.get('INVOMRETPN', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV), 0) * 1 - V_CNR
NINVRETPNR = NINVRETPN - round(NINVRETPN * TX50 / 100) * 1 - V_CNR
NINVRETPS = max(min(saisies.get('INVOMRETPS', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN), 0) * 1 - V_CNR
NINVRETPSR = NINVRETPS - round(NINVRETPS * TX50 / 100) * 1 - V_CNR
NINVRETPX = max(min(saisies.get('INVOMRETPX', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS), 0) * 1 - V_CNR
NINVRETPXR = NINVRETPX - round(NINVRETPX * TX4737 / 100) * 1 - V_CNR
NINVRETRK = max(min(saisies.get('INVOMENTRK', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX), 0) * 1 - V_CNR
NINVRETRKR = NINVRETRK - round(NINVRETRK * TX4737 / 100) * 1 - V_CNR
NINVRETRP = max(min(saisies.get('INVOMENTRP', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK), 0) * 1 - V_CNR
NINVRETRPR = NINVRETRP - round(NINVRETRP * TX4737 / 100) * 1 - V_CNR
NINVRETRU = max(min(saisies.get('INVOMENTRU', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP), 0) * 1 - V_CNR
NINVRETRUR = NINVRETRU - round(NINVRETRU * TX4737 / 100) * 1 - V_CNR
REPMEUIP = RETREPMEU - RREPMEU * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMIC_1 = max(min(AILMIC, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU), 0)
INVRETNV = min(round(NINVRETNV * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV)) * 1 - V_CNR
INVRETNVR = min(round(INVRETNV * 5 / 3), NINVRETNV - INVRETNV) * 1 - is_zero(1 - abs(round(INVRETNV * 5 / 3) - NINVRETNV - INVRETNV)) + NINVRETNV - INVRETNV * is_zero(1 - abs(round(INVRETNV * 5 / 3) - NINVRETNV - INVRETNV)) * 1 - V_CNR
INVRETPN = min(round(NINVRETPN * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV)) * 1 - V_CNR
INVRETPNA = min(round(NINVRETPN * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA)) * 1 - V_CNR
INVRETPNR = min(INVRETPN, max(0, NINVRETPN - INVRETPN)) * 1 - V_CNR
INVRETPS = min(round(NINVRETPS * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN)) * 1 - V_CNR
INVRETPSA = min(round(NINVRETPS * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA)) * 1 - V_CNR
INVRETPSR = min(INVRETPS, max(0, NINVRETPS - INVRETPS)) * 1 - V_CNR
INVRETPX = min(round(NINVRETPX * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS)) * 1 - V_CNR
INVRETPXR = min(round(INVRETPX * 10 / 9), NINVRETPX - INVRETPX) * 1 - is_zero(1 - abs(round(INVRETPX * 10 / 9) - NINVRETPX - INVRETPX)) + NINVRETPX - INVRETPX * is_zero(1 - abs(round(INVRETPX * 10 / 9) - NINVRETPX - INVRETPX)) * 1 - V_CNR
INVRETRK = min(round(NINVRETRK * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX)) * 1 - V_CNR
INVRETRKR = min(round(INVRETRK * 10 / 9), NINVRETRK - INVRETRK) * 1 - is_zero(1 - abs(round(INVRETRK * 10 / 9) - NINVRETRK - INVRETRK)) + NINVRETRK - INVRETRK * is_zero(1 - abs(round(INVRETRK * 10 / 9) - NINVRETRK - INVRETRK)) * 1 - V_CNR
INVRETRP = min(round(NINVRETRP * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK)) * 1 - V_CNR
INVRETRPR = min(round(INVRETRP * 10 / 9), NINVRETRP - INVRETRP) * 1 - is_zero(1 - abs(round(INVRETRP * 10 / 9) - NINVRETRP - INVRETRP)) + NINVRETRP - INVRETRP * is_zero(1 - abs(round(INVRETRP * 10 / 9) - NINVRETRP - INVRETRP)) * 1 - V_CNR
INVRETRU = min(round(NINVRETRU * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP)) * 1 - V_CNR
INVRETRUR = min(round(INVRETRU * 10 / 9), NINVRETRU - INVRETRU) * 1 - is_zero(1 - abs(round(INVRETRU * 10 / 9) - NINVRETRU - INVRETRU)) + NINVRETRU - INVRETRU * is_zero(1 - abs(round(INVRETRU * 10 / 9) - NINVRETRU - INVRETRU)) * 1 - V_CNR
NINVRETNU = max(min(saisies.get('INVOMENTNU', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU), 0) * 1 - V_CNR
NINVRETNUR = NINVRETNU - round(NINVRETNU * TX4737 / 100) * 1 - V_CNR
NINVRETPP = max(min(saisies.get('INVOMRETPP', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU), 0) * 1 - V_CNR
NINVRETPU = max(min(saisies.get('INVOMRETPU', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP), 0) * 1 - V_CNR
NINVRETRG = max(min(saisies.get('INVOMENTRG', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU), 0) * 1 - V_CNR
NINVRETRM = max(min(saisies.get('INVOMENTRM', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG), 0) * 1 - V_CNR
NINVRETRR = max(min(saisies.get('INVOMENTRR', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM), 0) * 1 - V_CNR
NINVRETRW = max(min(saisies.get('INVOMENTRW', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR), 0) * 1 - V_CNR
RILMIC = max(0, RILMIC_1 * 1 - ART1731BIS + min(RILMIC_1, max(RILMIC_P + RILMICP2, RILMIC1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETNU = min(round(NINVRETNU * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU)) * 1 - V_CNR
INVRETNUR = min(round(INVRETNU * 10 / 9), NINVRETNU - INVRETNU) * 1 - is_zero(1 - abs(round(INVRETNU * 10 / 9) - NINVRETNU - INVRETNU)) + NINVRETNU - INVRETNU * is_zero(1 - abs(round(INVRETNU * 10 / 9) - NINVRETNU - INVRETNU)) * 1 - V_CNR
INVRETPPA = min(NINVRETPP, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA)) * 1 - V_CNR
INVRETPUA = min(NINVRETPU, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA)) * 1 - V_CNR
NINVRETNW = max(min(saisies.get('INVOMENTNW', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW), 0) * 1 - V_CNR
NINVRETPR = max(min(saisies.get('INVOMRETPR', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW), 0) * 1 - V_CNR
NINVRETPW = max(min(saisies.get('INVOMRETPW', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR), 0) * 1 - V_CNR
NINVRETRI = max(min(saisies.get('INVOMENTRI', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW), 0) * 1 - V_CNR
NINVRETRO = max(min(saisies.get('INVOMENTRO', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI), 0) * 1 - V_CNR
NINVRETRT = max(min(saisies.get('INVOMENTRT', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO), 0) * 1 - V_CNR
NINVRETRY = max(min(saisies.get('INVOMENTRY', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT), 0) * 1 - V_CNR
REPMEUIC = AILMIC_R - RILMIC * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMIB_1 = max(min(AILMIB, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC), 0)
INVRETPR = NINVRETPR * 1 - V_CNR
INVRETPRA = min(NINVRETPR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA)) * 1 - V_CNR
INVRETPW = NINVRETPW * 1 - V_CNR
INVRETPWA = min(NINVRETPW, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA)) * 1 - V_CNR
INVRETQLA = min(NINVRETQL, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA)) * 1 - V_CNR
INVRETQMA = min(NINVRETQM, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA)) * 1 - V_CNR
INVRETRI = NINVRETRI * 1 - V_CNR
INVRETRO = NINVRETRO * 1 - V_CNR
INVRETRT = NINVRETRT * 1 - V_CNR
INVRETRY = NINVRETRY * 1 - V_CNR
NINVRETNY = max(min(saisies.get('INVOMENTNY', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY), 0) * 1 - V_CNR
NINVRETSB = max(min(saisies.get('CODHSB', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY), 0) * 1 - V_CNR
NINVRETSBR = NINVRETSB - round(NINVRETSB * TX375 / 100) * 1 - V_CNR
NINVRETSG = max(min(saisies.get('CODHSG', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB), 0) * 1 - V_CNR
NINVRETSGR = NINVRETSG - round(NINVRETSG * TX375 / 100) * 1 - V_CNR
NINVRETSL = max(min(saisies.get('CODHSL', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG), 0) * 1 - V_CNR
NINVRETSLR = NINVRETSL - round(NINVRETSL * TX375 / 100) * 1 - V_CNR
NINVRETSQ = max(min(saisies.get('CODHSQ', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL), 0) * 1 - V_CNR
NINVRETSQR = NINVRETSQ - round(NINVRETSQ * TX375 / 100) * 1 - V_CNR
NINVRETSV = max(min(saisies.get('CODHSV', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ), 0) * 1 - V_CNR
NINVRETSVR = NINVRETSV - round(NINVRETSV * TX375 / 100) * 1 - V_CNR
NINVRETTA = max(min(saisies.get('CODHTA', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV), 0) * 1 - V_CNR
NINVRETTAR = NINVRETTA - round(NINVRETTA * TX375 / 100) * 1 - V_CNR
RILMIB = max(0, RILMIB_1 * 1 - ART1731BIS + min(RILMIB_1, max(RILMIB_P + RILMIBP2, RILMIB1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETNY = NINVRETNY * 1 - V_CNR
INVRETQDA = min(NINVRETQD, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA)) * 1 - V_CNR
INVRETSB = min(round(NINVRETSB * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU)) * 1 - V_CNR
INVRETSBR = min(round(INVRETSB * 5 / 3), NINVRETSB - INVRETSB) * 1 - is_zero(1 - abs(round(INVRETSB * 5 / 3) - NINVRETSB - INVRETSB)) + NINVRETSB - INVRETSB * is_zero(1 - abs(round(INVRETSB * 5 / 3) - NINVRETSB - INVRETSB)) * 1 - V_CNR
INVRETSG = min(round(NINVRETSG * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB)) * 1 - V_CNR
INVRETSGR = min(round(INVRETSG * 5 / 3), NINVRETSG - INVRETSG) * 1 - is_zero(1 - abs(round(INVRETSG * 5 / 3) - NINVRETSG - INVRETSG)) + NINVRETSG - INVRETSG * is_zero(1 - abs(round(INVRETSG * 5 / 3) - NINVRETSG - INVRETSG)) * 1 - V_CNR
INVRETSL = min(round(NINVRETSL * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG)) * 1 - V_CNR
INVRETSLR = min(round(INVRETSL * 5 / 3), NINVRETSL - INVRETSL) * 1 - is_zero(1 - abs(round(INVRETSL * 5 / 3) - NINVRETSL - INVRETSL)) + NINVRETSL - INVRETSL * is_zero(1 - abs(round(INVRETSL * 5 / 3) - NINVRETSL - INVRETSL)) * 1 - V_CNR
INVRETSQ = min(round(NINVRETSQ * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL)) * 1 - V_CNR
INVRETSQR = min(round(INVRETSQ * 5 / 3), NINVRETSQ - INVRETSQ) * 1 - is_zero(1 - abs(round(INVRETSQ * 5 / 3) - NINVRETSQ - INVRETSQ)) + NINVRETSQ - INVRETSQ * is_zero(1 - abs(round(INVRETSQ * 5 / 3) - NINVRETSQ - INVRETSQ)) * 1 - V_CNR
INVRETSV = min(round(NINVRETSV * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ)) * 1 - V_CNR
INVRETSVR = min(round(INVRETSV * 5 / 3), NINVRETSV - INVRETSV) * 1 - is_zero(1 - abs(round(INVRETSV * 5 / 3) - NINVRETSV - INVRETSV)) + NINVRETSV - INVRETSV * is_zero(1 - abs(round(INVRETSV * 5 / 3) - NINVRETSV - INVRETSV)) * 1 - V_CNR
INVRETTA = min(round(NINVRETTA * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV)) * 1 - V_CNR
INVRETTAR = min(round(INVRETTA * 5 / 3), NINVRETTA - INVRETTA) * 1 - is_zero(1 - abs(round(INVRETTA * 5 / 3) - NINVRETTA - INVRETTA)) + NINVRETTA - INVRETTA * is_zero(1 - abs(round(INVRETTA * 5 / 3) - NINVRETTA - INVRETTA)) * 1 - V_CNR
NINVRETSA = max(min(saisies.get('CODHSA', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA), 0) * 1 - V_CNR
NINVRETSAR = NINVRETSA - round(NINVRETSA * TX4737 / 100) * 1 - V_CNR
NINVRETSF = max(min(saisies.get('CODHSF', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA), 0) * 1 - V_CNR
NINVRETSFR = NINVRETSF - round(NINVRETSF * TX4737 / 100) * 1 - V_CNR
NINVRETSK = max(min(saisies.get('CODHSK', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF), 0) * 1 - V_CNR
NINVRETSKR = NINVRETSK - round(NINVRETSK * TX4737 / 100) * 1 - V_CNR
NINVRETSP = max(min(saisies.get('CODHSP', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK), 0) * 1 - V_CNR
NINVRETSPR = NINVRETSP - round(NINVRETSP * TX4737 / 100) * 1 - V_CNR
NINVRETSU = max(min(saisies.get('CODHSU', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP), 0) * 1 - V_CNR
NINVRETSUR = NINVRETSU - round(NINVRETSU * TX4737 / 100) * 1 - V_CNR
NINVRETSZ = max(min(saisies.get('CODHSZ', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU), 0) * 1 - V_CNR
NINVRETSZR = NINVRETSZ - round(NINVRETSZ * TX4737 / 100) * 1 - V_CNR
REPMEUIB = AILMIB_R - RILMIB * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMIA_1 = max(min(AILMIA, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB), 0)
INVRETOBA = min(NINVRETOB, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA)) * 1 - V_CNR
INVRETOCA = min(NINVRETOC, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA)) * 1 - V_CNR
INVRETOMA = min(NINVRETOM, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA)) * 1 - V_CNR
INVRETONA = min(NINVRETON, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA)) * 1 - V_CNR
INVRETSA = min(round(NINVRETSA * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA)) * 1 - V_CNR
INVRETSAR = min(round(INVRETSA * 10 / 9), NINVRETSA - INVRETSA) * 1 - is_zero(1 - abs(round(INVRETSA * 10 / 9) - NINVRETSA - INVRETSA)) + NINVRETSA - INVRETSA * is_zero(1 - abs(round(INVRETSA * 10 / 9) - NINVRETSA - INVRETSA)) * 1 - V_CNR
INVRETSF = min(round(NINVRETSF * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA)) * 1 - V_CNR
INVRETSFR = min(round(INVRETSF * 10 / 9), NINVRETSF - INVRETSF) * 1 - is_zero(1 - abs(round(INVRETSF * 10 / 9) - NINVRETSF - INVRETSF)) + NINVRETSF - INVRETSF * is_zero(1 - abs(round(INVRETSF * 10 / 9) - NINVRETSF - INVRETSF)) * 1 - V_CNR
INVRETSK = min(round(NINVRETSK * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF)) * 1 - V_CNR
INVRETSKR = min(round(INVRETSK * 10 / 9), NINVRETSK - INVRETSK) * 1 - is_zero(1 - abs(round(INVRETSK * 10 / 9) - NINVRETSK - INVRETSK)) + NINVRETSK - INVRETSK * is_zero(1 - abs(round(INVRETSK * 10 / 9) - NINVRETSK - INVRETSK)) * 1 - V_CNR
INVRETSP = min(round(NINVRETSP * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK)) * 1 - V_CNR
INVRETSPR = min(round(INVRETSP * 10 / 9), NINVRETSP - INVRETSP) * 1 - is_zero(1 - abs(round(INVRETSP * 10 / 9) - NINVRETSP - INVRETSP)) + NINVRETSP - INVRETSP * is_zero(1 - abs(round(INVRETSP * 10 / 9) - NINVRETSP - INVRETSP)) * 1 - V_CNR
INVRETSU = min(round(NINVRETSU * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP)) * 1 - V_CNR
INVRETSUR = min(round(INVRETSU * 10 / 9), NINVRETSU - INVRETSU) * 1 - is_zero(1 - abs(round(INVRETSU * 10 / 9) - NINVRETSU - INVRETSU)) + NINVRETSU - INVRETSU * is_zero(1 - abs(round(INVRETSU * 10 / 9) - NINVRETSU - INVRETSU)) * 1 - V_CNR
INVRETSZ = min(round(NINVRETSZ * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU)) * 1 - V_CNR
INVRETSZR = min(round(INVRETSZ * 10 / 9), NINVRETSZ - INVRETSZ) * 1 - is_zero(1 - abs(round(INVRETSZ * 10 / 9) - NINVRETSZ - INVRETSZ)) + NINVRETSZ - INVRETSZ * is_zero(1 - abs(round(INVRETSZ * 10 / 9) - NINVRETSZ - INVRETSZ)) * 1 - V_CNR
NINVRETSC = max(min(saisies.get('CODHSC', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ), 0) * 1 - V_CNR
NINVRETSH = max(min(saisies.get('CODHSH', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC), 0) * 1 - V_CNR
NINVRETSM = max(min(saisies.get('CODHSM', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH), 0) * 1 - V_CNR
NINVRETSR = max(min(saisies.get('CODHSR', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM), 0) * 1 - V_CNR
NINVRETSW = max(min(saisies.get('CODHSW', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR), 0) * 1 - V_CNR
NINVRETTB = max(min(saisies.get('CODHTB', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW), 0) * 1 - V_CNR
RILMIA = max(0, RILMIA_1 * 1 - ART1731BIS + min(RILMIA_1, max(RILMIA_P + RILMIAP2, RILMIA1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RILMJY_1 = max(min(AILMJY, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA), 0)
INVRETODA = min(NINVRETOD, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA)) * 1 - V_CNR
INVRETUAA = min(NINVRETUA, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETODA)) * 1 - V_CNR
NINVRETSE = max(min(saisies.get('CODHSE', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB), 0) * 1 - V_CNR
NINVRETSJ = max(min(saisies.get('CODHSJ', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE), 0) * 1 - V_CNR
NINVRETSO = max(min(saisies.get('CODHSO', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ), 0) * 1 - V_CNR
NINVRETST = max(min(saisies.get('CODHST', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO), 0) * 1 - V_CNR
NINVRETSY = max(min(saisies.get('CODHSY', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST), 0) * 1 - V_CNR
NINVRETTD = max(min(saisies.get('CODHTD', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY), 0) * 1 - V_CNR
REPMEUIA = AILMIA_R - RILMIA * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMJY = max(0, RILMJY_1 * 1 - ART1731BIS + min(RILMJY_1, max(RILMJY_P + RILMJYP2, RILMJY1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETKGRA = min(NINVRETKGR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA)) * 1 - V_CNR
INVRETKHRA = min(NINVRETKHR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA)) * 1 - V_CNR
INVRETKIRA = min(NINVRETKIR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA)) * 1 - V_CNR
INVRETQNRA = min(NINVRETQNR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA)) * 1 - V_CNR
INVRETQURA = min(NINVRETQUR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA)) * 1 - V_CNR
INVRETSE = NINVRETSE * 1 - V_CNR
INVRETSJ = NINVRETSJ * 1 - V_CNR
INVRETSO = NINVRETSO * 1 - V_CNR
INVRETST = NINVRETST * 1 - V_CNR
INVRETSY = NINVRETSY * 1 - V_CNR
INVRETTD = NINVRETTD * 1 - V_CNR
NINVRETAB = max(min(saisies.get('CODHAB', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD), 0) * 1 - V_CNR
NINVRETABR = NINVRETAB - round(NINVRETAB * TX375 / 100) * 1 - V_CNR
NINVRETAG = max(min(saisies.get('CODHAG', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB), 0) * 1 - V_CNR
NINVRETAGR = NINVRETAG - round(NINVRETAG * TX375 / 100) * 1 - V_CNR
NINVRETAL = max(min(saisies.get('CODHAL', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG), 0) * 1 - V_CNR
NINVRETALR = NINVRETAL - round(NINVRETAL * TX375 / 100) * 1 - V_CNR
NINVRETAQ = max(min(saisies.get('CODHAQ', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL), 0) * 1 - V_CNR
NINVRETAQR = NINVRETAQ - round(NINVRETAQ * TX375 / 100) * 1 - V_CNR
NINVRETAV = max(min(saisies.get('CODHAV', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ), 0) * 1 - V_CNR
NINVRETAVR = NINVRETAV - round(NINVRETAV * TX375 / 100) * 1 - V_CNR
NINVRETBB = max(min(saisies.get('CODHBB', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV), 0) * 1 - V_CNR
NINVRETBBR = NINVRETBB - round(NINVRETBB * TX375 / 100) * 1 - V_CNR
REPMEUJY = DILMJY - RILMJY * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMJX_1 = max(min(AILMJX, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY), 0)
INVRETAB = min(round(NINVRETAB * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ)) * 1 - V_CNR
INVRETABR = min(round(INVRETAB * 5 / 3), NINVRETAB - INVRETAB) * 1 - is_zero(1 - abs(round(INVRETAB * 5 / 3) - NINVRETAB - INVRETAB)) + NINVRETAB - INVRETAB * is_zero(1 - abs(round(INVRETAB * 5 / 3) - NINVRETAB - INVRETAB)) * 1 - V_CNR
INVRETAG = min(round(NINVRETAG * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB)) * 1 - V_CNR
INVRETAGR = min(round(INVRETAG * 5 / 3), NINVRETAG - INVRETAG) * 1 - is_zero(1 - abs(round(INVRETAG * 5 / 3) - NINVRETAG - INVRETAG)) + NINVRETAG - INVRETAG * is_zero(1 - abs(round(INVRETAG * 5 / 3) - NINVRETAG - INVRETAG)) * 1 - V_CNR
INVRETAL = min(round(NINVRETAL * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG)) * 1 - V_CNR
INVRETALR = min(round(INVRETAL * 5 / 3), NINVRETAL - INVRETAL) * 1 - is_zero(1 - abs(round(INVRETAL * 5 / 3) - NINVRETAL - INVRETAL)) + NINVRETAL - INVRETAL * is_zero(1 - abs(round(INVRETAL * 5 / 3) - NINVRETAL - INVRETAL)) * 1 - V_CNR
INVRETAQ = min(round(NINVRETAQ * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL)) * 1 - V_CNR
INVRETAQR = min(round(INVRETAQ * 5 / 3), NINVRETAQ - INVRETAQ) * 1 - is_zero(1 - abs(round(INVRETAQ * 5 / 3) - NINVRETAQ - INVRETAQ)) + NINVRETAQ - INVRETAQ * is_zero(1 - abs(round(INVRETAQ * 5 / 3) - NINVRETAQ - INVRETAQ)) * 1 - V_CNR
INVRETAV = min(round(NINVRETAV * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ)) * 1 - V_CNR
INVRETAVR = min(round(INVRETAV * 5 / 3), NINVRETAV - INVRETAV) * 1 - is_zero(1 - abs(round(INVRETAV * 5 / 3) - NINVRETAV - INVRETAV)) + NINVRETAV - INVRETAV * is_zero(1 - abs(round(INVRETAV * 5 / 3) - NINVRETAV - INVRETAV)) * 1 - V_CNR
INVRETBB = min(round(NINVRETBB * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV)) * 1 - V_CNR
INVRETBBR = min(round(INVRETBB * 5 / 3), NINVRETBB - INVRETBB) * 1 - is_zero(1 - abs(round(INVRETBB * 5 / 3) - NINVRETBB - INVRETBB)) + NINVRETBB - INVRETBB * is_zero(1 - abs(round(INVRETBB * 5 / 3) - NINVRETBB - INVRETBB)) * 1 - V_CNR
INVRETQKRA = min(NINVRETQKR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA)) * 1 - V_CNR
NINVRETAA = max(min(saisies.get('CODHAA', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB), 0) * 1 - V_CNR
NINVRETAAR = NINVRETAA - round(NINVRETAA * TX4737 / 100) * 1 - V_CNR
NINVRETAF = max(min(saisies.get('CODHAF', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA), 0) * 1 - V_CNR
NINVRETAFR = NINVRETAF - round(NINVRETAF * TX4737 / 100) * 1 - V_CNR
NINVRETAK = max(min(saisies.get('CODHAK', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF), 0) * 1 - V_CNR
NINVRETAKR = NINVRETAK - round(NINVRETAK * TX4737 / 100) * 1 - V_CNR
NINVRETAP = max(min(saisies.get('CODHAP', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK), 0) * 1 - V_CNR
NINVRETAPR = NINVRETAP - round(NINVRETAP * TX4737 / 100) * 1 - V_CNR
NINVRETAU = max(min(saisies.get('CODHAU', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP), 0) * 1 - V_CNR
NINVRETAUR = NINVRETAU - round(NINVRETAU * TX4737 / 100) * 1 - V_CNR
NINVRETBA = max(min(saisies.get('CODHBA', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU), 0) * 1 - V_CNR
NINVRETBAR = NINVRETBA - round(NINVRETBA * TX4737 / 100) * 1 - V_CNR
RILMJX = max(0, RILMJX_1 * 1 - ART1731BIS + min(RILMJX_1, max(RILMJX_P + RILMJXP2, RILMJX1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETAA = min(round(NINVRETAA * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB)) * 1 - V_CNR
INVRETAAR = min(round(INVRETAA * 10 / 9), NINVRETAA - INVRETAA) * 1 - is_zero(1 - abs(round(INVRETAA * 10 / 9) - NINVRETAA - INVRETAA)) + NINVRETAA - INVRETAA * is_zero(1 - abs(round(INVRETAA * 10 / 9) - NINVRETAA - INVRETAA)) * 1 - V_CNR
INVRETAF = min(round(NINVRETAF * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA)) * 1 - V_CNR
INVRETAFR = min(round(INVRETAF * 10 / 9), NINVRETAF - INVRETAF) * 1 - is_zero(1 - abs(round(INVRETAF * 10 / 9) - NINVRETAF - INVRETAF)) + NINVRETAF - INVRETAF * is_zero(1 - abs(round(INVRETAF * 10 / 9) - NINVRETAF - INVRETAF)) * 1 - V_CNR
INVRETAK = min(round(NINVRETAK * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF)) * 1 - V_CNR
INVRETAKR = min(round(INVRETAK * 10 / 9), NINVRETAK - INVRETAK) * 1 - is_zero(1 - abs(round(INVRETAK * 10 / 9) - NINVRETAK - INVRETAK)) + NINVRETAK - INVRETAK * is_zero(1 - abs(round(INVRETAK * 10 / 9) - NINVRETAK - INVRETAK)) * 1 - V_CNR
INVRETAP = min(round(NINVRETAP * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK)) * 1 - V_CNR
INVRETAPR = min(round(INVRETAP * 10 / 9), NINVRETAP - INVRETAP) * 1 - is_zero(1 - abs(round(INVRETAP * 10 / 9) - NINVRETAP - INVRETAP)) + NINVRETAP - INVRETAP * is_zero(1 - abs(round(INVRETAP * 10 / 9) - NINVRETAP - INVRETAP)) * 1 - V_CNR
INVRETAU = min(round(NINVRETAU * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP)) * 1 - V_CNR
INVRETAUR = min(round(INVRETAU * 10 / 9), NINVRETAU - INVRETAU) * 1 - is_zero(1 - abs(round(INVRETAU * 10 / 9) - NINVRETAU - INVRETAU)) + NINVRETAU - INVRETAU * is_zero(1 - abs(round(INVRETAU * 10 / 9) - NINVRETAU - INVRETAU)) * 1 - V_CNR
INVRETBA = min(round(NINVRETBA * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU)) * 1 - V_CNR
INVRETBAR = min(round(INVRETBA * 10 / 9), NINVRETBA - INVRETBA) * 1 - is_zero(1 - abs(round(INVRETBA * 10 / 9) - NINVRETBA - INVRETBA)) + NINVRETBA - INVRETBA * is_zero(1 - abs(round(INVRETBA * 10 / 9) - NINVRETBA - INVRETBA)) * 1 - V_CNR
INVRETPP = min(NINVRETPP, max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA)) * 1 - V_CNR
INVRETPU = min(NINVRETPU, max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP)) * 1 - V_CNR
INVRETQJRA = min(NINVRETQJR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA)) * 1 - V_CNR
INVRETQSRA = min(NINVRETQSR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA)) * 1 - V_CNR
INVRETQWRA = min(NINVRETQWR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA)) * 1 - V_CNR
INVRETQXRA = min(NINVRETQXR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA)) * 1 - V_CNR
INVRETRARA = min(NINVRETRAR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA)) * 1 - V_CNR
INVRETRBRA = min(NINVRETRBR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA)) * 1 - V_CNR
INVRETRCRA = min(NINVRETRCR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA)) * 1 - V_CNR
INVRETRDRA = min(NINVRETRDR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA)) * 1 - V_CNR
INVRETRG = min(NINVRETRG, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU)) * 1 - V_CNR
INVRETRM = min(NINVRETRM, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG)) * 1 - V_CNR
INVRETRR = min(NINVRETRR, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM)) * 1 - V_CNR
INVRETRW = min(NINVRETRW, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR)) * 1 - V_CNR
INVRETXARA = min(NINVRETXAR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA)) * 1 - V_CNR
INVRETXBRA = min(NINVRETXBR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA)) * 1 - V_CNR
INVRETXCRA = min(NINVRETXCR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA)) * 1 - V_CNR
INVRETXERA = min(NINVRETXER, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA)) * 1 - V_CNR
NINVRETAC = max(min(saisies.get('CODHAC', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA), 0) * 1 - V_CNR
NINVRETAH = max(min(saisies.get('CODHAH', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC), 0) * 1 - V_CNR
NINVRETAM = max(min(saisies.get('CODHAM', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH), 0) * 1 - V_CNR
NINVRETAR = max(min(saisies.get('CODHAR', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM), 0) * 1 - V_CNR
NINVRETAW = max(min(saisies.get('CODHAW', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR), 0) * 1 - V_CNR
NINVRETBE = max(min(saisies.get('CODHBE', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW), 0) * 1 - V_CNR
REPMEUJX = DILMJX - RILMJX * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMJW_1 = max(min(AILMJW, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX), 0)
INVRETMARA = min(NINVRETMAR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA)) * 1 - V_CNR
INVRETNW = min(NINVRETNW, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW)) * 1 - V_CNR
INVRETSC = min(NINVRETSC, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW)) * 1 - V_CNR
INVRETSH = min(NINVRETSH, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC)) * 1 - V_CNR
INVRETSM = min(NINVRETSM, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH)) * 1 - V_CNR
INVRETSR = min(NINVRETSR, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM)) * 1 - V_CNR
INVRETSW = min(NINVRETSW, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR)) * 1 - V_CNR
INVRETTB = min(NINVRETTB, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW)) * 1 - V_CNR
NINVRETAE = max(min(saisies.get('CODHAE', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW - NINVRETBE), 0) * 1 - V_CNR
NINVRETAJ = max(min(saisies.get('CODHAJ', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW - NINVRETBE - NINVRETAE), 0) * 1 - V_CNR
NINVRETAO = max(min(saisies.get('CODHAO', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW - NINVRETBE - NINVRETAE - NINVRETAJ), 0) * 1 - V_CNR
NINVRETAT = max(min(saisies.get('CODHAT', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW - NINVRETBE - NINVRETAE - NINVRETAJ - NINVRETAO), 0) * 1 - V_CNR
NINVRETAY = max(min(saisies.get('CODHAY', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW - NINVRETBE - NINVRETAE - NINVRETAJ - NINVRETAO - NINVRETAT), 0) * 1 - V_CNR
NINVRETBG = max(min(saisies.get('CODHBG', 0), RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - saisies.get('INVOMREP', 0) - saisies.get('INVOMENTMN', 0) - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW - NINVRETBE - NINVRETAE - NINVRETAJ - NINVRETAO - NINVRETAT - NINVRETAY), 0) * 1 - V_CNR
RILMJW = max(0, RILMJW_1 * 1 - ART1731BIS + min(RILMJW_1, max(RILMJW_P + RILMJWP2, RILMJW1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETAC = min(NINVRETAC, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW - INVRETTB)) * 1 - V_CNR
INVRETAE = NINVRETAE * 1 - V_CNR
INVRETAH = min(NINVRETAH, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW - INVRETTB - INVRETAC)) * 1 - V_CNR
INVRETAJ = NINVRETAJ * 1 - V_CNR
INVRETAM = min(NINVRETAM, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW - INVRETTB - INVRETAC - INVRETAH)) * 1 - V_CNR
INVRETAO = NINVRETAO * 1 - V_CNR
INVRETAR = min(NINVRETAR, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW - INVRETTB - INVRETAC - INVRETAH - INVRETAM)) * 1 - V_CNR
INVRETAT = NINVRETAT * 1 - V_CNR
INVRETAW = min(NINVRETAW, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW - INVRETTB - INVRETAC - INVRETAH - INVRETAM - INVRETAR)) * 1 - V_CNR
INVRETAY = NINVRETAY * 1 - V_CNR
INVRETBE = min(NINVRETBE, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW - INVRETTB - INVRETAC - INVRETAH - INVRETAM - INVRETAR - INVRETAW)) * 1 - V_CNR
INVRETBG = NINVRETBG * 1 - V_CNR
INVRETENT = INVRETMA + INVRETLG + INVRETMB + INVRETMC + INVRETLH + INVRETLI + INVRETQP + INVRETQG + INVRETQO + INVRETQF + INVRETPB + INVRETPF + INVRETPJ + INVRETPA + INVRETPE + INVRETPI + INVRETPO + INVRETPT + INVRETPY + INVRETRL + INVRETRQ + INVRETRV + INVRETNV + INVRETPN + INVRETPS + INVRETPX + INVRETRK + INVRETRP + INVRETRU + INVRETNU + INVRETSB + INVRETSG + INVRETSL + INVRETSQ + INVRETSV + INVRETTA + INVRETSA + INVRETSF + INVRETSK + INVRETSP + INVRETSU + INVRETSZ + INVRETAB + INVRETAG + INVRETAL + INVRETAQ + INVRETAV + INVRETBB + INVRETAA + INVRETAF + INVRETAK + INVRETAP + INVRETAU + INVRETBA + INVRETPP + INVRETPU + INVRETRG + INVRETRM + INVRETRR + INVRETRW + INVRETNW + INVRETSC + INVRETSH + INVRETSM + INVRETSR + INVRETSW + INVRETTB + INVRETAC + INVRETAH + INVRETAM + INVRETAR + INVRETAW + INVRETBE
INVRETLGRA = min(NINVRETLGR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA)) * 1 - V_CNR
INVRETMBRA = min(NINVRETMBR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA)) * 1 - V_CNR
INVRETMCRA = min(NINVRETMCR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA)) * 1 - V_CNR
INVRETQL = min(NINVRETQL, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT)) * 1 - V_CNR
INVRETQM = min(NINVRETQM, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL)) * 1 - V_CNR
REPMEUJW = DILMJW - RILMJW * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMJV_1 = max(min(AILMJV, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW), 0)
INVRETLHRA = min(NINVRETLHR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETMCRA)) * 1 - V_CNR
INVRETLIRA = min(NINVRETLIR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETMCRA - INVRETLHRA)) * 1 - V_CNR
INVRETQD = min(NINVRETQD, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM)) * 1 - V_CNR
INVRETQPRA = min(NINVRETQPR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA)) * 1 - V_CNR
RILMJV = max(0, RILMJV_1 * 1 - ART1731BIS + min(RILMJV_1, max(RILMJV_P + RILMJVP2, RILMJV1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RILMOE = max(min(AILMOE, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV), 0)
INVRETOB = min(NINVRETOB, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD)) * 1 - V_CNR
INVRETOC = min(NINVRETOC, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB)) * 1 - V_CNR
INVRETOI = min(NINVRETOI, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC)) * 1 - V_CNR
INVRETOJ = min(NINVRETOJ, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI)) * 1 - V_CNR
INVRETOK = min(NINVRETOK, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ)) * 1 - V_CNR
INVRETOM = min(NINVRETOM, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK)) * 1 - V_CNR
INVRETON = min(NINVRETON, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM)) * 1 - V_CNR
INVRETOP = min(NINVRETOP, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON)) * 1 - V_CNR
INVRETOQ = min(NINVRETOQ, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP)) * 1 - V_CNR
INVRETOR = min(NINVRETOR, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ)) * 1 - V_CNR
INVRETOT = min(NINVRETOT, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR)) * 1 - V_CNR
INVRETOU = min(NINVRETOU, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT)) * 1 - V_CNR
INVRETOV = min(NINVRETOV, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU)) * 1 - V_CNR
INVRETOW = min(NINVRETOW, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV)) * 1 - V_CNR
INVRETQGRA = min(NINVRETQGR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA)) * 1 - V_CNR
INVRETQORA = min(NINVRETQOR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA)) * 1 - V_CNR
REPMEUJV = DILMJV - RILMJV * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPMEUOE = DILMOE - RILMOE * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMOD = max(min(AILMOD, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE), 0)
INVRETOD = min(NINVRETOD, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW)) * 1 - V_CNR
INVRETOE = min(NINVRETOE, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD)) * 1 - V_CNR
INVRETOF = min(NINVRETOF, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE)) * 1 - V_CNR
INVRETOG = min(NINVRETOG, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF)) * 1 - V_CNR
INVRETOX = min(NINVRETOX, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG)) * 1 - V_CNR
INVRETOY = min(NINVRETOY, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX)) * 1 - V_CNR
INVRETOZ = min(NINVRETOZ, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY)) * 1 - V_CNR
INVRETQFRA = min(NINVRETQFR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA - INVRETQORA)) * 1 - V_CNR
INVRETUA = min(NINVRETUA, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ)) * 1 - V_CNR
INVRETUB = min(NINVRETUB, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ - INVRETUA)) * 1 - V_CNR
INVRETUC = min(NINVRETUC, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ - INVRETUA - INVRETUB)) * 1 - V_CNR
INVRETUD = min(NINVRETUD, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ - INVRETUA - INVRETUB - INVRETUC)) * 1 - V_CNR
INVRETUE = min(NINVRETUE, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ - INVRETUA - INVRETUB - INVRETUC - INVRETUD)) * 1 - V_CNR
INVRETUF = min(NINVRETUF, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ - INVRETUA - INVRETUB - INVRETUC - INVRETUD - INVRETUE)) * 1 - V_CNR
INVRETUG = min(NINVRETUG, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ - INVRETUA - INVRETUB - INVRETUC - INVRETUD - INVRETUE - INVRETUF)) * 1 - V_CNR
REPMEUOD = DILMOD - RILMOD * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMOC = max(min(AILMOC, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD), 0)
TOTALPLAF1 = INVRETKG + INVRETKH + INVRETKI + INVRETQN + INVRETQU + INVRETQK + INVRETQJ + INVRETQS + INVRETQW + INVRETQX + INVRETRA + INVRETRB + INVRETRC + INVRETRD + INVRETXA + INVRETXB + INVRETXC + INVRETXE + INVRETMA + INVRETLG + INVRETMB + INVRETLH + INVRETMC + INVRETLI + INVRETQP + INVRETQG + INVRETQO + INVRETQF + INVRETPO + INVRETPT + INVRETPN + INVRETPS + INVRETPP + INVRETPU + INVRETKS + INVRETKT + INVRETKU + INVRETQR + INVRETQI + INVRETPR + INVRETPW + INVRETQL + INVRETQM + INVRETQD + INVRETOB + INVRETOC + INVRETOM + INVRETON + INVRETOD + INVRETUA + INVRETKGR + INVRETKHR + INVRETKIR + INVRETQNR + INVRETQUR + INVRETQKR + INVRETQJR + INVRETQSR + INVRETQWR + INVRETQXR + INVRETRAR + INVRETRBR + INVRETRCR + INVRETRDR + INVRETXAR + INVRETXBR + INVRETXCR + INVRETXER + INVRETMAR + INVRETLGR + INVRETMBR + INVRETLHR + INVRETMCR + INVRETLIR + INVRETQPR + INVRETQGR + INVRETQOR + INVRETQFR + INVRETPOR + INVRETPTR + INVRETPNR + INVRETPSR
TOTALPLAF2 = INVRETPB + INVRETPF + INVRETPJ + INVRETPA + INVRETPE + INVRETPI + INVRETPY + INVRETPX + INVRETRG + INVRETPD + INVRETPH + INVRETPL + INVRETRI + INVRETSB + INVRETSG + INVRETSA + INVRETSF + INVRETSC + INVRETSH + INVRETSE + INVRETSJ + INVRETAB + INVRETAG + INVRETAA + INVRETAF + INVRETAC + INVRETAH + INVRETAE + INVRETAJ + INVRETOI + INVRETOJ + INVRETOK + INVRETOP + INVRETOQ + INVRETOR + INVRETOE + INVRETOF + INVRETUB + INVRETUC + INVRETPBR + INVRETPFR + INVRETPJR + INVRETPAR + INVRETPER + INVRETPIR + INVRETPYR + INVRETPXR + INVRETSBR + INVRETSGR + INVRETSAR + INVRETSFR + INVRETABR + INVRETAGR + INVRETAAR + INVRETAFR
TOTALPLAF3 = INVRETRL + INVRETRQ + INVRETRV + INVRETNV + INVRETRK + INVRETRP + INVRETRU + INVRETNU + INVRETRM + INVRETRR + INVRETRW + INVRETNW + INVRETRO + INVRETRT + INVRETRY + INVRETNY + INVRETSL + INVRETSQ + INVRETSV + INVRETTA + INVRETSK + INVRETSP + INVRETSU + INVRETSZ + INVRETSM + INVRETSR + INVRETSW + INVRETTB + INVRETSO + INVRETST + INVRETSY + INVRETTD + INVRETAL + INVRETAQ + INVRETAV + INVRETBB + INVRETAK + INVRETAP + INVRETAU + INVRETBA + INVRETAM + INVRETAR + INVRETAW + INVRETBE + INVRETAO + INVRETAT + INVRETAY + INVRETBG + INVRETOT + INVRETOU + INVRETOV + INVRETOW + INVRETOG + INVRETOX + INVRETOY + INVRETOZ + INVRETUD + INVRETUE + INVRETUF + INVRETUG + INVRETRLR + INVRETRQR + INVRETRVR + INVRETNVR + INVRETRKR + INVRETRPR + INVRETRUR + INVRETNUR + INVRETSLR + INVRETSQR + INVRETSVR + INVRETTAR + INVRETSKR + INVRETSPR + INVRETSUR + INVRETSZR + INVRETALR + INVRETAQR + INVRETAVR + INVRETBBR + INVRETAKR + INVRETAPR + INVRETAUR + INVRETBAR
INDPLAF1 = is_positive(RNIDOM1 - TOTALPLAF1)
INVRETLOG = INVRETQL + INVRETQM + INVRETQD + INVRETOB + INVRETOC + INVRETOI + INVRETOJ + INVRETOK + INVRETOM + INVRETON + INVRETOP + INVRETOQ + INVRETOR + INVRETOT + INVRETOU + INVRETOV + INVRETOW + INVRETOD + INVRETOE + INVRETOF + INVRETOG + INVRETOX + INVRETOY + INVRETOZ + INVRETUA + INVRETUB + INVRETUC + INVRETUD + INVRETUE + INVRETUF + INVRETUG
INVRETPORA = min(NINVRETPOR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA - INVRETQORA - INVRETQFRA)) * 1 - V_CNR
INVRETPTRA = min(NINVRETPTR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA - INVRETQORA - INVRETQFRA - INVRETPORA)) * 1 - V_CNR
REPMEUOC = DILMOC - RILMOC * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMOB = max(min(AILMOB, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC), 0)
INVRETPNRA = min(NINVRETPNR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA - INVRETQORA - INVRETQFRA - INVRETPORA - INVRETPTRA)) * 1 - V_CNR
INVRETPSRA = min(NINVRETPSR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA - INVRETQORA - INVRETQFRA - INVRETPORA - INVRETPTRA - INVRETPNRA)) * 1 - V_CNR
REPMEUOB = DILMOB - RILMOB * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RILMOA = max(min(AILMOA, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB), 0)
RRESIMEUB_1 = max(min(RETRESIMEUB, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA), 0)
TOTALPLAFA = INVRETKGA + INVRETKHA + INVRETKIA + INVRETQNA + INVRETQUA + INVRETQKA + INVRETQJA + INVRETQSA + INVRETQWA + INVRETQXA + INVRETRAA + INVRETRBA + INVRETRCA + INVRETRDA + INVRETXAA + INVRETXBA + INVRETXCA + INVRETXEA + INVRETMAA + INVRETLGA + INVRETKSA + INVRETMBA + INVRETLHA + INVRETMCA + INVRETLIA + INVRETKTA + INVRETKUA + INVRETQPA + INVRETQGA + INVRETQOA + INVRETQFA + INVRETQRA + INVRETQIA + INVRETPOA + INVRETPTA + INVRETPNA + INVRETPSA + INVRETPPA + INVRETPUA + INVRETPRA + INVRETPWA + INVRETQLA + INVRETQMA + INVRETQDA + INVRETOBA + INVRETOCA + INVRETOMA + INVRETONA + INVRETODA + INVRETUAA + INVRETKGRA + INVRETKHRA + INVRETKIRA + INVRETQNRA + INVRETQURA + INVRETQKRA + INVRETQJRA + INVRETQSRA + INVRETQWRA + INVRETQXRA + INVRETRARA + INVRETRBRA + INVRETRCRA + INVRETRDRA + INVRETXARA + INVRETXBRA + INVRETXCRA + INVRETXERA + INVRETMARA + INVRETLGRA + INVRETMBRA + INVRETLHRA + INVRETLIRA + INVRETMCRA + INVRETQPRA + INVRETQGRA + INVRETQORA + INVRETQFRA + INVRETPORA + INVRETPTRA + INVRETPNRA + INVRETPSRA
INDPLAF2 = is_positive(RNIDOM2 - TOTALPLAF2 - TOTALPLAFA)
MAXDOM2 = max(0, RNIDOM2 - TOTALPLAFA)
REPMEUOA = DILMOA - RILMOA * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRESIMEUB = max(0, RRESIMEUB_1 * 1 - ART1731BIS + min(RRESIMEUB_1, max(RRESIMEUB_P + RRESIMEUBP2, RRESIMEUB1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETPBA = min(round(NINVRETPB * TX375 / 100), MAXDOM2) * 1 - V_CNR
INVRETPFA = min(round(NINVRETPF * TX375 / 100), max(0, MAXDOM2 - INVRETPBA)) * 1 - V_CNR
INVRETPJA = min(round(NINVRETPJ * TX375 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA)) * 1 - V_CNR
RCODIW_1 = max(min(RETCODIW, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB), 0)
REPLOCIO = RETRESIMEUB_1 - RRESIMEUB * is_positive(saisies.get('VIEUMEUB', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPRESIMEUB = RETRESIMEUB_1 - RRESIMEUB
INVRETPAA = min(round(NINVRETPA * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA)) * 1 - V_CNR
INVRETPEA = min(round(NINVRETPE * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA)) * 1 - V_CNR
INVRETPIA = min(round(NINVRETPI * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA)) * 1 - V_CNR
RCODIW = max(0, RCODIW_1 * 1 - ART1731BIS + min(RCODIW_1, max(RCODIW_P + RCODIWP2, RCODIW1731 + 0) * 1 - PREM8_11) * ART1731BIS)
REPLOCIW = RETCODIW - RCODIW * is_positive(saisies.get('RESIVIANT', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
INVRETPDA = min(NINVRETPD, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA)) * 1 - V_CNR
INVRETPHA = min(NINVRETPH, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA)) * 1 - V_CNR
INVRETPLA = min(NINVRETPL, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA)) * 1 - V_CNR
INVRETPYA = min(round(NINVRETPY * TX375 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA)) * 1 - V_CNR
RCODIM_1 = max(min(RETCODIM, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RCODIW), 0)
REPLNPZ = REPMEUIK + REPMEUIR + REPMEUIQ + REPMEUIC + REPMEUJY + REPLOCIO + REPLOCIW + REPMEUOE
INVRETPXA = min(round(NINVRETPX * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA)) * 1 - V_CNR
INVRETRGA = min(NINVRETRG, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA)) * 1 - V_CNR
INVRETRIA = min(NINVRETRI, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA)) * 1 - V_CNR
INVRETSBA = min(round(NINVRETSB * TX375 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA)) * 1 - V_CNR
INVRETSGA = min(round(NINVRETSG * TX375 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA)) * 1 - V_CNR
LIGREPLNPZ = is_positive(REPLNPZ) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGREPNEUV = is_positive(MEUBLERED + REPREDREP + REPMEUIX + REPLOCN2 + REPMEUPA + REPLNPZ) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCODIM = max(0, RCODIM_1 * 1 - ART1731BIS + min(RCODIM_1, max(RCODIM_P + RCODIMP2, RCODIM1731 + 0) * 1 - PREM8_11) * ART1731BIS)
REPLOCIM = RETCODIM - RCODIM * is_positive(saisies.get('RESIVIEU', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRESIVIEU = RCODIW + RCODIM
INVRETSAA = min(round(NINVRETSA * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA)) * 1 - V_CNR
INVRETSFA = min(round(NINVRETSF * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA)) * 1 - V_CNR
RCODIL_1 = max(min(RETCODIL, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU), 0)
REPRESIVIEU = RETRESIVIEU_1 - RRESIVIEU * is_positive(saisies.get('RESIVIEU', 0))
RESIVIEUREP = RETRESIVIEU_1 - RRESIVIEU * is_positive(saisies.get('RESIVIANT', 0))
INVRETSCA = min(NINVRETSC, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA)) * 1 - V_CNR
INVRETSHA = min(NINVRETSH, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA)) * 1 - V_CNR
RCODIL = RCODIL_1 * 1 - ART1731BIS + min(RCODIL_1, max(RCODIL_P + RCODILP2, RCODIL1731 + 0) * 1 - PREM8_11) * ART1731BIS
RCODIN_1 = max(min(RETCODIN, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RCODIL), 0)
REPLOCIL = RETCODIL - RCODIL * is_positive(saisies.get('MEUBLENP', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPMEUTOT1 = REPRESIMEUB + REPMEUIK + REPMEUIQ + REPMEUIR + RESIVIEUREP
INVRETSEA = min(NINVRETSE, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA)) * 1 - V_CNR
INVRETSJA = min(NINVRETSJ, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA)) * 1 - V_CNR
RCODIN = RCODIN_1 * 1 - ART1731BIS + min(RCODIN_1, max(RCODIN_P + RCODINP2, RCODIN1731 + 0) * 1 - PREM8_11) * ART1731BIS
RCODIV_1 = max(min(RETCODIV, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RCODIL - RCODIN), 0)
REPLNPY = REPMEUIP + REPMEUIB + REPMEUJX + REPLOCIM + REPLOCIL + REPMEUOD
REPLOCIN = RETCODIN - RCODIN * is_positive(saisies.get('INVNPROF1', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
INVRETABA = min(round(NINVRETAB * TX375 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA)) * 1 - V_CNR
INVRETAGA = min(round(NINVRETAG * TX375 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA)) * 1 - V_CNR
LIGREPLNPY = is_positive(REPLNPY) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGREPMEU = is_positive(REPINVRED + REPMEUIH + REPLOCN1 + REPMEUPB + REPLNPY) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCODIV = RCODIV_1 * 1 - ART1731BIS + min(RCODIV_1, max(RCODIV_P + RCODIVP2, RCODIV1731 + 0) * 1 - PREM8_11) * ART1731BIS
REPLOCIV = RETCODIV - RCODIV * is_positive(saisies.get('INVNPROF2', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
INVRETAAA = min(round(NINVRETAA * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA)) * 1 - V_CNR
INVRETAFA = min(round(NINVRETAF * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA)) * 1 - V_CNR
RCODIJ_1 = max(min(RETCODIJ, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RCODIL - RCODIN - RCODIV), 0)
INVRETACA = min(NINVRETAC, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA)) * 1 - V_CNR
INVRETAHA = min(NINVRETAH, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA)) * 1 - V_CNR
RCODIJ = RCODIJ_1 * 1 - ART1731BIS + min(RCODIJ_1, max(RCODIJ_P + RCODIJP2, RCODIJ1731 + 0) * 1 - PREM8_11) * ART1731BIS
REPLOCIJ = RETCODIJ - RCODIJ * is_positive(saisies.get('LOCRESINEUV', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RRESINEUV = RCODIL + RCODIN + RCODIV + RCODIJ
INVRETAEA = min(NINVRETAE, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA)) * 1 - V_CNR
INVRETAJA = min(NINVRETAJ, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA)) * 1 - V_CNR
INVRETOIA = min(NINVRETOI, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA)) * 1 - V_CNR
INVRETOJA = min(NINVRETOJ, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA)) * 1 - V_CNR
INVRETOKA = min(NINVRETOK, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA)) * 1 - V_CNR
INVRETOPA = min(NINVRETOP, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA)) * 1 - V_CNR
INVRETOQA = min(NINVRETOQ, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA)) * 1 - V_CNR
INVRETORA = min(NINVRETOR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA)) * 1 - V_CNR
MEUBLEREP = RETRESINEUV_1 - RRESINEUV * is_positive(saisies.get('MEUBLENP', 0))
RCODIE_1 = max(min(RETCODIE, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV), 0)
REPMEUTOT2 = REPMEUIP + MEUBLEREP + REPRESIVIEU
REPRETREP = REPRESIVIEU + MEUBLEREP + REPMEUIK
INVRETOEA = min(NINVRETOE, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA)) * 1 - V_CNR
INVRETOFA = min(NINVRETOF, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA)) * 1 - V_CNR
INVRETUBA = min(NINVRETUB, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA)) * 1 - V_CNR
INVRETUCA = min(NINVRETUC, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA)) * 1 - V_CNR
RCODIE = RCODIE_1 * 1 - ART1731BIS + min(RCODIE_1, max(RCODIE_P + RCODIEP2, RCODIE1731 + 0) * 1 - PREM8_11) * ART1731BIS
RCODIF_1 = max(min(RETCODIF, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV - RCODIE), 0)
REPLOC7IE = RETCODIE - RCODIE * is_positive(saisies.get('LOCMEUBIE', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
INVRETPBRA = min(NINVRETPBR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA)) * 1 - V_CNR
INVRETPFRA = min(NINVRETPFR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA)) * 1 - V_CNR
INVRETPJRA = min(NINVRETPJR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA)) * 1 - V_CNR
RCODIF = RCODIF_1 * 1 - ART1731BIS + min(RCODIF_1, max(RCODIF_P + RCODIFP2, RCODIF1731 + 0) * 1 - PREM8_11) * ART1731BIS
RCODIG_1 = max(min(RETCODIG, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV - RCODIE - RCODIF), 0)
REPLNPX = REPMEUIA + REPMEUJW + REPLOCIV + REPLOCIN + REPLOCIJ + REPLOC7IE + REPMEUOC
REPLOCIF = RETCODIF - RCODIF * is_positive(saisies.get('LOCMEUBIF', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
INVRETPARA = min(NINVRETPAR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA)) * 1 - V_CNR
INVRETPERA = min(NINVRETPER, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA)) * 1 - V_CNR
INVRETPIRA = min(NINVRETPIR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA)) * 1 - V_CNR
INVRETPYRA = min(NINVRETPYR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA)) * 1 - V_CNR
LIGREPLNPX = is_positive(REPLNPX) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGRESIREP = is_positive(REPMEUIZ + REPRESINEUV + REPMEUPC + REPLNPX) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCODIG = RCODIG_1 * 1 - ART1731BIS + min(RCODIG_1, max(RCODIG_P + RCODIGP2, RCODIG1731 + 0) * 1 - PREM8_11) * ART1731BIS
REPLOCIG = RETCODIG - RCODIG * is_positive(saisies.get('LOCMEUBIG', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
INVRETPXRA = min(NINVRETPXR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA)) * 1 - V_CNR
INVRETSBRA = min(NINVRETSBR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA)) * 1 - V_CNR
INVRETSGRA = min(NINVRETSGR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA)) * 1 - V_CNR
RCODID_1 = max(min(RETCODID, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV - RCODIE - RCODIF - RCODIG), 0)
INVRETSARA = min(NINVRETSAR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA - INVRETSGRA)) * 1 - V_CNR
INVRETSFRA = min(NINVRETSFR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA - INVRETSGRA - INVRETSARA)) * 1 - V_CNR
RCODID = RCODID_1 * 1 - ART1731BIS + min(RCODID_1, max(RCODID_P + RCODIDP2, RCODID1731 + 0) * 1 - PREM8_11) * ART1731BIS
REPLOCID = RETCODID - RCODID * is_positive(saisies.get('LOCMEUBID', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RLOCIDEFG = RCODIE + RCODIF + RCODIG + RCODID
INVRETABRA = min(NINVRETABR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA - INVRETSGRA - INVRETSARA - INVRETSFRA)) * 1 - V_CNR
INVRETAGRA = min(NINVRETAGR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA - INVRETSGRA - INVRETSARA - INVRETSFRA - INVRETABRA)) * 1 - V_CNR
RCODJU_1 = max(min(RETCODJU, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV - RLOCIDEFG), 0)
INVRETAARA = min(NINVRETAAR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA - INVRETSGRA - INVRETSARA - INVRETSFRA - INVRETABRA - INVRETAGRA)) * 1 - V_CNR
INVRETAFRA = min(NINVRETAFR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA - INVRETSGRA - INVRETSARA - INVRETSFRA - INVRETABRA - INVRETAGRA - INVRETAARA)) * 1 - V_CNR
RCODJU = max(0, RCODJU_1 * 1 - ART1731BIS + min(RCODJU_1, max(RCODJU_P + RCODJUP2, RCODJU1731 + 0) * 1 - PREM8_11) * ART1731BIS)
REPLOCJU = RETCODJU - RCODJU * is_positive(saisies.get('LOCMEUBJU', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
TOTALPLAFB = INVRETPBA + INVRETPFA + INVRETPJA + INVRETPAA + INVRETPEA + INVRETPIA + INVRETPDA + INVRETPHA + INVRETPLA + INVRETPYA + INVRETPXA + INVRETRGA + INVRETRIA + INVRETSBA + INVRETSGA + INVRETSAA + INVRETSFA + INVRETABA + INVRETAGA + INVRETAAA + INVRETAFA + INVRETACA + INVRETAHA + INVRETAEA + INVRETAJA + INVRETSCA + INVRETSHA + INVRETSEA + INVRETSJA + INVRETOIA + INVRETOJA + INVRETOKA + INVRETOPA + INVRETOQA + INVRETORA + INVRETOEA + INVRETOFA + INVRETUBA + INVRETUCA + INVRETPBRA + INVRETPFRA + INVRETPJRA + INVRETPARA + INVRETPERA + INVRETPIRA + INVRETPYRA + INVRETPXRA + INVRETSBRA + INVRETSGRA + INVRETSARA + INVRETSFRA + INVRETABRA + INVRETAGRA + INVRETAARA + INVRETAFRA
INDPLAF3 = is_positive(RNIDOM3 - TOTALPLAF3 - TOTALPLAFA - TOTALPLAFB)
MAXDOM3 = max(0, RNIDOM3 - TOTALPLAFA - TOTALPLAFB)
RCODJT_1 = max(min(RETCODJT, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV - RLOCIDEFG - RCODJU), 0)
REPLNPW = REPMEUJV + REPLOCIG + REPLOCIF + REPLOCID + REPLOCJU + REPMEUOB
INVRETRLA = min(round(NINVRETRL * TX375 / 100), MAXDOM3) * 1 - V_CNR
INVRETRQA = min(round(NINVRETRQ * TX375 / 100), max(0, MAXDOM3 - INVRETRLA)) * 1 - V_CNR
INVRETRVA = min(round(NINVRETRV * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA)) * 1 - V_CNR
LIGREPLOCJU = is_positive(REPLNPW) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGREPLOCNT = is_positive(REPLNPW + REPMEUPD + REPLOCNT) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RCODJT = max(0, RCODJT_1 * 1 - ART1731BIS + min(RCODJT_1, max(RCODJT_P + RCODJTP2, RCODJT1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCODJTJU = RCODJU + RCODJT
RCODOU = max(min(RETCODOU, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV - RLOCIDEFG - RCODJTJU), 0)
REPLOCJT = RETCODJT - RCODJT * is_positive(saisies.get('LOCMEUBJT', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPMEUOU = RETCODOU - RCODOU * is_positive(saisies.get('COD7OU', 0) + 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RLOCNPRO = RREDMEUB + RREDREP + RILMIX + RILMIY + RILMPA + RINVRED + RILMIH + RILMJC + RILMPB + RILMIZ + RILMJI + RILMPC + RILMJS + RILMPD + RILMPE + RMEUBLE + RPROREP + RREPNPRO + RREPMEU + RILMIC + RILMIB + RILMIA + RILMJY + RILMJX + RILMJW + RILMJV + RILMOE + RILMOD + RILMOC + RILMOB + RILMOA + RRESIMEUB + RRESIVIEU + RRESINEUV + RLOCIDEFG + RCODJTJU + RCODOU
RPATNAT1_1 = max(min(APATNAT1, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP - RTOUHOTR - RTOUREPA - RCELTOT - RLOCNPRO), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
INVRETNVA = min(round(NINVRETNV * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA)) * 1 - V_CNR
INVRETRKA = min(round(NINVRETRK * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA)) * 1 - V_CNR
INVRETRPA = min(round(NINVRETRP * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA)) * 1 - V_CNR
INVRETRUA = min(round(NINVRETRU * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA)) * 1 - V_CNR
LIGREPOU = is_positive(REPMEUOU) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPLNPV = REPLOCJT + REPMEUOA
RPATNAT1 = max(0, RPATNAT1_1 * 1 - ART1731BIS + min(RPATNAT1_1, max(RPATNAT1_P + RPATNAT1P2, RPATNAT11731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RPATNAT2_1 = max(min(APATNAT2, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP - RTOUHOTR - RTOUREPA - RCELTOT - RLOCNPRO - RPATNAT1), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
INVRETNUA = min(round(NINVRETNU * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA)) * 1 - V_CNR
INVRETRMA = min(NINVRETRM, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA)) * 1 - V_CNR
INVRETRRA = min(NINVRETRR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA)) * 1 - V_CNR
INVRETRWA = min(NINVRETRW, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA)) * 1 - V_CNR
LIGREPCODJT = is_positive(REPLNPV + REPMEUPE) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGREPLNPV = is_positive(REPLNPV) * LIG1 * LIG2 * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPNATR1 = max(saisies.get('PATNAT1', 0) - RPATNAT1, 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RPATNAT2 = max(0, RPATNAT2_1 * 1 - ART1731BIS + min(RPATNAT2_1, max(RPATNAT2_P + RPATNAT2P2, RPATNAT21731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RPATNAT3_1 = max(min(APATNAT3, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP - RTOUHOTR - RTOUREPA - RCELTOT - RLOCNPRO - RPATNAT1 - RPATNAT2), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
INVRETNWA = min(NINVRETNW, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA)) * 1 - V_CNR
INVRETROA = min(NINVRETRO, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA)) * 1 - V_CNR
INVRETRTA = min(NINVRETRT, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA)) * 1 - V_CNR
INVRETRYA = min(NINVRETRY, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA)) * 1 - V_CNR
LIGNATR1 = is_positive(REPNATR1) * LIG1
REPNATR2 = max(saisies.get('PATNAT2', 0) - RPATNAT2, 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RPATNAT3 = max(0, RPATNAT3_1 * 1 - ART1731BIS + min(RPATNAT3_1, max(RPATNAT3_P + RPATNAT3P2, RPATNAT31731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RPATNAT_1 = max(min(APATNAT, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP - RTOUHOTR - RTOUREPA - RCELTOT - RLOCNPRO - RPATNAT1 - RPATNAT2 - RPATNAT3), 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
INVRETNYA = min(NINVRETNY, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA)) * 1 - V_CNR
INVRETSLA = min(round(NINVRETSL * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA)) * 1 - V_CNR
INVRETSQA = min(round(NINVRETSQ * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA)) * 1 - V_CNR
INVRETSVA = min(round(NINVRETSV * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA)) * 1 - V_CNR
INVRETTAA = min(round(NINVRETTA * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA)) * 1 - V_CNR
LIGNATR2 = is_positive(REPNATR2) * LIG1
REPNATR3 = max(saisies.get('PATNAT3', 0) - RPATNAT3, 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RPATNAT = max(0, RPATNAT_1 * 1 - ART1731BIS + min(RPATNAT_1, max(RPATNAT_P + RPATNATP2, RPATNAT1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
RPATNATOT = RPATNAT1 + RPATNAT2 + RPATNAT3 + RPATNAT
RRIREP = RRI1 - DLOGDOM - RTOURES - RTOURREP - RTOUHOTR - RTOUREPA - RCOMP - RCREAT - RRETU - RDONS - RCELTOT - RLOCNPRO - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RPATNATOT
RRISUP = RRI1 - RLOGDOM - RTOURREP - RTOUHOTR - RTOUREPA - RCOMP - RCREAT - RRETU - RDONS - RCELTOT - RLOCNPRO - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RPATNATOT
A13REELA = RCOTFOR + RFIPDOM + RAIDE + RFIPC + RINNO + RSOUFIP + RRIRENOV + RDUFLOEKL + RPINELTOT + A13RFOR + round(RSNCF + RSNCU + RSNCC + RSNCR + RPLAFREPME4) + RCODOU + CIDEVDUR + CIGARD + CIADCRE + CIHABPRIN + CILOYIMP + CIFORET + RDUFREPFI + RDUFLOGIH + RCODJT + RILMPE + RILMOA + RPATNAT
INVRETSKA = min(round(NINVRETSK * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA)) * 1 - V_CNR
INVRETSPA = min(round(NINVRETSP * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA)) * 1 - V_CNR
INVRETSUA = min(round(NINVRETSU * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA)) * 1 - V_CNR
INVRETSZA = min(round(NINVRETSZ * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA)) * 1 - V_CNR
LIGNATR3 = is_positive(REPNATR3) * LIG1
REPAA = max(0, saisies.get('CODHAA', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAA', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0))) * ART1731BIS * 1 - V_CNR
REPAB = max(0, saisies.get('CODHAB', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1)) * 1 - ART1731BIS + max(0, saisies.get('CODHAB', 0) - RLOCENT) * ART1731BIS * 1 - V_CNR
REPAC = max(0, saisies.get('CODHAC', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAC', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0))) * ART1731BIS * 1 - V_CNR
REPAE = max(0, saisies.get('CODHAE', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0) - saisies.get('CODHBE', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAE', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0) - saisies.get('CODHBE', 0))) * ART1731BIS * 1 - V_CNR
REPAF = max(0, saisies.get('CODHAF', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAF', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0))) * ART1731BIS * 1 - V_CNR
REPAG = max(0, saisies.get('CODHAG', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAG', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0))) * ART1731BIS * 1 - V_CNR
REPAH = max(0, saisies.get('CODHAH', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAH', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0))) * ART1731BIS * 1 - V_CNR
REPAJ = max(0, saisies.get('CODHAJ', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0) - saisies.get('CODHBE', 0) - saisies.get('CODHAE', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAJ', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0) - saisies.get('CODHBE', 0) - saisies.get('CODHAE', 0))) * ART1731BIS * 1 - V_CNR
REPAK = max(0, saisies.get('CODHAK', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAK', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0))) * ART1731BIS * 1 - V_CNR
REPAL = max(0, saisies.get('CODHAL', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAL', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0))) * ART1731BIS * 1 - V_CNR
REPAM = max(0, saisies.get('CODHAM', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAM', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0))) * ART1731BIS * 1 - V_CNR
REPAO = max(0, saisies.get('CODHAO', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0) - saisies.get('CODHBE', 0) - saisies.get('CODHAE', 0) - saisies.get('CODHAJ', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAO', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0) - saisies.get('CODHBE', 0) - saisies.get('CODHAE', 0) - saisies.get('CODHAJ', 0))) * ART1731BIS * 1 - V_CNR
REPAP = max(0, saisies.get('CODHAP', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAP', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0))) * ART1731BIS * 1 - V_CNR
REPAQ = max(0, saisies.get('CODHAQ', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAQ', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0))) * ART1731BIS * 1 - V_CNR
REPAT = max(0, saisies.get('CODHAT', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0) - saisies.get('CODHBE', 0) - saisies.get('CODHAE', 0) - saisies.get('CODHAJ', 0) - saisies.get('CODHAO', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAT', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0) - saisies.get('CODHBE', 0) - saisies.get('CODHAE', 0) - saisies.get('CODHAJ', 0) - saisies.get('CODHAO', 0))) * ART1731BIS * 1 - V_CNR
REPAU = max(0, saisies.get('CODHAU', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAU', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0))) * ART1731BIS * 1 - V_CNR
REPAV = max(0, saisies.get('CODHAV', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAV', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0))) * ART1731BIS * 1 - V_CNR
REPAW = max(0, saisies.get('CODHAW', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAW', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0))) * ART1731BIS * 1 - V_CNR
REPAY = max(0, saisies.get('CODHAY', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0) - saisies.get('CODHBE', 0) - saisies.get('CODHAE', 0) - saisies.get('CODHAJ', 0) - saisies.get('CODHAO', 0) - saisies.get('CODHAT', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAY', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0) - saisies.get('CODHBE', 0) - saisies.get('CODHAE', 0) - saisies.get('CODHAJ', 0) - saisies.get('CODHAO', 0) - saisies.get('CODHAT', 0))) * ART1731BIS * 1 - V_CNR
REPBA = max(0, saisies.get('CODHBA', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHBA', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0))) * ART1731BIS * 1 - V_CNR
REPBB = max(0, saisies.get('CODHBB', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHBB', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0))) * ART1731BIS * 1 - V_CNR
REPBE = max(0, saisies.get('CODHBE', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHBE', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0))) * ART1731BIS * 1 - V_CNR
REPBG = max(0, saisies.get('CODHBG', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0) - saisies.get('CODHBE', 0) - saisies.get('CODHAE', 0) - saisies.get('CODHAJ', 0) - saisies.get('CODHAO', 0) - saisies.get('CODHAT', 0) - saisies.get('CODHAY', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHBG', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0) - saisies.get('CODHAR', 0) - saisies.get('CODHAW', 0) - saisies.get('CODHBE', 0) - saisies.get('CODHAE', 0) - saisies.get('CODHAJ', 0) - saisies.get('CODHAO', 0) - saisies.get('CODHAT', 0) - saisies.get('CODHAY', 0))) * ART1731BIS * 1 - V_CNR
REPHAR = max(0, saisies.get('CODHAR', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHAR', 0) - max(0, RLOCENT - saisies.get('CODHAB', 0) - saisies.get('CODHAG', 0) - saisies.get('CODHAL', 0) - saisies.get('CODHAQ', 0) - saisies.get('CODHAV', 0) - saisies.get('CODHBB', 0) - saisies.get('CODHAA', 0) - saisies.get('CODHAF', 0) - saisies.get('CODHAK', 0) - saisies.get('CODHAP', 0) - saisies.get('CODHAU', 0) - saisies.get('CODHBA', 0) - saisies.get('CODHAC', 0) - saisies.get('CODHAH', 0) - saisies.get('CODHAM', 0))) * ART1731BIS * 1 - V_CNR
REPKH = max(0, saisies.get('INVOMSOCKH', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMSOCKH', 0) - max(0, RDOMSOC1 - saisies.get('INVSOCNRET', 0))) * ART1731BIS * 1 - V_CNR
REPKI = max(0, saisies.get('INVOMSOCKI', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMSOCKI', 0) - max(0, RDOMSOC1 - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0))) * ART1731BIS * 1 - V_CNR
REPNATR = max(saisies.get('PATNAT4', 0) - RPATNAT, 0) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
REPQJ = max(0, saisies.get('INVOMSOCQJ', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMSOCQJ', 0) - max(0, RDOMSOC1 - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0))) * ART1731BIS * 1 - V_CNR
REPQK = max(0, saisies.get('INVLOGSOC', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVLOGSOC', 0) - max(0, RDOMSOC1 - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0))) * ART1731BIS * 1 - V_CNR
REPQN = max(0, saisies.get('INVSOC2010', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVSOC2010', 0) - max(0, RDOMSOC1 - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0))) * ART1731BIS * 1 - V_CNR
REPQS = max(0, saisies.get('INVOMSOCQS', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMSOCQS', 0) - max(0, RDOMSOC1 - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0))) * ART1731BIS * 1 - V_CNR
REPQU = max(0, saisies.get('INVOMSOCQU', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMSOCQU', 0) - max(0, RDOMSOC1 - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0))) * ART1731BIS * 1 - V_CNR
REPQW = max(0, saisies.get('INVOMSOCQW', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMSOCQW', 0) - max(0, RDOMSOC1 - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0))) * ART1731BIS * 1 - V_CNR
REPQX = max(0, saisies.get('INVOMSOCQX', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMSOCQX', 0) - max(0, RDOMSOC1 - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0))) * ART1731BIS * 1 - V_CNR
REPRA = max(0, saisies.get('CODHRA', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0) - saisies.get('INVOMSOCQX', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHRA', 0) - max(0, RDOMSOC1 - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0) - saisies.get('INVOMSOCQX', 0))) * ART1731BIS * 1 - V_CNR
REPRB = max(0, saisies.get('CODHRB', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0) - saisies.get('INVOMSOCQX', 0) - saisies.get('CODHRA', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHRB', 0) - max(0, RDOMSOC1 - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0) - saisies.get('INVOMSOCQX', 0) - saisies.get('CODHRA', 0))) * ART1731BIS * 1 - V_CNR
REPRC = max(0, saisies.get('CODHRC', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0) - saisies.get('INVOMSOCQX', 0) - saisies.get('CODHRA', 0) - saisies.get('CODHRB', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHRC', 0) - max(0, RDOMSOC1 - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0) - saisies.get('INVOMSOCQX', 0) - saisies.get('CODHRA', 0) - saisies.get('CODHRB', 0))) * ART1731BIS * 1 - V_CNR
REPRD = max(0, saisies.get('CODHRD', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0) - saisies.get('INVOMSOCQX', 0) - saisies.get('CODHRA', 0) - saisies.get('CODHRB', 0) - saisies.get('CODHRC', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHRD', 0) - max(0, RDOMSOC1 - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0) - saisies.get('INVOMSOCQX', 0) - saisies.get('CODHRA', 0) - saisies.get('CODHRB', 0) - saisies.get('CODHRC', 0))) * ART1731BIS * 1 - V_CNR
INVRETSMA = min(NINVRETSM, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA)) * 1 - V_CNR
INVRETSRA = min(NINVRETSR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA)) * 1 - V_CNR
INVRETSWA = min(NINVRETSW, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA)) * 1 - V_CNR
INVRETTBA = min(NINVRETTB, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA)) * 1 - V_CNR
LIGNATR = is_positive(REPNATR) * LIG1
LIGPATNATR = is_positive(REPNATR + REPNATR1 + REPNATR2 + REPNATR3) * LIG1
LIGREPAA = is_positive(REPAA) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAB = is_positive(REPAB) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAC = is_positive(REPAC) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAE = is_positive(REPAE) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAF = is_positive(REPAF) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAG = is_positive(REPAG) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAH = is_positive(REPAH) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAJ = is_positive(REPAJ) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAK = is_positive(REPAK) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAL = is_positive(REPAL) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAM = is_positive(REPAM) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAO = is_positive(REPAO) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAP = is_positive(REPAP) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAQ = is_positive(REPAQ) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAT = is_positive(REPAT) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAU = is_positive(REPAU) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAV = is_positive(REPAV) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAW = is_positive(REPAW) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPAY = is_positive(REPAY) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPBA = is_positive(REPBA) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPBB = is_positive(REPBB) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPBE = is_positive(REPBE) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPBG = is_positive(REPBG) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPHAR = is_positive(REPHAR) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPKH = is_positive(REPKH) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPKI = is_positive(REPKI) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQJ = is_positive(REPQJ) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQK = is_positive(REPQK) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQN = is_positive(REPQN) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQNH = is_positive(REPQJ + REPQN + REPKH) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQS = is_positive(REPQS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQU = is_positive(REPQU) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQW = is_positive(REPQW) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQX = is_positive(REPQX) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRA = is_positive(REPRA) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRB = is_positive(REPRB) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRC = is_positive(REPRC) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRD = is_positive(REPRD) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
REPDOMENTR = REPAB + REPAG + REPAL + REPAQ + REPAV + REPBB + REPAA + REPAF + REPAK + REPAP + REPAU + REPBA + REPAC + REPAH + REPAM + REPHAR + REPAW + REPBE + REPAE + REPAJ + REPAO + REPAT + REPAY + REPBG
REPDOMSOC1 = REPRA + REPRB + REPRC + REPRD
REPDOMSOC2 = REPQJ + REPQS + REPQW + REPQX
REPDOMSOC3 = REPQN + REPQU + REPQK
REPDOMSOC4 = REPKH + REPKI
INVRETSOA = min(NINVRETSO, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA)) * 1 - V_CNR
INVRETSTA = min(NINVRETST, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA)) * 1 - V_CNR
INVRETSYA = min(NINVRETSY, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA)) * 1 - V_CNR
INVRETTDA = min(NINVRETTD, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA)) * 1 - V_CNR
LIGREPDOM = is_positive(REPDOMENTR) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
INVRETALA = min(round(NINVRETAL * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA)) * 1 - V_CNR
INVRETAQA = min(round(NINVRETAQ * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA)) * 1 - V_CNR
INVRETAVA = min(round(NINVRETAV * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA)) * 1 - V_CNR
INVRETBBA = min(round(NINVRETBB * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA)) * 1 - V_CNR
INVRETAKA = min(round(NINVRETAK * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA)) * 1 - V_CNR
INVRETAPA = min(round(NINVRETAP * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA)) * 1 - V_CNR
INVRETAUA = min(round(NINVRETAU * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA)) * 1 - V_CNR
INVRETBAA = min(round(NINVRETBA * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA)) * 1 - V_CNR
INVRETAMA = min(NINVRETAM, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA)) * 1 - V_CNR
INVRETARA = min(NINVRETAR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA)) * 1 - V_CNR
INVRETAWA = min(NINVRETAW, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA)) * 1 - V_CNR
INVRETBEA = min(NINVRETBE, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA)) * 1 - V_CNR
INVRETAOA = min(NINVRETAO, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA)) * 1 - V_CNR
INVRETATA = min(NINVRETAT, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA)) * 1 - V_CNR
INVRETAYA = min(NINVRETAY, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA)) * 1 - V_CNR
INVRETBGA = min(NINVRETBG, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA)) * 1 - V_CNR
INVRETOTA = min(NINVRETOT, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA)) * 1 - V_CNR
INVRETOUA = min(NINVRETOU, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA)) * 1 - V_CNR
INVRETOVA = min(NINVRETOV, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA)) * 1 - V_CNR
INVRETOWA = min(NINVRETOW, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA)) * 1 - V_CNR
INVRETOGA = min(NINVRETOG, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA)) * 1 - V_CNR
INVRETOXA = min(NINVRETOX, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA)) * 1 - V_CNR
INVRETOYA = min(NINVRETOY, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA)) * 1 - V_CNR
INVRETOZA = min(NINVRETOZ, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA)) * 1 - V_CNR
INVRETUDA = min(NINVRETUD, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA)) * 1 - V_CNR
INVRETUEA = min(NINVRETUE, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA)) * 1 - V_CNR
INVRETUFA = min(NINVRETUF, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA)) * 1 - V_CNR
INVRETUGA = min(NINVRETUG, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA)) * 1 - V_CNR
INVRETRLRA = min(NINVRETRLR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA)) * 1 - V_CNR
INVRETRQRA = min(NINVRETRQR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA)) * 1 - V_CNR
INVRETRVRA = min(NINVRETRVR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA)) * 1 - V_CNR
INVRETNVRA = min(NINVRETNVR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA)) * 1 - V_CNR
INVRETRKRA = min(NINVRETRKR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA)) * 1 - V_CNR
INVRETRPRA = min(NINVRETRPR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA)) * 1 - V_CNR
INVRETRURA = min(NINVRETRUR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA)) * 1 - V_CNR
INVRETNURA = min(NINVRETNUR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA)) * 1 - V_CNR
INVRETSLRA = min(NINVRETSLR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA)) * 1 - V_CNR
INVRETSQRA = min(NINVRETSQR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA)) * 1 - V_CNR
INVRETSVRA = min(NINVRETSVR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA)) * 1 - V_CNR
INVRETTARA = min(NINVRETTAR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA)) * 1 - V_CNR
INVRETSKRA = min(NINVRETSKR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA)) * 1 - V_CNR
INVRETSPRA = min(NINVRETSPR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA)) * 1 - V_CNR
INVRETSURA = min(NINVRETSUR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA)) * 1 - V_CNR
INVRETSZRA = min(NINVRETSZR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA)) * 1 - V_CNR
INVRETALRA = min(NINVRETALR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA)) * 1 - V_CNR
INVRETAQRA = min(NINVRETAQR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA)) * 1 - V_CNR
INVRETAVRA = min(NINVRETAVR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA - INVRETAQRA)) * 1 - V_CNR
INVRETBBRA = min(NINVRETBBR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA - INVRETAQRA - INVRETAVRA)) * 1 - V_CNR
INVRETAKRA = min(NINVRETAKR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA - INVRETAQRA - INVRETAVRA - INVRETBBRA)) * 1 - V_CNR
INVRETAPRA = min(NINVRETAPR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA - INVRETAQRA - INVRETAVRA - INVRETBBRA - INVRETAKRA)) * 1 - V_CNR
INVRETAURA = min(NINVRETAUR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA - INVRETAQRA - INVRETAVRA - INVRETBBRA - INVRETAKRA - INVRETAPRA)) * 1 - V_CNR
INVRETBARA = min(NINVRETBAR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA - INVRETAQRA - INVRETAVRA - INVRETBBRA - INVRETAKRA - INVRETAPRA - INVRETAURA)) * 1 - V_CNR
TOTALPLAFC = INVRETRLA + INVRETRQA + INVRETRVA + INVRETNVA + INVRETRKA + INVRETRPA + INVRETRUA + INVRETNUA + INVRETRMA + INVRETRRA + INVRETRWA + INVRETNWA + INVRETROA + INVRETRTA + INVRETRYA + INVRETNYA + INVRETSLA + INVRETSQA + INVRETSVA + INVRETTAA + INVRETSKA + INVRETSPA + INVRETSUA + INVRETSZA + INVRETSMA + INVRETSRA + INVRETSWA + INVRETTBA + INVRETSOA + INVRETSTA + INVRETSYA + INVRETTDA + INVRETALA + INVRETAQA + INVRETAVA + INVRETBBA + INVRETAKA + INVRETAPA + INVRETAUA + INVRETBAA + INVRETAMA + INVRETARA + INVRETAWA + INVRETBEA + INVRETAOA + INVRETATA + INVRETAYA + INVRETBGA + INVRETOTA + INVRETOUA + INVRETOVA + INVRETOWA + INVRETOGA + INVRETOXA + INVRETOYA + INVRETOZA + INVRETUDA + INVRETUEA + INVRETUFA + INVRETUGA + INVRETRLRA + INVRETRQRA + INVRETRVRA + INVRETNVRA + INVRETRKRA + INVRETRPRA + INVRETRURA + INVRETNURA + INVRETSLRA + INVRETSQRA + INVRETSVRA + INVRETTARA + INVRETSKRA + INVRETSPRA + INVRETSURA + INVRETSZRA + INVRETALRA + INVRETAQRA + INVRETAVRA + INVRETBBRA + INVRETAKRA + INVRETAPRA + INVRETAURA + INVRETBARA
INDPLAF = is_positive(TOTALPLAFA + TOTALPLAFB + TOTALPLAFC - TOTALPLAF1 - TOTALPLAF2 - TOTALPLAF3) * is_positive(INDPLAF1 + INDPLAF2 + INDPLAF3) * is_positive(saisies.get('OPTPLAF15', 0))
RLOG09 = max(min(INVRETQL * 1 - INDPLAF + INVRETQLA * INDPLAF, RRI1 - RLOG01 - RLOG02 - RLOG03 - RLOG04 - RLOG05 - RLOG06 - RLOG07 - RLOG08), 0) * 1 - V_CNR
RLOG10 = max(min(INVRETQM * 1 - INDPLAF + INVRETQMA * INDPLAF, RRI1 - RLOG01 - RLOG02 - RLOG03 - RLOG04 - RLOG05 - RLOG06 - RLOG07 - RLOG08 - RLOG09), 0) * 1 - V_CNR
RLOG11 = max(min(INVRETQD * 1 - INDPLAF + INVRETQDA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10])), 0) * 1 - V_CNR
RLOG12 = max(min(INVRETOB * 1 - INDPLAF + INVRETOBA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11])), 0) * 1 - V_CNR
RLOG13 = max(min(INVRETOC * 1 - INDPLAF + INVRETOCA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12])), 0) * 1 - V_CNR
RLOG14 = max(min(INVRETOI * 1 - INDPLAF + INVRETOIA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13])), 0) * 1 - V_CNR
RLOG15 = max(min(INVRETOJ * 1 - INDPLAF + INVRETOJA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14])), 0) * 1 - V_CNR
RLOG16 = max(min(INVRETOK * 1 - INDPLAF + INVRETOKA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15])), 0) * 1 - V_CNR
RLOG17 = max(min(INVRETOM * 1 - INDPLAF + INVRETOMA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16])), 0) * 1 - V_CNR
RLOG18 = max(min(INVRETON * 1 - INDPLAF + INVRETONA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17])), 0) * 1 - V_CNR
RLOG19 = max(min(INVRETOP * 1 - INDPLAF + INVRETOPA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18])), 0) * 1 - V_CNR
RLOG20 = max(min(INVRETOQ * 1 - INDPLAF + INVRETOQA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19])), 0) * 1 - V_CNR
RLOG21 = max(min(INVRETOR * 1 - INDPLAF + INVRETORA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20])), 0) * 1 - V_CNR
RLOG22 = max(min(INVRETOT * 1 - INDPLAF + INVRETOTA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21])), 0) * 1 - V_CNR
RLOG23 = max(min(INVRETOU * 1 - INDPLAF + INVRETOUA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22])), 0) * 1 - V_CNR
RLOG24 = max(min(INVRETOV * 1 - INDPLAF + INVRETOVA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23])), 0) * 1 - V_CNR
RLOG25 = max(min(INVRETOW * 1 - INDPLAF + INVRETOWA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24])), 0) * 1 - V_CNR
RLOG26 = max(min(INVRETOD * 1 - INDPLAF + INVRETODA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25])), 0) * 1 - V_CNR
RLOG27 = max(min(INVRETOE * 1 - INDPLAF + INVRETOEA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26])), 0) * 1 - V_CNR
RLOG28 = max(min(INVRETOF * 1 - INDPLAF + INVRETOFA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27])), 0) * 1 - V_CNR
RLOG29 = max(min(INVRETOG * 1 - INDPLAF + INVRETOGA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28])), 0) * 1 - V_CNR
RLOG30 = max(min(INVRETOX * 1 - INDPLAF + INVRETOXA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29])), 0) * 1 - V_CNR
RLOG31 = max(min(INVRETOY * 1 - INDPLAF + INVRETOYA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30])), 0) * 1 - V_CNR
RLOG32 = max(min(INVRETOZ * 1 - INDPLAF + INVRETOZA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31])), 0) * 1 - V_CNR
RLOG33 = max(min(INVRETUA * 1 - INDPLAF + INVRETUAA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32])), 0) * 1 - V_CNR
RLOG34 = max(min(INVRETUB * 1 - INDPLAF + INVRETUBA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33])), 0) * 1 - V_CNR
RLOG35 = max(min(INVRETUC * 1 - INDPLAF + INVRETUCA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33, RLOG34])), 0) * 1 - V_CNR
RLOG36 = max(min(INVRETUD * 1 - INDPLAF + INVRETUDA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33, RLOG34, RLOG35])), 0) * 1 - V_CNR
RLOG37 = max(min(INVRETUE * 1 - INDPLAF + INVRETUEA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33, RLOG34, RLOG35, RLOG36])), 0) * 1 - V_CNR
RLOG38 = max(min(INVRETUF * 1 - INDPLAF + INVRETUFA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33, RLOG34, RLOG35, RLOG36, RLOG37])), 0) * 1 - V_CNR
RLOG39 = max(min(INVRETUG * 1 - INDPLAF + INVRETUGA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33, RLOG34, RLOG35, RLOG36, RLOG37, RLOG38])), 0) * 1 - V_CNR
RSOC1 = round(max(min(INVRETXA * 1 - INDPLAF + INVRETXAA * INDPLAF, RRISUP - RDOMSOC1), 0)) * 1 - V_CNR
RSOC11 = round(max(min(INVRETKG * 1 - INDPLAF + INVRETKGA * INDPLAF, RRISUP), 0)) * 1 - V_CNR
RSOC12 = round(max(min(INVRETKGR * 1 - INDPLAF + INVRETKGRA * INDPLAF, RRISUP - RSOC11), 0)) * 1 - V_CNR
RSOC13 = round(max(min(INVRETKH * 1 - INDPLAF + INVRETKHA * INDPLAF, RRISUP - RSOC11 - RSOC12), 0)) * 1 - V_CNR
RSOC14 = round(max(min(INVRETKI * 1 - INDPLAF + INVRETKIA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13])), 0)) * 1 - V_CNR
RSOC15 = round(max(min(INVRETKHR * 1 - INDPLAF + INVRETKHRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14])), 0)) * 1 - V_CNR
RSOC16 = round(max(min(INVRETKIR * 1 - INDPLAF + INVRETKIRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15])), 0)) * 1 - V_CNR
RSOC17 = round(max(min(INVRETQN * 1 - INDPLAF + INVRETQNA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16])), 0)) * 1 - V_CNR
RSOC18 = round(max(min(INVRETQU * 1 - INDPLAF + INVRETQUA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17])), 0)) * 1 - V_CNR
RSOC19 = round(max(min(INVRETQK * 1 - INDPLAF + INVRETQKA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18])), 0)) * 1 - V_CNR
RSOC2 = round(max(min(INVRETXB * 1 - INDPLAF + INVRETXBA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1), 0)) * 1 - V_CNR
RSOC20 = round(max(min(INVRETQNR * 1 - INDPLAF + INVRETQNRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19])), 0)) * 1 - V_CNR
RSOC21 = round(max(min(INVRETQUR * 1 - INDPLAF + INVRETQURA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20])), 0)) * 1 - V_CNR
RSOC22 = round(max(min(INVRETQKR * 1 - INDPLAF + INVRETQKRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21])), 0)) * 1 - V_CNR
RSOC23 = round(max(min(INVRETQJ * 1 - INDPLAF + INVRETQJA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22])), 0)) * 1 - V_CNR
RSOC24 = round(max(min(INVRETQS * 1 - INDPLAF + INVRETQSA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23])), 0)) * 1 - V_CNR
RSOC25 = round(max(min(INVRETQW * 1 - INDPLAF + INVRETQWA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24])), 0)) * 1 - V_CNR
RSOC26 = round(max(min(INVRETQX * 1 - INDPLAF + INVRETQXA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25])), 0)) * 1 - V_CNR
RSOC27 = round(max(min(INVRETQJR * 1 - INDPLAF + INVRETQJRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26])), 0)) * 1 - V_CNR
RSOC28 = round(max(min(INVRETQSR * 1 - INDPLAF + INVRETQSRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27])), 0)) * 1 - V_CNR
RSOC29 = round(max(min(INVRETQWR * 1 - INDPLAF + INVRETQWRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28])), 0)) * 1 - V_CNR
RSOC3 = round(max(min(INVRETXC * 1 - INDPLAF + INVRETXCA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1 - RSOC2), 0)) * 1 - V_CNR
RSOC30 = round(max(min(INVRETQXR * 1 - INDPLAF + INVRETQXRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29])), 0)) * 1 - V_CNR
RSOC31 = round(max(min(INVRETRA * 1 - INDPLAF + INVRETRAA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30])), 0)) * 1 - V_CNR
RSOC32 = round(max(min(INVRETRB * 1 - INDPLAF + INVRETRBA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31])), 0)) * 1 - V_CNR
RSOC33 = round(max(min(INVRETRC * 1 - INDPLAF + INVRETRCA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32])), 0)) * 1 - V_CNR
RSOC34 = round(max(min(INVRETRD * 1 - INDPLAF + INVRETRDA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32, RSOC33])), 0)) * 1 - V_CNR
RSOC35 = round(max(min(INVRETRAR * 1 - INDPLAF + INVRETRARA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32, RSOC33, RSOC34])), 0)) * 1 - V_CNR
RSOC36 = round(max(min(INVRETRBR * 1 - INDPLAF + INVRETRBRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32, RSOC33, RSOC34, RSOC35])), 0)) * 1 - V_CNR
RSOC37 = round(max(min(INVRETRCR * 1 - INDPLAF + INVRETRCRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32, RSOC33, RSOC34, RSOC35, RSOC36])), 0)) * 1 - V_CNR
RSOC38 = round(max(min(INVRETRDR * 1 - INDPLAF + INVRETRDRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32, RSOC33, RSOC34, RSOC35, RSOC36, RSOC37])), 0)) * 1 - V_CNR
RSOC4 = round(max(min(INVRETXE * 1 - INDPLAF + INVRETXEA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1 - RSOC2 - RSOC3), 0)) * 1 - V_CNR
RSOC5 = round(max(min(INVRETXAR * 1 - INDPLAF + INVRETXARA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1 - RSOC2 - RSOC3 - RSOC4), 0)) * 1 - V_CNR
RSOC6 = round(max(min(INVRETXBR * 1 - INDPLAF + INVRETXBRA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1 - RSOC2 - RSOC3 - RSOC4 - RSOC5), 0)) * 1 - V_CNR
RSOC7 = round(max(min(INVRETXCR * 1 - INDPLAF + INVRETXCRA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1 - RSOC2 - RSOC3 - RSOC4 - RSOC5 - RSOC6), 0)) * 1 - V_CNR
RSOC8 = round(max(min(INVRETXER * 1 - INDPLAF + INVRETXERA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1 - RSOC2 - RSOC3 - RSOC4 - RSOC5 - RSOC6 - RSOC7), 0)) * 1 - V_CNR
A10RSOC = max(0, round(RSOC1 + RSOC5 + RSOC14 + RSOC16 + RSOC18 + RSOC21 + RSOC24 + RSOC28 + RSOC31 + RSOC35 - RSOC1 + RSOC5 + RSOC14 + RSOC16 + RSOC18 + RSOC21 + RSOC24 + RSOC28 + RSOC31 + RSOC35 * TX65 / 100)) * 1 - ART1731BIS * 1 - V_CNR
A11RSOC = max(0, round(RSOC2 + RSOC6 + RSOC19 + RSOC22 + RSOC25 + RSOC29 + RSOC32 + RSOC36 - RSOC2 + RSOC6 + RSOC19 + RSOC22 + RSOC25 + RSOC29 + RSOC32 + RSOC36 * TX65 / 100)) * 1 - ART1731BIS * 1 - V_CNR
A12RSOC = max(0, round(RSOC3 + RSOC7 + RSOC26 + RSOC30 + RSOC33 + RSOC37 - RSOC3 + RSOC7 + RSOC26 + RSOC30 + RSOC33 + RSOC37 * TX65 / 100)) * 1 - V_CNR * 1 - ART1731BIS
A13RSOC = max(0, round(RSOC4 + RSOC8 + RSOC34 + RSOC38 - RSOC4 + RSOC8 + RSOC34 + RSOC38 * TX65 / 100)) * 1 - V_CNR * 1 - ART1731BIS
ACOLENT_1 = saisies.get('INVOMREP', 0) + saisies.get('INVOMENTMN', 0) + saisies.get('INVENDEB2009', 0) + saisies.get('INVOMQV', 0) + saisies.get('INVOMRETPM', 0) + saisies.get('INVOMENTRJ', 0) + INVRETMA + INVRETLG + INVRETMB + INVRETLH + INVRETMC + INVRETLI + INVRETQP + INVRETQG + INVRETPB + INVRETPF + INVRETPJ + INVRETQO + INVRETQF + INVRETPA + INVRETPE + INVRETPI + INVRETKS + INVRETKT + INVRETKU + INVRETQR + INVRETQI + INVRETPD + INVRETPH + INVRETPL + INVRETPO + INVRETPT + INVRETPY + INVRETRL + INVRETRQ + INVRETRV + INVRETNV + INVRETPN + INVRETPS + INVRETPX + INVRETRK + INVRETRP + INVRETRU + INVRETNU + INVRETPP + INVRETPU + INVRETRG + INVRETRM + INVRETRR + INVRETRW + INVRETNW + INVRETPR + INVRETPW + INVRETRI + INVRETRO + INVRETRT + INVRETRY + INVRETNY + INVRETSB + INVRETSG + INVRETSA + INVRETSF + INVRETSC + INVRETSH + INVRETSE + INVRETSJ + INVRETSL + INVRETSQ + INVRETSV + INVRETTA + INVRETSK + INVRETSP + INVRETSU + INVRETSZ + INVRETSM + INVRETSR + INVRETSW + INVRETTB + INVRETSO + INVRETST + INVRETSY + INVRETTD + INVRETMAR + INVRETLGR + INVRETMBR + INVRETLHR + INVRETMCR + INVRETLIR + INVRETQPR + INVRETQGR + INVRETPBR + INVRETPFR + INVRETPJR + INVRETQOR + INVRETQFR + INVRETPAR + INVRETPER + INVRETPIR + INVRETPOR + INVRETPTR + INVRETPYR + INVRETRLR + INVRETRQR + INVRETRVR + INVRETNVR + INVRETPNR + INVRETPSR + INVRETPXR + INVRETRKR + INVRETRPR + INVRETRUR + INVRETNUR + INVRETSBR + INVRETSGR + INVRETSAR + INVRETSFR + INVRETSLR + INVRETSQR + INVRETSVR + INVRETTAR + INVRETSKR + INVRETSPR + INVRETSUR + INVRETSZR * 1 - INDPLAF + INVRETMAA + INVRETLGA + INVRETMBA + INVRETLHA + INVRETMCA + INVRETLIA + INVRETQPA + INVRETQGA + INVRETPBA + INVRETPFA + INVRETPJA + INVRETQOA + INVRETQFA + INVRETPAA + INVRETPEA + INVRETPIA + INVRETKSA + INVRETKTA + INVRETKUA + INVRETQRA + INVRETQIA + INVRETPDA + INVRETPHA + INVRETPLA + INVRETPOA + INVRETPTA + INVRETPYA + INVRETRLA + INVRETRQA + INVRETRVA + INVRETNVA + INVRETPNA + INVRETPSA + INVRETPXA + INVRETRKA + INVRETRPA + INVRETRUA + INVRETNUA + INVRETPPA + INVRETPUA + INVRETRGA + INVRETRMA + INVRETRRA + INVRETRWA + INVRETNWA + INVRETPRA + INVRETPWA + INVRETRIA + INVRETROA + INVRETRTA + INVRETRYA + INVRETNYA + INVRETSBA + INVRETSGA + INVRETSAA + INVRETSFA + INVRETSCA + INVRETSHA + INVRETSEA + INVRETSJA + INVRETSLA + INVRETSQA + INVRETSVA + INVRETTAA + INVRETSKA + INVRETSPA + INVRETSUA + INVRETSZA + INVRETSMA + INVRETSRA + INVRETSWA + INVRETTBA + INVRETSOA + INVRETSTA + INVRETSYA + INVRETTDA + INVRETMARA + INVRETLGRA + INVRETMBRA + INVRETLHRA + INVRETMCRA + INVRETLIRA + INVRETQPRA + INVRETQGRA + INVRETPBRA + INVRETPFRA + INVRETPJRA + INVRETQORA + INVRETQFRA + INVRETPARA + INVRETPERA + INVRETPIRA + INVRETPORA + INVRETPTRA + INVRETPYRA + INVRETRLRA + INVRETRQRA + INVRETRVRA + INVRETNVRA + INVRETPNRA + INVRETPSRA + INVRETPXRA + INVRETRKRA + INVRETRPRA + INVRETRURA + INVRETNURA + INVRETSBRA + INVRETSGRA + INVRETSARA + INVRETSFRA + INVRETSLRA + INVRETSQRA + INVRETSVRA + INVRETTARA + INVRETSKRA + INVRETSPRA + INVRETSURA + INVRETSZRA * INDPLAF * 1 - V_CNR
ADOMSOC1_1 = INVRETKG + INVRETKH + INVRETKI + INVRETQN + INVRETQU + INVRETQK + INVRETQJ + INVRETQS + INVRETQW + INVRETQX + INVRETRA + INVRETRB + INVRETRC + INVRETRD + INVRETKGR + INVRETKHR + INVRETKIR + INVRETQNR + INVRETQUR + INVRETQKR + INVRETQJR + INVRETQSR + INVRETQWR + INVRETQXR + INVRETRAR + INVRETRBR + INVRETRCR + INVRETRDR * 1 - INDPLAF + INVRETKGA + INVRETKHA + INVRETKIA + INVRETQNA + INVRETQUA + INVRETQKA + INVRETQJA + INVRETQSA + INVRETQWA + INVRETQXA + INVRETRAA + INVRETRBA + INVRETRCA + INVRETRDA + INVRETKGRA + INVRETKHRA + INVRETKIRA + INVRETQNRA + INVRETQURA + INVRETQKRA + INVRETQJRA + INVRETQSRA + INVRETQWRA + INVRETQXRA + INVRETRARA + INVRETRBRA + INVRETRCRA + INVRETRDRA * INDPLAF * 1 - V_CNR
ALOCENT_1 = INVRETAB + INVRETAG + INVRETAA + INVRETAF + INVRETAC + INVRETAH + INVRETAE + INVRETAJ + INVRETAL + INVRETAQ + INVRETAV + INVRETBB + INVRETAK + INVRETAP + INVRETAU + INVRETBA + INVRETAM + INVRETAR + INVRETAW + INVRETBE + INVRETAO + INVRETAT + INVRETAY + INVRETBG + INVRETABR + INVRETAGR + INVRETAAR + INVRETAFR + INVRETALR + INVRETAQR + INVRETAVR + INVRETBBR + INVRETAKR + INVRETAPR + INVRETAUR + INVRETBAR * 1 - INDPLAF + INVRETABA + INVRETAGA + INVRETAAA + INVRETAFA + INVRETACA + INVRETAHA + INVRETAEA + INVRETAJA + INVRETALA + INVRETAQA + INVRETAVA + INVRETBBA + INVRETAKA + INVRETAPA + INVRETAUA + INVRETBAA + INVRETAMA + INVRETARA + INVRETAWA + INVRETBEA + INVRETAOA + INVRETATA + INVRETAYA + INVRETBGA + INVRETABRA + INVRETAGRA + INVRETAARA + INVRETAFRA + INVRETALRA + INVRETAQRA + INVRETAVRA + INVRETBBRA + INVRETAKRA + INVRETAPRA + INVRETAURA + INVRETBARA * INDPLAF * 1 - V_CNR
ALOGDOM_1 = saisies.get('INVLOG2008', 0) + saisies.get('INVLGDEB2009', 0) + saisies.get('INVLGDEB', 0) + saisies.get('INVOMLOGOA', 0) + saisies.get('INVOMLOGOH', 0) + saisies.get('INVOMLOGOL', 0) + saisies.get('INVOMLOGOO', 0) + saisies.get('INVOMLOGOS', 0) + INVRETQL + INVRETQM + INVRETQD + INVRETOB + INVRETOC + INVRETOM + INVRETON + INVRETOI + INVRETOJ + INVRETOK + INVRETOP + INVRETOQ + INVRETOR + INVRETOT + INVRETOU + INVRETOV + INVRETOW + INVRETOD + INVRETOE + INVRETOF + INVRETOG + INVRETOX + INVRETOY + INVRETOZ + INVRETUA + INVRETUB + INVRETUC + INVRETUD + INVRETUE + INVRETUF + INVRETUG * 1 - INDPLAF + INVRETQLA + INVRETQMA + INVRETQDA + INVRETOBA + INVRETOCA + INVRETOMA + INVRETONA + INVRETOIA + INVRETOJA + INVRETOKA + INVRETOPA + INVRETOQA + INVRETORA + INVRETOTA + INVRETOUA + INVRETOVA + INVRETOWA + INVRETODA + INVRETOEA + INVRETOFA + INVRETOGA + INVRETOXA + INVRETOYA + INVRETOZA + INVRETUAA + INVRETUBA + INVRETUCA + INVRETUDA + INVRETUEA + INVRETUFA + INVRETUGA * INDPLAF * 1 - V_CNR
ALOGSOC_1 = INVRETXA + INVRETXB + INVRETXC + INVRETXE + INVRETXAR + INVRETXBR + INVRETXCR + INVRETXER * 1 - INDPLAF + INVRETXAA + INVRETXBA + INVRETXCA + INVRETXEA + INVRETXARA + INVRETXBRA + INVRETXCRA + INVRETXERA * INDPLAF * 1 - V_CNR
RLOGSOC_1 = 1 - saisies.get('V_INDTEO', 0) * RSOC1 + RSOC2 + RSOC3 + RSOC4 + RSOC5 + RSOC6 + RSOC7 + RSOC8 + saisies.get('V_INDTEO', 0) * round(saisies.get('V_RSOC1', 0) + saisies.get('V_RSOC5', 0) + saisies.get('V_RSOC2', 0) + saisies.get('V_RSOC6', 0) + saisies.get('V_RSOC3', 0) + saisies.get('V_RSOC7', 0) + saisies.get('V_RSOC4', 0) + saisies.get('V_RSOC8', 0) * TX65 / 100) * 1 - V_CNR
ACOLENT = ACOLENT_1 * 1 - ART1731BIS + min(ACOLENT_1, max(ACOLENT_P + ACOLENTP2, ACOLENT1731 + 0) * 1 - PREM8_11) * ART1731BIS
ADOMSOC1 = ADOMSOC1_1 * 1 - ART1731BIS + min(ADOMSOC1_1, max(ADOMSOC1_P + ADOMSOC1P2, ADOMSOC11731 + 0) * 1 - PREM8_11) * ART1731BIS
ALOCENT = ALOCENT_1 * 1 - ART1731BIS + min(ALOCENT_1, max(ALOCENT_P + ALOCENTP2, ALOCENT1731 + 0) * 1 - PREM8_11) * ART1731BIS
ALOGDOM = ALOGDOM_1 * 1 - ART1731BIS + min(ALOGDOM_1, max(ALOGDOM_P + ALOGDOMP2, ALOGDOM1731 + 0) * 1 - PREM8_11) * ART1731BIS
ALOGSOC = ALOGSOC_1 * 1 - ART1731BIS + min(ALOGSOC_1, max(ALOGSOC_P + ALOGSOCP2, ALOGSOC1731 + 0) * 1 - PREM8_11) * ART1731BIS
RLOGSOC = RLOGSOC_1 * 1 - ART1731BIS + min(RLOGSOC_1, max(RLOGSOC_P + RLOGSOCP2, RLOGSOC1731 + 0) * 1 - PREM8_11) * ART1731BIS
RRILOC = RRISUP - RLOGSOC - RDOMSOC1 - RIDOMPROTOT
PLAFDOMPRO1 = max(0, RRI1_1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP - RTOUHOTR - RTOUREPA - RCELTOT - RLOCNPRO - RPATNATOT - RDOMSOC1 - RLOGSOC)
REPXA = max(0, saisies.get('CODHXA', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0) - saisies.get('INVOMSOCQX', 0) - saisies.get('CODHRA', 0) - saisies.get('CODHRB', 0) - saisies.get('CODHRC', 0) - saisies.get('CODHRD', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHXA', 0) - RLOGSOC) * ART1731BIS * 1 - V_CNR
REPXB = max(0, saisies.get('CODHXB', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0) - saisies.get('INVOMSOCQX', 0) - saisies.get('CODHRA', 0) - saisies.get('CODHRB', 0) - saisies.get('CODHRC', 0) - saisies.get('CODHRD', 0) - saisies.get('CODHXA', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHXB', 0) - max(0, RLOGSOC - saisies.get('CODHXA', 0))) * ART1731BIS * 1 - V_CNR
REPXC = max(0, saisies.get('CODHXC', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0) - saisies.get('INVOMSOCQX', 0) - saisies.get('CODHRA', 0) - saisies.get('CODHRB', 0) - saisies.get('CODHRC', 0) - saisies.get('CODHRD', 0) - saisies.get('CODHXA', 0) - saisies.get('CODHXB', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHXC', 0) - max(0, RLOGSOC - saisies.get('CODHXA', 0) - saisies.get('CODHXB', 0))) * ART1731BIS * 1 - V_CNR
REPXE = max(0, saisies.get('CODHXE', 0) - max(0, RRIREP - saisies.get('INVSOCNRET', 0) - saisies.get('INVOMSOCKH', 0) - saisies.get('INVOMSOCKI', 0) - saisies.get('INVSOC2010', 0) - saisies.get('INVOMSOCQU', 0) - saisies.get('INVLOGSOC', 0) - saisies.get('INVOMSOCQJ', 0) - saisies.get('INVOMSOCQS', 0) - saisies.get('INVOMSOCQW', 0) - saisies.get('INVOMSOCQX', 0) - saisies.get('CODHRA', 0) - saisies.get('CODHRB', 0) - saisies.get('CODHRC', 0) - saisies.get('CODHRD', 0) - saisies.get('CODHXA', 0) - saisies.get('CODHXB', 0) - saisies.get('CODHXC', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHXE', 0) - max(0, RLOGSOC - saisies.get('CODHXA', 0) - saisies.get('CODHXB', 0) - saisies.get('CODHXC', 0))) * ART1731BIS * 1 - V_CNR
RLOC01 = max(min(saisies.get('INVOMREP', 0), RRILOC), 0) * 1 - V_CNR
RLOC02 = max(min(INVRETMA * 1 - INDPLAF + INVRETMAA * INDPLAF, RRILOC - RLOC01), 0) * 1 - V_CNR
RLOC03 = max(min(INVRETLG * 1 - INDPLAF + INVRETLGA * INDPLAF, RRILOC - RLOC01 - RLOC02), 0) * 1 - V_CNR
RLOC04 = max(min(INVRETKS * 1 - INDPLAF + INVRETKSA * INDPLAF, RRILOC - RLOC01 - RLOC02 - RLOC03), 0) * 1 - V_CNR
RLOC05 = max(min(INVRETMAR * 1 - INDPLAF + INVRETMARA * INDPLAF, RRILOC - RLOC01 - RLOC02 - RLOC03 - RLOC04), 0) * 1 - V_CNR
RLOC06 = max(min(INVRETLGR * 1 - INDPLAF + INVRETLGRA * INDPLAF, RRILOC - RLOC01 - RLOC02 - RLOC03 - RLOC04 - RLOC05), 0) * 1 - V_CNR
RLOC07 = max(min(saisies.get('INVOMENTMN', 0), RRILOC - RLOC01 - RLOC02 - RLOC03 - RLOC04 - RLOC05 - RLOC06), 0) * 1 - V_CNR
RLOC08 = max(min(INVRETMB * 1 - INDPLAF + INVRETMBA * INDPLAF, RRILOC - RLOC01 - RLOC02 - RLOC03 - RLOC04 - RLOC05 - RLOC06 - RLOC07), 0) * 1 - V_CNR
RLOC09 = max(min(INVRETMC * 1 - INDPLAF + INVRETMCA * INDPLAF, RRILOC - RLOC01 - RLOC02 - RLOC03 - RLOC04 - RLOC05 - RLOC06 - RLOC07 - RLOC08), 0) * 1 - V_CNR
RLOC10 = max(min(INVRETLH * 1 - INDPLAF + INVRETLHA * INDPLAF, RRILOC - RLOC01 - RLOC02 - RLOC03 - RLOC04 - RLOC05 - RLOC06 - RLOC07 - RLOC08 - RLOC09), 0) * 1 - V_CNR
RLOC100 = max(min(INVRETSZ * 1 - INDPLAF + INVRETSZA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99])), 0) * 1 - V_CNR
RLOC101 = max(min(INVRETSC * 1 - INDPLAF + INVRETSCA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - RLOC100), 0) * 1 - V_CNR
RLOC102 = max(min(INVRETSH * 1 - INDPLAF + INVRETSHA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - RLOC100 - RLOC101), 0) * 1 - V_CNR
RLOC103 = max(min(INVRETSM * 1 - INDPLAF + INVRETSMA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102])), 0) * 1 - V_CNR
RLOC104 = max(min(INVRETSR * 1 - INDPLAF + INVRETSRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103])), 0) * 1 - V_CNR
RLOC105 = max(min(INVRETSW * 1 - INDPLAF + INVRETSWA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103, RLOC104])), 0) * 1 - V_CNR
RLOC106 = max(min(INVRETTB * 1 - INDPLAF + INVRETTBA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103, RLOC104, RLOC105])), 0) * 1 - V_CNR
RLOC107 = max(min(INVRETSE * 1 - INDPLAF + INVRETSEA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103, RLOC104, RLOC105, RLOC106])), 0) * 1 - V_CNR
RLOC108 = max(min(INVRETSJ * 1 - INDPLAF + INVRETSJA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103, RLOC104, RLOC105, RLOC106, RLOC107])), 0) * 1 - V_CNR
RLOC109 = max(min(INVRETSO * 1 - INDPLAF + INVRETSOA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103, RLOC104, RLOC105, RLOC106, RLOC107, RLOC108])), 0) * 1 - V_CNR
RLOC11 = max(min(INVRETLI * 1 - INDPLAF + INVRETLIA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10])), 0) * 1 - V_CNR
RLOC110 = max(min(INVRETST * 1 - INDPLAF + INVRETSTA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103, RLOC104, RLOC105, RLOC106, RLOC107, RLOC108, RLOC109])), 0) * 1 - V_CNR
RLOC111 = max(min(INVRETSY * 1 - INDPLAF + INVRETSYA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110])), 0) * 1 - V_CNR
RLOC112 = max(min(INVRETTD * 1 - INDPLAF + INVRETTDA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111])), 0) * 1 - V_CNR
RLOC113 = max(min(INVRETSBR * 1 - INDPLAF + INVRETSBRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112])), 0) * 1 - V_CNR
RLOC114 = max(min(INVRETSGR * 1 - INDPLAF + INVRETSGRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113])), 0) * 1 - V_CNR
RLOC115 = max(min(INVRETSAR * 1 - INDPLAF + INVRETSARA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114])), 0) * 1 - V_CNR
RLOC116 = max(min(INVRETSFR * 1 - INDPLAF + INVRETSFRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115])), 0) * 1 - V_CNR
RLOC117 = max(min(INVRETSLR * 1 - INDPLAF + INVRETSLRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116])), 0) * 1 - V_CNR
RLOC118 = max(min(INVRETSQR * 1 - INDPLAF + INVRETSQRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117])), 0) * 1 - V_CNR
RLOC119 = max(min(INVRETSVR * 1 - INDPLAF + INVRETSVRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118])), 0) * 1 - V_CNR
RLOC12 = max(min(INVRETKT * 1 - INDPLAF + INVRETKTA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11])), 0) * 1 - V_CNR
RLOC120 = max(min(INVRETTAR * 1 - INDPLAF + INVRETTARA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118, RLOC119])), 0) * 1 - V_CNR
RLOC121 = max(min(INVRETSKR * 1 - INDPLAF + INVRETSKRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118, RLOC119, RLOC120])), 0) * 1 - V_CNR
RLOC122 = max(min(INVRETSPR * 1 - INDPLAF + INVRETSPRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118, RLOC119, RLOC120, RLOC121])), 0) * 1 - V_CNR
RLOC123 = max(min(INVRETSUR * 1 - INDPLAF + INVRETSURA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118, RLOC119, RLOC120, RLOC121, RLOC122])), 0) * 1 - V_CNR
RLOC124 = max(min(INVRETSZR * 1 - INDPLAF + INVRETSZRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118, RLOC119, RLOC120, RLOC121, RLOC122, RLOC123])), 0) * 1 - V_CNR
RLOC13 = max(min(INVRETKU * 1 - INDPLAF + INVRETKUA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12])), 0) * 1 - V_CNR
RLOC14 = max(min(INVRETMBR * 1 - INDPLAF + INVRETMBRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13])), 0) * 1 - V_CNR
RLOC15 = max(min(INVRETMCR * 1 - INDPLAF + INVRETMCRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14])), 0) * 1 - V_CNR
RLOC16 = max(min(INVRETLHR * 1 - INDPLAF + INVRETLHRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15])), 0) * 1 - V_CNR
RLOC17 = max(min(INVRETLIR * 1 - INDPLAF + INVRETLIRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16])), 0) * 1 - V_CNR
RLOC18 = max(min(saisies.get('INVOMQV', 0), RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17])), 0) * 1 - V_CNR
RLOC19 = max(min(saisies.get('INVENDEB2009', 0), RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18])), 0) * 1 - V_CNR
RLOC20 = max(min(INVRETQP * 1 - INDPLAF + INVRETQPA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19])), 0) * 1 - V_CNR
RLOC21 = max(min(INVRETQG * 1 - INDPLAF + INVRETQGA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20])), 0) * 1 - V_CNR
RLOC22 = max(min(INVRETPB * 1 - INDPLAF + INVRETPBA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21])), 0) * 1 - V_CNR
RLOC23 = max(min(INVRETPF * 1 - INDPLAF + INVRETPFA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22])), 0) * 1 - V_CNR
RLOC24 = max(min(INVRETPJ * 1 - INDPLAF + INVRETPJA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23])), 0) * 1 - V_CNR
RLOC25 = max(min(INVRETQO * 1 - INDPLAF + INVRETQOA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24])), 0) * 1 - V_CNR
RLOC26 = max(min(INVRETQF * 1 - INDPLAF + INVRETQFA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25])), 0) * 1 - V_CNR
RLOC27 = max(min(INVRETPA * 1 - INDPLAF + INVRETPAA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26])), 0) * 1 - V_CNR
RLOC28 = max(min(INVRETPE * 1 - INDPLAF + INVRETPEA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27])), 0) * 1 - V_CNR
RLOC29 = max(min(INVRETPI * 1 - INDPLAF + INVRETPIA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28])), 0) * 1 - V_CNR
RLOC30 = max(min(INVRETQR * 1 - INDPLAF + INVRETQRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29])), 0) * 1 - V_CNR
RLOC31 = max(min(INVRETQI * 1 - INDPLAF + INVRETQIA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30])), 0) * 1 - V_CNR
RLOC32 = max(min(INVRETPD * 1 - INDPLAF + INVRETPDA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31])), 0) * 1 - V_CNR
RLOC33 = max(min(INVRETPH * 1 - INDPLAF + INVRETPHA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32])), 0) * 1 - V_CNR
RLOC34 = max(min(INVRETPL * 1 - INDPLAF + INVRETPLA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33])), 0) * 1 - V_CNR
RLOC35 = max(min(INVRETQPR * 1 - INDPLAF + INVRETQPRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34])), 0) * 1 - V_CNR
RLOC36 = max(min(INVRETQGR * 1 - INDPLAF + INVRETQGRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35])), 0) * 1 - V_CNR
RLOC37 = max(min(INVRETPBR * 1 - INDPLAF + INVRETPBRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36])), 0) * 1 - V_CNR
RLOC38 = max(min(INVRETPFR * 1 - INDPLAF + INVRETPFRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37])), 0) * 1 - V_CNR
RLOC39 = max(min(INVRETPJR * 1 - INDPLAF + INVRETPJRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38])), 0) * 1 - V_CNR
RLOC40 = max(min(INVRETQOR * 1 - INDPLAF + INVRETQORA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39])), 0) * 1 - V_CNR
RLOC41 = max(min(INVRETQFR * 1 - INDPLAF + INVRETQFRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40])), 0) * 1 - V_CNR
RLOC42 = max(min(INVRETPAR * 1 - INDPLAF + INVRETPARA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41])), 0) * 1 - V_CNR
RLOC43 = max(min(INVRETPER * 1 - INDPLAF + INVRETPERA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42])), 0) * 1 - V_CNR
RLOC44 = max(min(INVRETPIR * 1 - INDPLAF + INVRETPIRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43])), 0) * 1 - V_CNR
RLOC45 = max(min(saisies.get('INVOMRETPM', 0), RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44])), 0) * 1 - V_CNR
RLOC46 = max(min(saisies.get('INVOMENTRJ', 0), RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45])), 0) * 1 - V_CNR
RLOC47 = max(min(INVRETPO * 1 - INDPLAF + INVRETPOA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46])), 0) * 1 - V_CNR
RLOC48 = max(min(INVRETPT * 1 - INDPLAF + INVRETPTA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47])), 0) * 1 - V_CNR
RLOC49 = max(min(INVRETPY * 1 - INDPLAF + INVRETPYA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48])), 0) * 1 - V_CNR
RLOC50 = max(min(INVRETRL * 1 - INDPLAF + INVRETRLA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49])), 0) * 1 - V_CNR
RLOC51 = max(min(INVRETRQ * 1 - INDPLAF + INVRETRQA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50])), 0) * 1 - V_CNR
RLOC52 = max(min(INVRETRV * 1 - INDPLAF + INVRETRVA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51])), 0) * 1 - V_CNR
RLOC53 = max(min(INVRETNV * 1 - INDPLAF + INVRETNVA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52])), 0) * 1 - V_CNR
RLOC54 = max(min(INVRETPN * 1 - INDPLAF + INVRETPNA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53])), 0) * 1 - V_CNR
RLOC55 = max(min(INVRETPS * 1 - INDPLAF + INVRETPSA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54])), 0) * 1 - V_CNR
RLOC56 = max(min(INVRETPX * 1 - INDPLAF + INVRETPXA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55])), 0) * 1 - V_CNR
RLOC57 = max(min(INVRETRK * 1 - INDPLAF + INVRETRKA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56])), 0) * 1 - V_CNR
RLOC58 = max(min(INVRETRP * 1 - INDPLAF + INVRETRPA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57])), 0) * 1 - V_CNR
RLOC59 = max(min(INVRETRU * 1 - INDPLAF + INVRETRUA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58])), 0) * 1 - V_CNR
RLOC60 = max(min(INVRETNU * 1 - INDPLAF + INVRETNUA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59])), 0) * 1 - V_CNR
RLOC61 = max(min(INVRETPP * 1 - INDPLAF + INVRETPPA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60])), 0) * 1 - V_CNR
RLOC62 = max(min(INVRETPU * 1 - INDPLAF + INVRETPUA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61])), 0) * 1 - V_CNR
RLOC63 = max(min(INVRETRG * 1 - INDPLAF + INVRETRGA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62])), 0) * 1 - V_CNR
RLOC64 = max(min(INVRETRM * 1 - INDPLAF + INVRETRMA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63])), 0) * 1 - V_CNR
RLOC65 = max(min(INVRETRR * 1 - INDPLAF + INVRETRRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64])), 0) * 1 - V_CNR
RLOC66 = max(min(INVRETRW * 1 - INDPLAF + INVRETRWA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65])), 0) * 1 - V_CNR
RLOC67 = max(min(INVRETNW * 1 - INDPLAF + INVRETNWA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66])), 0) * 1 - V_CNR
RLOC68 = max(min(INVRETPR * 1 - INDPLAF + INVRETPRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67])), 0) * 1 - V_CNR
RLOC69 = max(min(INVRETPW * 1 - INDPLAF + INVRETPWA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68])), 0) * 1 - V_CNR
RLOC70 = max(min(INVRETRI * 1 - INDPLAF + INVRETRIA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69])), 0) * 1 - V_CNR
RLOC71 = max(min(INVRETRO * 1 - INDPLAF + INVRETROA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70])), 0) * 1 - V_CNR
RLOC72 = max(min(INVRETRT * 1 - INDPLAF + INVRETRTA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71])), 0) * 1 - V_CNR
RLOC73 = max(min(INVRETRY * 1 - INDPLAF + INVRETRYA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72])), 0) * 1 - V_CNR
RLOC74 = max(min(INVRETNY * 1 - INDPLAF + INVRETNYA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73])), 0) * 1 - V_CNR
RLOC75 = max(min(INVRETPOR * 1 - INDPLAF + INVRETPORA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74])), 0) * 1 - V_CNR
RLOC76 = max(min(INVRETPTR * 1 - INDPLAF + INVRETPTRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75])), 0) * 1 - V_CNR
RLOC77 = max(min(INVRETPYR * 1 - INDPLAF + INVRETPYRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76])), 0) * 1 - V_CNR
RLOC78 = max(min(INVRETRLR * 1 - INDPLAF + INVRETRLRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77])), 0) * 1 - V_CNR
RLOC79 = max(min(INVRETRQR * 1 - INDPLAF + INVRETRQRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78])), 0) * 1 - V_CNR
RLOC80 = max(min(INVRETRVR * 1 - INDPLAF + INVRETRVRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79])), 0) * 1 - V_CNR
RLOC81 = max(min(INVRETNVR * 1 - INDPLAF + INVRETNVRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80])), 0) * 1 - V_CNR
RLOC82 = max(min(INVRETPNR * 1 - INDPLAF + INVRETPNRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81])), 0) * 1 - V_CNR
RLOC83 = max(min(INVRETPSR * 1 - INDPLAF + INVRETPSRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82])), 0) * 1 - V_CNR
RLOC84 = max(min(INVRETPXR * 1 - INDPLAF + INVRETPXRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83])), 0) * 1 - V_CNR
RLOC85 = max(min(INVRETRKR * 1 - INDPLAF + INVRETRKRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84])), 0) * 1 - V_CNR
RLOC86 = max(min(INVRETRPR * 1 - INDPLAF + INVRETRPRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85])), 0) * 1 - V_CNR
RLOC87 = max(min(INVRETRUR * 1 - INDPLAF + INVRETRURA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86])), 0) * 1 - V_CNR
RLOC88 = max(min(INVRETNUR * 1 - INDPLAF + INVRETNURA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87])), 0) * 1 - V_CNR
RLOC89 = max(min(INVRETSB * 1 - INDPLAF + INVRETSBA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88])), 0) * 1 - V_CNR
RLOC90 = max(min(INVRETSG * 1 - INDPLAF + INVRETSGA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89])), 0) * 1 - V_CNR
RLOC91 = max(min(INVRETSL * 1 - INDPLAF + INVRETSLA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90])), 0) * 1 - V_CNR
RLOC92 = max(min(INVRETSQ * 1 - INDPLAF + INVRETSQA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91])), 0) * 1 - V_CNR
RLOC93 = max(min(INVRETSV * 1 - INDPLAF + INVRETSVA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92])), 0) * 1 - V_CNR
RLOC94 = max(min(INVRETTA * 1 - INDPLAF + INVRETTAA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93])), 0) * 1 - V_CNR
RLOC95 = max(min(INVRETSA * 1 - INDPLAF + INVRETSAA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94])), 0) * 1 - V_CNR
RLOC96 = max(min(INVRETSF * 1 - INDPLAF + INVRETSFA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95])), 0) * 1 - V_CNR
RLOC97 = max(min(INVRETSK * 1 - INDPLAF + INVRETSKA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96])), 0) * 1 - V_CNR
RLOC98 = max(min(INVRETSP * 1 - INDPLAF + INVRETSPA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97])), 0) * 1 - V_CNR
RLOC99 = max(min(INVRETSU * 1 - INDPLAF + INVRETSUA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98])), 0) * 1 - V_CNR
LIGREPQKG = is_positive(REPKI + REPQK + REPQX + REPRD + REPXE) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQUS = is_positive(REPQS + REPQU + REPRA + REPXA) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQWB = is_positive(REPQW + REPRB + REPXB) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRXC = is_positive(REPRC + REPXC) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPXA = is_positive(REPXA) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPXB = is_positive(REPXB) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPXC = is_positive(REPXC) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPXE = is_positive(REPXE) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
RCOLENT_1 = 1 - saisies.get('V_INDTEO', 0) * sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) + sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118, RLOC119, RLOC120, RLOC121, RLOC122, RLOC123, RLOC124]) + saisies.get('V_INDTEO', 0) * RLOC01 + RLOC07 + RLOC18 + RLOC19 + RLOC45 + RLOC46 + round(saisies.get('V_RLOC03', 0) + saisies.get('V_RLOC06', 0) * TX50 / 100) + round(saisies.get('V_RLOC02', 0) + saisies.get('V_RLOC05', 0) * TX60 / 100) + round(saisies.get('V_RLOC10', 0) + saisies.get('V_RLOC16', 0) * TX50 / 100) + round(saisies.get('V_RLOC08', 0) + saisies.get('V_RLOC14', 0) * TX60 / 100) + round(saisies.get('V_RLOC25', 0) + saisies.get('V_RLOC40', 0) * TX50 / 100) + round(saisies.get('V_RLOC20', 0) + saisies.get('V_RLOC35', 0) * TX60 / 100) + round(saisies.get('V_RLOC54', 0) + saisies.get('V_RLOC82', 0) * TX50 / 100) + round(saisies.get('V_RLOC47', 0) + saisies.get('V_RLOC75', 0) * TX60 / 100) + round(saisies.get('V_RLOC27', 0) + saisies.get('V_RLOC42', 0) * 5263 / 10000) + round(saisies.get('V_RLOC22', 0) + saisies.get('V_RLOC37', 0) * 625 / 1000) + round(saisies.get('V_RLOC57', 0) + saisies.get('V_RLOC85', 0) * 5263 / 10000) + round(saisies.get('V_RLOC50', 0) + saisies.get('V_RLOC78', 0) * 625 / 1000) + round(saisies.get('V_RLOC11', 0) + saisies.get('V_RLOC17', 0) * TX50 / 100) + round(saisies.get('V_RLOC09', 0) + saisies.get('V_RLOC15', 0) * 60 / 100) + round(saisies.get('V_RLOC26', 0) + saisies.get('V_RLOC41', 0) * 50 / 100) + round(saisies.get('V_RLOC21', 0) + saisies.get('V_RLOC36', 0) * 60 / 100) + round(saisies.get('V_RLOC55', 0) + saisies.get('V_RLOC83', 0) * 50 / 100) + round(saisies.get('V_RLOC48', 0) + saisies.get('V_RLOC76', 0) * 60 / 100) + round(saisies.get('V_RLOC28', 0) + saisies.get('V_RLOC43', 0) * 5263 / 10000) + round(saisies.get('V_RLOC23', 0) + saisies.get('V_RLOC38', 0) * 625 / 1000) + round(saisies.get('V_RLOC58', 0) + saisies.get('V_RLOC86', 0) * 5263 / 10000) + round(saisies.get('V_RLOC51', 0) + saisies.get('V_RLOC79', 0) * 625 / 1000) + round(saisies.get('V_RLOC95', 0) + saisies.get('V_RLOC115', 0) * 5263 / 10000) + round(saisies.get('V_RLOC89', 0) + saisies.get('V_RLOC113', 0) * 625 / 1000) + round(saisies.get('V_RLOC97', 0) + saisies.get('V_RLOC121', 0) * 5263 / 10000) + round(saisies.get('V_RLOC91', 0) + saisies.get('V_RLOC117', 0) * 625 / 1000) + round(saisies.get('V_RLOC29', 0) + saisies.get('V_RLOC44', 0) * 5263 / 10000) + round(saisies.get('V_RLOC24', 0) + saisies.get('V_RLOC39', 0) * 625 / 1000) + round(saisies.get('V_RLOC56', 0) + saisies.get('V_RLOC84', 0) * 5263 / 10000) + round(saisies.get('V_RLOC49', 0) + saisies.get('V_RLOC77', 0) * 625 / 1000) + round(saisies.get('V_RLOC59', 0) + saisies.get('V_RLOC87', 0) * 5263 / 10000) + round(saisies.get('V_RLOC52', 0) + saisies.get('V_RLOC80', 0) * 625 / 1000) + round(saisies.get('V_RLOC96', 0) + saisies.get('V_RLOC116', 0) * 5263 / 10000) + round(saisies.get('V_RLOC90', 0) + saisies.get('V_RLOC114', 0) * 625 / 1000) + round(saisies.get('V_RLOC98', 0) + saisies.get('V_RLOC122', 0) * 5263 / 10000) + round(saisies.get('V_RLOC92', 0) + saisies.get('V_RLOC118', 0) * 625 / 1000) + round(saisies.get('V_RLOC60', 0) + saisies.get('V_RLOC88', 0) * 5263 / 10000) + round(saisies.get('V_RLOC53', 0) + saisies.get('V_RLOC81', 0) * 625 / 1000) + round(saisies.get('V_RLOC99', 0) + saisies.get('V_RLOC123', 0) * 5263 / 10000) + round(saisies.get('V_RLOC93', 0) + saisies.get('V_RLOC119', 0) * 625 / 1000) + round(saisies.get('V_RLOC100', 0) + saisies.get('V_RLOC124', 0) * 5263 / 10000) + round(saisies.get('V_RLOC94', 0) + saisies.get('V_RLOC120', 0) * 625 / 1000) * 1 - V_CNR
REPDOMSOC = REPXA + REPXB + REPXC + REPXE
RCOLENT = RCOLENT_1 * 1 - ART1731BIS + min(RCOLENT_1, max(RCOLENT_P + RCOLENTP2, RCOLENT1731 + 0) * 1 - PREM8_11) * ART1731BIS
RED = RCOTFOR + RSURV + RCOMP + RHEBE + RREPA + RDIFAGRI + RDONS + RDUFLOTOT + RPINELTOT + RCELTOT + RRESTIMO * 1 - saisies.get('V_INDTEO', 0) + saisies.get('V_RRESTIMOXY', 0) * saisies.get('V_INDTEO', 0) + RFIPC + RFIPDOM + RAIDE + RNOUV + RPLAFREPME4 + RTOURREP + RTOUREPA + RTOUHOTR + RLOGDOM + RLOGSOC + RDOMSOC1 + RLOCENT + RCOLENT + RRETU + RINNO + RRPRESCOMP + RFOR + RSOUFIP + RRIRENOV + RSOCREPR + RRESIMEUB + RRESINEUV + RRESIVIEU + RCODOU + RLOCIDEFG + RCODJT + RCODJU + RREDMEUB + RREDREP + RILMIX + RILMIY + RINVRED + RILMIH + RILMJC + RILMIZ + RILMJI + RILMJS + RMEUBLE + RPROREP + RREPNPRO + RREPMEU + RILMIC + RILMIB + RILMIA + RILMJY + RILMJX + RILMJW + RILMJV + RILMOA + RILMOB + RILMOC + RILMOD + RILMOE + RILMPA + RILMPB + RILMPC + RILMPD + RILMPE + RIDOMPROE3 + RPATNAT1 + RPATNAT2 + RPATNAT3 + RPATNAT + RFORET + RCREAT + RCINE
REPKT = max(0, saisies.get('INVOMENTKT', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - saisies.get('INVOMENTMN', 0) - saisies.get('RETROCOMMB', 0) - saisies.get('RETROCOMMC', 0) - saisies.get('RETROCOMLH', 0) - saisies.get('RETROCOMLI', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTKT', 0) - max(0, RCOLENT - REPENT5 - saisies.get('INVOMENTMN', 0) - saisies.get('RETROCOMMB', 0) - saisies.get('RETROCOMMC', 0) - saisies.get('RETROCOMLH', 0) - saisies.get('RETROCOMLI', 0))) * ART1731BIS * 1 - V_CNR
REPKU = max(0, saisies.get('INVOMENTKU', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - saisies.get('INVOMENTMN', 0) - saisies.get('RETROCOMMB', 0) - saisies.get('RETROCOMMC', 0) - saisies.get('RETROCOMLH', 0) - saisies.get('RETROCOMLI', 0) - saisies.get('INVOMENTKT', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTKU', 0) - max(0, RCOLENT - REPENT5 - saisies.get('INVOMENTMN', 0) - saisies.get('RETROCOMMB', 0) - saisies.get('RETROCOMMC', 0) - saisies.get('RETROCOMLH', 0) - saisies.get('RETROCOMLI', 0) - saisies.get('INVOMENTKT', 0))) * ART1731BIS * 1 - V_CNR
REPLH = max(0, saisies.get('RETROCOMLH', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - saisies.get('INVOMENTMN', 0) - saisies.get('RETROCOMMB', 0) - saisies.get('RETROCOMMC', 0))) * 1 - ART1731BIS + max(0, saisies.get('RETROCOMLH', 0) - max(0, RCOLENT - REPENT5 - saisies.get('INVOMENTMN', 0) - saisies.get('RETROCOMMB', 0) - saisies.get('RETROCOMMC', 0))) * ART1731BIS * 1 - V_CNR
REPLI = max(0, saisies.get('RETROCOMLI', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - saisies.get('INVOMENTMN', 0) - saisies.get('RETROCOMMB', 0) - saisies.get('RETROCOMMC', 0) - saisies.get('RETROCOMLH', 0))) * 1 - ART1731BIS + max(0, saisies.get('RETROCOMLI', 0) - max(0, RCOLENT - REPENT5 - saisies.get('INVOMENTMN', 0) - saisies.get('RETROCOMMB', 0) - saisies.get('RETROCOMMC', 0) - saisies.get('RETROCOMLH', 0))) * ART1731BIS * 1 - V_CNR
REPMB = max(0, saisies.get('RETROCOMMB', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - saisies.get('INVOMENTMN', 0))) * 1 - ART1731BIS + max(0, saisies.get('RETROCOMMB', 0) - max(0, RCOLENT - REPENT5 - saisies.get('INVOMENTMN', 0))) * ART1731BIS * 1 - V_CNR
REPMC = max(0, saisies.get('RETROCOMMC', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - saisies.get('INVOMENTMN', 0) - saisies.get('RETROCOMMB', 0))) * 1 - ART1731BIS + max(0, saisies.get('RETROCOMMC', 0) - max(0, RCOLENT - REPENT5 - saisies.get('INVOMENTMN', 0) - saisies.get('RETROCOMMB', 0))) * ART1731BIS * 1 - V_CNR
REPMN = max(0, saisies.get('INVOMENTMN', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5)) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTMN', 0) - max(0, RCOLENT - REPENT5)) * ART1731BIS * 1 - V_CNR
REPNU = max(0, saisies.get('INVOMENTNU', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTNU', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0))) * ART1731BIS * 1 - V_CNR
REPNV = max(0, saisies.get('INVOMENTNV', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTNV', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0))) * ART1731BIS * 1 - V_CNR
REPNW = max(0, saisies.get('INVOMENTNW', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTNW', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0))) * ART1731BIS * 1 - V_CNR
REPNY = max(0, saisies.get('INVOMENTNY', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0) - saisies.get('INVOMRETPR', 0) - saisies.get('INVOMRETPW', 0) - saisies.get('INVOMENTRI', 0) - saisies.get('INVOMENTRO', 0) - saisies.get('INVOMENTRT', 0) - saisies.get('INVOMENTRY', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTNY', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0) - saisies.get('INVOMRETPR', 0) - saisies.get('INVOMRETPW', 0) - saisies.get('INVOMENTRI', 0) - saisies.get('INVOMENTRO', 0) - saisies.get('INVOMENTRT', 0) - saisies.get('INVOMENTRY', 0))) * ART1731BIS * 1 - V_CNR
REPPA = max(0, saisies.get('INVOMRETPA', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPA', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0))) * ART1731BIS * 1 - V_CNR
REPPB = max(0, saisies.get('INVOMRETPB', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPB', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0))) * ART1731BIS * 1 - V_CNR
REPPD = max(0, saisies.get('INVOMRETPD', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0) - saisies.get('INVOMRETPE', 0) - saisies.get('INVOMRETPI', 0) - saisies.get('INVIMP', 0) - saisies.get('INVDIR2009', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPD', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0) - saisies.get('INVOMRETPE', 0) - saisies.get('INVOMRETPI', 0) - saisies.get('INVIMP', 0) - saisies.get('INVDIR2009', 0))) * ART1731BIS * 1 - V_CNR
REPPE = max(0, saisies.get('INVOMRETPE', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPE', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0))) * ART1731BIS * 1 - V_CNR
REPPF = max(0, saisies.get('INVOMRETPF', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPF', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0))) * ART1731BIS * 1 - V_CNR
REPPH = max(0, saisies.get('INVOMRETPH', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0) - saisies.get('INVOMRETPE', 0) - saisies.get('INVOMRETPI', 0) - saisies.get('INVIMP', 0) - saisies.get('INVDIR2009', 0) - saisies.get('INVOMRETPD', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPH', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0) - saisies.get('INVOMRETPE', 0) - saisies.get('INVOMRETPI', 0) - saisies.get('INVIMP', 0) - saisies.get('INVDIR2009', 0) - saisies.get('INVOMRETPD', 0))) * ART1731BIS * 1 - V_CNR
REPPI = max(0, saisies.get('INVOMRETPI', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0) - saisies.get('INVOMRETPE', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPI', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0) - saisies.get('INVOMRETPE', 0))) * ART1731BIS * 1 - V_CNR
REPPJ = max(0, saisies.get('INVOMRETPJ', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPJ', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0))) * ART1731BIS * 1 - V_CNR
REPPL = max(0, saisies.get('INVOMRETPL', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0) - saisies.get('INVOMRETPE', 0) - saisies.get('INVOMRETPI', 0) - saisies.get('INVIMP', 0) - saisies.get('INVDIR2009', 0) - saisies.get('INVOMRETPD', 0) - saisies.get('INVOMRETPH', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPL', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0) - saisies.get('INVOMRETPE', 0) - saisies.get('INVOMRETPI', 0) - saisies.get('INVIMP', 0) - saisies.get('INVDIR2009', 0) - saisies.get('INVOMRETPD', 0) - saisies.get('INVOMRETPH', 0))) * ART1731BIS * 1 - V_CNR
REPPM = max(0, saisies.get('INVOMRETPM', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3)) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPM', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3)) * ART1731BIS * 1 - V_CNR
REPPN = max(0, saisies.get('INVOMRETPN', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPN', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0))) * ART1731BIS * 1 - V_CNR
REPPO = max(0, saisies.get('INVOMRETPO', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPO', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0))) * ART1731BIS * 1 - V_CNR
REPPP = max(0, saisies.get('INVOMRETPP', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPP', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0))) * ART1731BIS * 1 - V_CNR
REPPR = max(0, saisies.get('INVOMRETPR', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPR', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0))) * ART1731BIS * 1 - V_CNR
REPPS = max(0, saisies.get('INVOMRETPS', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPS', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0))) * ART1731BIS * 1 - V_CNR
REPPT = max(0, saisies.get('INVOMRETPT', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPT', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0))) * ART1731BIS * 1 - V_CNR
REPPU = max(0, saisies.get('INVOMRETPU', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPU', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0))) * ART1731BIS * 1 - V_CNR
REPPW = max(0, saisies.get('INVOMRETPW', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0) - saisies.get('INVOMRETPR', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPW', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0) - saisies.get('INVOMRETPR', 0))) * ART1731BIS * 1 - V_CNR
REPPX = max(0, saisies.get('INVOMRETPX', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPX', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0))) * ART1731BIS * 1 - V_CNR
REPPY = max(0, saisies.get('INVOMRETPY', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMRETPY', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0))) * ART1731BIS * 1 - V_CNR
REPQE = max(0, saisies.get('INVENDEB2009', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVENDEB2009', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0))) * ART1731BIS * 1 - V_CNR
REPQF = max(0, saisies.get('INVDOMRET50', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVDOMRET50', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0))) * ART1731BIS * 1 - V_CNR
REPQG = max(0, saisies.get('INVDOMRET60', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVDOMRET60', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0))) * ART1731BIS * 1 - V_CNR
REPQI = max(0, saisies.get('INVDIR2009', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0) - saisies.get('INVOMRETPE', 0) - saisies.get('INVOMRETPI', 0) - saisies.get('INVIMP', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVDIR2009', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0) - saisies.get('INVOMRETPE', 0) - saisies.get('INVOMRETPI', 0) - saisies.get('INVIMP', 0))) * ART1731BIS * 1 - V_CNR
REPQO = max(0, saisies.get('INVRETRO1', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVRETRO1', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0))) * ART1731BIS * 1 - V_CNR
REPQP = max(0, saisies.get('INVRETRO2', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVRETRO2', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0))) * ART1731BIS * 1 - V_CNR
REPQR = max(0, saisies.get('INVIMP', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0) - saisies.get('INVOMRETPE', 0) - saisies.get('INVOMRETPI', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVIMP', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - saisies.get('INVOMQV', 0) - saisies.get('INVENDEB2009', 0) - saisies.get('INVRETRO2', 0) - saisies.get('INVDOMRET60', 0) - saisies.get('INVOMRETPB', 0) - saisies.get('INVOMRETPF', 0) - saisies.get('INVOMRETPJ', 0) - saisies.get('INVRETRO1', 0) - saisies.get('INVDOMRET50', 0) - saisies.get('INVOMRETPA', 0) - saisies.get('INVOMRETPE', 0) - saisies.get('INVOMRETPI', 0))) * ART1731BIS * 1 - V_CNR
REPQV = max(0, saisies.get('INVOMQV', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4)) * 1 - ART1731BIS + max(0, saisies.get('INVOMQV', 0) - max(0, RCOLENT - REPENT5 - REPENT4)) * ART1731BIS * 1 - V_CNR
REPRG = max(0, saisies.get('INVOMENTRG', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRG', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0))) * ART1731BIS * 1 - V_CNR
REPRI = max(0, saisies.get('INVOMENTRI', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0) - saisies.get('INVOMRETPR', 0) - saisies.get('INVOMRETPW', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRI', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0) - saisies.get('INVOMRETPR', 0) - saisies.get('INVOMRETPW', 0))) * ART1731BIS * 1 - V_CNR
REPRJ = max(0, saisies.get('INVOMENTRJ', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRJ', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0))) * ART1731BIS * 1 - V_CNR
REPRK = max(0, saisies.get('INVOMENTRK', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRK', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0))) * ART1731BIS * 1 - V_CNR
REPRL = max(0, saisies.get('INVOMENTRL', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRL', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0))) * ART1731BIS * 1 - V_CNR
REPRM = max(0, saisies.get('INVOMENTRM', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRM', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0))) * ART1731BIS * 1 - V_CNR
REPRO = max(0, saisies.get('INVOMENTRO', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0) - saisies.get('INVOMRETPR', 0) - saisies.get('INVOMRETPW', 0) - saisies.get('INVOMENTRI', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRO', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0) - saisies.get('INVOMRETPR', 0) - saisies.get('INVOMRETPW', 0) - saisies.get('INVOMENTRI', 0))) * ART1731BIS * 1 - V_CNR
REPRP = max(0, saisies.get('INVOMENTRP', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRP', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0))) * ART1731BIS * 1 - V_CNR
REPRQ = max(0, saisies.get('INVOMENTRQ', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRQ', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0))) * ART1731BIS * 1 - V_CNR
REPRR = max(0, saisies.get('INVOMENTRR', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRR', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0))) * ART1731BIS * 1 - V_CNR
REPRT = max(0, saisies.get('INVOMENTRT', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0) - saisies.get('INVOMRETPR', 0) - saisies.get('INVOMRETPW', 0) - saisies.get('INVOMENTRI', 0) - saisies.get('INVOMENTRO', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRT', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0) - saisies.get('INVOMRETPR', 0) - saisies.get('INVOMRETPW', 0) - saisies.get('INVOMENTRI', 0) - saisies.get('INVOMENTRO', 0))) * ART1731BIS * 1 - V_CNR
REPRU = max(0, saisies.get('INVOMENTRU', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRU', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0))) * ART1731BIS * 1 - V_CNR
REPRV = max(0, saisies.get('INVOMENTRV', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRV', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0))) * ART1731BIS * 1 - V_CNR
REPRW = max(0, saisies.get('INVOMENTRW', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRW', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0))) * ART1731BIS * 1 - V_CNR
REPRY = max(0, saisies.get('INVOMENTRY', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0) - saisies.get('INVOMRETPR', 0) - saisies.get('INVOMRETPW', 0) - saisies.get('INVOMENTRI', 0) - saisies.get('INVOMENTRO', 0) - saisies.get('INVOMENTRT', 0))) * 1 - ART1731BIS + max(0, saisies.get('INVOMENTRY', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - saisies.get('INVOMRETPM', 0) - saisies.get('INVOMENTRJ', 0) - saisies.get('INVOMRETPO', 0) - saisies.get('INVOMRETPT', 0) - saisies.get('INVOMRETPY', 0) - saisies.get('INVOMENTRL', 0) - saisies.get('INVOMENTRQ', 0) - saisies.get('INVOMENTRV', 0) - saisies.get('INVOMENTNV', 0) - saisies.get('INVOMRETPN', 0) - saisies.get('INVOMRETPS', 0) - saisies.get('INVOMRETPX', 0) - saisies.get('INVOMENTRK', 0) - saisies.get('INVOMENTRP', 0) - saisies.get('INVOMENTRU', 0) - saisies.get('INVOMENTNU', 0) - saisies.get('INVOMRETPP', 0) - saisies.get('INVOMRETPU', 0) - saisies.get('INVOMENTRG', 0) - saisies.get('INVOMENTRM', 0) - saisies.get('INVOMENTRR', 0) - saisies.get('INVOMENTRW', 0) - saisies.get('INVOMENTNW', 0) - saisies.get('INVOMRETPR', 0) - saisies.get('INVOMRETPW', 0) - saisies.get('INVOMENTRI', 0) - saisies.get('INVOMENTRO', 0) - saisies.get('INVOMENTRT', 0))) * ART1731BIS * 1 - V_CNR
REPSA = max(0, saisies.get('CODHSA', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSA', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0))) * ART1731BIS * 1 - V_CNR
REPSB = max(0, saisies.get('CODHSB', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2)) * 1 - ART1731BIS + max(0, saisies.get('CODHSB', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2)) * ART1731BIS * 1 - V_CNR
REPSC = max(0, saisies.get('CODHSC', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSC', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0))) * ART1731BIS * 1 - V_CNR
REPSE = max(0, saisies.get('CODHSE', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0) - saisies.get('CODHTB', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSE', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0) - saisies.get('CODHTB', 0))) * ART1731BIS * 1 - V_CNR
REPSF = max(0, saisies.get('CODHSF', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSF', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0))) * ART1731BIS * 1 - V_CNR
REPSG = max(0, saisies.get('CODHSG', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSG', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0))) * ART1731BIS * 1 - V_CNR
REPSH = max(0, saisies.get('CODHSH', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSH', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0))) * ART1731BIS * 1 - V_CNR
REPSJ = max(0, saisies.get('CODHSJ', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0) - saisies.get('CODHTB', 0) - saisies.get('CODHSE', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSJ', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0) - saisies.get('CODHTB', 0) - saisies.get('CODHSE', 0))) * ART1731BIS * 1 - V_CNR
REPSK = max(0, saisies.get('CODHSK', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSK', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0))) * ART1731BIS * 1 - V_CNR
REPSL = max(0, saisies.get('CODHSL', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSL', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0))) * ART1731BIS * 1 - V_CNR
REPSM = max(0, saisies.get('CODHSM', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSM', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0))) * ART1731BIS * 1 - V_CNR
REPSO = max(0, saisies.get('CODHSO', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0) - saisies.get('CODHTB', 0) - saisies.get('CODHSE', 0) - saisies.get('CODHSJ', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSO', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0) - saisies.get('CODHTB', 0) - saisies.get('CODHSE', 0) - saisies.get('CODHSJ', 0))) * ART1731BIS * 1 - V_CNR
REPSP = max(0, saisies.get('CODHSP', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSP', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0))) * ART1731BIS * 1 - V_CNR
REPSQ = max(0, saisies.get('CODHSQ', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSQ', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0))) * ART1731BIS * 1 - V_CNR
REPSR = max(0, saisies.get('CODHSR', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSR', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0))) * ART1731BIS * 1 - V_CNR
REPST = max(0, saisies.get('CODHST', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0) - saisies.get('CODHTB', 0) - saisies.get('CODHSE', 0) - saisies.get('CODHSJ', 0) - saisies.get('CODHSO', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHST', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0) - saisies.get('CODHTB', 0) - saisies.get('CODHSE', 0) - saisies.get('CODHSJ', 0) - saisies.get('CODHSO', 0))) * ART1731BIS * 1 - V_CNR
REPSU = max(0, saisies.get('CODHSU', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSU', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0))) * ART1731BIS * 1 - V_CNR
REPSV = max(0, saisies.get('CODHSV', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSV', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0))) * ART1731BIS * 1 - V_CNR
REPSW = max(0, saisies.get('CODHSW', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSW', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0))) * ART1731BIS * 1 - V_CNR
REPSY = max(0, saisies.get('CODHSY', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0) - saisies.get('CODHTB', 0) - saisies.get('CODHSE', 0) - saisies.get('CODHSJ', 0) - saisies.get('CODHSO', 0) - saisies.get('CODHST', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSY', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0) - saisies.get('CODHTB', 0) - saisies.get('CODHSE', 0) - saisies.get('CODHSJ', 0) - saisies.get('CODHSO', 0) - saisies.get('CODHST', 0))) * ART1731BIS * 1 - V_CNR
REPSZ = max(0, saisies.get('CODHSZ', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHSZ', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0))) * ART1731BIS * 1 - V_CNR
REPTA = max(0, saisies.get('CODHTA', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHTA', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0))) * ART1731BIS * 1 - V_CNR
REPTB = max(0, saisies.get('CODHTB', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHTB', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0))) * ART1731BIS * 1 - V_CNR
REPTD = max(0, saisies.get('CODHTD', 0) - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0) - saisies.get('CODHTB', 0) - saisies.get('CODHSE', 0) - saisies.get('CODHSJ', 0) - saisies.get('CODHSO', 0) - saisies.get('CODHST', 0) - saisies.get('CODHSY', 0))) * 1 - ART1731BIS + max(0, saisies.get('CODHTD', 0) - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - saisies.get('CODHSB', 0) - saisies.get('CODHSG', 0) - saisies.get('CODHSL', 0) - saisies.get('CODHSQ', 0) - saisies.get('CODHSV', 0) - saisies.get('CODHTA', 0) - saisies.get('CODHSA', 0) - saisies.get('CODHSF', 0) - saisies.get('CODHSK', 0) - saisies.get('CODHSP', 0) - saisies.get('CODHSU', 0) - saisies.get('CODHSZ', 0) - saisies.get('CODHSC', 0) - saisies.get('CODHSH', 0) - saisies.get('CODHSM', 0) - saisies.get('CODHSR', 0) - saisies.get('CODHSW', 0) - saisies.get('CODHTB', 0) - saisies.get('CODHSE', 0) - saisies.get('CODHSJ', 0) - saisies.get('CODHSO', 0) - saisies.get('CODHST', 0) - saisies.get('CODHSY', 0))) * ART1731BIS * 1 - V_CNR
RRIRENT = RRISUP - RLOGSOC - RDOMSOC1 - RIDOMPROTOT - RCOLENT
IAD11 = max(0, IDOM11 - DEC11 - RED) * 1 - is_positive(V_CR2 + saisies.get('IPVLOC', 0)) + is_positive(V_CR2 + saisies.get('IPVLOC', 0)) * max(0, IDOM11 - RED) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) + is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * IDOM16
IBM13 = IAD11 + ITP + REI + saisies.get('AUTOVERSSUP', 0) + TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES + AVFISCOPTER
IBM23 = IAD11 + ITP + REI + saisies.get('AUTOVERSSUP', 0) + AVFISCOPTER
INDNIRI = is_positive(IDOM11 - DEC11) * is_zero(IAD11)
ITRED = min(RED, IDOM11 - DEC11)
LIGREPKT = is_positive(REPKT) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPKU = is_positive(REPKU) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPLH = is_positive(REPLH) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPLI = is_positive(REPLI) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPMB = is_positive(REPMB) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPMC = is_positive(REPMC) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPMMQE = is_positive(REPRJ + REPMN + REPQE) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPMN = is_positive(REPMN) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPNU = is_positive(REPNU) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPNV = is_positive(REPNV) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPNW = is_positive(REPNW) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPNY = is_positive(REPNY) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPA = is_positive(REPPA) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPAK = is_positive(REPPA + REPRK) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPB = is_positive(REPPB) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPBL = is_positive(REPPB + REPRL) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPD = is_positive(REPPD) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPDO = is_positive(REPPD + REPRO) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPE = is_positive(REPPE) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPEK = is_positive(REPPE + REPRP + REPSK + REPAK) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPF = is_positive(REPPF) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPFL = is_positive(REPPF + REPRQ + REPSL + REPAL) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPH = is_positive(REPPH) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPHO = is_positive(REPPH + REPRT + REPSO + REPAO) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPI = is_positive(REPPI) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPIZ = is_positive(REPPI + REPNU + REPSZ + REPBA) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPJ = is_positive(REPPJ) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPJA = is_positive(REPPJ + REPNV + REPTA + REPBB) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPL = is_positive(REPPL) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPLB = is_positive(REPPL + REPNY + REPTD + REPBG) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPM = is_positive(REPPM) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPN = is_positive(REPPN) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPO = is_positive(REPPO) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPP = is_positive(REPPP) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPR = is_positive(REPPR) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPS = is_positive(REPPS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPT = is_positive(REPPT) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPU = is_positive(REPPU) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPW = is_positive(REPPW) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPX = is_positive(REPPX) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPPY = is_positive(REPPY) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQE = is_positive(REPQE) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQF = is_positive(REPQF) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQG = is_positive(REPQG) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQI = is_positive(REPQI) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQO = is_positive(REPQO) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQP = is_positive(REPQP) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQR = is_positive(REPQR) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPQV = is_positive(REPQV) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRG = is_positive(REPRG) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRI = is_positive(REPRI) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRJ = is_positive(REPRJ) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRK = is_positive(REPRK) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRL = is_positive(REPRL) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRM = is_positive(REPRM) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRO = is_positive(REPRO) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRP = is_positive(REPRP) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRQ = is_positive(REPRQ) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRR = is_positive(REPRR) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRT = is_positive(REPRT) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRU = is_positive(REPRU) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRUP = is_positive(REPRU + REPSP + REPAP) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRV = is_positive(REPRV) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRVQ = is_positive(REPRV + REPSQ + REPAQ) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRW = is_positive(REPRW) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRWR = is_positive(REPRW + REPSR + REPHAR) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRY = is_positive(REPRY) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPRYT = is_positive(REPRY + REPST + REPAT) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSA = is_positive(REPSA) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSAA = is_positive(REPSA + REPAA) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSAB = is_positive(REPSB + REPAB) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSAC = is_positive(REPSC + REPAC) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSAE = is_positive(REPSE + REPAE) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSAF = is_positive(REPSF + REPAF) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSAG = is_positive(REPSG + REPAG) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSAH = is_positive(REPSH + REPAH) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSAJ = is_positive(REPSJ + REPAJ) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSAM = is_positive(REPSM + REPAM) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSAU = is_positive(REPSU + REPAU) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSAV = is_positive(REPSV + REPAV) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSAW = is_positive(REPSW + REPAW) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSAY = is_positive(REPSY + REPAY) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSB = is_positive(REPSB) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSC = is_positive(REPSC) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSE = is_positive(REPSE) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSF = is_positive(REPSF) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSG = is_positive(REPSG) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSH = is_positive(REPSH) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSJ = is_positive(REPSJ) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSK = is_positive(REPSK) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSL = is_positive(REPSL) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSM = is_positive(REPSM) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSO = is_positive(REPSO) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSP = is_positive(REPSP) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSQ = is_positive(REPSQ) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSR = is_positive(REPSR) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPST = is_positive(REPST) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSU = is_positive(REPSU) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSV = is_positive(REPSV) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSW = is_positive(REPSW) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSY = is_positive(REPSY) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPSZ = is_positive(REPSZ) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPTA = is_positive(REPTA) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPTB = is_positive(REPTB) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPTBE = is_positive(REPTB + REPBE) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIGREPTD = is_positive(REPTD) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1
LIG_CORRECT = positif_ou_nul(IBM23) * INDREV1A8 * LIG1 * LIG2
RENT01 = max(min(INVRETAB * 1 - INDPLAF + INVRETABA * INDPLAF, RRIRENT), 0) * 1 - V_CNR
RENT02 = max(min(INVRETAG * 1 - INDPLAF + INVRETAGA * INDPLAF, RRIRENT - RENT01), 0) * 1 - V_CNR
RENT03 = max(min(INVRETAL * 1 - INDPLAF + INVRETALA * INDPLAF, RRIRENT - RENT01 - RENT02), 0) * 1 - V_CNR
RENT04 = max(min(INVRETAQ * 1 - INDPLAF + INVRETAQA * INDPLAF, RRIRENT - RENT01 - RENT02 - RENT03), 0) * 1 - V_CNR
RENT05 = max(min(INVRETAV * 1 - INDPLAF + INVRETAVA * INDPLAF, RRIRENT - RENT01 - RENT02 - RENT03 - RENT04), 0) * 1 - V_CNR
RENT06 = max(min(INVRETBB * 1 - INDPLAF + INVRETBBA * INDPLAF, RRIRENT - sum([RENT01, RENT02, RENT03, RENT04, RENT05])), 0) * 1 - V_CNR
RENT07 = max(min(INVRETAA * 1 - INDPLAF + INVRETAAA * INDPLAF, RRIRENT - sum([RENT01, RENT02, RENT03, RENT04, RENT05, RENT06])), 0) * 1 - V_CNR
RENT08 = max(min(INVRETAF * 1 - INDPLAF + INVRETAFA * INDPLAF, RRIRENT - sum([RENT01, RENT02, RENT03, RENT04, RENT05, RENT06, RENT07])), 0) * 1 - V_CNR
RENT09 = max(min(INVRETAK * 1 - INDPLAF + INVRETAKA * INDPLAF, RRIRENT - sum([RENT01, RENT02, RENT03, RENT04, RENT05, RENT06, RENT07, RENT08])), 0) * 1 - V_CNR
RENT10 = max(min(INVRETAP * 1 - INDPLAF + INVRETAPA * INDPLAF, RRIRENT - sum([RENT01, RENT02, RENT03, RENT04, RENT05, RENT06, RENT07, RENT08, RENT09])), 0) * 1 - V_CNR
RENT11 = max(min(INVRETAU * 1 - INDPLAF + INVRETAUA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10])), 0) * 1 - V_CNR
RENT12 = max(min(INVRETBA * 1 - INDPLAF + INVRETBAA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11])), 0) * 1 - V_CNR
RENT13 = max(min(INVRETAC * 1 - INDPLAF + INVRETACA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12])), 0) * 1 - V_CNR
RENT14 = max(min(INVRETAH * 1 - INDPLAF + INVRETAHA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13])), 0) * 1 - V_CNR
RENT15 = max(min(INVRETAM * 1 - INDPLAF + INVRETAMA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14])), 0) * 1 - V_CNR
RENT16 = max(min(INVRETAR * 1 - INDPLAF + INVRETARA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15])), 0) * 1 - V_CNR
RENT17 = max(min(INVRETAW * 1 - INDPLAF + INVRETAWA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16])), 0) * 1 - V_CNR
RENT18 = max(min(INVRETBE * 1 - INDPLAF + INVRETBEA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17])), 0) * 1 - V_CNR
RENT19 = max(min(INVRETAE * 1 - INDPLAF + INVRETAEA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18])), 0) * 1 - V_CNR
RENT20 = max(min(INVRETAJ * 1 - INDPLAF + INVRETAJA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19])), 0) * 1 - V_CNR
RENT21 = max(min(INVRETAO * 1 - INDPLAF + INVRETAOA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20])), 0) * 1 - V_CNR
RENT22 = max(min(INVRETAT * 1 - INDPLAF + INVRETATA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21])), 0) * 1 - V_CNR
RENT23 = max(min(INVRETAY * 1 - INDPLAF + INVRETAYA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22])), 0) * 1 - V_CNR
RENT24 = max(min(INVRETBG * 1 - INDPLAF + INVRETBGA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23])), 0) * 1 - V_CNR
RENT25 = max(min(INVRETABR * 1 - INDPLAF + INVRETABRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24])), 0) * 1 - V_CNR
RENT26 = max(min(INVRETAGR * 1 - INDPLAF + INVRETAGRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25])), 0) * 1 - V_CNR
RENT27 = max(min(INVRETALR * 1 - INDPLAF + INVRETALRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26])), 0) * 1 - V_CNR
RENT28 = max(min(INVRETAQR * 1 - INDPLAF + INVRETAQRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27])), 0) * 1 - V_CNR
RENT29 = max(min(INVRETAVR * 1 - INDPLAF + INVRETAVRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28])), 0) * 1 - V_CNR
RENT30 = max(min(INVRETBBR * 1 - INDPLAF + INVRETBBRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29])), 0) * 1 - V_CNR
RENT31 = max(min(INVRETAAR * 1 - INDPLAF + INVRETAARA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30])), 0) * 1 - V_CNR
RENT32 = max(min(INVRETAFR * 1 - INDPLAF + INVRETAFRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30, RENT31])), 0) * 1 - V_CNR
RENT33 = max(min(INVRETAKR * 1 - INDPLAF + INVRETAKRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30, RENT31, RENT32])), 0) * 1 - V_CNR
RENT34 = max(min(INVRETAPR * 1 - INDPLAF + INVRETAPRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30, RENT31, RENT32, RENT33])), 0) * 1 - V_CNR
RENT35 = max(min(INVRETAUR * 1 - INDPLAF + INVRETAURA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30, RENT31, RENT32, RENT33, RENT34])), 0) * 1 - V_CNR
RENT36 = max(min(INVRETBAR * 1 - INDPLAF + INVRETBARA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30, RENT31, RENT32, RENT33, RENT34, RENT35])), 0) * 1 - V_CNR
REPDOMENTR1 = REPSB + REPSG + REPSL + REPSQ + REPSV + REPTA + REPSA + REPSF + REPSK + REPSP + REPSU + REPSZ + REPSC + REPSH + REPSM + REPSR + REPSW + REPTB + REPSE + REPSJ + REPSO + REPST + REPSY + REPTD
REPDOMENTR2 = REPPM + REPRJ + REPPO + REPPT + REPPY + REPRL + REPRQ + REPRV + REPNV + REPPN + REPPS + REPPX + REPRK + REPRP + REPRU + REPNU + REPPP + REPPU + REPRG + REPRM + REPRR + REPRW + REPNW + REPPR + REPPW + REPRI + REPRO + REPRT + REPRY + REPNY
REPDOMENTR3 = REPQE + REPQV + REPQP + REPQG + REPQO + REPQF + REPQR + REPQI + REPPB + REPPF + REPPJ + REPPA + REPPE + REPPI + REPPD + REPPH + REPPL
REPDOMENTR4 = REPMN + REPMB + REPMC + REPLH + REPLI + REPKT + REPKU
A10RENT1 = RENT13 + RENT19 + RENT15 + RENT21 + RLOC101 + RLOC107 + RLOC103 + RLOC109 + RLOC13 + RLOC31 + RLOC33 + RLOC62 + RLOC69 + RLOC65 + RLOC72 + max(0, RLOC11 + RLOC17 + RLOC09 + RLOC15 + RLOC26 + RLOC41 + RLOC21 + RLOC36 + RLOC28 + RLOC43 + RLOC55 + RLOC83 + RLOC48 + RLOC76 + RLOC58 + RLOC86 + RLOC51 + RLOC79 + RLOC23 + RLOC38 + RENT07 + RENT31 + RENT01 + RENT25 + RENT09 + RENT33 + RENT03 + RENT27 + RLOC95 + RLOC115 + RLOC89 + RLOC113 + RLOC97 + RLOC121 + RLOC91 + RLOC117 - round(RLOC11 + RLOC17 * 50 / 100) + round(RLOC09 + RLOC15 * 60 / 100) + round(RLOC26 + RLOC41 * 50 / 100) + round(RLOC21 + RLOC36 * 60 / 100) + round(RLOC55 + RLOC83 * 50 / 100) + round(RLOC48 + RLOC76 * 60 / 100) + round(RLOC28 + RLOC43 * 5263 / 10000) + round(RLOC23 + RLOC38 * 625 / 1000) + round(RLOC58 + RLOC86 * 5263 / 10000) + round(RLOC51 + RLOC79 * 625 / 1000) + round(RENT07 + RENT31 * 5263 / 10000) + round(RENT01 + RENT25 * 625 / 1000) + round(RENT09 + RENT33 * 5263 / 10000) + round(RENT03 + RENT27 * 625 / 1000) + round(RLOC95 + RLOC115 * 5263 / 10000) + round(RLOC89 + RLOC113 * 625 / 1000) + round(RLOC97 + RLOC121 * 5263 / 10000) + round(RLOC91 + RLOC117 * 625 / 1000)) * 1 - V_CNR
A11RENT1 = RENT14 + RENT20 + RENT16 + RENT22 + RLOC102 + RLOC108 + RLOC104 + RLOC110 + RLOC34 + RLOC63 + RLOC70 + RLOC66 + RLOC73 + max(0, RLOC29 + RLOC44 + RLOC24 + RLOC39 + RLOC56 + RLOC84 + RLOC49 + RLOC77 + RLOC59 + RLOC87 + RLOC52 + RLOC80 + RENT08 + RENT32 + RENT02 + RENT26 + RENT10 + RENT34 + RENT04 + RENT28 + RLOC96 + RLOC116 + RLOC90 + RLOC114 + RLOC98 + RLOC122 + RLOC92 + RLOC118 - round(RLOC29 + RLOC44 * 5263 / 10000) + round(RLOC24 + RLOC39 * 625 / 1000) + round(RLOC56 + RLOC84 * 5263 / 10000) + round(RLOC49 + RLOC77 * 625 / 1000) + round(RLOC59 + RLOC87 * 5263 / 10000) + round(RLOC52 + RLOC80 * 625 / 1000) + round(RENT08 + RENT32 * 5263 / 10000) + round(RENT02 + RENT26 * 625 / 1000) + round(RENT10 + RENT34 * 5263 / 10000) + round(RENT04 + RENT28 * 625 / 1000) + round(RLOC96 + RLOC116 * 5263 / 10000) + round(RLOC90 + RLOC114 * 625 / 1000) + round(RLOC98 + RLOC122 * 5263 / 10000) + round(RLOC92 + RLOC118 * 625 / 1000)) * 1 - V_CNR
A12RENT1 = RENT17 + RENT23 + RLOC105 + RLOC111 + RLOC67 + RLOC74 + max(0, RENT11 + RENT35 + RENT05 + RENT29 + RLOC60 + RLOC88 + RLOC53 + RLOC81 + RLOC99 + RLOC123 + RLOC93 + RLOC119 - round(RENT11 + RENT35 * 5263 / 10000) + round(RENT05 + RENT29 * 625 / 1000) + round(RLOC60 + RLOC88 * 5263 / 10000) + round(RLOC53 + RLOC81 * 625 / 1000) + round(RLOC99 + RLOC123 * 5263 / 10000) + round(RLOC93 + RLOC119 * 625 / 1000)) * 1 - V_CNR
A13RENT1 = RENT18 + RENT24 + RLOC106 + RLOC112 + max(0, RENT12 + RENT36 + RENT06 + RENT30 + RLOC100 + RLOC124 + RLOC94 + RLOC120 - round(RENT12 + RENT36 * 5263 / 10000) + round(RENT06 + RENT30 * 625 / 1000) + round(RLOC100 + RLOC124 * 5263 / 10000) + round(RLOC94 + RLOC120 * 625 / 1000)) * 1 - V_CNR
GGIAIMP = IAD11
GGIRSEUL = IAD11 + ITP + REI + AVFISCOPTER
IAMD1 = IBM13
IAMD2 = IBM23
IAMD2TH = positif_ou_nul(IBM23 - SEUIL_61) * IBM23
IDRS2 = 1 - is_positive(saisies.get('IPMOND', 0) + INDTEFF) * IDRSANT + is_positive(ABADO) * ABADO + is_positive(ABAGU) * ABAGU * is_positive(IDRSANT) + IPHQANT2 * 1 - is_positive(IDRSANT) + is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) * IAMD2 + is_positive(saisies.get('IPMOND', 0) + INDTEFF) * IDRS * 1 - is_positive(IPHQ2) + IPHQ2 * is_positive(IPHQ2)
IND61IR = is_positive(positif_ou_nul(IAMD1 - SEUIL_61) + is_positive(present(saisies.get('NRINET', 0)) + present(saisies.get('IMPRET', 0)) + present(saisies.get('BRAS', 0)))) * 2 + 1 - is_positive(positif_ou_nul(IAMD1 - SEUIL_61) + is_positive(present(saisies.get('NRINET', 0)) + present(saisies.get('IMPRET', 0)) + present(saisies.get('BRAS', 0)))) * is_positive(IAMD1) * 1 + is_zero(IAMD1) * 1 - is_positive(present(saisies.get('NRINET', 0)) + present(saisies.get('IMPRET', 0)) + present(saisies.get('BRAS', 0))) * 3
INDSEUIL61 = positif_ou_nul(IAMD1 - SEUIL_61)
IRB = IAMD2
IRB2 = IAMD2 + TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES
LOYBASE_I = TAXLOY * is_positive(IAMD1 + 1 - SEUIL_61)
TAXABASE_I = TAXASSUR * is_positive(IAMD1 + 1 - SEUIL_61)
TXMARJ = max(is_positive(WTXMARJ - LIM_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR1A * saisies.get('V_ANC_BAR', 0)) * TX_BAR1 * 1 - saisies.get('V_ANC_BAR', 0) + TX_BAR1A * saisies.get('V_ANC_BAR', 0), max(is_positive(WTXMARJ - LIM_BAR2 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR2A * saisies.get('V_ANC_BAR', 0)) * TX_BAR2, max(is_positive(WTXMARJ - LIM_BAR3 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR3A * saisies.get('V_ANC_BAR', 0)) * TX_BAR3, max(is_positive(WTXMARJ - LIM_BAR4 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR4A * saisies.get('V_ANC_BAR', 0)) * TX_BAR4, max(is_positive(WTXMARJ - LIM_BAR5 * 1 - saisies.get('V_ANC_BAR', 0) + LIM_BAR5A * saisies.get('V_ANC_BAR', 0)) * TX_BAR5, 0))))) * 1 - is_positive(present(saisies.get('NRBASE', 0)) + present(saisies.get('NRINET', 0)) + present(saisies.get('IPTEFP', 0)) + present(saisies.get('IPTEFN', 0)) + present(saisies.get('PRODOM', 0)) + present(saisies.get('PROGUY', 0))) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * is_positive(IDRS2 + IPQ1)
A10RENT = max(0, A10RENT1 * 1 - ART1731BIS + min(A10RENT1731 + 0, A10RENT1) * ART1731BIS) * 1 - V_CNR
A11RENT = max(0, A11RENT1 * 1 - ART1731BIS + min(A11RENT1731 + 0, A11RENT1) * ART1731BIS) * 1 - V_CNR
A12RENT = max(0, A12RENT1 * 1 - ART1731BIS + min(A12RENT1731 + 0, A12RENT1) * ART1731BIS) * 1 - V_CNR
A13RENT = max(0, A13RENT1 * 1 - ART1731BIS + min(A13RENT1731 + 0, A13RENT1) * ART1731BIS) * 1 - V_CNR
CICAP = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES - AVFISCOPTER, min(IPCAPTAXTOT, BCICAP)))
CICHR = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES - AVFISCOPTER - CICAP, min(CHRAPRES, BCICHR)))
CIRCMAVFT = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER, saisies.get('RCMAVFT', 0) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)))))
DIAVF2 = BCIGA + saisies.get('IPRECH', 0) + saisies.get('IPCHER', 0) + saisies.get('IPELUS', 0) + saisies.get('RCMAVFT', 0) + saisies.get('DIREPARGNE', 0) + saisies.get('COD3VE', 0) + saisies.get('COD3UV', 0) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) + CIRCMAVFT * is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
GGINET = ((GGIAIMP - 0 + EPAV + CICA + CIGE) if (saisies.get('V_REGCO', 0) == 2) else max(0, GGIAIMP - CIRCMAVFT + EPAV + CICA + CIGE)) if (is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0) + 0) == 0) else max(0, GGIAIMP - CIRCMAVFT)
IHAUTREVT = max(0, CHRAPRES - CICHR)
IPCAPTAXT = IPCAPTAXTOT - CICAP
IRETS = max(0, min(min(saisies.get('COD8PA', 0), IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT) * present(saisies.get('COD8PA', 0)) + IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT * 1 - present(saisies.get('COD8PA', 0)), saisies.get('IPSOUR', 0) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))))
LIG2305 = is_positive(DIAVF2) * LIG1 * LIG2
LIGREGCI = is_positive(present(saisies.get('REGCI', 0)) + present(saisies.get('COD8XY', 0))) * is_positive(CICHR) * LIG1 * LIG2
VARIR61 = IBM23 + TAXASSUR + IPCAPTAXT + TAXLOY + IHAUTREVT + 0
A10REEL = RLOG11 + RLOG13 + RLOG15 + RLOG18 + RLOG20 + RLOG23 + RLOG26 + RLOG27 + RLOG29 * 1 - ART1731BIS + min(RLOG111731 + 0, RLOG11) + min(RLOG131731 + 0, RLOG13) + min(RLOG151731 + 0, RLOG15) + min(RLOG181731 + 0, RLOG18) + min(RLOG201731 + 0, RLOG20) + min(RLOG231731 + 0, RLOG23) * ART1731BIS + RLOG33 + RLOG34 + RLOG36 + A10RSOC + round(RSNCL) + A10RENT + RCELRREDLC + RCELRREDLD + RCELRREDLS + RCELRREDLT + RCELREPHW + RCELREPHV + RCELREPHD + RCELREPHH + RCELREPHB + RCELREPGX + RCELREPGS + RCELREPGP + RCELREPYL + RCELREPYF + RCELREPYE + RCELHJK + RCELNQ + RCELNBGL + RINVRED + RREPMEU + RCODIM + RCODIL + RILMIH + RILMIB + RILMJC + RILMJX + RILMPB + RILMOD + A10TOURSOC + RPATNAT1 + A10RFOR
A11REEL = RLOG16 + RLOG21 + RLOG24 * 1 - ART1731BIS + min(RLOG161731 + 0, RLOG16) + min(RLOG211731 + 0, RLOG21) + min(RLOG241731 + 0, RLOG24) * ART1731BIS + RLOG28 + RLOG30 + RLOG35 + RLOG37 + A11RSOC + round(RSNCM) + RCELRREDLF + RCELRREDLZ + RCELRREDLX + RCELREPHG + RCELREPHA + RCELREPGW + RCELREPGL + RCELREPGK + RCELREPYK + RCELREPYD + RCELREPYC + RCELCOM + RCEL + RCELJP + RCELJBGL + RCODIE + RCODIN + RCODIV + RCODIJ + RILMIZ + RILMIA + RILMJI + RILMJW + RILMPC + RILMOC + RTOURREP * is_positive(saisies.get('INVLOCXN', 0)) + RTOUREPA * is_positive(saisies.get('INVLOCXV', 0)) + RPATNAT2 + A11RENT + A11RFOR
A12REEL = A12RFOR + A12RRESTIMO + RLOG25 * 1 - ART1731BIS + min(RLOG251731 + 0, RLOG25) * ART1731BIS + RLOG31 * 1 - ART1731BIS + RLOG38 * 1 - ART1731BIS + RTOURREP * is_positive(saisies.get('COD7UY', 0)) + RTOUREPA * is_positive(saisies.get('COD7UZ', 0)) + round(RSNCN + RSNCQ) + RCELRREDMG + RCELRREDMH + RCELREPGV + RCELREPGJ + RCELREPYJ + RCELREPYB + RCELREPYI + RCELREPYA + RCELJOQR + RCEL2012 + RCELFD + RCELFABC + RCODIF + RCODIG + RCODID + RILMJV + RILMJS + RCODJU + RILMPD + RILMOB + RPATNAT3 + A12RSOC + A12RENT
A13REELB = RCINE + RLOG32 + RLOG39 + A13RSOC + A13RENT
CAPBASE_I = IPCAPTAXT * is_positive(IAMD1 + 1 - SEUIL_61)
CRDIE = max(0, min(IRB - REI - AVFISCOPTER - CIRCMAVFT - IRETS, min(IAD11 - CIRCMAVFT - IRETS, CRCFA) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))))
CRDIE2 = CRDIE + 0
HRBASE_I = IHAUTREVT * is_positive(IAMD1 + 1 - SEUIL_61)
ICREREVET = max(0, min(IAD11 + ITP - CIRCMAVFT - IRETS - min(IAD11, CRCFA), min(ITP, CREREVET)))
LIG109 = is_positive(saisies.get('IPSOUR', 0) + saisies.get('REGCI', 0) + LIGPVETR + LIGCULTURE + LIGMECENAT + LIGCORSE + LIG2305 + LIGEMPLOI + LIGCI2CK + LIGCICAP + LIGCI8XV + LIGCIGLO + LIGREGCI + LIGBPLIB + LIGCIGE + LIGDEVDUR + LIGCICA + LIGCIGARD + LIG82 + LIGPRETUD + LIGSALDOM + LIGCIFORET + LIGHABPRIN + LIGCREFAM + LIGCREAPP + LIGCREBIO + LIGPRESINT + LIGCREPROSP + LIGINTER + LIGRESTAU + LIGCONGA + LIGMETART + LIGCREFORM + LIGLOYIMP + LIGVERSLIB + LIGCITEC + INDLIGPPE) * LIG1 * LIG2
LIGCRED1 = is_positive(saisies.get('REGCI', 0) + LIGPVETR + LIGCICAP + LIGREGCI + LIGCI8XV + LIGCIGLO + 0) * 1 - is_positive(saisies.get('IPSOUR', 0) + LIGCULTURE + LIGMECENAT + LIGCORSE + LIG2305 + LIGEMPLOI + LIGCI2CK + LIGBPLIB + LIGCIGE + LIGDEVDUR + LIGCICA + LIGCIGARD + LIG82 + LIGPRETUD + LIGSALDOM + LIGCIFORET + LIGHABPRIN + LIGCREFAM + LIGCREAPP + LIGCREBIO + LIGPRESINT + LIGCREPROSP + LIGINTER + LIGRESTAU + LIGCONGA + LIGMETART + LIGCREFORM + LIGLOYIMP + LIGVERSLIB + LIGCITEC + 0)
LIGCRED2 = 1 - is_positive(saisies.get('REGCI', 0) + LIGPVETR + LIGCICAP + LIGREGCI + LIGCI8XV + LIGCIGLO + 0) * is_positive(saisies.get('IPSOUR', 0) + LIGCULTURE + LIGMECENAT + LIGCORSE + LIG2305 + LIGEMPLOI + LIGCI2CK + LIGBPLIB + LIGCIGE + LIGDEVDUR + LIGCICA + LIGCIGARD + LIG82 + LIGPRETUD + LIGSALDOM + LIGCIFORET + LIGHABPRIN + LIGCREFAM + LIGCREAPP + LIGCREBIO + LIGPRESINT + LIGCREPROSP + LIGINTER + LIGRESTAU + LIGCONGA + LIGMETART + LIGCREFORM + LIGLOYIMP + LIGVERSLIB + LIGCITEC + 0)
LIGCRED3 = is_positive(saisies.get('REGCI', 0) + LIGPVETR + LIGCICAP + LIGREGCI + LIGCI8XV + LIGCIGLO + 0) * is_positive(saisies.get('IPSOUR', 0) + LIGCULTURE + LIGMECENAT + LIGCORSE + LIG2305 + LIGEMPLOI + LIGCI2CK + LIGBPLIB + LIGCIGE + LIGDEVDUR + LIGCICA + LIGCIGARD + LIG82 + LIGPRETUD + LIGSALDOM + LIGCIFORET + LIGHABPRIN + LIGCREFAM + LIGCREAPP + LIGCREBIO + LIGPRESINT + LIGCREPROSP + LIGINTER + LIGRESTAU + LIGCONGA + LIGMETART + LIGCREFORM + LIGLOYIMP + LIGVERSLIB + LIGCITEC + 0)
CI8XV = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET, ICI8XV))
CIGLO = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET, ICIGLO))
CI8XFH = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET - CI8XV, ICI8XFH))
CICULTUR = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - REI - IRETS - CRDIE - ICREREVET - CIGLO, min(IAD11 + ITP + TAXASSUR + TAXLOY + IPCAPTAXTOT + CHRAPRES, BCIAQCUL)))
CIGPA = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR, BCIGA))
CIDONENTR = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - REI - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR - CIGPA, BCIDONENTR))
CICORSE = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - saisies.get('IPPRICORSE', 0) - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR - CIGPA - CIDONENTR, saisies.get('CIINVCORSE', 0) + saisies.get('IPREPCORSE', 0)))
CICORSEAVIS = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - saisies.get('IPPRICORSE', 0) - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR - CIGPA - CIDONENTR, saisies.get('CIINVCORSE', 0) + saisies.get('IPREPCORSE', 0))) + saisies.get('CICORSENOW', 0)
CIRECH = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR - CIGPA - CIDONENTR - CICORSE, saisies.get('IPCHER', 0)))
IAVF = IRE - EPAV + CICORSE + CICULTUR + CIGPA + CIRCMAVFT
IAVF2 = CIDIREPARGNE + saisies.get('IPRECH', 0) + CIRECH + saisies.get('IPELUS', 0) + CIRCMAVFT + CIGPA + CIEXCEDENT + 0 * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) + CIRCMAVFT * is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
IAVFGP = IAVF2 + saisies.get('CREFAM', 0) + saisies.get('CREAPP', 0)
REPCORSE = abs(saisies.get('CIINVCORSE', 0) + saisies.get('IPREPCORSE', 0) - CICORSE)
REPRECH = abs(saisies.get('IPCHER', 0) - CIRECH)
CICOMPEMPL = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR - CIGPA - CIDONENTR - CICORSE - CIRECH, saisies.get('COD8UW', 0)))
CIEMPLOI = CICOMPEMPL + saisies.get('COD8TL', 0) * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
INE = CIRCMAVFT + IRETS + min(max(0, IAD11 - CIRCMAVFT - IRETS), CRCFA) + ICREREVET + CIGLO + CICULTUR + CIGPA + CIDONENTR + CICORSE + CIRECH + CICOMPEMPL * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0))
IRECR = abs(min(0, IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR - CIGPA - CIDONENTR - CICORSE - CIRECH - CICOMPEMPL))
LIGIRECR = is_positive(IRECR) * LIG1 * LIG2
LIGREPCORSE = is_positive(REPCORSE) * LIG1 * LIG2
LIGREPRECH = is_positive(REPRECH) * LIG1 * LIG2
REPCICE = abs(saisies.get('COD8UW', 0) - CICOMPEMPL)
TOTIRE = IREP - ITRED - IRE - INE
AGRECI = max(0, INE + IRE + CICAP + CICHR - AGREPPE)
AGRECITOT = INE + IRE + CICAP + CICHR
IAN = max(0, IRB - AVFISCOPTER + CIRCMAVFT - IRETS - min(max(0, IAD11 - CIRCMAVFT - IRETS), CRCFA) - ICREREVET - CIGLO - CICULTUR - CIGPA - CIDONENTR - CICORSE - CIRECH - CICOMPEMPL * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)) + min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(IPCAPTAXTOT + 0, max(0, INE - IRB + AVFISCOPTER - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)))) + min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - min(IPCAPTAXTOT + 0, max(0, INE - IRB + AVFISCOPTER - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)))) - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)))))
IAR = min(0, IAN + AVFISCOPTER - IRE) + max(0, IAN + AVFISCOPTER - IRE)
IARD = IAR - IAR_A
IAVT = IRE - EPAV - CICA + min(IRB, saisies.get('IPSOUR', 0) + CRCFA) + min(max(0, IAN - IRE), BCIGA * 1 - is_positive(saisies.get('RE168', 0) + saisies.get('TAX1649', 0)))
IAVT2 = IAVT + CICA
IMPTHNET = max(0, IRB * positif_ou_nul(IRB - SEUIL_61) - INE - IRE * positif_ou_nul(IRB * positif_ou_nul(IRB - SEUIL_61) - INE - IRE - SEUIL_12)) * 1 - V_CNR
IRN = min(0, IAN + AVFISCOPTER - IRE) + max(0, IAN + AVFISCOPTER - IRE) * is_positive(IAMD1 + 1 - SEUIL_61)
IRNIN = IRN - saisies.get('IRANT', 0) * is_positive(IRN - saisies.get('IRANT', 0))
IRNN = IRNIN
LIGREPCICE = is_positive(REPCICE) * LIG1 * LIG2
LIG_REPORT = is_positive(LIGRNIDF + sum([LIGRNIDF0, LIGRNIDF1, LIGRNIDF2, LIGRNIDF3, LIGRNIDF4, LIGRNIDF5]) + LIGDEFBA + LIGDRFRP + LIG3250 + LIGIRECR + LIGDRCVM + LIGDLMRN + LIGBNCDF + sum([LIGMIBDREPV + LIGMBDREPNPV + LIGSPEDREPV + LIGSPDREPNPV, LIGMIBDREPC + LIGMBDREPNPC + LIGSPEDREPC + LIGSPDREPNPC, LIGMIBDREPP + LIGMBDREPNPP + LIGSPEDREPP + LIGSPDREPNPP]) + LIGLOCNEUF + sum([LIGLOCNEUF1, LIGLOCNEUF2, LIGLOCNEUF3, LIGLOCNEUF4, LIGLOCNEUF5, LIGLOCNEUF6]) + LIGPATNATR + LIGRDUFLOTOT + LIGRPINELTOT + LIGRCELFD + LIGRCELFABC + LIGRCEL2012 + LIGRCELJBGL + LIGRCELJOQR + LIGRCELJP + LIGRCEL + LIGRCELNBGL + LIGRCELCOM + LIGRCELNQ + LIGRCELHJK + LIGRCELHNO + LIGRCELHLM + LIGRRCEL1 + LIGRRCEL2 + LIGRRCEL3 + LIGRRCEL4 + LIGRCODOU + LIGRCODJT + LIGRCODJU + LIGRLOCIDFG + LIGREPLOCIE + LIGNEUV + LIGRNEUV + LIGVIEU + LIGCOMP01 + LIGREPQKG + LIGREPQNH + LIGREPQUS + LIGREPQWB + LIGREPMMQE + LIGREPLI + LIGREPMC + LIGREPKU + LIGREPLH + LIGREPMB + LIGREPKT + LIGREPQV + LIGREPQO + LIGREPQP + LIGREPQR + LIGREPQF + LIGREPQG + LIGREPQI + LIGREPPAK + LIGREPPBL + LIGREPPDO + LIGREPPEK + LIGREPPFL + LIGREPPHO + LIGREPPIZ + LIGREPPJA + LIGREPPLB + LIGREPTB + LIGREPPM + LIGREPPN + LIGREPPO + LIGREPPP + LIGREPPR + LIGREPPS + LIGREPPT + LIGREPPU + LIGREPPW + LIGREPPX + LIGREPPY + LIGREPRG + LIGREPRI + LIGREPRM + LIGREPRC + LIGREPRR + LIGREPRUP + LIGREPRVQ + LIGREPRWR + LIGREPRYT + LIGREPNW + LIGREPSA + LIGREPSB + LIGREPSC + LIGREPSE + LIGREPSF + LIGREPSG + LIGREPSH + LIGREPSJ + LIGREPSM + LIGREPSU + LIGREPSV + LIGREPSW + LIGREPSY + LIGREPDOMOUT + LIGPME3 + LIGPME2 + LIGPME1 + LIGPMECU + LIGRSN + LIGRSN2 + LIGRSN1 + LIGRSN0 + LIGPLAFRSN + LIGPLAFRSN4 + LIGPLAFRSN3 + LIGREPDON + LIGREPDONR + LIGREPDONR1 + LIGREPDONR2 + LIGREPDONR3 + LIGREPDONR4 + LIGREPOU + LIGREP7PA + LIGREP7PB + LIGREP7PC + LIGREP7PD + LIGREP7PE + LIGREPDOM + LIGREPNEUV + LIGREPCODJT + LIGREPLOCNT + LIGRESIREP + LIGREPMEU + LIGREPREPAR + LIGLOCRES + LIGDFRCM + LIGPME + LIGREPCORSE + LIGREPRECH + LIGREPCICE + LIGDEFPLOC + LIGFOREST + LIGNFOREST + LIGREP7UP + LIGREP7UA + LIGREP7UT + LIGREP7UB) * LIG2
LOYBASE = round(max(TAXLOY + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
LOYBASE_N = round(max(TAXLOY + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
NMAJCHR1 = max(0, MAJO1728CHR + round(max(0, IHAUTREVT + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT + TAXLOY)) * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJOHRTARDIF_D1 + FLAG_TRTARDIF_F * is_positive(PROPIR_A) * MAJOHRTARDIF_P1 + 1 - is_positive(PROPIR_A) * MAJOHRTARDIF_D1 - FLAG_TRTARDIF_F * 1 - is_positive(PROPIR_A) * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOHRTARDIF_R1 + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOHRTARDIF_A1)
NMAJCHR3 = max(0, MAJO1758ACHR + round(max(0, IHAUTREVT + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT + TAXLOY)) * COPETO / 100) * is_positive(is_zero(saisies.get('CMAJ', 0) - 10) + is_zero(saisies.get('CMAJ', 0) - 17)) + saisies.get('FLAG_TRTARDIF', 0) * MAJOHR17_2TARDIF_D + FLAG_TRTARDIF_F * is_positive(PROPHR_A) * MAJOHR17_2TARDIF_P + 1 - is_positive(PROPHR_A) * MAJOHR17_2TARDIF_D - FLAG_TRTARDIF_F * 1 - is_positive(PROPHR_A) * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOHR17_2TARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOHR17_2TARDIF_A)
NMAJLOY1 = max(0, MAJO1728LOY + round(max(0, TAXLOY - min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - IPCAPTAXT)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT)) * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJOLOYTARDIF_D1 + FLAG_TRTARDIF_F * is_positive(PROPLOY_A) * MAJOLOYTARDIF_P1 + 1 - is_positive(PROPLOY_A) * MAJOLOYTARDIF_D1 - FLAG_TRTARDIF_F * 1 - is_positive(PROPLOY_A) * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOLOYTARDIF_R1 + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOLOYTARDIF_A1)
NMAJLOY3 = max(0, MAJO1758ALOY + round(max(0, TAXLOY + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT)) * COPETO / 100) * is_positive(is_zero(saisies.get('CMAJ', 0) - 10) + is_zero(saisies.get('CMAJ', 0) - 17)) + saisies.get('FLAG_TRTARDIF', 0) * MAJOLO17_2TARDIF_D + FLAG_TRTARDIF_F * is_positive(PROPLOY_A) * MAJOLO17_2TARDIF_P + 1 - is_positive(PROPLOY_A) * MAJOLO17_2TARDIF_D - FLAG_TRTARDIF_F * 1 - is_positive(PROPLOY_A) * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOLO17_2TARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOLO17_2TARDIF_A)
NMAJPCAP1 = max(0, MAJO1728PCAP + round(max(0, IPCAPTAXT - min(IPCAPTAXT + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR)) * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJOCAPTARDIF_D1 + FLAG_TRTARDIF_F * MAJOCAPTARDIF_D1 - FLAG_TRTARDIF_F * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOCAPTARDIF_R1 + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOCAPTARDIF_A1)
NMAJPCAP3 = max(0, MAJO1758APCAP + round(max(0, IPCAPTAXT + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR)) * COPETO / 100) * is_positive(is_zero(saisies.get('CMAJ', 0) - 10) + is_zero(saisies.get('CMAJ', 0) - 17)) + saisies.get('FLAG_TRTARDIF', 0) * MAJOCP17_2TARDIF_D)
NMAJTAXA1 = max(0, MAJO1728TAXA + round(max(0, TAXASSUR - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRN - saisies.get('IRANT', 0))) * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJOTAXATARDIF_D1 + FLAG_TRTARDIF_F * MAJOTAXATARDIF_D1 - FLAG_TRTARDIF_F * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOTAXATARDIF_R1 + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOTAXATARDIF_A1)
NMAJTAXA3 = max(0, MAJO1758ATAXA + round(max(0, TAXASSUR + min(0, IRN - saisies.get('IRANT', 0))) * COPETO / 100) * is_positive(is_zero(saisies.get('CMAJ', 0) - 10) + is_zero(saisies.get('CMAJ', 0) - 17)) + saisies.get('FLAG_TRTARDIF', 0) * MAJOTA17_2TARDIF_D)
PCAPBASE = round(max(IPCAPTAXT + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
TAXABASE = round(max(TAXASSUR + min(0, IRN - saisies.get('IRANT', 0)), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
TAXABASE_N = round(max(TAXASSUR + min(0, IRN - saisies.get('IRANT', 0)), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
B1507MAJO4 = IRNIN * is_positive(NMAJ4) + TAXASSUR * is_positive(NMAJTAXA4) + IPCAPTAXT * is_positive(NMAJPCAP4) + TAXLOY * is_positive(NMAJLOY4) + IHAUTREVT * is_positive(NMAJCHR4)
BINRIR = max(0, IRN - saisies.get('IRANT', 0)) + max(0, TAXASSUR - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRN - saisies.get('IRANT', 0))) + max(0, IPCAPTAXT - min(IPCAPTAXT + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR)) + max(0, TAXLOY - min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - IPCAPTAXT)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT)) + max(0, IHAUTREVT + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT + TAXLOY))
BTO = max(0, IRN - saisies.get('IRANT', 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
CAPBASE_N = round(max(IPCAPTAXT + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
CHRBASE = round(max(IHAUTREVT + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT + TAXLOY), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
HRBASE_N = round(max(IHAUTREVT + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT + TAXLOY), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
IRBASE_I = IRN - saisies.get('IRANT', 0) * is_positive(IRN + 1 - SEUIL_12)
IRBASE_N = IRN - saisies.get('IRANT', 0) * 1 - is_positive(IRN - saisies.get('IRANT', 0) + TAXABASE_IRECT + CAPBASE_IRECT + HRBASE_IRECT) + IAN - min(IAN, IRE) * is_positive(IRN - saisies.get('IRANT', 0) + TAXABASE_IRECT + CAPBASE_IRECT + HRBASE_IRECT)
LIGCHR17281 = TYPE2 * is_positive(NMAJCHR1)
LIGNMAJCHR1 = TYPE2 * is_positive(NMAJCHR1)
LIGNMAJCHR3 = TYPE2 * is_positive(NMAJCHR3)
LIGNMAJLOY1 = TYPE2 * is_positive(NMAJLOY1)
LIGNMAJLOY3 = TYPE2 * is_positive(NMAJLOY3)
LIGNMAJPCAP1 = TYPE2 * is_positive(NMAJPCAP1)
LIGNMAJPCAP3 = TYPE2 * is_positive(NMAJPCAP3)
LIGNMAJTAXA1 = TYPE2 * is_positive(NMAJTAXA1)
LIGNMAJTAXA3 = TYPE2 * is_positive(NMAJTAXA3)
LIGPCAP17281 = TYPE2 * is_positive(NMAJPCAP1)
LIGTAXA17281 = TYPE2 * is_positive(NMAJTAXA1)
MAJTXCHR1 = 1 - is_positive(saisies.get('V_NBCOD1728CHR', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJCHR1) * TXPF1728 + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728CHR', 0)) * -1
MAJTXCHR3 = is_positive(NMAJCHR3) * 10
MAJTXLOY1 = 1 - is_positive(saisies.get('V_NBCOD1728LOY', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJLOY1) * TXPF1728LOY + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728LOY', 0)) * -1
MAJTXLOY3 = is_positive(NMAJLOY3) * 10
MAJTXPCAP1 = 1 - is_positive(saisies.get('V_NBCOD1728CAP', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJPCAP1) * TXPF1728CAP + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728CAP', 0)) * -1
MAJTXPCAP3 = is_positive(NMAJPCAP3) * 10
MAJTXTAXA3 = is_positive(NMAJTAXA3) * 10
NMAJ1 = max(0, MAJO1728IR + round(BTO * COPETO / 100) + saisies.get('FLAG_TRTARDIF', 0) * MAJOIRTARDIF_D1 + FLAG_TRTARDIF_F * is_positive(PROPIR_A) * MAJOIRTARDIF_P1 + 1 - is_positive(PROPIR_A) * MAJOIRTARDIF_D1 - FLAG_TRTARDIF_F * 1 - is_positive(PROPIR_A) * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOIRTARDIF_R1 + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOIRTARDIF_A1)
NMAJ3 = max(0, MAJO1758AIR + round(BTO * COPETO / 100) * is_positive(is_zero(saisies.get('CMAJ', 0) - 10) + is_zero(saisies.get('CMAJ', 0) - 17)) + saisies.get('FLAG_TRTARDIF', 0) * MAJOIR17_2TARDIF_D + FLAG_TRTARDIF_F * is_positive(PROPIR_A) * MAJOIR17_2TARDIF_P + 1 - is_positive(PROPIR_A) * MAJOIR17_2TARDIF_D - FLAG_TRTARDIF_F * 1 - is_positive(PROPIR_A) * is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOIR17_2TARDIF_R + 1 - is_positive(saisies.get('FLAG_RECTIF', 0)) * MAJOIR17_2TARDIF_A)
VAR9YIIR = round(saisies.get('ACODELAISINR', 0) * BINRIR / BINRIR + BINRPS)
VAR9YIPS = max(0, saisies.get('ACODELAISINR', 0) - VAR9YIIR)
B1507MAJO1 = IRNIN * is_positive(NMAJ1) + TAXASSUR * is_positive(NMAJTAXA1) + IPCAPTAXT * is_positive(NMAJPCAP1) + TAXLOY * is_positive(NMAJLOY1) + IHAUTREVT * is_positive(NMAJCHR1)
B1507MAJO3 = IRNIN * is_positive(NMAJ3) + TAXASSUR * is_positive(NMAJTAXA3) + IPCAPTAXT * is_positive(NMAJPCAP3) + TAXLOY * is_positive(NMAJLOY3) + IHAUTREVT * is_positive(NMAJCHR3)
CS9YP = is_positive(RDSN + PRS + CVNSALC + CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * round(VAR9YIPS * CSG - saisies.get('CSGIM', 0) / BINRPS) + 1 - is_positive(RDSN + PRS + CVNSALC + CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * VAR9YIPS
CSBASE_INR = max(0, CSG - saisies.get('CSGIM', 0) - CS9YP)
IR9YI = round(VAR9YIIR * max(0, IRN - saisies.get('IRANT', 0)) / BINRIR)
IRNIN_INR = max(0, IRN - saisies.get('IRANT', 0) - IR9YI) * is_positive(IRN - saisies.get('IRANT', 0))
LIG_172810 = TYPE2 * is_positive(NMAJ1)
LIG_NMAJ1 = TYPE2 * is_positive(NMAJ1)
LIG_NMAJ3 = TYPE2 * is_positive(NMAJ3)
MAJOTOT28IR = NMAJ1 + NMAJTAXA1 + NMAJPCAP1 + NMAJLOY1 + NMAJCHR1
MAJTX1 = 1 - is_positive(saisies.get('V_NBCOD1728', 0)) * 1 - is_positive(saisies.get('CMAJ', 0)) * is_positive(NMAJ1 + NMAJTAXA1 + NMAJPCAP1 + NMAJLOY1 + NMAJCHR1) * TXPF1728 + is_positive(saisies.get('CMAJ', 0)) * COPETO + is_positive(saisies.get('V_NBCOD1728', 0)) * -1
MAJTX3 = is_positive(NMAJ3) * 10
PTOCSG = round(max(0, CSG - saisies.get('CSGIM', 0)) * COPETO / 100) + round(max(0, CSG - saisies.get('CSGIM', 0) - CS9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RD9YP = is_positive(PRS + CVNSALC + CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * round(VAR9YIPS * RDSN - saisies.get('CRDSIM', 0) / BINRPS) + 1 - is_positive(PRS + CVNSALC + CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP)
RDBASE_INR = max(0, RDSN - saisies.get('CRDSIM', 0) - RD9YP)
RETCS = RETCS2 + round(max(0, CSG - CS9YP - saisies.get('CSGIM', 0)) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RETRD = RETRD2 + round(max(0, RDSN - RD9YP - saisies.get('CRDSIM', 0)) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
TAXA9YI = is_positive(IPCAPTAXT + TAXLOY + IHAUTREVT) * round(VAR9YIIR * max(0, TAXASSUR - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRN - saisies.get('IRANT', 0))) / BINRIR) + 1 - is_positive(IPCAPTAXT + TAXLOY + IHAUTREVT) * max(0, VAR9YIIR - IR9YI)
TAXABASE_INR = round(max(TAXASSUR - TAXA9YI + min(0, IRN - saisies.get('IRANT', 0)), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
B1507INR = IRNIN_INR + TAXABASE + PCAPBASE + LOYBASE + CHRBASE
BTOINR = max(0, IRN - IR9YI - saisies.get('IRANT', 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
CAP9YI = is_positive(TAXLOY + IHAUTREVT) * round(VAR9YIIR * max(0, IPCAPTAXT - min(IPCAPTAXT + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR)) / BINRIR) + 1 - is_positive(TAXLOY + IHAUTREVT) * max(0, VAR9YIIR - IR9YI - TAXA9YI)
LIG3 = is_positive(is_positive(saisies.get('CMAJ', 0) + 0) + positif_ou_nul(MAJTX1 - 40) + positif_ou_nul(MAJTX4 - 40) + positif_ou_nul(MAJTXPCAP1 - 40) + positif_ou_nul(MAJTXPCAP4 - 40) + positif_ou_nul(MAJTXLOY1 - 40) + positif_ou_nul(MAJTXLOY4 - 40) + positif_ou_nul(MAJTXCHR1 - 40) + positif_ou_nul(MAJTXCHR4 - 40) + positif_ou_nul(MAJTXC1 - 40) + positif_ou_nul(MAJTXC4 - 40) + positif_ou_nul(MAJTXCVN1 - 40) + positif_ou_nul(MAJTXCVN4 - 40) + positif_ou_nul(MAJTXCDIS1 - 40) + positif_ou_nul(MAJTXCDIS4 - 40) + positif_ou_nul(MAJTXGLO1 - 40) + positif_ou_nul(MAJTXGLO4 - 40) + positif_ou_nul(MAJTXRSE11 - 40) + positif_ou_nul(MAJTXRSE14 - 40) + positif_ou_nul(MAJTXRSE51 - 40) + positif_ou_nul(MAJTXRSE54 - 40) + positif_ou_nul(MAJTXRSE21 - 40) + positif_ou_nul(MAJTXRSE24 - 40) + positif_ou_nul(MAJTXRSE31 - 40) + positif_ou_nul(MAJTXRSE34 - 40) + positif_ou_nul(MAJTXRSE41 - 40) + positif_ou_nul(MAJTXRSE44 - 40) + positif_ou_nul(MAJTXTAXA4 - 40))
LOY9YI = is_positive(IHAUTREVT) * round(VAR9YIIR * max(0, TAXLOY - min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - IPCAPTAXT)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT)) / BINRIR) + 1 - is_positive(IHAUTREVT) * max(0, VAR9YIIR - IR9YI - TAXA9YI - CAP9YI)
LOYBASE_INR = round(max(TAXLOY - LOY9YI + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
MAJO1728TOT = MAJOTOT28IR + MAJOTOT28PS
PCAPBASE_INR = round(max(IPCAPTAXT - CAP9YI + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
PCSG = PTOCSG
PS9YP = is_positive(CVNSALC + CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * round(VAR9YIPS * PRS - saisies.get('PRSPROV', 0) / BINRPS) + 1 - is_positive(CVNSALC + CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP)
PSBASE_INR = max(0, PRS - saisies.get('PRSPROV', 0) - PS9YP)
PTOIR = round(BTO * COPETO / 100) + round(BTO * COPETO / 100) * is_positive(is_zero(saisies.get('CMAJ', 0) - 10) + is_zero(saisies.get('CMAJ', 0) - 17)) + round(BTOINR * TXINT / 100)
PTOPRS = round(max(0, PRS - saisies.get('PRSPROV', 0)) * COPETO / 100) + round(max(0, PRS - saisies.get('PRSPROV', 0) - PS9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
PTORDS = round(max(0, RDSN - saisies.get('CRDSIM', 0)) * COPETO / 100) + round(max(0, RDSN - saisies.get('CRDSIM', 0) - RD9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
PTOTAXA = round(max(0, TAXASSUR - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRN - saisies.get('IRANT', 0))) * COPETO / 100) + round(max(0, TAXASSUR - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRN - saisies.get('IRANT', 0))) * COPETO / 100) * is_positive(is_zero(saisies.get('CMAJ', 0) - 10) + is_zero(saisies.get('CMAJ', 0) - 17)) + round(max(0, TAXASSUR - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRN - saisies.get('IRANT', 0)) - TAXA9YI) * TXINT / 100)
PTOTLOY = round(max(0, TAXLOY - min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - IPCAPTAXT)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT)) * COPETO / 100) + round(max(0, TAXLOY - min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - IPCAPTAXT)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT)) * COPETO / 100) * is_positive(is_zero(saisies.get('CMAJ', 0) - 10) + is_zero(saisies.get('CMAJ', 0) - 17)) + round(max(0, TAXLOY - min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - IPCAPTAXT)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT) - LOY9YI) * TXINT / 100)
PTOTPCAP = round(max(0, IPCAPTAXT - min(IPCAPTAXT + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR)) * COPETO / 100) + round(max(0, IPCAPTAXT - min(IPCAPTAXT + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR)) * COPETO / 100) * is_positive(is_zero(saisies.get('CMAJ', 0) - 10) + is_zero(saisies.get('CMAJ', 0) - 17)) + round(max(0, IPCAPTAXT - min(IPCAPTAXT + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR) - CAP9YI) * TXINT / 100)
RETIR = RETIR2 + round(BTOINR * TXINT / 100)
RETLOY = RETLOY2 + round(max(0, TAXLOY - LOY9YI - min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - IPCAPTAXT)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT)) * TXINT / 100)
RETPCAP = RETPCAP2 + round(max(0, IPCAPTAXT - CAP9YI - min(IPCAPTAXT + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR)) + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR)) * TXINT / 100)
RETPS = RETPS2 + round(max(0, PRS - PS9YP - saisies.get('PRSPROV', 0)) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RETTAXA = RETTAXA2 + round(max(0, TAXASSUR - TAXA9YI - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRN - saisies.get('IRANT', 0))) * TXINT / 100)
CHR9YI = max(0, VAR9YIIR - IR9YI - TAXA9YI - CAP9YI - LOY9YI)
CHRBASE_INR = round(max(IHAUTREVT - CHR9YI + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT + TAXLOY), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
CSNET = max(0, CSGC + PCSG - CICSG - saisies.get('CSGIM', 0))
CSNETEMP = CSNET * INDSEUIL61
CVN9YP = is_positive(CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * round(VAR9YIPS * CVNSALC - saisies.get('COD8YT', 0) / BINRPS) + 1 - is_positive(CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP)
CVNBASE_INR = max(0, CVNSALC - saisies.get('COD8YT', 0) - CVN9YP)
IND_COLC = is_positive(BCSG) * is_positive(PCSG + CICSG + saisies.get('CSGIM', 0)) * 1 - INDCTX
LIG106 = is_positive(RETIR)
LIGINRLOY = is_positive(RETLOY)
LIGINRPCAP = is_positive(RETPCAP)
LIGINRTAX = is_positive(RETTAXA)
MONTNETCS = PRS + PTOPRS * 1 - is_positive(saisies.get('APPLI_COLBERT', 0))
NAPCSAVIM = CSG + PCSG
PIR = PTOIR * positif_ou_nul(IAMD1 - SEUIL_61)
PIRD = PIR * is_positive(5 - saisies.get('V_IND_TRAIT', 0)) + 1 - is_positive(5 - saisies.get('V_IND_TRAIT', 0)) * positif_ou_nul(IRN + PIR - SEUIL_12) + 1 - is_positive(IRN + PIR) - PIR_A * positif_ou_nul(PIR_A - SEUIL_12) + 1 - is_positive(PIR_A)
PPCAP = PTOTPCAP
PPRS = PTOPRS
PRDS = PTORDS
PRSNET = max(0, PRSC + PPRS - CIPRS - saisies.get('PRSPROV', 0))
PSNETEMP = PRSNET * INDSEUIL61
PTAXA = PTOTAXA
PTAXLOY = PTOTLOY
PTOCVN = round(max(0, CVNSALC - saisies.get('COD8YT', 0)) * COPETO / 100) + round(max(0, CVNSALC - saisies.get('COD8YT', 0) - CVN9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
PTOT = PIR
PTOTCHR = round(max(0, IHAUTREVT + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT + TAXLOY)) * COPETO / 100) + round(max(0, IHAUTREVT + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT + TAXLOY)) * COPETO / 100) * is_positive(is_zero(saisies.get('CMAJ', 0) - 10) + is_zero(saisies.get('CMAJ', 0) - 17)) + round(max(0, IHAUTREVT + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT + TAXLOY) - CHR9YI) * TXINT / 100)
PTOTD = PIRD
RDNET = max(0, RDSC + PRDS - CIRDS - saisies.get('CRDSIM', 0))
RDNETEMP = RDNET * INDSEUIL61
RETCVN = RETCVN2 + round(max(0, CVNSALC - CVN9YP - saisies.get('COD8YT', 0)) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RETHAUTREV = RETCHR2 + round(max(0, IHAUTREVT - CHR9YI + min(0, IRN - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT + TAXLOY)) * TXINT / 100)
RPEN = PTOTD * is_positive(APPLI_ILIAD + saisies.get('APPLI_COLBERT', 0))
ZIG_INT = is_positive(RETCS + RETRD + RETPS + RETCVN) * LIG2
CDIS9YP = is_positive(CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * round(VAR9YIPS * CDIS - saisies.get('CDISPROV', 0) / BINRPS) + 1 - is_positive(CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP)
CDISBASE_INR = max(0, CDIS - saisies.get('CDISPROV', 0) - CDIS9YP)
GGIDRS = IDOM11 + ITP + REI + PIR
GLO9YP = is_positive(RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * round(VAR9YIPS * CGLOA - saisies.get('COD8YL', 0) / BINRPS) + 1 - is_positive(RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP)
GLOBASE_INR = max(0, CGLOA - saisies.get('COD8YL', 0) - GLO9YP)
IAVIM2 = IRB + PTOT
IAVIMBIS = IRB + PIR
IAVIMO = max(0, max(ID11 - ADO1, IMI) - RED) + ITP + REI + PIR * V_CR2
INCTOTIR = RETIR + RETTAXA + RETPCAP + RETLOY + RETHAUTREV
IND_COLP = is_positive(BPRS) * is_positive(PPRS + CIPRS + saisies.get('PRSPROV', 0)) * 1 - INDCTX
IND_COLR = is_positive(BRDS) * is_positive(PRDS + CIRDS + saisies.get('CRDSIM', 0)) * 1 - INDCTX
IRD = IRN * is_positive(5 - saisies.get('V_IND_TRAIT', 0)) + 1 - is_positive(5 - saisies.get('V_IND_TRAIT', 0)) * positif_ou_nul(IRN + PIR - SEUIL_12) + 1 - is_positive(IRN + PIR)
IRNET2 = IAR + PIR - saisies.get('IRANT', 0) * 1 - INDTXMIN * 1 - INDTXMOY + min(0, IAR + PIR - saisies.get('IRANT', 0)) * INDTXMIN + INDTXMOY + max(0, IAR + PIR - saisies.get('IRANT', 0)) * INDTXMIN * is_positive(IAVIMBIS - SEUIL_TXMIN) + INDTXMOY * is_positive(IAVIMO - SEUIL_TXMIN)
IRPROV = min(saisies.get('IRANT', 0), IAR + PIR) * is_positive(saisies.get('IRANT', 0))
LIG2141 = is_zero(IAN + RPEN - IAVT + TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - saisies.get('IRANT', 0)) * is_positive(saisies.get('IRANT', 0)) * 1 - is_positive(LIG2501) * is_zero(saisies.get('V_IND_TRAIT', 0) - 4) * 1 - is_positive(saisies.get('NRINET', 0) + 0)
LIGINRHAUT = is_positive(RETHAUTREV)
NAPI = IRD + PIRD - saisies.get('IRANT', 0) + TAXASSUR + IPCAPTAXT + IHAUTREVT + TAXLOY + RASAR * V_CR2
NAPPSAVIM = PRS + PPRS
NAPRDAVIM = RDSN + PRDS
PCVN = PTOCVN
PHAUTREV = PTOTCHR
PTOCDIS = round(max(0, CDIS - saisies.get('CDISPROV', 0)) * COPETO / 100) + round(max(0, CDISC - saisies.get('CDISPROV', 0) - CDIS9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
PTOGLOA = round(max(0, CGLOA - saisies.get('COD8YL', 0)) * COPETO / 100) + round(max(0, CGLOA - saisies.get('COD8YL', 0) - GLO9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RETCDIS = RETCDIS2 + round(max(0, CDIS - CDIS9YP - saisies.get('CDISPROV', 0)) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RETGLOA = RETGLOA2 + round(max(0, CGLOA - GLO9YP - saisies.get('COD8YL', 0)) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RSE19YP = is_positive(RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * round(VAR9YIPS * RSE1 - saisies.get('CSPROVYD', 0) / BINRPS) + 1 - is_positive(RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP - GLO9YP)
RSE1BASE_INR = max(0, RSE1N - saisies.get('CSPROVYD', 0) - RSE19YP)
RSE29YP = is_positive(RSE3 + RSE4 + RSE5 + BREGV) * round(VAR9YIPS * RSE2 - CSPROVRSE2 / BINRPS) + 1 - is_positive(RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP - GLO9YP - RSE19YP)
RSE2BASE_INR = max(0, max(0, RSE8TV - CIRSE8TV - saisies.get('CSPROVYF', 0)) + max(0, RSE8SA - CIRSE8SA - saisies.get('CSPROVYN', 0)) - RSE29YP)
RSE39YP = is_positive(RSE4 + RSE5 + BREGV) * round(VAR9YIPS * RSE3 - saisies.get('CSPROVYG', 0) / BINRPS) + 1 - is_positive(RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP - GLO9YP - RSE19YP - RSE29YP)
RSE3BASE_INR = max(0, RSE3N - saisies.get('CSPROVYG', 0) - RSE39YP)
RSE49YP = is_positive(RSE5 + BREGV) * round(VAR9YIPS * RSE4 - CSPROVRSE4 / BINRPS) + 1 - is_positive(RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP - GLO9YP - RSE19YP - RSE29YP - RSE39YP)
RSE4BASE_INR = max(0, max(0, RSE8TX - CIRSE8TX - saisies.get('CSPROVYH', 0)) + max(0, RSE8SB - CIRSE8SB - saisies.get('CSPROVYP', 0)) - RSE49YP)
RSE59YP = is_positive(BREGV) * round(VAR9YIPS * RSE5 - saisies.get('CSPROVYE', 0) / BINRPS) + 1 - is_positive(BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP - GLO9YP - RSE19YP - RSE29YP - RSE39YP - RSE49YP)
RSE5BASE_INR = max(0, RSE5N - saisies.get('CSPROVYE', 0) - RSE59YP)
TAXANEG = min(0, TAXASSUR + PTAXA - min(TAXASSUR + PTAXA + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRNET2))
TAXNET = is_positive(TAXASSUR) * max(0, TAXASSUR + PTAXA - min(TAXASSUR + PTAXA + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRNET2))
TOTPENIR = PIR + PTAXA + PTAXLOY + PHAUTREV + PPCAP
VARIR61BIS = IBM23 + TAXASSUR + IPCAPTAXT + TAXLOY + IHAUTREVT + TOTPENIR + 0
ZIGINT = is_positive(RETCDIS) * LIG2
ZIGLOA = is_positive(RETGLOA) * LIG2
ZIG_PENAMONT = is_positive(PCSG + PRDS + PPRS + PCVN) * LIG2
ZIG_PENATAUX = ZIG_PENAMONT * is_positive(NMAJC1 + NMAJR1 + NMAJP1 + NMAJCVN1) * LIG2
ZIG_PENATX4 = ZIG_PENAMONT * is_positive(NMAJC4 + NMAJR4 + NMAJP4 + NMAJCVN4) * LIG2
CVNNET = max(0, CVNSALC + PCVN - saisies.get('COD8YT', 0))
CVNNETEMP = CVNNET * INDSEUIL61
IAVIM = IRB + PTOT + TAXASSUR + PTAXA + IPCAPTAXTOT + PPCAP + TAXLOY + PTAXLOY + CHRAPRES + PHAUTREV
INDCOLVN = is_positive(BCVNSAL) * is_positive(PCVN + saisies.get('COD8YT', 0)) * 1 - INDCTX
INDT = is_positive(IND_COLC + IND_COLR + IND_COLP + IND_COLS + IND_CTXC + IND_CTXR + IND_CTXP + IND_CTXS) * INDTRAIT
IRESTITIR = abs(min(0, IRN + PIR + saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR + TAXASSUR + PTAXA - min(TAXASSUR + PTAXA + 0, max(0, INE - IRB + AVFISCOPTER)) + IPCAPTAXT + PPCAP - min(IPCAPTAXT + PPCAP, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA)) + TAXLOY + PTAXLOY - min(TAXLOY + PTAXLOY, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA - IPCAPTAXT - PPCAP)) + IHAUTREVT + PHAUTREV - min(IHAUTREVT + PHAUTREV, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA - IPCAPTAXT - PPCAP - TAXLOY - PTAXLOY))))
NAPCVNAVIM = CVNSALC + PCVN
PCAPNEG = min(0, IPCAPTAXT + PPCAP - min(IPCAPTAXT + PPCAP, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA)) + min(0, TAXANEG))
PCAPTAXNET = is_positive(IPCAPTAXT) * max(0, IPCAPTAXT + PPCAP - min(IPCAPTAXT + PPCAP, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA)) + min(0, TAXANEG))
PCDIS = PTOCDIS
PGLOA = PTOGLOA
PPEREST2A = is_positive(IRE) * is_positive(IRESTITIR) * max(0, min(PPETOTX - PPERSA, IRESTITIR))
PTORSE1 = round(max(0, RSE1 - CIRSE1 - saisies.get('CSPROVYD', 0)) * COPETO / 100) + round(max(0, RSE1 - CIRSE1 - saisies.get('CSPROVYD', 0) - RSE19YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
PTORSE2 = round(max(0, RSE2 - CIRSE2 - CSPROVRSE2) * COPETO / 100) + round(max(0, RSE2 - CIRSE2 - CSPROVRSE2 - RSE29YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
PTORSE3 = round(max(0, RSE3 - CIRSE3 - saisies.get('CSPROVYG', 0)) * COPETO / 100) + round(max(0, RSE3 - CIRSE3 - saisies.get('CSPROVYG', 0) - RSE39YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
PTORSE4 = round(max(0, RSE4 - CIRSE4 - CSPROVRSE4) * COPETO / 100) + round(max(0, RSE4 - CIRSE4 - CSPROVRSE4 - RSE49YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
PTORSE5 = round(max(0, RSE5 - CIRSE5 - saisies.get('CSPROVYE', 0)) * COPETO / 100) + round(max(0, RSE5 - CIRSE5 - saisies.get('CSPROVYE', 0) - RSE59YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RECUMIR = is_positive(is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * is_zero(2 - saisies.get('V_REGCO', 0))) * IRESTITIR + 1 - is_positive(is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * is_zero(2 - saisies.get('V_REGCO', 0))) * IRESTITIR
REGV9YP = max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP - GLO9YP - RSE19YP - RSE29YP - RSE39YP - RSE49YP - RSE59YP)
REGVBASE_INR = max(0, BREGV - REGV9YP)
REST = is_positive(IRE) * is_positive(IRESTITIR)
RETREGV = RETREGV2 + round(max(0, BREGV - REGV9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RETRSE1 = RETRSE12 + round(max(0, RSE1N - RSE19YP - saisies.get('CSPROVYD', 0)) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RETRSE2 = RETRSE22 + round(max(0, max(0, RSE8TV - CIRSE8TV - saisies.get('CSPROVYF', 0)) + max(0, RSE8SA - CIRSE8SA - saisies.get('CSPROVYN', 0)) - RSE29YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RETRSE3 = RETRSE32 + round(max(0, RSE3N - RSE39YP - saisies.get('CSPROVYG', 0)) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RETRSE4 = RETRSE42 + round(max(0, max(0, RSE8TX - CIRSE8TX - saisies.get('CSPROVYH', 0)) + max(0, RSE8SB - CIRSE8SB - saisies.get('CSPROVYP', 0)) - RSE49YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RETRSE5 = RETRSE52 + round(max(0, RSE5N - RSE59YP - saisies.get('CSPROVYE', 0)) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RETRSETOT = RETRSE1 + RETRSE2 + RETRSE3 + RETRSE4 + RETRSE5
ROFREST = is_positive(REST) * max(0, min(CIFORET, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN))
SALREST = is_positive(REST) * max(0, min(CIADCRE, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET))
SYNREST = is_positive(REST) * max(0, min(CISYND, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD))
TAUREST = is_positive(REST) * max(0, min(saisies.get('CRERESTAU', 0), IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP))
TAXANET = is_zero(saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR * V_CR2 + 0) * TAXNET + is_positive(saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR * V_CR2 + 0) * positif_ou_nul(IAMD1 - SEUIL_61) * TAXNET + 1 - positif_ou_nul(IAMD1 - SEUIL_61) * 0
TECREST = is_positive(REST) * max(0, min(CITEC, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - saisies.get('IPELUS', 0)))
ZIGINT1 = is_positive(RETRSE1) * LIG2
ZIGINT2 = is_positive(RETRSE2) * LIG2
ZIGINT3 = is_positive(RETRSE3) * LIG2
ZIGINT4 = is_positive(RETRSE4) * LIG2
ZIGINT5 = is_positive(RETRSE5) * LIG2
ZIGINTREGV = is_positive(RETREGV) * LIG2
ZIGNONR30 = is_positive(ZIG_PENATX4) * is_positive(1 - is_positive(saisies.get('R1649', 0) + saisies.get('PREREV', 0))) * LIG2
ZIGPENACDIS = is_positive(PCDIS) * is_positive(NMAJCDIS1) * LIG2
ZIGPENACDIS4 = is_positive(PCDIS) * is_positive(NMAJCDIS4) * LIG2
ZIGPENAGLO1 = is_positive(PGLOA) * is_positive(NMAJGLO1) * LIG2
ZIGPENAGLO4 = is_positive(PGLOA) * is_positive(NMAJGLO4) * LIG2
ZIGR30 = is_positive(ZIG_PENATX4) * is_positive(saisies.get('R1649', 0) + saisies.get('PREREV', 0)) * LIG2
ZIG_PEN17281 = ZIG_PENAMONT * is_positive(NMAJC1 + NMAJR1 + NMAJP1 + NMAJCVN1) * LIG2
_2CKREST = is_positive(REST) * max(0, min(CI2CK, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - saisies.get('IPELUS', 0) - CITEC - CIDEVDUR - CIGE - I2DH))
AGREDTARDIF = is_positive(RETIR + RETTAXA + RETPCAP + RETLOY + RETHAUTREV + RETCS + RETRD + RETPS + RETCVN + RETCDIS + RETGLOA + RETRSE1 + RETRSE2 + RETRSE3 + RETRSE4 + RETRSE5 + RETREGV + RETARPRIM + saisies.get('FLAG_RETARD', 0) + 0)
AGRREST = is_positive(REST) * max(0, min(CICONGAGRI, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0)))
AIDREST = is_positive(REST) * max(0, min(CIGE, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - saisies.get('IPELUS', 0) - CITEC - CIDEVDUR))
APPREST = is_positive(REST) * max(0, min(saisies.get('CREAPP', 0), IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0)))
ARTREST = is_positive(REST) * max(0, min(saisies.get('CREARTS', 0), IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI))
ASSREST = is_positive(REST) * max(0, min(I2DH, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - saisies.get('IPELUS', 0) - CITEC - CIDEVDUR - CIGE))
BAIREST = is_positive(REST) * max(0, min(CICA, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD))
BIOREST = is_positive(REST) * max(0, min(saisies.get('CREAGRIBIO', 0), IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0)))
CDISNET = max(0, CDISC + PCDIS - saisies.get('CDISPROV', 0))
CDISNETEMP = CDISNET * INDSEUIL61
CGLOANET = max(0, CGLOA + PGLOA - saisies.get('COD8YL', 0))
CORREST = is_positive(REST) * max(0, min(saisies.get('CICORSENOW', 0), IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - saisies.get('IPELUS', 0) - CITEC - CIDEVDUR - CIGE - I2DH - CI2CK - saisies.get('COD8TL', 0) - CIDIREPARGNE - saisies.get('IPRECH', 0) - CIEXCEDENT))
DEPREST = is_positive(REST) * max(0, min(CIDEVDUR, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - saisies.get('IPELUS', 0) - CITEC))
ELUREST = is_positive(REST) * max(0, min(saisies.get('IPELUS', 0), IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA))
EMPREST = is_positive(REST) * max(0, min(saisies.get('COD8TL', 0), IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - saisies.get('IPELUS', 0) - CITEC - CIDEVDUR - CIGE - I2DH - CI2CK))
EPAREST = is_positive(REST) * max(0, min(CIDIREPARGNE, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - saisies.get('IPELUS', 0) - CITEC - CIDEVDUR - CIGE - I2DH - CI2CK - saisies.get('COD8TL', 0)))
EXCREST = is_positive(REST) * max(0, min(CIEXCEDENT, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - saisies.get('IPELUS', 0) - CITEC - CIDEVDUR - CIGE - I2DH - CI2CK - saisies.get('COD8TL', 0) - CIDIREPARGNE - saisies.get('IPRECH', 0)))
FAMREST = is_positive(REST) * max(0, min(saisies.get('CREFAM', 0), IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0)))
FORREST = is_positive(REST) * max(0, min(saisies.get('CREFORMCHENT', 0), IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0)))
GARREST = is_positive(REST) * max(0, min(CIGARD, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND))
GLONETEMP = CGLOANET * INDSEUIL61
HABREST = is_positive(REST) * max(0, min(CIHABPRIN, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0)))
INCTOTCS = RETCS + RETRD + RETPS + RETCVN + RETREGV + RETCDIS + RETGLOA + RETRSE1 + RETRSE2 + RETRSE3 + RETRSE4 + RETRSE5
INDCOL = is_positive(IND_COLC + IND_COLR + IND_COLP + INDCOLVN)
INDGLOA = is_positive(BGLOA) * is_positive(PGLOA + saisies.get('COD8YL', 0)) * 1 - INDCTX
IND_COLD = is_positive(BCDIS) * is_positive(PCDIS + saisies.get('CDISPROV', 0)) * 1 - INDCTX
INTREST = is_positive(REST) * max(0, min(saisies.get('CREINTERESSE', 0), IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0)))
IRESTIR = max(0, IRESTITIR - RECUMBISIR)
LIBREST = is_positive(REST) * max(0, min(saisies.get('AUTOVERSLIB', 0), IRESTITIR - PPETOTX - PPERSA))
LIGTAXANT = APPLI_ILIAD * 1 - is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_positive(saisies.get('V_TAXANT', 0) + LIGTAXANET * is_positive(TAXANET)) * 1 - is_positive(LIG2051) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
LOIREST = is_positive(REST) * max(0, min(CILOYIMP, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0)))
LOYELEVNEG = min(0, TAXLOY + PTAXLOY - min(TAXLOY + PTAXLOY, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA - IPCAPTAXT - PPCAP)) + min(0, PCAPNEG))
LOYELEVNET = is_positive(saisies.get('LOYELEV', 0)) * max(0, TAXLOY + PTAXLOY - min(TAXLOY + PTAXLOY, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA - IPCAPTAXT - PPCAP)) + min(0, PCAPNEG))
NAPCDISAVIM = CDIS + PCDIS
NAPGLOAVIM = CGLOA + PGLOA - saisies.get('COD8YL', 0)
PCAPNET = is_zero(saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR * V_CR2 + 0) * PCAPTAXNET + is_positive(saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR * V_CR2 + 0) * positif_ou_nul(IAMD1 - SEUIL_61) * PCAPTAXNET + 1 - positif_ou_nul(IAMD1 - SEUIL_61) * 0
PPEIMP2A = positif_ou_nul(PPEREST2A) * PPETOTX - PPERSA - PPEREST2A
PREREST = is_positive(REST) * max(0, min(CIPRETUD, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE))
PROREST = is_positive(REST) * max(0, min(saisies.get('CREPROSP', 0), IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER))
PRSE1 = PTORSE1
PRSE2 = PTORSE2
PRSE3 = PTORSE3
PRSE4 = PTORSE4
PRSE5 = PTORSE5
PRSETOT = PRSE1 + PRSE2 + PRSE3 + PRSE4 + PRSE5
PSIREST = is_positive(REST) * max(0, min(CRESINTER, IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0)))
PTOREGV = round(BREGV * COPETO / 100) + round(max(0, BREGV - REGV9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RECREST = is_positive(REST) * max(0, min(saisies.get('IPRECH', 0), IRESTITIR - PPETOTX - PPERSA - saisies.get('AUTOVERSLIB', 0) - CILOYIMP - saisies.get('CRERESTAU', 0) - CICONGAGRI - saisies.get('CREARTS', 0) - saisies.get('CREINTERESSE', 0) - saisies.get('CREFORMCHENT', 0) - CRESINTER - saisies.get('CREPROSP', 0) - saisies.get('CREAGRIBIO', 0) - saisies.get('CREAPP', 0) - saisies.get('CREFAM', 0) - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - saisies.get('IPELUS', 0) - CITEC - CIDEVDUR - CIGE - I2DH - CI2CK - saisies.get('COD8TL', 0) - CIDIREPARGNE))
RETIRCSTOT = INCTOTIR + INCTOTCS
ROFIMP = positif_ou_nul(ROFREST) * CIFORET - ROFREST
RSE1NET = max(0, RSE1 + PRSE1 - CIRSE1 - saisies.get('CSPROVYD', 0))
RSE1NETEMP = RSE1NET * INDSEUIL61
RSE2NET = max(0, RSE8TV - CIRSE8TV - saisies.get('CSPROVYF', 0)) + max(0, RSE8SA - CIRSE8SA - saisies.get('CSPROVYN', 0)) + PRSE2
RSE2NETEMP = RSE2NET * INDSEUIL61
RSE3NET = max(0, RSE3 + PRSE3 - CIRSE3 - saisies.get('CSPROVYG', 0))
RSE3NETEMP = RSE3NET * INDSEUIL61
RSE4NET = max(0, RSE8TX - CIRSE8TX - saisies.get('CSPROVYH', 0)) + max(0, RSE8SB - CIRSE8SB - saisies.get('CSPROVYP', 0)) + PRSE4
RSE4NETEMP = RSE4NET * INDSEUIL61
RSE5NET = max(0, RSE5 + PRSE5 - CIRSE5 - saisies.get('CSPROVYE', 0))
RSE5NETEMP = RSE5NET * INDSEUIL61
RSENETTOT = RSE1NET + RSE2NET + RSE3NET + RSE4NET + RSE5NET
SALIMP = positif_ou_nul(SALREST) * CIADCRE - SALREST
SYNIMP = positif_ou_nul(SYNREST) * CISYND - SYNREST
TAUIMP = positif_ou_nul(TAUREST) * saisies.get('CRERESTAU', 0) - TAUREST
TAXACUM = 1 - is_positive(IRESTITIR) * is_positive(is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * is_zero(2 - saisies.get('V_REGCO', 0))) * 0 + 1 - is_positive(is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * is_zero(2 - saisies.get('V_REGCO', 0))) * TAXANET
TAXLOYNET = is_zero(saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR * V_CR2 + 0) * LOYELEVNET + is_positive(saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR * V_CR2 + 0) * positif_ou_nul(IAMD1 - SEUIL_61) * LOYELEVNET + 1 - positif_ou_nul(IAMD1 - SEUIL_61) * 0
TECIMP = positif_ou_nul(TECREST) * CITEC - TECREST
ZIGPENARSE1 = is_positive(PRSE1) * is_positive(NMAJRSE11) * LIG2
ZIGPENARSE14 = is_positive(PRSE1) * is_positive(NMAJRSE14) * LIG2
ZIGPENARSE2 = is_positive(PRSE2) * is_positive(NMAJRSE21) * LIG2
ZIGPENARSE24 = is_positive(PRSE2) * is_positive(NMAJRSE24) * LIG2
ZIGPENARSE3 = is_positive(PRSE3) * is_positive(NMAJRSE31) * LIG2
ZIGPENARSE34 = is_positive(PRSE3) * is_positive(NMAJRSE34) * LIG2
ZIGPENARSE4 = is_positive(PRSE4) * is_positive(NMAJRSE41) * LIG2
ZIGPENARSE44 = is_positive(PRSE4) * is_positive(NMAJRSE44) * LIG2
ZIGPENARSE5 = is_positive(PRSE5) * is_positive(NMAJRSE51) * LIG2
ZIGPENARSE54 = is_positive(PRSE5) * is_positive(NMAJRSE54) * LIG2
_2CKIMP = positif_ou_nul(_2CKREST) * CI2CK - _2CKREST
AGRIMP = positif_ou_nul(AGRREST) * CICONGAGRI - AGRREST
AIDIMP = positif_ou_nul(AIDREST) * CIGE - AIDREST
APPIMP = positif_ou_nul(APPREST) * saisies.get('CREAPP', 0) - APPREST
ARTIMP = positif_ou_nul(ARTREST) * saisies.get('CREARTS', 0) - ARTREST
ASSIMP = positif_ou_nul(ASSREST) * I2DH - ASSREST
BAIIMP = positif_ou_nul(BAIREST) * CICA - BAIREST
BIOIMP = positif_ou_nul(BIOREST) * saisies.get('CREAGRIBIO', 0) - BIOREST
CHRNEG = min(0, IHAUTREVT + PHAUTREV + min(0, LOYELEVNEG))
CHRNET = is_positive(IHAUTREVT) * max(0, IHAUTREVT + PHAUTREV + min(0, LOYELEVNEG))
CORIMP = positif_ou_nul(CORREST) * saisies.get('CICORSENOW', 0) - CORREST
DEPIMP = positif_ou_nul(DEPREST) * CIDEVDUR - DEPREST
ELUIMP = positif_ou_nul(ELUREST) * saisies.get('IPELUS', 0) - ELUREST
EMPIMP = positif_ou_nul(EMPREST) * saisies.get('COD8TL', 0) - EMPREST
EPAIMP = positif_ou_nul(EPAREST) * CIDIREPARGNE - EPAREST
EXCIMP = positif_ou_nul(EXCREST) * CIEXCEDENT - EXCREST
FAMIMP = positif_ou_nul(FAMREST) * saisies.get('CREFAM', 0) - FAMREST
FORIMP = positif_ou_nul(FORREST) * saisies.get('CREFORMCHENT', 0) - FORREST
GARIMP = positif_ou_nul(GARREST) * CIGARD - GARREST
HABIMP = positif_ou_nul(HABREST) * CIHABPRIN - HABREST
HAUTREVNET = is_zero(saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR * V_CR2 + 0) * CHRNET + is_positive(saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR * V_CR2 + 0) * positif_ou_nul(IAMD1 - SEUIL_61) * CHRNET + 1 - positif_ou_nul(IAMD1 - SEUIL_61) * 0
INDRSE1 = is_positive(BRSE1) * is_positive(PRSE1 + CIRSE1 + saisies.get('CSPROVYD', 0)) * 1 - INDCTX
INDRSE2 = is_positive(BRSE2) * is_positive(PRSE2 + CIRSE2 + saisies.get('CSPROVYF', 0) + saisies.get('CSPROVYN', 0)) * 1 - INDCTX
INDRSE3 = is_positive(BRSE3) * is_positive(PRSE3 + CIRSE3 + saisies.get('CSPROVYG', 0)) * 1 - INDCTX
INDRSE4 = is_positive(BRSE4) * is_positive(PRSE4 + CIRSE4 + saisies.get('CSPROVYH', 0) + saisies.get('CSPROVYP', 0)) * 1 - INDCTX
INDRSE5 = is_positive(BRSE5) * is_positive(PRSE5 + CIRSE5 + saisies.get('CSPROVYE', 0)) * 1 - INDCTX
INDTD = is_positive(IND_COLD + IND_CTXD) * INDTRAIT
INTIMP = positif_ou_nul(INTREST) * saisies.get('CREINTERESSE', 0) - INTREST
IRNETTER = max(0, IRNET2 + TAXASSUR + PTAXA - min(TAXASSUR + PTAXA + 0, max(0, INE - IRB + AVFISCOPTER)) - max(0, TAXASSUR + PTAXA - min(TAXASSUR + PTAXA + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRNET2)) + IPCAPTAXT + PPCAP - min(IPCAPTAXT + PPCAP, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA)) - max(0, IPCAPTAXT + PPCAP - min(IPCAPTAXT + PPCAP, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA)) + min(0, TAXANEG)) + TAXLOY + PTAXLOY - min(TAXLOY + PTAXLOY, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA - IPCAPTAXT - PPCAP)) - max(0, TAXLOY + PTAXLOY - min(TAXLOY + PTAXLOY, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA - IPCAPTAXT - PPCAP)) + min(0, PCAPNEG)) + IHAUTREVT + PHAUTREV - max(0, IHAUTREVT + PHAUTREV + min(0, LOYELEVNEG)))
LIBIMP = positif_ou_nul(LIBREST) * saisies.get('AUTOVERSLIB', 0) - LIBREST
LIGHAUTANT = APPLI_ILIAD * 1 - is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_positive(saisies.get('V_CHRANT', 0) + LIGHAUTNET * is_positive(HAUTREVNET)) * 1 - is_positive(LIG2051) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
LIGLOYANT = APPLI_ILIAD * 1 - is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_positive(saisies.get('V_TAXLOYANT', 0) + LIGLOYNET * is_positive(TAXLOYNET)) * 1 - is_positive(LIG2051) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
LIGPCAPANT = APPLI_ILIAD * 1 - is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_positive(saisies.get('V_PCAPANT', 0) + LIGPCAPNET * is_positive(PCAPNET)) * 1 - is_positive(LIG2051) * TYPE2 * 1 - saisies.get('APPLI_OCEANS', 0)
LOIIMP = positif_ou_nul(LOIREST) * CILOYIMP - LOIREST
NAPRSE1AVIM = RSE1N + PRSE1
NAPRSE2AVIM = RSE2N + PRSE2
NAPRSE3AVIM = RSE3N + PRSE3
NAPRSE4AVIM = RSE4N + PRSE4
NAPRSE5AVIM = RSE5N + PRSE5
PCAPCUM = 1 - is_positive(IRESTITIR) * is_positive(is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * is_zero(2 - saisies.get('V_REGCO', 0))) * 0 + 1 - is_positive(is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * is_zero(2 - saisies.get('V_REGCO', 0))) * PCAPNET
PREGV = PTOREGV
PREIMP = positif_ou_nul(PREREST) * CIPRETUD - PREREST
PROIMP = positif_ou_nul(PROREST) * saisies.get('CREPROSP', 0) - PROREST
PSIIMP = positif_ou_nul(PSIREST) * CRESINTER - PSIREST
PTOTIRCS = PIR + PTAXA + PTAXLOY + PHAUTREV + PPCAP + PPRS + PCSG + PRDS + PCDIS + PREGV + PCVN + PGLOA + PRSE1 + PRSE2 + PRSE3 + PRSE4 + PRSE5
RECIMP = positif_ou_nul(RECREST) * saisies.get('IPRECH', 0) - RECREST
REGVNET = BREGV + PREGV
TAXLOYCUM = 1 - is_positive(IRESTITIR) * is_positive(is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * is_zero(2 - saisies.get('V_REGCO', 0))) * 0 + 1 - is_positive(is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * is_zero(2 - saisies.get('V_REGCO', 0))) * TAXLOYNET
TOTCRBRUT = max(0, CSGC + PCSG - CICSG - saisies.get('CSGIM', 0) + RDSC + PRDS - CIRDS - saisies.get('CRDSIM', 0) + PRSC + PPRS - CIPRS - saisies.get('PRSPROV', 0) + CVNSALC + PCVN - saisies.get('COD8YT', 0) + BREGV + PREGV + CDISC + PCDIS - saisies.get('CDISPROV', 0) + CGLOA + PGLOA - saisies.get('COD8YL', 0) + RSE1 + PRSE1 + RSE2 + PRSE2 + RSE3 + PRSE3 + RSE4 + PRSE4 + RSE5 + PRSE5 - CIRSE1 - saisies.get('CSPROVYD', 0) - CIRSE5 - saisies.get('CSPROVYE', 0) - CIRSE2 - CSPROVRSE2 - CIRSE3 - saisies.get('CSPROVYG', 0) - CIRSE4 - CSPROVRSE4)
TOTCRNET = CSNET + RDNET + PRSNET + CVNNET + REGVNET + CDISNET + CGLOANET + RSE1NET + RSE2NET + RSE3NET + RSE4NET + RSE5NET
TOTPENCS = PPRS + PCSG + PRDS + PCVN + PREGV + PCDIS + PGLOA + PRSE1 + PRSE2 + PRSE3 + PRSE4 + PRSE5
TOTREC = positif_ou_nul(IRN + TAXANET + PIR + PCAPNET + TAXLOYNET + HAUTREVNET - SEUIL_12)
VARPS61 = CSG + RDSN + PRS + PCSG + PRDS + PPRS + CVNSALC + PCVN + CDIS + PCDIS + BREGV + PREGV + CGLOA + PGLOA + RSE1N + PRSE1 + RSE2N + PRSE2 + RSE3N + PRSE3 + RSE4N + PRSE4 + RSE5N + PRSE5 - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('COD8YT', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYN', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('CSPROVYP', 0) + 0
ZIGPENAREGV = is_positive(PREGV) * is_positive(NMAJREGV1) * LIG2
AGPENA = PTOTIRCS
CSTOT = max(0, CSG + RDSN + PRS + PCSG + PRDS + PPRS + CVNSALC + PCVN + CDIS + PCDIS + CGLOA + PGLOA + BREGV + PREGV + RSE1N + PRSE1 + RSE2N + PRSE2 + RSE3N + PRSE3 + RSE4N + PRSE4 + RSE5N + PRSE5)
HAUTREVCUM = 1 - is_positive(IRESTITIR) * is_positive(is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * is_zero(2 - saisies.get('V_REGCO', 0))) * 0 + 1 - is_positive(is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * is_zero(2 - saisies.get('V_REGCO', 0))) * HAUTREVNET
INDE1 = is_positive(INDRSE1 + INDRSE1X) * INDTRAIT
INDE2 = is_positive(INDRSE2 + INDRSE2X) * INDTRAIT
INDE3 = is_positive(INDRSE3 + INDRSE3X) * INDTRAIT
INDE4 = is_positive(INDRSE4 + INDRSE4X) * INDTRAIT
INDE5 = is_positive(INDRSE5 + INDRSE5X) * INDTRAIT
INDREGV = is_positive(BREGV) * is_positive(PREGV) * 1 - INDCTX
INDSEUIL12 = positif_ou_nul(max(0, CSNET + RDNET + PRSNET + CVNNET + REGVNET + CDISNET + CGLOANET + RSE1NET + RSE2NET + RSE3NET + RSE4NET + RSE5NET) - SEUIL_12)
IRNETBIS = max(0, IRNETTER - PIR * is_positive(SEUIL_12 - IRNETTER + PIR) * is_positive(SEUIL_12 - PIR) * positif_ou_nul(IRNETTER - SEUIL_12))
NAPCDIS = is_positive(SEUIL_61 - VARPS61) * 0 + 1 - is_positive(SEUIL_61 - VARPS61) * CDISNET
NAPCRINR = is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * max(0, CSTOT - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('COD8YT', 0)) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * max(0, CSTOT - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('COD8YT', 0))
NAPCRP = max(0, CSNET + RDNET + PRSNET + CVNNET + REGVNET + CDISNET + CGLOANET + RSE1NET + RSE2NET + RSE3NET + RSE4NET + RSE5NET)
NAPCRTOT = NAPCRP
NAPCS = is_positive(SEUIL_61 - VARPS61) * 0 + 1 - is_positive(SEUIL_61 - VARPS61) * CSNET
NAPCVN = is_positive(SEUIL_61 - VARPS61) * 0 + 1 - is_positive(SEUIL_61 - VARPS61) * CVNNET
NAPGLOA = is_positive(SEUIL_61 - VARPS61) * 0 + 1 - is_positive(SEUIL_61 - VARPS61) * CGLOANET
NAPPS = is_positive(SEUIL_61 - VARPS61) * 0 + 1 - is_positive(SEUIL_61 - VARPS61) * PRSNET
NAPRD = is_positive(SEUIL_61 - VARPS61) * 0 + 1 - is_positive(SEUIL_61 - VARPS61) * RDNET
NAPREGV = is_positive(SEUIL_61 - VARPS61) * 0 + 1 - is_positive(SEUIL_61 - VARPS61) * REGVNET
NAPREGVAVIM = BREGV + PREGV
NAPRSE1 = is_positive(SEUIL_61 - VARPS61) * 0 + 1 - is_positive(SEUIL_61 - VARPS61) * RSE1NET
NAPRSE2 = is_positive(SEUIL_61 - VARPS61) * 0 + 1 - is_positive(SEUIL_61 - VARPS61) * RSE2NET
NAPRSE3 = is_positive(SEUIL_61 - VARPS61) * 0 + 1 - is_positive(SEUIL_61 - VARPS61) * RSE3NET
NAPRSE4 = is_positive(SEUIL_61 - VARPS61) * 0 + 1 - is_positive(SEUIL_61 - VARPS61) * RSE4NET
NAPRSE5 = is_positive(SEUIL_61 - VARPS61) * 0 + 1 - is_positive(SEUIL_61 - VARPS61) * RSE5NET
PRSD = NAPPS - saisies.get('V_PSANT', 0)
RDSD = NAPRD - saisies.get('V_RDANT', 0)
REGVD = NAPREGV - saisies.get('V_REGVANT', 0)
RSEREC = is_positive(max(0, NAPRSE1 + NAPRSE2 + NAPRSE3 + NAPRSE4 + NAPRSE5) * positif_ou_nul(NAPCRP - SEUIL_12))
TOTCRBIS = (saisies.get('V_ANTCR', 0) + 0) if (saisies.get('V_ANTCR', 0) - CSTOT > 0 and saisies.get('V_ANTCR', 0) - CSTOT < SEUIL_8 and CSTOT >= SEUIL_61 or CSTOT - saisies.get('V_ANTCR', 0) > 0 and CSTOT - saisies.get('V_ANTCR', 0) < SEUIL_61 and saisies.get('V_IND_TRAIT', 0) == 4 or CSTOT - saisies.get('V_ANTCR', 0) > 0 and CSTOT - saisies.get('V_ANTCR', 0) < SEUIL_12 and saisies.get('V_IND_TRAIT', 0) > 4) else (CSTOT * positif_ou_nul(CSTOT - SEUIL_61))
CDISD = NAPCDIS - saisies.get('V_CDISANT', 0)
CGLOAD = NAPGLOA - saisies.get('V_GLOANT', 0)
CRSE1D = NAPRSE1 - saisies.get('V_RSE1ANT', 0)
CRSE2D = NAPRSE2 - saisies.get('V_RSE2ANT', 0)
CRSE3D = NAPRSE3 - saisies.get('V_RSE3ANT', 0)
CRSE4D = NAPRSE4 - saisies.get('V_RSE4ANT', 0)
CRSE5D = NAPRSE5 - saisies.get('V_RSE5ANT', 0)
CSGD = NAPCS - saisies.get('V_CSANT', 0)
CSRECINR = is_positive(NAPCRINR)
CVND = NAPCVN - saisies.get('V_CVNANT', 0)
IMPNETCDIS = NAPCDIS - saisies.get('V_CDISANT', 0)
IMPNETCS = NAPCS - saisies.get('V_CSANT', 0)
IMPNETCSAL = NAPCVN - saisies.get('V_CVNANT', 0)
IMPNETGLO = NAPGLOA - saisies.get('V_GLOANT', 0)
IMPNETPRS = NAPPS - saisies.get('V_PSANT', 0)
IMPNETRD = NAPRD - saisies.get('V_RDANT', 0)
IMPNETREGV = NAPREGV - saisies.get('V_REGVANT', 0)
IMPNETRSE = NAPRSE1 + NAPRSE2 + NAPRSE3 + NAPRSE4 + NAPRSE5 - saisies.get('V_RSE1ANT', 0) - saisies.get('V_RSE2ANT', 0) - saisies.get('V_RSE3ANT', 0) - saisies.get('V_RSE4ANT', 0) - saisies.get('V_RSE5ANT', 0)
NAPCR61 = NAPCS + NAPRD + NAPPS + NAPCVN + NAPCDIS + NAPGLOA + NAPRSE1 + NAPRSE2 + NAPRSE3 + NAPRSE4 + NAPRSE5 + NAPREGV
NAPCRP2 = max(0, NAPPS + NAPCS + NAPRD + NAPCVN + NAPCDIS + NAPGLOA + NAPRSE1 + NAPRSE2 + NAPRSE3 + NAPRSE4 + NAPRSE5)
NAPCRPAVIM = max(0, NAPPSAVIM + NAPCSAVIM + NAPRDAVIM + NAPCVNAVIM + NAPREGVAVIM + NAPCDISAVIM + NAPGLOAVIM + NAPRSE1AVIM + NAPRSE2AVIM + NAPRSE3AVIM + NAPRSE4AVIM + NAPRSE5AVIM)
NAPINI = IRN + PIR - saisies.get('IRANT', 0) * 1 - INDTXMIN * 1 - INDTXMOY + min(0, IRN + PIR - saisies.get('IRANT', 0)) * INDTXMIN + INDTXMOY + max(0, IRN + PIR - saisies.get('IRANT', 0)) * INDTXMIN * is_positive(IAVIMBIS - NAPCRPAVIM - SEUIL_61) + INDTXMOY * is_positive(IAVIMO - NAPCRPAVIM - SEUIL_61) + RASAR * V_CR2
RC1 = 1 if (NAPINI - saisies.get('V_ANTIR', 0) - IRCUM_A + RECUMBIS >= SEUIL_12) else 0
RC1INI = is_positive(NAPINI + 1 - SEUIL_12)
TOTCR = (saisies.get('CSGIM', 0) + saisies.get('CRDSIM', 0) + saisies.get('PRSPROV', 0) + saisies.get('COD8YT', 0) + saisies.get('CDISPROV', 0) + saisies.get('COD8YL', 0) + saisies.get('CSPROVYD', 0) + saisies.get('CSPROVYE', 0) + saisies.get('CSPROVYF', 0) + saisies.get('CSPROVYN', 0) + saisies.get('CSPROVYG', 0) + saisies.get('CSPROVYH', 0) + saisies.get('CSPROVYP', 0) + 0) if (TOTCRBIS - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('COD8YT', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYN', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('CSPROVYP', 0) < SEUIL_61 and saisies.get('CSGIM', 0) + saisies.get('CRDSIM', 0) + saisies.get('PRSPROV', 0) + saisies.get('COD8YT', 0) + saisies.get('CDISPROV', 0) + saisies.get('COD8YL', 0) + saisies.get('CSPROVYD', 0) + saisies.get('CSPROVYE', 0) + saisies.get('CSPROVYF', 0) + saisies.get('CSPROVYG', 0) + saisies.get('CSPROVYH', 0) + 0 > 0) else (TOTCRBIS + 0)
CRDEG = max(0, TOTCRA - TOTCR) * positif_ou_nul(TOTCRA - TOTCR - SEUIL_8)
CSREC = is_positive(NAPCRP) * positif_ou_nul(NAPCRPAVIM - SEUIL_61)
DCSGD = is_positive(CSREC + saisies.get('V_IDANT', 0)) * round(BDCSG * T_IDCSG / 100) - saisies.get('DCSGIM', 0) - DCSGIM_A * is_positive(NAPCR61)
DGLOD = is_positive(CSREC + saisies.get('V_GLOANT', 0)) * round(BGLOA - saisies.get('COD8YL', 0) / 0.075 * TX051 / 100) * 1 - is_positive(present(saisies.get('RE168', 0)) + present(saisies.get('TAX1649', 0))) * is_positive(NAPCR61)
DRSED = round(BDRSE1 * TXTQDED / 100) + round(BDRSE2 * TXTVDED / 100) + round(BDRSE3 * TXTWDED / 100) + round(BDRSE4 * TXTXDED / 100) + round(BDRSE5 * TX051 / 100) * is_positive(CSREC + saisies.get('V_IDRSEANT', 0)) * is_positive(NAPCR61)
IDCSG = (round(BDCSG * T_IDCSG / 100) - saisies.get('DCSGIM', 0) * is_positive(CSREC)) if (saisies.get('V_IND_TRAIT', 0) == 4) else (0 if (CRDEG == 0 and NAPCRP == 0) else abs(DCSGD - saisies.get('V_IDANT', 0)))
IDGLO = (round(BGLOA - saisies.get('COD8YL', 0) / 0.075 * TX051 / 100) * is_positive(CSREC)) if (saisies.get('V_IND_TRAIT', 0) == 4) else abs(DGLOD - saisies.get('V_IDGLOANT', 0))
IDRSE = (is_positive(CSREC) * round(BDRSE1 * TXTQDED / 100) + round(BDRSE2 * TXTVDED / 100) + round(BDRSE3 * TXTWDED / 100) + round(BDRSE4 * TXTXDED / 100) + round(BDRSE5 * TX051 / 100)) if (saisies.get('V_IND_TRAIT', 0) == 4) else abs(DRSED - saisies.get('V_IDRSEANT', 0))
ILITOTPSNET = max(0, NAPCR61 - TOTPENCS)
IMPNETPS = NAPCR61 - saisies.get('V_ANTCR', 0)
IND61PS = positif_ou_nul(TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYN', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('CSPROVYP', 0) - saisies.get('COD8YT', 0) - SEUIL_61) * 2 + 1 - positif_ou_nul(TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYN', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('CSPROVYP', 0) - saisies.get('COD8YT', 0) - SEUIL_61) * is_positive(TOTCR) * 1 + is_zero(TOTCR) * 3
IRESTIT = abs(min(0, IRN + PIR + saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR + TAXASSUR + PTAXA - min(TAXASSUR + PTAXA + 0, max(0, INE - IRB + AVFISCOPTER)) + IPCAPTAXT + PPCAP - min(IPCAPTAXT + PPCAP, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA)) + TAXLOY + PTAXLOY - min(TAXLOY + PTAXLOY, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA - IPCAPTAXT - PPCAP)) + IHAUTREVT + PHAUTREV - min(IHAUTREVT + PHAUTREV, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - PTAXA - IPCAPTAXT - PPCAP - TAXLOY - PTAXLOY)) + is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * max(0, TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('COD8YT', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYN', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('CSPROVYP', 0)) * positif_ou_nul(TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('COD8YT', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYN', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('CSPROVYP', 0) - SEUIL_61) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * max(0, TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('COD8YT', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYN', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('CSPROVYP', 0)) * positif_ou_nul(TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('COD8YT', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYN', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('CSPROVYP', 0) - SEUIL_61)))
IRNET = is_zero(saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR * V_CR2 + 0) * IRNETBIS * positif_ou_nul(IRB - min(max(0, IRB - AVFISCOPTER), INE)) + is_positive(saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR * V_CR2 + 0) * is_positive(IRE) + positif_ou_nul(IAVIM - SEUIL_61) * 1 - is_positive(IRE) * max(0, CHRNEG + saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR * V_CR2 + IRNETBIS * is_positive(positif_ou_nul(IAVIM - SEUIL_61)) * positif_ou_nul(IRB - min(max(0, IRB - AVFISCOPTER), INE))) * 1 - is_positive(IRESTIT) + 1 - positif_ou_nul(IAVIM - SEUIL_61) * 1 - is_positive(IRE) * max(0, CHRNEG + saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) + RASAR * V_CR2)
LIG2383 = (is_positive(RBG - saisies.get('V_8ZT', 0)) * present(saisies.get('IPSOUR', 0)) * V_CR2 * LIG2) if (IAVIM + NAPCRPAVIM <= saisies.get('IPSOUR', 0) * LIG1) else 0
LIGDCSGD = is_positive(DCSGD) * is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * INDCTX * LIG1 * LIG2
LIGIRNET = is_positive(IRNET * LIG_IRNET + LIGTAXANET + LIGPCAPNET + LIGLOYNET + LIGHAUTNET) * 1 - is_positive(saisies.get('ANNUL2042', 0) + 0)
NAPCOROLCS = max(0, NAPCR61 - saisies.get('V_ANTCR', 0))
NAPCR = is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * max(0, TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYN', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('CSPROVYP', 0) - saisies.get('COD8YT', 0)) * positif_ou_nul(TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYN', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('CSPROVYP', 0) - saisies.get('COD8YT', 0) - SEUIL_61) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * max(0, TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYN', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('CSPROVYP', 0) - saisies.get('COD8YT', 0) - TOTCRA) * positif_ou_nul(TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYN', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('CSPROVYP', 0) - saisies.get('COD8YT', 0) - TOTCRA - SEUIL_12)
NAPCRBIS = is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * max(0, TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('COD8YT', 0)) * positif_ou_nul(TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('COD8YT', 0) - SEUIL_61) + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * max(0, TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('COD8YT', 0) - TOTCRA) * positif_ou_nul(TOTCR - saisies.get('CSGIM', 0) - saisies.get('CRDSIM', 0) - saisies.get('PRSPROV', 0) - saisies.get('CDISPROV', 0) - saisies.get('COD8YL', 0) - saisies.get('CSPROVYD', 0) - saisies.get('CSPROVYE', 0) - saisies.get('CSPROVYF', 0) - saisies.get('CSPROVYG', 0) - saisies.get('CSPROVYH', 0) - saisies.get('COD8YT', 0) - TOTCRA - SEUIL_12)
NAPTIR = IRNET + TAXANET + TAXLOYNET + PCAPNET + HAUTREVNET - IRESTITIR
NATCRP = 1 if (NAPCR > 0) else (2 if (NAPCRP + 0 > 0) else (3 if (CRDEG + 0 > 0) else 0))
PCAPTOT = (PCAPNET * is_positive(PCAPCUM)) if (saisies.get('APPLI_COLBERT', 0) == 0 and IRNET - saisies.get('V_ANTIR', 0) + TAXANET - saisies.get('V_TAXANT', 0) + PCAPNET - saisies.get('V_PCAPANT', 0) + TAXLOYNET - saisies.get('V_TAXLOYANT', 0) + HAUTREVNET - saisies.get('V_CHRANT', 0) >= SEUIL_12 or IRNET + saisies.get('V_ANTIR', 0) - TAXANET + saisies.get('V_TAXANT', 0) - PCAPNET + saisies.get('V_PCAPANT', 0) - TAXLOYNET + saisies.get('V_TAXLOYANT', 0) - HAUTREVNET + saisies.get('V_CHRANT', 0) >= SEUIL_8) else (saisies.get('V_PCAPANT', 0) * is_positive(PCAPCUM) + 0)
PCSGD = PCSG * CSREC - PCSG_A * CSRECA
PPRSD = PPRS * CSREC - PPRS_A * CSRECA
PRDSD = PRDS * CSREC - PRDS_A * CSRECA
TAXLOYTOT = (TAXLOYNET * is_positive(TAXLOYCUM)) if (saisies.get('APPLI_COLBERT', 0) == 0 and IRNET - saisies.get('V_ANTIR', 0) + TAXANET - saisies.get('V_TAXANT', 0) + PCAPNET - saisies.get('V_PCAPANT', 0) + TAXLOYNET - saisies.get('V_TAXLOYANT', 0) + HAUTREVNET - saisies.get('V_CHRANT', 0) >= SEUIL_12 or IRNET + saisies.get('V_ANTIR', 0) - TAXANET + saisies.get('V_TAXANT', 0) - PCAPNET + saisies.get('V_PCAPANT', 0) - TAXLOYNET + saisies.get('V_TAXLOYANT', 0) - HAUTREVNET + saisies.get('V_CHRANT', 0) >= SEUIL_8) else (saisies.get('V_TAXLOYANT', 0) * is_positive(TAXLOYCUM) + 0)
TOTAXAGA = (TAXANET * is_positive(TAXACUM)) if (saisies.get('APPLI_COLBERT', 0) == 0 and IRNET - saisies.get('V_ANTIR', 0) + TAXANET - saisies.get('V_TAXANT', 0) + PCAPNET - saisies.get('V_PCAPANT', 0) + TAXLOYNET - saisies.get('V_TAXLOYANT', 0) + HAUTREVNET - saisies.get('V_CHRANT', 0) >= SEUIL_12 or IRNET + saisies.get('V_ANTIR', 0) - TAXANET + saisies.get('V_TAXANT', 0) - PCAPNET + saisies.get('V_PCAPANT', 0) - TAXLOYNET + saisies.get('V_TAXLOYANT', 0) - HAUTREVNET + saisies.get('V_CHRANT', 0) >= SEUIL_8) else (saisies.get('V_TAXANT', 0) * is_positive(TAXACUM) + 0)
TOTNET = max(0, NAPTIR)
ZIGIDGLO = is_positive(IDGLO) * 1 - is_zero(saisies.get('V_IDGLOANT', 0) + DGLOD + 0) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * LIG2
ZIGIDGLO1 = ZIGIDGLO * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 1)
ZIGIDGLO2 = ZIGIDGLO * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 2)
ZIGIDGLO3 = ZIGIDGLO * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 3)
ZIGIDGLO4 = ZIGIDGLO * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 4)
ZIGIDGLO5 = ZIGIDGLO * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 5)
ZIGIDGLO6 = ZIGIDGLO * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 6)
ZIGIDRSE = is_positive(IDRSE) * 1 - is_zero(saisies.get('V_IDRSEANT', 0) + DRSED + 0) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * LIG2
ZIGLODD = is_positive(saisies.get('V_GLOANT', 0) - DGLOD) * is_positive(IDGLO) * 1 - is_zero(saisies.get('V_IDGLOANT', 0) + DGLOD + 0) * 1 - is_zero(saisies.get('V_IDGLOANT', 0) - DGLOD) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
ZIGLORS = is_positive(DGLOD - saisies.get('V_GLOANT', 0)) * is_positive(IDGLO) * 1 - is_zero(saisies.get('V_IDGLOANT', 0) + DGLOD + 0) * 1 - is_zero(saisies.get('V_IDGLOANT', 0) - DGLOD) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
ZIGRSEDD = is_positive(saisies.get('V_RSE1ANT', 0) + saisies.get('V_RSE2ANT', 0) + saisies.get('V_RSE3ANT', 0) + saisies.get('V_RSE4ANT', 0) + saisies.get('V_RSE5ANT', 0) - DRSED) * is_positive(IDRSE) * 1 - is_zero(saisies.get('V_IDRSEANT', 0) + DRSED + 0) * 1 - is_zero(saisies.get('V_IDRSEANT', 0) - DRSED) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
ZIGRSERS = is_positive(DRSED - saisies.get('V_RSE1ANT', 0) + saisies.get('V_RSE2ANT', 0) + saisies.get('V_RSE3ANT', 0) + saisies.get('V_RSE4ANT', 0) + saisies.get('V_RSE5ANT', 0)) * is_positive(IDRSE) * 1 - is_zero(saisies.get('V_IDRSEANT', 0) + DRSED + 0) * 1 - is_zero(saisies.get('V_IDRSEANT', 0) - DRSED) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
ZIG_CSGDDO = is_positive(saisies.get('V_IDANT', 0) - DCSGD) * is_positive(IDCSG) * 1 - is_zero(saisies.get('V_IDANT', 0) + DCSGD + 0) * 1 - is_zero(saisies.get('V_IDANT', 0) - DCSGD) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
ZIG_CSGDPRIM = 1 - is_positive(saisies.get('V_CSANT', 0) + saisies.get('V_RDANT', 0) + saisies.get('V_PSANT', 0) + saisies.get('V_IDANT', 0)) * is_positive(IDCSG) * LIG2
ZIG_CSGDRS = is_positive(DCSGD - saisies.get('V_IDANT', 0)) * is_positive(IDCSG) * 1 - is_zero(saisies.get('V_IDANT', 0) + DCSGD + 0) * 1 - is_zero(saisies.get('V_IDANT', 0) - DCSGD) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
ZIG_DEGINF61 = is_positive(saisies.get('V_CSANT', 0) + saisies.get('V_RDANT', 0) + saisies.get('V_PSANT', 0) + 0) * is_positive(CRDEG + 0) * is_positive(SEUIL_61 - TOTCRA - CSNET - RDNET - PRSNET - CDISNET + 0) * 1 - is_zero(CSTOT + 0) * LIG2
ZIG_PRIM = is_positive(NAPCR) * LIG2
ZIG_TOTDEG = is_positive(CRDEG) * is_positive(INDCTX)
EXITTAX3 = is_positive(saisies.get('FLAG_3WBNEG', 0)) * -1 * saisies.get('V_NAPTIR3WB', 0) + 1 - is_positive(saisies.get('FLAG_3WBNEG', 0)) * saisies.get('V_NAPTIR3WB', 0) * is_positive(present(saisies.get('PVIMPOS', 0)) + present(saisies.get('CODRWB', 0))) + NAPTIR * is_positive(present(saisies.get('PVSURSI', 0)) + present(saisies.get('CODRWA', 0))) * 1 - is_positive(present(saisies.get('PVIMPOS', 0)) + present(saisies.get('CODRWB', 0))) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
HAUTREVTOT = (HAUTREVNET * is_positive(HAUTREVCUM)) if (saisies.get('APPLI_COLBERT', 0) == 0 and IRNET - saisies.get('V_ANTIR', 0) + TAXANET - saisies.get('V_TAXANT', 0) + PCAPNET - saisies.get('V_PCAPANT', 0) + TAXLOYNET - saisies.get('V_TAXLOYANT', 0) + HAUTREVNET - saisies.get('V_CHRANT', 0) >= SEUIL_12 or IRNET + saisies.get('V_ANTIR', 0) - TAXANET + saisies.get('V_TAXANT', 0) - PCAPNET + saisies.get('V_PCAPANT', 0) - TAXLOYNET + saisies.get('V_TAXLOYANT', 0) - HAUTREVNET + saisies.get('V_CHRANT', 0) >= SEUIL_8) else (saisies.get('V_CHRANT', 0) * is_positive(HAUTREVCUM) + 0)
IINETIR = max(0, NAPTIR)
IND12 = is_positive(SEUIL_12 - NAPCR + IRNET + TAXANET + TAXLOYNET + PCAPNET + HAUTREVNET - IRESTITIR) * is_positive(NAPCR + IRNET + TAXANET + TAXLOYNET + PCAPNET + HAUTREVNET - IRESTITIR) * 1 + 1 - is_positive(SEUIL_12 - NAPCR + IRNET + TAXANET + TAXLOYNET + PCAPNET + HAUTREVNET - IRESTITIR) * 2 + is_zero(NAPCR + IRNET + TAXANET + TAXLOYNET + PCAPNET + HAUTREVNET - IRESTITIR) * 3
INDPPEMENS = is_positive(is_positive(IRESTIT - 180) + is_positive(-1 * ANCNAP - 180) + is_positive(IRESTIT - IRNET - 180) * is_zero(saisies.get('V_IND_TRAIT', 0) - 5) * is_positive(PPETOTX - PPERSA - 180)) * 1 - V_CNR
INDSEUIL12IR = positif_ou_nul(IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET - SEUIL_12)
IND_REST = is_positive(IRESTIT)
IRCUM = 1 - is_positive(IRESTITIR) * is_positive(is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * is_zero(2 - saisies.get('V_REGCO', 0))) * 0 + 1 - is_positive(is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) + positif_ou_nul(SEUIL_TXMIN - IBM23) * is_positive(SEUIL_61 - VARIR61 * TRAITINF20 + VARIR61BIS * TRAITSUP20) * is_zero(VARIR12) * is_zero(2 - saisies.get('V_REGCO', 0))) * IRNET
IRCUMBIS = (saisies.get('V_ANTIR', 0) + IRCUM_A + 0) if (saisies.get('V_ANTIR', 0) + IRCUM_A - IRNET + saisies.get('IRANT', 0) * is_positive(IRNET + saisies.get('IRANT', 0)) - TAXANET - PCAPNET - TAXLOYNET - HAUTREVNET + saisies.get('V_ANTCR', 0) - CSTOT > 0 and saisies.get('V_ANTIR', 0) + IRCUM_A - IRNET + saisies.get('IRANT', 0) * is_positive(IRNET + saisies.get('IRANT', 0)) - TAXANET - PCAPNET - TAXLOYNET - HAUTREVNET + saisies.get('V_ANTCR', 0) - CSTOT < SEUIL_8 or TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + IRNET + saisies.get('IRANT', 0) * is_positive(IRNET + saisies.get('IRANT', 0)) - saisies.get('V_ANTIR', 0) - IRCUM_A + CSTOT - saisies.get('V_ANTCR', 0) > 0 and TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + IRNET + saisies.get('IRANT', 0) * is_positive(IRNET + saisies.get('IRANT', 0)) - saisies.get('V_ANTIR', 0) - IRCUM_A + CSTOT - saisies.get('V_ANTCR', 0) < SEUIL_12) else (IRNET + saisies.get('IRANT', 0))
IREXITI = present(saisies.get('FLAG_EXIT', 0)) * 1 - is_positive(saisies.get('FLAG_3WBNEG', 0)) * abs(NAPTIR - saisies.get('V_NAPTIR3WB', 0)) + is_positive(saisies.get('FLAG_3WBNEG', 0)) * abs(NAPTIR + saisies.get('V_NAPTIR3WB', 0)) * is_positive(present(saisies.get('PVIMPOS', 0)) + present(saisies.get('CODRWB', 0))) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
IREXITS = 1 - is_positive(saisies.get('FLAG_3WANEG', 0)) * abs(saisies.get('V_NAPTIR3WA', 0) + saisies.get('V_NAPTIR3WB', 0) * is_positive(saisies.get('FLAG_3WBNEG', 0)) - saisies.get('V_NAPTIR3WB', 0) * 1 - is_positive(saisies.get('FLAG_3WBNEG', 0))) + is_positive(saisies.get('FLAG_3WANEG', 0)) * abs(saisies.get('V_NAPTIR3WA', 0) + saisies.get('V_NAPTIR3WB', 0) * is_positive(saisies.get('FLAG_3WBNEG', 0)) - saisies.get('V_NAPTIR3WB', 0) * 1 - is_positive(saisies.get('FLAG_3WBNEG', 0))) * is_positive(present(saisies.get('PVIMPOS', 0)) + present(saisies.get('CODRWB', 0))) + 1 - is_positive(saisies.get('FLAG_3WANEG', 0)) * abs(saisies.get('V_NAPTIR3WA', 0) - NAPTIR) + is_positive(saisies.get('FLAG_3WANEG', 0)) * abs(saisies.get('V_NAPTIR3WA', 0) - NAPTIR) * 1 - is_positive(present(saisies.get('PVIMPOS', 0)) + present(saisies.get('CODRWB', 0))) * present(saisies.get('FLAG_EXIT', 0)) * is_positive(present(saisies.get('PVSURSI', 0)) + present(saisies.get('CODRWA', 0))) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))
LIGEXITAX3 = is_positive(EXITTAX3) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGIREXITI = is_positive(IREXITI) * 1 - is_positive(IREXITS) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIGIREXITS = is_positive(IREXITS) * 1 - is_positive(IREXITI) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
LIG_SURSIS = is_positive(LIGPVSURSI + LIGBPTPGJ + LIGIREXITI + LIGIREXI19 + LIGIREXITS + LIGIREXS19 + LIGIREXIT + LIGEXITAX3 + LIGSURIMP) * LIG1 * LIG2
NAPSANSPENA = NAPTIR - PIR + PTAXA + PPCAP + PHAUTREV + PTAXLOY * is_positive(abs(NAPTIR))
NAPTOT = IRCUM + TAXACUM + PCAPCUM + TAXLOYCUM + HAUTREVCUM - RECUMIR
NATIMPIR = is_zero(saisies.get('V_IND_TRAIT', 0) - 4) * is_positive(is_positive(NAPTOT - NAPTOTAIR - saisies.get('IRANT', 0)) * positif_ou_nul(IAMD1 - SEUIL_61) * positif_ou_nul(IRNET + TAXANET + TAXLOYNET + PCAPNET + HAUTREVNET - SEUIL_12) + is_positive(IRE - IRESTITIR) * is_positive(IRESTITIR)) + is_zero(saisies.get('V_IND_TRAIT', 0) - 5) * is_positive(positif_ou_nul(IAMD1 - SEUIL_61) + positif_ou_nul(RASAR + saisies.get('NRINET', 0) + saisies.get('IMPRET', 0) - SEUIL_12))
PIRNETNEG = max(0, PIR - IRCUM)
PPCAPNETNEG = max(0, PIR + PTAXA + PPCAP - IRCUM - TAXACUM - PCAPCUM)
PTAXANETNEG = max(0, PIR + PTAXA - IRCUM - TAXACUM)
PTAXLOYNETNEG = max(0, PIR + PTAXA + PPCAP + PTAXLOY - IRCUM - TAXACUM - PCAPCUM - TAXLOYCUM)
TOTIRCUM = IRCUM + TAXACUM + PCAPCUM + TAXLOYCUM + HAUTREVCUM
ZIGDRSED1 = ZIGIDRSE * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 1)
ZIGDRSED2 = ZIGIDRSE * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 2)
ZIGDRSED3 = ZIGIDRSE * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 3)
ZIGDRSED4 = ZIGIDRSE * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 4)
ZIGDRSED5 = ZIGIDRSE * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 5)
ZIGDRSED6 = ZIGIDRSE * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 6)
ZIGLOCO = is_positive(ZIGLODD + ZIGLORS + is_zero(saisies.get('V_IDGLOANT', 0) - DGLOD)) * 1 - is_zero(saisies.get('V_IDGLOANT', 0) + DGLOD + 0) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
ZIGLOCOR = is_positive(ZIGLODD + ZIGLORS) * 1 - is_zero(saisies.get('V_IDGLOANT', 0) + DGLOD + 0) * 1 - is_zero(saisies.get('V_IDGLOANT', 0) - DGLOD) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
ZIGLOCOR1 = ZIGLOCOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 1)
ZIGLOCOR2 = ZIGLOCOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 2)
ZIGLOCOR3 = ZIGLOCOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 3)
ZIGLOCOR4 = ZIGLOCOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 4)
ZIGLOCOR5 = ZIGLOCOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 5)
ZIGLOCOR6 = ZIGLOCOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 6)
ZIGRSECO = is_positive(ZIGRSEDD + ZIGRSERS + is_zero(saisies.get('V_IDRSEANT', 0) - DRSED)) * 1 - is_zero(saisies.get('V_IDRSEANT', 0) + DRSED + 0) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
ZIGRSECOR = is_positive(ZIGRSEDD + ZIGRSERS) * 1 - is_zero(saisies.get('V_IDRSEANT', 0) + DRSED + 0) * 1 - is_zero(saisies.get('V_IDRSEANT', 0) - DRSED) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
ZIGRSECOR1 = ZIGRSECOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 1)
ZIGRSECOR2 = ZIGRSECOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 2)
ZIGRSECOR3 = ZIGRSECOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 3)
ZIGRSECOR4 = ZIGRSECOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 4)
ZIGRSECOR5 = ZIGRSECOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 5)
ZIGRSECOR6 = ZIGRSECOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 6)
ZIG_CSGD99 = ZIG_CSGDPRIM * 1 - is_zero(saisies.get('V_IDANT', 0) + DCSGD + 0) * is_positive(DCSGD) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * LIG2
ZIG_CSGDC = is_positive(ZIG_CSGDDO + ZIG_CSGDRS + is_zero(saisies.get('V_IDANT', 0) - DCSGD)) * 1 - is_zero(saisies.get('V_IDANT', 0) + DCSGD + 0) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
ZIG_CSGDCOR = is_positive(ZIG_CSGDDO + ZIG_CSGDRS) * 1 - is_zero(saisies.get('V_IDANT', 0) + DCSGD + 0) * 1 - is_zero(saisies.get('V_IDANT', 0) - DCSGD) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
ZIG_TITREP = ZIG_NETAP + ZIG_TOTDEG
AVFISCO = saisies.get('V_NAPTEO', 0) * 1 - 2 * saisies.get('V_NEGTEO', 0) - NAPSANSPENA
ILICAPNET = positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * max(0, PCAPCUM - PPCAP - PTAXANETNEG) + 1 - positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * 0
ILICHRNET = positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * max(0, HAUTREVCUM - PHAUTREV - PTAXLOYNETNEG) + 1 - positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * 0
ILIIRNET = positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * max(0, IRCUM - PIR) + 1 - positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * TOTIRCUM - RECUMIR - TOTPENIR
ILILOYNET = positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * max(0, TAXLOYCUM - PTAXLOY - PPCAPNETNEG) + 1 - positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * 0
ILITAXANET = positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * max(0, TAXACUM - PTAXA - PIRNETNEG) + 1 - positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * 0
ILITOTIRNET = ILIIRNET + ILITAXANET + ILICAPNET + ILILOYNET + ILICHRNET
IREXIT = IREXITI + IREXITS
IRPSCUM = max(0, TOTIRCUM - RECUMIR + NAPCR61)
LIG12NMR = is_positive(IRPSCUM) * is_positive(SEUIL_12 - IRPSCUM) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_positive(saisies.get('IMPRET', 0) - SEUIL_12) * 1 - is_positive(saisies.get('NRINET', 0) - SEUIL_12)
LIG_MEMO = is_positive(LIGPRELIB + LIG_SURSIS + LIGREPPLU + LIGELURAS + LIGELURASC + LIGABDET + LIGABDETP + LIGABDETM + LIGROBOR + LIGPVIMMO + LIGPVTISOC + LIGMOBNR + LIGDEPCHO + LIGDEPMOB + LIGCOD3SG + LIGCOD3SH + LIGCOD3SL + LIGCOD3SM) + is_positive(LIG3525 + LIGRCMSOC + LIGRCMIMPAT + LIGABIMPPV + LIGABIMPMV + LIGPV3SB) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * LIG1 * LIG2
RECUM = max(0, TOTIRCUM - RECUMIR + NAPCR61)
TXMOYIMPNUM = is_positive(IRCUM + saisies.get('IRANT', 0) + TAXACUM + PCAPCUM + TAXLOYCUM + HAUTREVCUM - RECUM - PIR - PTAXA - PPCAP - PTAXLOY - PHAUTREV) * max(0, IRCUM + saisies.get('IRANT', 0) + TAXACUM + PCAPCUM + TAXLOYCUM + HAUTREVCUM - RECUM - PIR - PTAXA - PPCAP - PTAXLOY - PHAUTREV * positif_ou_nul(IRNET2 + TAXASSUR + IPCAPTAXT + TAXLOY + IHAUTREVT - SEUIL_12) + IRNET2 + TAXASSUR + IPCAPTAXT + TAXLOY + IHAUTREVT + saisies.get('IRANT', 0) * is_positive(SEUIL_12 - IRNET2 + TAXASSUR + IPCAPTAXT + TAXLOY + IHAUTREVT) + round(saisies.get('RCMLIB', 0) * TX_PREVLIB / 100) + saisies.get('COD2CK', 0) - saisies.get('IPREP', 0) - saisies.get('IPPRICORSE', 0)) * positif_ou_nul(IAMD1 - SEUIL_61) * 100
VARNON = IRPSCUM - RECUM - TOTIRPSANT
ZIGCSGDCOR1 = ZIG_CSGDCOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 1)
ZIGCSGDCOR2 = ZIG_CSGDCOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 2)
ZIGCSGDCOR3 = ZIG_CSGDCOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 3)
ZIGCSGDCOR4 = ZIG_CSGDCOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 4)
ZIGCSGDCOR5 = ZIG_CSGDCOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 5)
ZIGCSGDCOR6 = ZIG_CSGDCOR * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 6)
ZIGDCSGD1 = ZIG_CSGD99 * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 1) * LIG2
ZIGDCSGD2 = ZIG_CSGD99 * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 2) * LIG2
ZIGDCSGD3 = ZIG_CSGD99 * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 3) * LIG2
ZIGDCSGD4 = ZIG_CSGD99 * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 4) * LIG2
ZIGDCSGD5 = ZIG_CSGD99 * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 5) * LIG2
ZIGDCSGD6 = ZIG_CSGD99 * is_zero(ANCSDED2 - saisies.get('V_ANREV', 0) + 6) * LIG2
LIGDEG = positif_ou_nul(TOTIRPSANT) * is_positive(SEUIL_8 - RECUM) * is_positive(is_zero(saisies.get('V_NOTRAIT', 0) - 23) + is_zero(saisies.get('V_NOTRAIT', 0) - 33) + is_zero(saisies.get('V_NOTRAIT', 0) - 43) + is_zero(saisies.get('V_NOTRAIT', 0) - 53) + is_zero(saisies.get('V_NOTRAIT', 0) - 63))
LIGDEGRES = is_positive(TOTIRPSANT + 0) * positif_ou_nul(RECUM - SEUIL_8) * is_positive(is_zero(saisies.get('V_NOTRAIT', 0) - 23) + is_zero(saisies.get('V_NOTRAIT', 0) - 33) + is_zero(saisies.get('V_NOTRAIT', 0) - 43) + is_zero(saisies.get('V_NOTRAIT', 0) - 53) + is_zero(saisies.get('V_NOTRAIT', 0) - 63))
LIGIDEGR = is_positive(LIGDEG + LIGDEGRES) * positif_ou_nul(IDEGR - SEUIL_8) + is_zero(IDEGR)
LIGIDEGRC = is_positive(LIGDEG + LIGDEGRES) * is_positive(SEUIL_8 - IDEGR) * is_positive(IDEGR + 0)
LIGRES = 1 - is_positive(TOTIRPSANT + 0) * positif_ou_nul(RECUM - SEUIL_8) * is_positive(is_zero(saisies.get('V_NOTRAIT', 0) - 23) + is_zero(saisies.get('V_NOTRAIT', 0) - 33) + is_zero(saisies.get('V_NOTRAIT', 0) - 43) + is_zero(saisies.get('V_NOTRAIT', 0) - 53) + is_zero(saisies.get('V_NOTRAIT', 0) - 63))
NAPTEMP = is_positive(is_positive(SEUIL_8 - abs(IRPSCUM - RECUM)) * 1 - is_positive(IRPSCUM - RECUM) + is_positive(SEUIL_12 - IRPSCUM - RECUM) * is_positive(IRPSCUM - RECUM)) * 0 + 1 - is_positive(is_positive(SEUIL_8 - abs(IRPSCUM - RECUM)) * 1 - is_positive(IRPSCUM - RECUM) + is_positive(SEUIL_12 - IRPSCUM - RECUM) * is_positive(IRPSCUM - RECUM)) * IRPSCUM - RECUM
NONMER = is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_positive(SEUIL_8 - RECUM) * is_positive(SEUIL_12 - IRPSCUM) * IRPSCUM + 1 - is_positive(SEUIL_8 - RECUM) * is_positive(SEUIL_12 - IRPSCUM) * 0 + 1 - is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_positive(SEUIL_8 - RECUM) * is_positive(SEUIL_12 - IRPSCUM) * is_positive(SEUIL_12 - abs(TOTIRPSANT)) * max(0, IRPSCUM - RECUM - TOTIRPSANT) + 1 - is_positive(SEUIL_12 - abs(TOTIRPSANT)) * IRPSCUM + 1 - is_positive(SEUIL_8 - RECUM) * is_positive(SEUIL_12 - IRPSCUM) * is_positive(is_positive(SEUIL_12 - VARNON) * is_positive(VARNON) + is_positive(SEUIL_8 - abs(VARNON)) * 1 - is_positive(VARNON)) * max(0, IRPSCUM - RECUM - TOTIRPSANT) + 1 - is_positive(is_positive(SEUIL_12 - VARNON) * is_positive(VARNON) + is_positive(SEUIL_8 - abs(VARNON)) * 1 - is_positive(VARNON)) * 0
NONREST = is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_positive(SEUIL_8 - RECUM) * is_positive(SEUIL_12 - IRPSCUM) * RECUM + 1 - is_positive(SEUIL_8 - RECUM) * is_positive(SEUIL_12 - IRPSCUM) * 0 + 1 - is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_positive(SEUIL_8 - RECUM) * is_positive(SEUIL_12 - IRPSCUM) * is_positive(SEUIL_12 - abs(TOTIRPSANT)) * max(0, TOTIRPSANT - IRPSCUM - RECUM) + 1 - is_positive(SEUIL_12 - abs(TOTIRPSANT)) * RECUM + 1 - is_positive(SEUIL_8 - RECUM) * is_positive(SEUIL_12 - IRPSCUM) * is_positive(is_positive(SEUIL_12 - VARNON) * is_positive(VARNON) + is_positive(SEUIL_8 - abs(VARNON)) * 1 - is_positive(VARNON)) * max(0, TOTIRPSANT - IRPSCUM - RECUM) + 1 - is_positive(is_positive(SEUIL_12 - VARNON) * is_positive(VARNON) + is_positive(SEUIL_8 - abs(VARNON)) * 1 - is_positive(VARNON)) * 0
NONRESTEMP2 = IDEGR + max(0, saisies.get('V_NONRESTANT', 0) - saisies.get('V_ANTRE', 0) - min(0, NAPTEMP)) * is_positive(SEUIL_8 - IDEGR - max(0, saisies.get('V_NONRESTANT', 0) - saisies.get('V_ANTRE', 0) - min(0, NAPTEMP))) * is_positive(NAPCRTEMP - saisies.get('V_ANTCR', 0))
TOTIRPS = IRPSCUM - NONMER + NONREST - RECUM
TXMOYIMPC = round(TXMOYIMPNUM / TXMOYIMPDEN * 100) / 100
COMPENSACI = is_positive(NAPCRP) * is_zero(IND61PS - 2) * is_positive(IRE) * is_zero(PPETOTX) * is_positive(IRESTITIR - IRE) * min(NAPCRP, max(0, IRESTITIR - IRE)) + is_zero(IRESTITIR - IRE) * min(NAPCRP, IRE) + is_positive(IRE - IRESTITIR) * min(NAPCRP, IRESTITIR) + is_positive(PPETOTX) * is_positive(IRE) * is_positive(IRESTITIR - IRE - PPETOTX) * min(NAPCRP, IRESTITIR - IRE - PPETOTX) + is_zero(IRESTITIR - IRE - PPETOTX) * min(NAPCRP, IRE) + is_positive(PPETOTX + IRE - IRESTITIR) * positif_ou_nul(PPETOTX - IRESTITIR) * 0 + is_positive(IRESTITIR - PPETOTX) * min(NAPCRP, IRESTITIR - PPETOTX) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) + is_positive(is_zero(saisies.get('V_NOTRAIT', 0) - 26) + is_zero(saisies.get('V_NOTRAIT', 0) - 36) + is_zero(saisies.get('V_NOTRAIT', 0) - 46) + is_zero(saisies.get('V_NOTRAIT', 0) - 56) + is_zero(saisies.get('V_NOTRAIT', 0) - 66)) * max(0, min(min(0, TOTIRPSANT - saisies.get('V_ANTCR', 0)) - min(0, TOTIRPS - NAPCR61 + NONMER), RECUMIR - PPEREST2A))
COMPENSANV = is_positive(20 - saisies.get('V_NOTRAIT', 0)) * is_zero(IND61PS - 2) * is_positive(SEUIL_12 - CSTOT + IRNET + TAXANET + TAXLOYNET + PCAPNET + HAUTREVNET - IRESTITIR) * max(0, NAPCRP - IRESTITIR) + is_positive(is_zero(saisies.get('V_NOTRAIT', 0) - 26) + is_zero(saisies.get('V_NOTRAIT', 0) - 36) + is_zero(saisies.get('V_NOTRAIT', 0) - 46) + is_zero(saisies.get('V_NOTRAIT', 0) - 56) + is_zero(saisies.get('V_NOTRAIT', 0) - 66)) * max(0, min(NONMER, NAPCR61 - saisies.get('V_ANTCR', 0)))
COMPENSIR = 1 - INDCTX * max(0, max(0, TOTIRPSANT - saisies.get('V_ANTCR', 0)) - max(0, TOTIRPS - NAPCR61 + NONMER))
COMPENSPPE = is_positive(NAPCRP) * is_zero(IND61PS - 2) * is_positive(PPETOTX) * is_zero(IRE) * is_positive(IRESTITIR - PPETOTX) * min(NAPCRP, max(0, IRESTITIR - PPETOTX)) + is_zero(IRESTITIR - PPETOTX) * min(NAPCRP, PPETOTX) + is_positive(PPETOTX - IRESTITIR) * min(NAPCRP, IRESTITIR) + is_positive(PPETOTX) * is_positive(IRE) * is_positive(IRESTITIR - IRE - PPETOTX) * min(max(0, NAPCRP - COMPENSACI), PPETOTX) + is_zero(IRESTITIR - IRE - PPETOTX) * min(max(0, NAPCRP - COMPENSACI), PPETOTX) + is_positive(PPETOTX + IRE - IRESTITIR) * positif_ou_nul(PPETOTX - IRESTITIR) * min(max(0, NAPCRP - COMPENSACI), IRESTITIR) + is_positive(IRESTITIR - PPETOTX) * min(max(0, NAPCRP - COMPENSACI), PPETOTX) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) + is_positive(is_zero(saisies.get('V_NOTRAIT', 0) - 26) + is_zero(saisies.get('V_NOTRAIT', 0) - 36) + is_zero(saisies.get('V_NOTRAIT', 0) - 46) + is_zero(saisies.get('V_NOTRAIT', 0) - 56) + is_zero(saisies.get('V_NOTRAIT', 0) - 66)) * max(0, min(0, TOTIRPSANT - saisies.get('V_ANTCR', 0)) - min(0, TOTIRPS - NAPCR61 + NONMER) - COMPENSACI)
IINETCALC = max(0, NAPTEMP - TOTIRPSANT)
LIGNEMP = is_positive(1 - is_zero(NAPTEMP) + is_zero(NAPTEMP) * is_zero(NAPTIR) * is_zero(NAPCRP))
NAPCOROLIR = TOTIRCUM - NONMER - RECUMIR + NONREST * is_positive(20 - saisies.get('V_NOTRAIT', 0)) + max(0, TOTIRCUM - NONMER - RECUMIR + NONREST - saisies.get('V_TOTIRANT', 0) - saisies.get('V_NONMERANT', 0) - saisies.get('V_ANTREIR', 0) + saisies.get('V_NONRESTANT', 0)) * positif_ou_nul(saisies.get('V_NOTRAIT', 0) - 20)
NAPTEMPCX = IRPSCUM - NONMER - RECUM + NONREST * is_positive(IRPSCUM - RECUM - TOTIRPSANT + 0)
TXMOYIMP = max(0, is_positive(IRPSCUM + saisies.get('IRANT', 0) - NONMER) * is_positive(4500 / 100 - TXMOYIMPC) * TXMOYIMPC)
IINET = max(0, NAPTEMPCX - TOTIRPSANT)
IREST = max(0, max(0, NAPTEMPCX) - max(0, TOTIRPSANT))
LIG2053 = is_positive(saisies.get('V_NOTRAIT', 0) - 20) * is_positive(IDEGR) * is_positive(IREST - SEUIL_8) * TYPE2
LIG3750 = present(saisies.get('V_ZDC', 0)) * is_zero(abs(saisies.get('V_ZDC', 0) - 1)) * is_positive(IREST) * LIG1
LIGEMP = 1 - LIGNEMP
LIGIREST = is_positive(LIGRES + LIGDEGRES) * positif_ou_nul(IREST - SEUIL_8) + is_zero(IREST)
LIGIRESTC = is_positive(LIGRES + LIGDEGRES) * is_positive(SEUIL_8 - IREST) * is_positive(IREST + 0)
LIGNETAREC = is_positive(IINET) * 1 - LIGPS * is_positive(saisies.get('ANNUL2042', 0)) * TYPE2
LIGNETARECS = is_positive(IINET) * LIGPS * is_positive(saisies.get('ANNUL2042', 0)) * TYPE2
LIGRESINF = is_positive(LIGIDEGRC + LIGIRESTC)
LIGTROP = is_positive(saisies.get('V_ANTRE', 0) + saisies.get('V_ANTCR', 0)) * is_zero(IINET) * positif_ou_nul(abs(NAPTOTA) - IRESTIT - saisies.get('IRANT', 0)) * 1 - positif_ou_nul(abs(NAPTOTA) - IRESTIT - saisies.get('IRANT', 0) - SEUIL_12) * is_zero(IDRS2 - IDEC + IREP) * 1 - LIGPS * 1 - INDCTX
LIGTROPREST = is_positive(saisies.get('V_ANTRE', 0) + saisies.get('V_ANTCR', 0)) * is_zero(IINET) * positif_ou_nul(abs(NAPTOTA) - IRESTIT - saisies.get('IRANT', 0)) * 1 - positif_ou_nul(abs(NAPTOTA) - IRESTIT - saisies.get('IRANT', 0) - SEUIL_12) * 1 - is_positive(LIGTROP) * 1 - LIGPS * 1 - INDCTX
LIGTROPRESTS = is_positive(saisies.get('V_ANTRE', 0) + saisies.get('V_ANTCR', 0)) * is_zero(IINET) * positif_ou_nul(abs(NAPTOTA) - IRESTIT - saisies.get('IRANT', 0)) * 1 - positif_ou_nul(abs(NAPTOTA) - IRESTIT - saisies.get('IRANT', 0) - SEUIL_12) * 1 - is_positive(LIGTROP) * LIGPS * 1 - INDCTX
LIGTROPS = is_positive(saisies.get('V_ANTRE', 0) + saisies.get('V_ANTCR', 0)) * is_zero(IINET) * positif_ou_nul(abs(NAPTOTA) - IRESTIT - saisies.get('IRANT', 0)) * 1 - positif_ou_nul(abs(NAPTOTA) - IRESTIT - saisies.get('IRANT', 0) - SEUIL_12) * is_zero(IDRS2 - IDEC + IREP) * LIGPS * 1 - INDCTX
LIGTXMOYPS = is_positive(TXMOYIMP) * 1 - is_positive(V_CNR) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + is_zero(4 - saisies.get('V_REGCO', 0)) + is_positive(present(saisies.get('NRINET', 0)) + present(saisies.get('NRBASE', 0)) + present(saisies.get('IMPRET', 0)) + present(saisies.get('BASRET', 0)))) * IND_REV * LIG2 * is_positive(20 - saisies.get('V_NOTRAIT', 0))
NAPT = NAPTEMPCX - TOTIRPSANT
NAT1 = 1 - is_positive(saisies.get('V_IND_TRAIT', 0) - 4) * is_positive(NAPT) + is_positive(saisies.get('V_IND_TRAIT', 0) - 4) * is_positive(positif_ou_nul(IRPSCUM - SEUIL_12) * is_zero(NAPT) + is_positive(NAPT))
NAT11 = 11 * IND_REST * 1 - is_positive(IDEGR) * is_positive(IRE - IRESTIT) * 1 - is_positive(saisies.get('V_IND_TRAIT', 0) - 4) + 11 * is_positive(saisies.get('V_IND_TRAIT', 0) - 4) * is_positive(SEUIL_12 - saisies.get('V_IRPSANT', 0)) * is_positive(IRESTIT) * is_positive(IRE - IRESTIT) * 1 - positif_ou_nul(NAPT)
NAT1BIS = is_positive(saisies.get('IRANT', 0)) * 1 - is_positive(NAT1) * 1 - is_positive(IDEGR) + 0
NAT21 = 21 * IND_REST * 1 - is_positive(IDEGR) * 1 - is_positive(IRE - IRESTIT) * 1 - is_positive(saisies.get('V_IND_TRAIT', 0) - 4) + 21 * is_positive(saisies.get('V_IND_TRAIT', 0) - 4) * is_positive(SEUIL_12 - saisies.get('V_IRPSANT', 0)) * is_positive(IRESTIT) * is_zero(IRE - IRESTIT) * 1 - positif_ou_nul(NAPT)
NAT70 = 70 * is_zero(NAPTEMPCX) * 1 - positif_ou_nul(NAPT)
NAT71 = 71 * is_positive(NAPTEMPCX) * 1 - positif_ou_nul(NAPT)
NAT81 = 81 * positif_ou_nul(saisies.get('V_IRPSANT', 0) - SEUIL_12) * is_positive(IRESTIT) * is_positive(IRE - IRESTIT) * 1 - positif_ou_nul(NAPT)
NAT91 = 91 * positif_ou_nul(saisies.get('V_IRPSANT', 0) - SEUIL_12) * is_positive(IRESTIT) * is_zero(IRE - IRESTIT) * 1 - positif_ou_nul(NAPT)
NATIMP = NAT1 + NAT1BIS + 1 - is_positive(NAT1 + NAT1BIS) * NAT11 + NAT21 + NAT70 + NAT71 + NAT81 + NAT91
PPENATREST = is_positive(IRE) * is_positive(IREST) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * is_zero(IRE - PPETOTX + PPERSA) * 1 * 1 + 1 - is_positive(PPETOTX - PPERSA) * 2 + is_zero(IRE) * 1 - is_positive(PPETOTX - PPERSA) * 3 + is_positive(PPETOTX - PPERSA) * is_positive(IRE - PPETOTX + PPERSA) * 4 + 2 * is_zero(2 - saisies.get('V_REGCO', 0))
PPENATREST2 = is_positive(IREST - saisies.get('V_ANTRE', 0) + saisies.get('V_ANTIR', 0)) + is_positive(saisies.get('V_ANTRE', 0) - IINET) * is_positive(IRE) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * is_zero(IRE - PPETOTX + PPERSA) * 1 * 1 + 1 - is_positive(PPETOTX - PPERSA) * 2 + is_zero(IRE) * 1 - is_positive(PPETOTX - PPERSA) * 3 + is_positive(PPETOTX - PPERSA) * is_positive(IRE - PPETOTX + PPERSA) * 4 + 2 * is_zero(2 - saisies.get('V_REGCO', 0))
PPERESTA = is_positive(PPENATREST) * max(0, min(IREST, PPETOTX - PPERSA))
WMTAP = 1 - is_positive(saisies.get('V_ZDC', 0) + 0) * is_positive(NAT1 + NAT71) * IINET
BASPPEMENS = INDPPEMENS * min(max(IREST, -1 * ANCNAP * is_positive(-1 * ANCNAP)), PPETOTX - PPERSA) * is_zero(saisies.get('V_IND_TRAIT', 0) - 4) + INDPPEMENS * max(0, min(IRESTIT - IRNET, PPETOTX - PPERSA)) * is_zero(saisies.get('V_IND_TRAIT', 0) - 5)
CODINI = 99 * is_positive(NATIMP) + 0 * is_zero(NATIMP)
COMPENSPS = 1 - INDCTX * max(0, saisies.get('V_ANTCR', 0) - NAPCR61) * is_positive(NAPT)
GAINDBLELIQ = max(0, saisies.get('V_ANC_NAP', 0) - NAPT) * is_positive(is_zero(MESGOUV - 1) + is_zero(MESGOUV - 2) + is_zero(MESGOUV2 - 4) + is_zero(MESGOUV2 - 5))
GAINPOURCLIQ = 1 - is_zero(saisies.get('V_ANC_NAP', 0) * 1 - 2 * saisies.get('V_IND_NAP', 0)) * saisies.get('V_ANC_NAP', 0) * 1 - 2 * saisies.get('V_IND_NAP', 0) - NAPT / saisies.get('V_ANC_NAP', 0) * 1 - 2 * saisies.get('V_IND_NAP', 0) * 1 - V_CNR2
IMPNET = is_zero(4 - saisies.get('V_IND_TRAIT', 0)) * IINET + IREST * -1 + is_zero(5 - saisies.get('V_IND_TRAIT', 0)) * is_positive(IDEGR) * is_positive(IREST) * is_positive(SEUIL_8 - IREST) * IDEGR * -1 + 1 - is_positive(is_positive(IDEGR) * is_positive(IREST) * is_positive(SEUIL_8 - IREST)) * IINET - IREST - IDEGR
IMPNETIR = NAPTIR - saisies.get('V_ANTIR', 0) - saisies.get('V_PCAPANT', 0) - saisies.get('V_TAXANT', 0) - saisies.get('V_TAXLOYANT', 0) - saisies.get('V_CHRANT', 0) * is_zero(4 - saisies.get('V_IND_TRAIT', 0)) + IMPNET - IMPNETPS * is_zero(5 - saisies.get('V_IND_TRAIT', 0))
IND08 = is_positive(NAPT * -1) * is_positive(SEUIL_8 - abs(NAPT)) * 1 + 1 - is_positive(SEUIL_8 - abs(NAPT)) * 2
INDCEX = is_zero(1 - NATIMP) * 1 + is_positive(is_zero(11 - NATIMP) + is_zero(21 - NATIMP) + is_zero(81 - NATIMP) + is_zero(91 - NATIMP)) * 2 + is_zero(0 - NATIMP) * 3
INDIMPOS = is_positive(is_zero(1 - NATIMP) + 0)
INDNAP = 1 - positif_ou_nul(NAPT)
INDNMR = is_zero(NAPT) * is_zero(NAT1BIS) * is_positive(IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET)
INDNMR1 = 1 - is_positive(IAMD1 + 1 - SEUIL_61) * is_zero(NAPT) * is_positive(IAMD1)
INDNMR2 = is_positive(INDNMR) * 1 - is_positive(INDNMR1)
INDNMRI = INDNMR * is_positive(RED)
INDRESTIT = is_positive(IREST + 0)
IND_IMP = is_positive(NAPT)
IND_IRINF80 = (1 - is_positive(INDCTX) * 1 - is_positive(IREST)) if (CODINI + 0 == 9 and NATIMP + 0 == 0 or CODINI + 0 == 99 and V_CR2 == 0 and IRNET + TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES + NAPCR < SEUIL_12 and IAVIM + NAPCRPAVIM >= SEUIL_61) else 0
IND_IRNMR = (1 - INDCTX) if (CODINI == 8 and NATIMP == 0 and V_CR2 == 0) else 0
IND_NI = is_zero(NAPT) * is_zero(IRNET)
IND_NIRED = (1 - INDCTX) if (CODINI == 3 or CODINI == 5 or CODINI == 13 and IAVIM + NAPCRPAVIM - TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES == 0 and V_CR2 == 0) else 0
IND_REST50 = is_positive(SEUIL_8 - IREST) * is_positive(IREST) * 1 - is_positive(saisies.get('APPLI_OCEANS', 0))
LIG0TDEG = INDNIRI * is_zero(IRNETBIS) * positif_ou_nul(TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - SEUIL_61) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(INDCTX) * LIG2
LIG0TSUP = INDNIRI * is_zero(IRNETBIS) * positif_ou_nul(TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - SEUIL_61) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * 1 - is_positive(INDCTX) * LIG2
LIG12ANT = is_positive(saisies.get('IRANT', 0)) * is_positive(SEUIL_12 - TOTNET) * is_positive(TOTNET) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(is_zero(2 - saisies.get('V_REGCO', 0)) + 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0))) * is_positive(saisies.get('NRINET', 0) - SEUIL_12) * 1 - is_positive(saisies.get('IMPRET', 0) - SEUIL_12) * 1 - is_positive(saisies.get('NRINET', 0) - SEUIL_12) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * LIG2
LIG2080 = is_positive(NATIMP - 71) * LIG2
LIG2140 = (1 - INDCTX * INDREV1A8 * 1 - is_positive(saisies.get('IRANT', 0)) * is_zero(NAPT) * LIG2 + is_zero(IINET + NAPTOTA) * is_zero(INDREV1A8) * is_positive(IND_REV) * is_positive(20 - saisies.get('V_NOTRAIT', 0))) if (V_CR2 + 0 == 0 and NATIMP == 1 and IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + saisies.get('NRINET', 0) - NAPTOTA + NAPCR >= SEUIL_12 or V_CR2 + 0 == 1 and NATIMP == 1 or NATIMP == 0 or saisies.get('V_REGCO', 0) + 0 == 3 and saisies.get('NRINET', 0) + 0 < 12 and CSTOTSSPENA < 61 and LIG2141 + 0 == 0) else 0
LIG21401 = (1 - INDCTX * INDREV1A8 * 1 - is_positive(saisies.get('IRANT', 0)) * is_zero(NAPT) * LIG2 + is_zero(IINET + NAPTOTA) * is_zero(INDREV1A8) * is_positive(IND_REV) * is_positive(20 - saisies.get('V_NOTRAIT', 0))) if (V_CR2 + 0 == 0 and NATIMP == 1 and IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + saisies.get('NRINET', 0) - NAPTOTA + NAPCR >= SEUIL_12 or V_CR2 + 0 == 1 and NATIMP == 1 or NATIMP == 0 and LIG2141 + 0 == 0) else 0
LIG21402 = (1 - INDCTX * INDREV1A8 * 1 - is_positive(saisies.get('IRANT', 0)) * is_zero(NAPT) * LIG2 + is_zero(IINET + NAPTOTA) * is_zero(INDREV1A8) * is_positive(IND_REV) * is_positive(saisies.get('V_NOTRAIT', 0) - 20)) if (V_CR2 + 0 == 0 and NATIMP == 1 and IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + saisies.get('NRINET', 0) - NAPTOTA + NAPCR >= SEUIL_12 or V_CR2 + 0 == 1 and NATIMP == 1 or NATIMP == 0 and LIG2141 + 0 == 0) else 0
LIG2150 = 1 - INDCTX * is_positive(IREST) * 1 - is_positive(LIG2140) * 1 - is_positive(IND_REST50) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * LIG2
LIG2161 = INDCTX * is_positive(IREST) * positif_ou_nul(IREST - SEUIL_8) * 1 - is_positive(IND_REST50)
LIG2171 = 1 - INDCTX * is_positive(IREST) * 1 - is_positive(LIG2140) * is_positive(IND_REST50) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * LIG2
LIG2355 = is_positive(IND_NI * 1 - is_positive(saisies.get('V_ANTRE', 0)) + INDNMR1 + INDNMR2 + is_positive(NAT1BIS) * is_zero(NAPT) * is_positive(IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET) + is_positive(SEUIL_12 - IAN + RPEN - IAVT + TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - saisies.get('IRANT', 0)) * positif_ou_nul(IAN + RPEN - IAVT + TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - saisies.get('IRANT', 0))) * is_positive(INDREV1A8) * 1 - is_zero(NATIMP - 1) + is_zero(NATIMP - 1) * is_positive(saisies.get('IRANT', 0)) * 1 - LIGPS * LIG2
LIG2368 = INDCTX * is_positive(IREST) * is_positive(is_positive(IND_REST50) + is_positive(IDEGR))
LIG2380 = (IND_SPR * positif_ou_nul(saisies.get('V_8ZT', 0) - RBG) * is_positive(saisies.get('V_8ZT', 0)) * 1 - present(saisies.get('BRAS', 0)) * 1 - present(saisies.get('IPSOUR', 0)) * V_CR2 * LIG2) if (NATIMP == 0 or NATIMP == 21 or NATIMP == 70 or NATIMP == 91) else 0
LIG400DEG = is_positive(IAVIM + NAPCRPAVIM) * is_positive(SEUIL_61 - IAVIM + NAPCRPAVIM) * is_zero(ITRED) * is_positive(IRNET) * 1 - is_positive(IRNET - SEUIL_61) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0) - SEUIL_12) * 1 - is_positive(saisies.get('NRINET', 0) - SEUIL_12) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
LIG400RI = INDNMR1 * is_positive(ITRED) * 1 - is_zero(IRB) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * LIG2
LIG61DEG = is_positive(ITRED) * is_positive(IAVIM) * is_positive(SEUIL_61 - IAVIM) * 1 - is_positive(INDNMR2) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * is_positive(INDCTX) * LIG2
LIG61NRSUP = is_positive(IBM23) * is_positive(ITRED) * is_positive(IAVIM + NAPCRPAVIM) * is_positive(SEUIL_61 - IAVIM + NAPCRPAVIM) * 1 - is_positive(INDNMR2) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * 1 - is_positive(saisies.get('NRINET', 0)) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
LIG80F = is_positive(is_positive(SEUIL_12 - NAPTIR) * is_positive(NAPTIR) * is_positive(SEUIL_61 - NAPCRP) * positif_ou_nul(IAVIM - SEUIL_61) + is_positive(SEUIL_12 - NAPCRP + NAPTIR) * is_positive(NAPCRP + NAPTIR) * positif_ou_nul(NAPCRP - SEUIL_61) * 1 - is_positive(saisies.get('IRANT', 0)) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * LIG2)
LIGAUCUN = is_positive(positif_ou_nul(IAVIM - SEUIL_61) + positif_ou_nul(NAPCRP - SEUIL_61) * is_zero(TOTNET) * is_zero(NAPT) * 1 - is_positive(IREST) * 1 - is_positive(LIG80F) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * 1 - is_positive(saisies.get('NRINET', 0)) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * LIG2)
LIGDEG61 = is_positive(IRNETBIS) * is_positive(SEUIL_61 - IAMD1) * is_positive(SEUIL_61 - saisies.get('NRINET', 0)) * is_positive(IBM23) * 1 - is_positive(LIG61DEG) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * is_positive(INDCTX) * LIG2
LIGDIPLOI = is_positive(INDREV1A8) * is_positive(is_zero(NATIMP - 1) + is_positive(NAPTEMP)) * is_positive(saisies.get('REVFONC', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * LIG1
LIGDIPLONI = is_positive(INDREV1A8) * is_positive(is_zero(NATIMP) + is_positive(IREST) + 1 - is_positive(NAPTEMP)) * is_positive(saisies.get('REVFONC', 0)) * 1 - is_zero(2 - saisies.get('V_REGCO', 0)) * 1 - is_zero(4 - saisies.get('V_REGCO', 0)) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - LIGDIPLOI * LIG1
LIGHAUTDEG = is_positive(NATIMP - 71) * is_positive(HAUTREVDEG) * LIG2
LIGIDB = INDNIRI * is_zero(IBM23) * is_positive(TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES + NAPCRP) * is_positive(SEUIL_61 - TAXASSUR - IPCAPTAXTOT - TAXLOY - CHRAPRES) * is_positive(SEUIL_61 - NAPCRP) * 1 - is_positive(IRESTIT) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * 1 - is_positive(saisies.get('NRINET', 0)) * LIG2
LIGIINET = LIGSUP * is_positive(NAPT + 0) + is_zero(IINETCALC)
LIGIINETC = LIGSUP * is_zero(NAPT) * is_positive(IINETCALC + 0)
LIGLOYDEG = is_positive(NATIMP - 71) * is_positive(TAXLOYDEG) * LIG2
LIGNIDB = is_zero(IDOM11 - DEC11) * is_positive(SEUIL_61 - TAXASSUR - IPCAPTAXTOT - TAXLOY - CHRAPRES) * is_positive(SEUIL_61 - NAPCRP) * is_positive(TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES + NAPCRP) * is_zero(IRNETBIS) * 1 - is_positive(IRESTIT) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - is_positive(LIG80F) * 1 - is_positive(LIG400RI) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('NRINET', 0)) * 1 - is_positive(saisies.get('IMPRET', 0)) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * LIG2
LIGNIDEG = is_zero(IDRS3 - IDEC) * is_zero(IBM23) * is_positive(SEUIL_61 - TAXASSUR) * is_positive(SEUIL_61 - IPCAPTAXT) * is_positive(SEUIL_61 - TAXLOY) * is_positive(SEUIL_61 - CHRAPRES) * is_positive(SEUIL_12 - IRNET) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGDEG61) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(INDCTX) * LIG2
LIGNIIRAF = is_zero(IAD11) * is_positive(IRESTIT) * 1 - is_positive(INDNIRI) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - positif_ou_nul(NAPTIR) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(1 + is_zero(3 - INDIRPS)) * LIG2
LIGNIIRDEG = is_zero(IDRS3 - IDEC) * is_zero(IBM23) * 1 - is_positive(IRE) * is_zero(TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES + NAPCRP) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIG2501) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0) - SEUIL_12) * 1 - is_positive(saisies.get('NRINET', 0) - SEUIL_12) * is_positive(1 + is_zero(3 - INDIRPS)) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * LIG2
LIGNIRI = INDNIRI * is_zero(IRNETBIS) * is_zero(NATIMP) * is_zero(NAPCRP) * 1 - is_positive(IRE) * 1 - is_positive(LIGIDB) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - is_positive(AVFISCOPTER) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * 1 - is_positive(saisies.get('NRINET', 0)) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * LIG2
LIGNITDEG = is_positive(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET) * positif_ou_nul(IRB2 - SEUIL_61) * positif_ou_nul(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET - SEUIL_12) * is_zero(INDNIRI) * 1 - is_positive(IBM23) * is_positive(1 - is_zero(2 - saisies.get('V_REGCO', 0))) * INDREV1A8 * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * is_positive(INDCTX) * LIG2
LIGNITSUP = positif_ou_nul(TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - SEUIL_61) * is_zero(IDRS2 - IDEC + IREP) * positif_ou_nul(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET - SEUIL_12) * 1 - is_positive(LIG0TSUP) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * 1 - is_positive(INDCTX) * LIG2
LIGNMRR = LIGIINETC * is_positive(saisies.get('V_ANTRE', 0) - saisies.get('V_NONRESTANT', 0) + 0)
LIGNMRS = LIGIINETC * 1 - is_positive(saisies.get('V_ANTRE', 0) - saisies.get('V_NONRESTANT', 0))
LIGPCAPDEG = is_positive(NATIMP - 71) * is_positive(PCAPDEG) * LIG2
LIGPERP = 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * is_positive(PERPINDV + PERPINDC + PERPINDP + PERPINDCV + PERPINDCC + PERPINDCP) * is_positive(PERPINDAFFV + PERPINDAFFC + PERPINDAFFP) * 1 - is_zero(saisies.get('PERP_COTV', 0) + saisies.get('PERP_COTC', 0) + saisies.get('PERP_COTP', 0) + 0) * 1 - INDIMPOS * 1 - is_positive(PERP_COND1 + PERP_COND2) * 1 - is_positive(LIG8FV) * 1 - is_positive(LIG2501) * LIG1 * 1 - V_CNR * LIG2 + 0
LIGPERPI = is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * is_positive(PERPINDV + PERPINDC + PERPINDP + PERPINDCV + PERPINDCC + PERPINDCP) * is_positive(PERPINDAFFV + PERPINDAFFC + PERPINDAFFP) * 1 - is_zero(saisies.get('PERP_COTV', 0) + saisies.get('PERP_COTC', 0) + saisies.get('PERP_COTP', 0) + 0) * 1 - INDIMPOS * 1 - is_positive(PERP_COND1 + PERP_COND2) * 1 - is_positive(LIG8FV) * 1 - is_positive(LIG2501) * LIG1 * 1 - V_CNR * LIG2 + 0
LIGPERPM = 1 - is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * is_positive(PERPINDV + PERPINDC + PERPINDP + PERPINDCV + PERPINDCC + PERPINDCP) * is_positive(PERPINDAFFV + PERPINDAFFC + PERPINDAFFP) * 1 - is_zero(saisies.get('PERP_COTV', 0) + saisies.get('PERP_COTC', 0) + saisies.get('PERP_COTP', 0) + 0) * 1 - INDIMPOS * is_positive(PERP_MUT) * is_positive(PERP_COND1 + PERP_COND2) * 1 - is_positive(LIG8FV) * 1 - is_positive(LIG2501) * LIG1 * 1 - V_CNR * LIG2 + 0
LIGPERPMI = is_positive(saisies.get('PERPIMPATRIE', 0) + 0) * is_positive(PERPINDV + PERPINDC + PERPINDP + PERPINDCV + PERPINDCC + PERPINDCP) * is_positive(PERPINDAFFV + PERPINDAFFC + PERPINDAFFP) * 1 - is_zero(saisies.get('PERP_COTV', 0) + saisies.get('PERP_COTC', 0) + saisies.get('PERP_COTP', 0) + 0) * 1 - INDIMPOS * is_positive(PERP_MUT) * is_positive(PERP_COND1 + PERP_COND2) * 1 - is_positive(LIG8FV) * 1 - is_positive(LIG2501) * LIG1 * 1 - V_CNR * LIG2 + 0
LIGPERPP = is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * 1 - is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * 1 - is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFC) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
LIGPERPV = is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * 1 - is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFC) * 1 - is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
LIGPERPVP = is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * 1 - is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFC) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
LIGPSNIR = is_positive(IAVIM) * is_positive(SEUIL_61 - IAVIM) * is_positive(SEUIL_61 - NAPTIR) * positif_ou_nul(NAPCRP - SEUIL_61) * is_positive(IINET) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) + is_positive(saisies.get('V_NOTRAIT', 0) - 20) * 1 - is_positive(LIG400RI) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGNIDB) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * 1 - is_positive(saisies.get('NRINET', 0)) * LIG2
LIGRESINF50 = is_positive(is_positive(IND_REST50) * is_positive(IREST) + is_positive(RECUM) * 1 - positif_ou_nul(RECUM - SEUIL_8)) * is_positive(SEUIL_8 - IRESTIT) * is_zero(LIGRESINF)
LIGREVDEG = INDREV1A8 * is_positive(saisies.get('REVFONC', 0)) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * is_positive(INDCTX) * LIG2
LIGREVSUP = INDREV1A8 * is_positive(saisies.get('REVFONC', 0)) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * is_positive(saisies.get('V_NOTRAIT', 0) - 20) * 1 - is_positive(INDCTX) * LIG2
LIGRIDB = is_positive(INDNIRI * is_zero(IBM23) * positif_ou_nul(TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES - SEUIL_61) + positif_ou_nul(NAPCRP - SEUIL_61) * positif_ou_nul(NAPTIR + NAPCRP - SEUIL_12) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * 1 - is_positive(saisies.get('NRINET', 0)) * LIG2)
LIGTAXADEG = is_positive(NATIMP - 71) * is_positive(TAXADEG) * LIG2
MTAP = max(0, saisies.get('V_ACO_MTAP', 0) * is_zero(2 - saisies.get('FLAG_ACO', 0)) + WMTAP * 1 - is_zero(2 - saisies.get('FLAG_ACO', 0)) * 1 - INDTXMIN * 1 - INDTXMOY + saisies.get('V_ACO_MTAP', 0) * is_zero(2 - saisies.get('FLAG_ACO', 0)) + WMTAP * 1 - is_zero(2 - saisies.get('FLAG_ACO', 0)) * is_positive(INDTXMIN + INDTXMOY) * is_positive(saisies.get('V_ACO_MTAP', 0) * is_zero(2 - saisies.get('FLAG_ACO', 0)) + WMTAP * 1 - is_zero(2 - saisies.get('FLAG_ACO', 0)) - SEUIL_ACOMPTE))
NAPALEG = abs(NAPT)
PPENATIMPA = is_positive(PPETOTX - PPERSA) * is_positive(IINET - PPETOTX + PPERSA - ICREREVET) + is_positive(PPETOTX - PPERSA - PPERESTA)
LIG400F = INDNMR1 * is_positive(IAMD2) * 1 - INDNIRI * positif_ou_nul(NAPTIR) * 1 - is_positive(LIG400RI) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGNIDB) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * 1 - is_positive(saisies.get('NRINET', 0)) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * LIG2
LIGCBAIL = is_zero(IDOM11 - DEC11) * 1 - is_positive(IBM23) * positif_ou_nul(TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES + NAPCRP - SEUIL_61) * positif_ou_nul(NAPTIR + NAPCRP - SEUIL_12) * 1 - is_positive(LIGNIDB) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * 1 - is_positive(saisies.get('NRINET', 0)) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * LIG2
LIGDEG12 = is_positive(IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET) * is_positive(SEUIL_12 - IRNET - TAXANET - PCAPNET - TAXLOYNET - HAUTREVNET) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGNIDEG) * 1 - is_positive(LIGDEG61) * 1 - is_positive(LIG61DEG) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * is_positive(INDCTX) * LIG2
LIGIRNPS = is_positive(positif_ou_nul(IAVIM - SEUIL_61) * positif_ou_nul(NAPTIR - SEUIL_12) * is_positive(IBM23) + is_positive(IRESTIT + 0)) * is_positive(SEUIL_61 - NAPCRP) * is_positive(NAPCRP) * 1 - is_positive(LIG400RI) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2) * 1 - is_positive(LIGNIDB) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * 1 - is_positive(saisies.get('NRINET', 0)) * LIG2
LIGNIIR = is_zero(IRNETBIS) * is_zero(saisies.get('NRINET', 0) + 0) * is_zero(NATIMP + 0) * is_zero(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + NAPCRP + 0) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - is_positive(IRESTIT) * 1 - is_positive(IDEGR) * 1 - is_positive(LIGIDB) * 1 - is_positive(LIGNIRI) * 1 - is_positive(LIG80F) * 1 - is_positive(LIG400RI) * 1 - is_positive(LIG400F) * 1 - is_positive(LIGAUCUN) * 1 - is_positive(LIG2141) * 1 - is_positive(LIG2501) * 1 - is_positive(LIG8FV) * 1 - is_positive(LIGNIDB) * 1 - is_zero(saisies.get('V_REGCO', 0) - 2 + 0) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(saisies.get('IMPRET', 0)) * 1 - is_positive(saisies.get('NRINET', 0)) * is_positive(20 - saisies.get('V_NOTRAIT', 0)) * LIG2
LIGNIRIAF = INDNIRI * is_zero(IBM23) * is_positive(is_positive(IRESTIT) + is_positive(saisies.get('V_NOTRAIT', 0) - 20)) * 1 - is_positive(LIGIDB) * 1 - is_positive(LIGRIDB) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - is_positive(saisies.get('IMPRET', 0)) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * LIG2
LIGPERPC = is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFC) * 1 - is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * 1 - is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
LIGPERPCP = is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFV) * 1 - is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
LIGPERPFAM = is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFC) * is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
LIGPERPMAR = is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFC) * 1 - is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
PPEIMPA = is_positive(PPENATIMPA) * positif_ou_nul(PPERESTA) * PPETOTX - PPERSA - PPERESTA

