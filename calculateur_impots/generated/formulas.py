RCEL_COM = is_positive(CELLIERNP + CELLIERNT) * arr(ACELCOM * TX36 / 100) + is_positive(CELLIERNR + CELLIERNS) * arr(ACELCOM * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INDPLAF2 = is_positive(RNIDOM2 - TOTALPLAF2 - TOTALPLAFA)
ZIPQRWA1 = is_positive(TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQRWA / TETONEQUO1) + 1 - is_positive(TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQRWB1
REPMN = max(0, INVOMENTMN - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5)) * 1 - ART1731BIS + max(0, INVOMENTMN - max(0, RCOLENT - REPENT5)) * ART1731BIS * 1 - V_CNR
RCELREPYI_1 = max(min(ACELREPYI, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TEXSPBC = TEXTSC + TEXPRC
INVRETPL = NINVRETPL * 1 - V_CNR
TMIB_PRESAV = min(MIBPRESV + MIBNPPRESV, max(MIN_MBIC, arr(MIBPRESV + MIBNPPRESV * TX_MIBPRES / 100)))
ABPR4 = arr(1 - IND_APB4 * min(APB4, PL_PB * APB4 / sum([APBV * 1 - IND_APBV, APBC * 1 - IND_APBC, APB1 * 1 - IND_APB1, APB2 * 1 - IND_APB2, APB3 * 1 - IND_APB3, APB4 * 1 - IND_APB4])) + IND_APB4 * APB4)
ZIGINT2 = is_positive(RETRSE2) * LIG2
BSURV = min(RDRESU, PLAF_RSURV + PLAF_COMPSURV * EAC + V_0DN + PLAF_COMPSURVQAR * V_0CH + V_0DP)
BASE7UVG = max(0, min(REPFOR + REPSINFOR + REPFOR1 + REPSINFOR1 + REPSINFOR2, PLAFRED_FORTRA) - REPFOR + REPSINFOR + REPSINFOR1) * 1 - V_CNR
# TODO INDP
# TODO IREST
REVRCM = _2RCM + _3RCM + _4RCM + _5RCM + _6RCM + _7RCM
IN52 = max(IS512, IS522 - PLA)
APB4 = max(PLR4, EXPR4 * TX_DEDPER / 100)
INDEFTSV = positif_ou_nul(TSBV - FRDV)
INVRETKS = NINVRETKS * 1 - V_CNR
LIGIREXIT = is_positive(PVIMPOS + CODRWB) * is_positive(PVSURSI + CODRWA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
RLOC50 = max(min(INVRETRL * 1 - INDPLAF + INVRETRLA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49])), 0) * 1 - V_CNR
RETRESIVIEU_1 = arr(arr(ACODIM / 9) * TX25 / 100) + arr(arr(ACODIW / 9) * TX25 / 100)
# TODO TEFFN
CREREVET = min(arr(BPTP3 + BPTPD + BPTPG * TX16 / 100), arr(CIIMPPRO * TX_CREREVET / 100)) + min(arr(BPTP19 * TX19 / 100), arr(CIIMPPRO2 * TX19 / 100))
# TODO SPEDREPP
TRPQFCM = inf(TGLFCM / COTFC)
REPLNOU = RCODOU8 + RCODOU1 * 7 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIPQPRRANT11 = is_positive(sum([TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPRR1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTV1 - ZIPQPRRANTC1
TEGLRVOTOT = TEGLRVO + TEGLRVO5 + TEGLRVO6 + TEGLRVO7
PS_RVORIGND = ESFP
CIRDS = min(RDSC, arr(IPPNCS + REVCSXA + REVCSXB + REVCSXC + REVCSXD + REVCSXE + COD8XI + COD8XJ * T_RDS / 100))
BARSREVP = BAHREP + _4BAHREP
ABATOT4 = ABADO4 + ABAGU4
INVRETARA = min(NINVRETAR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA)) * 1 - V_CNR
LIGABDETM = is_positive(ABDETMOINS) * LIG1 * LIG2
ZIPQPALIM42 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPALIM4 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - sum([ZIPQPALIMV2, ZIPQPALIMC2, ZIPQPALIM12, ZIPQPALIM22, ZIPQPALIM32])
LIGISFNOPEN = present(ISF5) * is_positive(DISFBASE) * 1 - is_positive(PISF) * 1 - is_positive(LIGISFCOR) * LIGISF * 1 - is_positive(ANNUL2042)
TERPQPRRZ4 = RPQPRRZ4 * 1 - is_positive(INDTEFF) + TRPQPRRZ4 * is_positive(INDTEFF)
REPRG = max(0, INVOMENTRG - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU)) * 1 - ART1731BIS + max(0, INVOMENTRG - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU)) * ART1731BIS * 1 - V_CNR
TPR2 = TSN2 + PRN2
LIGREPRUP = is_positive(REPRU + REPSP + REPAP) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
GLPRRTOT = sum([GLPRRV + GLPRRZV, GLPRRC + GLPRRZC, GLPRR1 + GLPRRZ1, GLPRR2 + GLPRRZ2, GLPRR3 + GLPRRZ3, GLPRR4 + GLPRRZ4])
IPQT2 = IMT12 - IPHQ2
# TODO MIBDREPP
REPPX = max(0, INVOMRETPX - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS)) * 1 - ART1731BIS + max(0, INVOMRETPX - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS)) * ART1731BIS * 1 - V_CNR
# TODO HAUTREVDEG
ABTS1DJ = arr(REP102 * TSHALLO2 / TSB2)
LIGDEFBA5 = is_positive(DEFBA5) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
FPTV = max(FRDV, _10MINSV)
RSN_CR = BSNCR * TX18 / 100
LIGMIBDREPP = is_positive(MIBDREPP) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
SHBARFR = ESFP + TSPR + RCM + BIN + BNN + PLOCNETF + NPLOCNETF + PVBAR + RRFI + 0 * 1 - V_INDTEO + RRFTEO + 0 * V_INDTEO
GLPRRZ3 = is_positive(PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2Z3 / TOTALQUOHT) + 1 - is_positive(PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV - GLPRRZC - GLPRRZ1 - GLPRRZ2
DS022 = max(QF022 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF022 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF022 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF022 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF022 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
TERPQ4C = RPQ4C * 1 - is_positive(INDTEFF) + TRPQ4C * is_positive(INDTEFF)
PREP10P = PIND_10P * PD10MP + 1 - PIND_10P * PFPTP
RETLOCIDEFG = arr(arr(ACODIE / 9) * TX18 / 100) + arr(arr(ACODIF / 9) * TX18 / 100) + arr(arr(ACODID / 9) * TX11 / 100) + arr(arr(ACODIG / 9) * TX11 / 100) * 1 - ART1731BIS + min(ALOCIDEFG_1, ALOCIDEFG1731 + 0) * ART1731BIS
TTSN1CC = max(0, SALEXT1 - COD1CD) - TABTS1CC
ACELREPHG = CELREPHG * 1 - ART1731BIS + min(CELREPHG, max(ACELREPHG_P + ACELREPHGP2, ACELREPHG1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REPCICE = abs(COD8UW - CICOMPEMPL)
BCIAQCUL = arr(CIAQCUL * TX_CIAQCUL / 100)
RPQTSREMPV = inf(GLTSREMPV / REMPLANBV)
INVRETPB = min(arr(NINVRETPB * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF)) * 1 - V_CNR
RCELREP_HT_R = is_positive(CELREPHT) * arr(CELREPHT * TX25 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IND_IRNMR = (1 - INDCTX) if (CODINI == 8 and NATIMP == 0 and V_CR2 == 0) else 0
INVRETQB = NINVRETQB * 1 - V_CNR
INVRETAGA = min(arr(NINVRETAG * TX375 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA)) * 1 - V_CNR
ZIPQTS45 = is_positive(TEGLTSREMPTOTM) * arr(IQUOTOT5 * TERPQTS4M / TETONEQUOM1) + 1 - is_positive(TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQPRRZ5TOT - ZIPQTSV5 - ZIPQTSC5 - ZIPQTS15 - ZIPQTS25 - ZIPQTS35
IPQPRRZ22 = ZIPQPRRZ22 * CODNDZ
GLRF1 = is_positive(_3REVF) * arr(TONEQUOHT * _2REVF / TOTALQUOHT) + 1 - is_positive(_3REVF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMTOT
INDEFTS3 = positif_ou_nul(TSB3 - FRD3)
PERPPLAFIMPP = is_positive(PERPIMPATRIE) * PERPPLAFCOMP + PERPPLAFP + 1 - is_positive(PERPIMPATRIE) * 0
INVRETAG = min(arr(NINVRETAG * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB)) * 1 - V_CNR
LIG80F = is_positive(is_positive(SEUIL_12 - NAPTIR) * is_positive(NAPTIR) * is_positive(SEUIL_61 - NAPCRP) * positif_ou_nul(IAVIM - SEUIL_61) + is_positive(SEUIL_12 - NAPCRP + NAPTIR) * is_positive(NAPCRP + NAPTIR) * positif_ou_nul(NAPCRP - SEUIL_61) * 1 - is_positive(IRANT) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(20 - V_NOTRAIT) * 1 - null(V_REGCO - 2) * LIG2)
PLOCNETV = PLOCCGAV + PLOCV
NRPATNAT2 = max(min(APATNAT2, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT1), 0)
TEGLF1 = GLF1 * 1 - is_positive(INDTEFF) + TGLF1 * is_positive(INDTEFF)
ASURV = BSURV * 1 - ART1731BIS + min(BSURV, max(ASURV_P + ASURVP2, ASURV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
BCEL_HJK = arr(min(CELLIERHJ + CELLIERHK + 0, LIMCELLIER) / 9)
TTSNN3 = is_positive(TTS3) * arr(TTS3 * TTSBN3 / TEXTS3) + 1 - is_positive(TTS3) * TTS3
VARIPTEFN = max(0, IPTEFN * 1 - is_positive(SOMMEMOND_2) * 1 - PREM8_11 - DEFZU * is_positive(SOMMEMOND_2) * 1 - PREM8_11 - DEFZU * PREM8_11) * present(IPTEFN)
SDM = max(0, ABTMA - max(0, RNG - ABTPA))
RPQRCMGO = inf(GLRCMGO / RESTUCNB)
NINVRETKT = max(min(INVOMENTKT, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI), 0) * 1 - V_CNR
RLOC03 = max(min(INVRETLG * 1 - INDPLAF + INVRETLGA * INDPLAF, RRILOC - RLOC01 - RLOC02), 0) * 1 - V_CNR
# TODO NMAJPCAP1
INVRETAURA = min(NINVRETAUR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA - INVRETAQRA - INVRETAVRA - INVRETBBRA - INVRETAKRA - INVRETAPRA)) * 1 - V_CNR
REPLOCIV = RETCODIV - RCODIV * is_positive(INVNPROF2 + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BAHQV = BANV + BAMV + BAFORV
TMIB_AUTOAPV = TMIB_APV - TMIB_PRESAV
PTOIR = arr(BTO * COPETO / 100) + arr(BTO * COPETO / 100) * is_positive(null(CMAJ - 10) + null(CMAJ - 17)) + arr(BTOINR * TXINT / 100)
LIG1546 = is_positive(PRODOM + PROGUY) * 1 - is_positive(V_EAD + V_EAG) * LIG2
DDOMSOC1 = INVSOCNRET + INVOMSOCKH + INVOMSOCKI + INVSOC2010 + INVOMSOCQU + INVLOGSOC + INVOMSOCQJ + INVOMSOCQS + INVOMSOCQW + INVOMSOCQX + CODHRA + CODHRB + CODHRC + CODHRD
IPROGUY6 = arr(ID16 * PROGUY / RG)
_10MINSP = _10MINS1 + _10MINS2 + _10MINS3 + _10MINS4
CHRTHEO21 = arr(max(0, HRBASELISSE - LIMHR2 * 1 + BOOL_0AM * TXHR2 / 100))
TEXSPB3 = TEXTS3 + TEXPR3
ZIGGAINLEV = is_positive(CVNSALC) * is_positive(CVNSALAV + CVNSALAC) * LIG1 * LIG2
NINVRETPJ = max(min(INVOMRETPJ, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF), 0) * 1 - V_CNR
RLOC42 = max(min(INVRETPAR * 1 - INDPLAF + INVRETPARA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41])), 0) * 1 - V_CNR
DCEL2012 = CELSOMJ
TPRNNC = TEXPRC - TAPRC
TAXASSUR = TAXASSURV + TAXASSURC
PLANT = PLAQAR + PLAF_DEMIPART * 2 * NBPT - NBQAR - 1 - BOOL_0AM - BOOL_0AZ * V_0AV - 2 * PLAF_DEMIPART - PLAF_COMPPART * 2 * NPS * V_0AC + V_0AD + V_0AV * 1 - is_positive(V_0BT) * min(1, EAC) - PLAF_DEMIPART - PLAFCDPART * 1 - BOOL_0AM * 2 * NSA * 1 - is_positive(V_0AW) * positif_ou_nul(AGV - LIM_AGE_LET_S) * 1 - V_0AG
TGLPRRZ4 = is_positive(REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2Z4 / TOTALQUO) + 1 - is_positive(REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV - TGLPRRZC - TGLPRRZ1 - TGLPRRZ2 - TGLPRRZ3
ABDOMDAJ = is_positive(CODDAJ) * is_positive(CODEAJ + GLD1V + GLD2V + GLD3V) * arr(REP10V * CODDAJ / TSBV) + 1 - is_positive(CODEAJ + GLD1V + GLD2V + GLD3V) * max(0, REP10V - ABTSV) + 0
IPQTS21 = ZIPQTS21 * CARTSNBAP2
INVRETUA = min(NINVRETUA, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ)) * 1 - V_CNR
PPEPEXOC = is_positive(PPE_AVRPRO1C + 0) + is_positive(SALEXTC + 0) + 4 * is_positive(PPENJC + PPEACC + 0) + 8 * is_positive(PPEXTC + PPETPC + 0)
BTP2 = PEA * 1 - is_positive(IPVLOC)
RRI1_1 = IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV * 1 - ART1731BIS + min(IDOM111731 + 0, IDOM11) - min(DEC111731 + 0, DEC11) - min(RCOTFOR1731 + 0, RCOTFOR) - min(RREPA1731 + 0, RREPA) - min(RFIPDOM1731 + 0, RFIPDOM) - min(RAIDE1731 + 0, RAIDE) - min(RDIFAGRI1731 + 0, RDIFAGRI) - min(RFORET1731 + 0, RFORET) - min(RFIPC1731 + 0, RFIPC) - min(RCINE1731 + 0, RCINE) - min(RRESTIMO1731 + 0, RRESTIMO) - min(RSOCREPR1731 + 0, RSOCREPR) - min(RRPRESCOMP1731 + 0, RRPRESCOMP) - min(RHEBE1731 + 0, RHEBE) - min(RSURV1731 + 0, RSURV) - min(RINNO1731 + 0, RINNO) - min(RSOUFIP1731 + 0, RSOUFIP) - min(RRIRENOV1731 + 0, RRIRENOV) * ART1731BIS
NPLOCNSV = NPLOCV - NPLOCSV
NINVRETQFR = NINVRETQF - arr(NINVRETQF * TX50 / 100) * 1 - V_CNR
RCODOU8 = arr(min(PLAF_RESINEUV, COD7OU) * TX11 / 100) - 8 * RCODOU1
NRCELREPGU = max(min(ACELREPGU, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB])), 0)
REPINVMEUBLE = RRESINEUV1 + RRESINEUV2 + RRESINEUV3 + RRESINEUV4 + RRESINEUV5 + RRESINEUV6 + RRESINEUV7 + RRESINEUV8
RENT25 = max(min(INVRETABR * 1 - INDPLAF + INVRETABRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24])), 0) * 1 - V_CNR
IPQRCMTR2 = ZIPQRCMTR2 * INTERENB
NINVRETUA = max(min(CODHUA, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ), 0) * 1 - V_CNR
XTPS101 = arr(XEXTS1 * TX_DEDFORFTS / 100)
TEGL4TVC = GL4TVC * 1 - is_positive(INDTEFF) + TGL4TVC * is_positive(INDTEFF)
NINVRETQX = max(min(INVOMSOCQX, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW), 0) * 1 - V_CNR
ZIGPENARSE4 = is_positive(PRSE4) * is_positive(NMAJRSE41) * LIG2
LIG2200 = is_positive(IDEGR) * positif_ou_nul(IDEGR - SEUIL_8) * 1 - LIGPS * TYPE2
BDCSG3VA = is_positive(ABDETPLUS) * max(0, RDRV + max(0, RDRCM1) + RDRFPS + RDNP + PVBAR3VA - IPPNCS) * 1 - V_CNR * 1 - is_positive(present(RE168) + present(TAX1649))
CRICH = IPRECH * 1 - is_positive(RE168 + TAX1649)
INVRETPN = min(arr(NINVRETPN * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV)) * 1 - V_CNR
PPEPRIME3 = arr(PPENARPRIME3)
LIGMETART = is_positive(CREARTS) * LIG1 * LIG2
LIGRCELHJK = is_positive(RIVCELHJK1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
PPE_COEFFCOND1 = 1 - PPE_BOOL_TP1 * null(PPENBJ - 360) * PPE_COEFF1 + 1 - null(PPENBJ - 360) * PPENBJ * 1820 / 360 / PPENHP1 + PPEXT1 * is_positive(PPE_SALAVDEF1 + 0) + PPENJP * is_positive(PPE_AVRPRO1P + 0) * 1820 / 360
RTOURREP_1 = max(min(arr(ATOURREP * TX_REDIL25 / 100), RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR), 0)
GLTSREMPCM = is_positive(TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2REMPC / TOTALQUOHT) + 1 - is_positive(TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM
NINVRETOD = max(min(CODHOD, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW), 0) * 1 - V_CNR
ZIPQRCMTS1 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQRCMTS / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCMDC1 - ZIPQRCMFU1 - ZIPQRCMCH1 - ZIPQRCMTR1 - ZIPQRCMGO1
BCVNSAL = CVNSALAV + CVNSALAC + GLDGRATV + GLDGRATC * 1 - is_positive(present(TAX1649) + present(RE168))
TERPQ4M = RPQ4M * 1 - is_positive(INDTEFF) + TRPQ4M * is_positive(INDTEFF)
GL4M = is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * REV4 / TOTALQUOHT) + 1 - is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM - GLRVGM - GL1M - GL2M - GL3M
TOTALPLAF3 = INVRETRL + INVRETRQ + INVRETRV + INVRETNV + INVRETRK + INVRETRP + INVRETRU + INVRETNU + INVRETRM + INVRETRR + INVRETRW + INVRETNW + INVRETRO + INVRETRT + INVRETRY + INVRETNY + INVRETSL + INVRETSQ + INVRETSV + INVRETTA + INVRETSK + INVRETSP + INVRETSU + INVRETSZ + INVRETSM + INVRETSR + INVRETSW + INVRETTB + INVRETSO + INVRETST + INVRETSY + INVRETTD + INVRETAL + INVRETAQ + INVRETAV + INVRETBB + INVRETAK + INVRETAP + INVRETAU + INVRETBA + INVRETAM + INVRETAR + INVRETAW + INVRETBE + INVRETAO + INVRETAT + INVRETAY + INVRETBG + INVRETOT + INVRETOU + INVRETOV + INVRETOW + INVRETOG + INVRETOX + INVRETOY + INVRETOZ + INVRETUD + INVRETUE + INVRETUF + INVRETUG + INVRETRLR + INVRETRQR + INVRETRVR + INVRETNVR + INVRETRKR + INVRETRPR + INVRETRUR + INVRETNUR + INVRETSLR + INVRETSQR + INVRETSVR + INVRETTAR + INVRETSKR + INVRETSPR + INVRETSUR + INVRETSZR + INVRETALR + INVRETAQR + INVRETAVR + INVRETBBR + INVRETAKR + INVRETAPR + INVRETAUR + INVRETBAR
GL4VC = arr(TONEQUOHT * REV4VC / TOTALQUOHT)
TABTSRDP = max(0, TREP102 - TABTS1DJ - TABTS1DC - TABTS1DP - TABTSRDJ)
LIGREPEST = is_positive(REPEST) * LIG1 * LIG2 * 1 - V_CNR
T10MINSC = max(min(TTSBC, TDEDMINC), TDFNC)
RLOC53 = max(min(INVRETNV * 1 - INDPLAF + INVRETNVA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52])), 0) * 1 - V_CNR
GLPRRTOTM = sum([GLPRRVM + GLPRRZVM, GLPRRCM + GLPRRZCM, GLPRR1M + GLPRRZ1M, GLPRR2M + GLPRRZ2M, GLPRR3M + GLPRRZ3M, GLPRR4M + GLPRRZ4M])
LIGNONREC = is_positive(V_NONMERANT + 0) * 1 - APPLI_OCEANS
RSOC27 = arr(max(min(INVRETQJR * 1 - INDPLAF + INVRETQJRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26])), 0)) * 1 - V_CNR
ABTS1BP = is_positive(ALLOC) * is_positive(BPCOSAC + GLDGRATC + CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * arr(REP10C * ALLOC / TSBC) + 1 - is_positive(BPCOSAC + GLDGRATC + CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * max(0, REP10C - ABTS1BJ)
BCIFORETUT = max(0, min(SINISFORET, max(0, PLAF_FOREST1 * 1 + BOOL_0AM - BCIFORETUA - BCIFORETUB - BCIFORETUP))) * 1 - V_CNR
TFRDP = 1 - is_positive(PREM8_11) * FRNP + COD1CE + COD1DE + COD1EE + COD1FE * is_positive(FRNP + COD1CE + COD1DE + COD1EE + COD1FE - T10MINSP) + null(4 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRNP + COD1CE + COD1DE + COD1EE + COD1FE, TFRDPROVP) + null(5 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRNP + COD1CE + COD1DE + COD1EE + COD1FE, max(TFRDPROVPP2, TFRDPROVP1731))
LIG2052 = 1 - is_positive(V_ANTREIR + 0) * 1 - APPLI_OCEANS
ZIPQPRR12 = is_positive(sum([TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPRR1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRV2 - ZIPQPRRC2
RNIDOM2 = arr(RNG + TTPVQ * TX13 / 100)
TERPQTSV = RPQTSV * 1 - is_positive(INDTEFF) + TRPQTSV * is_positive(INDTEFF)
EXSPBV = EXTSV + EXPRV
APPLI_GP = 0
RCODIM_1 = max(min(RETCODIM, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RCODIW), 0)
REPRW = max(0, INVOMENTRW - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR)) * 1 - ART1731BIS + max(0, INVOMENTRW - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR)) * ART1731BIS * 1 - V_CNR
ZIGPENARSE24 = is_positive(PRSE2) * is_positive(NMAJRSE24) * LIG2
RLOC108 = max(min(INVRETSJ * 1 - INDPLAF + INVRETSJA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103, RLOC104, RLOC105, RLOC106, RLOC107])), 0) * 1 - V_CNR
ZIPQTSV2 = is_positive(sum([TEGLTSC, TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * arr(IQUOTOT2 * TERPQTSV / TETONEQUO1) + 1 - is_positive(sum([TEGLTSC, TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQPRRZ2TOT
DPATNAT1 = PATNAT1
# TODO INDTXMOY
RGEPAHA = BGEPAHA * TX25 / 100 * 1 - V_CNR
REPQJ = max(0, INVOMSOCQJ - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC)) * 1 - ART1731BIS + max(0, INVOMSOCQJ - max(0, RDOMSOC1 - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC)) * ART1731BIS * 1 - V_CNR
TTSNEBJ = CODEBJ - TABDOMEBJ
RLOC57 = max(min(INVRETRK * 1 - INDPLAF + INVRETRKA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56])), 0) * 1 - V_CNR
RRISUP = RRI1 - RLOGDOM - RTOURREP - RTOUHOTR - RTOUREPA - RCOMP - RCREAT - RRETU - RDONS - RCELTOT - RLOCNPRO - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RPATNATOT
NINVRETSKR = NINVRETSK - arr(NINVRETSK * TX4737 / 100) * 1 - V_CNR
GLF2M = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENF2 / TOTALQUOHT) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFVM - GLFCM - GLF1M
RSOC38 = arr(max(min(INVRETRDR * 1 - INDPLAF + INVRETRDRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32, RSOC33, RSOC34, RSOC35, RSOC36, RSOC37])), 0)) * 1 - V_CNR
RCOLENT_1 = 1 - V_INDTEO * sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) + sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118, RLOC119, RLOC120, RLOC121, RLOC122, RLOC123, RLOC124]) + V_INDTEO * RLOC01 + RLOC07 + RLOC18 + RLOC19 + RLOC45 + RLOC46 + arr(V_RLOC03 + V_RLOC06 * TX50 / 100) + arr(V_RLOC02 + V_RLOC05 * TX60 / 100) + arr(V_RLOC10 + V_RLOC16 * TX50 / 100) + arr(V_RLOC08 + V_RLOC14 * TX60 / 100) + arr(V_RLOC25 + V_RLOC40 * TX50 / 100) + arr(V_RLOC20 + V_RLOC35 * TX60 / 100) + arr(V_RLOC54 + V_RLOC82 * TX50 / 100) + arr(V_RLOC47 + V_RLOC75 * TX60 / 100) + arr(V_RLOC27 + V_RLOC42 * 5263 / 10000) + arr(V_RLOC22 + V_RLOC37 * 625 / 1000) + arr(V_RLOC57 + V_RLOC85 * 5263 / 10000) + arr(V_RLOC50 + V_RLOC78 * 625 / 1000) + arr(V_RLOC11 + V_RLOC17 * TX50 / 100) + arr(V_RLOC09 + V_RLOC15 * 60 / 100) + arr(V_RLOC26 + V_RLOC41 * 50 / 100) + arr(V_RLOC21 + V_RLOC36 * 60 / 100) + arr(V_RLOC55 + V_RLOC83 * 50 / 100) + arr(V_RLOC48 + V_RLOC76 * 60 / 100) + arr(V_RLOC28 + V_RLOC43 * 5263 / 10000) + arr(V_RLOC23 + V_RLOC38 * 625 / 1000) + arr(V_RLOC58 + V_RLOC86 * 5263 / 10000) + arr(V_RLOC51 + V_RLOC79 * 625 / 1000) + arr(V_RLOC95 + V_RLOC115 * 5263 / 10000) + arr(V_RLOC89 + V_RLOC113 * 625 / 1000) + arr(V_RLOC97 + V_RLOC121 * 5263 / 10000) + arr(V_RLOC91 + V_RLOC117 * 625 / 1000) + arr(V_RLOC29 + V_RLOC44 * 5263 / 10000) + arr(V_RLOC24 + V_RLOC39 * 625 / 1000) + arr(V_RLOC56 + V_RLOC84 * 5263 / 10000) + arr(V_RLOC49 + V_RLOC77 * 625 / 1000) + arr(V_RLOC59 + V_RLOC87 * 5263 / 10000) + arr(V_RLOC52 + V_RLOC80 * 625 / 1000) + arr(V_RLOC96 + V_RLOC116 * 5263 / 10000) + arr(V_RLOC90 + V_RLOC114 * 625 / 1000) + arr(V_RLOC98 + V_RLOC122 * 5263 / 10000) + arr(V_RLOC92 + V_RLOC118 * 625 / 1000) + arr(V_RLOC60 + V_RLOC88 * 5263 / 10000) + arr(V_RLOC53 + V_RLOC81 * 625 / 1000) + arr(V_RLOC99 + V_RLOC123 * 5263 / 10000) + arr(V_RLOC93 + V_RLOC119 * 625 / 1000) + arr(V_RLOC100 + V_RLOC124 * 5263 / 10000) + arr(V_RLOC94 + V_RLOC120 * 625 / 1000) * 1 - V_CNR
DCELREPHF = CELREPHF
PRNNC = EXPRC - APRC
RILMJV = max(0, RILMJV_1 * 1 - ART1731BIS + min(RILMJV_1, max(RILMJV_P + RILMJVP2, RILMJV1731 + 0) * 1 - PREM8_11) * ART1731BIS)
LIGREVSUP = INDREV1A8 * is_positive(REVFONC) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * is_positive(V_NOTRAIT - 20) * 1 - is_positive(INDCTX) * LIG2
TSBN2 = TSHALLO2 + ALLO2
NINVRETRV = max(min(INVOMENTRV, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ), 0) * 1 - V_CNR
IMPFHQANT1 = 1 - is_positive(VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS) * EXO1 * arr(IDANT11 * IPQANT01 / IPQANT1)
LIGREPLH = is_positive(REPLH) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
ITOTDOM4 = IMETRO4 + ISNETDAJ4 + ISNETEAJ4
ZIPQPALIM45 = is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPALIM4M / TETONEQUOM1) + 1 - is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - sum([ZIPQPALIMV5, ZIPQPALIMC5, ZIPQPALIM15, ZIPQPALIM25, ZIPQPALIM35])
GLNAV3C = max(GLD3C - ABGL3C, 0) * INDEFTSC
MIB_1AC = max(0, MIB_P1AC + MIB_NP1AC)
LIGCELGX = is_positive(DCELREPGX) * LIG1 * LIG2
IPQANT1001 = IPQANTRWB + IPQANTRWA + IPQANTRVG + sum([IPQANT11, IPQANT21, IPQANT31, IPQANT41]) + sum([IPQFANTV1, IPQFANTC1, IPQFANT11, IPQFANT21, IPQFANT31, IPQFANT41]) + sum([IPQPALIMANTV1, IPQPALIMANTC1, IPQPALIMANT11, IPQPALIMANT21, IPQPALIMANT31, IPQPALIMANT41]) + sum([IPQTSANTV1, IPQTSANTC1, IPQTSANT11, IPQTSANT21, IPQTSANT31, IPQTSANT41]) + sum([IPQTSREMPV1, IPQTSREMPC1, IPQTSREMP11, IPQTSREMP21, IPQTSREMP31, IPQTSREMP41]) + IPQRFANT11 + IPQRFANT21 + sum([IPQPRRANTV1 + IPQPRRANTZV1, IPQPRRANTC1 + IPQPRRANTZC1, IPQPRRANT11 + IPQPRRANTZ11, IPQPRRANT21 + IPQPRRANTZ21, IPQPRRANT31 + IPQPRRANTZ31, IPQPRRANT41 + IPQPRRANTZ41]) + IPQRCMDCANT1 + IPQRCMFUANT1 + IPQRCMCHANT1 + IPQRCMTSANT1 + IPQRCMGOANT1 + IPQRCMTRANT1 + IPQRVOANT1 + IPQRVO5ANT1 + IPQRVO6ANT1 + IPQRVO7ANT1
DEPLOCV = LOCPROCGAV - LOCDEFPROCGAV + LOCPROV - LOCDEFPROV
LIGNMAJPCAP1 = TYPE2 * is_positive(NMAJPCAP1)
INDTRAIT = null(5 - V_IND_TRAIT)
PVBARPS = max(0, BPVRCM + COD3SG + COD3SL + ABDETPLUS + ABIMPPV + CODRVG - DPVRCM + COD3SH + COD3SM + ABDETMOINS + ABIMPMV) + PVTITRESOC
TEGLRVO5M = GLRVO5M * 1 - is_positive(INDTEFF) + TGLRVO5M * is_positive(INDTEFF)
RIVCELJBGL3 = RIVCELJBGL1
LIGCELHW = is_positive(DCELREPHW) * LIG1 * LIG2
RENT16 = max(min(INVRETAR * 1 - INDPLAF + INVRETARA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15])), 0) * 1 - V_CNR
ZIPQRVO5TOT = ZIPQRVO5 + ZIPQRVO55 + ZIPQRVO65 + ZIPQRVO75
TFPTV = max(TFRDV, T10MINSV)
RCEL_HM = is_positive(CELLIERHM) * arr(ACELHM * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
GLPRRZ3M = is_positive(PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2Z3 / TOTALQUOHT) + 1 - is_positive(PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM - GLPRRZCM - GLPRRZ1M - GLPRRZ2M
CICSGAPS = min(CSGCAPS, arr(IPPNCS * T_CSG / 100))
RINVTPME12 = max(0, COD7CQ - max(0, LIM_TITPRISE * 1 + BOOL_0AM - min(BSNCL + REPSNO2 + REPSNO1 + REPSNON + PETIPRISE, LIM_SOCNOUV2 * 1 + BOOL_0AM))) * 1 - V_CNR
IPQRVOANT1 = ZIPQRVOANT1 * RENTAXNB
RFG = arr(BRFG * TX_REDGARD / 100) * 1 - V_CNR
NINVRETAAR = NINVRETAA - arr(NINVRETAA * TX4737 / 100) * 1 - V_CNR
DFOREST = FORTRA + RDFOREST
ZIPQPRR2TOT = sum([ZIPQPRRV2, ZIPQPRRC2, ZIPQPRR12, ZIPQPRR22, ZIPQPRR32, ZIPQPRR42])
ABTS1BJ = arr(REP10C * TSHALLOC / TSBC)
ISNETDAJ32 = arr(INETABADAJ32 * IPRODOM2 / IPRODOM2 + IQUODAJ32)
REVQUO = max(0, TOTALQUO - SDD - SDC - SDV - SDM)
TRPQ2 = inf(TGL2 / DIVGL2) + 0
LIGSPEDREPC = is_positive(SPEDREPC) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
GLTSTOTM = sum([GLTSVM, GLTSCM, GLTS1M, GLTS2M, GLTS3M, GLTS4M])
BTANTGECUMWL = V_BTGECUMWL * 1 - present(COD7WD) + COD7WD
PRNN1 = EXPR1 - APR1
XDFNV = min(PLAF_DEDFORFTS, XTPS10V)
ZIGPENARSE14 = is_positive(PRSE1) * is_positive(NMAJRSE14) * LIG2
LIGISFE = is_positive(DISFBASE) * is_positive(ISFETRANG) * 1 - is_positive(ANNUL2042) * 1 - null(5 - V_IND_TRAIT) * LIGISF + is_positive(DISFBASE) * present(ISFETRANG) * 1 - is_positive(ANNUL2042) * null(5 - V_IND_TRAIT)
BAQT = BAQV + BAQC + BAQP
RSE1BASE = RSE1N - CSPROVYD
RNGRFR = null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * IPVLOC + 1 - null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * RBLRFR
ZIPQANTRWB = is_positive(TEGLRWA + TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQRWB / TETONEQUO1) + 1 - is_positive(TEGLRWA + TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1
INDTS = is_positive(INDCOLS + INDCTXS) * INDTRAIT
TGLFTOT = sum([TGLFV, TGLFC, TGLF1, TGLF2, TGLF3, TGLF4])
ACELREPHS = CELREPHS * 1 - ART1731BIS + min(CELREPHS, max(ACELREPHS_P + ACELREPHSP2, ACELREPHS1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BASSURV3 = max(0, CESSASSV - LIM_ASSUR3)
PRNNV = EXPRV - APRV
TTSNRDP = REMPLAP2 - TABTSRDP
INVRETLHA = min(arr(NINVRETLH * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETMCA)) * 1 - V_CNR
IPQPRR41 = ZIPQPRR41 * CARPENBAP4
RPQRVGM = inf(GLRVGM / CODNVG)
PPEPRIME2 = arr(PPENARPRIME2)
LIMIT12 = 18000 + max(0, arr(max(0, RI1 + TONEQUO1) * 4 / 100)) * 1 - is_positive(VARRMOND * is_positive(ART1731BIS) + RMOND * 1 - ART1731BIS) + max(0, arr(max(0, VARRMOND * is_positive(ART1731BIS) + RMOND * 1 - ART1731BIS + TONEQUOM1) * 4 / 100)) * is_positive(VARRMOND * is_positive(ART1731BIS) + RMOND * 1 - ART1731BIS)
LIGNPLOC = is_positive(LOCNPCGAV + LOCNPCGAC + LOCNPCGAPAC + LOCDEFNPCGAV + LOCDEFNPCGAC + LOCDEFNPCGAPAC + LOCNPV + LOCNPC + LOCNPPAC + LOCDEFNPV + LOCDEFNPC + LOCDEFNPPAC + LOCGITCV + LOCGITCC + LOCGITCP + LOCGITHCV + LOCGITHCC + LOCGITHCP) * 1 - null(4 - V_REGCO) * LIG0
NINVRETQGR = NINVRETQG - arr(NINVRETQG * TX40 / 100) * 1 - V_CNR
LIGIDEGRC = is_positive(LIGDEG + LIGDEGRES) * is_positive(SEUIL_8 - IDEGR) * is_positive(IDEGR + 0)
CIIMPPROTOT = CIIMPPRO + CIIMPPRO2
HRLIM15 = positif_ou_nul(REVKIREHR - 1.5 * HRMOYBTRFR)
LIGLOCNEUF4 = is_positive(RIVL4) * LIG1
GLN2C = max(GLD2C - ABGL2C, 0) * INDEFTSC
ACELREPHD = CELREPHD * 1 - ART1731BIS + min(CELREPHD, max(ACELREPHD_P + ACELREPHDP2, ACELREPHD1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
A11REEL = RLOG16 + RLOG21 + RLOG24 * 1 - ART1731BIS + min(RLOG161731 + 0, RLOG16) + min(RLOG211731 + 0, RLOG21) + min(RLOG241731 + 0, RLOG24) * ART1731BIS + RLOG28 + RLOG30 + RLOG35 + RLOG37 + A11RSOC + arr(RSNCM) + RCELRREDLF + RCELRREDLZ + RCELRREDLX + RCELREPHG + RCELREPHA + RCELREPGW + RCELREPGL + RCELREPGK + RCELREPYK + RCELREPYD + RCELREPYC + RCELCOM + RCEL + RCELJP + RCELJBGL + RCODIE + RCODIN + RCODIV + RCODIJ + RILMIZ + RILMIA + RILMJI + RILMJW + RILMPC + RILMOC + RTOURREP * is_positive(INVLOCXN) + RTOUREPA * is_positive(INVLOCXV) + RPATNAT2 + A11RENT + A11RFOR
NINVRETRUR = NINVRETRU - arr(NINVRETRU * TX4737 / 100) * 1 - V_CNR
IMT12 = max(ID11, IMI) * 1 - INDTXMOY + IMO * INDTXMOY
TABDOMDAJ = is_positive(CODDAJ) * is_positive(CODEAJ + GLD1V + GLD2V + GLD3V) * arr(TREP10V * CODDAJ / TTSBV) + 1 - is_positive(CODEAJ + GLD1V + GLD2V + GLD3V) * max(0, TREP10V - TABTSV) + 0
RLOCIDFG8 = arr(ACODID * TX11 / 100) + arr(ACODIF * TX18 / 100) + arr(ACODIG * TX11 / 100) - RLOCIDFG1 - RLOCIDFG2 - RLOCIDFG3 - RLOCIDFG4 - RLOCIDFG5 - RLOCIDFG6 - RLOCIDFG7 - RLOCIDFG7
RREDREP = max(0, RREDREP_1 * 1 - ART1731BIS + min(RREDREP_1, max(RREDREP_P + RREDREPP2, RREDREP1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETPRA = min(NINVRETPR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA)) * 1 - V_CNR
RESTIMOC = min(RIMOPPAUANT, LIM_RESTIMO - RESTIMOD - RESTIMOB)
A12RENT1 = RENT17 + RENT23 + RLOC105 + RLOC111 + RLOC67 + RLOC74 + max(0, RENT11 + RENT35 + RENT05 + RENT29 + RLOC60 + RLOC88 + RLOC53 + RLOC81 + RLOC99 + RLOC123 + RLOC93 + RLOC119 - arr(RENT11 + RENT35 * 5263 / 10000) + arr(RENT05 + RENT29 * 625 / 1000) + arr(RLOC60 + RLOC88 * 5263 / 10000) + arr(RLOC53 + RLOC81 * 625 / 1000) + arr(RLOC99 + RLOC123 * 5263 / 10000) + arr(RLOC93 + RLOC119 * 625 / 1000)) * 1 - V_CNR
BASE7UXI = max(0, min(REPSINFOR + REPFOR + REPSINFOR1 + REPFOR1 + REPSINFOR2 + REPFOR2 + REPSINFOR2 + REPFOR3 + REPSINFOR4, PLAFRED_FORTRA) - REPSINFOR + REPFOR + REPSINFOR1 + REPFOR1 + REPSINFOR2 + REPFOR2 + REPSINFOR2) * 1 - V_CNR
# TODO MAJTXRSE41
CDIS = CDISC
TEGLPRRZVM = GLPRRZVM * 1 - is_positive(INDTEFF) + TGLPRRZVM * is_positive(INDTEFF)
# TODO NMAJRSE44
TEXPR1 = TPRB1 + COD1CH + T2PRB1 + PEBF1
TTSBN3 = TSHALLO3 + ALLO3 + max(0, SALEXT3 - COD1ED)
DCELRREDLS = CELRREDLS
REPDONR2 = positif_ou_nul(BASEDONF + REPDON04 + REPDON05 - arr(REVDON * TX_BASEDUP / 100)) * REPDON06 + 1 - positif_ou_nul(BASEDONF + REPDON04 + REPDON05 - arr(REVDON * TX_BASEDUP / 100)) * max(REPDON06 + BASEDONF + REPDON04 + REPDON05 - arr(REVDON * TX_BASEDUP / 100), 0) * 1 - V_CNR
IDGLO = (arr(BGLOA - COD8YL / 0.075 * TX051 / 100) * is_positive(CSREC)) if (V_IND_TRAIT == 4) else (abs(DGLOD - V_IDGLOANT))
INVRETSTA = min(NINVRETST, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA)) * 1 - V_CNR
LIGCRED1 = is_positive(REGCI + LIGPVETR + LIGCICAP + LIGREGCI + LIGCI8XV + LIGCIGLO + 0) * 1 - is_positive(IPSOUR + LIGCULTURE + LIGMECENAT + LIGCORSE + LIG2305 + LIGEMPLOI + LIGCI2CK + LIGBPLIB + LIGCIGE + LIGDEVDUR + LIGCICA + LIGCIGARD + LIG82 + LIGPRETUD + LIGSALDOM + LIGCIFORET + LIGHABPRIN + LIGCREFAM + LIGCREAPP + LIGCREBIO + LIGPRESINT + LIGCREPROSP + LIGINTER + LIGRESTAU + LIGCONGA + LIGMETART + LIGCREFORM + LIGLOYIMP + LIGVERSLIB + LIGCITEC + 0)
RSE4 = arr(BRSE8TX * TXTX / 100) * 1 - is_positive(ANNUL2042) + arr(BRSE8SB * TXTX / 100) * 1 - is_positive(ANNUL2042)
LIGF10V = is_positive(F10AV + F10BV) * LIG0 * LIG2
ZIPQPRRZ32 = is_positive(TEGLPRRZ4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPRRZ3 / TETONEQUO1) + 1 - is_positive(TEGLPRRZ4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRZV2 - ZIPQPRRZC2 - ZIPQPRRZ12 - ZIPQPRRZ22
NRCELRREDLT = max(min(CELRREDLT, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS])), 0)
ACELREPYD = CELREPYD * 1 - ART1731BIS + min(CELREPYD, max(ACELREPYD_P + ACELREPYDP2, ACELREPYD1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TGLN3C = max(GLD3C - TABGL3C, 0)
GLTS1 = is_positive(TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2TS1 / TOTALQUOHT) + 1 - is_positive(TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV - GLTSC
RCELRREDLE_1 = max(min(ACELRREDLE, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1), 0)
RMEUBLE = max(0, RMEUBLE_1 * 1 - ART1731BIS + min(RMEUBLE_1, max(RMEUBLE_P + RMEUBLEP2, RMEUBLE1731 + 0) * 1 - PREM8_11) * ART1731BIS)
# TODO IRNET
_2RV1 = arr(RENTAX * TXRVT1 / 100)
ZIG_TITRECRP = is_positive(BCSG + V_CSANT) * is_positive(BRDS + V_RDANT) * is_positive(BPRS + V_PSANT) * 1 - is_positive(BCVNSAL + V_CVNANT) * 1 - V_CNR * 1 - is_positive(ZIG_RF + max(0, NPLOCNETSF)) * LIG2
DS511 = max(QF511 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF511 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF511 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF511 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF511 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
REPBA = max(0, CODHBA - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU)) * 1 - ART1731BIS + max(0, CODHBA - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU)) * ART1731BIS * 1 - V_CNR
BGLOACNR = GLDGRATV + GLDGRATC * V_CNR * 1 - is_positive(present(TAX1649) + present(RE168))
PPE_FINMM = PPE_FINJJMM - PPE_FINJJ * 100
LIGISFANNUL = present(ISFBASE) * is_positive(ANNUL2042)
TOTALQUO = 1 - is_positive(IPVLOC) * REVQTOT
REPMEUOB = DILMOB - RILMOB * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIGTAUX4 = ZIG_TITRECR
ZIPQRCMFU1 = is_positive(TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQRCMFU / TETONEQUO1) + 1 - is_positive(TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCMDC1
QF511 = arr(RB51) / NB1
PERPBNCPNP = PERP_BOOL * BNCEXP + BNCREP - BNCDEP * 1 - is_positive(ART1731BIS) + BNHEXP + BNHREP - BNHDEP * 1 - is_positive(ART1731BIS) + BNCCRP
INVRETLGA = min(arr(NINVRETLG * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA)) * 1 - V_CNR
TGLNAV3V = max(GLD3V - TABGL3V, 0)
LIGNONREST = is_positive(V_NONRESTANT + 0) * 1 - APPLI_OCEANS
INVRETSOA = min(NINVRETSO, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA)) * 1 - V_CNR
# TODO IRCUM
ZIPQTSREMP22 = is_positive(sum([TEGLTSREMP3, TEGLTSREMP4])) * arr(IQUOTOT2 * TERPQTSREMP2 / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTS2TOT - ZIPQTSREMPV2 - ZIPQTSREMPC2 - ZIPQTSREMP12
PPE_BOOL_TP2 = is_positive(is_positive(PPETPP2) * is_positive(PPE_SALAVDEF2 + 0) + null(PPENHP2 + PPEXT2 + 0) * null(PPETPP2 + 0) * is_positive(PPE_SALAVDEF2) + positif_ou_nul(360 / PPENBJ * PPENHP2 + PPEXT2 * is_positive(PPE_SALAVDEF2 + 0) - 1820))
RCELREP_HX = is_positive(CELREPHX) * arr(ACELREPHX * TX25 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPAR1 = is_positive(REPAR1) * LIG1 * 1 - null(4 - V_REGCO) * LIG2 * 1 - V_CNR
IS512 = arr(DS512 * NB1)
REPRESIMEUB = RETRESIMEUB_1 - RRESIMEUB
INVRETBAR = min(arr(INVRETBA * 10 / 9), NINVRETBA - INVRETBA) * 1 - null(1 - abs(arr(INVRETBA * 10 / 9) - NINVRETBA - INVRETBA)) + NINVRETBA - INVRETBA * null(1 - abs(arr(INVRETBA * 10 / 9) - NINVRETBA - INVRETBA)) * 1 - V_CNR
TR2_ISF = arr(max(0, min(DISFBASE, LIM_TR2_ISF) - LIM_TR1_ISF) * TX_TR2_ISF / 10000)
REPRCM1 = is_positive(REPRCMBIS) * arr(REPRCMBIS * _1RCM_I / RCM_I) + 1 - is_positive(REPRCMBIS) * 0
REPRK = max(0, INVOMENTRK - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX)) * 1 - ART1731BIS + max(0, INVOMENTRK - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX)) * ART1731BIS * 1 - V_CNR
LIG61DEG = is_positive(ITRED) * is_positive(IAVIM) * is_positive(SEUIL_61 - IAVIM) * 1 - is_positive(INDNMR2) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * is_positive(INDCTX) * LIG2
LIGCELHZ = is_positive(DCELREPHZ) * LIG1 * LIG2
# TODO RPALE
INDRESTIT = is_positive(IREST + 0)
RLOC109 = max(min(INVRETSO * 1 - INDPLAF + INVRETSOA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103, RLOC104, RLOC105, RLOC106, RLOC107, RLOC108])), 0) * 1 - V_CNR
BAD1 = min(RVAIDE, max(0, BADPLAF - BADCRE))
IMETRO31 = arr(IPQ01 * REVMETRO / RG)
DILMJW = LOCMEUBJW
INETABADAJ1 = max(0, IPRODOM1 + IQUODAJ1 - ABADO1)
LIG1432 = is_positive(BPTP19) * LIG0 * LIG2
DCELRREDLD = CELRREDLD
PFRDP = FRD1 + COD1CE * is_positive(FRD1 + COD1CE - P10MINSP)
PPE_BOOL_ACT_COND = is_positive(is_positive(TSHALLOV) + is_positive(TSHALLOC) + is_positive(TSHALLO1) + is_positive(TSHALLO2) + is_positive(TSHALLO3) + is_positive(TSHALLO4) + is_positive(GLD1V) + is_positive(GLD2V) + is_positive(GLD3V) + is_positive(GLD1C) + is_positive(GLD2C) + is_positive(GLD3C) + is_positive(BPCOSAV) + is_positive(BPCOSAC) + is_positive(TSASSUV) + is_positive(TSASSUC) + is_positive(CARTSV) * is_positive(CARTSNBAV) + is_positive(CARTSC) * is_positive(CARTSNBAC) + is_positive(CARTSP1) * is_positive(CARTSNBAP1) + is_positive(CARTSP2) * is_positive(CARTSNBAP2) + is_positive(CARTSP3) * is_positive(CARTSNBAP3) + is_positive(CARTSP4) * is_positive(CARTSNBAP4) + is_positive(FEXV) + is_positive(BAFV) + is_positive(BAFPVV) + is_positive(BAEXV) + is_positive(BACREV) + is_positive(_4BACREV) + is_positive(BACDEV * 1 - is_positive(ART1731BIS)) + is_positive(BAHEXV) + is_positive(BAHREV) + is_positive(_4BAHREV) + is_positive(BAHDEV * 1 - is_positive(ART1731BIS)) + is_positive(MIBEXV) + is_positive(MIBVENV) + is_positive(MIBPRESV) + is_positive(MIBPVV) + is_positive(BICEXV) + is_positive(BICNOV) + is_positive(BICDNV * 1 - is_positive(ART1731BIS)) + is_positive(BIHEXV) + is_positive(BIHNOV) + is_positive(BIHDNV * 1 - is_positive(ART1731BIS)) + is_positive(FEXC) + is_positive(BAFC) + is_positive(BAFPVC) + is_positive(BAEXC) + is_positive(BACREC) + is_positive(_4BACREC) + is_positive(BACDEC * 1 - is_positive(ART1731BIS)) + is_positive(BAHEXC) + is_positive(BAHREC) + is_positive(_4BAHREC) + is_positive(BAHDEC * 1 - is_positive(ART1731BIS)) + is_positive(MIBEXC) + is_positive(MIBVENC) + is_positive(MIBPRESC) + is_positive(MIBPVC) + is_positive(BICEXC) + is_positive(BICNOC) + is_positive(BICDNC * 1 - is_positive(ART1731BIS)) + is_positive(BIHEXC) + is_positive(BIHNOC) + is_positive(BIHDNC * 1 - is_positive(ART1731BIS)) + is_positive(FEXP) + is_positive(BAFP) + is_positive(BAFPVP) + is_positive(BAEXP) + is_positive(BACREP) + is_positive(_4BACREP) + is_positive(BACDEP * 1 - is_positive(ART1731BIS)) + is_positive(BAHEXP) + is_positive(BAHREP) + is_positive(_4BAHREP) + is_positive(BAHDEP * 1 - is_positive(ART1731BIS)) + is_positive(MIBEXP) + is_positive(MIBVENP) + is_positive(MIBPRESP) + is_positive(BICEXP) + is_positive(MIBPVP) + is_positive(BICNOP) + is_positive(BICDNP * 1 - is_positive(ART1731BIS)) + is_positive(BIHEXP) + is_positive(BIHNOP) + is_positive(BIHDNP * 1 - is_positive(ART1731BIS)) + is_positive(BNCPROEXV) + is_positive(BNCPROV) + is_positive(BNCPROPVV) + is_positive(BNCEXV) + is_positive(BNCREV) + is_positive(BNCDEV * 1 - is_positive(ART1731BIS)) + is_positive(BNHEXV) + is_positive(BNHREV) + is_positive(BNHDEV * 1 - is_positive(ART1731BIS)) + is_positive(BNCCRV) + is_positive(BNCPROEXC) + is_positive(BNCPROC) + is_positive(BNCPROPVC) + is_positive(BNCEXC) + is_positive(BNCREC) + is_positive(BNCDEC * 1 - is_positive(ART1731BIS)) + is_positive(BNHEXC) + is_positive(BNHREC) + is_positive(BNHDEC * 1 - is_positive(ART1731BIS)) + is_positive(BNCCRC) + is_positive(BNCPROEXP) + is_positive(BNCPROP) + is_positive(BNCPROPVP) + is_positive(BNCEXP) + is_positive(BNCREP) + is_positive(BNCDEP * 1 - is_positive(ART1731BIS)) + is_positive(BNHEXP) + is_positive(BNHREP) + is_positive(BNHDEP * 1 - is_positive(ART1731BIS)) + is_positive(BNCCRP) + is_positive(BIPERPV) + is_positive(BIPERPC) + is_positive(BIPERPP) + is_positive(BAFORESTV) + is_positive(BAFORESTC) + is_positive(BAFORESTP) + is_positive(AUTOBICVV) + is_positive(AUTOBICPV) + is_positive(AUTOBNCV) + is_positive(AUTOBICVC) + is_positive(AUTOBICPC) + is_positive(AUTOBNCC) + is_positive(AUTOBICVP) + is_positive(AUTOBICPP) + is_positive(AUTOBNCP) + is_positive(LOCPROCGAV) + is_positive(LOCPROV) + is_positive(LOCDEFPROCGAV * 1 - is_positive(ART1731BIS)) + is_positive(LOCDEFPROV * 1 - is_positive(ART1731BIS)) + is_positive(LOCPROCGAC) + is_positive(LOCPROC) + is_positive(LOCDEFPROCGAC * 1 - is_positive(ART1731BIS)) + is_positive(LOCDEFPROC * 1 - is_positive(ART1731BIS)) + is_positive(LOCPROCGAP) + is_positive(LOCPROP) + is_positive(LOCDEFPROCGAP * 1 - is_positive(ART1731BIS)) + is_positive(LOCDEFPROP * 1 - is_positive(ART1731BIS)) + is_positive(XHONOAAV) + is_positive(XHONOAAC) + is_positive(XHONOAAP) + is_positive(XHONOV) + is_positive(XHONOC) + is_positive(XHONOP) + is_positive(GLDGRATV) + is_positive(GLDGRATC) + is_positive(CODDAJ) + is_positive(CODEAJ) + is_positive(CODDBJ) + is_positive(CODEBJ) + is_positive(SALEXTV) + is_positive(SALEXTC) + is_positive(SALEXT1) + is_positive(SALEXT2) + is_positive(SALEXT3) + is_positive(SALEXT4))
DS016 = max(QF016 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF016 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF016 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF016 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF016 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
INVRETOJ = min(NINVRETOJ, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI)) * 1 - V_CNR
BI2 = sum([BI2V, BI2C, BI2P])
DFRCM2 = DEFRCM3 * is_positive(DFRCMN) + DEFRCM3 * is_positive(DEFRCM + DEFRCM2 - RCM_I) * 1 - is_positive(DFRCMN) + max(0, DEFRCM3 - RCM_I - DEFRCM) * positif_ou_nul(RCM_I - DEFRCM - DEFRCM2) * 1 - is_positive(DFRCMN) * 1 - is_positive(ART1731BIS) + min(DEFRCM3, REPRCM - REPRCMBIS - DFRCM5 - DFRCM4 - DFRCM3) * is_positive(ART1731BIS * 1 - PREM8_11) + DEFRCM3 * is_positive(ART1731BIS * PREM8_11)
ZIGDRSED6 = ZIGIDRSE * null(ANCSDED2 - V_ANREV + 6)
DCELREPHG = CELREPHG
INVRETSU = min(arr(NINVRETSU * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP)) * 1 - V_CNR
ADO2 = ABADON2 * 1 - is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)) + ABATOT2 * is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ))
RAD = arr(BAD * TX_AIDOMI / 100) * 1 - V_CNR
# TODO DLMRN4
LIG936 = is_positive(DEFRIRCM) * is_positive(REPRCM) * LIGANNUL2042
LIGREPPI = is_positive(REPPI) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
INVRETXARA = min(NINVRETXAR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA)) * 1 - V_CNR
TMIBNETNPVF = sum([TMIB_NETNPVV, TMIB_NETNPVC, TMIB_NETNPVP])
LIGREPLOCJU = is_positive(REPLNPW) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIPQRVO1 = is_positive(TEGLRVO5 + TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * arr(IQUOTOT1 * TERPQRVO / TETONEQUO1) + 1 - is_positive(TEGLRVO5 + TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQPRRZ1TOT
SOMMEA885 = present(BA1AV) + present(BA1AC) + present(BA1AP) + present(BI1AV) + present(BI1AC) + present(BI1AP) + present(BN1AV) + present(BN1AC) + present(BN1AP)
MIB_ABNPVV = max(0, arr(MIB_AVV * MIBNPVENV / MIB_TVENV)) * is_positive(present(MIBGITEV) + present(LOCGITV)) + MIB_AVV - MIB_ABVV * 1 - is_positive(present(MIBGITEV) + present(LOCGITV))
TRPQTSVM = inf(TGLTSVM / CARTSNBAV)
GLN1C = max(GLD1C - ABGL1C, 0) * INDEFTSC
RCEL_NBGL_R = is_positive(CELLIERNB) * arr(ACELNBGL_R * TX25 / 100) + is_positive(CELLIERNG) * arr(ACELNBGL_R * TX15 / 100) + is_positive(CELLIERNL) * arr(ACELNBGL_R * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
AREPMEU = DREPMEU * 1 - ART1731BIS + min(DREPMEU, max(AREPMEU_P + AREPMEUP2, AREPMEU1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
PRRC = arr(PRNC * PRBC / EXPRC)
LIGPSP = 1 - null(LIGPS) * null(V_ANTCR)
BA11RFOR = arr(BASE7UVG * TX22 / 100)
IPQPALIMC1 = ZIPQPALIMC1 * PENSALNBC
RCELREPHX_1 = max(min(RCELREP_HX, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1 - RCELREPHR_1 - RCELREPHU_1 - RCELREPHT_1 - RCELREPHZ_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IND_COLD = is_positive(BCDIS) * is_positive(PCDIS + CDISPROV) * 1 - INDCTX
RLOG03 = max(min(INVLGDEB, RRI1 - RLOG01 - RLOG02), 0) * 1 - V_CNR
RSN_CQ = BSNCQ * TX18 / 100
IPQTSREMPC5 = ZIPQTSREMPC5 * REMPLANBC
LIGPPEVCP = is_positive(INDPPEV) * is_positive(INDPPEC) * is_positive(INDPPEP) * TYPEPPE
LIGREPAA = is_positive(REPAA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
REPSB = max(0, CODHSB - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2)) * 1 - ART1731BIS + max(0, CODHSB - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2)) * ART1731BIS * 1 - V_CNR
XTSV = XTSNV - sum([max(0, GLD1V - ABGL1V), max(0, GLD2V - ABGL2V), max(0, GLD3V - ABGL3V)])
LIGDFRCM1 = is_positive(DFRCM1) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
XTSB2 = TSBN2
TEGLPRR1 = GLPRR1 * 1 - is_positive(INDTEFF) + TGLPRR1 * is_positive(INDTEFF)
IPQ2 = IPQ02 * EXO1 + IPQ1002
RCELREP_HT = is_positive(CELREPHT) * arr(ACELREPHT * TX25 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TERPQPRRZV = RPQPRRZV * 1 - is_positive(INDTEFF) + TRPQPRRZV * is_positive(INDTEFF)
LIG3510 = is_positive(V_FORVA) * 1 - positif_ou_nul(BAFV) + is_positive(V_FORCA) * 1 - positif_ou_nul(BAFC) + is_positive(V_FORPA) * 1 - positif_ou_nul(BAFP) * 1 - is_positive(IPVLOC) * LIG1
INVRETOQ = min(NINVRETOQ, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP)) * 1 - V_CNR
DDIFAGRI = INTDIFAGRI
RIVCELHJK5 = RIVCELHJK1
TTSNRFP = REMPLAP4 - TABTSRFP
# TODO PPEPRIMEPT
ABATOT1 = ABADO1 + ABAGU1
BCEL_2011 = arr(min(CELLIERNA + CELLIERNC + CELLIERND + CELLIERNE + CELLIERNF + CELLIERNH + CELLIERNI + CELLIERNJ + CELLIERNK + CELLIERNM + CELLIERNN + CELLIERNO + 0, LIMCELLIER) / 9)
PPERSATOT = RSAFOYER + RSAPAC1 + RSAPAC2
# TODO ISFDEG
TSPEABNPC = TSPEABC - TSPEABPC
IPQRCMDC2 = ZIPQRCMDC2 * REVACTNB
LIGCICA = is_positive(BAILOC98) * LIG1 * LIG2
DCTSPE = positif_ou_nul(BNRTOT + SPENETPF) * BNCPMVCTV + 1 - positif_ou_nul(BNRTOT + SPENETPF) * BNCPMVCTV - abs(BNRTOT + SPENETPF) + 1 - positif_ou_nul(BNRTOT + SPENETPF) * null(BNCPMVCTV - abs(BNRTOT + SPENETPF)) * BNCPMVCTV
RDSCAPS = arr(BRDSAPS * T_RDS / 100) * 1 - is_positive(ANNUL2042)
NRCELNQ = max(min(RCEL_NQ, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK), 0)
INVRETAAR = min(arr(INVRETAA * 10 / 9), NINVRETAA - INVRETAA) * 1 - null(1 - abs(arr(INVRETAA * 10 / 9) - NINVRETAA - INVRETAA)) + NINVRETAA - INVRETAA * null(1 - abs(arr(INVRETAA * 10 / 9) - NINVRETAA - INVRETAA)) * 1 - V_CNR
# TODO DFANT
NRCELREPHE = max(min(ACELREPHE, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF])), 0)
INVRETSV = min(arr(NINVRETSV * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ)) * 1 - V_CNR
INVRETAPR = min(arr(INVRETAP * 10 / 9), NINVRETAP - INVRETAP) * 1 - null(1 - abs(arr(INVRETAP * 10 / 9) - NINVRETAP - INVRETAP)) + NINVRETAP - INVRETAP * null(1 - abs(arr(INVRETAP * 10 / 9) - NINVRETAP - INVRETAP)) * 1 - V_CNR
ABPR2 = arr(1 - IND_APB2 * min(APB2, PL_PB * APB2 / sum([APBV * 1 - IND_APBV, APBC * 1 - IND_APBC, APB1 * 1 - IND_APB1, APB2 * 1 - IND_APB2, APB3 * 1 - IND_APB3, APB4 * 1 - IND_APB4])) + IND_APB2 * APB2)
NRCELRREDLA = max(min(CELRREDLA, RRI1 - NRLOGDOM - NRRI2), 0)
ACODID = min(PLAF_RESINEUV - ACODIE - ACODIF, LOCMEUBID) * 1 - V_CNR
RCODIJ = RCODIJ_1 * 1 - ART1731BIS + min(RCODIJ_1, max(RCODIJ_P + RCODIJP2, RCODIJ1731 + 0) * 1 - PREM8_11) * ART1731BIS
RESTIMOB = min(RESTIMOSAUV, LIM_RESTIMO - RESTIMOD)
VAR0AV = is_positive(V_0BT * V_0AV)
TABGL3V = is_positive(GLD3V) * max(0, TREP10V - TABTSV - TABDOMDAJ - TABDOMEAJ - TABGL1V - TABGL2V) + 0
RCMPRIV = REGPRIV + RESTUC
_4BAQTOTNET = is_positive(_4BAQTOT) * max(0, _4BAQTOT + BAHQTOTMIN + BAHQTOTMAXN) * is_positive(1 - ART1731BIS + 1 - is_positive(DEFRIBASUP + DEFRIGLOBSUP) * 1 - PREM8_11) + max(0, min(_4BAQV + _4BAQC + _4BAQP + arr(DEFBANIF * PROQDEFBAT), _4BACREV + _4BACREC + _4BACREP + _4BAHREV + _4BAHREC + _4BAHREP * MAJREV)) * is_positive(DEFRIBASUP + DEFRIGLOBSUP) * 1 - PREM8_11
TERPQPALIM4M = RPQPALIM4M * 1 - is_positive(INDTEFF) + TRPQPALIM4M * is_positive(INDTEFF)
RLOC103 = max(min(INVRETSM * 1 - INDPLAF + INVRETSMA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102])), 0) * 1 - V_CNR
# TODO BRCMQ
LIG75 = 1 - INDTXMIN * 1 - INDTXMOY * 1 - LIG1500 + LIG1500YT * 1 - LIG1510 + LIG1510YT * INDREV1A8 * LIG2
A12RFOR = max(0, min(BA12RFOR, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - A9RFOR - A10RFOR - A11RFOR)) * 1 - ART1731BIS
RIV2012CEL1 = RCEL_2012_R * is_positive(ACEL2012_R)
TGLRVOTOT = TGLRVO + TGLRVO5 + TGLRVO6 + TGLRVO7
PLAQAR = arr(PLAF_DEMIPART / 2 * NBMIQAR + NB0BTMIQAR + NB0BTQAR + V_0CI + PLAF_COMPPART / 2 * NB0BT2MIQAR)
ZIGPROVYD = is_positive(CSPROVYD) * TYPE2
DCELRREDLF = CELRREDLF
TBNCTOTABC = arr(TSPEABC * AUTOBNCC / TSPETOTC)
TTSPRDV = min(0, TTSNNV + TPRRV) * ART1731BIS
NMAJISF1 = max(0, MAJO1728ISF + arr(ISF5 * COPETOISF / 100) * positif_ou_nul(ISF5 - SEUIL_12) + FLAG_TRTARDIF * MAJOISFTARDIF_D + FLAG_TRTARDIF_F * MAJOISFTARDIF_D - FLAG_TRTARDIF_F * is_positive(FLAG_RECTIF) * MAJOISFTARDIF_R + 1 - is_positive(FLAG_RECTIF) * MAJOISFTARDIF_A)
INVRETOMA = min(NINVRETOM, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA)) * 1 - V_CNR
TTPR4 = TTSN4 + TPRN4
RCODJU5 = arr(arr(ACODJU / 9) * TX11 / 100)
NINVRETMC = max(min(RETROCOMMC, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB), 0) * 1 - V_CNR
RD_RE168 = RE168
RNIBAR13 = 13465 * is_positive(is_positive(V_ANREV - V_0DA - 65) + is_positive(V_0AP + 0)) + 12353 * 1 - is_positive(is_positive(V_ANREV - V_0DA - 65) + is_positive(V_0AP + 0)) * null(NBPT - 1) + 14414 * null(NBPT - 1.25) + 15917 * null(NBPT - 1.5) + 17420 * null(NBPT - 1.75) + 18922 * null(NBPT - 2) + 20425 * null(NBPT - 2.25) + 21928 * null(NBPT - 2.5) + 23581 * is_positive(is_positive(V_ANREV - V_0DA - 65) + is_positive(V_0AP + 0)) * 1 - BOOL_0AM + 23431 * 1 - is_positive(is_positive(V_ANREV - V_0DA - 65) + is_positive(V_0AP + 0)) * null(NBPT - 2.75) + 24933 * null(NBPT - 3) + 26436 * null(NBPT - 3.25) + 27939 * null(NBPT - 3.5) + 29442 * null(NBPT - 3.75) + 30944 * null(NBPT - 4) + 32447 * null(NBPT - 4.25) + 33950 * null(NBPT - 4.5) + 35453 * null(NBPT - 4.75) + 36955 * null(NBPT - 5) + 38458 * null(NBPT - 5.25) + 39961 * null(NBPT - 5.5) + 41464 * null(NBPT - 5.75) + 42966 * null(NBPT - 6) + 44470 * null(NBPT - 6.25) + 45980 * null(NBPT - 6.5) + 47476 * null(NBPT - 6.75) + 48980 * null(NBPT - 7) + 50480 * null(NBPT - 7.25) + 51985 * null(NBPT - 7.5) + 53487 * null(NBPT - 7.75) + 54990 * null(NBPT - 8) + 56493 * null(NBPT - 8.25) + 57995 * null(NBPT - 8.5) + 59497 * null(NBPT - 8.75) + 61000 * null(NBPT - 9) + 62504 * null(NBPT - 9.25) + 64005 * null(NBPT - 9.5) + 65515 * null(NBPT - 9.75) + 67010 * null(NBPT - 10)
RENT20 = max(min(INVRETAJ * 1 - INDPLAF + INVRETAJA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19])), 0) * 1 - V_CNR
RPQRVO6 = inf(GLRVO6 / RENTAXNB6)
ACELREPGS = CELREPGS * 1 - ART1731BIS + min(CELREPGS, max(ACELREPGS_P + ACELREPGSP2, ACELREPGS1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TGLPRRZC = is_positive(TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2ZC / TOTALQUO) + 1 - is_positive(TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV
PERPPLATVANT = 1 - is_positive(present(PERPPLAFCV) + present(PERPPLAFNUV1) + present(PERPPLAFNUV2) + present(PERPPLAFNUV3)) * V_BTPERPTOTV + is_positive(present(PERPPLAFCV) + present(PERPPLAFNUV1) + present(PERPPLAFNUV2) + present(PERPPLAFNUV3)) * PERPPLAFCV + PERPPLAFNUV1 + PERPPLAFNUV2 + PERPPLAFNUV3
RIVCELJBGL6 = RIVCELJBGL1
RPQTSREMP4M = inf(GLTSREMP4M / REMPLANBP4)
IPQRWB1 = ZIPQRWB1 * CODNWB
LIG1390 = is_positive(is_positive(ABMAR) + 1 - is_positive(RI1) * is_positive(V_0DN)) * LIG1 * LIG2
NRCELREPHZ = max(min(RCELREP_HZ, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT])), 0)
INVRETRWA = min(NINVRETRW, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA)) * 1 - V_CNR
MIB_APP = min(MIB_TPRESP, max(MIN_MBIC, arr(MIB_TPRESP * TX_MIBPRES / 100)))
REPSIN = max(0, REPSINFOR - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * 1 - V_CNR
V_EAG = (V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [6, 7]}]
RLOC95 = max(min(INVRETSA * 1 - INDPLAF + INVRETSAA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94])), 0) * 1 - V_CNR
IPQRCMGO2 = ZIPQRCMGO2 * RESTUCNB
PRNNP = PRNN1 + PRNN2 + PRNN3 + PRNN4
RCELREPHG_1 = max(min(ACELREPHG, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPMN = is_positive(REPMN) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
IPRODOM2 = arr(IPQ02 * EXO1 * PRODOM / RG)
RPROREP_1 = max(min(RETPROREP, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE), 0)
LIGISFNEW = present(ISFBASE) * 1 - is_positive(20 - V_NOTRAIT) * null(5 - V_IND_TRAIT) * 1 - is_positive(ANNUL2042)
RSE8TX = arr(BRSE8TX * TXTX / 100) * 1 - is_positive(ANNUL2042)
RLOC82 = max(min(INVRETPNR * 1 - INDPLAF + INVRETPNRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81])), 0) * 1 - V_CNR
_3RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _3RCM_I - REPRCM3) * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _3RCM_I - REPRCM3)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
MIB_P1AV = MIB1AV - MIBDEV
TEGLPRR3 = GLPRR3 * 1 - is_positive(INDTEFF) + TGLPRR3 * is_positive(INDTEFF)
APRV = IND_APBV * ABPRV + 1 - IND_APBV * min(ABPRV, PL_PB)
RPQTS4 = inf(GLTS4 / CARTSNBAP4)
_2RAO = max(0, _2REGPRIVM)
ZIPQPRR32 = is_positive(TEGLPRR4 + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPRR3 / TETONEQUO1) + 1 - is_positive(TEGLPRR4 + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRV2 - ZIPQPRRC2 - ZIPQPRR12 - ZIPQPRR22
DCELREPHH = CELREPHH
TRPQ4RAJV = arr(TGL4RAJV / DIVGL4) + 0
TTSPRT = TTSNNV + TPRRV + TTSNNC + TPRRC + TTSNN1 + TPRR1 + TTSNN2 + TPRR2 + TTSNN3 + TPRR3 + TTSNN4 + TPRR4
ZIG_CSGD99 = ZIG_CSGDPRIM * 1 - null(V_IDANT + DCSGD + 0) * is_positive(DCSGD) * is_positive(20 - V_NOTRAIT) * LIG2
INVRETRB = min(arr(NINVRETRB * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA)) * 1 - V_CNR
RDRCM1APS = RCMABD + RCMTNC + RCMAV + RCMHAD + RCMHAB + REGPRIVM + RCMIMPAT - RCMSOC - is_positive(RCMRDS) * min(RCMRDS, RCMABD + RCMAV + RCMHAD + RCMHAB + RCMTNC + COD2FA)
TABTSREJ = is_positive(REMPLAP3) * arr(TREP103 * CARTSP3 / TTSB3) + 1 - is_positive(REMPLAP3) * max(0, TREP103 - TABTS1EJ - TABTS1EC - TABTS1EP)
_2PRBV = CARPEV + PENSALV + CODRAZ
AILMOE = DILMOE * 1 - V_CNR
BICNPP = BINTAP + BINHTAP + MIB_NETNPVP + MIB_NETNPPP
IPQ1005 = IPQRWB5 + IPQRWA5 + IPQRVG5 + sum([IPQ15, IPQ25, IPQ35, IPQ45]) + sum([IPQFV5, IPQFC5, IPQF15, IPQF25, IPQF35, IPQF45]) + sum([IPQPALIMV5, IPQPALIMC5, IPQPALIM15, IPQPALIM25, IPQPALIM35, IPQPALIM45]) + sum([IPQTSV5, IPQTSC5, IPQTS15, IPQTS25, IPQTS35, IPQTS45]) + sum([IPQTSREMPV5, IPQTSREMPC5, IPQTSREMP15, IPQTSREMP25, IPQTSREMP35, IPQTSREMP45]) + IPQRF15 + IPQRF25 + sum([IPQPRRV5 + IPQPRRZV5, IPQPRRC5 + IPQPRRZC5, IPQPRR15 + IPQPRRZ15, IPQPRR25 + IPQPRRZ25, IPQPRR35 + IPQPRRZ35, IPQPRR45 + IPQPRRZ45]) + IPQRCMDC5 + IPQRCMFU5 + IPQRCMCH5 + IPQRCMTS5 + IPQRCMGO5 + IPQRCMTR5 + IPQRVO5 + IPQRVO55 + IPQRVO65 + IPQRVO75
LIGRRCEL24 = is_positive(RRCEL2011) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
_10MINSV = max(min(TSBV, DEDMINV), DFNV)
RSE3AC = max(0, RSE3 - CIRSE3)
ZIGRSECOR6 = ZIGRSECOR * null(ANCSDED2 - V_ANREV + 6)
ZIPQPRRZ5TOT = sum([ZIPQPRRZV5, ZIPQPRRZC5, ZIPQPRRZ15, ZIPQPRRZ25, ZIPQPRRZ35, ZIPQPRRZ45])
XFPT3 = XDF3 * XIND_103 + FRD3 * 1 - XIND_103
ZIGLOCOR1 = ZIGLOCOR * null(ANCSDED2 - V_ANREV + 1)
PPE_FINJJMM = arr(PPE_FINJJMMMM - V_ANREV / 10000)
FORREST = is_positive(REST) * max(0, min(CREFORMCHENT, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE))
RREPNPRO = max(0, RREPNPRO_1 * 1 - ART1731BIS + min(RREPNPRO_1, max(RREPNPRO_P + RREPNPROP2, RREPNPRO1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RLOCENT = RLOCENT_1 * 1 - ART1731BIS + min(RLOCENT_1, max(RLOCENT_P + RLOCENTP2, RLOCENT1731 + 0) * 1 - PREM8_11) * ART1731BIS
ZIPQFV1 = is_positive(sum([TEGLFC, TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQFV / TETONEQUO1) + 1 - is_positive(sum([TEGLFC, TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT
ZIPQPRRANTZC1 = is_positive(sum([TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPRRZC / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTZV1
IDOM32 = is_positive(IND_TDR) * IDOM14 + 1 - is_positive(IND_TDR) * V_CR2 * IDOM12 + 1 - V_CR2 * ID12 - ADO32 * 1 - is_positive(INDCODDAJ) + ITOTDOM32 * is_positive(INDCODDAJ)
TGLTSREMPTOT = sum([TGLTSREMPV, TGLTSREMPC, TGLTSREMP1, TGLTSREMP2, TGLTSREMP3, TGLTSREMP4])
PERPBICPNV = BICEXV + BICNOV - BICDNV * 1 - is_positive(ART1731BIS) + BIHEXV + BIHNOV - BIHDNV * 1 - is_positive(ART1731BIS) + BIPERPV + LOCPROCGAV - LOCDEFPROCGAV * 1 - is_positive(ART1731BIS) + LOCPROV - LOCDEFPROV * 1 - is_positive(ART1731BIS)
NRCELREPHA = max(min(ACELREPHA, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB])), 0)
AILMOB = DILMOB * 1 - V_CNR
RIVCELHNO6 = RIVCELHNO1
XTPS10V = arr(XEXTSV * TX_DEDFORFTS / 100)
MIB_ABNPPP = max(0, arr(MIB_APP * MIBNPPRESP / MIB_TPRESP)) * present(MIBMEUP) + MIB_APP - MIB_ABPP * 1 - present(MIBMEUP)
LIGREPQG = is_positive(REPQG) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RBGRFRHR = 1 - is_positive(RGRFRHR + R1649 + PREREV - DAR) * min(0, RGRFRHR + R1649 + PREREV - DAR + TOTALQUO) + is_positive(RGRFRHR + R1649 + PREREV - DAR) * RGRFRHR + R1649 + PREREV - DAR * 1 - is_positive(ART1731BIS) + 1 - is_positive(RGRFRHR + R1649 + PREREV - DAR - DFANTIMPU) * min(0, RGRFRHR + R1649 + PREREV - DAR - DFANTIMPU + TOTALQUO) + is_positive(RGRFRHR + R1649 + PREREV - DAR - DFANTIMPU) * RGRFRHR + R1649 + PREREV - DAR - DFANTIMPU * is_positive(ART1731BIS)
NINVRETAA = max(min(CODHAA, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB), 0) * 1 - V_CNR
TOTBGE = BGTECH + BGEPAHA
MIB_1AV = max(0, MIB_P1AV + MIB_NP1AV)
BAEV = _4BACREV - _4DEFBACREV * positif_ou_nul(BARAV) + 0
ZIGTAUX1 = ZIGTITRECRPS
BNNC = BNRC + SPENETC
PTOTD = PIRD
PENALIM3 = is_positive(EXPR3) * PRN3 - PRR3 - PRR23 - PRR2Z3 - PENF3
PRN3 = is_positive(TSNT3) * is_positive(TSNT3 + PRNN3) * TSNT3 + PRNN3 + positif_ou_nul(TSNT3) * PRNN3
NRCELREPHS = max(min(RCELREP_HS, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH), 0)
LIGREPSAE = is_positive(REPSE + REPAE) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
INVRETPSR = min(INVRETPS, max(0, NINVRETPS - INVRETPS)) * 1 - V_CNR
TRPQPRRZC = inf(TGLPRRZC / CODNBZ)
TXSPEAAV = BNCREV + XHONOAAV - BNCDEV * 1 - is_positive(ART1731BIS)
NINVRETTAR = NINVRETTA - arr(NINVRETTA * TX375 / 100) * 1 - V_CNR
SOMDEFANT = DEFAA5 + DEFAA4 + DEFAA3 + DEFAA2 + DEFAA1 + DEFAA0
RPRESCOMPREP = max(min(RPRESCOMP, IDOM11 - DEC11 - RCOTFOR - RREPA - RFIPDOM - RAIDE - RDIFAGRI - RFORET - RFIPC - RCINE - RRESTIMO - RSOCREPR), 0) * is_positive(RDPRESREPORT)
RCELREPHW = max(0, RCELREPHW_1 * 1 - ART1731BIS + min(RCELREPHW_1, max(RCELREPHW_P + RCELREPHWP2, RCELREPHW1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
AILMOC = DILMOC * 1 - V_CNR
TERPQPRR1 = RPQPRR1 * 1 - is_positive(INDTEFF) + TRPQPRR1 * is_positive(INDTEFF)
LIGREPSAW = is_positive(REPSW + REPAW) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TERPQRCMCHM = RPQRCMCHM * 1 - is_positive(INDTEFF) + TRPQRCMCHM * is_positive(INDTEFF)
# TODO MAJTXCDIS1
TXSPEAAP = BNCREP + XHONOAAP - BNCDEP * 1 - is_positive(ART1731BIS)
REPINVPME2 = max(0, REPSNO1 - max(0, LIM_SOCNOUV2 * 1 + BOOL_0AM - min(REPSNO3, LIM_SOCNOUV2 * 1 + BOOL_0AM) + REPSNO2)) * 1 - V_CNR
LIGCELLZ = is_positive(DCELRREDLZ) * LIG1 * LIG2
ZIGLODD = is_positive(V_GLOANT - DGLOD) * is_positive(IDGLO) * 1 - null(V_IDGLOANT + DGLOD + 0) * 1 - null(V_IDGLOANT - DGLOD) * is_positive(V_NOTRAIT - 20) * LIG2
TAXASSURV = arr(BASSURV1 * TX_ASSUR1 / 100 + BASSURV2 * TX_ASSUR2 / 100 + BASSURV3 * TX_ASSUR3 / 100) * 1 - is_positive(RE168 + TAX1649)
IPQPRR12 = ZIPQPRR12 * CARPENBAP1
RISFDONF_2 = min(PLAF_ISFRED, RISFDONF_1)
_2RAN = 1 - is_positive(EXFR) * _2RCMRNABD - _2FRAN + is_positive(EXFR) * 0
RLOC120 = max(min(INVRETTAR * 1 - INDPLAF + INVRETTARA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118, RLOC119])), 0) * 1 - V_CNR
INVRETOZA = min(NINVRETOZ, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA)) * 1 - V_CNR
XFPT1 = XDF1 * XIND_101 + FRD1 * 1 - XIND_101
ZIPQPALIMV1 = is_positive(sum([TEGLPALIMC, TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPALIMV / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIMC, TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT
_4RCM_I = (1 - is_positive(DFRCMN) * _2RCAV - FRG3 * 1 - is_positive(ART1731BIS) + _2RCAV - FRG3 * is_positive(ART1731BIS)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
PERP_COND2 = is_positive(PERP_MUT) * 1 - is_positive(PERPIMPATRIE) * is_positive(PERP_COTC - PERPPLATCANT) * is_positive(PERPPLATVANT - PERP_COTV) + is_positive(PERPIMPATRIE) * is_positive(PERP_COTC - PERPPLAFIMPC) * is_positive(PERPPLAFIMPV - PERP_COTV)
TGL4TVC = arr(TONEQUO * REV4TVC / TOTALQUO)
PENALIMP = PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4
TRPQTS2 = inf(TGLTS2 / CARTSNBAP2)
TERPQTS4 = RPQTS4 * 1 - is_positive(INDTEFF) + TRPQTS4 * is_positive(INDTEFF)
NRILMIH = max(min(AILMIH, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED), 0)
LIGCELHS = is_positive(DCELREPHS) * LIG1 * LIG2
XEXTS1 = XTSB1 + CARTSP1 + REMPLAP1
RCEL_HL = is_positive(CELLIERHL) * arr(ACELHL * TX25 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PTORSE3 = arr(max(0, RSE3 - CIRSE3 - CSPROVYG) * COPETO / 100) + arr(max(0, RSE3 - CIRSE3 - CSPROVYG - RSE39YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
IS522 = arr(DS522 * NB2)
NPLOCNETF6 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(LNPRODEF10, LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF10 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF9, LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF9 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF8, LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF8 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF7, LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF7 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF6, LNPRODEF61731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF6 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF5, LNPRODEF51731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF5 * 1 - is_positive(ART1731BIS * PREM8_11)
REPMEUIR = RETPROREP - RPROREP * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RLOC70 = max(min(INVRETRI * 1 - INDPLAF + INVRETRIA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69])), 0) * 1 - V_CNR
TEGLTSC = GLTSC * 1 - is_positive(INDTEFF) + TGLTSC * is_positive(INDTEFF)
IND_ZIGRVT = 0
RIVDUEKL8 = max(0, arr(min(DUFLOEL + 0, LIMDUFLO) * TX29 / 100) + arr(min(DUFLOEK + 0, LIMDUFLO - min(DUFLOEL + PINELQD + PINELQC + 0, LIMDUFLO)) * TX18 / 100) - 8 * RIVDUEKL) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
GLRCMTS = is_positive(_6RCM + _7RCM + REVRF) * arr(TONEQUOHT * _5RCM / TOTALQUOHT) + 1 - is_positive(_6RCM + _7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC - GLRCMFU - GLRCMCH
IMPFHQ1 = 1 - is_positive(VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS) * EXO1 * arr(ID11 * IPQ01 / IPQ1)
REPLNPZ = REPMEUIK + REPMEUIR + REPMEUIQ + REPMEUIC + REPMEUJY + REPLOCIO + REPLOCIW + REPMEUOE
INVRETTBA = min(NINVRETTB, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA)) * 1 - V_CNR
IS026 = arr(DS026 * NB2)
DISFPMED = ISFPMEDI
XTSB4 = TSBN4
ABTS1CJ = arr(REP101 * TSHALLO1 / TSB1)
T2PRB4 = CARPEP4 + PENSALP4 + CODRFZ
BARAC = BACREC + _4BACREC - BACDEC * 1 - is_positive(ART1731BIS * PREM8_11)
AVPLAF11 = max(0, AUBAINE13A + AUBAINE13B + AUBAINE12 + AUBAINE11 - AVPLAF13 - AVPLAF12 - LIMIT11) * is_positive(V_DIFTEOREEL)
INDPLAF3 = is_positive(RNIDOM3 - TOTALPLAF3 - TOTALPLAFA - TOTALPLAFB)
REPDOMENTR1 = REPSB + REPSG + REPSL + REPSQ + REPSV + REPTA + REPSA + REPSF + REPSK + REPSP + REPSU + REPSZ + REPSC + REPSH + REPSM + REPSR + REPSW + REPTB + REPSE + REPSJ + REPSO + REPST + REPSY + REPTD
IPQTS11 = ZIPQTS11 * CARTSNBAP1
LIGRRCEL41 = is_positive(RRCELLA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
RDONS = max(0, RDONS_1 * 1 - ART1731BIS + min(RDONS_1, max(RDONS_P + RDONSP2, RDONS1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RV2 = arr(RVB2 * TXRVT2 / 100)
RCEL_FABC = is_positive(CELLIERFA) * arr(ACELFABC * TX13 / 100) + is_positive(CELLIERFB) * arr(ACELFABC * TX6 / 100) + is_positive(CELLIERFC) * arr(ACELFABC * TX24 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIGRSE1ANT = is_positive(V_RSE1ANT) * TYPE2 * 1 - APPLI_OCEANS
NINVRETSH = max(min(CODHSH, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC), 0) * 1 - V_CNR
INVRETPBA = min(arr(NINVRETPB * TX375 / 100), MAXDOM2) * 1 - V_CNR
CDISC = arr(BCDIS * TCDIS / 100) * 1 - is_positive(ANNUL2042)
TTSPR = TTSPRT * 1 - ART1731BIS + TTSPRT1731 * ART1731BIS + RVTOT
NINVRETBE = max(min(CODHBE, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW), 0) * 1 - V_CNR
DCELCOM = CELLIERNP + CELLIERNR + CELLIERNS + CELLIERNT
ABAGU = arr(min(ID11 * TX_RABGUY / 100 * PROGUY * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY)) * 1 - is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)) + ABAGU1 * is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ))
LIG52 = is_positive(present(CHENF1) + present(CHENF2) + present(CHENF3) + present(CHENF4) + present(NCHENF1) + present(NCHENF2) + present(NCHENF3) + present(NCHENF4)) * LIG1 * LIG2
TRPQTSREMP1M = inf(TGLTSREMP1M / REMPLANBP1)
ZIPQRWA2 = is_positive(TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQRWA / TETONEQUO1) + 1 - is_positive(TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQRWB2
ZIPQRCMDC5 = is_positive(TEGLRCMFUM + TEGLRCMCHM + TEGLRCMTSM + TEGLRCMGOM + TEGLRCMTRM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQRCMDCM / TETONEQUOM1) + 1 - is_positive(TEGLRCMFUM + TEGLRCMCHM + TEGLRCMTSM + TEGLRCMGOM + TEGLRCMTRM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT
LIGTAXASSUR = is_positive(present(CESSASSV) + present(CESSASSC)) * 1 - is_positive(ANNUL2042) * LIG1
TABPRV = arr(1 - TIND_APBV * min(TAPBV, TPL_PB * TAPBV / sum([TAPBV * 1 - TIND_APBV, TAPBC * 1 - TIND_APBC, TAPB1 * 1 - TIND_APB1, TAPB2 * 1 - TIND_APB2, TAPB3 * 1 - TIND_APB3, TAPB4 * 1 - TIND_APB4])) + TIND_APBV * TAPBV)
XDF2 = X10MINS2
LIGREPLOCNT = is_positive(REPLNPW + REPMEUPD + REPLOCNT) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REPDONR3 = positif_ou_nul(BASEDONF + REPDON04 - arr(REVDON * TX_BASEDUP / 100)) * REPDON05 + 1 - positif_ou_nul(BASEDONF + REPDON04 - arr(REVDON * TX_BASEDUP / 100)) * max(REPDON05 + BASEDONF + REPDON04 - arr(REVDON * TX_BASEDUP / 100), 0) * 1 - V_CNR
ZIPQ21 = is_positive(sum([TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQ2 / TETONEQUO1) + 1 - is_positive(sum([TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQRWB1 - ZIPQRWA1 - ZIPQRVG1 - ZIPQ11
TGLTSC = is_positive(TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2TSC / TOTALQUO) + 1 - is_positive(TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSV
RPQFCM = inf(GLFCM / COTFC)
ZIPQPRRZ41 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPRRZ4 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRZV1 - ZIPQPRRZC1 - ZIPQPRRZ11 - ZIPQPRRZ21 - ZIPQPRRZ31
TERPQF4M = RPQF4M * 1 - is_positive(INDTEFF) + TRPQF4M * is_positive(INDTEFF)
# TODO PPEPRIMEVT
TTSNN2TSC = is_positive(TTSC) * is_positive(REMPLAC) * arr(TTSC * CARTSC / TEXTSC) + 1 - is_positive(REMPLAC) * TTSC - TTSNNC
PERPINDC = is_positive(is_positive(is_positive(PERP_INDC) + 1 - is_positive(PERP_INDC) * 1 - is_positive(PRBRC + PALIC)) * is_positive(INDREV1A8) + 1 - is_positive(PERP_INDC) * is_positive(PRBRC + PALIC) * is_positive(PERP_COTC) + PERPMUTU * 1 - is_positive(PERP_INDC + PERP_COTC)) * 1 - PERP_NONC * BOOL_0AM * 1 - V_CNR
BSNCQ = max(0, min(COD7CQ, LIM_TITPRISE * 1 + BOOL_0AM - BSN1))
RCELRREDLN_1 = max(min(ACELRREDLN, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1), 0)
# TODO INDC
TTSB1 = TEXTS1
ZIPQPALIMANTV1 = is_positive(sum([TEGLPALIMC, TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPALIMV / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIMC, TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT
RB01 = RI1 * 1 - is_positive(VARIPTEFP * is_positive(ART1731BIS) + IPTEFP * 1 - ART1731BIS + VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS + INDTEFF) + ZONIPTEFP + PVIMPOS * is_positive(ZONIPTEFP) + ZONIPTEFN + PVIMPOS * is_positive(ZONIPTEFN - PVIMPOS) + PVIMPOS - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - PVIMPOS) * null(1 - FLAG_EXIT) + PVIMPOS + PVSURSI * is_positive(ZONIPTEFP) + ZONIPTEFN + PVSURSI * is_positive(ZONIPTEFN - PVSURSI) + PVSURSI - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - PVSURSI) * null(2 - FLAG_EXIT) + RFROBOR * V_INDTEO * is_positive(ZONIPTEFP) + TEFFREVTOT * 1 - is_positive(ZONIPTEFP + PVIMPOS * is_positive(ZONIPTEFP) + ZONIPTEFN + PVIMPOS * is_positive(ZONIPTEFN - PVIMPOS) + PVIMPOS - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - PVIMPOS) * null(1 - FLAG_EXIT) + PVSURSI + PVIMPOS * is_positive(ZONIPTEFP) + ZONIPTEFN + PVSURSI * is_positive(ZONIPTEFN - PVSURSI) + PVSURSI - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - PVSURSI) * null(2 - FLAG_EXIT)) * INDTEFF
IPCAPTAXT = IPCAPTAXTOT - CICAP
PRNC = is_positive(TSNTC) * is_positive(TSNTC + PRNNC) * TSNTC + PRNNC + positif_ou_nul(TSNTC) * PRNNC
NINVRETSF = max(min(CODHSF, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA), 0) * 1 - V_CNR
RIVCEL1 = RCEL_2011_R * is_positive(ACEL_R)
ACELREPHB = CELREPHB * 1 - ART1731BIS + min(CELREPHB, max(ACELREPHB_P + ACELREPHBP2, ACELREPHB1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TREP102 = TIND_102 * TD10M2 + 1 - TIND_102 * TFPT2
GLPRRCM = is_positive(PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2C / TOTALQUOHT) + 1 - is_positive(PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM
ISNETEAJ31 = max(0, INETABAEAJ31 - ISNETDAJ31)
RIVCELJP2 = RIVCELJP1
TGLN1 = TGLN1V + TGLN1C
TERPQPRRZ1M = RPQPRRZ1M * 1 - is_positive(INDTEFF) + TRPQPRRZ1M * is_positive(INDTEFF)
IRN = min(0, IAN + AVFISCOPTER - IRE) + max(0, IAN + AVFISCOPTER - IRE) * is_positive(IAMD1 + 1 - SEUIL_61)
LIG20YT = INDV * 1 - INDC * 1 - INDP * ART1731BIS * LIG0 * LIG2
RCODOU = max(min(RETCODOU, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV - RLOCIDEFG - RCODJTJU), 0)
RPQRCMTR = inf(GLRCMTR / INTERENB)
RLOCIDEFG = RCODIE + RCODIF + RCODIG + RCODID
NRTOURREP = max(min(arr(ATOURREP * TX_REDIL25 / 100), RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL - NRPIQABCD - NRNOUV - NRPLAFPME - NRFOR), 0)
RV4 = arr(RVB4 * TXRVT4 / 100)
EXSPB3 = EXTS3 + EXPR3
TRPQRWA = inf(TGLRWA / CODNWA) + 0
RSURV_1 = max(min(RRS, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1 - RSOCREPR_1 - RRPRESCOMP_1 - RHEBE_1), 0)
RSOC37 = arr(max(min(INVRETRCR * 1 - INDPLAF + INVRETRCRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32, RSOC33, RSOC34, RSOC35, RSOC36])), 0)) * 1 - V_CNR
RLOG30 = max(min(INVRETOX * 1 - INDPLAF + INVRETOXA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29])), 0) * 1 - V_CNR
LIGRSOCREPR = is_positive(present(RSOCREPRISE)) * LIG1 * LIG2
RSE1N = max(0, RSE1 - CIRSE1)
RPQFC = inf(GLFC / COTFC)
RSE5 = arr(BRSE5 * TX075 / 100) * 1 - is_positive(ANNUL2042)
TOTDEFLOCNP = LNPRODEF10 + LNPRODEF9 + LNPRODEF8 + LNPRODEF7 + LNPRODEF6 + LNPRODEF5 + LNPRODEF4 + LNPRODEF3 + LNPRODEF2 + LNPRODEF1
BSN1 = min(REPSNO3 + REPSNO2 + REPSNO1 + REPSNON + PETIPRISE, LIM_SOCNOUV2 * 1 + BOOL_0AM)
IN02 = max(IS012, IS022 - PLA)
IRNIN_INR = max(0, IRN - IRANT - IR9YI) * is_positive(IRN - IRANT)
SPETOTV = BNCPROV + BNCNPV
NINVRETRJ = max(min(INVOMENTRJ, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM), 0) * 1 - V_CNR
LIG0010 = INDV * INDC * INDP * 1 - ART1731BIS * LIG0 * LIG2
RILMJY = max(0, RILMJY_1 * 1 - ART1731BIS + min(RILMJY_1, max(RILMJY_P + RILMJYP2, RILMJY1731 + 0) * 1 - PREM8_11) * ART1731BIS)
LIG1522 = 1 - present(IND_TDR) * 1 - INDTXMIN * 1 - INDTXMOY * V_CR2 * LIG2
RLOC84 = max(min(INVRETPXR * 1 - INDPLAF + INVRETPXRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83])), 0) * 1 - V_CNR
RIVCELNBGL7 = RIVCELNBGL1
TEGLPALIMCM = GLPALIMCM * 1 - is_positive(INDTEFF) + TGLPALIMCM * is_positive(INDTEFF)
PPEPEXO1 = is_positive(PPE_AVRPRO1P + 0) + is_positive(SALEXT1 + 0) + 4 * is_positive(PPEXT1 + PPETPP1 + 0)
RETRESINEUV_1 = arr(arr(ACODIL / 9) * TX20 / 100) + arr(arr(ACODIN / 9) * TX20 / 100) + arr(arr(ACODIJ / 9) * TX18 / 100) + arr(arr(ACODIV / 9) * TX18 / 100)
ACODIW = min(PLAF_RESINEUV - ACODIM, RESIVIANT) * 1 - V_CNR
BDIFAGRI = min(INTDIFAGRI, LIM_DIFAGRI * 1 + BOOL_0AM) * 1 - V_CNR
TERPQF3 = RPQF3 * 1 - is_positive(INDTEFF) + TRPQF3 * is_positive(INDTEFF)
RGRFRHR = 1 - is_positive(IPVLOC) * SHBARFRHR + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBARFRHR - REVTP - BA1 - REVQTOTQHT) + is_positive(IPVLOC) * IPVLOC
CI8XFH = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET - CI8XV, ICI8XFH))
LIGPROREP = is_positive(DPROREP) * LIG1 * LIG2
INVRETQFA = min(arr(NINVRETQF * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA)) * 1 - V_CNR
PPRSD = PPRS * CSREC - PPRS_A * CSRECA
ISFIN = ISF4BASE
A14UN = max(0, min(BA14UN, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - A9RFOR - A10RFOR - A11RFOR - A12RFOR - A13UXI)) * 1 - ART1731BIS
LIGRCELFD = is_positive(RIVCELFD1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
LIGREPSM = is_positive(REPSM) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TS2 = TSN2
LIGREPRP = is_positive(REPRP) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
PPE_BOOL_MIN1 = positif_ou_nul(PPE_RTA1 - PPELIMRPB) * 1 - PPE_BOOL_NADA1
RCELREPGL_1 = max(min(ACELREPGL, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
HRBASE_N = arr(max(IHAUTREVT + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT + TAXLOY), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
TMIB_ABNPPC = max(0, arr(TMIB_APC * MIBNPPRESC / TMIB_TPRESC)) * present(MIBMEUC) + TMIB_APC - TMIB_ABPC * 1 - present(MIBMEUC)
PRBC = PRBRC + PALIC + PENINC
# TODO TAXANTAFF
NINVRETPTR = NINVRETPT - arr(NINVRETPT * TX40 / 100) * 1 - V_CNR
TSNT4 = TSN1FJ + TSN1FP + TSNRFJ + TSNRFP
REPPE = max(0, INVOMRETPE - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA)) * 1 - ART1731BIS + max(0, INVOMRETPE - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA)) * ART1731BIS * 1 - V_CNR
RBLRFR = RBG2RFR - min(RBG2RFR, DPA + DFA + DEDIV + APERPV + APERPC + APERPP + NUREPAR) * 1 - V_CNR - min(RBG2RFR, V_8ZT) * V_CR2 * 1 - is_positive(RE168 + TAX1649)
RPQF4M = inf(GLF4M / COTF4)
NSA = 1 - is_positive(PAC + V_0CH) * min(V_0AG + V_0AL * 1 - is_positive(V_0AN) * 1 - is_positive(is_positive(V_0AW) * positif_ou_nul(AGV - LIM_AGE_LET_S)) + V_0AW * is_positive(max(AGV + 1 - LIM_AGE_LET_S, AGC + 1 - LIM_AGE_LET_S)), 1) * 1 - V_0AP * is_positive(2 - NSM) * 0.5
TEXSPB4 = TEXTS4 + TEXPR4
RCODIL = RCODIL_1 * 1 - ART1731BIS + min(RCODIL_1, max(RCODIL_P + RCODILP2, RCODIL1731 + 0) * 1 - PREM8_11) * ART1731BIS
RCELREPGX_1 = max(min(ACELREPGX, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - RCELREPGU_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RILMJS_1 = max(min(AILMJS, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC), 0)
INDIRPS = 1 * 1 - LIGPS * is_positive(3 - ANTINDIRPS) + 3 * 1 - is_positive(1 - LIGPS * is_positive(3 - ANTINDIRPS))
PLAF1M = null(1 - V_REGCO) * arr(24043 + 2808.5 * min(NBPT - 1 * 4, 2) * is_positive(NBPT - 1) + 2210.5 * NBPT - 1.5 * 4 * is_positive(NBPT - 1.5))
RIVCELHJK8 = arr(min(CELLIERHK + CELLIERHJ + 0, LIMCELLIER) * is_positive(CELLIERHJ) * TX25 / 100 + min(CELLIERHK + CELLIERHJ + 0, LIMCELLIER) * is_positive(CELLIERHK) * TX40 / 100) - 8 * RIVCELHJK1 * 1 - V_CNR
TGLPRRZVM = is_positive(TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2ZV / TOTALQUO) + 1 - is_positive(TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M
ZIG_TITREC = is_positive(BCSG + V_CSANT) * 1 - is_positive(BRDS + V_RDANT) * 1 - is_positive(BPRS + V_PSANT) * 1 - is_positive(BCVNSAL + V_CVNANT) * 1 - V_CNR * LIG2
LIGLOCIDEFG = is_positive(DLOCIDEFG) * LIG1 * LIG2
XELU = ELURASC + ELURASV
ZIG_NETAP = is_positive(BCSG + BRDS + BPRS + BCVNSAL + BREGV + BCDIS + BGLOA + BRSE1 + BRSE2 + BRSE3 + BRSE4 + BRSE5) * LIG2
TGL1 = is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TGLN1 / TOTALQUO) + 1 - is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA - TGLRVG
LIGRVG = is_positive(CODRVG) * LIG1 * LIG2
TBICNPPROVP = max(0, arr(TMIB_ABNPVP / MIBNPVENP + TMIB_ABNPPP / MIBNPPRESP))
LIGMEUREP = is_positive(DREPMEU) * LIG1 * LIG2
TMIB_TVENV = MIBVENV + AUTOBICVV + MIBNPVENV + MIBGITEV + LOCGITV
# TODO HAUTREVANTAF
GLPALIM2M = is_positive(PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENALIM2 / TOTALQUOHT) + 1 - is_positive(PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM - GLPALIMCM - GLPALIM1M
RPQRVO7M = inf(GLRVO7M / RENTAXNB7)
RILMOB = max(min(AILMOB, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC), 0)
LIGCELHE = is_positive(DCELREPHE) * LIG1 * LIG2
TTSN1DJ = TSHALLO2 - TABTS1DJ
RISFPMEI_2 = max(0, min(PLAF_ISFRED - RISFDONF_1 - RISFDONCEE_1 - RISFPMED_1, RISFPMEI_1))
# TODO NMAJREGV1
TDEDMIN1 = is_positive(DETS1) * MIN_DEMEMPLOI + 1 - is_positive(DETS1) * MIN_DEDSFORFTS
# TODO NMAJRSE21
# TODO MAJTXC1
LIGISFCEE = is_positive(ISFDONEURO) * 1 - is_positive(ANNUL2042) * 1 - null(5 - V_IND_TRAIT) * LIGISF + present(ISFDONEURO) * is_positive(DISFBASE) * 1 - is_positive(ANNUL2042) * null(5 - V_IND_TRAIT)
RSE59YP = is_positive(BREGV) * arr(VAR9YIPS * RSE5 - CSPROVYE / BINRPS) + 1 - is_positive(BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP - GLO9YP - RSE19YP - RSE29YP - RSE39YP - RSE49YP)
SOMMEA700 = present(BAEXV) + present(BACREV) + present(_4BACREV) + present(BA1AV) + present(BACDEV) + present(BAEXC) + present(BACREC) + present(_4BACREC) + present(BA1AC) + present(BACDEC) + present(BAEXP) + present(BACREP) + present(_4BACREP) + present(BA1AP) + present(BACDEP) + present(BAPERPV) + present(BAPERPC) + present(BAPERPP) + present(BANOCGAV) + present(BANOCGAC) + present(BANOCGAP) + present(BAHEXV) + present(BAHREV) + present(_4BAHREV) + present(BAHEXC) + present(BAHREC) + present(_4BAHREC) + present(BAHEXP) + present(BAHREP) + present(_4BAHREP) + present(BICEXV) + present(BICNOV) + present(LOCPROCGAV) + present(BI1AV) + present(BICDNV) + present(LOCDEFPROCGAV) + present(BICEXC) + present(BICNOC) + present(LOCPROCGAC) + present(BI1AC) + present(BICDNC) + present(LOCDEFPROCGAC) + present(BICEXP) + present(BICNOP) + present(LOCPROCGAP) + present(BI1AP) + present(BICDNP) + present(LOCDEFPROCGAP) + present(BICNPEXV) + present(BICREV) + present(LOCNPCGAV) + present(LOCGITCV) + present(BI2AV) + present(BICDEV) + present(LOCDEFNPCGAV) + present(BICNPEXC) + present(BICREC) + present(LOCNPCGAC) + present(LOCGITCC) + present(BI2AC) + present(BICDEC) + present(LOCDEFNPCGAC) + present(BICNPEXP) + present(BICREP) + present(LOCNPCGAPAC) + present(LOCGITCP) + present(BI2AP) + present(BICDEP) + present(LOCDEFNPCGAPAC) + present(BNCEXV) + present(BNCREV) + present(BN1AV) + present(BNCDEV) + present(BNCEXC) + present(BNCREC) + present(BN1AC) + present(BNCDEC) + present(BNCEXP) + present(BNCREP) + present(BN1AP) + present(BNCDEP) + present(BNHEXV) + present(BNHREV) + present(BNHEXC) + present(BNHREC) + present(BNHEXP) + present(BNHREP) + present(XHONOAAV) + present(XHONOAAC) + present(XHONOAAP) + present(BNCNPREXAAV) + present(BNCNPREXV) + present(BNCNPREXAAC) + present(BNCNPREXC) + present(BNCNPREXAAP) + present(BNCNPREXP) + present(BNCAABV) + present(BNCAADV) + present(ANOCEP) + present(PVINVE) + present(INVENTV) + present(BNCAABC) + present(BNCAADC) + present(DNOCEP) + present(ANOVEP) + present(PVINCE) + present(INVENTC) + present(BNCAABP) + present(BNCAADP) + present(DNOCEPC) + present(ANOPEP) + present(PVINPE) + present(INVENTP) + present(DNOCEPP)
LIGREPRYT = is_positive(REPRY + REPST + REPAT) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
PPENARPRIMEU = PPE_FORMULEU * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCONDU - 2) * 1 - PPE_BOOL_TPU + arr(PPE_FORMULEU * PPETXMAJ1) + arr(PPE_FORMULEU * PPE_COEFFU * PPETXMAJ2) * is_positive(2 - PPE_COEFFCONDU) * is_positive(PPE_COEFFCONDU - 1) * 1 - PPE_BOOL_TPU + PPE_FORMULEU * is_positive(PPE_BOOL_TPU + positif_ou_nul(1 - PPE_COEFFCONDU))
RCELRREDLB = max(0, RCELRREDLB_1 * 1 - ART1731BIS + min(RCELRREDLB_1, max(RCELRREDLB_P + RCELRREDLBP2, RCELRREDLB1731 + 0) * 1 - PREM8_11) * ART1731BIS)
TGLN2 = TGLN2V + TGLN2C
REPMEUJW = DILMJW - RILMJW * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TGLPALIM1M = is_positive(TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPENALIM1 / TOTALQUO) + 1 - is_positive(TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM - TGLPALIMCM
TERPQRF2 = RPQRF2 * 1 - is_positive(INDTEFF) + TRPQRF2 * is_positive(INDTEFF)
IPQ12 = ZIPQ12 * 1
RENT30 = max(min(INVRETBBR * 1 - INDPLAF + INVRETBBRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29])), 0) * 1 - V_CNR
INDRSE1X = is_positive(CS_DEG) * is_positive(BRSE1) * is_positive(INDCTX)
LIGF10P = is_positive(F10AP + F10BP) * LIG0 * LIG2
RCEL = max(0, RCEL_1 * 1 - ART1731BIS + min(RCEL_1, max(RCEL_P + RCELP2, RCEL1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RLOC48 = max(min(INVRETPT * 1 - INDPLAF + INVRETPTA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47])), 0) * 1 - V_CNR
NRILMIX = max(min(AILMIX, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP), 0)
NINVRETRI = max(min(INVOMENTRI, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW), 0) * 1 - V_CNR
INVRETODA = min(NINVRETOD, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA)) * 1 - V_CNR
NINVRETQXR = NINVRETQX - arr(NINVRETQX * TX35 / 100) * 1 - V_CNR
NRILMJV = max(min(AILMJV, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW), 0)
RLOCIDFG5 = arr(arr(ACODID / 9) * TX11 / 100) + arr(arr(ACODIF / 9) * TX18 / 100) + arr(arr(ACODIG / 9) * TX11 / 100)
PTPS10P = arr(PERPSALP * TX_DEDFORFTS / 100)
RCODJU2 = arr(arr(ACODJU / 9) * TX11 / 100)
RDSC = arr(BRDS * T_RDS / 100) * 1 - is_positive(ANNUL2042)
_2RCMRNABD = REVACT - _2RCMRABD
LIGREPRG = is_positive(REPRG) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TSNT2 = TSN1DJ + TSN1DP + TSNRDJ + TSNRDP
ZIPQRCMTR2 = is_positive(TEGLRCMGO + TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQRCMTR / TETONEQUO1) + 1 - is_positive(TEGLRCMGO + TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCMDC2 - ZIPQRCMFU2 - ZIPQRCMCH2
IPQPRRANT41 = ZIPQPRRANT41 * CARPENBAP4
TMIB_ABNPVLP = TMIB_AVP - TMIB_ABVP - TMIB_ABNPVP * is_positive(present(MIBGITEP) + present(LOCGITP))
LIGRCMSOC = is_positive(RCMSOC) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RLOC75 = max(min(INVRETPOR * 1 - INDPLAF + INVRETPORA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74])), 0) * 1 - V_CNR
INVRETSC = min(NINVRETSC, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW)) * 1 - V_CNR
TMIB_APV = min(TMIB_TPRESV, max(MIN_MBIC, arr(TMIB_TPRESV * TX_MIBPRES / 100)))
DNBE = RDENS + RDENL + RDENU + RDENSQAR + RDENLQAR + RDENUQAR
RESIMEUB4 = arr(arr(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
REPKH = max(0, INVOMSOCKH - max(0, RRIREP - INVSOCNRET)) * 1 - ART1731BIS + max(0, INVOMSOCKH - max(0, RDOMSOC1 - INVSOCNRET)) * ART1731BIS * 1 - V_CNR
TSPRD1 = min(0, TSNN1 + PRR1) * ART1731BIS
DNOUV = REPSNO3 + REPSNO2 + REPSNO1 + REPSNON + COD7CQ + COD7CR + PETIPRISE + RDSNO
RIVCELJOQR3 = RIVCELJOQR1
TRPQRVO6M = inf(TGLRVO6M / RENTAXNB6)
LIGRESIMEUB = is_positive(DRESIMEUB) * LIG1 * LIG2
IDOM16 = max(ID16 - ADO6 * 1 - is_positive(INDCODDAJ) + ITOTDOM6 * is_positive(INDCODDAJ), IMI) * 1 - INDTXMOY + IMO * INDTXMOY
TSNN2TS2 = is_positive(TS2) * is_positive(REMPLAP2) * arr(TS2 * CARTSP2 / EXTS2) + 1 - is_positive(REMPLAP2) * TS2 - TSNN2
RSOC12 = arr(max(min(INVRETKGR * 1 - INDPLAF + INVRETKGRA * INDPLAF, RRISUP - RSOC11), 0)) * 1 - V_CNR
ZIGPROVYG = is_positive(CSPROVYG) * TYPE2
PPE_NBMAJO = positif_ou_nul(PPE_NB_PAC - PPE_NBELIGI) * PPE_NBELIGI + 1 - positif_ou_nul(PPE_NB_PAC - PPE_NBELIGI) * PPE_NB_PAC
RIVCELCOM4 = arr(min(CELLIERNP + CELLIERNR + CELLIERNS + CELLIERNT, LIMCELLIER) * is_positive(CELLIERNP + CELLIERNT) * TX36 / 100 + min(CELLIERNP + CELLIERNR + CELLIERNS + CELLIERNT, LIMCELLIER) * is_positive(CELLIERNR + CELLIERNS) * TX40 / 100) - 4 * RIVCELCOM1 * 1 - V_CNR
LIGMIBNPNEG = is_positive(MIBNPRV + MIBNPRC + MIBNPRP + MIB_NETNPCT * -1) * LIG2
TPLR3 = min(MIN_DEDPR, TEXPR3)
REPMEUJY = DILMJY - RILMJY * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIG_TITREP = ZIG_NETAP + ZIG_TOTDEG
IAVF = IRE - EPAV + CICORSE + CICULTUR + CIGPA + CIRCMAVFT
BARSC = BAHREC + _4BAHREC - BAHDEC * 1 - is_positive(ART1731BIS * PREM8_11)
NINVRETRL = max(min(INVOMENTRL, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY), 0) * 1 - V_CNR
ABAGU1 = arr(min(IPROGUY1 + IQUOEAJ1 * TX_RABGUY / 100, PLAF_RABGUY))
A13REELA = RCOTFOR + RFIPDOM + RAIDE + RFIPC + RINNO + RSOUFIP + RRIRENOV + RDUFLOEKL + RPINELTOT + A13RFOR + arr(RSNCF + RSNCU + RSNCC + RSNCR + RPLAFREPME4) + RCODOU + CIDEVDUR + CIGARD + CIADCRE + CIHABPRIN + CILOYIMP + CIFORET + RDUFREPFI + RDUFLOGIH + RCODJT + RILMPE + RILMOA + RPATNAT
# TODO DBAIP
INVRETQF = min(arr(NINVRETQF * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO)) * 1 - V_CNR
REVIBI12V = BIH1V + BIH2V + BI1AV + BI2AV
IPQPRR25 = ZIPQPRRZ25 * CARPENBAP2
RLOG15 = max(min(INVRETOJ * 1 - INDPLAF + INVRETOJA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14])), 0) * 1 - V_CNR
TABDOMEAJ = is_positive(CODEAJ) * is_positive(GLD1V + GLD2V + GLD3V) * arr(TREP10V * CODEAJ / TTSBV) + 1 - is_positive(GLD1V + GLD2V + GLD3V) * max(0, TREP10V - TABTSV - TABDOMDAJ) + 0
BCIFORETUP = max(0, min(RDFORESTRA, PLAF_FOREST1 * 1 + BOOL_0AM - BCIFORETUA - BCIFORETUB)) * 1 - V_CNR
TEXTS4 = TTSBN4 + T2TSN4
RPROREP = max(0, RPROREP_1 * 1 - ART1731BIS + min(RPROREP_1, max(RPROREP_P + RPROREPP2, RPROREP1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RIVCELNQ2 = RIVCELNQ1
AVPLAF9 = max(0, AUBAINE13A + AUBAINE13B + AUBAINE12 + AUBAINE11 + AUBAINE10 + AUBAINE9 - AVPLAF13 - AVPLAF12 - AVPLAF11 - AVPLAF10 - LIMIT9) * is_positive(V_DIFTEOREEL)
RSNCF = max(0, min(RSN_CF, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL - RSNCM - RSNCN - RSNCC - RSNCU - RSNCQ - RSNCR))
RLOC98 = max(min(INVRETSP * 1 - INDPLAF + INVRETSPA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97])), 0) * 1 - V_CNR
PPE_COEFF2 = PPE_BOOL_TP2 * 360 / PPENBJ + 1 - PPE_BOOL_TP2 / PPENHP2 + PPEXT2 * is_positive(PPE_SALAVDEF2 + 0) / 1820
BCIHP = max(PLAFHABPRIN * 1 + BOOL_0AM * 1 + is_positive(V_0AP + V_0AF + V_0CG + V_0CI + V_0CR) + PLAFHABPRINENF / 2 * V_0CH + V_0DP + PLAFHABPRINENF * V_0CR + V_0CF + V_0DJ + V_0DN, 0)
LIGTAXASSURC = present(CESSASSC) * 1 - is_positive(ANNUL2042) * LIG1
ZIPQ35 = is_positive(TEGL4M + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQ3M / TETONEQUOM1) + 1 - is_positive(TEGL4M + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7 - ZIPQRWB5 - ZIPQRWA5 - ZIPQRVG5 - sum([ZIPQ15, ZIPQ25])
INVRETPWA = min(NINVRETPW, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA)) * 1 - V_CNR
BASSURV1 = max(0, CESSASSV - BASSURV3 - BASSURV2 - LIM_ASSUR1)
CELSOMN = CELLIERNA + CELLIERNC + CELLIERND + CELLIERNE + CELLIERNF + CELLIERNH + CELLIERNI + CELLIERNJ + CELLIERNK + CELLIERNM + CELLIERNN + CELLIERNO
LIGCOD3SL = is_positive(COD3SL) * LIG1 * LIG2
LIGRRCEL1 = is_positive(RRCELMG + RRCELMH + RRCEL2012) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
REPMEUPD = DILMPD - RILMPD * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RPQ4 = inf(GL4 / DIVGL4) + 0
AILMJV = DILMJV * 1 - ART1731BIS + min(DILMJV, max(AILMJV_P + AILMJVP2, AILMJV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
LIG21401 = (1 - INDCTX * INDREV1A8 * 1 - is_positive(IRANT) * null(NAPT) * LIG2 + null(IINET + NAPTOTA) * null(INDREV1A8) * is_positive(IND_REV) * is_positive(20 - V_NOTRAIT)) if (V_CR2 + 0 == 0 and NATIMP == 1 and IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + NRINET - NAPTOTA + NAPCR >= SEUIL_12 or V_CR2 + 0 == 1 and NATIMP == 1 or NATIMP == 0 and LIG2141 + 0 == 0) else 0
REVTP = BPTP2 + BPTPVT + BPTP4 + BTP3A + BPTP40 + BPTP24 + BPTP18 + BPTPSJ
LIG2141 = null(IAN + RPEN - IAVT + TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - IRANT) * is_positive(IRANT) * 1 - is_positive(LIG2501) * null(V_IND_TRAIT - 4) * 1 - is_positive(NRINET + 0)
PPE_RCONTP2 = arr(PPE_RTA2 * PPE_COEFF2)
# TODO RNIDF3
ZIG_PEN17281 = ZIG_PENAMONT * is_positive(NMAJC1 + NMAJR1 + NMAJP1 + NMAJCVN1) * LIG2
TMIB_AVV = min(TMIB_TVENV, max(MIN_MBIC, arr(TMIB_TVENV * TX_MIBVEN / 100)))
GLPALIM1 = is_positive(PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENALIM1 / TOTALQUOHT) + 1 - is_positive(PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV - GLPALIMC
RCELFD = max(0, RCELFD_1 * 1 - ART1731BIS + min(RCELFD_1, max(RCELFD_P + RCELFDP2, RCELFD1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REPRT = max(0, INVOMENTRT - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW - INVOMRETPR - INVOMRETPW - INVOMENTRI - INVOMENTRO)) * 1 - ART1731BIS + max(0, INVOMENTRT - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW - INVOMRETPR - INVOMRETPW - INVOMENTRI - INVOMENTRO)) * ART1731BIS * 1 - V_CNR
LIGREPRD = is_positive(REPRD) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
ADO32 = ABADON32 * 1 - is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)) + ABATOT32 * is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ))
PVTAUXPS = BPVSJ + BPVSK + BPV18V + BPV18C + BPCOPTV + BPCOPTC + BPV40V + BPV40C + BPCOSAV + BPCOSAC + PEA + GAINPEA
IPQRVO5ANT1 = ZIPQRVO5ANT1 * RENTAXNB5
INVRETKGRA = min(NINVRETKGR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA)) * 1 - V_CNR
SPENETNPP = max(0, BNCNPP - SPEABNPP)
IAVFGP = IAVF2 + CREFAM + CREAPP
PTOTPCAP = arr(max(0, IPCAPTAXT - min(IPCAPTAXT + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR)) + min(0, IRN - IRANT + TAXASSUR)) * COPETO / 100) + arr(max(0, IPCAPTAXT - min(IPCAPTAXT + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR)) + min(0, IRN - IRANT + TAXASSUR)) * COPETO / 100) * is_positive(null(CMAJ - 10) + null(CMAJ - 17)) + arr(max(0, IPCAPTAXT - min(IPCAPTAXT + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR)) + min(0, IRN - IRANT + TAXASSUR) - CAP9YI) * TXINT / 100)
DEC31 = min(max(arr(SEUIL_DECOTE1 * 1 - BOOL_0AM + SEUIL_DECOTE2 * BOOL_0AM - IDOM31), 0), IDOM31) * 1 - V_ANC_BAR + min(max(arr(SEUIL_DECOTEA / 2 - IDOM31 / 2), 0), IDOM31) * V_ANC_BAR * 1 - V_CNR
ARESIMEUB = ARESIMEUB_1 * 1 - ART1731BIS + min(ARESIMEUB_1, max(ARESIMEUB_P + ARESIMEUBP2, ARESIMEUB1731 + 0) * 1 - PREM8_11) * ART1731BIS
RPQRCMCH = inf(GLRCMCH / PROVIENB)
TPRBV = PRBRV + PALIV + PENINV
LIGFORET = is_positive(DFORET) * LIG1 * LIG2
LIGNMAJCHR3 = TYPE2 * is_positive(NMAJCHR3)
LIGBNCAP = is_positive(ABNCPDECV + ABNCPDECC + ABNCPDECP) * LIG1 * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO)) * LIG2
MIB_NETNPVLV = MIBGITEV + LOCGITV - MIB_ABNPVLV
ILITAXANET = positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * max(0, TAXACUM - PTAXA - PIRNETNEG) + 1 - positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * 0
PS_RE168 = RE168
IPQFANTV1 = ZIPQFANTV1 * COTFV
BCICAPAVIS = max(0, PRELIBXT - arr(PRELIBXT * TX10 / 100))
LIGMOBNR = is_positive(PVMOBNR) * LIG1 * LIG2
BCEL_2012 = arr(min(CELLIERJA + CELLIERJD + CELLIERJE + CELLIERJF + CELLIERJH + CELLIERJJ + CELLIERJK + CELLIERJM + CELLIERJN + 0, LIMCELLIER) / 9)
LIGDAB = is_positive(present(DABNCNP6) + present(DABNCNP5) + present(DABNCNP4) + present(DABNCNP3) + present(DABNCNP2) + present(DABNCNP1)) * LIG0 * LIG2
RCELREPYD = max(0, RCELREPYD_1 * 1 - ART1731BIS + min(RCELREPYD_1, max(RCELREPYD_P + RCELREPYDP2, RCELREPYD1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NINVRETRLR = NINVRETRL - arr(NINVRETRL * TX375 / 100) * 1 - V_CNR
RESINEUV8 = arr(ACODIN * TX20 / 100) + arr(ACODIJ * TX18 / 100) + arr(ACODIV * TX18 / 100) - RESINEUV1 - RESINEUV2 - RESINEUV3 - RESINEUV4 - RESINEUV5 - RESINEUV6 - RESINEUV7 - RESINEUV7
LIGCDIS = is_positive(GSALV + GSALC) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGTROPRESTS = is_positive(V_ANTRE + V_ANTCR) * null(IINET) * positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT) * 1 - positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT - SEUIL_12) * 1 - is_positive(LIGTROP) * LIGPS * 1 - INDCTX
LIGVIAN = is_positive(RESIVIANT) * is_positive(RESIVIAN1 + RESIVIAN2 + RESIVIAN3 + RESIVIAN4 + RESIVIAN5 + RESIVIAN6 + RESIVIAN7 + RESIVIAN8) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RPQRVO = inf(GLRVO / RENTAXNB)
AVPLAF10 = max(0, AUBAINE13A + AUBAINE13B + AUBAINE12 + AUBAINE11 + AUBAINE10 - AVPLAF13 - AVPLAF12 - AVPLAF11 - LIMIT10) * is_positive(V_DIFTEOREEL)
FORIMP = positif_ou_nul(FORREST) * CREFORMCHENT - FORREST
XEXTS4 = XTSB4 + CARTSP4 + REMPLAP4
ZIPQPALIM22 = is_positive(sum([TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPALIM2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - sum([ZIPQPALIM12, ZIPQPALIMV2, ZIPQPALIMC2])
RRCELLD = max(0, CELRREDLD - RCELRREDLD) * is_positive(CELRREDLD) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INVRETAJ = NINVRETAJ * 1 - V_CNR
REVIBI12C = BIH1C + BIH2C + BI1AC + BI2AC
IND_NIRED = (1 - INDCTX) if (CODINI == 3 or CODINI == 5 or CODINI == 13 and IAVIM + NAPCRPAVIM - TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES == 0 and V_CR2 == 0) else 0
BICNPF = 1 - is_positive(DEFRIBIC) * 1 - PREM8_11 * max(0, sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - DEFNPI) + is_positive(DEFRIBIC) * 1 - PREM8_11 * max(0, sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT - DEFNPI + DEFBICNPF)
IPQTSANTC1 = ZIPQTSANTC1 * CARTSNBAC
PRR2Z3 = is_positive(PEBF3 + PENSALP3) * arr(PRN3 * CODREZ / EXPR3) + 1 - is_positive(PEBF3 + PENSALP3) * PRN3 - PRR3 - PRR23
TERPQ4VC = RPQ4VC * 1 - is_positive(INDTEFF) + TRPQ4VC * is_positive(INDTEFF)
ABGL2V = is_positive(GLD2V) * is_positive(GLD3V) * arr(REP10V * GLD2V / TSBV) + 1 - is_positive(GLD3V) * max(0, REP10V - ABTSV - ABDOMDAJ - ABDOMEAJ - ABGL1V) + 0
ZIGCSGDCOR6 = ZIG_CSGDCOR * null(ANCSDED2 - V_ANREV + 6)
TGLRCMCH = is_positive(_5RCM + _6RCM + _7RCM + REVRF) * arr(TONEQUO * _4RCM / TOTALQUO) + 1 - is_positive(_5RCM + _6RCM + _7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC - TGLRCMFU
ABTSREJ = is_positive(CARTSP3) * is_positive(REMPLAP3) * arr(REP103 * CARTSP3 / TSB3) + 1 - is_positive(REMPLAP3) * max(0, REP103 - ABTS1EJ - ABTS1EP)
ZONIPTEFN = VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS
LIGREPXE = is_positive(REPXE) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
# TODO INDNIRI
IPROGUY32 = arr(IPQ02 * PROGUY / RG)
NPLOCNETF = is_positive(1 - is_positive(DEFRILOC) + PREM8_11) * max(0, NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - DNPLOCIMPU) + is_positive(DEFRILOC) * 1 - PREM8_11 * max(0, NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - DNPLOCIMPU + DEFLOCNPF)
RLOC38 = max(min(INVRETPFR * 1 - INDPLAF + INVRETPFRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37])), 0) * 1 - V_CNR
RCELHL_1 = max(min(RCEL_HL, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RLOC32 = max(min(INVRETPD * 1 - INDPLAF + INVRETPDA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31])), 0) * 1 - V_CNR
LIGREPMMQE = is_positive(REPRJ + REPMN + REPQE) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
IPQPRRZC2 = ZIPQPRRZC2 * CODNBZ
TGLTSV = is_positive(TTSNN2TSC + TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2TSV / TOTALQUO) + 1 - is_positive(TTSNN2TSC + TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT
DS024 = max(QF024 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF024 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF024 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF024 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF024 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
INDPPEP = is_positive(sum([PPETPP1, PPETPP2, PPETPP3, PPETPP4]) * PPESALPTOT + sum([PPENBH1, PPENBH2, PPENBH3, PPENBH4]) * PPESALPTOT + PPEACP + PPENJP * abs(PPERPROP) * null(TSHALLO1 + TSHALLO2 + TSHALLO3 + TSHALLO4 + 0) + is_positive(sum([PPETPP1 + PPENBH1 + 0, PPETPP2 + PPENBH2 + 0, PPETPP3 + PPENBH3 + 0, PPETPP4 + PPENBH4 + 0])) + sum([present(CARTSP1) * present(CARTSNBAP1), present(CARTSP2) * present(CARTSNBAP2), present(CARTSP3) * present(CARTSNBAP3), present(CARTSP4) * present(CARTSNBAP4)]) * PPEPRIMEPT + abs(PPERPROP) * PPEPRIMEPT)
NRCELRREDLD = max(min(CELRREDLD, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC])), 0)
SOMMEA862 = present(MIBEXV) + present(MIBVENV) + present(MIBPRESV) + present(MIBPVV) + present(MIB1AV) + present(MIBDEV) + present(BICPMVCTV) + present(MIBEXC) + present(MIBVENC) + present(MIBPRESC) + present(MIBPVC) + present(MIB1AC) + present(MIBDEC) + present(BICPMVCTC) + present(MIBEXP) + present(MIBVENP) + present(MIBPRESP) + present(MIBPVP) + present(MIB1AP) + present(MIBDEP) + present(BICPMVCTP) + present(BICEXV) + present(BICNOV) + present(LOCPROCGAV) + present(BI1AV) + present(BICDNV) + present(LOCDEFPROCGAV) + present(BICEXC) + present(BICNOC) + present(LOCPROCGAC) + present(BI1AC) + present(BICDNC) + present(LOCDEFPROCGAC) + present(BICEXP) + present(BICNOP) + present(LOCPROCGAP) + present(BI1AP) + present(BICDNP) + present(LOCDEFPROCGAP) + present(BIHEXV) + present(BIHNOV) + present(LOCPROV) + present(BIHDNV) + present(LOCDEFPROV) + present(BIHEXC) + present(BIHNOC) + present(LOCPROC) + present(BIHDNC) + present(LOCDEFPROC) + present(BIHEXP) + present(BIHNOP) + present(LOCPROP) + present(BIHDNP) + present(LOCDEFPROP) + present(MIBMEUV) + present(MIBGITEV) + present(LOCGITV) + present(MIBNPEXV) + present(MIBNPVENV) + present(MIBNPPRESV) + present(MIBNPPVV) + present(MIBNP1AV) + present(MIBNPDEV) + present(MIBMEUC) + present(MIBGITEC) + present(LOCGITC) + present(MIBNPEXC) + present(MIBNPVENC) + present(MIBNPPRESC) + present(MIBNPPVC) + present(MIBNP1AC) + present(MIBNPDEC) + present(MIBMEUP) + present(MIBGITEP) + present(LOCGITP) + present(MIBNPEXP) + present(MIBNPVENP) + present(MIBNPPRESP) + present(MIBNPPVP) + present(MIBNP1AP) + present(MIBNPDEP) + present(MIBNPDCT) + present(BICNPEXV) + present(BICREV) + present(LOCNPCGAV) + present(LOCGITCV) + present(BI2AV) + present(BICDEV) + present(LOCDEFNPCGAV) + present(BICNPEXC) + present(BICREC) + present(LOCNPCGAC) + present(LOCGITCC) + present(BI2AC) + present(BICDEC) + present(LOCDEFNPCGAC) + present(BICNPEXP) + present(BICREP) + present(LOCNPCGAPAC) + present(LOCGITCP) + present(BI2AP) + present(BICDEP) + present(LOCDEFNPCGAPAC) + present(BICNPHEXV) + present(BICHREV) + present(LOCNPV) + present(LOCGITHCV) + present(BICHDEV) + present(LOCDEFNPV) + present(BICNPHEXC) + present(BICHREC) + present(LOCNPC) + present(LOCGITHCC) + present(BICHDEC) + present(LOCDEFNPC) + present(BICNPHEXP) + present(BICHREP) + present(LOCNPPAC) + present(LOCGITHCP) + present(BICHDEP) + present(LOCDEFNPPAC) + present(BNCPROEXV) + present(BNCPROV) + present(BNCPROPVV) + present(BNCPRO1AV) + present(BNCPRODEV) + present(BNCPMVCTV) + present(BNCPROEXC) + present(BNCPROC) + present(BNCPROPVC) + present(BNCPRO1AC) + present(BNCPRODEC) + present(BNCPMVCTC) + present(BNCPROEXP) + present(BNCPROP) + present(BNCPROPVP) + present(BNCPRO1AP) + present(BNCPRODEP) + present(BNCPMVCTP) + present(BNCPMVCTV) + present(BNCEXV) + present(BNCREV) + present(BN1AV) + present(BNCDEV) + present(BNCEXC) + present(BNCREC) + present(BN1AC) + present(BNCDEC) + present(BNCEXP) + present(BNCREP) + present(BN1AP) + present(BNCDEP) + present(BNHEXV) + present(BNHREV) + present(BNHDEV) + present(BNHEXC) + present(BNHREC) + present(BNHDEC) + present(BNHEXP) + present(BNHREP) + present(BNHDEP) + present(XSPENPV) + present(BNCNPV) + present(BNCNPPVV) + present(BNCNP1AV) + present(BNCNPDEV) + present(XSPENPC) + present(BNCNPC) + present(BNCNPPVC) + present(BNCNP1AC) + present(BNCNPDEC) + present(XSPENPP) + present(BNCNPP) + present(BNCNPPVP) + present(BNCNP1AP) + present(BNCNPDEP) + present(BNCNPDCT) + present(BNCNPREXAAV) + present(BNCAABV) + present(BNCAADV) + present(BNCNPREXV) + present(ANOCEP) + present(DNOCEP) + present(PVINVE) + present(INVENTV) + present(BNCNPREXAAC) + present(BNCAABC) + present(BNCAADC) + present(BNCNPREXC) + present(ANOVEP) + present(DNOCEPC) + present(PVINCE) + present(INVENTC) + present(BNCNPREXAAP) + present(BNCAABP) + present(BNCAADP) + present(BNCNPREXP) + present(ANOPEP) + present(DNOCEPP) + present(PVINPE) + present(INVENTP)
# TODO DEFRF4BC
LIGRCMABT = is_positive(present(RCMABD) + present(RCMTNC) + present(RCMHAD) + present(RCMHAB) + present(RCMAV) + present(REGPRIV) + present(RCMFR) + present(DEFRCM) + present(DEFRCM2) + present(DEFRCM3) + present(DEFRCM4) + present(DEFRCM5) + present(DEFRCM6)) * 1 - is_positive(IPVLOC) * LIG1 * LIG2 * is_positive(INDREV1A8IR)
RESIVIAN3 = arr(arr(ACODIW / 9) * TX25 / 100)
RIV2012CEL6 = RIV2012CEL1
RDBASE = RDSN - CRDSIM
REPLOCN1 = REPMEUJC
TSNN2C = is_positive(TSC) * is_positive(CARTSC + REMPLAC) * arr(TSC * _2TSNC / EXTSC) + 1 - is_positive(CARTSC + REMPLAC) * TSC - TSNNC
LIGREPPS = is_positive(REPPS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TRAU = _1RAU + _2RAU
ACELREPYE = CELREPYE * 1 - ART1731BIS + min(CELREPYE, max(ACELREPYE_P + ACELREPYEP2, ACELREPYE1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGTITREXVCP = is_positive(EXOVOUS) * is_positive(EXOCJT) * is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
LIGISFIP = is_positive(ISFFIP) * 1 - is_positive(ANNUL2042) * 1 - null(5 - V_IND_TRAIT) * LIGISF + present(ISFFIP) * is_positive(DISFBASE) * 1 - is_positive(ANNUL2042) * null(5 - V_IND_TRAIT)
RPQTSREMP3 = inf(GLTSREMP3 / REMPLANBP3)
TEGLRCMTR = GLRCMTR * 1 - is_positive(INDTEFF) + TGLRCMTR * is_positive(INDTEFF)
REPLOCIE1 = arr(arr(ACODIE / 9) * TX18 / 100)
LIGREPSY = is_positive(REPSY) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
INVRETABR = min(arr(INVRETAB * 5 / 3), NINVRETAB - INVRETAB) * 1 - null(1 - abs(arr(INVRETAB * 5 / 3) - NINVRETAB - INVRETAB)) + NINVRETAB - INVRETAB * null(1 - abs(arr(INVRETAB * 5 / 3) - NINVRETAB - INVRETAB)) * 1 - V_CNR
TTPR1 = TTSN1 + TPRN1
TPENF1 = is_positive(PENSALP1) * arr(TPRN1 * PEBF1 / TEXPR1) + 1 - is_positive(PENSALP1) * TPRN1 - TPRR1 - TPRR21 - TPRR2Z1
EMPREST = is_positive(REST) * max(0, min(COD8TL, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - IPELUS - CITEC - CIDEVDUR - CIGE - I2DH - CI2CK))
RESIMEUB1 = arr(arr(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
T2PRBV = CARPEV + PENSALV + CODRAZ
ISFPOSTPLAF = max(0, ISFNETRED - RISFPLAF)
PPECOEFF3 = arr(PPE_COEFFCOND3 * 100)
RDRCM1 = TRCMABD + DRTNC + RAVC + RCMNAB + RTCAR + RCMPRIVM + RCMIMPAT - RCMSOC - is_positive(RCMRDS) * min(RCMRDS, RCMABD + REVACT + RCMAV + PROVIE + RCMHAD + DISQUO + RCMHAB + INTERE + RCMTNC + REVPEA + COD2FA)
LIGMIBNPPOS = is_positive(MIBNPRV + MIBNPRC + MIBNPRP + MIB_NETNPCT) * 1 - is_positive(LIG_BICNPF) * LIG2
ACELRREDLB = CELRREDLB * 1 - ART1731BIS + min(CELRREDLB, max(ACELRREDLB_P + ACELRREDLBP2, ACELRREDLB1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
T2TSNC = CARTSC + REMPLAC
INVRETOW = min(NINVRETOW, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV)) * 1 - V_CNR
NRCELREPYK = max(min(ACELREPYK, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF])), 0)
WTXMARJ = RB51 / NB1 * null(PLAFQF) + NB2 * null(1 - PLAFQF)
ZIPQTSREMP41 = IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTS1TOT - ZIPQTSREMPV1 - ZIPQTSREMPC1 - ZIPQTSREMP11 - ZIPQTSREMP21 - ZIPQTSREMP31
TEXPR3 = TPRB3 + COD1EH + T2PRB3 + PEBF3
RETCODIE = arr(arr(ACODIE / 9) * TX18 / 100)
RESIVIEU1 = arr(arr(ACODIM / 9) * TX25 / 100)
RLOC43 = max(min(INVRETPER * 1 - INDPLAF + INVRETPERA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42])), 0) * 1 - V_CNR
D10MV = IND_MINV * DFNV + 1 - IND_MINV * _10MINSV
_2RIA = _2RAN
SPENETNPV = max(0, BNCNPV - SPEABNPV)
LIGIRNPS = is_positive(positif_ou_nul(IAVIM - SEUIL_61) * positif_ou_nul(NAPTIR - SEUIL_12) * is_positive(IBM23) + is_positive(IRESTIT + 0)) * is_positive(SEUIL_61 - NAPCRP) * is_positive(NAPCRP) * 1 - is_positive(LIG400RI) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGNIDB) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * 1 - is_positive(NRINET) * LIG2
TSB4 = EXTS4
INVRETRCRA = min(NINVRETRCR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA)) * 1 - V_CNR
TGLDOMAVEAJV = max(CODEAJ - TABDOMEAJ, 0)
LIGRCODJT = is_positive(LOCMEUBJT + 0) * is_positive(RCODJT1 + RCODJT2 + RCODJT3 + RCODJT4 + RCODJT5 + RCODJT6 + RCODJT7 + RCODJT8) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGPSNIR = is_positive(IAVIM) * is_positive(SEUIL_61 - IAVIM) * is_positive(SEUIL_61 - NAPTIR) * positif_ou_nul(NAPCRP - SEUIL_61) * is_positive(IINET) * is_positive(20 - V_NOTRAIT) + is_positive(V_NOTRAIT - 20) * 1 - is_positive(LIG400RI) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGNIDB) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * 1 - is_positive(NRINET) * LIG2
ZIGRSECOR2 = ZIGRSECOR * null(ANCSDED2 - V_ANREV + 2)
RIVCEL3 = RIVCEL1
TEGLRFTOT = TEGLRF1 + TEGLRF2
BAHQTOTMAXP = positif_ou_nul(BAHQT) * max(0, BAHQV + BAHQC + BAHQP - TOTDAGRI)
SPETOTC = BNCPROC + BNCNPC
TERPQ2M = RPQ2M * 1 - is_positive(INDTEFF) + TRPQ2M * is_positive(INDTEFF)
NRCELRREDLC = max(min(CELRREDLC, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN])), 0)
PTORSE1 = arr(max(0, RSE1 - CIRSE1 - CSPROVYD) * COPETO / 100) + arr(max(0, RSE1 - CIRSE1 - CSPROVYD - RSE19YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RCELREPHV = max(0, RCELREPHV_1 * 1 - ART1731BIS + min(RCELREPHV_1, max(RCELREPHV_P + RCELREPHVP2, RCELREPHV1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RPQ4VM = arr(GL4VM / DIVGL4)
PPESAL2 = PPE_SALAVDEF2 * 1 - PPE_BOOL_SEULPAC
GLDOMAVEBJC = max(CODEBJ - ABDOMEBJ, 0) * INDEFTSC
INDRSE1 = is_positive(BRSE1) * is_positive(PRSE1 + CIRSE1 + CSPROVYD) * 1 - INDCTX
A11RSOC = max(0, arr(RSOC2 + RSOC6 + RSOC19 + RSOC22 + RSOC25 + RSOC29 + RSOC32 + RSOC36 - RSOC2 + RSOC6 + RSOC19 + RSOC22 + RSOC25 + RSOC29 + RSOC32 + RSOC36 * TX65 / 100)) * 1 - ART1731BIS * 1 - V_CNR
GLPRR4 = is_positive(PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR24 / TOTALQUOHT) + 1 - is_positive(PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3
NINVRETPO = max(min(INVOMRETPO, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL), 0) * 1 - V_CNR
RMFN = max(0, RFMIC - MICFR - RFDANT) * 1 - is_positive(ART1731BIS) + max(0, RFMIC - MICFR - DEFRF4BD) * is_positive(ART1731BIS)
TABTS1DP = is_positive(CARTSP2 + REMPLAP2) * arr(TREP102 * ALLO2 / TTSB2) + 1 - is_positive(CARTSP2 + REMPLAP2) * max(0, TREP102 - TABTS1DJ - TABTS1DC)
DEFLOC8 = 1 - is_positive(NPLOCNETF8) * abs(min(max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8, 0) - LNPRODEF7, LNPRODEF7)) * positif_ou_nul(LNPRODEF7 - max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8, 0)) * 1 - is_positive(ART1731BIS) + min(LNPRODEF7, TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3 - DEFLOC4 - DEFLOC5 - DEFLOC6 - DEFLOC7) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + LNPRODEF7 * ART1731BIS * is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))
NINVRETXA = max(min(CODHXA, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA - NINVRETRB - NINVRETRC - NINVRETRD), 0) * 1 - V_CNR
# TODO IAVT
RLOG12 = max(min(INVRETOB * 1 - INDPLAF + INVRETOBA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11])), 0) * 1 - V_CNR
RPQRF2M = inf(GLRF2M / REAMORNB)
LIGCINE = is_positive(DCINE) * LIG1 * LIG2
REPQS = max(0, INVOMSOCQS - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ)) * 1 - ART1731BIS + max(0, INVOMSOCQS - max(0, RDOMSOC1 - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ)) * ART1731BIS * 1 - V_CNR
LOY9YI = is_positive(IHAUTREVT) * arr(VAR9YIIR * max(0, TAXLOY - min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - IPCAPTAXT)) + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT)) / BINRIR) + 1 - is_positive(IHAUTREVT) * max(0, VAR9YIIR - IR9YI - TAXA9YI - CAP9YI)
PPEPRIMEN = arr(PPENARPRIMEN)
SOMMEA893 = SOMMEA881
ZIGLORS = is_positive(DGLOD - V_GLOANT) * is_positive(IDGLO) * 1 - null(V_IDGLOANT + DGLOD + 0) * 1 - null(V_IDGLOANT - DGLOD) * is_positive(V_NOTRAIT - 20) * LIG2
TERPQPRRZVM = RPQPRRZVM * 1 - is_positive(INDTEFF) + TRPQPRRZVM * is_positive(INDTEFF)
TRPQPALIMC = inf(TGLPALIMC / PENSALNBC)
NPA = PAC - 0.5 * min(PAC, 2)
PPE_BOOL_NADA3 = min(1, is_positive(TSHALLO3 + 0) * null(PPETPP3 + 0) * null(PPENHP3 + 0) + is_positive(SALEXT3 + 0) * null(PPETPP3 + 0) * null(PPEXT3 + 0))
PSRTF = CSRTF
INVRETRI = NINVRETRI * 1 - V_CNR
IPRODOM31 = arr(IPQ01 * PRODOM / RG)
RFC = min(RDCOM, PLAF_FRCOMPTA * max(1, NBACT)) * present(RDCOM) * 1 - V_CNR
PPE_RCONTP1 = arr(PPE_RTA1 * PPE_COEFF1)
NINVRETOA = max(min(INVOMLOGOA, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB), 0) * 1 - V_CNR
MAXDOM2 = max(0, RNIDOM2 - TOTALPLAFA)
TIND_APBV = positif_ou_nul(TPLRV - TEXPRV * TX_DEDPER / 100)
ABTSRBP = is_positive(REMPLAC) * is_positive(CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * arr(REP10C * REMPLAC / TSBC) + 1 - is_positive(CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * max(0, REP10C - ABTS1BJ - ABTS1BP - ABTS3VK - ABTS1UT - ABTSRBJ)
XBITC = max(0, XBICNETC + max(0, XBICNPNETC))
RAH = arr(BAH * TX_CURE / 100)
LIGREPPFL = is_positive(REPPF + REPRQ + REPSL + REPAL) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
PPE_FIN = PPE_FINRANG
HRMOYBTRFR = arr(HRBTRFR1 + HRBTRFR2 / 2)
PPE_BOOL_MAXV = positif_ou_nul(PPE_HAUTE - PPE_RCONTPV)
RRBGTEFRFR = TEFFREVRFR - DAR * 1 - is_positive(RE168 + TAX1649) + is_positive(RE168 + TAX1649) * RE168 + TAX1649
RLOGDOM_1 = 1 - V_INDTEO * sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33, RLOG34, RLOG35, RLOG36, RLOG37, RLOG38, RLOG39]) + V_INDTEO * RLOG01 + RLOG02 + RLOG03 + RLOG04 + RLOG05 + RLOG06 + RLOG07 + RLOG08
# TODO ISFCUM
PERP_BOOL = is_positive(null(1 - V_0CF + V_0CH + V_0CR + V_0DJ + V_0DN + V_0DP) * null(present(TSHALLO2) + present(ALLO2) + present(TSHALLO3) + present(ALLO3) + present(TSHALLO4) + present(ALLO4) + present(FRN2) + present(FRN3) + present(FRN4) + present(CARTSP2) + present(CARTSP3) + present(CARTSP4) + present(REMPLAP2) + present(REMPLAP3) + present(REMPLAP4)))
LIGCELJBGL = is_positive(DCELJBGL) * LIG1 * LIG2
TSNNV = is_positive(TSV) * arr(TSV * TSBNV + BPCOSAV + GLDGRATV / EXTSV) + 1 - is_positive(TSV) * TSV
NINVRETSV = max(min(CODHSV, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ), 0) * 1 - V_CNR
LIGREPQNH = is_positive(REPQJ + REPQN + REPKH) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
LIGDEFBANIF = is_positive(DEFBANIF) * is_positive(DEFRIBASUP + DEFRIGLOBSUP) * 1 - PREM8_11
PERPSALDC = PREP10C
INVRETOXA = min(NINVRETOX, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA)) * 1 - V_CNR
ZIPQRVO62 = is_positive(TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * arr(IQUOTOT2 * TERPQRVO6 / TETONEQUO1) + 1 - is_positive(TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQRVO2 - ZIPQRVO52 - ZIPQPRRZ2TOT
IPQFV5 = ZIPQFV5 * COTFV
RCELREPHV_1 = max(min(RCELREP_HV, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1 - RCELREPHR_1 - RCELREPHU_1 - RCELREPHT_1 - RCELREPHZ_1 - RCELREPHX_1 - RCELREPHW_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RSN_CM = BSNCM * TX22 / 100
LIGREP7PA = is_positive(REPMEUPA) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
AISFPMEI = arr(ISFPMEIN * TX50 / 100)
LIGNMAJPCAP3 = TYPE2 * is_positive(NMAJPCAP3)
MIB_P1AC = MIB1AC - MIBDEC
IND_104 = positif_ou_nul(_10MINS4 - FRD4)
LIGREPRQ = is_positive(REPRQ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
# TODO RECUM
REPLOCN2 = REPMEUIY
PRQNV = _2PRBV
GLPALIM3M = is_positive(PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENALIM3 / TOTALQUOHT) + 1 - is_positive(PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM - GLPALIMCM - GLPALIM1M - GLPALIM2M
RB06 = RE168 + TAX1649
ZIPQTS11 = is_positive(sum([TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * arr(IQUOTOT1 * TERPQTS1 / TETONEQUO1) + 1 - is_positive(sum([TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQPRRZ1TOT - ZIPQTSV1 - ZIPQTSC1
NINVRETPH = max(min(INVOMRETPH, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD), 0) * 1 - V_CNR
NRCELREPYJ = max(min(ACELREPYJ, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD])), 0)
BA1C = BA1AC + BAF1AC
TTSBNC = TSHALLOC + ALLOC + max(0, SALEXTC - COD1BD)
RILMIX_1 = max(min(AILMIX, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP), 0)
IDRSE = (is_positive(CSREC) * arr(BDRSE1 * TXTQDED / 100) + arr(BDRSE2 * TXTVDED / 100) + arr(BDRSE3 * TXTWDED / 100) + arr(BDRSE4 * TXTXDED / 100) + arr(BDRSE5 * TX051 / 100)) if (V_IND_TRAIT == 4) else (abs(DRSED - V_IDRSEANT))
A10TOURSOC = max(0, A10TOURSOC_1 * 1 - ART1731BIS + min(A10TOURSOC1731 + 0, A10TOURSOC_1) * ART1731BIS)
LIGSPENPPOS = is_positive(SPENETNPF) + is_positive(BNCNPV + BNCNPC + BNCNPP) * null(SPENETNPF) * positif_ou_nul(ANOCEP - DNOCEP + DABNCNP6 + DABNCNP5 + DABNCNP4 + DABNCNP3 + DABNCNP2 + DABNCNP1 + 0) * 1 - is_positive(present(BNCAABV) + present(BNCAADV) + present(BNCAABC) + present(BNCAADC) + present(BNCAABP) + present(BNCAADP) + present(DNOCEP) + present(ANOVEP) + present(DNOCEPC) + present(ANOPEP) + present(DNOCEPP) + present(ANOCEP) + present(DABNCNP6) + present(DABNCNP5) + present(DABNCNP4) + present(DABNCNP3) + present(DABNCNP2) + present(DABNCNP1)) * LIG2
NPLOCCGASSV = LOCNPCGAV + LOCGITCV - LOCDEFNPCGAV
CSGDEDAUTRE = is_positive(ABDETPLUS + 0) * arr(PVBARPS - ABDETPLUS - COD3UA + 0 * TX051 / 100)
INVRETOBA = min(NINVRETOB, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA)) * 1 - V_CNR
NRCEL = max(min(RCEL_2011, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM), 0)
PERPINDV = is_positive(is_positive(is_positive(PERP_INDV) + 1 - is_positive(PERP_INDV) * 1 - is_positive(PRBRV + PALIV)) * is_positive(INDREV1A8) + 1 - is_positive(PERP_INDV) * is_positive(PRBRV + PALIV) * is_positive(PERP_COTV) + PERPMUTU * 1 - is_positive(PERP_INDV + PERP_COTV)) * 1 - PERP_NONV * 1 - V_CNR
INVRETBEA = min(NINVRETBE, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA)) * 1 - V_CNR
TERPQPALIM1 = RPQPALIM1 * 1 - is_positive(INDTEFF) + TRPQPALIM1 * is_positive(INDTEFF)
LIGNATR2 = is_positive(REPNATR2) * LIG1
PLR1 = min(MIN_DEDPR, EXPR1)
NINVRETOH = max(min(INVOMLOGOH, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA), 0) * 1 - V_CNR
DOMITPD = arr(BN1 + SPEPV + BI12F + BA1) * TX11 / 100 * is_positive(V_EAD)
REPQV = max(0, INVOMQV - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4)) * 1 - ART1731BIS + max(0, INVOMQV - max(0, RCOLENT - REPENT5 - REPENT4)) * ART1731BIS * 1 - V_CNR
LIGIHAUT = is_positive(CHRAVANT) * 1 - is_positive(TEFFHRC + COD8YJ) * 1 - is_positive(ANNUL2042) * LIG1
LIG_172810 = TYPE2 * is_positive(NMAJ1)
NOCEPC = ANOVEP - DNOCEPC + BNCAABC - BNCAADC
PRR2ZP = PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4
RSOC14 = arr(max(min(INVRETKI * 1 - INDPLAF + INVRETKIA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13])), 0)) * 1 - V_CNR
TIND_103 = positif_ou_nul(T10MINS3 - TFRD3 + COD1EE)
TGLRCMFUM = is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * arr(TONEQUOM * _3RCM / TOTALQUO) + 1 - is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM
REPRCM3 = is_positive(REPRCMBIS) * min(arr(REPRCMBIS * _3RCM_I / RCM_I), REPRCMBIS - REPRCM1 - REPRCM2) + 1 - is_positive(REPRCMBIS) * 0
BCIHABPRIN2 = min(max(0, BCIHP - BCIHABPRIN1), PREHABT1) * 1 - V_CNR
NINVRETSU = max(min(CODHSU, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP), 0) * 1 - V_CNR
TGLPALIMVM = is_positive(TPENALIMC + TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPENALIMV / TOTALQUO) + 1 - is_positive(TPENALIMC + TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM
RCODID = RCODID_1 * 1 - ART1731BIS + min(RCODID_1, max(RCODID_P + RCODIDP2, RCODID1731 + 0) * 1 - PREM8_11) * ART1731BIS
ZIPQTSV1 = is_positive(sum([TEGLTSC, TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * arr(IQUOTOT1 * TERPQTSV / TETONEQUO1) + 1 - is_positive(sum([TEGLTSC, TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQPRRZ1TOT
RPQ1 = inf(GL1 / DIVGL1) + 0
ZIPQPRRANT1TOT = sum([ZIPQPRRANTV1, ZIPQPRRANTC1, ZIPQPRRANT11, ZIPQPRRANT21, ZIPQPRRANT31, ZIPQPRRANT41])
DCELREPGK = CELREPGK
TRPQ4CM = arr(TGL4CM / DIVGL4) + 0
INVRETKIA = min(arr(NINVRETKI * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA)) * 1 - V_CNR
TMIB_ABNPPV = max(0, arr(TMIB_APV * MIBNPPRESV / TMIB_TPRESV)) * present(MIBMEUV) + TMIB_APV - TMIB_ABPV * 1 - present(MIBMEUV)
LIGILMIX = is_positive(DILMIX) * LIG1 * LIG2
AILMIA = DILMIA * 1 - ART1731BIS + min(DILMIA, max(AILMIA_P + AILMIAP2, AILMIA1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
RLOC44 = max(min(INVRETPIR * 1 - INDPLAF + INVRETPIRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43])), 0) * 1 - V_CNR
IPQRVO51 = ZIPQRVO51 * RENTAXNB5
RCELREPHD_1 = max(min(ACELREPHD, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TMIB_ABNPVLV = TMIB_AVV - TMIB_ABVV - TMIB_ABNPVV * is_positive(present(MIBGITEV) + present(LOCGITV))
BRSE8TV = ALLECS * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
RLOC04 = max(min(INVRETKS * 1 - INDPLAF + INVRETKSA * INDPLAF, RRILOC - RLOC01 - RLOC02 - RLOC03), 0) * 1 - V_CNR
REPSW = max(0, CODHSW - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR)) * 1 - ART1731BIS + max(0, CODHSW - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR)) * ART1731BIS * 1 - V_CNR
CHRBASE = arr(max(IHAUTREVT + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT + TAXLOY), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
TEGL3M = GL3M * 1 - is_positive(INDTEFF) + TGL3M * is_positive(INDTEFF)
MIB_NETNPPP = MIBNPPRESP - MIB_ABNPPP
DPERPV = PERP_COTV + RACCOTV
IPQPRRZ15 = ZIPQPRRZ15 * CODNCZ
PREP10V = PIND_10V * PD10MV + 1 - PIND_10V * PFPTV
TDEDMIN2 = is_positive(DETS2) * MIN_DEMEMPLOI + 1 - is_positive(DETS2) * MIN_DEDSFORFTS
GLRCMDCM = is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * arr(TONEQUOMHT * _2RCM / TOTALQUOHT) + 1 - is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM
_4BAQV = max(0, _4BACREV - _4DEFBACREV) * positif_ou_nul(BARAV) + arr(max(0, _4BAHREV - _4DEFBAHREV) * MAJREV) * positif_ou_nul(BARSV)
BAHQTOT = BAHQV + BAHQC + BAHQP - TOTDAGRI * 1 - ART1731BIS
ZIPQPRRANTZ41 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPRRZ4 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTZV1 - ZIPQPRRANTZC1 - ZIPQPRRANTZ11 - ZIPQPRRANTZ21 - ZIPQPRRANTZ31
NINVRETRPR = NINVRETRP - arr(NINVRETRP * TX4737 / 100) * 1 - V_CNR
PPE_BOOL_TPC = is_positive(is_positive(PPETPC + 0) * is_positive(PPE_SALAVDEFC + 0) + null(PPENHC + PPEXTC + 0) * null(PPETPC + 0) * is_positive(PPE_SALAVDEFC) + is_positive(360 / PPENBJ * PPENHC + PPEXTC * is_positive(PPE_SALAVDEFC + 0) / 1820 + PPENJC * is_positive(PPE_AVRPRO1C + 0) / 360 - 1) + positif_ou_nul(PPENHC + PPEXTC * is_positive(PPE_SALAVDEFC + 0) - 1820) + positif_ou_nul(PPENJC * is_positive(PPE_AVRPRO1C + 0) - 360) + is_positive(PPEACC * is_positive(PPE_AVRPRO1C + 0) + 0) + 1 - is_positive(PPENJC * is_positive(PPE_AVRPRO1C + 0)) * is_positive(PPE_AVRPRO1C + 0))
NRREPMEU = max(min(RETREPMEU, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO), 0)
TERPQPRRC = RPQPRRC * 1 - is_positive(INDTEFF) + TRPQPRRC * is_positive(INDTEFF)
APERPPTEF = 1 - V_CNR * max(min(RPERPP, RBGTEF - RPALETEF - RPALPTEF - RFACCTEF - RDDIVTEF - DDCSG + TOTALQUO - SDD - APERPVTEF - APERPCTEF), 0)
INVRETRVR = min(arr(INVRETRV * 5 / 3), NINVRETRV - INVRETRV) * 1 - null(1 - abs(arr(INVRETRV * 5 / 3) - NINVRETRV - INVRETRV)) + NINVRETRV - INVRETRV * null(1 - abs(arr(INVRETRV * 5 / 3) - NINVRETRV - INVRETRV)) * 1 - V_CNR
ZIGMONTPS = is_positive(BPRS + V_PSANT)
MIB_1AF = max(0, sum([MIB_1AV, MIB_1AC, MIB_1AP]))
INVRETKHA = min(arr(NINVRETKH * TX35 / 100), max(0, RNIDOM1 - INVRETKGA)) * 1 - V_CNR
TPMIB_NETPP = MIBPRESP + AUTOBICPP - TPMIB_APP
# TODO IDRS3
# TODO MAJTXRSE21
ABTS1AJ = is_positive(TSHALLOV) * arr(REP10V * TSHALLOV / TSBV)
IPQRCMCHANT1 = ZIPQRCMCHANT1 * PROVIENB
NINVRETKHR = NINVRETKH - arr(NINVRETKH * TX35 / 100) * 1 - V_CNR
INVRETQK = min(arr(NINVRETQK * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU)) * 1 - V_CNR
BSNCR = max(0, min(COD7CR, LIM_TITPRISE * 1 + BOOL_0AM - BSN1 - BSNCQ))
ZIGPENARSE34 = is_positive(PRSE3) * is_positive(NMAJRSE34) * LIG2
HRNBTRFR = positif_ou_nul(V_BTRFRHR1 * 1 - is_positive(RFRH1) + RFRH1) + positif_ou_nul(V_BTRFRHR2 * 1 - is_positive(RFRH2) + RFRH2)
LIGREPNV = is_positive(REPNV) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
LIG_BNCNF = is_positive(present(BNCV) + present(BNCC) + present(BNCP))
BDEV30 = min(PDEVDUR, COD7SA + COD7SB + COD7SC + COD7WB + COD7RG + COD7VH + COD7RH + COD7RI + COD7WU + COD7RJ + COD7RK + COD7RL + COD7RN + COD7RP + COD7RR + COD7RS + COD7RQ + COD7RT + COD7TV + COD7TW + COD7RV + COD7RW + COD7RZ) * is_positive(is_positive(BQRESS) * is_positive(BQTRAV) + is_positive(BQRESS) * null(BQTRAV) * null(RESS) + is_positive(BQRESS) * null(BQTRAV) * is_positive(RESS) + is_positive(BQRESS) * null(BQTRAV) * is_positive(RESS) * present(CRECHOBOI) + null(BQRESS))
CSGAPS = max(0, CSGCAPS - CICSGAPS)
REPCELNQ = sum([RIVCELNQ1, RIVCELNQ2, RIVCELNQ3]) + RIVCELNQ4
CHRTHEO11 = arr(positif_ou_nul(LIMHRTX1 * 1 + BOOL_0AM - HRBASELISSE) * HRBASELISSE - LIMHR1 * 1 + BOOL_0AM * TXHR1 / 100 + LIMHR1 * 1 + BOOL_0AM * TXHR1 / 100 * is_positive(HRBASELISSE - LIMHRTX1 * 1 + BOOL_0AM))
GLPRR2 = is_positive(PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR22 / TOTALQUOHT) + 1 - is_positive(PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1
TABTS1EC = is_positive(ALLO3 + CARTSP3 + REMPLAP3) * arr(TREP103 * max(0, SALEXT3 - COD1ED) / TTSB3) + 1 - is_positive(ALLO3 + CARTSP3 + REMPLAP3) * max(0, TREP103 - TABTS1EJ)
LIGRCELJP = is_positive(RIVCELJP1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
PPE_BOOL_MAX3 = positif_ou_nul(PPELIMRPH - PPE_RCONTP3)
NINVRETBAR = NINVRETBA - arr(NINVRETBA * TX4737 / 100) * 1 - V_CNR
LIGPPEV = is_positive(INDPPEV) * null(INDPPEC) * null(INDPPEP) * TYPEPPE
ADO6 = ABADON6 * 1 - is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)) + ABATOT6 * is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ))
RPQTSVM = inf(GLTSVM / CARTSNBAV)
REPSK = max(0, CODHSK - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF)) * 1 - ART1731BIS + max(0, CODHSK - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF)) * ART1731BIS * 1 - V_CNR
GLFCM = is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENFC / TOTALQUOHT) + 1 - is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFVM
RSOC5 = arr(max(min(INVRETXAR * 1 - INDPLAF + INVRETXARA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1 - RSOC2 - RSOC3 - RSOC4), 0)) * 1 - V_CNR
INDE1 = is_positive(INDRSE1 + INDRSE1X) * INDTRAIT
# TODO SPEDREPC
RI1RFR = max(RNGRFR - 1 - min(1, IPVLOC) * ABTPA - ABTMA, 0)
ZIPQRCMDC1 = is_positive(TEGLRCMFU + TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQRCMDC / TETONEQUO1) + 1 - is_positive(TEGLRCMFU + TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT
TSNGL3V = GLD3V - ABGL3V
TTSB2 = TEXTS2
# TODO NMAJCHR4
LIGCELGL = is_positive(DCELREPGL) * LIG1 * LIG2
GLN3NET = arr(GLN3 * GL3 / REV3)
LIG931 = is_positive(DEFRIRCM) * is_positive(RCMFR) * LIGANNUL2042
LIGPVIMMO = is_positive(PVIMMO) * LIG1 * LIG2
TRPQPRR4 = inf(TGLPRR4 / CARPENBAP4)
TEGLRWBM = GLRWBM * 1 - is_positive(INDTEFF) + TGLRWBM * is_positive(INDTEFF)
LIGLOCHOTR = is_positive(INVLOCHOTR + INVLOGHOT) * LIG1
TTSNT2 = TTSN1DJ + TTSN1DC + TTSN1DP + TTSNRDJ + TTSNRDP
INDREGV = is_positive(BREGV) * is_positive(PREGV) * 1 - INDCTX
LIGRSA = is_positive(PPERSATOT) * is_positive(PPETOTX) * LIG1 * LIG2
RCELCOM_1 = max(min(RCEL_COM, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIPQTSREMP42 = IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTS2TOT - ZIPQTSREMPV2 - ZIPQTSREMPC2 - ZIPQTSREMP12 - ZIPQTSREMP22 - ZIPQTSREMP32
PERPBNCPNV = BNCEXV + BNCREV - BNCDEV * 1 - is_positive(ART1731BIS) + BNHEXV + BNHREV - BNHDEV * 1 - is_positive(ART1731BIS) + BNCCRV
# TODO INDCOLS
LIGREDAGRI = is_positive(DDIFAGRI) * LIG1 * LIG2
RESINEUV4 = arr(arr(ACODIN / 9) * TX20 / 100) + arr(arr(ACODIJ / 9) * TX18 / 100) + arr(arr(ACODIV / 9) * TX18 / 100)
RCELHJK_1 = max(min(RCEL_HJK, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NINVRETLIR = NINVRETLI - arr(NINVRETLI * TX50 / 100) * 1 - V_CNR
TTSPR3 = TTSNN3 + TPRR3 * 1 - PREM8_11 + max(0, TTSNN3 + TPRR3) * PREM8_11
REPLOCIE8 = arr(ACODIE * TX18 / 100) - REPLOCIE1 - REPLOCIE2 - REPLOCIE3 - REPLOCIE4 - REPLOCIE5 - REPLOCIE6 - REPLOCIE7 - REPLOCIE7
LIGCELLM = is_positive(DCELRREDLM) * LIG1 * LIG2
TEGLPRRZ1 = GLPRRZ1 * 1 - is_positive(INDTEFF) + TGLPRRZ1 * is_positive(INDTEFF)
INDRSE4X = is_positive(CS_DEG) * is_positive(BRSE4) * is_positive(INDCTX)
ELUREST = is_positive(REST) * max(0, min(IPELUS, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA))
LIGPRELIB = is_positive(present(PPLIB) + present(RCMLIB)) * LIG0 * LIG2
REPREDREP = REPMEUIU
TGLRCMFU = is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * arr(TONEQUO * _3RCM / TOTALQUO) + 1 - is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC
EXFR = max(0, RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - RCMAB - RTCAR - RCMNAB)
LIG900 = is_positive(RVTOT + LIG1100 + LIG910 + BRCMQ + RCMFR + REPRCM + LIGRCMABT + LIG2RCMABT + LIGPV3VG + LIGPV3WB + LIGPV3VE + RCMLIB + LIG29 + LIG30 + RFQ + _2REVF + _3REVF + LIG1130 + VLHAB + DFANT + ESFP + RE168 + TAX1649 + R1649 + PREREV) * is_positive(LIG0010 + LIG0020 + LIG0030 + LIG0040 + LIG0050 + LIG0060 + LIG0070) * 1 - ART1731BIS
# TODO NMAJCHR1
LIGPLOC8 = is_positive(DEFLOC8) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
NRCELREPHT = max(min(RCELREP_HT, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU])), 0)
LIGMBDREPNPC = is_positive(MIBDREPNPC) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
CIFORET = arr(BCIFORETUP * TX18 / 100 + BCIFORETUT * TX18 / 100 + BCIFORETUA * TX25 / 100 + BCIFORETUB * TX25 / 100 + BCIFORETUQ * TX18 / 100 + BCIFORETUI * TX25 / 100)
DILMOA = COD7OA
TBNCNPABP = TBNCTOTABP - TBNCPABP
RTOUR = RTOURREP
IPQ01 = IN01
NINVRETOZ = max(min(CODHOZ, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY), 0) * 1 - V_CNR
REPSP = max(0, CODHSP - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK)) * 1 - ART1731BIS + max(0, CODHSP - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK)) * ART1731BIS * 1 - V_CNR
XEXTS3 = XTSB3 + CARTSP3 + REMPLAP3
NRRESIVIEU = max(min(RETRESIVIEU, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA - NRRESIMEUB), 0)
IDANT11 = arr(IPQANT1 * arr(RI1 + REVQUOQHT) / arr(RB01 + TONEQUO))
IPQPRRANT11 = ZIPQPRRANT11 * CARPENBAP1
CRDIE2 = CRDIE + 0
# TODO TXINRISF
TOTALPLAFB = INVRETPBA + INVRETPFA + INVRETPJA + INVRETPAA + INVRETPEA + INVRETPIA + INVRETPDA + INVRETPHA + INVRETPLA + INVRETPYA + INVRETPXA + INVRETRGA + INVRETRIA + INVRETSBA + INVRETSGA + INVRETSAA + INVRETSFA + INVRETABA + INVRETAGA + INVRETAAA + INVRETAFA + INVRETACA + INVRETAHA + INVRETAEA + INVRETAJA + INVRETSCA + INVRETSHA + INVRETSEA + INVRETSJA + INVRETOIA + INVRETOJA + INVRETOKA + INVRETOPA + INVRETOQA + INVRETORA + INVRETOEA + INVRETOFA + INVRETUBA + INVRETUCA + INVRETPBRA + INVRETPFRA + INVRETPJRA + INVRETPARA + INVRETPERA + INVRETPIRA + INVRETPYRA + INVRETPXRA + INVRETSBRA + INVRETSGRA + INVRETSARA + INVRETSFRA + INVRETABRA + INVRETAGRA + INVRETAARA + INVRETAFRA
# TODO RIDOMPRO
VAR0BT = 1 - is_positive(null(V_0BT + 0) + is_positive(V_0BT * V_0AV))
PPE_BOOL_MAXN = positif_ou_nul(PPELIMRPH - PPE_RCONTPN)
TPRNN1 = TEXPR1 - TAPR1
RPQRCMTRM = inf(GLRCMTRM / INTERENB)
TGLTSREMPV = is_positive(TTSNN2REMPC + TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2REMPV / TOTALQUO) + 1 - is_positive(TTSNN2REMPC + TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLTSTOT - GLPALIMTOT
TTSN1FC = max(0, SALEXT4 - COD1FD) - TABTS1FC
ZIPQTS12 = is_positive(sum([TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * arr(IQUOTOT2 * TERPQTS1 / TETONEQUO1) + 1 - is_positive(sum([TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQPRRZ2TOT - ZIPQTSV2 - ZIPQTSC2
NINVRETAPR = NINVRETAP - arr(NINVRETAP * TX4737 / 100) * 1 - V_CNR
# TODO TOTNET
LIG0030 = INDC * 1 - INDV * 1 - INDP * 1 - ART1731BIS * LIG0 * LIG2
LIG1112 = is_positive(DFANTIMPU) * is_positive(DEFRF4BC) * is_positive(RDRFPS) * LIGANNUL2042
GLPALIMCM = is_positive(PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENALIMC / TOTALQUOHT) + 1 - is_positive(PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM
TPS10C = arr(TSBC * TX_DEDFORFTS / 100)
CIRCMAVFT = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER, RCMAVFT * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO))))
TMIB_TVENP = MIBVENP + AUTOBICVP + MIBNPVENP + MIBGITEP + LOCGITP
SOMMEA877 = present(BAEXV) + present(BACREV) + present(_4BACREV) + present(BA1AV) + present(BACDEV) + present(BAEXC) + present(BACREC) + present(_4BACREC) + present(BA1AC) + present(BACDEC) + present(BAEXP) + present(BACREP) + present(_4BACREP) + present(BA1AP) + present(BACDEP) + present(BAHEXV) + present(BAHREV) + present(_4BAHREV) + present(BAHDEV) + present(BAHEXC) + present(BAHREC) + present(_4BAHREC) + present(BAHDEC) + present(BAHEXP) + present(BAHREP) + present(_4BAHREP) + present(BAHDEP) + present(BICEXV) + present(BICNOV) + present(BI1AV) + present(BICDNV) + present(BICEXC) + present(BICNOC) + present(BI1AC) + present(BICDNC) + present(BICEXP) + present(BICNOP) + present(BI1AP) + present(BICDNP) + present(BIHEXV) + present(BIHNOV) + present(BIHDNV) + present(BIHEXC) + present(BIHNOC) + present(BIHDNC) + present(BIHEXP) + present(BIHNOP) + present(BIHDNP)
ACODJTJU_1 = arr(ACODJT / 9) + arr(ACODJU / 9)
INVRETKTA = min(NINVRETKT, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA)) * 1 - V_CNR
TERPQF1M = RPQF1M * 1 - is_positive(INDTEFF) + TRPQF1M * is_positive(INDTEFF)
IND_APB1 = positif_ou_nul(PLR1 - EXPR1 * TX_DEDPER / 100)
INDRSE4 = is_positive(BRSE4) * is_positive(PRSE4 + CIRSE4 + CSPROVYH + CSPROVYP) * 1 - INDCTX
NPLOCCGANSP = NPLOCCGAPAC - NPLOCCGASP
SOMDEFBASUP = BACDEV + BAHDEV + BACDEC + BAHDEC + BACDEP + BAHDEP * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - sum([GLN1, GLN2, GLN3]) + max(0, _4BAQV + _4BAQC + _4BAQP + BAHQTOTMIN + BAHQTOTMAXN) + GLN4V + GLN4C + sum([PENALIMV, PENALIMC, PENALIM1, PENALIM2, PENALIM3, PENALIM4]) + sum([PENFV, PENFC, PENF1, PENF2, PENF3, PENF4]) + sum([TSNN2TSV, TSNN2TSC, TSNN2TS1, TSNN2TS2, TSNN2TS3, TSNN2TS4]) + sum([TSNN2REMPV, TSNN2REMPC, TSNN2REMP1, TSNN2REMP2, TSNN2REMP3, TSNN2REMP4]) + sum([PRR2V, PRR2C, PRR21, PRR22, PRR23, PRR24]) + T2RV + _2RCM + _3RCM + _4RCM + _5RCM + _6RCM + _7RCM + _2REVF + _3REVF) + 0 + BACDEV + BAHDEV + BACDEC + BAHDEC + BACDEP + BAHDEP - DEFBANIF * 1 - is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - sum([GLN1, GLN2, GLN3]) + max(0, _4BAQV + _4BAQC + _4BAQP + BAHQTOTMIN + BAHQTOTMAXN) + GLN4V + GLN4C + sum([PENALIMV, PENALIMC, PENALIM1, PENALIM2, PENALIM3, PENALIM4]) + sum([PENFV, PENFC, PENF1, PENF2, PENF3, PENF4]) + sum([TSNN2TSV, TSNN2TSC, TSNN2TS1, TSNN2TS2, TSNN2TS3, TSNN2TS4]) + sum([TSNN2REMPV, TSNN2REMPC, TSNN2REMP1, TSNN2REMP2, TSNN2REMP3, TSNN2REMP4]) + sum([PRR2V, PRR2C, PRR21, PRR22, PRR23, PRR24]) + T2RV + _2RCM + _3RCM + _4RCM + _5RCM + _6RCM + _7RCM + _2REVF + _3REVF) + 0
RRESIVIEU = RCODIW + RCODIM
T2RV = _2RV1 + _2RV2 + _2RV3 + _2RV4
DTOUHOTR = INVLOCHOTR + INVLOGHOT
LIGCELGJ = is_positive(DCELREPGJ) * LIG1 * LIG2
NRCELREPYA = max(min(ACELREPYA, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI])), 0)
IPQF42 = ZIPQF42 * COTF4
LOYBASE_N = arr(max(TAXLOY + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
ZIGLOCOR5 = ZIGLOCOR * null(ANCSDED2 - V_ANREV + 5)
# TODO REPDONR5
TR4_ISF = arr(max(0, min(DISFBASE, LIM_TR4_ISF) - LIM_TR3_ISF) * TX_TR4_ISF / 100)
INVRETSAR = min(arr(INVRETSA * 10 / 9), NINVRETSA - INVRETSA) * 1 - null(1 - abs(arr(INVRETSA * 10 / 9) - NINVRETSA - INVRETSA)) + NINVRETSA - INVRETSA * null(1 - abs(arr(INVRETSA * 10 / 9) - NINVRETSA - INVRETSA)) * 1 - V_CNR
MIB_NETNPVLC = MIBGITEC + LOCGITC - MIB_ABNPVLC
ZIGPENAGLO4 = is_positive(PGLOA) * is_positive(NMAJGLO4) * LIG2
ZIPQPRRZ21 = is_positive(sum([TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPRRZ2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRZV1 - ZIPQPRRZC1 - ZIPQPRRZ11
LIGCELYI = is_positive(DCELREPYI) * LIG1 * LIG2
GLRCMFUM = is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * arr(TONEQUOMHT * _3RCM / TOTALQUOHT) + 1 - is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM
TSPR = TSPRT + RVTOT
RSE1AC = max(0, RSE1 - CIRSE1)
PS_PREREV = PREREV
TIND_MIN4 = 1 - is_positive(TIND_10MIN_04)
LIG134C = is_positive(present(BAFC) + present(BAHREC) + present(BAHDEC) + present(BACREC) + present(BACDEC) + present(BAFPVC) + present(BAFORESTC))
NINVRETRQR = NINVRETRQ - arr(NINVRETRQ * TX375 / 100) * 1 - V_CNR
TPMIB_APV = min(MIBPRESV + AUTOBICPV, max(MIN_MBIC, arr(MIBPRESV + AUTOBICPV * TX_MIBPRES / 100)))
NBQAR = NBQAR1 + NBQAR2 + NBQAR3 + NBQAR4 + NBQART
BDCSG = min(BCSG * 1 - V_CNR, max(0, RDRFPS + RDRV + RDNP + max(0, RDRCM1) + PVBARPS - IPPNCS * 1 - V_CNR)) * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - is_positive(ABDETPLUS) + min(BCSG * 1 - V_CNR, BDCSG3VA)
RLOG05 = max(min(INVOMLOGOH, RRI1 - RLOG01 - RLOG02 - RLOG03 - RLOG04), 0) * 1 - V_CNR
RPQPRR1M = inf(GLPRR1M / CARPENBAP1)
TGLDOMAVDBJC = max(CODDBJ - TABDOMDBJ, 0)
LIGREPDONR2 = is_positive(REPDONR2) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
# TODO RDSCAC
TGL4TVCM = arr(TONEQUOM * REV4TVC / TOTALQUO)
TTSPR1 = TTSNN1 + TPRR1 * 1 - PREM8_11 + max(0, TTSNN1 + TPRR1) * PREM8_11
TERPQRCMGOM = RPQRCMGOM * 1 - is_positive(INDTEFF) + TRPQRCMGOM * is_positive(INDTEFF)
PTOTIRCS = PIR + PTAXA + PTAXLOY + PHAUTREV + PPCAP + PPRS + PCSG + PRDS + PCDIS + PREGV + PCVN + PGLOA + PRSE1 + PRSE2 + PRSE3 + PRSE4 + PRSE5
RILMJV_1 = max(min(AILMJV, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW), 0)
REPQG = max(0, INVDOMRET60 - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2)) * 1 - ART1731BIS + max(0, INVDOMRET60 - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2)) * ART1731BIS * 1 - V_CNR
NRREDREP = max(min(AREDREP, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB), 0)
NRILMPC = max(min(AILMPC, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI), 0)
PPE_SALAVDEFU = sum([PPE_SALAVDEF1, PPE_SALAVDEF2, PPE_SALAVDEF3, PPE_SALAVDEF4]) * PPE_BOOL_SEULPAC
XIND_10C = positif_ou_nul(X10MINSC - FRNC)
ABPR1 = arr(1 - IND_APB1 * min(APB1, PL_PB * APB1 / sum([APBV * 1 - IND_APBV, APBC * 1 - IND_APBC, APB1 * 1 - IND_APB1, APB2 * 1 - IND_APB2, APB3 * 1 - IND_APB3, APB4 * 1 - IND_APB4])) + IND_APB1 * APB1)
LIGREPKU = is_positive(REPKU) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
INVRETUG = min(NINVRETUG, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ - INVRETUA - INVRETUB - INVRETUC - INVRETUD - INVRETUE - INVRETUF)) * 1 - V_CNR
NRREDMEUB = max(min(AREDMEUB, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT), 0)
PERPSALP = PERP_BOOL * TSHALLO1 + ALLO1 + CARTSP1 + REMPLAP1 + max(0, SALEXT1 - COD1CD)
TRPQF2 = inf(TGLF2 / COTF2)
NINVRETMAR = NINVRETMA - arr(NINVRETMA * TX40 / 100) * 1 - V_CNR
REPAP = max(0, CODHAP - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK)) * 1 - ART1731BIS + max(0, CODHAP - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK)) * ART1731BIS * 1 - V_CNR
IND_MINC = 1 - is_positive(IND_10MIN_0C)
NRNOUV = max(min(RSN, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL - NRPIQABCD), 0)
TXINTISF = max(0, INTANISF - V_ANREV + 1 * 12 + INTMSISF - 6) * TXMOISRETARD2 * present(MOISAN_ISF)
LIGCODJTJU = is_positive(DCODJTJU) * LIG1 * LIG2
IND_10MIN_0V = is_positive(DEDMINV - DFNV) * is_positive(TSBV)
ABADO32 = arr(min(IPRODOM2 + IQUODAJ32 * TX_RABDOM / 100, PLAF_RABDOM))
LIGPERPM = 1 - is_positive(PERPIMPATRIE + 0) * is_positive(PERPINDV + PERPINDC + PERPINDP + PERPINDCV + PERPINDCC + PERPINDCP) * is_positive(PERPINDAFFV + PERPINDAFFC + PERPINDAFFP) * 1 - null(PERP_COTV + PERP_COTC + PERP_COTP + 0) * 1 - INDIMPOS * is_positive(PERP_MUT) * is_positive(PERP_COND1 + PERP_COND2) * 1 - is_positive(LIG8FV) * 1 - is_positive(LIG2501) * LIG1 * 1 - V_CNR * LIG2 + 0
LIGNANTREIR = is_positive(V_ANTREIR + 0) * is_positive(V_ANTCR + 0) * 1 - APPLI_OCEANS
DEFBACREV = is_positive(_4BACREV) * arr(BACDEV * 1 - is_positive(ART1731BIS * PREM8_11) * BACREV / BARREVAV) + 1 - is_positive(_4BACREV) * BACDEV * 1 - is_positive(ART1731BIS * PREM8_11)
TERPQRVOM = RPQRVOM * 1 - is_positive(INDTEFF) + TRPQRVOM * is_positive(INDTEFF)
MIB_NETPC = MIBPRESC - MIB_ABPC
GLRCMGO = is_positive(_7RCM + REVRF) * arr(TONEQUOHT * _6RCM / TOTALQUOHT) + 1 - is_positive(_7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC - GLRCMFU - GLRCMCH - GLRCMTS
BRSETOT = BRSE1 + BRSE2 + BRSE3 + BRSE4 + BRSE5
NPLOCNETF10 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(LNPRODEF10, LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF10 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF9, LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF9 * 1 - is_positive(ART1731BIS * PREM8_11)
LIGPLOC9 = is_positive(DEFLOC9) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
BPTPDIV = BTP5 * 1 - is_positive(present(TAX1649) + present(RE168))
RLOCIDFG7 = arr(arr(ACODID / 9) * TX11 / 100) + arr(arr(ACODIF / 9) * TX18 / 100) + arr(arr(ACODIG / 9) * TX11 / 100)
# TODO MAJTXCVN1
# TODO NATIMP
RDUFLOGIH = max(0, RDUFLOGIH_1 * 1 - ART1731BIS + min(RDUFLOGIH_1, max(RDUFLOGIH_P + RDUFLOGIHP2, RDUFLOGIH1731 + 0) * 1 - PREM8_11) * ART1731BIS)
ACELJOQR = BCEL_JOQR * 1 - ART1731BIS + min(BCEL_JOQR, max(ACELJOQR_P + ACELJOQRP2, ACELJOQR1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELLIERJO + CELLIERJQ + CELLIERJR) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BAQC = BAEC + BAEMC
RCELNQ_1 = max(min(RCEL_NQ, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGCELHB = is_positive(DCELREPHB) * LIG1 * LIG2
RETCODJT = arr(arr(ACODJT / 9) * TX11 / 100)
PDFNV = min(PLAF_DEDFORFTS, PTPS10V)
ACOTFOR = ACOTFOR_R * 1 - ART1731BIS + min(ACOTFOR_R, max(ACOTFOR_P + ACOTFORP2, ACOTFOR1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
TPRR23 = is_positive(PEBF3 + PENSALP3 + CODREZ) * arr(TPRN3 * CARPEP3 / TEXPR3) + 1 - is_positive(PEBF3 + PENSALP3 + CODREZ) * TPRN3 - TPRR3
ISFNAP = ISFCUM - V_ANTISF
INVRETPIA = min(arr(NINVRETPI * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA)) * 1 - V_CNR
RRETU_1 = max(min(RETUD, RRI1 - RLOGDOM - RCREAT - RCOMP), 0)
PPE_DATE_FIN = is_positive(BOOL_0AM) * is_positive(V_0AZ + 0) * V_0AZ + 0 + is_positive(DATDEPETR + 0) * DATDEPETR + 0 * null(V_0AZ + 0)
AMEUBLE = DMEUBLE * 1 - ART1731BIS + min(DMEUBLE, max(AMEUBLE_P + AMEUBLEP2, AMEUBLE1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
ZIPQANT21 = is_positive(sum([TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQ2 / TETONEQUO1) + 1 - is_positive(sum([TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANTRWB - ZIPQANTRWA - ZIPQANTRVG - ZIPQANT11
BPTPD = BTP3A * is_positive(V_EAD) * 1 - is_positive(present(TAX1649) + present(RE168))
TRPQ1M = inf(TGL1M / DIVGL1)
TERPQRVO5 = RPQRVO5 * 1 - is_positive(INDTEFF) + TRPQRVO5 * is_positive(INDTEFF)
LIGREPRK = is_positive(REPRK) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RSN = arr(RSN_CL + RSN_CM + RSN_CN + RSN_CC + RSN_CU + RSN_CQ + RSN_CR + RSN_CF) * 1 - V_CNR
TERPQPRRZ2 = RPQPRRZ2 * 1 - is_positive(INDTEFF) + TRPQPRRZ2 * is_positive(INDTEFF)
TRPQPRRC = inf(TGLPRRC / CARPENBAC)
TABGL2C = is_positive(GLD2C) * is_positive(GLD3C) * arr(TREP10C * GLD2C / TTSBC) + 1 - is_positive(GLD3C) * max(0, TREP10C - TABTSC - TABDOMDBJ - TABDOMEBJ - TABGL1C) + 0
TXINT = is_positive(2006 - arr(INTAN)) * max(0, INTAN - V_ANREV + 1 * 12 + INTMS - 6) * TXMOISRETARD + positif_ou_nul(V_ANREV - 2006) * max(0, INTAN - V_ANREV + 1 * 12 + INTMS - 6) * TXMOISRETARD2 + 1 - is_positive(2006 - arr(INTAN)) * 1 - positif_ou_nul(V_ANREV - 2006) * 2006 - V_ANREV + 1 * 12 - 6 * TXMOISRETARD * is_positive(2006 - V_ANREV + 1) + TXMOISRETARD2 * null(2006 - V_ANREV + 1) + INTAN - 2006 * 12 + INTMS * TXMOISRETARD2 * present(MOISAN)
LIGRRCEL32 = is_positive(RRCELLD) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
LIG899YT = is_positive(RVTOT + LIG1100 + LIG910 + BRCMQ + RCMFR + REPRCM + LIGRCMABT + LIG2RCMABT + LIGPV3VG + LIGPV3WB + LIGPV3VE + RCMLIB + LIG29 + LIG30 + RFQ + _2REVF + _3REVF + LIG1130 + VLHAB + DFANT + ESFP + RE168 + TAX1649 + R1649 + PREREV) * 1 - is_positive(LIG10YT + LIG20YT + LIG30YT + LIG40YT + LIG50YT + LIG60YT + LIG70YT) * ART1731BIS
RLOC22 = max(min(INVRETPB * 1 - INDPLAF + INVRETPBA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21])), 0) * 1 - V_CNR
IPQPRRZ31 = ZIPQPRRZ31 * CODNEZ
AILMJI = DILMJI * 1 - ART1731BIS + min(DILMJI, max(AILMJI_P + AILMJIP2, AILMJI1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
BASEDONP = RDDOUP + BDON7UH + DONAUTRE + EXCEDANTA
ZIPQF25 = is_positive(sum([TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQF2M / TETONEQUOM1) + 1 - is_positive(sum([TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - sum([ZIPQF15, ZIPQFV5, ZIPQFC5])
RILMIH = max(0, RILMIH_1 * 1 - ART1731BIS + min(RILMIH_1, max(RILMIH_P + RILMIHP2, RILMIH1731 + 0) * 1 - PREM8_11) * ART1731BIS)
GL4CM = arr(TONEQUOMHT * REV4C / TOTALQUOHT)
NINVRETQSR = NINVRETQS - arr(NINVRETQS * TX35 / 100) * 1 - V_CNR
ZIPQTSANT41 = is_positive(TEGLTSREMPTOT) * arr(IQUOTOTANT1 * TERPQTS4 / TETONEQUO1) + 1 - is_positive(TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANTV1 - ZIPQTSANTC1 - ZIPQTSANT11 - ZIPQTSANT21 - ZIPQTSANT31
ACELJBGL = BCEL_JBGL * 1 - ART1731BIS + min(BCEL_JBGL, max(ACELJBGL_P + ACELJBGLP2, ACELJBGL1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELLIERJB + CELLIERJG + CELLIERJL) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RSE5NET = max(0, RSE5 + PRSE5 - CIRSE5 - CSPROVYE)
FRG3 = is_positive(EXFR) * min(arr(EXFR * _2RCAV / TRCM), EXFR - FRG1 - FRG2) + 1 - is_positive(EXFR) * 0
DDUFLOEKL = DUFLOEK + DUFLOEL
ALOGDOM_1 = INVLOG2008 + INVLGDEB2009 + INVLGDEB + INVOMLOGOA + INVOMLOGOH + INVOMLOGOL + INVOMLOGOO + INVOMLOGOS + INVRETQL + INVRETQM + INVRETQD + INVRETOB + INVRETOC + INVRETOM + INVRETON + INVRETOI + INVRETOJ + INVRETOK + INVRETOP + INVRETOQ + INVRETOR + INVRETOT + INVRETOU + INVRETOV + INVRETOW + INVRETOD + INVRETOE + INVRETOF + INVRETOG + INVRETOX + INVRETOY + INVRETOZ + INVRETUA + INVRETUB + INVRETUC + INVRETUD + INVRETUE + INVRETUF + INVRETUG * 1 - INDPLAF + INVRETQLA + INVRETQMA + INVRETQDA + INVRETOBA + INVRETOCA + INVRETOMA + INVRETONA + INVRETOIA + INVRETOJA + INVRETOKA + INVRETOPA + INVRETOQA + INVRETORA + INVRETOTA + INVRETOUA + INVRETOVA + INVRETOWA + INVRETODA + INVRETOEA + INVRETOFA + INVRETOGA + INVRETOXA + INVRETOYA + INVRETOZA + INVRETUAA + INVRETUBA + INVRETUCA + INVRETUDA + INVRETUEA + INVRETUFA + INVRETUGA * INDPLAF * 1 - V_CNR
LIGRCELJBGL = is_positive(RIVCELJBGL1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
TRPQ3 = inf(TGL3 / DIVGL3) + 0
# TODO MAJTXPCAP4
PLAF2GM = is_positive(null(6 - V_REGCO) + null(7 - V_REGCO)) * arr(33117 + 3205.5 * min(NBPT - 1 * 4, 4) * is_positive(NBPT - 1) + 2729.5 * min(NBPT - 2 * 4, 2) * is_positive(NBPT - 2) + 2299 * NBPT - 2.5 * 4 * is_positive(NBPT - 2.5))
ILI_SYNT_ISF = 1 - positif_ou_nul(ISF4BIS - SEUIL_12) * null(V_ANTISF + 0) * ISF4BIS + positif_ou_nul(ISF4BIS - SEUIL_12) * ISF4BIS
TSNRAJ = CARTSV - ABTSRAJ
REPSC = max(0, CODHSC - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ)) * 1 - ART1731BIS + max(0, CODHSC - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ)) * ART1731BIS * 1 - V_CNR
TPENFC = is_positive(PENSALC) * arr(TPRNC * PEBFC / TEXPRC) + 1 - is_positive(PENSALC) * max(0, TPRNC - TPRRC - TPRR2C - TPRR2ZC)
PRR24 = is_positive(PEBF4 + PENSALP4 + CODRFZ) * arr(PRN4 * CARPEP4 / EXPR4) + 1 - is_positive(PEBF4 + PENSALP4 + CODRFZ) * PRN4 - PRR4
LIGRESIVIEU = is_positive(DRESIVIEU) * LIG1 * LIG2
ZIGINTREGV22 = is_positive(RETREGV22) * LIG2
DREDMEUB = REDMEUBLE
TOTCRBRUT = max(0, CSGC + PCSG - CICSG - CSGIM + RDSC + PRDS - CIRDS - CRDSIM + PRSC + PPRS - CIPRS - PRSPROV + CVNSALC + PCVN - COD8YT + BREGV + PREGV + CDISC + PCDIS - CDISPROV + CGLOA + PGLOA - COD8YL + RSE1 + PRSE1 + RSE2 + PRSE2 + RSE3 + PRSE3 + RSE4 + PRSE4 + RSE5 + PRSE5 - CIRSE1 - CSPROVYD - CIRSE5 - CSPROVYE - CIRSE2 - CSPROVRSE2 - CIRSE3 - CSPROVYG - CIRSE4 - CSPROVRSE4)
RFNTEO = RFORDI + RFROBOR - min(min(RFDORD, RFDORD1731 + 0) * is_positive(ART1731BIS) + RFDORD * 1 - ART1731BIS + min(RFDANT, RFDANT1731 + 0) * is_positive(ART1731BIS) + RFDANT * 1 - ART1731BIS, RFORDI + RFROBOR) - RFDHIS * 1 - ART1731BIS * present(RFROBOR) + RRFI * 1 - present(RFROBOR)
IND_10MIN_02 = is_positive(DEDMIN2 - DFN2) * is_positive(TSB2)
# TODO REPPLU
RRCELLX = max(0, CELRREDLX - RCELRREDLX) * is_positive(CELRREDLX) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TABPR4 = arr(1 - TIND_APB4 * min(TAPB4, max(0, TPL_PB - TABPRV - TABPRC - TABPR1 - TABPR2 - TABPR3)) + TIND_APB4 * TAPB4)
LIG3525 = 1 - V_CNR * is_positive(RTNC) * LIG1 * LIG2
PS9YP = is_positive(CVNSALC + CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * arr(VAR9YIPS * PRS - PRSPROV / BINRPS) + 1 - is_positive(CVNSALC + CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP)
LIGXBP = is_positive(XBNV + XBNC + XBNP) * LIG1 * LIG2
PERPPLAFCANT = present(PERPPLAFCC) * PERPPLAFCC + 1 - present(PERPPLAFCC) * V_BTPERPC
LIGINVRED = is_positive(DINVRED) * LIG1 * LIG2
REV4VC = GLN4DAJV + GLN4DBJC
LIG80 = is_positive(present(RDREP) + present(DONETRAN)) * LIG1 * LIG2
SPENETNPC = max(0, BNCNPC - SPEABNPC)
CS_BASE = BCSG
INVRETAQR = min(arr(INVRETAQ * 5 / 3), NINVRETAQ - INVRETAQ) * 1 - null(1 - abs(arr(INVRETAQ * 5 / 3) - NINVRETAQ - INVRETAQ)) + NINVRETAQ - INVRETAQ * null(1 - abs(arr(INVRETAQ * 5 / 3) - NINVRETAQ - INVRETAQ)) * 1 - V_CNR
ACELREPYB = CELREPYB * 1 - ART1731BIS + min(CELREPYB, max(ACELREPYB_P + ACELREPYBP2, ACELREPYB1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REDISF = RISFDONF + RISFDONCEE + RISFPMED + RISFPMEI + RISFFIP + RISFFCPI
BINHTAP = max(0, arr(BICHREP - BICHDEP * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV)) + min(0, BICHREP - BICHDEP * 1 - is_positive(ART1731BIS * PREM8_11))
TABDOMDBJ = is_positive(CODDBJ) * is_positive(CODEBJ + GLD1C + GLD2C + GLD3C) * arr(TREP10C * CODDBJ / TTSBC) + 1 - is_positive(CODEBJ + GLD1C + GLD2C + GLD3C) * max(0, TREP10C - TABTSC) + 0
LIGISF17281 = is_positive(NMAJISF1) * 1 - is_positive(ANNUL2042) * LIGISF * 1 - is_positive(SEUIL_12 - ISF4BIS) * 1 - null(ISF5) * 1 - is_positive(V_FLAGR34 + null(CMAJ_ISF - 34))
BSNCF = max(0, min(RDSNO, LIM_TITPRISE * 1 + BOOL_0AM - BSN1 - BSNCQ - BSNCR))
TGLPALIMCM = is_positive(TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPENALIMC / TOTALQUO) + 1 - is_positive(TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM
RISFFCPI_1 = max(0, min(18000 - RISFFIP_1, AISFFCPI))
SOMMEA538VB = present(BAFORESTV) + present(BAFPVV) + present(BACREV) + present(_4BACREV) + present(BAHREV) + present(_4BAHREV) + present(MIBVENV) + present(MIBPRESV) + present(MIBPVV) + present(BICNOV) + present(LOCPROCGAV) + present(BIHNOV) + present(LOCPROV) + present(MIBNPVENV) + present(MIBNPPRESV) + present(MIBNPPVV) + present(BICREV) + present(LOCNPCGAV) + present(LOCGITCV) + present(BICHREV) + present(LOCNPV) + present(LOCGITHCV) + present(BNCPROV) + present(BNCPROPVV) + present(BNCREV) + present(BNHREV) + present(BNCNPV) + present(BNCNPPVV) + present(ANOCEP) + present(BNCAABV) + present(MIBMEUV) + present(MIBGITEV) + present(LOCGITV) + present(INVENTV)
BCIHABPRIN3 = min(max(0, BCIHP - BCIHABPRIN1 - BCIHABPRIN2), PREHABTN) * 1 - V_CNR
ZIPQ32 = is_positive(TEGL4 + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQ3 / TETONEQUO1) + 1 - is_positive(TEGL4 + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQRWB2 - ZIPQRWA2 - ZIPQRVG2 - sum([ZIPQ12, ZIPQ22])
TSNRFP = REMPLAP4 - ABTSRFP
ACODIJ = min(PLAF_RESINEUV - ACODIL - ACODIN, LOCRESINEUV) * 1 - V_CNR
# TODO NMAJPCAP3
ZIPQPRRC1 = is_positive(sum([TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPRRC / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRV1
ABADO1 = arr(min(IPRODOM1 + IQUODAJ1 * TX_RABDOM / 100, PLAF_RABDOM))
ZIPQRVO71 = is_positive(TEGLTSTOT + TEGLTSREMPTOT) * arr(IQUOTOT1 * TERPQRVO7 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQPRRZ1TOT - ZIPQRVO1 - ZIPQRVO51 - ZIPQRVO61
IPQRCMCH1 = ZIPQRCMCH1 * PROVIENB
INVRETUGA = min(NINVRETUG, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA)) * 1 - V_CNR
LIG2150 = 1 - INDCTX * is_positive(IREST) * 1 - is_positive(LIG2140) * 1 - is_positive(IND_REST50) * is_positive(20 - V_NOTRAIT) * LIG2
ZIPQFANT1TOT = sum([ZIPQFANTV1, ZIPQFANTC1, ZIPQFANT11, ZIPQFANT21, ZIPQFANT31, ZIPQFANT41])
TERPQF2 = RPQF2 * 1 - is_positive(INDTEFF) + TRPQF2 * is_positive(INDTEFF)
RD_TAX1649 = TAX1649
INVRETRM = min(NINVRETRM, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG)) * 1 - V_CNR
NPLOCCGASP = arr(NPLOCCGAPAC * LOCNPCGAPAC / LOCNPCGAPAC + LOCGITCP) * present(LOCNPCGAPAC) + min(0, NPLOCCGAPAC) * 1 - present(LOCNPCGAPAC)
TFRDREPTOT = is_positive(ART1731BIS) * TFRDVREP + TFRDCREP + TFRD1REP
BCELCOM2011 = arr(min(CELLIERNP + CELLIERNR + CELLIERNS + CELLIERNT + 0, LIMCELLIER) / 5)
IN51 = max(IS511, IS521 - PLA)
REPLNPT = RCODJT1 + RCODJT2 + RCODJT3 + RCODJT4 + RCODJT5 + RCODJT6 + RCODJT7 + RCODJT8
GLN4DBJC = max(CODDBJ - ABDOMDBJ, 0) * INDEFTSC
LIGCOD3SH = is_positive(COD3SH) * LIG1 * LIG2
ABNCPNETV = AUTOBNCV - TBNCPABV
TAUIMP = positif_ou_nul(TAUREST) * CRERESTAU - TAUREST
RILMIY_1 = max(min(AILMIY, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX), 0)
A10RENT1 = RENT13 + RENT19 + RENT15 + RENT21 + RLOC101 + RLOC107 + RLOC103 + RLOC109 + RLOC13 + RLOC31 + RLOC33 + RLOC62 + RLOC69 + RLOC65 + RLOC72 + max(0, RLOC11 + RLOC17 + RLOC09 + RLOC15 + RLOC26 + RLOC41 + RLOC21 + RLOC36 + RLOC28 + RLOC43 + RLOC55 + RLOC83 + RLOC48 + RLOC76 + RLOC58 + RLOC86 + RLOC51 + RLOC79 + RLOC23 + RLOC38 + RENT07 + RENT31 + RENT01 + RENT25 + RENT09 + RENT33 + RENT03 + RENT27 + RLOC95 + RLOC115 + RLOC89 + RLOC113 + RLOC97 + RLOC121 + RLOC91 + RLOC117 - arr(RLOC11 + RLOC17 * 50 / 100) + arr(RLOC09 + RLOC15 * 60 / 100) + arr(RLOC26 + RLOC41 * 50 / 100) + arr(RLOC21 + RLOC36 * 60 / 100) + arr(RLOC55 + RLOC83 * 50 / 100) + arr(RLOC48 + RLOC76 * 60 / 100) + arr(RLOC28 + RLOC43 * 5263 / 10000) + arr(RLOC23 + RLOC38 * 625 / 1000) + arr(RLOC58 + RLOC86 * 5263 / 10000) + arr(RLOC51 + RLOC79 * 625 / 1000) + arr(RENT07 + RENT31 * 5263 / 10000) + arr(RENT01 + RENT25 * 625 / 1000) + arr(RENT09 + RENT33 * 5263 / 10000) + arr(RENT03 + RENT27 * 625 / 1000) + arr(RLOC95 + RLOC115 * 5263 / 10000) + arr(RLOC89 + RLOC113 * 625 / 1000) + arr(RLOC97 + RLOC121 * 5263 / 10000) + arr(RLOC91 + RLOC117 * 625 / 1000)) * 1 - V_CNR
IND9HI0 = INDCTX23 * null(5 - V_IND_TRAIT) * present(ISFBASE)
IAVIMBIS = IRB + PIR
IPROGUY2 = arr(IPQ02 * EXO1 * PROGUY / RG)
BNNAAC = BNCAABC - BNCAADC * 1 - is_positive(ART1731BIS * PREM8_11)
RCODIF_1 = max(min(RETCODIF, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV - RCODIE), 0)
BN1C = BN1AC + PVINCE + INVENTC
INVRETQUR = min(max(min(arr(INVRETQU * 13 / 7), NINVRETQU - INVRETQU), NINVRETQU - INVRETQU), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR)) * 1 - V_CNR
ZIPQPRRZ15 = is_positive(sum([TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPRRZ1M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZV5 - ZIPQPRRZC5
RCODJT6 = RCODJT1
RPQPRRZVM = inf(GLPRRZVM / CODNAZ)
PCVN = PTOCVN
GLN2V = max(GLD2V - ABGL2V, 0) * INDEFTSV
INVRETRCA = min(arr(NINVRETRC * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA)) * 1 - V_CNR
RCELREPHR_1 = max(min(RCELREP_HR, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TPRNV = is_positive(TTSNTV) * is_positive(TTSNTV + TPRNNV) * TTSNTV + TPRNNV + positif_ou_nul(TTSNTV) * TPRNNV
IPQRWA2 = ZIPQRWA2 * CODNWA
NINVRETPF = max(min(INVOMRETPF, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB), 0) * 1 - V_CNR
LIGREPOU = is_positive(REPMEUOU) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGRDCSG = is_positive(is_positive(V_BTCSGDED) + present(DCSG) + present(RCMSOC)) * LIG1 * LIG2
INVRETPHA = min(NINVRETPH, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA)) * 1 - V_CNR
INVRETQE = NINVRETQE * 1 - V_CNR
INVRETNW = min(NINVRETNW, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW)) * 1 - V_CNR
ZIG_TITRECR = is_positive(BCSG + V_CSANT) * is_positive(BRDS + V_RDANT) * 1 - is_positive(BPRS + V_PSANT) * 1 - is_positive(BCVNSAL + V_CVNANT) * 1 - V_CNR * LIG2
DCELREPHW = CELREPHW
TAPR3 = TIND_APB3 * TABPR3 + 1 - TIND_APB3 * min(TABPR3, TPL_PB - 1 - TIND_APBV * TAPRV - 1 - TIND_APBC * TAPRC - 1 - TIND_APB1 * TAPR1 - 1 - TIND_APB2 * TAPR2)
NRCODJT = max(min(RETCODJT, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA - NRRESIMEUB - NRRESIMEUB - NRRESINEUV - NRLOCIDEFG - NRCODJU), 0)
RCODJTJU = RCODJU + RCODJT
TABTS1FP = is_positive(CARTSP4 + REMPLAP4) * arr(TREP104 * ALLO4 / TTSB4) + 1 - is_positive(CARTSP4 + REMPLAP4) * max(0, TREP104 - TABTS1FJ - TABTS1FC)
TRPQPRRZ3 = inf(TGLPRRZ3 / CODNEZ)
RCELRREDLE = max(0, RCELRREDLE_1 * 1 - ART1731BIS + min(RCELRREDLE_1, max(RCELRREDLE_P + RCELRREDLEP2, RCELRREDLE1731 + 0) * 1 - PREM8_11) * ART1731BIS)
TPENF4 = is_positive(PENSALP4) * arr(TPRN4 * PEBF4 / TEXPR4) + 1 - is_positive(PENSALP4) * TPRN4 - TPRR4 - TPRR24 - TPRR2Z4
RLOG02 = max(min(INVLGDEB2009, RRI1 - RLOG01), 0) * 1 - V_CNR
NRCELREPGV = max(min(ACELREPGV, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL])), 0)
RNGTEFRFR = null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * IPVLOC + 1 - null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * RBLTEFRFR
PPE_BOOL_SIFM = BOOL_0AM + is_positive(V_0AV) * is_positive(V_0AZ)
TRPQTSREMP3M = inf(TGLTSREMP3M / REMPLANBP3)
NRILMPA = max(min(AILMPA, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY), 0)
TSNN24AFF = is_positive(TS4) * is_positive(CARTSP4 + REMPLAP4) * arr(TS4 * _2TSN4 / EXTS4) + 1 - is_positive(CARTSP4 + REMPLAP4) * TS4 - TSNN4
NINVRETSL = max(min(CODHSL, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG), 0) * 1 - V_CNR
RLOC18 = max(min(INVOMQV, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17])), 0) * 1 - V_CNR
T2TSN3 = CARTSP3 + REMPLAP3
XBNNPP = BNCNPREXP + BNCNPREXAAP
ZIGDRSED2 = ZIGIDRSE * null(ANCSDED2 - V_ANREV + 2)
RFORET = max(0, RFORET_1 * 1 - ART1731BIS + min(RFORET_1, max(RFORET_P + RFORETP2, RFORET1731 + 0) * 1 - PREM8_11) * ART1731BIS)
ITOTDOM2 = IMETRO2 + IQUORAJ2 + INETABADAJ2 + INETABAEAJ2
RCELRREDLA_1 = max(min(ACELRREDLA, IDOM11 - DEC11 - REDUCAVTCEL), 0)
INVRETPPA = min(NINVRETPP, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA)) * 1 - V_CNR
PPENATREST2 = is_positive(IREST - V_ANTRE + V_ANTIR) + is_positive(V_ANTRE - IINET) * is_positive(IRE) * 1 - null(2 - V_REGCO) * null(IRE - PPETOTX + PPERSA) * 1 * 1 + 1 - is_positive(PPETOTX - PPERSA) * 2 + null(IRE) * 1 - is_positive(PPETOTX - PPERSA) * 3 + is_positive(PPETOTX - PPERSA) * is_positive(IRE - PPETOTX + PPERSA) * 4 + 2 * null(2 - V_REGCO)
TSPRDC = min(0, TSNNC + PRRC) * ART1731BIS
LIG2053 = is_positive(V_NOTRAIT - 20) * is_positive(IDEGR) * is_positive(IREST - SEUIL_8) * TYPE2
RCELNBGL_1 = max(min(RCEL_NBGL, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IPQRVO5 = ZIPQRVO5 * RENTAXNB
# TODO BNCP
LIGRCELNQ = is_positive(RIVCELNQ1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
NINVRETOB = max(min(INVOMLOGOB, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD), 0) * 1 - V_CNR
REPRC = max(0, CODHRC - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW - INVOMSOCQX - CODHRA - CODHRB)) * 1 - ART1731BIS + max(0, CODHRC - max(0, RDOMSOC1 - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW - INVOMSOCQX - CODHRA - CODHRB)) * ART1731BIS * 1 - V_CNR
RPQPRR3 = inf(GLPRR3 / CARPENBAP3)
LIGILMIB = is_positive(DILMIB) * LIG1 * LIG2
INVRETRK = min(arr(NINVRETRK * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX)) * 1 - V_CNR
INVRETSVR = min(arr(INVRETSV * 5 / 3), NINVRETSV - INVRETSV) * 1 - null(1 - abs(arr(INVRETSV * 5 / 3) - NINVRETSV - INVRETSV)) + NINVRETSV - INVRETSV * null(1 - abs(arr(INVRETSV * 5 / 3) - NINVRETSV - INVRETSV)) * 1 - V_CNR
GL3 = is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * GLN3 / TOTALQUOHT) + 1 - is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB - GLRWA - GLRVG - GL1 - GL2
LIG_IRNET = is_positive(LIGTAXANET + LIGPCAPNET + LIGLOYNET + LIGHAUTNET) * 1 - is_positive(ANNUL2042 + 0)
LIGPV3VG = is_positive(PVBAR3VG) * 1 - is_positive(IPVLOC) * LIG1 * LIG2 * is_positive(INDREV1A8IR)
LIGPME2 = is_positive(REPINVPME2) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TOTALPLAF1 = INVRETKG + INVRETKH + INVRETKI + INVRETQN + INVRETQU + INVRETQK + INVRETQJ + INVRETQS + INVRETQW + INVRETQX + INVRETRA + INVRETRB + INVRETRC + INVRETRD + INVRETXA + INVRETXB + INVRETXC + INVRETXE + INVRETMA + INVRETLG + INVRETMB + INVRETLH + INVRETMC + INVRETLI + INVRETQP + INVRETQG + INVRETQO + INVRETQF + INVRETPO + INVRETPT + INVRETPN + INVRETPS + INVRETPP + INVRETPU + INVRETKS + INVRETKT + INVRETKU + INVRETQR + INVRETQI + INVRETPR + INVRETPW + INVRETQL + INVRETQM + INVRETQD + INVRETOB + INVRETOC + INVRETOM + INVRETON + INVRETOD + INVRETUA + INVRETKGR + INVRETKHR + INVRETKIR + INVRETQNR + INVRETQUR + INVRETQKR + INVRETQJR + INVRETQSR + INVRETQWR + INVRETQXR + INVRETRAR + INVRETRBR + INVRETRCR + INVRETRDR + INVRETXAR + INVRETXBR + INVRETXCR + INVRETXER + INVRETMAR + INVRETLGR + INVRETMBR + INVRETLHR + INVRETMCR + INVRETLIR + INVRETQPR + INVRETQGR + INVRETQOR + INVRETQFR + INVRETPOR + INVRETPTR + INVRETPNR + INVRETPSR
RLOC51 = max(min(INVRETRQ * 1 - INDPLAF + INVRETRQA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50])), 0) * 1 - V_CNR
IPQTSREMPV5 = ZIPQTSREMPV5 * REMPLANBV
INVRETQIA = min(NINVRETQI, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA)) * 1 - V_CNR
IPRODOM32 = arr(IPQ02 * PRODOM / RG)
LIGTITREXVP = is_positive(EXOVOUS) * 1 - is_positive(EXOCJT) * is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
RCELREP_HV = is_positive(CELREPHV) * arr(ACELREPHV * TX25 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
DCTMIB = BICPMVCTV + BICPMVCTC + BICPMVCTP * positif_ou_nul(BIPN + MIB_NETCT) + 1 - positif_ou_nul(BIPN + MIB_NETCT) * BICPMVCTV + BICPMVCTC + BICPMVCTP - abs(BIPN + MIB_NETCT) + 1 - positif_ou_nul(BIPN + MIB_NETCT) * null(BICPMVCTV + BICPMVCTC + BICPMVCTP - abs(BIPN + MIB_NETCT)) * BICPMVCTV + BICPMVCTC + BICPMVCTP
RLOC34 = max(min(INVRETPL * 1 - INDPLAF + INVRETPLA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33])), 0) * 1 - V_CNR
PRB4 = PRBR4 + PALI4 + PENIN4
LIG_AVISISF = 1 - is_positive(ISF_LIMINF + ISF_LIMSUP) * present(ISFBASE)
PPRS = PTOPRS
ZIGRSE1 = is_positive(BRSE1) * LIG2
RPQ3M = inf(GL3M / DIVGL3)
SOMMEA71702 = is_positive(CELLIERNA) + is_positive(CELLIERNB) + is_positive(CELLIERNC) + is_positive(CELLIERND) + is_positive(CELLIERNE) + is_positive(CELLIERNF) + is_positive(CELLIERNG) + is_positive(CELLIERNH) + is_positive(CELLIERNI) + is_positive(CELLIERNJ) + is_positive(CELLIERNK) + is_positive(CELLIERNL) + is_positive(CELLIERNM) + is_positive(CELLIERNN) + is_positive(CELLIERNO) + is_positive(CELLIERNP) + is_positive(CELLIERNQ) + is_positive(CELLIERNR) + is_positive(CELLIERNS) + is_positive(CELLIERNT) + 0
RLOGSOC = RLOGSOC_1 * 1 - ART1731BIS + min(RLOGSOC_1, max(RLOGSOC_P + RLOGSOCP2, RLOGSOC1731 + 0) * 1 - PREM8_11) * ART1731BIS
SOMMEA718 = present(BAFV) + 1 - null(V_FORVA + 0) + present(BAFORESTV) + present(BAFPVV) + present(BAF1AV) + present(BAFC) + 1 - null(V_FORCA + 0) + present(BAFORESTC) + present(BAFPVC) + present(BAF1AC) + present(BAFP) + 1 - null(V_FORPA + 0) + present(BAFORESTP) + present(BAFPVP) + present(BAF1AP) + present(BACREV) + present(_4BACREV) + present(BA1AV) + present(BACDEV) + present(BACREC) + present(_4BACREC) + present(BA1AC) + present(BACDEC) + present(BACREP) + present(_4BACREP) + present(BA1AP) + present(BACDEP) + present(BAHREV) + present(_4BAHREV) + present(BAHDEV) + present(BAHREC) + present(_4BAHREC) + present(BAHDEC) + present(BAHREP) + present(_4BAHREP) + present(BAHDEP) + present(MIBVENV) + present(MIBPRESV) + present(MIBPVV) + present(MIB1AV) + present(MIBDEV) + present(BICPMVCTV) + present(MIBVENC) + present(MIBPRESC) + present(MIBPVC) + present(MIB1AC) + present(MIBDEC) + present(BICPMVCTC) + present(MIBVENP) + present(MIBPRESP) + present(MIBPVP) + present(MIB1AP) + present(MIBDEP) + present(BICPMVCTP) + present(BICNOV) + present(LOCPROCGAV) + present(BI1AV) + present(BICDNV) + present(LOCDEFPROCGAV) + present(BICNOC) + present(LOCPROCGAC) + present(BI1AC) + present(BICDNC) + present(LOCDEFPROCGAC) + present(BICNOP) + present(LOCPROCGAP) + present(BI1AP) + present(BICDNP) + present(LOCDEFPROCGAP) + present(BIHNOV) + present(LOCPROV) + present(BIHDNV) + present(LOCDEFPROV) + present(BIHNOC) + present(LOCPROC) + present(BIHDNC) + present(LOCDEFPROC) + present(BIHNOP) + present(LOCPROP) + present(BIHDNP) + present(LOCDEFPROP) + present(MIBMEUV) + present(MIBGITEV) + present(LOCGITV) + present(MIBNPVENV) + present(MIBNPPRESV) + present(MIBNPPVV) + present(MIBNP1AV) + present(MIBNPDEV) + present(MIBMEUC) + present(MIBGITEC) + present(LOCGITC) + present(MIBNPVENC) + present(MIBNPPRESC) + present(MIBNPPVC) + present(MIBNP1AC) + present(MIBNPDEC) + present(MIBMEUP) + present(MIBGITEP) + present(LOCGITP) + present(MIBNPVENP) + present(MIBNPPRESP) + present(MIBNPPVP) + present(MIBNP1AP) + present(MIBNPDEP) + present(MIBNPDCT) + present(BICREV) + present(LOCNPCGAV) + present(LOCGITCV) + present(BI2AV) + present(BICDEV) + present(LOCDEFNPCGAV) + present(BICREC) + present(LOCNPCGAC) + present(LOCGITCC) + present(BI2AC) + present(BICDEC) + present(LOCDEFNPCGAC) + present(BICREP) + present(LOCNPCGAPAC) + present(LOCGITCP) + present(BI2AP) + present(BICDEP) + present(LOCDEFNPCGAPAC) + present(BICHREV) + present(LOCNPV) + present(LOCGITHCV) + present(BICHDEV) + present(LOCDEFNPV) + present(BICHREC) + present(LOCNPC) + present(LOCGITHCC) + present(BICHDEC) + present(LOCDEFNPC) + present(BICHREP) + present(LOCNPPAC) + present(LOCGITHCP) + present(BICHDEP) + present(LOCDEFNPPAC) + present(BNCPROV) + present(BNCPROPVV) + present(BNCPRO1AV) + present(BNCPRODEV) + present(BNCPMVCTV) + present(BNCPROC) + present(BNCPROPVC) + present(BNCPRO1AC) + present(BNCPRODEC) + present(BNCPMVCTC) + present(BNCPROP) + present(BNCPROPVP) + present(BNCPRO1AP) + present(BNCPRODEP) + present(BNCPMVCTP) + present(BNCREV) + present(BN1AV) + present(BNCDEV) + present(BNCREC) + present(BN1AC) + present(BNCDEC) + present(BNCREP) + present(BN1AP) + present(BNCDEP) + present(BNHREV) + present(BNHDEV) + present(BNHREC) + present(BNHDEC) + present(BNHREP) + present(BNHDEP) + present(BNCNPV) + present(BNCNPPVV) + present(BNCNP1AV) + present(BNCNPDEV) + present(BNCNPC) + present(BNCNPPVC) + present(BNCNP1AC) + present(BNCNPDEC) + present(BNCNPP) + present(BNCNPPVP) + present(BNCNP1AP) + present(BNCNPDEP) + present(BNCNPDCT) + present(BNCAABV) + present(ANOCEP) + present(PVINVE) + present(INVENTV) + present(BNCAADV) + present(DNOCEP) + present(BNCAABC) + present(ANOVEP) + present(PVINCE) + present(INVENTC) + present(BNCAADC) + present(DNOCEPC) + present(BNCAABP) + present(ANOPEP) + present(PVINPE) + present(INVENTP) + present(BNCAADP) + present(DNOCEPP) + 0
SYNREST = is_positive(REST) * max(0, min(CISYND, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD))
ZIGDCSGD5 = ZIG_CSGD99 * null(ANCSDED2 - V_ANREV + 5) * LIG2
# TODO IDEGR
TRPQPALIM3 = inf(TGLPALIM3 / PENSALNBP3)
RPQPALIMVM = inf(GLPALIMVM / PENSALNBV)
PS_BPCOS = CS_BPCOS
RILMIZ = max(0, RILMIZ_1 * 1 - ART1731BIS + min(RILMIZ_1, max(RILMIZ_P + RILMIZP2, RILMIZ1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RHEBE_1 = max(min(RAH, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1 - RSOCREPR_1 - RRPRESCOMP_1), 0)
BTPSK = BPVSK * 1 - is_positive(IPVLOC)
# TODO NMAJRSE34
RPQPRRZ3 = inf(GLPRRZ3 / CODNEZ)
RCELREPHG = max(0, RCELREPHG_1 * 1 - ART1731BIS + min(RCELREPHG_1, max(RCELREPHG_P + RCELREPHGP2, RCELREPHG1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIG134P = is_positive(present(BAFP) + present(BAHREP) + present(BAHDEP) + present(BACREP) + present(BACDEP) + present(BAFPVP) + present(BAFORESTP))
IPQPRRANTZ11 = ZIPQPRRANTZ11 * CODNCZ
PERPPLAFNU2V = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE + 0) * is_positive(PERPPLAFVANT + PERPPLAFNUV3ANT - RPERPV) * PERPPLAFNUV2ANT + 1 - is_positive(PERPPLAFVANT + PERPPLAFNUV3ANT - RPERPV) * max(0, PERPPLAFNUV2ANT - RPERPV - PERPPLAFVANT - PERPPLAFNUV3ANT) + is_positive(PERPIMPATRIE + 0) * 0 + is_positive(PERP_COND1) * 0 + is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE + 0) * is_positive(PERPPLAFVANT + PERPPLAFNUV3ANT - RPERPV - RPERPMUTC - RACCOTC) * PERPPLAFNUV2ANT + 1 - is_positive(PERPPLAFVANT + PERPPLAFNUV3ANT - RPERPV - RPERPMUTC - RACCOTC) * max(0, PERPPLAFNUV2ANT - RPERPV + RPERPMUTC + RACCOTC - PERPPLAFVANT + PERPPLAFNUV3ANT) + is_positive(PERPIMPATRIE + 0) * 0
RSE4NET = max(0, RSE8TX - CIRSE8TX - CSPROVYH) + max(0, RSE8SB - CIRSE8SB - CSPROVYP) + PRSE4
RPQF3 = inf(GLF3 / COTF3)
LIGISFNMR = is_positive(SEUIL_12 - ISF5) * 1 - null(ISF5) * 1 - is_positive(INDCTX23) * is_positive(20 - V_NOTRAIT) * LIGISF * 1 - is_positive(ANNUL2042)
EXTSC = TSBNC + BPCOSAC + GLDGRATC + _2TSNC
ACELNQ_R = positif_ou_nul(CELLIERNQ) * BCEL_NQ * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IPQPALIM31 = ZIPQPALIM31 * PENSALNBP3
_1RCM_I = (1 - is_positive(DFRCMN) * _1RIA + _1RNC + _1RAR + _1RAU + _1RAO + RCAV - FRG1 - is_positive(DFRCMN) * 0 * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * _1RIA + _1RNC + _1RAR + _1RAU + _1RAO + RCAV - FRG1 - is_positive(DFRCMN) * 0) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
AILMJS = DILMJS * 1 - ART1731BIS + min(DILMJS, max(AILMJS_P + AILMJSP2, AILMJS1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
NINVRETSP = max(min(CODHSP, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK), 0) * 1 - V_CNR
ACELRREDLZ = CELRREDLZ * 1 - ART1731BIS + min(CELRREDLZ, max(ACELRREDLZ_P + ACELRREDLZP2, ACELRREDLZ1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
DCELRREDLC = CELRREDLC
NIN = V_0AP + V_0AF + V_0CG + V_0CR * 0.5
RCELHL = max(0, RCELHL_1 * 1 - ART1731BIS + min(RCELHL_1, max(RCELHL_P + RCELHLP2, RCELHL1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RETCODIJ = arr(arr(ACODIJ / 9) * TX18 / 100)
PVBAR = max(0, BPVRCM + COD3SG + COD3SL + ABDETPLUS + ABIMPPV + inf(CODRVG / CODNVG) - DPVRCM + COD3SH + COD3SM + ABDETMOINS + ABIMPMV)
BASSURV2 = max(0, CESSASSV - BASSURV3 - LIM_ASSUR2)
ZIPQANTRWA = is_positive(TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQRWA / TETONEQUO1) + 1 - is_positive(TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANTRWB
IAMD2 = IBM23
SOMMEA538PB = present(BAFORESTP) + present(BAFPVP) + present(BACREP) + present(_4BACREP) + present(BAHREP) + present(_4BAHREP) + present(MIBVENP) + present(MIBPRESP) + present(MIBPVP) + present(BICNOP) + present(LOCPROCGAP) + present(BIHNOP) + present(LOCPROP) + present(MIBNPVENP) + present(MIBNPPRESP) + present(MIBNPPVP) + present(BICREP) + present(LOCNPCGAPAC) + present(LOCGITCP) + present(BICHREP) + present(LOCNPPAC) + present(LOCGITHCP) + present(BNCPROP) + present(BNCPROPVP) + present(BNCREP) + present(BNHREP) + present(BNCNPP) + present(BNCNPPVP) + present(ANOPEP) + present(BNCAABP) + present(MIBMEUP) + present(MIBGITEP) + present(LOCGITP) + present(INVENTP)
ZIG_INT = is_positive(RETCS + RETRD + RETPS + RETCVN) * LIG2
# TODO F10AP
DCELHJK = CELLIERHJ + CELLIERHK
CDEVDUR_NBJ = PPENBJ
LIG400F = INDNMR1 * is_positive(IAMD2) * 1 - INDNIRI * positif_ou_nul(NAPTIR) * 1 - is_positive(LIG400RI) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGNIDB) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * 1 - is_positive(NRINET) * is_positive(20 - V_NOTRAIT) * LIG2
GLTSREMPV = is_positive(TSNN2REMPC + TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2REMPV / TOTALQUOHT) + 1 - is_positive(TSNN2REMPC + TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLTSTOT - GLPALIMTOT
NRILMOD = max(min(AILMOD, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE), 0)
# TODO REPAR
TTSN1CJ = TSHALLO1 - TABTS1CJ
HRBASELISSE = HRBASEFRAC + HRMOYBTRFR
INVRETRARA = min(NINVRETRAR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA)) * 1 - V_CNR
NINVRETPB = max(min(INVOMRETPB, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG), 0) * 1 - V_CNR
TPRR2Z4 = is_positive(PEBF4 + PENSALP4) * arr(TPRN4 * CODRFZ / TEXPR4) + 1 - is_positive(PEBF4 + PENSALP4) * TPRN4 - TPRR4 - TPRR24
SPEBASABC = SPETOTC
ACELREPYA = CELREPYA * 1 - ART1731BIS + min(CELREPYA, max(ACELREPYA_P + ACELREPYAP2, ACELREPYA1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REPMEUPC = DILMPC - RILMPC * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIGCSGDCOR5 = ZIG_CSGDCOR * null(ANCSDED2 - V_ANREV + 5)
D10M4 = IND_MIN4 * DFN4 + 1 - IND_MIN4 * _10MINS4
RPQPALIM1M = inf(GLPALIM1M / PENSALNBP1)
REVRF = _2REVF + _3REVF
T10MINS3 = max(min(TTSB3, TDEDMIN3), TDFN3)
TPRR2ZC = is_positive(PEBFC + PENSALC) * arr(TPRNC * CODRBZ / TEXPRC) + 1 - is_positive(PEBFC + PENSALC) * TPRNC - TPRRC - TPRR2C
RIVCELHLM1 = RCEL_HL_R * is_positive(ACELHL_R) + RCEL_HM_R * is_positive(ACELHM_R)
RCMPRIVM = REGPRIVM + _2REGPRIVM
IPQPRRZV2 = ZIPQPRRZV2 * CODNAZ
LIGSPENPNEG = is_positive(SPENETNPF * -1) * 1 - is_positive(present(BNCAABV) + present(BNCAADV) + present(BNCAABC) + present(BNCAADC) + present(BNCAABP) + present(BNCAADP) + present(DNOCEP) + present(ANOVEP) + present(DNOCEPC) + present(ANOPEP) + present(DNOCEPP) + present(ANOCEP) + present(DABNCNP6) + present(DABNCNP5) + present(DABNCNP4) + present(DABNCNP3) + present(DABNCNP2) + present(DABNCNP1)) * LIG2
TMIB_ABPP = max(0, arr(TMIB_APP * MIBPRESP + AUTOBICPP / TMIB_TPRESP))
INVRETRU = min(arr(NINVRETRU * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP)) * 1 - V_CNR
REPINVIEU = RESIVIEU1 + RESIVIEU2 + RESIVIEU3 + RESIVIEU4 + RESIVIEU5 + RESIVIEU6 + RESIVIEU7 + RESIVIEU8
TPRR2Z2 = is_positive(PEBF2 + PENSALP2) * arr(TPRN2 * CODRDZ / TEXPR2) + 1 - is_positive(PEBF2 + PENSALP2) * TPRN2 - TPRR2 - TPRR22
ID16 = IN06
IAMD1 = IBM13
NINVRETNW = max(min(INVOMENTNW, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW), 0) * 1 - V_CNR
_2RV3 = arr(RENTAX6 * TXRVT3 / 100)
TSPEABC = arr(max(MIN_SPEBNC, TSPEBASABC * SPETXAB / 100) * positif_ou_nul(TSPETOTC - MIN_SPEBNC)) + arr(min(MIN_SPEBNC, TSPEBASABC) * is_positive(MIN_SPEBNC - TSPETOTC))
AILMIX = DILMIX * 1 - ART1731BIS + min(DILMIX, max(AILMIX_P + AILMIXP2, AILMIX1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
INVRETSBR = min(arr(INVRETSB * 5 / 3), NINVRETSB - INVRETSB) * 1 - null(1 - abs(arr(INVRETSB * 5 / 3) - NINVRETSB - INVRETSB)) + NINVRETSB - INVRETSB * null(1 - abs(arr(INVRETSB * 5 / 3) - NINVRETSB - INVRETSB)) * 1 - V_CNR
TGLRVO7M = is_positive(REVRCM + REVRF) * arr(TONEQUOM * _2RV4 / TOTALQUO) + 1 - is_positive(REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOM - TGLRVO5M - TGLRVO6M
FRD2 = 1 - is_positive(PREM8_11) * FRN2 * is_positive(FRN2 - _10MINS2) + null(4 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRN2, FRDPROV2) * is_positive(FRN3 + FRN4) + is_positive(PREM8_11) * max(0, FRDP - FRD1) * 1 - is_positive(FRN3 + FRN4) + null(5 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRN2, min(FRDPROV2, max(FRDPROV2P2, FRDPROV21731))) * is_positive(FRN3 + FRN4) + is_positive(PREM8_11) * max(0, FRDP - FRD1) * 1 - is_positive(FRN3 + FRN4)
INVRETPXR = min(arr(INVRETPX * 10 / 9), NINVRETPX - INVRETPX) * 1 - null(1 - abs(arr(INVRETPX * 10 / 9) - NINVRETPX - INVRETPX)) + NINVRETPX - INVRETPX * null(1 - abs(arr(INVRETPX * 10 / 9) - NINVRETPX - INVRETPX)) * 1 - V_CNR
REPQN = max(0, INVSOC2010 - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI)) * 1 - ART1731BIS + max(0, INVSOC2010 - max(0, RDOMSOC1 - INVSOCNRET - INVOMSOCKH - INVOMSOCKI)) * ART1731BIS * 1 - V_CNR
ZIPQRCM5TOT = ZIPQRCMDC5 + ZIPQRCMFU5 + ZIPQRCMCH5 + ZIPQRCMTS5 + ZIPQRCMGO5 + ZIPQRCMTR5
RCELREPGP_1 = max(min(ACELREPGP, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RPQRCMTS = inf(GLRCMTS / DISQUONB)
TGLTS4 = is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2TS4 / TOTALQUO) + 1 - is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSV - TGLTSC - TGLTS1 - TGLTS2 - TGLTS3
ACOTFOR_R = min(DCOTFOR, PLAF_FOREST1 * 1 + BOOL_0AM) * 1 - V_CNR
RCELREPYE_1 = max(min(ACELREPYE, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
A10REEL = RLOG11 + RLOG13 + RLOG15 + RLOG18 + RLOG20 + RLOG23 + RLOG26 + RLOG27 + RLOG29 * 1 - ART1731BIS + min(RLOG111731 + 0, RLOG11) + min(RLOG131731 + 0, RLOG13) + min(RLOG151731 + 0, RLOG15) + min(RLOG181731 + 0, RLOG18) + min(RLOG201731 + 0, RLOG20) + min(RLOG231731 + 0, RLOG23) * ART1731BIS + RLOG33 + RLOG34 + RLOG36 + A10RSOC + arr(RSNCL) + A10RENT + RCELRREDLC + RCELRREDLD + RCELRREDLS + RCELRREDLT + RCELREPHW + RCELREPHV + RCELREPHD + RCELREPHH + RCELREPHB + RCELREPGX + RCELREPGS + RCELREPGP + RCELREPYL + RCELREPYF + RCELREPYE + RCELHJK + RCELNQ + RCELNBGL + RINVRED + RREPMEU + RCODIM + RCODIL + RILMIH + RILMIB + RILMJC + RILMJX + RILMPB + RILMOD + A10TOURSOC + RPATNAT1 + A10RFOR
IPQPALIMANT31 = ZIPQPALIMANT31 * PENSALNBP3
REPENT1 = CODHSB + CODHSG + CODHSL + CODHSQ + CODHSV + CODHTA + CODHSA + CODHSF + CODHSK + CODHSP + CODHSU + CODHSZ + CODHSC + CODHSH + CODHSM + CODHSR + CODHSW + CODHTB + CODHSE + CODHSJ + CODHSO + CODHST + CODHSY + CODHTD
TGLRCMTR = is_positive(REVRF) * arr(TONEQUO * _7RCM / TOTALQUO) + 1 - is_positive(REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC - TGLRCMFU - TGLRCMCH - TGLRCMGO - TGLRCMTS
NINVRETQG = max(min(INVDOMRET60, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP), 0) * 1 - V_CNR
LIGREPRECH = is_positive(REPRECH) * LIG1 * LIG2
DEFLOC4 = 1 - is_positive(NPLOCNETF4) * abs(min(max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8 - LNPRODEF7 - LNPRODEF6 - LNPRODEF5 - LNPRODEF4, 0) - LNPRODEF3, LNPRODEF3)) * positif_ou_nul(LNPRODEF3 - max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8 - LNPRODEF7 - LNPRODEF6 - LNPRODEF5 - LNPRODEF4, 0)) * 1 - is_positive(ART1731BIS) + min(LNPRODEF3, TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + LNPRODEF3 * ART1731BIS * is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))
RCELHM_1 = max(min(RCEL_HM, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
APERPV = 1 - V_CNR * max(min(RPERPV, RBG - RPALE - RPALP - RFACC - RDDIV - DDCSG + TOTALQUO - SDD), 0)
IPQPRRANTZV1 = ZIPQPRRANTZV1 * CODNAZ
# TODO DDCSG
LIGPCAPNET = is_positive(present(PCAPTAXV) + present(PCAPTAXC) * INDREV1A8IR + PCAPANTAFF) * 1 - is_positive(ANNUL2042 + 0) * LIG1
REPNATR2 = max(PATNAT2 - RPATNAT2, 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TFRD1 = 1 - is_positive(PREM8_11) * FRN1 + COD1CE * is_positive(FRN1 + COD1CE - T10MINS1) + null(4 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRN1 + COD1CE, TFRDPROV1) * is_positive(FRN2 + FRN3 + FRN4 + COD1DE + COD1EE + COD1FE) + is_positive(PREM8_11) * max(0, TFRDP) * 1 - is_positive(FRN2 + FRN3 + FRN4 + COD1DE + COD1EE + COD1FE) + null(5 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRN1 + COD1CE, min(TFRDPROV1, max(TFRDPROV1P2, TFRDPROV11731))) * is_positive(FRN2 + FRN3 + FRN4 + COD1DE + COD1EE + COD1FE) + is_positive(PREM8_11) * max(0, TFRDP) * 1 - is_positive(FRN2 + FRN3 + FRN4 + COD1DE + COD1EE + COD1FE)
TRPQ4VCM = arr(TGL4VCM / DIVGL4) + 0
PERPNONSALP = PERPBANP + PERPBICMNP + PERPBICPNP + PERPBNCMNP + PERPBNCPNP
REPFORSIN2 = positif_ou_nul(REPSINFOR + VARD + REPSINFOR1 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * REPSINFOR2 + 1 - positif_ou_nul(REPSINFOR + VARD + REPSINFOR1 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, REPSINFOR2 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - REPSINFOR - VARD - REPSINFOR1 - REPFOR1)) * 1 - V_CNR
PPE_BOOL_TP3 = is_positive(is_positive(PPETPP3) * is_positive(PPE_SALAVDEF3 + 0) + null(PPENHP3 + PPEXT3 + 0) * null(PPETPP3 + 0) * is_positive(PPE_SALAVDEF3) + positif_ou_nul(360 / PPENBJ * PPENHP3 + PPEXT3 * is_positive(PPE_SALAVDEF3 + 0) - 1820))
RD_RVORIGND = ESFP
TRAR = _1RAR + _2RAR
PERPPLAFTC = PERPINDC * max(0, PERPPLAFC + PERPPLAFNUNC + PERPPLAFNU1C + PERPPLAFNU2C) * 1 - V_CNR
LIGREPTOUR = is_positive(RINVLOCINV + REPINVTOU + INVLOCXN + COD7UY) * LIG1
TEGLPALIMC = GLPALIMC * 1 - is_positive(INDTEFF) + TGLPALIMC * is_positive(INDTEFF)
TSNN2REMP2 = is_positive(TS2) * TS2 - TSNN2 - TSNN2TS2
TSN1UT = GLDGRATC - ABTS1UT
INVRETRW = min(NINVRETRW, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR)) * 1 - V_CNR
TERPQPALIM1M = RPQPALIM1M * 1 - is_positive(INDTEFF) + TRPQPALIM1M * is_positive(INDTEFF)
# TODO PCAPCUM
RLOC05 = max(min(INVRETMAR * 1 - INDPLAF + INVRETMARA * INDPLAF, RRILOC - RLOC01 - RLOC02 - RLOC03 - RLOC04), 0) * 1 - V_CNR
PPESAISINBJC = is_positive(PPENJC * is_positive(abs(PPERPROC)))
DEFNPI = abs(min(DEFNP, sum([BICNPV * is_positive(BICNPV), BICNPC * is_positive(BICNPC), BICNPP * is_positive(BICNPP)]) + MIB_NETNPCT)) * is_positive(BICNPV + BICNPC + BICNPP + MIB_NETNPCT) * 1 - is_positive(ART1731BIS) + ART1731BIS * 1 - PREM8_11 * min(DEFBIC6 + DEFBIC5 + DEFBIC4 + DEFBIC3 + DEFBIC2 + DEFBIC1, max(DEFNPI1731, max(DEFNPI_P, DEFNPIP2)))
RLOG25 = max(min(INVRETOW * 1 - INDPLAF + INVRETOWA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24])), 0) * 1 - V_CNR
NINVRETOC = max(min(INVOMLOGOC, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB), 0) * 1 - V_CNR
ZIPQRCM1TOT = ZIPQRCMDC1 + ZIPQRCMFU1 + ZIPQRCMCH1 + ZIPQRCMTS1 + ZIPQRCMGO1 + ZIPQRCMTR1
# TODO MAJTXRSE34
LIGBICAP = is_positive(ABICPDECV + ABICPDECC + ABICPDECP) * LIG1 * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO)) * LIG2
NINVRETOW = max(min(INVOMLOGOW, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV), 0) * 1 - V_CNR
INVRETPE = min(arr(NINVRETPE * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA)) * 1 - V_CNR
TERPQPALIMC = RPQPALIMC * 1 - is_positive(INDTEFF) + TRPQPALIMC * is_positive(INDTEFF)
RI2 = RI1 + DPAE
INVRETRV = min(arr(NINVRETRV * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ)) * 1 - V_CNR
APATNAT3 = PATNAT3 * 1 - ART1731BIS + min(PATNAT3, max(APATNAT3_P + APATNAT3P2, APATNAT31731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TPENALIM2 = is_positive(TEXPR2) * TPRN2 - TPRR2 - TPRR22 - TPRR2Z2 - TPENF2
XBICSP = XBICNETP + BA1AP
RSEPROVTOT = CSPROVYD + CSPROVYE + CSPROVYF + CSPROVYN + CSPROVYG + CSPROVYH + CSPROVYP
_2RCMRTNC = arr(REVPEA * 40 / 100)
IPQRVO72 = ZIPQRVO72 * RENTAXNB7
ZIPQ42 = is_positive(TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQ4 / TETONEQUO1) + 1 - is_positive(TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQRWB2 - ZIPQRWA2 - ZIPQRVG2 - sum([ZIPQ12, ZIPQ22, ZIPQ32])
ACP3 = max(0, sum([min(arr(CHENF1 * TX_DPAEAV / 100), SEUIL_AVMAXETU), min(arr(CHENF2 * TX_DPAEAV / 100), SEUIL_AVMAXETU), min(arr(CHENF3 * TX_DPAEAV / 100), SEUIL_AVMAXETU), min(arr(CHENF4 * TX_DPAEAV / 100), SEUIL_AVMAXETU)]) - ANG3) * 1 - is_positive(V_CR2 + IPVLOC) * is_positive(ANG3) * is_positive(IMPIM3)
RESINEUV2 = arr(arr(ACODIN / 9) * TX20 / 100) + arr(arr(ACODIJ / 9) * TX18 / 100) + arr(arr(ACODIV / 9) * TX18 / 100)
ILILOYNET = positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * max(0, TAXLOYCUM - PTAXLOY - PPCAPNETNEG) + 1 - positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * 0
TTSNNV = is_positive(TTSV) * arr(TTSV * TTSBNV + BPCOSAV + GLDGRATV / TEXTSV) + 1 - is_positive(TTSV) * TTSV
REPCELHLM = sum([RIVCELHLM1, RIVCELHLM2, RIVCELHLM3, RIVCELHLM4, RIVCELHLM5, RIVCELHLM6, RIVCELHLM7]) + RIVCELHLM8
TRPQPALIM1M = inf(TGLPALIM1M / PENSALNBP1)
BNCCREAV = BNCCRV + BNCCRFV
NINVRETPW = max(min(INVOMRETPW, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR), 0) * 1 - V_CNR
ZIG_REMPLACE = is_positive(1 - is_positive(20 - V_NOTRAIT) * is_positive(V_ANREV - V_0AX) * is_positive(V_ANREV - V_0AZ) * is_positive(V_ANREV - V_0AY) + is_positive(V_NOTRAIT - 20)) * LIG2
LIGREPRI = is_positive(REPRI) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
NINVRETQL = max(min(INVLGAUTRE, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS), 0) * 1 - V_CNR
XDFV = X10MINSV
RPRESCOMP = arr(BPRESCOMP * TX_PRESCOMP / 100) * 1 - V_CNR
SOMMEA874 = sum([present(TSHALLO1) + present(ALLO1) + present(PRBR1) + present(PALI1) + present(PENIN1), present(TSHALLO2) + present(ALLO2) + present(PRBR2) + present(PALI2) + present(PENIN2), present(TSHALLO3) + present(ALLO3) + present(PRBR3) + present(PALI3) + present(PENIN3), present(TSHALLO4) + present(ALLO4) + present(PRBR4) + present(PALI4) + present(PENIN4), present(TSHALLOV) + present(ALLOV) + present(PRBRV) + present(PALIV) + present(PENINV), present(TSHALLOC) + present(ALLOC) + present(PRBRC) + present(PALIC) + present(PENINC)]) + present(CARTSV) + present(CARTSC) + present(CARTSP1) + present(CARTSP2) + present(CARTSP3) + present(CARTSP4) + present(CARTSNBAV) + present(CARTSNBAC) + present(CARTSNBAP1) + present(CARTSNBAP2) + present(CARTSNBAP3) + present(CARTSNBAP4) + present(REMPLAV) + present(REMPLAC) + present(REMPLAP1) + present(REMPLAP2) + present(REMPLAP3) + present(REMPLAP4) + present(REMPLANBV) + present(REMPLANBC) + present(REMPLANBP1) + present(REMPLANBP2) + present(REMPLANBP3) + present(REMPLANBP4) + present(CARPEV) + present(CARPEC) + present(CARPEP1) + present(CARPEP2) + present(CARPEP3) + present(CARPEP4) + present(CARPENBAV) + present(CARPENBAC) + present(CARPENBAP1) + present(CARPENBAP2) + present(CARPENBAP3) + present(CARPENBAP4) + present(PENSALV) + present(PENSALC) + present(PENSALP1) + present(PENSALP2) + present(PENSALP3) + present(PENSALP4) + present(PENSALNBV) + present(PENSALNBC) + present(PENSALNBP1) + present(PENSALNBP2) + present(PENSALNBP3) + present(PENSALNBP4) + sum([sum([present(BICNOV) + sum([present(BICDNV)]), present(BIHNOV) + sum([present(BIHDNV)])]) + sum([present(BI1AV)]), sum([present(BICNOC) + sum([present(BICDNC)]), present(BIHNOC) + sum([present(BIHDNC)])]) + sum([present(BI1AC)]), sum([present(BICNOP) + sum([present(BICDNP)]), present(BIHNOP) + sum([present(BIHDNP)])]) + sum([present(BI1AP)])]) + present(CODRAZ) + present(CODRBZ) + present(CODRCZ) + present(CODRDZ) + present(CODREZ) + present(CODRFZ) + present(RVB1) + present(RVB2) + present(RVB3) + present(RVB4) + present(RENTAX) + present(RENTAX5) + present(RENTAX6) + present(RENTAX7) + present(RENTAXNB) + present(RENTAXNB5) + present(RENTAXNB6) + present(RENTAXNB7) + present(RCMABD) + present(RCMHAD) + present(REGPRIV) + present(RCMIMPAT) + present(REVACT) + present(DISQUO) + present(RESTUC) + present(REVACTNB) + present(DISQUONB) + present(RESTUCNB) + present(COD2FA) + present(RCMHAB) + present(INTERE) + present(MIBVENV) + present(MIBPRESV) + present(MIB1AV) + present(MIBDEV) + present(MIBVENC) + present(MIBPRESC) + present(MIB1AC) + present(MIBDEC) + present(MIBVENP) + present(MIBPRESP) + present(MIB1AP) + present(MIBDEP) + present(LOCPROCGAV) + present(LOCDEFPROCGAV) + present(LOCPROCGAC) + present(LOCDEFPROCGAC) + present(LOCPROCGAP) + present(LOCDEFPROCGAP) + present(LOCPROV) + present(LOCDEFPROV) + present(LOCPROC) + present(LOCDEFPROC) + present(LOCPROP) + present(LOCDEFPROP) + present(BICREV) + present(LOCNPCGAV) + present(LOCGITCV) + present(BI2AV) + present(BICDEV) + present(LOCDEFNPCGAV) + present(BICREC) + present(LOCNPCGAC) + present(LOCGITCC) + present(BI2AC) + present(BICDEC) + present(LOCDEFNPCGAC) + present(BICREP) + present(LOCNPCGAPAC) + present(LOCGITCP) + present(BI2AP) + present(BICDEP) + present(LOCDEFNPCGAPAC) + present(BICHREV) + present(LOCNPV) + present(LOCGITHCV) + present(BICHDEV) + present(LOCDEFNPV) + present(BICHREC) + present(LOCNPC) + present(LOCGITHCC) + present(BICHDEC) + present(LOCDEFNPC) + present(BICHREP) + present(LOCNPPAC) + present(LOCGITHCP) + present(BICHDEP) + present(LOCDEFNPPAC) + present(MIBMEUV) + present(MIBGITEV) + present(LOCGITV) + present(MIBNPVENV) + present(MIBNPPRESV) + present(MIBNP1AV) + present(MIBNPDEV) + present(MIBMEUC) + present(MIBGITEC) + present(LOCGITC) + present(MIBNPVENC) + present(MIBNPPRESC) + present(MIBNP1AC) + present(MIBNPDEC) + present(MIBMEUP) + present(MIBGITEP) + present(LOCGITP) + present(MIBNPVENP) + present(MIBNPPRESP) + present(MIBNP1AP) + present(MIBNPDEP) + present(BNCREV) + present(BN1AV) + present(BNCDEV) + present(BNCREC) + present(BN1AC) + present(BNCDEC) + present(BNCREP) + present(BN1AP) + present(BNCDEP) + present(BNHREV) + present(BNHDEV) + present(BNHREC) + present(BNHDEC) + present(BNHREP) + present(BNHDEP) + present(BNCPROV) + present(BNCPRO1AV) + present(BNCPRODEV) + present(BNCPROC) + present(BNCPRO1AC) + present(BNCPRODEC) + present(BNCPROP) + present(BNCPRO1AP) + present(BNCPRODEP) + present(BNCNPV) + present(BNCNP1AV) + present(BNCNPDEV) + present(BNCNPC) + present(BNCNP1AC) + present(BNCNPDEC) + present(BNCNPP) + present(BNCNP1AP) + present(BNCNPDEP) + present(BNCAABV) + present(ANOCEP) + present(INVENTV) + present(PVINVE) + present(BNCAADV) + present(DNOCEP) + present(BNCAABC) + present(ANOVEP) + present(INVENTC) + present(PVINCE) + present(BNCAADC) + present(DNOCEPC) + present(BNCAABP) + present(ANOPEP) + present(INVENTP) + present(PVINPE) + present(BNCAADP) + present(DNOCEPP)
XTSNT1 = XEXTS1 - XFPT1
PERPBNCMNP = PERP_BOOL * BNCPROEXP + max(0, BNCPROP + AUTOBNCP - max(arr(BNCPROP + AUTOBNCP * SPETXAB / 100), MIN_SPEBNC)) + BNCPROPVP - BNCPMVCTP
# TODO BINNV
RCELREP_HZ = is_positive(CELREPHZ) * arr(ACELREPHZ * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RLOC47 = max(min(INVRETPO * 1 - INDPLAF + INVRETPOA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46])), 0) * 1 - V_CNR
TIND_102 = positif_ou_nul(T10MINS2 - TFRD2 + COD1DE)
INVRETAPRA = min(NINVRETAPR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA - INVRETAQRA - INVRETAVRA - INVRETBBRA - INVRETAKRA)) * 1 - V_CNR
LIGREPBE = is_positive(REPBE) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
INVRETOZ = min(NINVRETOZ, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY)) * 1 - V_CNR
TPMIB_AVV = min(MIBVENV + AUTOBICVV, max(MIN_MBIC, arr(MIBVENV + AUTOBICVV * TX_MIBVEN / 100)))
RRCELLC = max(0, CELRREDLC - RCELRREDLC) * is_positive(CELRREDLC) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NINVRETQK = max(min(INVLOGSOC, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU), 0) * 1 - V_CNR
RPERPV = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE) * max(0, min(PERP_COTV, PERPPLATVANT) + RACCOTV) + is_positive(PERPIMPATRIE) * max(0, min(PERP_COTV, PERPPLAFIMPV) + RACCOTV) + is_positive(PERP_COND1) * min(PERP_COTV, PERPPLAFMUTV) + RACCOTV + is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE) * max(0, min(PERP_COTV, PERPPLATVANT) + RACCOTV) + is_positive(PERPIMPATRIE) * max(0, min(PERP_COTV, PERPPLAFIMPV) + RACCOTV)
TGLF2M = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENF2 / TOTALQUO) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFVM - TGLFCM - TGLF1M
IPQRVO71 = ZIPQRVO71 * RENTAXNB7
# TODO CRDEG
NOCEPV = ANOCEP - DNOCEP + BNCAABV - BNCAADV
INVRETQWR = min(max(min(arr(INVRETQW * 13 / 7), NINVRETQW - INVRETQW), NINVRETQW - INVRETQW), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR)) * 1 - V_CNR
XBINPC = BICNPHEXC + BICNPEXC
IPQFC1 = ZIPQFC1 * COTFC
PPE_SALAVDEFV = TSHALLOV + BPCOSAV + GLD1V + GLD2V + GLD3V + TSASSUV + CARTSV * is_positive(CARTSNBAV) + CODDAJ + CODEAJ + SALEXTV + GLDGRATV
PPETX2 = PPE_TX2
REPAJ = max(0, CODHAJ - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW - CODHBE - CODHAE)) * 1 - ART1731BIS + max(0, CODHAJ - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW - CODHBE - CODHAE)) * ART1731BIS * 1 - V_CNR
NINVRETSQ = max(min(CODHSQ, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL), 0) * 1 - V_CNR
SOMMEA858 = SOMMEA881 + present(TSHALLOV) + present(TSHALLOC) + present(TSASSUV) + present(TSASSUC) + present(RFMIC) + present(RFORDI) + present(RFDORD) + present(RFDHIS)
REPLOCIE4 = arr(arr(ACODIE / 9) * TX18 / 100)
XBISV = is_positive(max(0, XBICNETV + max(0, XBICNPNETV))) * BI2AV + BI1AV
BAQP = BAEP + BAEMP
XFPTC = XDFC * XIND_10C + FRDC * 1 - XIND_10C
RCELREPGS = max(0, RCELREPGS_1 * 1 - ART1731BIS + min(RCELREPGS_1, max(RCELREPGS_P + RCELREPGSP2, RCELREPGS1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIGBASERD = is_positive(BRDS + V_RDANT)
TAUX4 = TX_BAR4 - TX_BAR3
LIGDEFBICNPF = is_positive(DEFBICNPF) * DEFRIBIC * 1 - PREM8_11
LIMDPAE = LIM_PENSALENF
LIGREPPN = is_positive(REPPN) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
INVRETSJ = NINVRETSJ * 1 - V_CNR
INVRETALR = min(arr(INVRETAL * 5 / 3), NINVRETAL - INVRETAL) * 1 - null(1 - abs(arr(INVRETAL * 5 / 3) - NINVRETAL - INVRETAL)) + NINVRETAL - INVRETAL * null(1 - abs(arr(INVRETAL * 5 / 3) - NINVRETAL - INVRETAL)) * 1 - V_CNR
ARESINEUV_1 = arr(ACODIL / 9) + arr(ACODIN / 9) + arr(ACODIJ / 9) + arr(ACODIV / 9)
CHRBASE_INR = arr(max(IHAUTREVT - CHR9YI + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT + TAXLOY), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
# TODO DLMRN3
INVRETKG = min(arr(NINVRETKG * TX35 / 100), PLAF_INVDOM) * 1 - V_CNR
TERPQTS3 = RPQTS3 * 1 - is_positive(INDTEFF) + TRPQTS3 * is_positive(INDTEFF)
PPETOTMAY = arr(PPETOT * 81 / 100) * positif_ou_nul(arr(PPETOT * 81 / 100) - PPELIMTOT) * null(7 - V_REGCO)
NPLOCNETTSC = NPLOCCGASC + NPLOCSC + MIBNETNPVLSC + MIB_NETNPPLC
RCOMP_1 = max(min(RFC, RRI1 - RLOGDOM - RCREAT), 0)
ABICPDECC = AUTOBICVC + AUTOBICPC
IPQRWA5 = ZIPQRWA5 * CODNWA
ZIPQTSREMPANTC1 = is_positive(sum([TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * arr(IQUOTOTANT1 * TERPQTSREMPC / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANT1TOT - ZIPQTSREMPANTV1
INVRETKHR = min(max(min(arr(INVRETKH * 13 / 7), NINVRETKH - INVRETKH), NINVRETKH - INVRETKH), max(0, PLAF_INVDOM1 - INVRETKGR)) * 1 - V_CNR
RLOC35 = max(min(INVRETQPR * 1 - INDPLAF + INVRETQPRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34])), 0) * 1 - V_CNR
NINVRETRVR = NINVRETRV - arr(NINVRETRV * TX375 / 100) * 1 - V_CNR
RSETOT = RSE1 + RSE2 + RSE3 + RSE4 + RSE5
IPQTSC1 = ZIPQTSC1 * CARTSNBAC
TTSNN2 = is_positive(TTS2) * arr(TTS2 * TTSBN2 / TEXTS2) + 1 - is_positive(TTS2) * TTS2
LIGREPLOCIH = is_positive(REPMEUIH) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BA13UXI = arr(BASE7UXI * TX18 / 100)
IPQPRRANTZ31 = ZIPQPRRANTZ31 * CODNEZ
RRESIMEUB_1 = max(min(RETRESIMEUB, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA), 0)
ZIPQRCMTS5 = is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQRCMTSM / TETONEQUOM1) + 1 - is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCMDC5 - ZIPQRCMFU5 - ZIPQRCMCH5 - ZIPQRCMTR5 - ZIPQRCMGO5
IPQFANT11 = ZIPQFANT11 * COTF1
INVRETPJA = min(arr(NINVRETPJ * TX375 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA)) * 1 - V_CNR
REPPS = max(0, INVOMRETPS - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN)) * 1 - ART1731BIS + max(0, INVOMRETPS - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN)) * ART1731BIS * 1 - V_CNR
ZIGMONTCS = is_positive(BCSG + V_CSANT)
PRR1 = arr(PRN1 * PRB1 / EXPR1)
REV4TVC = GLN4V + GLN4C
RENT27 = max(min(INVRETALR * 1 - INDPLAF + INVRETALRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26])), 0) * 1 - V_CNR
ACELREPYK = CELREPYK * 1 - ART1731BIS + min(CELREPYF, max(ACELREPYK_P + ACELREPYKP2, ACELREPYK1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NINVRETRW = max(min(INVOMENTRW, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR), 0) * 1 - V_CNR
TRPQRCMGOM = inf(TGLRCMGOM / RESTUCNB)
ZIPQRVO65 = is_positive(TEGLRVO7M + TEGLTSTOTM + TEGLTSREMPTOTM) * arr(IQUOTOT5 * TERPQRVO6M / TETONEQUOM1) + 1 - is_positive(TEGLRVO7M + TEGLTSTOTM + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5 - ZIPQRVO55 - ZIPQPRRZ5TOT
INVRETPIR = min(arr(INVRETPI * 10 / 9), NINVRETPI - INVRETPI) * 1 - null(1 - abs(arr(INVRETPI * 10 / 9) - NINVRETPI - INVRETPI)) + NINVRETPI - INVRETPI * null(1 - abs(arr(INVRETPI * 10 / 9) - NINVRETPI - INVRETPI)) * 1 - V_CNR
# TODO BINNP
RIVCELNQ4 = arr(min(CELLIERNQ, LIMCELLIER) * is_positive(CELLIERNQ) * TX40 / 100) - 4 * RIVCELNQ1 * 1 - V_CNR
ARESTIMO_1 = RESTIMOD + RESTIMOB + RESTIMOC + RESTIMOF + RESTIMOA + RESTIMOE + RESTIMOY + RESTIMOX * 1 - V_CNR
# TODO NAPCRPAVIM
REVQUOQHT = max(0, TOTALQUOHT - SDD - SDC - SDV - SDM)
MIB_APC = min(MIB_TPRESC, max(MIN_MBIC, arr(MIB_TPRESC * TX_MIBPRES / 100)))
TXSPEHP = max(0, arr(BNHREP + XHONOP - BNHDEP * 1 - is_positive(ART1731BIS) * MAJREV)) + min(0, BNHREP + XHONOP - BNHDEP * 1 - is_positive(ART1731BIS))
PERPNONSALV = PERPBANV + PERPBICMNV + PERPBICPNV + PERPBNCMNV + PERPBNCPNV
BITTAC = BITAC + BI12AC
XBICNPNETP = XBICNPHDP - min(BICDEP, BICDEP1731 + 0) * is_positive(ART1731BIS) + BICDEP * 1 - ART1731BIS
INVRETNWA = min(NINVRETNW, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA)) * 1 - V_CNR
DCELREPGT = CELREPGT
CHRREEL2 = max(0, REVKIREHR - LIMHR2 * 1 + BOOL_0AM * TXHR2 / 100)
REPFORSIN3 = positif_ou_nul(REPSINFOR + VARD + REPSINFOR1 + REPFOR1 + REPSINFOR2 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * REPSINFOR3 + 1 - positif_ou_nul(REPSINFOR + VARD + REPSINFOR1 + REPFOR1 + REPSINFOR2 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, REPSINFOR3 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - REPSINFOR - VARD - REPSINFOR1 - REPFOR1 - REPSINFOR2)) * 1 - V_CNR
TRPQF3M = inf(TGLF3M / COTF3)
ITRED = min(RED, IDOM11 - DEC11)
NINVRETQS = max(min(INVOMSOCQS, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ), 0) * 1 - V_CNR
RLOG01 = max(min(INVLOG2008, RRI1), 0) * 1 - V_CNR
PERPPLAFCOMP = is_positive(PERPIMPATRIE) * PERPPLAFP * 3 + 1 - is_positive(PERPIMPATRIE) * 0
ABGL1C = is_positive(GLD1C) * is_positive(GLD2C + GLD3C) * arr(REP10C * GLD1C / TSBC) + 1 - is_positive(GLD2C + GLD3C) * max(0, REP10C - ABTSC - ABDOMDBJ - ABDOMEBJ) + 0
RCODIN_1 = max(min(RETCODIN, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RCODIL), 0)
LIGDEFBA3 = is_positive(DEFBA3) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
INDCOLVN = is_positive(BCVNSAL) * is_positive(PCVN + COD8YT) * 1 - INDCTX
LIGREPDON = is_positive(REPDONR + REPDONR1 + REPDONR2 + REPDONR3 + REPDONR4) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TPRB3 = PRBR3 + PALI3 + PENIN3
INVRETAL = min(arr(NINVRETAL * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG)) * 1 - V_CNR
ZIGINT1 = is_positive(RETRSE1) * LIG2
DPERPC = PERP_COTC + RACCOTC
DCELHM = CELLIERHM
PRQPC = CARPEP1 + PEBF1 + CARPEP2 + PEBF2 + CARPEP3 + PEBF3 + CARPEP4 + PEBF4
ISFDEC = arr(17500 - TX_TR5_ISF / 10000 * ISFBASE * is_positive(ISFBASE - LIM_ISFINF) * is_positive(LIM_ISFDEC - ISFBASE)) * is_positive(ISF1)
RCELREPHA_1 = max(min(ACELREPHA, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REPAW = max(0, CODHAW - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR)) * 1 - ART1731BIS + max(0, CODHAW - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR)) * ART1731BIS * 1 - V_CNR
LIGREPST = is_positive(REPST) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
IPQPRRV2 = ZIPQPRRV2 * CARPENBAV
TERPQRCMTR = RPQRCMTR * 1 - is_positive(INDTEFF) + TRPQRCMTR * is_positive(INDTEFF)
BITAV = BIPTAV + BINTAV
INVRETRBRA = min(NINVRETRBR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA)) * 1 - V_CNR
AGARD = BRFG * 1 - V_CNR
PERPBANC = FEXC + BAFC + BAFPVC + BAEXC + BACREC - BACDEC * 1 - is_positive(ART1731BIS) + BAHEXC + BAHREC - BAHDEC * 1 - is_positive(ART1731BIS) + BAPERPC + _4BACREC + _4BAHREC + BAFORESTC + BANOCGAC
ZIPQTSREMP45 = IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQTS5TOT - ZIPQTSREMPV5 - ZIPQTSREMPC5 - ZIPQTSREMP15 - ZIPQTSREMP25 - ZIPQTSREMP35
TGLPRR2M = is_positive(TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR22 / TOTALQUO) + 1 - is_positive(TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M
INVRETSURA = min(NINVRETSUR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA)) * 1 - V_CNR
TRPQPRRZV = inf(TGLPRRZV / CODNAZ)
RDRCM1NEG = min(0, RDRCM1)
TSNREP = REMPLAP3 - ABTSREP
DREPNPRO = INVREPNPRO
DRESINEUV = LOCRESINEUV + MEUBLENP + INVNPROF1 + INVNPROF2
IS016 = arr(DS016 * NB1)
TOTCORSE = CIINVCORSE + IPREPCORSE + CICORSENOW
DEFBAHREP = is_positive(_4BAHREP) * arr(BAHDEP * 1 - is_positive(ART1731BIS * PREM8_11) * BAHREP / BARSREVP) + 1 - is_positive(_4BAHREP) * BAHDEP * 1 - is_positive(ART1731BIS * PREM8_11)
RCELFD_1 = max(min(RCEL_FD, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1 - RCEL_1 - RCELJP_1 - RCELJBGL_1 - RCELJOQR_1 - RCEL2012_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ADO31 = ABADON31 * 1 - is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)) + ABATOT31 * is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ))
ABTS1EJ = arr(REP103 * TSHALLO3 / TSB3)
LIGREDYT = LIG98B * is_positive(RIDEFRI) * LIG1 * LIG2
_10MINS4 = max(min(TSB4, DEDMIN4), DFN4)
RLOG09 = max(min(INVRETQL * 1 - INDPLAF + INVRETQLA * INDPLAF, RRI1 - RLOG01 - RLOG02 - RLOG03 - RLOG04 - RLOG05 - RLOG06 - RLOG07 - RLOG08), 0) * 1 - V_CNR
NRCELRREDLN = max(min(CELRREDLN, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM])), 0)
ACODIL = min(PLAF_RESINEUV, MEUBLENP) * 1 - V_CNR
BCEL_JP = arr(min(CELLIERJP + 0, LIMCELLIER) / 5)
TPRR4 = arr(TPRN4 * PRB4 / TEXPR4) + arr(TPRN4 * COD1FH / TEXPR4)
BADCRE = min(CREAIDE, min(LIM_AIDOMI * 1 - is_positive(PREMAIDE) + LIM_PREMAIDE * is_positive(PREMAIDE) + MAJSALDOM * positif_ou_nul(V_ANREV - V_0DA - 65) + positif_ou_nul(V_ANREV - V_0DB - 65) * BOOL_0AM + V_0CF + V_0DJ + V_0DN + V_0CH + V_0DP / 2, LIM_AIDOMI3 * 1 - is_positive(PREMAIDE) + LIM_PREMAIDE2 * is_positive(PREMAIDE)) * 1 - is_positive(INAIDE + 0) + LIM_AIDOMI2 * is_positive(INAIDE + 0))
INVRETPUA = min(NINVRETPU, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA)) * 1 - V_CNR
LIGILMJS = is_positive(DILMJS) * LIG1 * LIG2
NINVRETALR = NINVRETAL - arr(NINVRETAL * TX375 / 100) * 1 - V_CNR
TEGLTSREMP3M = GLTSREMP3M * 1 - is_positive(INDTEFF) + TGLTSREMP3M * is_positive(INDTEFF)
INVRETAAA = min(arr(NINVRETAA * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA)) * 1 - V_CNR
ZIPQPALIM5TOT = sum([ZIPQPALIMV5, ZIPQPALIMC5, ZIPQPALIM15, ZIPQPALIM25, ZIPQPALIM35, ZIPQPALIM45])
TTSNGL1C = GLD1C - TABGL1C
TPR3 = TSN3 + PRN3
TTPS10C = arr(TTSBC * TX_DEDFORFTS / 100)
ANCSDED2 = V_ANCSDED * 1 - null(933 - V_ROLCSG) + V_ANCSDED + 1 * null(933 - V_ROLCSG) * is_positive(V_ROLCSG + 0) + V_ANCSDED * 1 - is_positive(V_ROLCSG + 0)
LIGELURASC = is_positive(ELURASC) * LIG1 * LIG2
RSOC31 = arr(max(min(INVRETRA * 1 - INDPLAF + INVRETRAA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30])), 0)) * 1 - V_CNR
LIGCIGARD = is_positive(DGARD) * LIG1 * LIG2
BSNCC = max(0, min(REPSNON, LIM_SOCNOUV2 * 1 + BOOL_0AM - BSNCL - BSNCM - BSNCN))
ACELREPHH = CELREPHH * 1 - ART1731BIS + min(CELREPHH, max(ACELREPHH_P + ACELREPHHP2, ACELREPHH1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BRSE4 = PENECS + COD8SB * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
LIGNIDB = null(IDOM11 - DEC11) * is_positive(SEUIL_61 - TAXASSUR - IPCAPTAXTOT - TAXLOY - CHRAPRES) * is_positive(SEUIL_61 - NAPCRP) * is_positive(TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES + NAPCRP) * null(IRNETBIS) * 1 - is_positive(IRESTIT) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - is_positive(LIG80F) * 1 - is_positive(LIG400RI) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(NRINET) * 1 - is_positive(IMPRET) * 1 - null(V_REGCO - 2) * LIG2
# TODO NMAJRSE51
DENPLOCV = LOCNPCGAV + LOCGITCV - LOCDEFNPCGAV + LOCNPV + LOCGITHCV - LOCDEFNPV
RSN_CN = BSNCN * TX18 / 100
LIG10C = positif_ou_nul(TSBNC + PRBC + BPCOSAC + GLDGRATC + is_positive(F10AC * null(TSBNC + PRBC + BPCOSAC + GLDGRATC)))
IMETRO4 = arr(ID14 * EXO1 * REVMETRO / RG)
NINVRETQKR = NINVRETQK - arr(NINVRETQK * TX35 / 100) * 1 - V_CNR
PIND_10V = positif_ou_nul(P10MINSV - FRDV + COD1AE)
TDFN4 = min(PLAF_DEDFORFTS, TTPS104)
NRCODJU = max(min(RETCODJU, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA - NRRESIMEUB - NRRESIMEUB - NRRESINEUV - NRLOCIDEFG), 0)
PPE_BOOL_NADAC = min(1, is_positive(TSHALLOC + 0) * null(PPETPC + 0) * null(PPENHC + 0) + is_positive(SALEXTC + 0) * null(PPETPC + 0) * null(PPEXTC + 0))
CS_REVCS = RDNP
LIGRRCEL12 = is_positive(RRCELMH) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
NINVRETOR = max(min(INVOMLOGOR, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ), 0) * 1 - V_CNR
RLOC73 = max(min(INVRETRY * 1 - INDPLAF + INVRETRYA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72])), 0) * 1 - V_CNR
XTSNV = is_positive(XTSNTV) * min(0, XTSNTV) + positif_ou_nul(XTSNTV) * XTSNTV
TEGLFC = GLFC * 1 - is_positive(INDTEFF) + TGLFC * is_positive(INDTEFF)
RLOC28 = max(min(INVRETPE * 1 - INDPLAF + INVRETPEA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27])), 0) * 1 - V_CNR
ZIPQRVO61 = is_positive(TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * arr(IQUOTOT1 * TERPQRVO6 / TETONEQUO1) + 1 - is_positive(TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQRVO1 - ZIPQRVO51 - ZIPQPRRZ1TOT
REPLOCNT = REPMEUJS
APPIMP = positif_ou_nul(APPREST) * CREAPP - APPREST
LIGLOCRES = is_positive(REPINVRES) * LIG1
RSOC32 = arr(max(min(INVRETRB * 1 - INDPLAF + INVRETRBA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31])), 0)) * 1 - V_CNR
# TODO IND_NI
TTS2 = TTSN2
RRESTIMOB = max(min(RESTIMOB * TX36 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMOD), 0)
TEGLPRRV = GLPRRV * 1 - is_positive(INDTEFF) + TGLPRRV * is_positive(INDTEFF)
LIGRESIREP = is_positive(REPMEUIZ + REPRESINEUV + REPMEUPC + REPLNPX) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PERPBICMNC = TPMIB_NETPC + TPMIB_NETVC + MIBEXC + MIBPVC - BICPMVCTC
LIGINRHAUT = is_positive(RETHAUTREV)
DILMJX = LOCMEUBJX
RBG2TEFRFR = RBGTEFRFR - max(0, min(RBGTEFRFR, DDCSG))
TEGLPRRZ4M = GLPRRZ4M * 1 - is_positive(INDTEFF) + TGLPRRZ4M * is_positive(INDTEFF)
GLN1V = max(GLD1V - ABGL1V, 0) * INDEFTSV
BSNCU = max(0, min(PETIPRISE, LIM_SOCNOUV2 * 1 + BOOL_0AM - BSNCL - BSNCM - BSNCN - BSNCC))
NRCELREPGX = max(min(ACELREPGX, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU])), 0)
TRPQPALIM2 = inf(TGLPALIM2 / PENSALNBP2)
# TODO REPAR2
PSBASE_INR = max(0, PRS - PRSPROV - PS9YP)
TGLTOT = sum([TGL1, TGL2, TGL3, TGL4]) + TGLRVG + TGLRWB + TGLRWA
LIGBASRET = is_positive(present(IMPRET) + present(BASRET)) * LIG1 * LIG2
TTSN1FJ = TSHALLO4 - TABTS1FJ
ZIGREGV = is_positive(BREGV) * LIG2
R2FA = max(0, COD2FA)
LIGPERPMAR = is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFC) * 1 - is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
DFRCMN = DFRCMNBIS * 1 - is_positive(ART1731BIS) + RCMFR - RCMFRART1731 * is_positive(ART1731BIS)
INVRETQX = min(arr(NINVRETQX * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW)) * 1 - V_CNR
CGLOA = arr(BGLOA * TX075 / 100) * 1 - is_positive(ANNUL2042)
PRSE2 = PTORSE2
TRPQF3 = inf(TGLF3 / COTF3)
RSNCM = max(0, min(RSN_CM, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL))
PLAF2MGR = null(5 - V_REGCO) * arr(30220 + 3205.5 * min(NBPT - 1 * 4, 2) * is_positive(NBPT - 1) + 3056 * min(NBPT - 1.5 * 4, 2) * is_positive(NBPT - 1.5) + 2299 * NBPT - 2 * 4 * is_positive(NBPT - 2))
LIG25012 = 1 - is_positive(IND_REV) * null(2 - V_REGCO) * LIG2
REPPH = max(0, INVOMRETPH - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA - INVOMRETPE - INVOMRETPI - INVIMP - INVDIR2009 - INVOMRETPD)) * 1 - ART1731BIS + max(0, INVOMRETPH - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA - INVOMRETPE - INVOMRETPI - INVIMP - INVDIR2009 - INVOMRETPD)) * ART1731BIS * 1 - V_CNR
TERPQPRRZ1 = RPQPRRZ1 * 1 - is_positive(INDTEFF) + TRPQPRRZ1 * is_positive(INDTEFF)
DGLOD = is_positive(CSREC + V_GLOANT) * arr(BGLOA - COD8YL / 0.075 * TX051 / 100) * 1 - is_positive(present(RE168) + present(TAX1649)) * is_positive(NAPCR61)
RED = RCOTFOR + RSURV + RCOMP + RHEBE + RREPA + RDIFAGRI + RDONS + RDUFLOTOT + RPINELTOT + RCELTOT + RRESTIMO * 1 - V_INDTEO + V_RRESTIMOXY * V_INDTEO + RFIPC + RFIPDOM + RAIDE + RNOUV + RPLAFREPME4 + RTOURREP + RTOUREPA + RTOUHOTR + RLOGDOM + RLOGSOC + RDOMSOC1 + RLOCENT + RCOLENT + RRETU + RINNO + RRPRESCOMP + RFOR + RSOUFIP + RRIRENOV + RSOCREPR + RRESIMEUB + RRESINEUV + RRESIVIEU + RCODOU + RLOCIDEFG + RCODJT + RCODJU + RREDMEUB + RREDREP + RILMIX + RILMIY + RINVRED + RILMIH + RILMJC + RILMIZ + RILMJI + RILMJS + RMEUBLE + RPROREP + RREPNPRO + RREPMEU + RILMIC + RILMIB + RILMIA + RILMJY + RILMJX + RILMJW + RILMJV + RILMOA + RILMOB + RILMOC + RILMOD + RILMOE + RILMPA + RILMPB + RILMPC + RILMPD + RILMPE + RIDOMPROE3 + RPATNAT1 + RPATNAT2 + RPATNAT3 + RPATNAT + RFORET + RCREAT + RCINE
TRPQF1M = inf(TGLF1M / COTF1)
TSPETOTV = BNCPROV + AUTOBNCV + BNCNPV
INVRETUB = min(NINVRETUB, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ - INVRETUA)) * 1 - V_CNR
PPE_RPROP = is_positive(PPE_RPRO1P) * arr(1 + PPETXRPRO / 100 * PPE_RPRO1P) + 1 - is_positive(PPE_RPRO1P) * arr(PPE_RPRO1P * 1 - PPETXRPRO / 100)
CIGLOTOT = COD8XF + COD8XG + COD8XH
ACELRREDMH = CELRREDMH * 1 - ART1731BIS + min(CELRREDMH, max(ACELRREDMH_P + ACELRREDMHP2, ACELRREDMH1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGISF9269 = 1 - is_positive(LIGISFRET + LIGNMAJISF1) * 1 - is_positive(SEUIL_12 - ISFNAP) * INDIS26
XEXOCET = sum([XEXOCETV, XEXOCETC])
TEGLPRR4 = GLPRR4 * 1 - is_positive(INDTEFF) + TGLPRR4 * is_positive(INDTEFF)
LIG1510YT = is_positive(null(max(0, RMOND + DEFZU - DMOND)) + null(max(0, IPTEFP + DEFZU - IPTEFN))) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * is_positive(DEFRIMOND) * LIG1 * LIG2
IQUOTOT1 = IN51 - IN01
RFCPI = arr(BFCPI_1 * TX_FCPI / 100)
INVRETQC = NINVRETQC * 1 - V_CNR
GLRCMTOTM = GLRCMDCM + GLRCMFUM + GLRCMCHM + GLRCMGOM + GLRCMTRM + GLRCMTSM
ZIG_CONTRIBPROV_A = is_positive(PRSPROV_A + CSGIM_A + CRDSIM_A) * LIG2
ZIG_CTRIPROV = is_positive(COD8YT + PRSPROV + CSGIM + CRDSIM) * LIG2
TABTS1FJ = arr(TREP104 * TSHALLO4 / TTSB4)
GARREST = is_positive(REST) * max(0, min(CIGARD, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND))
RNGRFRHR = null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * IPVLOC + 1 - null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * RBLRFRHR
RCEL_COM_R = is_positive(CELLIERNP + CELLIERNT) * arr(ACELCOM_R * TX36 / 100) + is_positive(CELLIERNR + CELLIERNS) * arr(ACELCOM_R * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGCREPROSP = is_positive(CREPROSP) * LIG1 * LIG2
CS_BPCOS = RDNCP
ZIPQ12 = is_positive(sum([TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQ1 / TETONEQUO1) + 1 - is_positive(sum([TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQRWB2 - ZIPQRWA2 - ZIPQRVG2
RISFPMEI = max(min(RISFPMEI_2, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED), 0) * is_positive(1 - null(CODE_2042 - 8) * 1 - null(CMAJ_ISF - 8) * 1 - null(CMAJ_ISF - 34)) + max(min(RISFPMEI_2, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED), 0) * 1 - is_positive(1 - null(CODE_2042 - 8) * 1 - null(CMAJ_ISF - 8) * 1 - null(CMAJ_ISF - 34)) * COD9ZA
RINNO = max(0, RINNO_1 * 1 - ART1731BIS + min(RINNO_1, max(RINNO_P + RINNOP2, RINNO1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETSHA = min(NINVRETSH, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA)) * 1 - V_CNR
INVRETOX = min(NINVRETOX, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG)) * 1 - V_CNR
# TODO MAJTXRSE51
REPDOMSOC2 = REPQJ + REPQS + REPQW + REPQX
INVRETRD = min(arr(NINVRETRD * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA - INVRETRB - INVRETRC)) * 1 - V_CNR
LIGNMRS = LIGIINETC * 1 - is_positive(V_ANTRE - V_NONRESTANT)
RCODIG_1 = max(min(RETCODIG, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV - RCODIE - RCODIF), 0)
ACODIM = min(PLAF_RESINEUV, RESIVIEU) * 1 - V_CNR
LIGREPPAK = is_positive(REPPA + REPRK) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TABTSRBJ = is_positive(REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * arr(TREP10C * CARTSC / TTSBC) + 1 - is_positive(REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * max(0, TREP10C - TABTS1BJ - TABTS1BC - TABTS1BP - TABTS3VK - TABTS1UT)
TRPQPRR4M = inf(TGLPRR4M / CARPENBAP4)
RLOG06 = max(min(INVOMLOGOL, RRI1 - RLOG01 - RLOG02 - RLOG03 - RLOG04 - RLOG05), 0) * 1 - V_CNR
NRTOUREPA = max(min(arr(ATOUREPA * TX_REDIL20 / 100), RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL - NRPIQABCD - NRNOUV - NRPLAFPME - NRFOR - NRTOURREP - NRTOUHOTR), 0)
PRR2ZV = is_positive(PEBFV + PENSALV) * arr(PRNV * CODRAZ / EXPRV) + 1 - is_positive(PEBFV + PENSALV) * PRNV - PRRV - PRR2V
REPNATR1 = max(PATNAT1 - RPATNAT1, 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IPQPALIMV2 = ZIPQPALIMV2 * PENSALNBV
_2REGPRIVM = arr(RESTUC * MAJREV)
TERPQTSREMPVM = RPQTSREMPVM * 1 - is_positive(INDTEFF) + TRPQTSREMPVM * is_positive(INDTEFF)
IPQTSREMPC2 = ZIPQTSREMPC2 * REMPLANBC
NINVRETQP = max(min(INVRETRO2, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU), 0) * 1 - V_CNR
LIG3750 = present(V_ZDC) * null(abs(V_ZDC - 1)) * is_positive(IREST) * LIG1
ZIPQTSREMPANTV1 = is_positive(sum([TEGLTSREMPC, TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * arr(IQUOTOTANT1 * TERPQTSREMPV / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMPC, TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANT1TOT
LIG023 = sum([_3TSN1, _3TSN2, _3TSN3, _3TSN4])
RPQTSCM = inf(GLTSCM / CARTSNBAC)
INVRETPP = min(NINVRETPP, max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA)) * 1 - V_CNR
SOMMEA538PP = present(BAF1AP) + present(BA1AP) + present(MIB1AP) + present(BI1AP) + present(MIBNP1AP) + present(BI2AP) + present(BNCPRO1AP) + present(BN1AP) + present(BNCNP1AP) + present(PVINPE)
TSN1BJ = TSHALLOC - ABTS1BJ
GLPRRZV = is_positive(PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2ZV / TOTALQUOHT) + 1 - is_positive(PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4
_2PRB3 = CARPEP3 + PENSALP3 + CODREZ
LIGRCELHLM = is_positive(RIVCELHLM1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
RCELREPYJ_1 = max(min(ACELREPYJ, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
AILMOD = DILMOD * 1 - V_CNR
TERPQRVO = RPQRVO * 1 - is_positive(INDTEFF) + TRPQRVO * is_positive(INDTEFF)
NBPOTE = V_0CF + V_0CH + V_0CR + V_0DJ + V_0DN + V_0DP
ZIPQF22 = is_positive(sum([TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQF2 / TETONEQUO1) + 1 - is_positive(sum([TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - sum([ZIPQF12, ZIPQFV2, ZIPQFC2])
ACELHM = BCEL_HM * 1 - ART1731BIS + min(BCEL_HM, max(ACELHM_P + ACELHMP2, ACELHM1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELLIERHM) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INVRETQJR = min(max(min(arr(INVRETQJ * 13 / 7), NINVRETQJ - INVRETQJ), NINVRETQJ - INVRETQJ), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR)) * 1 - V_CNR
IRE = 1 - is_positive(RE168 + TAX1649 + 0) * CIDIREPARGNE + EPAV + CRICH + CICORSENOW + CIGE + CIDEVDUR + CITEC + IPELUS + CICA + CIGARD + CISYND + CIPRETUD + CIADCRE + CIHABPRIN + CREFAM + CREAPP + CREAGRIBIO + CREPROSP + CRESINTER + CREFORMCHENT + CREINTERESSE + CREARTS + CICONGAGRI + CRERESTAU + CILOYIMP + AUTOVERSLIB + PPETOTX - PPERSA + CI2CK + CIFORET + CIEXCEDENT + COD8TL * 1 - is_positive(RE168 + TAX1649)
LIGCIGLO = is_positive(present(COD8XF) + present(COD8XG) + present(COD8XH)) * LIG1 * LIG2
BFCPI_1 = is_positive(BOOL_0AM) * min(FCPI, PLAF_FCPI * 2) + is_positive(1 - BOOL_0AM) * min(FCPI, PLAF_FCPI) * 1 - V_CNR
TERPQTS2 = RPQTS2 * 1 - is_positive(INDTEFF) + TRPQTS2 * is_positive(INDTEFF)
AILMJC = DILMJC * 1 - ART1731BIS + min(DILMJC, max(AILMJC_P + AILMJCP2, AILMJC1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
MIBNETNPPLF = sum([MIB_NETNPPLV, MIB_NETNPPLC, MIB_NETNPPLP])
PERPPLAFNUP3ANT = present(PERPPLAFNUP3) * PERPPLAFNUP3 + 1 - present(PERPPLAFNUP3) * V_BTPERPNUP3
SPEBASABP = SPETOTP
NRCELREPGT = max(min(ACELREPGT, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX])), 0)
# TODO F10BP
XETSNNV = arr(is_positive(XTSNV) * XTSNV * XETRANV / XEXTSV) * XIND_10V + 1 - XIND_10V * XETRANV
RESINEUV1 = arr(arr(ACODIN / 9) * TX20 / 100) + arr(arr(ACODIJ / 9) * TX18 / 100) + arr(arr(ACODIV / 9) * TX18 / 100)
PTPS10C = arr(PERPSALC * TX_DEDFORFTS / 100)
PPE_BOOL_MAXU = positif_ou_nul(PPELIMRPH - PPE_RCONTPU)
X10MINSC = max(min(XTSBC, DEDMINC), XDFNC)
RLOG08 = max(min(INVOMLOGOS, RRI1 - RLOG01 - RLOG02 - RLOG03 - RLOG04 - RLOG05 - RLOG06 - RLOG07), 0) * 1 - V_CNR
NAPT = NAPTEMPCX - TOTIRPSANT
ZIGRE168 = is_positive(RE168) * 1 - V_CNR * LIG2
BARAV = BACREV + _4BACREV - BACDEV * 1 - is_positive(ART1731BIS * PREM8_11)
CAPBASE_I = IPCAPTAXT * is_positive(IAMD1 + 1 - SEUIL_61)
ILITOTPSNET = max(0, NAPCR61 - TOTPENCS)
LIGISFPMED = is_positive(ISFPMEDI) * 1 - is_positive(ANNUL2042) * 1 - null(5 - V_IND_TRAIT) * LIGISF + present(ISFPMEDI) * is_positive(DISFBASE) * 1 - is_positive(ANNUL2042) * null(5 - V_IND_TRAIT)
REPAQ = max(0, CODHAQ - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL)) * 1 - ART1731BIS + max(0, CODHAQ - max(0, RLOCENT - CODHAB - CODHAG - CODHAL)) * ART1731BIS * 1 - V_CNR
AISFDONF = arr(ISFDONF * TX75 / 100)
INVRETLI = min(arr(NINVRETLI * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH)) * 1 - V_CNR
RLOC61 = max(min(INVRETPP * 1 - INDPLAF + INVRETPPA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60])), 0) * 1 - V_CNR
NINVRETOT = max(min(INVOMLOGOT, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR), 0) * 1 - V_CNR
LIGCOD3SG = is_positive(COD3SG) * LIG1 * LIG2
GLTSC = is_positive(TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2TSC / TOTALQUOHT) + 1 - is_positive(TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV
TRPQTSREMP1 = inf(TGLTSREMP1 / REMPLANBP1)
RBGRFR = 1 - is_positive(RGRFR + R1649 + PREREV - DAR) * min(0, RGRFR + R1649 + PREREV - DAR + TOTALQUO) + is_positive(RGRFR + R1649 + PREREV - DAR) * RGRFR + R1649 + PREREV - DAR * 1 - is_positive(ART1731BIS) + 1 - is_positive(RGRFR + R1649 + PREREV - DAR - DFANTIMPU) * min(0, RGRFR + R1649 + PREREV - DAR - DFANTIMPU + TOTALQUO) + is_positive(RGRFR + R1649 + PREREV - DAR - DFANTIMPU) * RGRFR + R1649 + PREREV - DAR - DFANTIMPU * is_positive(ART1731BIS)
IQUOEAJ2 = max(0, IPQ1002 - IQUODAJ2 - IQUORAJ2)
RC1INI = is_positive(NAPINI + 1 - SEUIL_12)
TTSN1EC = max(0, SALEXT3 - COD1ED) - TABTS1EC
# TODO PPESALVTOT
PPE_HAUTE = PPELIMRPH * 1 - BOOL_0AM + PPELIMRPH * BOOL_0AM * null(INDMONO) * positif_ou_nul(PPE_RCONTPV - PPELIMRPB) * positif_ou_nul(PPE_RCONTPC - PPELIMRPB) + PPELIMRPH2 * INDMONO
ZIPQPALIM32 = is_positive(TEGLPALIM4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPALIM3 / TETONEQUO1) + 1 - is_positive(TEGLPALIM4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - sum([ZIPQPALIMV2, ZIPQPALIMC2, ZIPQPALIM12, ZIPQPALIM22])
LIGABIMPPV = is_positive(ABIMPPV) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIG_BASE = is_positive(BCSG + BRDS + BPRS + BCVNSAL + V_CSANT + V_RDANT + V_PSANT + V_CVNANT) * LIG2
REPPR = max(0, INVOMRETPR - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW)) * 1 - ART1731BIS + max(0, INVOMRETPR - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW)) * ART1731BIS * 1 - V_CNR
DFIPC = FIPCORSE
DCELRREDLN = CELRREDLN
RLOG11 = max(min(INVRETQD * 1 - INDPLAF + INVRETQDA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10])), 0) * 1 - V_CNR
NRFOR = max(min(RFOREST, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL - NRPIQABCD - NRNOUV - NRPLAFPME), 0)
DEDMIN3 = is_positive(DETS3) * MIN_DEMEMPLOI + 1 - is_positive(DETS3) * MIN_DEDSFORFTS
RNAVC = RAVC - TABAVC
GLTSREMP2M = is_positive(TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2REMP2 / TOTALQUOHT) + 1 - is_positive(TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM - GLTSREMPCM - GLTSREMP1M
DILMPB = COD7PB
INVRETTD = NINVRETTD * 1 - V_CNR
RPQ4TVC = arr(GL4TVC / DIVGL4) + 0
LIGISFDEGR = null(2 - is_positive(SEUIL_8 - ISFDEGR) + positif_ou_nul(ISF5 - SEUIL_12)) + null(V_ANTISF) * INDCTX23 * null(5 - V_IND_TRAIT) * 1 - is_positive(ANNUL2042)
TBICPROVC = max(0, arr(TMIB_ABVC * AUTOBICVC / MIBVENC + AUTOBICVC + TMIB_ABPC * AUTOBICPC / MIBPRESC + AUTOBICPC))
TSBNP = TSHALLOP + ALLOP
TOTALQUOHT = 1 - is_positive(IPVLOC) * REVQTOTQHT
LIGCI2CK = is_positive(COD2CK) * LIG1 * LIG2
ANG3 = IAD32 - IAD31
LIGREPPX = is_positive(REPPX) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
# TODO REPAR5
RIVCELHLM6 = RIVCELHLM1
ZIPQRWA5 = is_positive(TEGLRVG + sum([TEGL1M, TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQRWAM / TETONEQUOM1) + 1 - is_positive(TEGLRVG + sum([TEGL1M, TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7 - ZIPQRWB5
TEFFBENEFTOT = TSPENET + TXSPENET + TMIBNETVF + TMIBNETNPVF + TMIBNETPF + TMIBNETNPPF * 1 - is_positive(VARIPTEFP * is_positive(ART1731BIS) + IPTEFP * 1 - ART1731BIS + VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS + IPMOND)
RLOC78 = max(min(INVRETRLR * 1 - INDPLAF + INVRETRLRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77])), 0) * 1 - V_CNR
ZIPQRCMDCANT1 = is_positive(TEGLRCMFU + TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQRCMDC / TETONEQUO1) + 1 - is_positive(TEGLRCMFU + TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT
ZIPQPRRANT31 = is_positive(TEGLPRR4 + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPRR3 / TETONEQUO1) + 1 - is_positive(TEGLPRR4 + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTV1 - ZIPQPRRANTC1 - ZIPQPRRANT11 - ZIPQPRRANT21
PFPTC = max(PFRDC, P10MINSC)
LIGMBDREPNPV = is_positive(MIBDREPNPV) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
PLOCC = min(0, LOCPROC - LOCDEFPROC * 1 - is_positive(ART1731BIS * PREM8_11)) * positif_ou_nul(LOCDEFPROC * 1 - is_positive(ART1731BIS * PREM8_11) - LOCPROC) + arr(max(0, LOCPROC - LOCDEFPROC * 1 - is_positive(ART1731BIS * PREM8_11)) * MAJREV) * is_positive(LOCPROC - LOCDEFPROC * 1 - is_positive(ART1731BIS * PREM8_11))
REPAK = max(0, CODHAK - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF)) * 1 - ART1731BIS + max(0, CODHAK - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF)) * ART1731BIS * 1 - V_CNR
REPNW = max(0, INVOMENTNW - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW)) * 1 - ART1731BIS + max(0, INVOMENTNW - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW)) * ART1731BIS * 1 - V_CNR
P2GE = max(PLAF_GE2 * 1 + BOOL_0AM + PLAF_GE2_PACQAR * V_0CH + V_0DP + PLAF_GE2_PAC * V_0CR + V_0CF + V_0DJ + V_0DN - BTANTGECUM, 0)
# TODO CSTOT
TGATASAC = BPCOSAC + GLDGRATC
RRESINEUV7 = arr(arr(ACODIL / 9) * TX20 / 100)
LIGBNCMV = is_positive(BNCPMVCTV + BNCPMVCTC + BNCPMVCTP) * 1 - null(4 - V_REGCO) * LIG0
LIGCELLF = is_positive(DCELRREDLF) * LIG1 * LIG2
INVRETAGRA = min(NINVRETAGR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA - INVRETSGRA - INVRETSARA - INVRETSFRA - INVRETABRA)) * 1 - V_CNR
RDSNAC = RDSCAC - CIRDSAC
INVRETPS = min(arr(NINVRETPS * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN)) * 1 - V_CNR
LIG109 = is_positive(IPSOUR + REGCI + LIGPVETR + LIGCULTURE + LIGMECENAT + LIGCORSE + LIG2305 + LIGEMPLOI + LIGCI2CK + LIGCICAP + LIGCI8XV + LIGCIGLO + LIGREGCI + LIGBPLIB + LIGCIGE + LIGDEVDUR + LIGCICA + LIGCIGARD + LIG82 + LIGPRETUD + LIGSALDOM + LIGCIFORET + LIGHABPRIN + LIGCREFAM + LIGCREAPP + LIGCREBIO + LIGPRESINT + LIGCREPROSP + LIGINTER + LIGRESTAU + LIGCONGA + LIGMETART + LIGCREFORM + LIGLOYIMP + LIGVERSLIB + LIGCITEC + INDLIGPPE) * LIG1 * LIG2
LIGPPEHV = positif_ou_nul(1820 - PPENBHV) * present(PPENBHV) * INDPPEV * is_positive(INDLIGPPE) * LIG0 * LIG2
TEGLRFTOTM = TEGLRF1M + TEGLRF2M
RCELREPGL = max(0, RCELREPGL_1 * 1 - ART1731BIS + min(RCELREPGL_1, max(RCELREPGL_P + RCELREPGLP2, RCELREPGL1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PRQCJ = CARPEC + PEBFC
RCEL_JBGL = is_positive(CELLIERJB) * arr(ACELJBGL * TX22 / 100) + is_positive(CELLIERJG) * arr(ACELJBGL * TX13 / 100) + is_positive(CELLIERJL) * arr(ACELJBGL * TX36 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REPPD = max(0, INVOMRETPD - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA - INVOMRETPE - INVOMRETPI - INVIMP - INVDIR2009)) * 1 - ART1731BIS + max(0, INVOMRETPD - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA - INVOMRETPE - INVOMRETPI - INVIMP - INVDIR2009)) * ART1731BIS * 1 - V_CNR
AHEBE = BAH * 1 - ART1731BIS + min(BAH, max(AHEBE_P + AHEBEP2, AHEBE1731 + 0) * 1 - PREM8_11) * ART1731BIS
IND_MIN3 = 1 - is_positive(IND_10MIN_03)
BNCNPTOT = SPENETPF + SPENETNPF
XBICNPHDP = BICNPEXP + BICREP
NPLOCCGASV = arr(NPLOCCGAV * LOCNPCGAV / LOCNPCGAV + LOCGITCV) * present(LOCNPCGAV) + min(0, NPLOCCGAV) * 1 - present(LOCNPCGAV)
DCELFABC = CELLIERFA + CELLIERFB + CELLIERFC
RFON = arr(RFCG * RFORDI / RFCD)
ZIGDCSGD3 = ZIG_CSGD99 * null(ANCSDED2 - V_ANREV + 3) * LIG2
XTSN3 = is_positive(XTSNT3) * min(0, XTSNT3) + positif_ou_nul(XTSNT3) * XTSNT3
NINVRETOG = max(min(CODHOG, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF), 0) * 1 - V_CNR
NPLOCCGANSV = NPLOCCGAV - NPLOCCGASV
PRR2Z4 = is_positive(PEBF4 + PENSALP4) * arr(PRN4 * CODRFZ / EXPR4) + 1 - is_positive(PEBF4 + PENSALP4) * PRN4 - PRR4 - PRR24
EAC = V_0CF + V_0DJ
LIGLOGDOM = is_positive(DLOGDOM) * LIG1 * LIG2
TABTS1FC = is_positive(ALLO4 + CARTSP4 + REMPLAP4) * arr(TREP104 * max(0, SALEXT4 - COD1FD) / TTSB4) + 1 - is_positive(ALLO4 + CARTSP4 + REMPLAP4) * max(0, TREP104 - TABTS1FJ)
RREDMEUB = max(0, RREDMEUB_1 * 1 - ART1731BIS + min(RREDMEUB_1, max(RREDMEUB_P + RREDMEUBP2, RREDMEUB1731 + 0) * 1 - PREM8_11) * ART1731BIS)
TMOY = inf(IPQ5 / max(0, RB05 + TONEQUOM) * 10000) / 100 * V_CR2
NINVRETQI = max(min(INVDIR2009, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETQO - NINVRETQF - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETQR), 0) * 1 - V_CNR
TSPEABPV = arr(TSPEABV * BNCPROV + AUTOBNCV / TSPETOTV)
DENPLOCP = LOCNPCGAPAC + LOCGITCP - LOCDEFNPCGAPAC + LOCNPPAC + LOCGITHCP - LOCDEFNPPAC
SPENETNPCT = BNCNPPVV + BNCNPPVC + BNCNPPVP - BNCNPDCT
LIGPATNAT4 = LIG1 * LIG2 * is_positive(PATNAT4) + null(PATNAT4) * is_positive(V_NOTRAIT - 20)
ABTSRDP = max(0, REP102 - ABTS1DJ + ABTS1DP + ABTSRDJ) + 0
REPDOMENTR3 = REPQE + REPQV + REPQP + REPQG + REPQO + REPQF + REPQR + REPQI + REPPB + REPPF + REPPJ + REPPA + REPPE + REPPI + REPPD + REPPH + REPPL
LIGTXMOYNEG = is_positive(DMOND) * 1 - is_positive(DEFRIMOND) * LIG1 * LIG2
NINVRETRC = max(min(CODHRC, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA - NINVRETRB), 0) * 1 - V_CNR
REPMEUPA = DILMPA - RILMPA * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RPQRCMDCM = inf(GLRCMDCM / REVACTNB)
INVRETSPA = min(arr(NINVRETSP * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA)) * 1 - V_CNR
IND_MIN1 = 1 - is_positive(IND_10MIN_01)
SOMMEA860 = present(BICEXV) + present(BICNOV) + present(BI1AV) + present(BICDNV) + present(BICEXC) + present(BICNOC) + present(BI1AC) + present(BICDNC) + present(BICEXP) + present(BICNOP) + present(BI1AP) + present(BICDNP) + present(BIHEXV) + present(BIHNOV) + present(BIHDNV) + present(BIHEXC) + present(BIHNOC) + present(BIHDNC) + present(BIHEXP) + present(BIHNOP) + present(BIHDNP) + present(BNCEXV) + present(BNCREV) + present(BN1AV) + present(BNCDEV) + present(BNCEXC) + present(BNCREC) + present(BN1AC) + present(BNCDEC) + present(BNCEXP) + present(BNCREP) + present(BN1AP) + present(BNCDEP) + present(BNHEXV) + present(BNHREV) + present(BNHDEV) + present(BNHEXC) + present(BNHREC) + present(BNHDEC) + present(BNHEXP) + present(BNHREP) + present(BNHDEP)
TTSN1CP = ALLO1 - TABTS1CP
LIG1500YT = is_positive(is_positive(IPMOND) * is_positive(present(IPTEFP) + is_positive(VARIPTEFP) * present(DEFZU)) + is_positive(INDTEFF) * is_positive(TEFFREVTOT)) * is_positive(is_positive(max(0, IPTEFP + DEFZU - IPTEFN)) + is_positive(max(0, RMOND + DEFZU - DMOND))) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * is_positive(DEFRIMOND) * LIG1 * LIG2
REPSOC = INVSOCNRET + INVOMSOCKH + INVOMSOCKI + INVSOC2010 + INVOMSOCQU + INVLOGSOC + INVOMSOCQJ + INVOMSOCQS + INVOMSOCQW + INVOMSOCQX + CODHRA + CODHRB + CODHRC + CODHRD + CODHXA + CODHXB + CODHXC + CODHXE
RCELREPYG = max(0, RCELREPYG_1 * 1 - ART1731BIS + min(RCELREPYG_1, max(RCELREPYG_P + RCELREPYGP2, RCELREPYG1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
APR3 = IND_APB3 * ABPR3 + 1 - IND_APB3 * min(ABPR3, PL_PB - 1 - IND_APBV * APRV - 1 - IND_APBC * APRC - 1 - IND_APB1 * APR1 - 1 - IND_APB2 * APR2)
INVRETKSA = min(NINVRETKS, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA)) * 1 - V_CNR
RB51 = max(0, RB01 + TETONEQUO1)
RCELREPHS_1 = max(min(RCELREP_HS, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IPQPALIM35 = ZIPQPALIM35 * PENSALNBP3
TSNC = is_positive(TSNTC) * min(0, TSNTC + PRNNC) + positif_ou_nul(TSNTC) * TSNTC
DEC12 = min(max(arr(SEUIL_DECOTE1 * 1 - BOOL_0AM + SEUIL_DECOTE2 * BOOL_0AM - IDOM12), 0), IDOM12) * 1 - V_ANC_BAR + min(max(arr(SEUIL_DECOTEA / 2 - IDOM12 / 2), 0), IDOM12) * V_ANC_BAR * 1 - V_CNR
LIGELURAS = is_positive(ELURASV) * LIG1 * LIG2
AGV = V_ANREV - V_0DA * min(1, V_0DA)
LIGCREFAM = is_positive(CREFAM) * LIG1 * LIG2
LIGREPLOCIX = is_positive(REPMEUIX) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TPMIB_APC = min(MIBPRESC + AUTOBICPC, max(MIN_MBIC, arr(MIBPRESC + AUTOBICPC * TX_MIBPRES / 100)))
REPMEUJX = DILMJX - RILMJX * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INVRETSJA = min(NINVRETSJ, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA)) * 1 - V_CNR
TRPQTSREMP3 = inf(TGLTSREMP3 / REMPLANBP3)
BRSE1 = SALECS * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
RLOG14 = max(min(INVRETOI * 1 - INDPLAF + INVRETOIA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13])), 0) * 1 - V_CNR
ZIGRSE3 = is_positive(BRSE3) * LIG2
LIGTXNEGYT = 1 - is_positive(LIGTXPOSYT) * positif_ou_nul(DMOND - RMOND - DEFZU) * is_positive(IPTXMO) * is_positive(DEFRIMOND) * LIG1 * LIG2
BAFORC = arr(BAFC * MAJREV) + BAFORESTC + BAFPVC
PDEDMINP = is_positive(DETS1) * MIN_DEMEMPLOI + 1 - is_positive(DETS1) * MIN_DEDSFORFTS
ACELREPGJ = CELREPGJ * 1 - ART1731BIS + min(CELREPGJ, max(ACELREPGJ_P + ACELREPGJP2, ACELREPGJ1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
DFRCM3 = DEFRCM4 * is_positive(DFRCMN) + DEFRCM4 * is_positive(DEFRCM + DEFRCM2 + DEFRCM3 - RCM_I) * 1 - is_positive(DFRCMN) + max(0, DEFRCM4 - RCM_I - DEFRCM) * positif_ou_nul(RCM_I - DEFRCM - DEFRCM2 - DEFRCM3) * 1 - is_positive(DFRCMN) * 1 - is_positive(ART1731BIS) + min(DEFRCM4, REPRCM - REPRCMBIS - DFRCM5 - DFRCM4) * is_positive(ART1731BIS * 1 - PREM8_11) + DEFRCM4 * is_positive(ART1731BIS * PREM8_11)
MIB_AVV = min(MIB_TVENV, max(MIN_MBIC, arr(MIB_TVENV * TX_MIBVEN / 100)))
BPRESCOMP = RDPRESREPORT + 1 - is_positive(RDPRESREPORT + 0) * arr(1 - present(SUBSTITRENTE) * arr(null(PRESCOMP2000 - PRESCOMPJUGE) * min(PLAFPRESCOMP, PRESCOMP2000) + is_positive(PRESCOMPJUGE - PRESCOMP2000) * positif_ou_nul(PLAFPRESCOMP - PRESCOMPJUGE) * PRESCOMP2000 + is_positive(PRESCOMPJUGE - PRESCOMP2000) * 1 - positif_ou_nul(PLAFPRESCOMP - PRESCOMPJUGE) * PLAFPRESCOMP * PRESCOMP2000 / PRESCOMPJUGE) + present(SUBSTITRENTE) * arr(null(PRESCOMP2000 - SUBSTITRENTE) * positif_ou_nul(PLAFPRESCOMP - PRESCOMPJUGE) * SUBSTITRENTE + is_positive(PRESCOMPJUGE - PLAFPRESCOMP) * arr(PLAFPRESCOMP * SUBSTITRENTE / PRESCOMPJUGE) + is_positive(SUBSTITRENTE - PRESCOMP2000) * positif_ou_nul(PLAFPRESCOMP - PRESCOMPJUGE) * PRESCOMP2000 + is_positive(PRESCOMPJUGE - PLAFPRESCOMP) * arr(PLAFPRESCOMP * SUBSTITRENTE / PRESCOMPJUGE * PRESCOMP2000 / SUBSTITRENTE))) * 1 - V_CNR
NRTOUHOTR = max(min(RIHOTR, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL - NRPIQABCD - NRNOUV - NRPLAFPME - NRFOR - NRTOURREP), 0) * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO))
LIGCELHX = is_positive(DCELREPHX) * LIG1 * LIG2
ILIIRNET = positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * max(0, IRCUM - PIR) + 1 - positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * TOTIRCUM - RECUMIR - TOTPENIR
REPPJ = max(0, INVOMRETPJ - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF)) * 1 - ART1731BIS + max(0, INVOMRETPJ - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF)) * ART1731BIS * 1 - V_CNR
TRPQ4VC = arr(TGL4VC / DIVGL4) + 0
TEGLPRRZCM = GLPRRZCM * 1 - is_positive(INDTEFF) + TGLPRRZCM * is_positive(INDTEFF)
IPQPRRANTC1 = ZIPQPRRANTC1 * CARPENBAC
SOMMEA719 = present(BAEXV) + present(BACREV) + present(_4BACREV) + present(BA1AV) + present(BACDEV) + present(BAEXC) + present(BACREC) + present(_4BACREC) + present(BA1AC) + present(BACDEC) + present(BAEXP) + present(BACREP) + present(_4BACREP) + present(BA1AP) + present(BACDEP) + present(BAHEXV) + present(BAHREV) + present(_4BAHREV) + present(BAHDEV) + present(BAHEXC) + present(BAHREC) + present(_4BAHREC) + present(BAHDEC) + present(BAHEXP) + present(BAHREP) + present(_4BAHREP) + present(BAHDEP) + present(BICEXV) + present(BICNOV) + present(LOCPROCGAV) + present(BI1AV) + present(BICDNV) + present(LOCDEFPROCGAV) + present(BICEXC) + present(BICNOC) + present(LOCPROCGAC) + present(BI1AC) + present(BICDNC) + present(LOCDEFPROCGAC) + present(BICEXP) + present(BICNOP) + present(LOCPROCGAP) + present(BI1AP) + present(BICDNP) + present(LOCDEFPROCGAP) + present(BIHEXV) + present(BIHNOV) + present(LOCPROV) + present(BIHDNV) + present(LOCDEFPROV) + present(BIHEXC) + present(BIHNOC) + present(LOCPROC) + present(BIHDNC) + present(LOCDEFPROC) + present(BIHEXP) + present(BIHNOP) + present(LOCPROP) + present(BIHDNP) + present(LOCDEFPROP) + present(BICNPEXV) + present(BICREV) + present(LOCNPCGAV) + present(BI2AV) + present(BICDEV) + present(LOCDEFNPCGAV) + present(BICNPEXC) + present(BICREC) + present(LOCNPCGAC) + present(BI2AC) + present(BICDEC) + present(LOCDEFNPCGAC) + present(BICNPEXP) + present(BICREP) + present(LOCNPCGAPAC) + present(BI2AP) + present(BICDEP) + present(LOCDEFNPCGAPAC) + present(BICNPHEXV) + present(BICHREV) + present(LOCNPV) + present(BICHDEV) + present(LOCDEFNPV) + present(BICNPHEXC) + present(BICHREC) + present(LOCNPC) + present(BICHDEC) + present(LOCDEFNPC) + present(BICNPHEXP) + present(BICHREP) + present(LOCNPPAC) + present(BICHDEP) + present(LOCDEFNPPAC) + present(BNCEXV) + present(BNCREV) + present(BN1AV) + present(BNCDEV) + present(BNCEXC) + present(BNCREC) + present(BN1AC) + present(BNCDEC) + present(BNCEXP) + present(BNCREP) + present(BN1AP) + present(BNCDEP) + present(BNHEXV) + present(BNHREV) + present(BNHDEV) + present(BNHEXC) + present(BNHREC) + present(BNHDEC) + present(BNHEXP) + present(BNHREP) + present(BNHDEP) + present(XHONOAAV) + present(XHONOV) + present(XHONOAAC) + present(XHONOC) + present(XHONOAAP) + present(XHONOP) + present(BNCNPREXAAV) + present(BNCAABV) + present(BNCAADV) + present(BNCNPREXV) + present(ANOCEP) + present(DNOCEP) + present(PVINVE) + present(INVENTV) + present(BNCNPREXAAC) + present(BNCAABC) + present(BNCAADC) + present(BNCNPREXC) + present(ANOVEP) + present(DNOCEPC) + present(PVINCE) + present(INVENTC) + present(BNCNPREXAAP) + present(BNCAABP) + present(BNCAADP) + present(BNCNPREXP) + present(ANOPEP) + present(DNOCEPP) + present(PVINPE) + present(INVENTP) + 0
INVRETSA = min(arr(NINVRETSA * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA)) * 1 - V_CNR
ZIG_DEGINF61 = is_positive(V_CSANT + V_RDANT + V_PSANT + 0) * is_positive(CRDEG + 0) * is_positive(SEUIL_61 - TOTCRA - CSNET - RDNET - PRSNET - CDISNET + 0) * 1 - null(CSTOT + 0) * LIG2
RPQPRRZ3M = inf(GLPRRZ3M / CODNEZ)
TRPQPRRCM = inf(TGLPRRCM / CARPENBAC)
ABPRC = arr(1 - IND_APBC * min(APBC, PL_PB * APBC / sum([APBV * 1 - IND_APBV, APBC * 1 - IND_APBC, APB1 * 1 - IND_APB1, APB2 * 1 - IND_APB2, APB3 * 1 - IND_APB3, APB4 * 1 - IND_APB4])) + IND_APBC * APBC)
IPQTS12 = ZIPQTS12 * CARTSNBAP1
ZIPQPRR41 = is_positive(sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPRR4 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRV1 - ZIPQPRRC1 - ZIPQPRR11 - ZIPQPRR21 - ZIPQPRR31
TDFN2 = min(PLAF_DEDFORFTS, TTPS102)
INVRETBARA = min(NINVRETBAR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA - INVRETAQRA - INVRETAVRA - INVRETBBRA - INVRETAKRA - INVRETAPRA - INVRETAURA)) * 1 - V_CNR
LIGREPPM = is_positive(REPPM) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TEFFREV = INDTEFF * TBICPF + TBICNPF + TBNN + BIHTAV + BIHTAC + BIHTAP + BIPTAV + BIPTAC + BIPTAP + ESFP + TTSPR + RCM + PLOCNETF + NPLOCNETF + RFNTEO * V_INDTEO + RRFI * 1 - V_INDTEO + BPVRCM + PVTAXSB + PVIMPOS * null(1 - FLAG_EXIT) + COD3VE + PVIMPOS + PVSURSI * null(2 - FLAG_EXIT) + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + R1649
# TODO BNCC
RCELRREDLF = max(0, RCELRREDLF_1 * 1 - ART1731BIS + min(RCELRREDLF_1, max(RCELRREDLF_P + RCELRREDLFP2, RCELRREDLF1731 + 0) * 1 - PREM8_11) * ART1731BIS)
GLTS1M = is_positive(TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2TS1 / TOTALQUOHT) + 1 - is_positive(TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM - GLTSCM
TABGL1C = is_positive(GLD1C) * is_positive(GLD2C + GLD3C) * arr(TREP10C * GLD1C / TTSBC) + 1 - is_positive(GLD2C + GLD3C) * max(0, TREP10C - TABTSC - TABDOMDBJ - TABDOMEBJ) + 0
RLOC85 = max(min(INVRETRKR * 1 - INDPLAF + INVRETRKRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84])), 0) * 1 - V_CNR
LIGREPRM = is_positive(REPRM) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
PERPPLAFCOMC = is_positive(PERPIMPATRIE) * PERPPLAFC * 3 + 1 - is_positive(PERPIMPATRIE) * 0
NINVRETON = max(min(INVOMLOGON, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM), 0) * 1 - V_CNR
NINVRETXE = max(min(CODHXE, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA - NINVRETRB - NINVRETRC - NINVRETRD - NINVRETXA - NINVRETXB - NINVRETXC), 0) * 1 - V_CNR
NINVRETSAR = NINVRETSA - arr(NINVRETSA * TX4737 / 100) * 1 - V_CNR
PPETOT = is_positive(sum([PPENARPRIME1, PPENARPRIME2, PPENARPRIME3, PPENARPRIME4, PPENARPRIMEV, PPENARPRIMEC, PPENARPRIMEU, PPENARPRIMEN]) + PPEPRIMETTE + PPEMAJORETTE + 0 + sum([1 - is_positive(PPELIMRPH - PPE_RCONTP1 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN1 * PPE_BOOL_MAX1, 1 - is_positive(PPELIMRPH - PPE_RCONTP2 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN2 * PPE_BOOL_MAX2, 1 - is_positive(PPELIMRPH - PPE_RCONTP3 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN3 * PPE_BOOL_MAX3, 1 - is_positive(PPELIMRPH - PPE_RCONTP4 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN4 * PPE_BOOL_MAX4, 1 - is_positive(PPELIMRPH - PPE_RCONTPV - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINV * PPE_BOOL_MAXV, 1 - is_positive(PPELIMRPH - PPE_RCONTPC - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINC * PPE_BOOL_MAXC, 1 - is_positive(PPELIMRPH - PPE_RCONTPU - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINU * PPE_BOOL_MAXU, 1 - is_positive(PPELIMRPH - PPE_RCONTPN - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINN * PPE_BOOL_MAXN]) + sum([1 - is_positive(PPELIMRPH2 - PPE_RCONTP1 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN1 * PPE_BOOL_MAX1, 1 - is_positive(PPELIMRPH2 - PPE_RCONTP2 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN2 * PPE_BOOL_MAX2, 1 - is_positive(PPELIMRPH2 - PPE_RCONTP3 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN3 * PPE_BOOL_MAX3, 1 - is_positive(PPELIMRPH2 - PPE_RCONTP4 - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN4 * PPE_BOOL_MAX4, 1 - is_positive(PPELIMRPH2 - PPE_RCONTPV - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINV * PPE_BOOL_MAXV, 1 - is_positive(PPELIMRPH2 - PPE_RCONTPC - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINC * PPE_BOOL_MAXC, 1 - is_positive(PPELIMRPH2 - PPE_RCONTPU - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINU * PPE_BOOL_MAXU, 1 - is_positive(PPELIMRPH2 - PPE_RCONTPN - 10) * PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINN * PPE_BOOL_MAXN])) * max(0, arr(sum([PPEPRIME1, PPEPRIME2, PPEPRIME3, PPEPRIME4, PPEPRIMEV, PPEPRIMEC, PPEPRIMEU, PPEPRIMEN]) + PPEPRIMETTE + PPEMAJORETTE)) * positif_ou_nul(arr(sum([PPEPRIME1, PPEPRIME2, PPEPRIME3, PPEPRIME4, PPEPRIMEV, PPEPRIMEC, PPEPRIMEU, PPEPRIMEN]) + PPEPRIMETTE + PPEMAJORETTE - PPELIMTOT)) * 1 - is_positive(V_PPEISF + PPEISFPIR + PPEREVPRO) * 1 - is_positive(RE168 + TAX1649) * 1 - null(7 - PPENEXOV) * 1 - null(11 - PPENEXOV) * 1 - null(7 - PPENEXOC) * 1 - null(11 - PPENEXOC) * 1 - null(7 - PPENEXO1) * 1 - null(11 - PPENEXO1) * 1 - null(7 - PPENEXO2) * 1 - null(11 - PPENEXO2) * 1 - null(7 - PPENEXO3) * 1 - null(11 - PPENEXO3) * 1 - null(7 - PPENEXO4) * 1 - null(11 - PPENEXO4) * 1 - null(2 - PPEPEXOV) * 1 - null(2 - PPEPEXOC) * 1 - null(2 - PPEPEXO1) * 1 - null(2 - PPEPEXO2) * 1 - null(2 - PPEPEXO3) * 1 - null(2 - PPEPEXO4) * 1 - V_CNR
IPQTS15 = ZIPQTS15 * CARTSNBAP1
RSOC4 = arr(max(min(INVRETXE * 1 - INDPLAF + INVRETXEA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1 - RSOC2 - RSOC3), 0)) * 1 - V_CNR
NINVRETAR = max(min(CODHAR, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM), 0) * 1 - V_CNR
TEGLRVO6M = GLRVO6M * 1 - is_positive(INDTEFF) + TGLRVO6M * is_positive(INDTEFF)
SOMMEA090 = sum([TSHALLOV + ALLOV + DETSV + FRNV + PRBRV + PALIV, TSHALLOC + ALLOC + DETSC + FRNC + PRBRC + PALIC, TSHALLO1 + ALLO1 + DETS1 + FRN1 + PRBR1 + PALI1, TSHALLO2 + ALLO2 + DETS2 + FRN2 + PRBR2 + PALI2, TSHALLO3 + ALLO3 + DETS3 + FRN3 + PRBR3 + PALI3, TSHALLO4 + ALLO4 + DETS4 + FRN4 + PRBR4 + PALI4]) + sum([CARTSV + REMPLAV + PEBFV + CARPEV + PENSALV, CARTSC + REMPLAC + PEBFC + CARPEC + PENSALC]) + sum([CARTSP1 + REMPLAP1 + PEBF1 + CARPEP1 + PENSALP1 + RVB1, CARTSP2 + REMPLAP2 + PEBF2 + CARPEP2 + PENSALP2 + RVB2, CARTSP3 + REMPLAP3 + PEBF3 + CARPEP3 + PENSALP3 + RVB3, CARTSP4 + REMPLAP4 + PEBF4 + CARPEP4 + PENSALP4 + RVB4]) + sum([GLD1V + GLD1C, GLD2V + GLD2C, GLD3V + GLD3C]) + RENTAX + RENTAX5 + RENTAX6 + RENTAX7 + BPCOSAV + BPCOSAC + GLDGRATV + GLDGRATC
RDRV = RVBCSG
TERPQPRRV = RPQPRRV * 1 - is_positive(INDTEFF) + TRPQPRRV * is_positive(INDTEFF)
TRPQTSREMPC = inf(TGLTSREMPC / REMPLANBC)
_10MINS3 = max(min(TSB3, DEDMIN3), DFN3)
REPNIS = positif_ou_nul(REPSINFOR + VARD + REPSINFOR1 + REPFOR1 + REPSINFOR2 + REPFOR2 + REPSINFOR3 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * REPSINFOR4 + 1 - positif_ou_nul(REPSINFOR + VARD + REPSINFOR1 + REPFOR1 + REPSINFOR2 + REPFOR2 + REPSINFOR3 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, REPSINFOR4 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - REPSINFOR - VARD - REPSINFOR1 - REPFOR1 - REPSINFOR2 - REPFOR2 - REPSINFOR3)) * 1 - V_CNR
NINVRETXCR = NINVRETXC - arr(NINVRETXC * TX35 / 100) * 1 - V_CNR
_2FRAR = is_positive(INTERE) * null(4 - V_IND_TRAIT) * is_positive(RCMNAB) * arr(RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS * INTERE / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(RCMNAB) * RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS - FRAN - _2FRAN - FRAR + null(5 - V_IND_TRAIT) * is_positive(RCMNAB) * arr(RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS * INTERE / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(RCMNAB) * RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - FRAN - _2FRAN - FRAR
AFIPDOM = max(0, AFIPDOM_1 * 1 - ART1731BIS + min(AFIPDOM_1, max(AFIPDOM_P + AFIPDOMP2, AFIPDOM1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - V_CNR
RLOC07 = max(min(INVOMENTMN, RRILOC - RLOC01 - RLOC02 - RLOC03 - RLOC04 - RLOC05 - RLOC06), 0) * 1 - V_CNR
RSE19YP = is_positive(RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * arr(VAR9YIPS * RSE1 - CSPROVYD / BINRPS) + 1 - is_positive(RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP - GLO9YP)
RSOUFIP_1 = max(min(RFIP, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1 - RSOCREPR_1 - RRPRESCOMP_1 - RHEBE_1 - RSURV_1 - RINNO_1), 0)
TEGLRF2M = GLRF2M * 1 - is_positive(INDTEFF) + TGLRF2M * is_positive(INDTEFF)
IPQRWA1 = ZIPQRWA1 * CODNWA
RIVCELHJK2 = RIVCELHJK1
RCELREPHZ = max(0, RCELREPHZ_1 * 1 - ART1731BIS + min(RCELREPHZ_1, max(RCELREPHZ_P + RCELREPHZP2, RCELREPHZ1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPRV = is_positive(REPRV) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RCODJT8 = arr(ACODJT * TX11 / 100) - 8 * RCODJT1
CICAP = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES - AVFISCOPTER, min(IPCAPTAXTOT, BCICAP)))
ACODIV = min(PLAF_RESINEUV - ACODIL - ACODIN - ACODIJ, INVNPROF2) * 1 - V_CNR
RSE2NET = max(0, RSE8TV - CIRSE8TV - CSPROVYF) + max(0, RSE8SA - CIRSE8SA - CSPROVYN) + PRSE2
PPE_RCONTPC = arr(PPE_RTAC * PPE_COEFFC)
INVRETROA = min(NINVRETRO, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA)) * 1 - V_CNR
LIGRNIDF4 = is_positive(abs(RNIDF4)) * is_positive(is_positive(abs(RNIDF)) + is_positive(FLAGRETARD08 + FLAGDEFAUT11)) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
A10RENT = max(0, A10RENT1 * 1 - ART1731BIS + min(A10RENT1731 + 0, A10RENT1) * ART1731BIS) * 1 - V_CNR
REPRETREP = REPRESIVIEU + MEUBLEREP + REPMEUIK
IMO = arr(BMI * TMOY / 100 + arr(PRODOM + PROGUY) * TX_MIN_DOM / 100) * V_CR2
BNNAAV = BNCAABV - BNCAADV * 1 - is_positive(ART1731BIS * PREM8_11)
ITOTDOM31 = IMETRO31 + IQUORAJ31 + INETABADAJ31 + INETABAEAJ31
TGLFC = is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * PENFC / TOTALQUO) + 1 - is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV
INVRETXCR = min(max(min(arr(INVRETXC * 13 / 7), NINVRETXC - INVRETXC), NINVRETXC - INVRETXC), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR - INVRETRBR - INVRETRCR - INVRETRDR - INVRETXAR - INVRETXBR)) * 1 - V_CNR
LIG1100 = is_positive(T2RV) * 1 - is_positive(IPVLOC)
LIGRNEUV = is_positive(MEUBLENP) * is_positive(RRESINEUV1 + RRESINEUV2 + RRESINEUV3 + RRESINEUV4 + RRESINEUV5 + RRESINEUV6 + RRESINEUV7 + RRESINEUV8) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
FPT2 = max(FRD2, _10MINS2)
NRLOGSOC = NINVRETXA + NINVRETXB + NINVRETXC + NINVRETXE
RPQRWB = inf(GLRWB / CODNWB) + 0
IPQFV1 = ZIPQFV1 * COTFV
LOIIMP = positif_ou_nul(LOIREST) * CILOYIMP - LOIREST
DFBICNPF = sum([BICNPV, BICNPC, BICNPP]) + MIB_NETNPCT + DEFNPI + BICDEV + BICDEC + BICDEP + BICHDEV + BICHDEC + BICHDEP
RCELRREDLM_1 = max(min(ACELRREDLM, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1), 0)
TIND_MINV = 1 - is_positive(TIND_10MIN_0V)
SOMMEA896 = SOMMEA881
LIGCREBIO = is_positive(CREAGRIBIO) * LIG1 * LIG2
ASOCREPR = BSOCREP * 1 - ART1731BIS + min(BSOCREP, max(ASOCREPR_P + ASOCREPRP2, ASOCREPR1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
RLOC97 = max(min(INVRETSK * 1 - INDPLAF + INVRETSKA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96])), 0) * 1 - V_CNR
IAMD2TH = positif_ou_nul(IBM23 - SEUIL_61) * IBM23
DCELREPGU = CELREPGU
IPQPALIMV1 = ZIPQPALIMV1 * PENSALNBV
TRPQRCMTR = inf(TGLRCMTR / INTERENB)
PPEPRIME1 = arr(PPENARPRIME1)
BAH = min(RVCURE, LIM_CURE) + min(RCCURE, LIM_CURE) * 1 - V_CNR
GL4VCM = arr(TONEQUOMHT * REV4VC / TOTALQUOHT)
GLRVO7 = is_positive(REVRCM + REVRF) * arr(TONEQUOHT * _2RV4 / TOTALQUOHT) + 1 - is_positive(REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVO - GLRVO5 - GLRVO6
IPQF15 = ZIPQF15 * COTF1
DENPLOCC = LOCNPCGAC + LOCGITCC - LOCDEFNPCGAC + LOCNPC + LOCGITHCC - LOCDEFNPC
GLTOTM = sum([GL1M, GL2M, GL3M, GL4M]) + GLRVGM + GLRWBM + GLRWAM
QF021 = arr(RB01) / NB2
IS525 = arr(DS525 * NB2)
RPIQABCD_1 = max(0, min(RPI_QABCD, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFREPFI - RDUFLOGIH - RDUFLOEKL))
# TODO MAJTXCDIS4
RTOUREPA_1 = max(min(arr(ATOUREPA * TX_REDIL20 / 100), RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP - RTOUHOTR), 0)
# TODO IND_COLS
PPECOEFFV = arr(PPE_COEFFCONDV * 100)
IQUORAJ32 = arr(IPQ1002 * TERPQ4RAJV + TERPQ4RBJC / TERPQ4TVC + TERPQTSV + TERPQTSC)
# TODO NMAJTAXA4
BICIMPC = BIHTAC + BIPTAC + MIB_NETVC + MIB_NETPC
REST = is_positive(IRE) * is_positive(IRESTITIR)
RIVCEL2 = RIVCEL1
QF015 = arr(RB05) / NB1
LIBIMP = positif_ou_nul(LIBREST) * AUTOVERSLIB - LIBREST
INVRETSBA = min(arr(NINVRETSB * TX375 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA)) * 1 - V_CNR
IPQPRRV5 = ZIPQPRRV5 * CARPENBAV
LIG_MEMO = is_positive(LIGPRELIB + LIG_SURSIS + LIGREPPLU + LIGELURAS + LIGELURASC + LIGABDET + LIGABDETP + LIGABDETM + LIGROBOR + LIGPVIMMO + LIGPVTISOC + LIGMOBNR + LIGDEPCHO + LIGDEPMOB + LIGCOD3SG + LIGCOD3SH + LIGCOD3SL + LIGCOD3SM) + is_positive(LIG3525 + LIGRCMSOC + LIGRCMIMPAT + LIGABIMPPV + LIGABIMPMV + LIGPV3SB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
INVRETMARA = min(NINVRETMAR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA)) * 1 - V_CNR
PLR4 = min(MIN_DEDPR, EXPR4)
IN55 = max(IS515, IS525 - PLA)
VARRFDANT = min(RFCF + RFMIC - MICFR, RFDANT)
ACELREPGL = CELREPGL * 1 - ART1731BIS + min(CELREPGL, max(ACELREPGL_P + ACELREPGLP2, ACELREPGL1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IPQTSREMPANT41 = ZIPQTSREMPANT41 * REMPLANBP4
SPEABPV = arr(SPEABV * BNCPROV / SPETOTV)
IPQPRRZ32 = ZIPQPRRZ32 * CODNEZ
RENT03 = max(min(INVRETAL * 1 - INDPLAF + INVRETALA * INDPLAF, RRIRENT - RENT01 - RENT02), 0) * 1 - V_CNR
RIV2012CEL8 = arr(min(CELSOMJ, LIMCELLIER) * is_positive(CELLIERJM) * TX36 / 100 + min(CELSOMJ, LIMCELLIER) * is_positive(CELLIERJK + CELLIERJN) * TX24 / 100 + min(CELSOMJ, LIMCELLIER) * is_positive(CELLIERJD) * TX22 / 100 + min(CELSOMJ, LIMCELLIER) * is_positive(CELLIERJA + CELLIERJE + CELLIERJH) * TX13 / 100 + min(CELSOMJ, LIMCELLIER) * is_positive(CELLIERJF + CELLIERJJ) * TX6 / 100) - 8 * RIV2012CEL1 * 1 - V_CNR
RRFI = RFON + DRCF + max(0, RFMIC - MICFR - RFDANT) * 1 - is_positive(ART1731BIS) + RFON + DRCF + max(0, RFMIC - MICFR - DEFRF4BD) * is_positive(ART1731BIS)
LIGSINFOR = is_positive(REPFORSIN) * LIG1 * LIG2
NINVRETUE = max(min(CODHUE, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ - NINVRETUA - NINVRETUB - NINVRETUC - NINVRETUD), 0) * 1 - V_CNR
# TODO FLAG_TRTARDIF_F
TGL4VM = arr(TONEQUOM * REV4V / TOTALQUO)
TABTSV = TABTS1AJ + TABTS1AC + TABTS1AP + TABTS3VJ + TABTS1TT + TABTSRAJ + TABTSRAP
GLRCMCHM = is_positive(_5RCM + _6RCM + _7RCM + REVRF) * arr(TONEQUOMHT * _4RCM / TOTALQUOHT) + 1 - is_positive(_5RCM + _6RCM + _7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM - GLRCMFUM
PRSC = arr(BPRS * T_PREL_SOC / 100) * 1 - is_positive(ANNUL2042)
XBICIMPC = XBICHDC + XBICNPHDC
PPEREST2A = is_positive(IRE) * is_positive(IRESTITIR) * max(0, min(PPETOTX - PPERSA, IRESTITIR))
ACELHNO = BCEL_HNO * 1 - ART1731BIS + min(BCEL_HNO, max(ACELHNO_P + ACELHNOP2, ACELHNO1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELLIERHN + CELLIERHO) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
DFCG = min(0, RFCF - RFDANT) * 1 - is_positive(ART1731BIS) + min(0, RFCF - DEFRF4BD) * is_positive(ART1731BIS)
RRCEL2011 = max(0, RCEL_2011_R - RCEL * is_positive(CELSOMN) + RCEL_COM_R - RCELCOM * is_positive(sum([CELLIERNP, CELLIERNR, CELLIERNS, CELLIERNT])) + CELREPYC + CELREPYD + CELREPYK - RCELREPYC - RCELREPYD - RCELREPYK * is_positive(sum([CELREPYC, CELREPYD, CELREPYK])) + CELREPGW + CELREPGL + CELREPGK + CELREPHG + CELREPHA + RCEL_JBGL_R + RCEL_JP_R - RCELREPGW - RCELREPGL - RCELREPGK - RCELREPHG - RCELREPHA - RCELJBGL - RCELJP * is_positive(sum([CELREPGW, CELREPGL, CELREPGK]) + CELREPHG + CELREPHA + sum([CELLIERJB, CELLIERJG, CELLIERJL, CELLIERJP]))) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INVRETMN = NINVRETMN * 1 - V_CNR
RCELREPGT = max(0, RCELREPGT_1 * 1 - ART1731BIS + min(RCELREPGT_1, max(RCELREPGT_P + RCELREPGTP2, RCELREPGT1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
GLTSREMP4 = is_positive(REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2REMP4 / TOTALQUOHT) + 1 - is_positive(REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV - GLTSREMPC - GLTSREMP1 - GLTSREMP2 - GLTSREMP3
TSNGL1V = GLD1V - ABGL1V
INVRETKIRA = min(NINVRETKIR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA)) * 1 - V_CNR
TAXABASE_INR = arr(max(TAXASSUR - TAXA9YI + min(0, IRN - IRANT), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
APB1 = max(PLR1, EXPR1 * TX_DEDPER / 100)
TRPQ4 = inf(TGL4 / DIVGL4) + 0
RLOC71 = max(min(INVRETRO * 1 - INDPLAF + INVRETROA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70])), 0) * 1 - V_CNR
TTSPR4 = TTSNN4 + TPRR4 * 1 - PREM8_11 + max(0, TTSNN4 + TPRR4) * PREM8_11
RENT29 = max(min(INVRETAVR * 1 - INDPLAF + INVRETAVRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28])), 0) * 1 - V_CNR
LIGDEFBA6 = is_positive(DEFBA6) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
RRCELLS = max(0, CELRREDLS - RCELRREDLS) * is_positive(CELRREDLS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IPQPALIMC2 = ZIPQPALIMC2 * PENSALNBC
HRLIMBTRFR2 = positif_ou_nul(LIMHR1 * 1 + BOOL_0AM - HRBTRFR2)
_4BAQLC = is_positive(_4BACREC + _4BAHREC)
INVRETQSR = min(max(min(arr(INVRETQS * 13 / 7), NINVRETQS - INVRETQS), NINVRETQS - INVRETQS), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR)) * 1 - V_CNR
IPQRVO6ANT1 = ZIPQRVO6ANT1 * RENTAXNB6
DCELREPYC = CELREPYC
LIGILMOA = is_positive(DILMOA) * LIG1 * LIG2
LIGISF = 1 - is_positive(ISF_LIMINF + ISF_LIMSUP) * present(ISFBASE) * is_positive(DISFBASE)
LIGREPSE = is_positive(REPSE) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
INVRETQR = NINVRETQR * 1 - V_CNR
NINVRETRQ = max(min(INVOMENTRQ, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL), 0) * 1 - V_CNR
IPQPRRANTV1 = ZIPQPRRANTV1 * CARPENBAV
ZIPQTSANTV1 = is_positive(sum([TEGLTSC, TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * arr(IQUOTOTANT1 * TERPQTSV / TETONEQUO1) + 1 - is_positive(sum([TEGLTSC, TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQPRRANTZ1TOT
INVRETQPR = min(arr(INVRETQP * 3 / 2), NINVRETQP - INVRETQP) * 1 - V_CNR
RCELRREDLD_1 = max(min(ACELRREDLD, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1), 0)
REPRCMBIS = DEFRCM + DEFRCM2 + DEFRCM3 + DEFRCM4 + DEFRCM5 + DEFRCM6 * 1 - is_positive(ART1731BIS) + min(DEFRCM + DEFRCM2 + DEFRCM3 + DEFRCM4 + DEFRCM5 + DEFRCM6, max(REPRCM1731, max(REPRCM_P, REPRCMP2))) * ART1731BIS * 1 - PREM8_11 + 0 * ART1731BIS * PREM8_11
RRCELLT = max(0, CELRREDLT - RCELRREDLT) * is_positive(CELRREDLT) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RPATNAT = max(0, RPATNAT_1 * 1 - ART1731BIS + min(RPATNAT_1, max(RPATNAT_P + RPATNATP2, RPATNAT1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RETRESIMEUB_1 = arr(ARESIMEUB_1 * TX25 / 100)
INDE4 = is_positive(INDRSE4 + INDRSE4X) * INDTRAIT
RPQF4 = inf(GLF4 / COTF4)
LIGREPDOM = is_positive(REPDOMENTR) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TRPQRCMFU = inf(TGLRCMFU / REVPEANB)
LIMIT11 = 18000 + max(0, arr(max(0, RI1 + TONEQUO1) * 6 / 100)) * 1 - is_positive(VARRMOND * is_positive(ART1731BIS) + RMOND * 1 - ART1731BIS) + max(0, arr(max(0, VARRMOND * is_positive(ART1731BIS) + RMOND * 1 - ART1731BIS + TONEQUOM1) * 6 / 100)) * is_positive(VARRMOND * is_positive(ART1731BIS) + RMOND * 1 - ART1731BIS)
ABADO6 = arr(min(IPRODOM6 + ID16 * TX_RABDOM / 100, PLAF_RABDOM))
LIGREPCICE = is_positive(REPCICE) * LIG1 * LIG2
ACELRREDLE = CELRREDLE * 1 - ART1731BIS + min(CELRREDLE, max(ACELRREDLE_P + ACELRREDLEP2, ACELRREDLE1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
SOMMEA892 = SOMMEA881
PPE_COEFFCONDC = 1 - PPE_BOOL_TPC * null(PPENBJ - 360) * PPE_COEFFC + 1 - null(PPENBJ - 360) * PPENBJ * 1820 / 360 / PPENHC + PPEXTC * is_positive(PPE_SALAVDEFC + 0) + PPENJC * is_positive(PPE_AVRPRO1C + 0) * 1820 / 360
LIGPERPVP = is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * 1 - is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFC) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
PRN1 = is_positive(TSNT1) * is_positive(TSNT1 + PRNN1) * TSNT1 + PRNN1 + positif_ou_nul(TSNT1) * PRNN1
_4DEFBAHREP = is_positive(_4BAHREP) * BAHDEP * 1 - is_positive(ART1731BIS * PREM8_11) - DEFBAHREP
TABGLTC = sum([TABGL1C, TABGL2C, TABGL3C]) + TABDOMDBJ + TABDOMEBJ
RSOCREP = arr(TX_SOCREPR / 100 * BSOCREP) * 1 - V_CNR
MIB_TVENP = MIBVENP + MIBNPVENP + MIBGITEP + LOCGITP
RESIVIEU4 = arr(arr(ACODIM / 9) * TX25 / 100)
APPLI_BATCH = 1
INVRETQGRA = min(NINVRETQGR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA)) * 1 - V_CNR
RCINE_1 = max(min(RRCN, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1 - RFIPC_1), 0)
INDIS14 = 1 if (V_NOTRAIT + 0 == 14 or V_NOTRAIT + 0 == 16 or V_NOTRAIT + 0 == 26 or V_NOTRAIT + 0 == 36 or V_NOTRAIT + 0 == 46 or V_NOTRAIT + 0 == 56 or V_NOTRAIT + 0 == 66) else 0
MIB_NETCT = MIBPVV + MIBPVC + MIBPVP - BICPMVCTV - BICPMVCTC - BICPMVCTP
INVRETLIA = min(arr(NINVRETLI * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA)) * 1 - V_CNR
PPE_COEFFCOND2 = 1 - PPE_BOOL_TP2 * null(PPENBJ - 360) * PPE_COEFF2 + 1 - null(PPENBJ - 360) * PPENBJ * 1820 / 360 / PPENHP2 + PPEXT2 * is_positive(PPE_SALAVDEF2 + 0) + PPENJP * is_positive(PPE_AVRPRO1P + 0) * 1820 / 360
INDCTX = 1 if (V_NOTRAIT + 0 == 23 or V_NOTRAIT + 0 == 33 or V_NOTRAIT + 0 == 43 or V_NOTRAIT + 0 == 53 or V_NOTRAIT + 0 == 63) else 0
TSPR3 = TSNN3 + PRR3 * 1 - PREM8_11 + max(0, TSNN3 + PRR3) * PREM8_11
DILMOC = COD7OC
LIGMIBDREPV = is_positive(MIBDREPV) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
RPATNAT2 = max(0, RPATNAT2_1 * 1 - ART1731BIS + min(RPATNAT2_1, max(RPATNAT2_P + RPATNAT2P2, RPATNAT21731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
CSBASE = CSG - CSGIM
XTSB1 = TSBN1
LIGREP7PC = is_positive(REPMEUPC) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPE_NB_PAC_QAR = V_0CH + V_0DP
RDUFREPFI = max(0, min(ADUFREPFI, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS))
TTSNN2V = is_positive(TTSV) * is_positive(CARTSV + REMPLAV) * arr(TTSV * T2TSNV / TEXTSV) + 1 - is_positive(CARTSV + REMPLAV) * TTSV - TTSNNV
PPE_KIRE = REVKIRE * PPENBJAN / PPENBJ
DILMIB = LOCMEUBIB
# TODO AGRIP
TMIBNETPF = sum([TMIB_NETPV, TMIB_NETPC, TMIB_NETPP])
GLFTOT = sum([GLFV, GLFC, GLF1, GLF2, GLF3, GLF4])
PPE_NBNONELI = sum([is_positive(PPEPRIME1), is_positive(PPEPRIME2), is_positive(PPEPRIME3), is_positive(PPEPRIME4), is_positive(PPEPRIMEU), is_positive(PPEPRIMEN)]) + sum([positif_ou_nul(PPE_RTA1 - PPELIMRPB) * is_positive(PPE_RCONTP1 - PPELIMRPH), positif_ou_nul(PPE_RTA2 - PPELIMRPB) * is_positive(PPE_RCONTP2 - PPELIMRPH), positif_ou_nul(PPE_RTA3 - PPELIMRPB) * is_positive(PPE_RCONTP3 - PPELIMRPH), positif_ou_nul(PPE_RTA4 - PPELIMRPB) * is_positive(PPE_RCONTP4 - PPELIMRPH), positif_ou_nul(PPE_RTAU - PPELIMRPB) * is_positive(PPE_RCONTPU - PPELIMRPH), positif_ou_nul(PPE_RTAN - PPELIMRPB) * is_positive(PPE_RCONTPN - PPELIMRPH)])
TRPQFVM = inf(TGLFVM / COTFV)
# TODO PALIP
ZIPQPRRZV2 = is_positive(sum([TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPRRZV / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT
ZIGIDGLO6 = ZIGIDGLO * null(ANCSDED2 - V_ANREV + 6)
PS_RTF = CS_RTF
MIBNETNPVLSC = arr(MIB_NETNPVLC * MIBGITEC / MIBGITEC + LOCGITC)
RRESTIMOX = max(min(RESTIMOX * TX22 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RCINE_1 - RRESTIMOD - RRESTIMOB - RRESTIMOC - RRESTIMOC - RRESTIMOY - RRESTIMOA - RRESTIMOE), 0)
ALOGSOC_1 = INVRETXA + INVRETXB + INVRETXC + INVRETXE + INVRETXAR + INVRETXBR + INVRETXCR + INVRETXER * 1 - INDPLAF + INVRETXAA + INVRETXBA + INVRETXCA + INVRETXEA + INVRETXARA + INVRETXBRA + INVRETXCRA + INVRETXERA * INDPLAF * 1 - V_CNR
IND_CTXC = is_positive(CS_DEG) * is_positive(BCSG) * is_positive(INDCTX)
RCELREP_HW = is_positive(CELREPHW) * arr(ACELREPHW * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
XBICNPNETV = XBICNPHDV - min(BICDEV, BICDEV1731 + 0) * is_positive(ART1731BIS) + BICDEV * 1 - ART1731BIS
TSNREJ = CARTSP3 - ABTSREJ
ZIPQTSANT31 = is_positive(TEGLTS4 + TEGLTSREMPTOT) * arr(IQUOTOTANT1 * TERPQTS3 / TETONEQUO1) + 1 - is_positive(TEGLTS4 + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANTV1 - ZIPQTSANTC1 - ZIPQTSANT11 - ZIPQTSANT21
INVRETRPR = min(arr(INVRETRP * 10 / 9), NINVRETRP - INVRETRP) * 1 - null(1 - abs(arr(INVRETRP * 10 / 9) - NINVRETRP - INVRETRP)) + NINVRETRP - INVRETRP * null(1 - abs(arr(INVRETRP * 10 / 9) - NINVRETRP - INVRETRP)) * 1 - V_CNR
DCELRREDLZ = CELRREDLZ
INVRETSMA = min(NINVRETSM, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA)) * 1 - V_CNR
RCELREPYA = max(0, RCELREPYA_1 * 1 - ART1731BIS + min(RCELREPYA_1, max(RCELREPYA_P + RCELREPYAP2, RCELREPYA1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPE_NBELIGI = PPE_NB_PAC + PPE_NB_PAC_QAR - PPE_NBNONELI
ZIPQRVOANT1TOT = ZIPQRVOANT1 + ZIPQRVO5ANT1 + ZIPQRVO6ANT1 + ZIPQRVO7ANT1
ZIPQRCMTRANT1 = is_positive(TEGLRCMGO + TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQRCMTR / TETONEQUO1) + 1 - is_positive(TEGLRCMGO + TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMDCANT1 - ZIPQRCMFUANT1 - ZIPQRCMCHANT1
RSURV = max(0, RSURV_1 * 1 - ART1731BIS + min(RSURV_1, max(RSURV_P + RSURVP2, RSURV1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RLOGSOC_1 = 1 - V_INDTEO * RSOC1 + RSOC2 + RSOC3 + RSOC4 + RSOC5 + RSOC6 + RSOC7 + RSOC8 + V_INDTEO * arr(V_RSOC1 + V_RSOC5 + V_RSOC2 + V_RSOC6 + V_RSOC3 + V_RSOC7 + V_RSOC4 + V_RSOC8 * TX65 / 100) * 1 - V_CNR
TRPQRF1 = inf(TGLRF1 / FONCINB)
# TODO RIVL5
LIGCI8XV = present(COD8XV) * LIG1 * LIG2
RLOC63 = max(min(INVRETRG * 1 - INDPLAF + INVRETRGA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62])), 0) * 1 - V_CNR
A9RFOR = max(0, min(BA9RFOR, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4)) * 1 - ART1731BIS
DCELREPGP = CELREPGP
RENT05 = max(min(INVRETAV * 1 - INDPLAF + INVRETAVA * INDPLAF, RRIRENT - RENT01 - RENT02 - RENT03 - RENT04), 0) * 1 - V_CNR
NINVRETAJ = max(min(CODHAJ, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW - NINVRETBE - NINVRETAE), 0) * 1 - V_CNR
REVTSREMPQHT = sum([TSNN2REMPV, TSNN2REMPC, TSNN2REMP1, TSNN2REMP2, TSNN2REMP3, TSNN2REMP4])
LIG1545 = 1 - present(IND_TDR) * INDTXMIN * is_positive(IND_REV) * LIG2
TEXSPBV = TEXTSV + TEXPRV
EXPR1 = PRB1 + _2PRB1 + PEBF1
ZIPQPRRZ12 = is_positive(sum([TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPRRZ1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRZV2 - ZIPQPRRZC2
TTPS10V = arr(TTSBV * TX_DEDFORFTS / 100)
INDCTX23 = 1 if (V_NOTRAIT + 0 == 23 or V_NOTRAIT + 0 == 33 or V_NOTRAIT + 0 == 43 or V_NOTRAIT + 0 == 53 or V_NOTRAIT + 0 == 63) else 0
PPE_BOOL_SIFC = 1 - BOOL_0AM * 1 - is_positive(V_0AV) * is_positive(V_0AZ)
TGLRFTOTM = TGLRF1M + TGLRF2M
INVRETMBRA = min(NINVRETMBR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA)) * 1 - V_CNR
TERPQPRRZ2M = RPQPRRZ2M * 1 - is_positive(INDTEFF) + TRPQPRRZ2M * is_positive(INDTEFF)
ZIGPROVYH = is_positive(CSPROVYH + CSPROVYP) * TYPE2
REPDUGIH = RIVDUGIH * 7 + RIVDUGIH8
INTIMP = positif_ou_nul(INTREST) * CREINTERESSE - INTREST
LIGREPKT = is_positive(REPKT) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TAPERPP = 1 - V_CNR * max(min(RPERPP, RBG * 1 - INDTEFF + TEFFREVTOT3 - RPALE - RPALP - RFACC - RDDIV - DDCSG + TOTALQUO - SDD - APERPV - APERPC), 0)
MIB_TTP = MIB_TVENP + MIB_TPRESP
ADUFLOEKL = ADUFLOEKL_1 * 1 - ART1731BIS
ABPR3 = arr(1 - IND_APB3 * min(APB3, PL_PB * APB3 / sum([APBV * 1 - IND_APBV, APBC * 1 - IND_APBC, APB1 * 1 - IND_APB1, APB2 * 1 - IND_APB2, APB3 * 1 - IND_APB3, APB4 * 1 - IND_APB4])) + IND_APB3 * APB3)
RILMJX_1 = max(min(AILMJX, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY), 0)
ZIGTITRERS = 1 - is_positive(BCSG + V_CSANT) * is_positive(BRDS + V_RDANT) * 1 - is_positive(BPRS + V_PSANT) * is_positive(BCVNSAL + V_CVNANT) * 1 - V_CNR * LIG2
TGLPRR3 = is_positive(TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR23 / TOTALQUO) + 1 - is_positive(TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2
PLAF1GM = is_positive(null(6 - V_REGCO) + null(7 - V_REGCO)) * arr(31843 + 3082 * min(NBPT - 1 * 4, 4) * is_positive(NBPT - 1) + 2624.5 * min(NBPT - 2 * 4, 2) * is_positive(NBPT - 2) + 2210.5 * NBPT - 2.5 * 4 * is_positive(NBPT - 2.5))
PPETEMPSC = arr(1 / PPE_COEFFC * 100)
IAVIMO = max(0, max(ID11 - ADO1, IMI) - RED) + ITP + REI + PIR * V_CR2
REPLOCIE7 = arr(arr(ACODIE / 9) * TX18 / 100)
IPQPALIM45 = ZIPQPALIM45 * PENSALNBP4
LIGCELYC = is_positive(DCELREPYC) * LIG1 * LIG2
ZIG_CSGDPRIM = 1 - is_positive(V_CSANT + V_RDANT + V_PSANT + V_IDANT) * is_positive(IDCSG) * LIG2
TONEQUOM1 = sum([RPQ1M, RPQ2M, RPQ3M, RPQ4M]) + sum([RPQFVM, RPQFCM, RPQF1M, RPQF2M, RPQF3M, RPQF4M]) + sum([RPQPALIMVM, RPQPALIMCM, RPQPALIM1M, RPQPALIM2M, RPQPALIM3M, RPQPALIM4M]) + sum([RPQRF1M, RPQRF2M]) + RPQRCMDCM + RPQRCMFUM + RPQRCMCHM + RPQRCMTRM + RPQRCMTSM + RPQRCMGOM + sum([RPQPRRVM, RPQPRRCM, RPQPRR1M, RPQPRR2M, RPQPRR3M, RPQPRR4M]) + sum([RPQPRRZVM, RPQPRRZCM, RPQPRRZ1M, RPQPRRZ2M, RPQPRRZ3M, RPQPRRZ4M]) + RPQRVOM + RPQRVO5M + RPQRVO6M + RPQRVO7M + sum([RPQTSVM, RPQTSCM, RPQTS1M, RPQTS2M, RPQTS3M, RPQTS4M]) + sum([RPQTSREMPVM, RPQTSREMPCM, RPQTSREMP1M, RPQTSREMP2M, RPQTSREMP3M, RPQTSREMP4M]) + RPQRVGM + RPQRWBM * null(1 - FLAG_EXIT) + RPQRWBM + RPQRWAM * null(2 - FLAG_EXIT)
INVRETPX = min(arr(NINVRETPX * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS)) * 1 - V_CNR
ACELRREDLS = CELRREDLS * 1 - ART1731BIS + min(CELRREDLS, max(ACELRREDLS_P + ACELRREDLSP2, ACELRREDLS1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RLOC87 = max(min(INVRETRUR * 1 - INDPLAF + INVRETRURA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86])), 0) * 1 - V_CNR
RFOR_1 = max(min(RFOREST, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4), 0)
BCIHABPRIN1 = min(BCIHP, PREHABT) * 1 - V_CNR
RSE4BASE = max(0, RSE8TX - CIRSE8TX - CSPROVYH) + max(0, RSE8SB - CIRSE8SB - CSPROVYP)
EXCIMP = positif_ou_nul(EXCREST) * CIEXCEDENT - EXCREST
RSOC3 = arr(max(min(INVRETXC * 1 - INDPLAF + INVRETXCA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1 - RSOC2), 0)) * 1 - V_CNR
BICPF = sum([BIPTAV + BIHTAV + MIB_NETVV + MIB_NETPV, BIPTAC + BIHTAC + MIB_NETVC + MIB_NETPC, BIPTAP + BIHTAP + MIB_NETVP + MIB_NETPP]) + MIB_NETCT
INVRETAY = NINVRETAY * 1 - V_CNR
_5RCM_I = (1 - is_positive(DFRCMN) * _2RAU * 1 - is_positive(ART1731BIS) + _2RAU * is_positive(ART1731BIS)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
LIGPLOC1 = is_positive(DEFLOC1) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
_2TSN4 = CARTSP4 + REMPLAP4
PPENARPRIME3 = PPE_FORMULE3 * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCOND3 - 2) * 1 - PPE_BOOL_TP3 + arr(PPE_FORMULE3 * PPETXMAJ1) + arr(PPE_FORMULE3 * PPE_COEFF3 * PPETXMAJ2) * is_positive(2 - PPE_COEFFCOND3) * is_positive(PPE_COEFFCOND3 - 1) * 1 - PPE_BOOL_TP3 + PPE_FORMULE3 * is_positive(PPE_BOOL_TP3 + positif_ou_nul(1 - PPE_COEFFCOND3))
# TODO NMAJRSE24
PPE_MABT = PPE_BOOL_MAJOBT * is_positive(PPE_NBMAJO) * PPE_NBMAJO + 1 * PPEMONMAJO + PPE_NBMAJOQAR * PPEMONMAJO / 2 + PPE_BOOL_MAJOBT * null(PPE_NBMAJO + 0) * is_positive(PPE_NBMAJOQAR) * is_positive(PPE_NBMAJOQAR - 1) * PPE_NBMAJOQAR * PPEMONMAJO / 2 + PPEMONMAJO + positif_ou_nul(PPELIMRPH2 - PPE_RCONTPV) * positif_ou_nul(PPE_RTAV - PPELIMRPB) * 1 - PPE_BOOL_MAJOBT * 1 - is_positive(PPE_BOOL_NADAV) * PPE_BOOL_BT * is_positive(PPE_NB_PAC) * 2 * PPEMONMAJO + is_positive(PPE_NB_PAC_QAR) * null(PPE_NB_PAC + 0) * PPEMONMAJO
RB02 = RI2 * 1 - is_positive(VARIPTEFP * is_positive(ART1731BIS) + IPTEFP * 1 - ART1731BIS + VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS + INDTEFF) + ZONIPTEFP + PVIMPOS * is_positive(ZONIPTEFP) + ZONIPTEFN + PVIMPOS * is_positive(ZONIPTEFN - PVIMPOS) + PVIMPOS - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - PVIMPOS) * null(1 - FLAG_EXIT) + PVSURSI + PVIMPOS * is_positive(ZONIPTEFP) + ZONIPTEFN + PVSURSI * is_positive(ZONIPTEFN - PVSURSI) + PVSURSI - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - PVSURSI) * null(2 - FLAG_EXIT) + RFROBOR * V_INDTEO * is_positive(ZONIPTEFP) + DPAE + TEFFREVTOT * 1 - is_positive(ZONIPTEFP + PVIMPOS * is_positive(ZONIPTEFP) + ZONIPTEFN + PVIMPOS * is_positive(ZONIPTEFN - PVIMPOS) + PVIMPOS - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - PVIMPOS) * null(1 - FLAG_EXIT) + PVSURSI + PVIMPOS * is_positive(ZONIPTEFP) + ZONIPTEFN + PVSURSI * is_positive(ZONIPTEFN - PVSURSI) + PVSURSI - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - PVSURSI) * null(2 - FLAG_EXIT)) * INDTEFF
TEGLRCMTS = GLRCMTS * 1 - is_positive(INDTEFF) + TGLRCMTS * is_positive(INDTEFF)
GLPRRZVM = is_positive(PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2ZV / TOTALQUOHT) + 1 - is_positive(PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M
BCIHABPRIN4 = min(max(0, BCIHP - BCIHABPRIN1 - BCIHABPRIN2 - BCIHABPRIN3), PREHABTN1) * 1 - V_CNR
NRILMOC = max(min(AILMOC, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD), 0)
CIRDSAPS = min(RDSCAPS, arr(IPPNCS + REVCSXA + REVCSXB + REVCSXC + REVCSXD + REVCSXE * T_RDS / 100))
LIGMXBINP = is_positive(MIBNPEXV + MIBNPEXC + MIBNPEXP) * LIG1 * LIG2
IAD11 = max(0, IDOM11 - DEC11 - RED) * 1 - is_positive(V_CR2 + IPVLOC) + is_positive(V_CR2 + IPVLOC) * max(0, IDOM11 - RED) * 1 - is_positive(RE168 + TAX1649) + is_positive(RE168 + TAX1649) * IDOM16
REPRV = max(0, INVOMENTRV - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ)) * 1 - ART1731BIS + max(0, INVOMENTRV - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ)) * ART1731BIS * 1 - V_CNR
ALOCIDEFG_1 = arr(ACODIE / 9) + arr(ACODIF / 9) + arr(ACODID / 9) + arr(ACODIG / 9)
LIGBIPERP = is_positive(BIPERPV + BIPERPC + BIPERPP) * LIG1 * LIG2
MIB_TPRESC = MIBPRESC + MIBNPPRESC + MIBMEUC
MIB_TPRESP = MIBPRESP + MIBNPPRESP + MIBMEUP
REVKIRE = 1 - null(IND_TDR) * arr(max(0, 1 - is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, IPTEFP - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(IPTEFN) * is_positive(ART1731BIS) + IPTEFN + PVTXEFF * present(IPTEFN) * 1 - ART1731BIS + INDTEFF) * RI1RFR + is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, IPTEFP - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(IPTEFN) * is_positive(ART1731BIS) + IPTEFN + PVTXEFF * present(IPTEFN) * 1 - ART1731BIS + INDTEFF) * max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, IPTEFP - PVTXEFF) * 1 - ART1731BIS + is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, IPTEFP - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(IPTEFN) * is_positive(ART1731BIS) + IPTEFN + PVTXEFF * present(IPTEFN) * 1 - ART1731BIS + INDTEFF) * is_positive(TEFFN - DRBG - RNIDF + APERPV + APERPC + APERPP * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO)) + QUOKIRE) * APERPV + APERPC + APERPP * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO)) + QUOKIRE + max(0, TEFFREVTOTRFR * INDTEFF) * 1 - is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, IPTEFP - PVTXEFF) * 1 - ART1731BIS) * 1 - present(IND_TDR) + IND_TDR + 1 - is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, IPTEFP - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(IPTEFN) * is_positive(ART1731BIS) + IPTEFN + PVTXEFF * present(IPTEFN) * 1 - ART1731BIS + INDTEFF) * QUOKIRE + APERPV + APERPC + APERPP * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO)) + VARREVKIRE))
GLTS2M = is_positive(TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2TS2 / TOTALQUOHT) + 1 - is_positive(TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM - GLTSCM - GLTS1M
XBICNETP = XBICHDP - BICDNP * 1 - is_positive(ART1731BIS)
RIVCELHNO3 = RIVCELHNO1
LIG_REPORT = is_positive(LIGRNIDF + sum([LIGRNIDF0, LIGRNIDF1, LIGRNIDF2, LIGRNIDF3, LIGRNIDF4, LIGRNIDF5]) + LIGDEFBA + LIGDRFRP + LIG3250 + LIGIRECR + LIGDRCVM + LIGDLMRN + LIGBNCDF + sum([LIGMIBDREPV + LIGMBDREPNPV + LIGSPEDREPV + LIGSPDREPNPV, LIGMIBDREPC + LIGMBDREPNPC + LIGSPEDREPC + LIGSPDREPNPC, LIGMIBDREPP + LIGMBDREPNPP + LIGSPEDREPP + LIGSPDREPNPP]) + LIGLOCNEUF + sum([LIGLOCNEUF1, LIGLOCNEUF2, LIGLOCNEUF3, LIGLOCNEUF4, LIGLOCNEUF5, LIGLOCNEUF6]) + LIGPATNATR + LIGRDUFLOTOT + LIGRPINELTOT + LIGRCELFD + LIGRCELFABC + LIGRCEL2012 + LIGRCELJBGL + LIGRCELJOQR + LIGRCELJP + LIGRCEL + LIGRCELNBGL + LIGRCELCOM + LIGRCELNQ + LIGRCELHJK + LIGRCELHNO + LIGRCELHLM + LIGRRCEL1 + LIGRRCEL2 + LIGRRCEL3 + LIGRRCEL4 + LIGRCODOU + LIGRCODJT + LIGRCODJU + LIGRLOCIDFG + LIGREPLOCIE + LIGNEUV + LIGRNEUV + LIGVIEU + LIGCOMP01 + LIGREPQKG + LIGREPQNH + LIGREPQUS + LIGREPQWB + LIGREPMMQE + LIGREPLI + LIGREPMC + LIGREPKU + LIGREPLH + LIGREPMB + LIGREPKT + LIGREPQV + LIGREPQO + LIGREPQP + LIGREPQR + LIGREPQF + LIGREPQG + LIGREPQI + LIGREPPAK + LIGREPPBL + LIGREPPDO + LIGREPPEK + LIGREPPFL + LIGREPPHO + LIGREPPIZ + LIGREPPJA + LIGREPPLB + LIGREPTB + LIGREPPM + LIGREPPN + LIGREPPO + LIGREPPP + LIGREPPR + LIGREPPS + LIGREPPT + LIGREPPU + LIGREPPW + LIGREPPX + LIGREPPY + LIGREPRG + LIGREPRI + LIGREPRM + LIGREPRC + LIGREPRR + LIGREPRUP + LIGREPRVQ + LIGREPRWR + LIGREPRYT + LIGREPNW + LIGREPSA + LIGREPSB + LIGREPSC + LIGREPSE + LIGREPSF + LIGREPSG + LIGREPSH + LIGREPSJ + LIGREPSM + LIGREPSU + LIGREPSV + LIGREPSW + LIGREPSY + LIGREPDOMOUT + LIGPME3 + LIGPME2 + LIGPME1 + LIGPMECU + LIGRSN + LIGRSN2 + LIGRSN1 + LIGRSN0 + LIGPLAFRSN + LIGPLAFRSN4 + LIGPLAFRSN3 + LIGREPDON + LIGREPDONR + LIGREPDONR1 + LIGREPDONR2 + LIGREPDONR3 + LIGREPDONR4 + LIGREPOU + LIGREP7PA + LIGREP7PB + LIGREP7PC + LIGREP7PD + LIGREP7PE + LIGREPDOM + LIGREPNEUV + LIGREPCODJT + LIGREPLOCNT + LIGRESIREP + LIGREPMEU + LIGREPREPAR + LIGLOCRES + LIGDFRCM + LIGPME + LIGREPCORSE + LIGREPRECH + LIGREPCICE + LIGDEFPLOC + LIGFOREST + LIGNFOREST + LIGREP7UP + LIGREP7UA + LIGREP7UT + LIGREP7UB) * LIG2
LIGCREFORM = is_positive(CREFORMCHENT) * LIG1 * LIG2
TERPQRCMTSM = RPQRCMTSM * 1 - is_positive(INDTEFF) + TRPQRCMTSM * is_positive(INDTEFF)
IPQTSREMP42 = ZIPQTSREMP42 * REMPLANBP4
RSE1NET = max(0, RSE1 + PRSE1 - CIRSE1 - CSPROVYD)
RILMIA = max(0, RILMIA_1 * 1 - ART1731BIS + min(RILMIA_1, max(RILMIA_P + RILMIAP2, RILMIA1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RCODJU1 = arr(arr(ACODJU / 9) * TX11 / 100)
TRPQTSREMPCM = inf(TGLTSREMPCM / REMPLANBC)
TRPQ4M = inf(TGL4M / DIVGL4)
BICIMPP = BIHTAP + BIPTAP + MIB_NETVP + MIB_NETPP
REP102 = IND_102 * D10M2 + 1 - IND_102 * FPT2
PERPBICPNP = PERP_BOOL * BICEXP + BICNOP - BICDNP * 1 - is_positive(ART1731BIS) + BIHEXP + BIHNOP - BIHDNP * 1 - is_positive(ART1731BIS) + BIPERPP + LOCPROCGAP - LOCDEFPROCGAP * 1 - is_positive(ART1731BIS) + LOCPROP - LOCDEFPROP * 1 - is_positive(ART1731BIS)
RSE5BASE = RSE5N - CSPROVYE
NINVRETXB = max(min(CODHXB, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA - NINVRETRB - NINVRETRC - NINVRETRD - NINVRETXA), 0) * 1 - V_CNR
TPR1 = TSN1 + PRN1
NRCELREPHF = max(min(ACELREPHF, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV])), 0)
RPLAFPME13 = PLAFREPSN4 + PLAFREPSN3
PPESALV = PPE_SALAVDEFV + PPE_RPROV * 1 - is_positive(PPE_RPROV)
INANT01 = max(IS011, IS021 - PLANT)
LIGCELLX = is_positive(DCELRREDLX) * LIG1 * LIG2
TABTSRAP = is_positive(REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * arr(TREP10V * REMPLAV / TTSBV) + 1 - is_positive(REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * max(0, TREP10V - TABTS1AJ - TABTS1AC - TABTS1AP - TABTS3VJ - TABTS1TT - TABTSRAJ)
CIRSETOT = CIRSE1 + CIRSE2 + CIRSE3 + CIRSE4 + CIRSE5
LIGRIRENOV = is_positive(DRIRENOV) * LIG1 * LIG2
LIGIPCAP = is_positive(present(PCAPTAXV) + present(PCAPTAXC)) * 1 - is_positive(ANNUL2042 + 0) * LIG1
RLOC29 = max(min(INVRETPI * 1 - INDPLAF + INVRETPIA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28])), 0) * 1 - V_CNR
PRR2Z2 = is_positive(PEBF2 + PENSALP2) * arr(PRN2 * CODRDZ / EXPR2) + 1 - is_positive(PEBF2 + PENSALP2) * PRN2 - PRR2 - PRR22
NINVRETPFR = NINVRETPF - arr(NINVRETPF * TX375 / 100) * 1 - V_CNR
RPATNAT_1 = max(min(APATNAT, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP - RTOUHOTR - RTOUREPA - RCELTOT - RLOCNPRO - RPATNAT1 - RPATNAT2 - RPATNAT3), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NPLOCNETF8 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(LNPRODEF10, LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF10 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF9, LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF9 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF8, LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF8 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF7, LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF7 * 1 - is_positive(ART1731BIS * PREM8_11)
ACELREPHT = CELREPHT * 1 - ART1731BIS + min(CELREPHT, max(ACELREPHT_P + ACELREPHTP2, ACELREPHT1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPENEXOC = null(PPETPC + 0) + is_positive(TSHALLOC + 0) + is_positive(SALEXTC + 0) + 4 * is_positive(PPENHC + 0) + 8 * is_positive(PPEXTC + 0)
RPQTSV = inf(GLTSV / CARTSNBAV)
ZONIPTEFP = VARIPTEFP * is_positive(ART1731BIS) + IPTEFP * 1 - ART1731BIS
SDV = max(0, ABTPA - RNG)
TERPQTSVM = RPQTSVM * 1 - is_positive(INDTEFF) + TRPQTSVM * is_positive(INDTEFF)
INVRETRLRA = min(NINVRETRLR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA)) * 1 - V_CNR
TFRD1REP = is_positive(ART1731BIS) * max(0, max(0, FRN1 - TFRD1) - TPRN1 * 1 - is_positive(FRN1 - TFRD1) * null(TIND_101) + max(0, FRN2 - TFRD2) - TPRN2 * 1 - is_positive(FRN2 - TFRD2) * null(TIND_102) + max(0, FRN3 - TFRD3) - TPRN3 * 1 - is_positive(FRN3 - TFRD3) * null(TIND_103) + max(0, FRN4 - TFRD4) - TPRN4 * 1 - is_positive(FRN4 - TFRD4) * null(TIND_104))
BARREVAC = BACREC + _4BACREC
LIGREPAF = is_positive(REPAF) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RILMJS = max(0, RILMJS_1 * 1 - ART1731BIS + min(RILMJS_1, max(RILMJS_P + RILMJSP2, RILMJS1731 + 0) * 1 - PREM8_11) * ART1731BIS)
PTOCVN = arr(max(0, CVNSALC - COD8YT) * COPETO / 100) + arr(max(0, CVNSALC - COD8YT - CVN9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RLOC67 = max(min(INVRETNW * 1 - INDPLAF + INVRETNWA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66])), 0) * 1 - V_CNR
INVRETAH = min(NINVRETAH, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW - INVRETTB - INVRETAC)) * 1 - V_CNR
RLOC10 = max(min(INVRETLH * 1 - INDPLAF + INVRETLHA * INDPLAF, RRILOC - RLOC01 - RLOC02 - RLOC03 - RLOC04 - RLOC05 - RLOC06 - RLOC07 - RLOC08 - RLOC09), 0) * 1 - V_CNR
QF521 = arr(RB51) / NB2
LIG29 = is_positive(present(RFORDI) + present(RFDHIS) + present(RFDANT) + present(RFDORD)) * 1 - is_positive(IPVLOC) * 1 - is_positive(LIG30) * LIG1 * LIG2 * IND_REV
TPENFV = is_positive(PENSALV) * arr(TPRNV * PEBFV / TEXPRV) + 1 - is_positive(PENSALV) * max(0, TPRNV - TPRRV - TPRR2V - TPRR2ZV)
INVRETQORA = min(NINVRETQOR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA)) * 1 - V_CNR
NRILMIZ = max(min(AILMIZ, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB), 0)
PRR3 = arr(PRN3 * PRB3 / EXPR3)
TERPQRF1M = RPQRF1M * 1 - is_positive(INDTEFF) + TRPQRF1M * is_positive(INDTEFF)
INVRETBBRA = min(NINVRETBBR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA - INVRETAQRA - INVRETAVRA)) * 1 - V_CNR
ZIPQRVO6ANT1 = is_positive(TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * arr(IQUOTOTANT1 * TERPQRVO6 / TETONEQUO1) + 1 - is_positive(TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1 - ZIPQRVO5ANT1 - ZIPQPRRANTZ1TOT
LIGPERPV = is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * 1 - is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFC) * 1 - is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
IND_10V = positif_ou_nul(_10MINSV - FRDV)
IPQPALIM22 = ZIPQPALIM22 * PENSALNBP2
DOMAVTG = arr(BN1 + SPEPV + BI12F + BA1 * TX07 / 100) * is_positive(V_EAG)
SDD = max(0, DAR - RG)
TTSN1DC = max(0, SALEXT2 - COD1DD) - TABTS1DC
LIGRNIDF1 = is_positive(abs(RNIDF1)) * is_positive(is_positive(abs(RNIDF)) + is_positive(FLAGRETARD08 + FLAGDEFAUT11)) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
INVRETPSA = min(arr(NINVRETPS * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA)) * 1 - V_CNR
ZIPQPRRANTZV1 = is_positive(sum([TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPRRZV / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT
# TODO NMAJRSE14
PERP_MUT = is_positive(PERPMUTU) * is_positive(V_0AM + V_0AO) * 1 - is_positive(V_0AC + V_0AD + V_0AV)
TONEQUOM1T = sum([TRPQ1M, TRPQ2M, TRPQ3M, TRPQ4M]) + sum([TRPQFVM, TRPQFCM, TRPQF1M, TRPQF2M, TRPQF3M, TRPQF4M]) + sum([TRPQPALIMVM, TRPQPALIMCM, TRPQPALIM1M, TRPQPALIM2M, TRPQPALIM3M, TRPQPALIM4M]) + sum([TRPQRF1M, TRPQRF2M]) + TRPQRCMDCM + TRPQRCMFUM + TRPQRCMCHM + TRPQRCMTRM + TRPQRCMTSM + TRPQRCMGOM + sum([TRPQPRRVM, TRPQPRRCM, TRPQPRR1M, TRPQPRR2M, TRPQPRR3M, TRPQPRR4M]) + sum([TRPQPRRZVM, TRPQPRRZCM, TRPQPRRZ1M, TRPQPRRZ2M, TRPQPRRZ3M, TRPQPRRZ4M]) + TRPQRVOM + TRPQRVO5M + TRPQRVO6M + TRPQRVO7M + sum([TRPQTSVM, TRPQTSCM, TRPQTS1M, TRPQTS2M, TRPQTS3M, TRPQTS4M]) + sum([TRPQTSREMPVM, TRPQTSREMPCM, TRPQTSREMP1M, TRPQTSREMP2M, TRPQTSREMP3M, TRPQTSREMP4M]) + TRPQRVGM + TRPQRWBM * null(1 - FLAG_EXIT) + TRPQRWBM + TRPQRWAM * null(2 - FLAG_EXIT)
ACELREPYL = CELREPYL * 1 - ART1731BIS + min(CELREPYL, max(ACELREPYL_P + ACELREPYLP2, ACELREPYL1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ABATOT6 = ABADO6 + ABAGU6
RCEL_FD = is_positive(CELLIERFD) * arr(ACELFD * TX24 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RCODJT_1 = max(min(RETCODJT, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV - RLOCIDEFG - RCODJU), 0)
PPE_NBMAJOQAR = positif_ou_nul(PPE_NB_PAC - PPE_NBELIGI) * 0 + 1 - positif_ou_nul(PPE_NB_PAC - PPE_NBELIGI) * PPE_NBELIGI - PPE_NB_PAC
TMIB_APP = min(TMIB_TPRESP, max(MIN_MBIC, arr(TMIB_TPRESP * TX_MIBPRES / 100)))
LIGCIFORET = is_positive(BDCIFORET) * LIG1 * LIG2
QF525 = arr(RB55) / NB2
PPEREVSALC = is_positive(PPESALCTOT * INDLIGPPE + PPESALC * is_positive(PPEPRIMECT) * is_positive(PPETOTX)) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * INDPPEC * INDLIGPPE
NAPSANSPENA = NAPTIR - PIR + PTAXA + PPCAP + PHAUTREV + PTAXLOY * is_positive(abs(NAPTIR))
SPEABNPC = SPEABC - SPEABPC
T2PRBC = CARPEC + PENSALC + CODRBZ
EXOVOUS = present(TSASSUV) + is_positive(XETRANV) + is_positive(EXOCETV) + present(FEXV) + is_positive(MIBEXV) + is_positive(MIBNPEXV) + is_positive(BNCPROEXV) + is_positive(XSPENPV) + is_positive(XBAV) + is_positive(XBIPV) + is_positive(XBINPV) + is_positive(XBNV) + is_positive(XBNNPV) + is_positive(ABICPDECV) * 1 - V_CNR + is_positive(ABNCPDECV) * 1 - V_CNR + is_positive(HONODECV) * 1 - V_CNR + is_positive(AGRIV) + is_positive(BIPERPV) + is_positive(BNCCREAV)
REPMEUIZ = AILMIZ_R - RILMIZ * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
DILMIZ = LOCMEUBIZ
ZIPQTSREMPV2 = is_positive(sum([TEGLTSREMPC, TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * arr(IQUOTOT2 * TERPQTSREMPV / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMPC, TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTS2TOT
RPQPRRZ4M = inf(GLPRRZ4M / CODNFZ)
RIVCELHNO2 = RIVCELHNO1
# TODO BIH2V
RNIDOM3 = arr(RNG + TTPVQ * TX11 / 100)
LIGREPFOR2 = is_positive(REPFOREST2) * LIG1 * LIG2 * 1 - V_CNR
NRCELJBGL = max(min(RCEL_JBGL, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM - NRCEL - NRCELJP), 0)
TSNN1 = is_positive(TS1) * arr(TS1 * TSBN1 / EXTS1) + 1 - is_positive(TS1) * TS1
PPENARPRIMEN = PPE_FORMULEN * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCONDN - 2) * 1 - PPE_BOOL_TPN + arr(PPE_FORMULEN * PPETXMAJ1) + arr(PPE_FORMULEN * PPE_COEFFN * PPETXMAJ2) * is_positive(2 - PPE_COEFFCONDN) * is_positive(PPE_COEFFCONDN - 1) * 1 - PPE_BOOL_TPN + PPE_FORMULEN * is_positive(PPE_BOOL_TPN + positif_ou_nul(1 - PPE_COEFFCONDN))
REPAB = max(0, CODHAB - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1)) * 1 - ART1731BIS + max(0, CODHAB - RLOCENT) * ART1731BIS * 1 - V_CNR
GLRF1M = is_positive(_3REVF) * arr(TONEQUOMHT * _2REVF / TOTALQUOHT) + 1 - is_positive(_3REVF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMTOTM
NAPTOTA = V_IRPSANT - V_ANTRE
ZIPQRVO55 = is_positive(TEGLRVO6M + TEGLRVO7M + TEGLTSTOTM + TEGLTSREMPTOTM) * arr(IQUOTOT5 * TERPQRVO5M / TETONEQUOM1) + 1 - is_positive(TEGLRVO6M + TEGLRVO7M + TEGLTSTOTM + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5 - ZIPQPRRZ5TOT
TGLTSREMPVM = is_positive(TTSNN2REMPC + TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2REMPV / TOTALQUO) + 1 - is_positive(TTSNN2REMPC + TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM
GLRCMTOT = GLRCMDC + GLRCMFU + GLRCMCH + GLRCMGO + GLRCMTR + GLRCMTS
RDRFAPS = max(0, RFCFAPS + RFMIC - MICFR - RFDANT) * 1 - is_positive(ART1731BIS) + max(0, RFCFAPS + RFMIC - MICFR + DEFRF4BD + DEFRF4BC) * is_positive(ART1731BIS)
ZIGRFDEP = is_positive(COD8XK) * 1 - is_positive(COD8YK) * LIG2
IRB2 = IAMD2 + TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES
NINVRETOS = max(min(INVOMLOGOS, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO), 0) * 1 - V_CNR
ZIGPENARSE2 = is_positive(PRSE2) * is_positive(NMAJRSE21) * LIG2
AILMIC = DILMIC * 1 - ART1731BIS + min(DILMIC, max(AILMIC_P + AILMICP2, AILMIC1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
CIHABPRIN = arr(BCIHABPRIN1 * TX40 / 100 + BCIHABPRIN2 * TX40 / 100 + BCIHABPRIN3 * TX30 / 100 + BCIHABPRIN4 * TX25 / 100 + BCIHABPRIN5 * TX20 / 100 + BCIHABPRIN6 * TX15 / 100 + BCIHABPRIN7 * TX10 / 100) * 1 - is_positive(RE168 + TAX1649) * 1 - V_CNR
TEGLPALIMTOTM = TEGLPALIMVM + TEGLPALIMCM + TEGLPALIM1M + TEGLPALIM2M + TEGLPALIM3M + TEGLPALIM4M
BCEL_FD = arr(min(CELLIERFD, LIMCELLIER) / 5)
RCELREP_HV_R = is_positive(CELREPHV) * arr(CELREPHV * TX25 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NINVRETKU = max(min(INVOMENTKU, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT), 0) * 1 - V_CNR
NUREPARTEFRFR = min(NUPROPT, max(0, min(PLAF_NUREPAR, RRBGTEFRFR - RPALETEFRFR - RPALPTEFRFR - RFACCTEFRFR - RDDIVTEFRFR - APERPVTEFRFR - APERPCTEFRFR - APERPPTEFRFR - DDCSG + TOTALQUO - SDD))) * 1 - V_CNR
SPENETP = SPENETPP + SPENETNPP
ACELREPGW = CELREPGW * 1 - ART1731BIS + min(CELREPGW, max(ACELREPGW_P + ACELREPGWP2, ACELREPGW1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NPLOCCGAC = LOCNPCGAC + LOCGITCC - LOCDEFNPCGAC * 1 - is_positive(ART1731BIS * PREM8_11)
TGLN3V = max(GLD3V - TABGL3V, 0)
INVRETUF = min(NINVRETUF, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ - INVRETUA - INVRETUB - INVRETUC - INVRETUD - INVRETUE)) * 1 - V_CNR
ABTSRBJ = is_positive(CARTSC) * is_positive(REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * arr(REP10C * CARTSC / TSBC) + 1 - is_positive(REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * max(0, REP10C - ABTS1BJ - ABTS1BP - ABTS3VK - ABTS1UT)
RLOG33 = max(min(INVRETUA * 1 - INDPLAF + INVRETUAA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32])), 0) * 1 - V_CNR
ICIGLO = min(arr(BPTP18 * TX18 / 100), arr(COD8XF * TX18 / 100)) + min(arr(RCM2FA * TX24 / 100), arr(COD8XV * TX24 / 100)) * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO)) + min(arr(BPTP4I * TX30 / 100), arr(COD8XG * TX30 / 100)) + min(arr(BPTP40 * TX41 / 100), arr(COD8XH * TX41 / 100))
CIRSE8SA = min(RSE8SA, arr(COD8XI * TX066 / 100))
RIVCELHNO5 = RIVCELHNO1
PERP_COND1 = is_positive(PERP_MUT) * 1 - is_positive(PERPIMPATRIE) * is_positive(PERP_COTV - PERPPLATVANT) * is_positive(PERPPLATCANT - PERP_COTC) + is_positive(PERPIMPATRIE) * is_positive(PERP_COTV - PERPPLAFIMPV) * is_positive(PERPPLAFIMPC - PERP_COTC)
CVNBASE = CVNSALC - COD8YT
RCELRREDSOM = sum([RCELRREDLA_1, RCELRREDLB_1, RCELRREDLE_1, RCELRREDLM_1, RCELRREDLN_1, RCELRREDLC_1, RCELRREDLD_1, RCELRREDLS_1, RCELRREDLT_1, RCELRREDLF_1, RCELRREDLZ_1, RCELRREDLX_1]) + RCELRREDMG_1 + RCELRREDMH_1
ZIPQPRRZV1 = is_positive(sum([TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPRRZV / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT
CVNSALC = arr(BCVNSAL * TX10 / 100) * 1 - is_positive(ANNUL2042)
REPPF = max(0, INVOMRETPF - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB)) * 1 - ART1731BIS + max(0, INVOMRETPF - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB)) * ART1731BIS * 1 - V_CNR
LIG2140 = (1 - INDCTX * INDREV1A8 * 1 - is_positive(IRANT) * null(NAPT) * LIG2 + null(IINET + NAPTOTA) * null(INDREV1A8) * is_positive(IND_REV) * is_positive(20 - V_NOTRAIT)) if (V_CR2 + 0 == 0 and NATIMP == 1 and IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + NRINET - NAPTOTA + NAPCR >= SEUIL_12 or V_CR2 + 0 == 1 and NATIMP == 1 or NATIMP == 0 or V_REGCO + 0 == 3 and NRINET + 0 < 12 and CSTOTSSPENA < 61 and LIG2141 + 0 == 0) else 0
TTS3 = TTSN3
# TODO MAJOISFTARDIF_D
LIGDEFNPLOC = is_positive(TOTDEFLOCNP) * 1 - null(4 - V_REGCO)
LIGDFRCM = is_positive(DFRCMN + DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TSNTC = TSN1BJ + TSN1BP + TSN3VK + TSN1UT + TSNRBJ + TSNRBP + TSNDBJ + TSNEBJ + TSNGL1C + TSNGL2C + TSNGL3C
LIGDCSGD = is_positive(DCSGD) * null(5 - V_IND_TRAIT) * INDCTX * LIG1 * LIG2
LIGILMOD = is_positive(DILMOD) * LIG1 * LIG2
IPQRCMTS5 = ZIPQRCMTS5 * DISQUONB
DDEVDUR = CIBOIBAIL + COD7SA + CINRJBAIL + COD7SB + CRENRJ + COD7SC + TRAMURWC + COD7WB + CINRJ + COD7RG + TRATOIVG + COD7VH + CIDEP15 + COD7RH + MATISOSI + COD7RI + TRAVITWT + COD7WU + MATISOSJ + COD7RJ + VOLISO + COD7RK + PORENT + COD7RL + CHAUBOISN + COD7RN + POMPESP + COD7RP + POMPESR + COD7RR + CHAUFSOL + COD7RS + POMPESQ + COD7RQ + ENERGIEST + COD7RT + DIAGPERF + COD7TV + RESCHAL + COD7TW + COD7RV + COD7RW + COD7RZ
# TODO NAPCR61
BAMC = arr(BAHREC - DEFBAHREC * MAJREV) * positif_ou_nul(BARSC) + BARSC * 1 - is_positive(BARSC)
IPQRF21 = ZIPQRF21 * REAMORNB
RFIPDOMCOM = arr(AFIPDOM_1 * TXFIPDOM / 100)
TSNRAP = REMPLAV - ABTSRAP
AFOREST_1 = min(FORTRA, max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR)) * 1 - V_CNR + min(RDFOREST, PLAF_FOREST * 1 + BOOL_0AM)
ZIG_TITRER = is_positive(BRDS + V_RDANT) * 1 - is_positive(BCSG + V_CSANT) * 1 - is_positive(BPRS + V_PSANT) * 1 - is_positive(BCVNSAL + V_CVNANT) * 1 - V_CNR * LIG2
LIG82 = is_positive(present(RDSYVO) + present(RDSYCJ) + present(RDSYPP)) * LIG1 * LIG2
RCELREPHE = max(0, RCELREPHE_1 * 1 - ART1731BIS + min(RCELREPHE_1, max(RCELREPHE_P + RCELREPHEP2, RCELREPHE1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IPQPRRANTZC1 = ZIPQPRRANTZC1 * CODNBZ
CICOMPEMPL = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR - CIGPA - CIDONENTR - CICORSE - CIRECH, COD8UW))
INVRETSQRA = min(NINVRETSQR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA)) * 1 - V_CNR
PPETX1 = PPE_TX1
IPQF35 = ZIPQF35 * COTF3
RCODIW = max(0, RCODIW_1 * 1 - ART1731BIS + min(RCODIW_1, max(RCODIW_P + RCODIWP2, RCODIW1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETQRA = min(NINVRETQR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA)) * 1 - V_CNR
TSNN3 = is_positive(TS3) * arr(TS3 * TSBN3 / EXTS3) + 1 - is_positive(TS3) * TS3
REGVD = NAPREGV - V_REGVANT
ZIPQFANTC1 = is_positive(sum([TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQFC / TETONEQUO1) + 1 - is_positive(sum([TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANTV1
LIGDLMRN2 = is_positive(DLMRN2) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
TPRR2V = is_positive(PEBFV + PENSALV + CODRAZ) * arr(TPRNV * CARPEV / TEXPRV) + 1 - is_positive(PEBFV + PENSALV + CODRAZ) * TPRNV - TPRRV
TEGLF1M = GLF1M * 1 - is_positive(INDTEFF) + TGLF1M * is_positive(INDTEFF)
TXSPEHC = max(0, arr(BNHREC + XHONOC - BNHDEC * 1 - is_positive(ART1731BIS) * MAJREV)) + min(0, BNHREC + XHONOC - BNHDEC * 1 - is_positive(ART1731BIS))
VARD = max(0, min(REPFOR, max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R) - REPSINFOR))
RPQPRRZV = inf(GLPRRZV / CODNAZ)
NPLOCCGASSPAC = LOCNPCGAPAC + LOCGITCP - LOCDEFNPCGAPAC
RPQRCMCHM = inf(GLRCMCHM / PROVIENB)
INVRETRGA = min(NINVRETRG, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA)) * 1 - V_CNR
LIGREPXA = is_positive(REPXA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TSNGL2C = GLD2C - ABGL2C
IND_103 = positif_ou_nul(_10MINS3 - FRD3)
LIGRESTIMO = present(RIMOPPAUANT) + present(RIMOSAUVANT) + present(RESTIMOPPAU) + present(RESTIMOSAUV) + present(RIMOPPAURE) + present(RIMOSAUVRF) + present(COD7SY) + present(COD7SX) * LIG1 * LIG2
RESINEUV5 = arr(arr(ACODIN / 9) * TX20 / 100) + arr(arr(ACODIJ / 9) * TX18 / 100) + arr(arr(ACODIV / 9) * TX18 / 100)
# TODO NAPGLOA
ABTSRCP = max(0, REP101 - ABTS1CJ + ABTS1CP + ABTSRCJ) + 0
XBICNETC = XBICHDC - BICDNC * 1 - is_positive(ART1731BIS)
REPFOREST2 = positif_ou_nul(REPSINFOR + VARD + REPSINFOR1 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * REPFOR1 + 1 - positif_ou_nul(REPSINFOR + VARD + REPSINFOR1 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, REPFOR1 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - REPSINFOR - VARD - REPSINFOR1)) * 1 - V_CNR
GLPRRZ4 = is_positive(REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2Z4 / TOTALQUOHT) + 1 - is_positive(REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV - GLPRRZC - GLPRRZ1 - GLPRRZ2 - GLPRRZ3
TRPQF4 = inf(TGLF4 / COTF4)
TOTDABNCNP = null(4 - V_IND_TRAIT) * DABNCNP6 + DABNCNP5 + DABNCNP4 + DABNCNP3 + DABNCNP2 + DABNCNP1 * 1 - is_positive(ART1731BIS * PREM8_11) + null(5 - V_IND_TRAIT) * max(0, min(DABNCNP6 + DABNCNP5 + DABNCNP4 + DABNCNP3 + DABNCNP2 + DABNCNP1, TOTDABNCNP1731 * ART1731BIS * 1 - PREM8_11 + DABNCNP6 + DABNCNP5 + DABNCNP4 + DABNCNP3 + DABNCNP2 + DABNCNP1 * 1 - is_positive(ART1731BIS * PREM8_11)))
NINVRETLGR = NINVRETLG - arr(NINVRETLG * TX50 / 100) * 1 - V_CNR
CHR9YI = max(0, VAR9YIIR - IR9YI - TAXA9YI - CAP9YI - LOY9YI)
INVRETMAA = min(arr(NINVRETMA * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA)) * 1 - V_CNR
# TODO DRFRP
TSN1CJ = TSHALLO1 - ABTS1CJ
LIGSUP = is_positive(null(V_NOTRAIT - 26) + null(V_NOTRAIT - 36) + null(V_NOTRAIT - 46) + null(V_NOTRAIT - 56) + null(V_NOTRAIT - 66))
NRPROREP = max(min(RETPROREP, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE), 0)
REPBG = max(0, CODHBG - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW - CODHBE - CODHAE - CODHAJ - CODHAO - CODHAT - CODHAY)) * 1 - ART1731BIS + max(0, CODHBG - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW - CODHBE - CODHAE - CODHAJ - CODHAO - CODHAT - CODHAY)) * ART1731BIS * 1 - V_CNR
RPENTCY = RPLAFREPME4
IPQTSANT11 = ZIPQTSANT11 * CARTSNBAP1
INVRETLIRA = min(NINVRETLIR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETMCRA - INVRETLHRA)) * 1 - V_CNR
TRPQPRR3M = inf(TGLPRR3M / CARPENBAP3)
ZIPQPRR42 = is_positive(sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPRR4 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRV2 - ZIPQPRRC2 - ZIPQPRR12 - ZIPQPRR22 - ZIPQPRR32
TPRNNV = TEXPRV - TAPRV
TSQPC = sum([_2TSN1, _2TSN2, _2TSN3, _2TSN4])
CRSE5D = NAPRSE5 - V_RSE5ANT
DSURV = RDRESU
LIGNMAJTAXA4 = TYPE2 * is_positive(NMAJTAXA4)
DRTNC = RCMTNC + REVPEA
# TODO RIVL2
LIGREPAE = is_positive(REPAE) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
MIB_NETVP = MIBVENP - MIB_ABVP
GLFTOTM = sum([GLFVM, GLFCM, GLF1M, GLF2M, GLF3M, GLF4M])
APATNAT1 = PATNAT1 * 1 - ART1731BIS + min(PATNAT1, max(APATNAT1_P + APATNAT1P2, APATNAT11731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
DCELRREDLT = CELRREDLT
TEFFREVRFR = INDTEFF * TBICPF + TBICNPF + TBNN + BIHTAV + BIHTAC + BIHTAP + BIPTAV + BIPTAC + BIPTAP + ESFP + TTSPR + RCM + PLOCNETF + NPLOCNETF + RFNTEO * V_INDTEO + RRFI * 1 - V_INDTEO + PVBAR + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + R1649
XIND_10V = positif_ou_nul(X10MINSV - FRNV)
LIGREPLOCIE = is_positive(LOCMEUBIE) * is_positive(REPLOCIE1 + REPLOCIE2 + REPLOCIE3 + REPLOCIE4 + REPLOCIE5 + REPLOCIE6 + REPLOCIE7 + REPLOCIE8) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
EXO1 = 1 - ART1731BIS * 1 - min(abs(VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS) + VARIPTEFP * is_positive(ART1731BIS) + IPTEFP * 1 - ART1731BIS + INDTEFF, 1) * is_positive(R1649 + PREREV + RG + TOTALQUO + AB * 1 - present(IPVLOC) - SEUILEXO) + min(abs(VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS) + VARIPTEFP * is_positive(ART1731BIS) + IPTEFP * 1 - ART1731BIS + INDTEFF, 1) + ART1731BIS * 1 - min(abs(VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS) + VARIPTEFP * is_positive(ART1731BIS) + IPTEFP * 1 - ART1731BIS + INDTEFF, 1) * is_positive(R1649 + PREREV + RG + SOMDEFICIT + TOTALQUO + AB * 1 - present(IPVLOC) - SEUILEXO) + min(abs(VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS) + VARIPTEFP * is_positive(ART1731BIS) + IPTEFP * 1 - ART1731BIS + INDTEFF, 1)
# TODO MIBDREPV
LIGILMJV = is_positive(DILMJV) * LIG1 * LIG2
IPQTS32 = ZIPQTS32 * CARTSNBAP3
IPQPALIM21 = ZIPQPALIM21 * PENSALNBP2
INVRETQSRA = min(NINVRETQSR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA)) * 1 - V_CNR
NRDUFLOGIH = max(min(RDUFLO_GIH, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI), 0)
LIG4402 = is_positive(V_FORCA) * 1 - positif_ou_nul(BAFC) * LIG0
CGLOAD = NAPGLOA - V_GLOANT
APRC = IND_APBC * ABPRC + 1 - IND_APBC * min(ABPRC, PL_PB - 1 - IND_APBV * APRV)
LIGREPPY = is_positive(REPPY) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RDRCM1NEGAPS = min(0, RDRCM1APS)
LIGTXF225 = is_positive(PEA + 0) * LIG0 * LIG2
XBITV = max(0, XBICNETV + max(0, XBICNPNETV))
AUTOBNCPNET = ABNCPNETV + ABNCPNETC + ABNCPNETP
ZIPQPRRANTC1 = is_positive(sum([TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPRRC / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTV1
LIGREPLOCJS = is_positive(REPLOCNT) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPE_BOOL_NADAV = min(1, is_positive(TSHALLOV + 0) * null(PPETPV + 0) * null(PPENHV + 0) + is_positive(SALEXTV + 0) * null(PPETPV + 0) * null(PPEXTV + 0))
LIGNMAJLOY4 = TYPE2 * is_positive(NMAJLOY4)
ISFTRED = RISFDONF + RISFDONCEE + RISFPMED + RISFPMEI + RISFFIP + RISFFCPI + RISFE
TEGLPRRZC = GLPRRZC * 1 - is_positive(INDTEFF) + TGLPRRZC * is_positive(INDTEFF)
# TODO IRNETBIS
SHBARFRHR = ESFP + TSPR + RCM + BIN + BNN + PLOCNETF + NPLOCNETF + PVBARHR + RRFI
ZIPQRVOANT1 = is_positive(TEGLRVO5 + TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * arr(IQUOTOTANT1 * TERPQRVO / TETONEQUO1) + 1 - is_positive(TEGLRVO5 + TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT1TOT - ZIPQPRRANTZ1TOT
SEUILRED1 = arr(arr(RI1) + REVQUO / NBPT)
PROIMP = positif_ou_nul(PROREST) * CREPROSP - PROREST
XBNP = BNHEXP + BNCEXP
REPMEUTOT2 = REPMEUIP + MEUBLEREP + REPRESIVIEU
ZIGINT222 = is_positive(RETRSE222) * LIG2
INETABADAJ2 = max(0, IPRODOM2 + IQUODAJ2 - ABADO2)
# TODO RPEN
REPXE = max(0, CODHXE - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW - INVOMSOCQX - CODHRA - CODHRB - CODHRC - CODHRD - CODHXA - CODHXB - CODHXC)) * 1 - ART1731BIS + max(0, CODHXE - max(0, RLOGSOC - CODHXA - CODHXB - CODHXC)) * ART1731BIS * 1 - V_CNR
BARSV = BAHREV + _4BAHREV - BAHDEV * 1 - is_positive(ART1731BIS * PREM8_11)
PPENBH3 = PPENHP3 + PPEXT3
TTSN4 = is_positive(TTSNT4) * min(0, TTSNT4 + TPRNN4) + positif_ou_nul(TTSNT4) * TTSNT4
A13RSOC = max(0, arr(RSOC4 + RSOC8 + RSOC34 + RSOC38 - RSOC4 + RSOC8 + RSOC34 + RSOC38 * TX65 / 100)) * 1 - V_CNR * 1 - ART1731BIS
PENALIMC = is_positive(EXPRC) * PRNC - PRRC - PRR2C - PRR2ZC - PENFC
LIGRDUFLOTOT = LIGRDUEKL + LIGRDUGIH
LIGRRCEL43 = is_positive(RRCELLE) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
LIGDEG61 = is_positive(IRNETBIS) * is_positive(SEUIL_61 - IAMD1) * is_positive(SEUIL_61 - NRINET) * is_positive(IBM23) * 1 - is_positive(LIG61DEG) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * is_positive(INDCTX) * LIG2
REPMC = max(0, RETROCOMMC - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - INVOMENTMN - RETROCOMMB)) * 1 - ART1731BIS + max(0, RETROCOMMC - max(0, RCOLENT - REPENT5 - INVOMENTMN - RETROCOMMB)) * ART1731BIS * 1 - V_CNR
LIGREPXB = is_positive(REPXB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TERPQPRRZ3M = RPQPRRZ3M * 1 - is_positive(INDTEFF) + TRPQPRRZ3M * is_positive(INDTEFF)
TABGL3C = is_positive(GLD3C) * max(0, TREP10C - TABTSC - TABDOMDBJ - TABDOMEBJ - TABGL1C - TABGL2C) + 0
IQUOEAJ1 = max(0, IPQ1001 - IQUODAJ1 - IQUORAJ1)
DRESIVIEU = RESIVIEU + RESIVIANT
TOTCRNET = CSNET + RDNET + PRSNET + CVNNET + REGVNET + CDISNET + CGLOANET + RSE1NET + RSE2NET + RSE3NET + RSE4NET + RSE5NET
AREDMEUB = DREDMEUB * 1 - ART1731BIS + min(DREDMEUB, max(AREDMEUB_P + AREDMEUBP2, AREDMEUB1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
TTSNDBJ = CODDBJ - TABDOMDBJ
LIGCVNSAL = is_positive(CVNSALC) * LIG1 * LIG2
PCAPBASE = arr(max(IPCAPTAXT + min(0, IRN - IRANT + TAXASSUR), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
BASSURC2 = max(0, CESSASSC - BASSURC3 - LIM_ASSUR2)
ZIPQANT31 = is_positive(TEGL4 + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQ3 / TETONEQUO1) + 1 - is_positive(TEGL4 + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANTRWB - ZIPQANTRWA - ZIPQANTRVG - sum([ZIPQANT11, ZIPQANT21])
INVRETPLA = min(NINVRETPL, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA)) * 1 - V_CNR
AINVRED = DINVRED * 1 - ART1731BIS + min(DINVRED, max(AINVRED_P + AINVREDP2, AINVRED1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
LIGREPAG = is_positive(REPAG) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
BRFG = min(RDGARD1, PLAF_REDGARD) + min(RDGARD2, PLAF_REDGARD) + min(RDGARD3, PLAF_REDGARD) + min(RDGARD4, PLAF_REDGARD) + min(RDGARD1QAR, PLAF_REDGARDQAR) + min(RDGARD2QAR, PLAF_REDGARDQAR) + min(RDGARD3QAR, PLAF_REDGARDQAR) + min(RDGARD4QAR, PLAF_REDGARDQAR)
LIGRSN0 = is_positive(RINVTPME14) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TGLPALIMV = is_positive(TPENALIMC + TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPENALIMV / TOTALQUO) + 1 - is_positive(TPENALIMC + TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT
# TODO NAPTEMPCX
ZIPQ2TOT = sum([ZIPQ12, ZIPQ22, ZIPQ32, ZIPQ42]) + ZIPQRVG2 + ZIPQRWB2 + ZIPQRWA2
PENF1 = is_positive(PENSALP1) * arr(PRN1 * PEBF1 / EXPR1) + 1 - is_positive(PENSALP1) * PRN1 - PRR1 - PRR21 - PRR2Z1
NINVRETLI = max(min(RETROCOMLI, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH), 0) * 1 - V_CNR
IPQTSREMP31 = ZIPQTSREMP31 * REMPLANBP3
RRESTIMOD = max(min(RESTIMOD * TX40 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1), 0)
RESIMEUB6 = arr(arr(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
RFCFAPS = max(0, RFCEAPS - RFDHIS * 1 - is_positive(PREM8_11))
NRREPNPRO = max(min(RETREPNPRO, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP), 0)
EXSPB4 = EXTS4 + EXPR4
LIGREPTA = is_positive(REPTA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RRIRENOV_1 = max(min(RENOV, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1 - RSOCREPR_1 - RRPRESCOMP_1 - RHEBE_1 - RSURV_1 - RINNO_1 - RSOUFIP_1), 0)
RRI1 = IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV
LIGRCELNBGL = is_positive(RIVCELNBGL1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
ZIPQANT11 = is_positive(sum([TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQ1 / TETONEQUO1) + 1 - is_positive(sum([TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANTRWB - ZIPQANTRWA - ZIPQANTRVG
ZIPQRCMGO5 = is_positive(TEGLRCMTSM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQRCMGOM / TETONEQUOM1) + 1 - is_positive(TEGLRCMTSM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCMDC5 - ZIPQRCMFU5 - ZIPQRCMCH5 - ZIPQRCMTR5
A10RFOR = max(0, min(BA10RFOR, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - A9RFOR)) * 1 - ART1731BIS
LIGREPLOC1 = is_positive(REPLOCN1) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RIV2012CEL3 = RIV2012CEL1
PD10MV = PIND_MINV * PDFNV + 1 - PIND_MINV * P10MINSV
LIGANTREIR = is_positive(V_ANTREIR + 0) * 1 - is_positive(V_ANTCR) * 1 - APPLI_OCEANS
TBNCPABC = arr(TSPEABPC * AUTOBNCC / BNCPROC + AUTOBNCC)
DS025 = max(QF025 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF025 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF025 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF025 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF025 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
REPQR = max(0, INVIMP - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA - INVOMRETPE - INVOMRETPI)) * 1 - ART1731BIS + max(0, INVIMP - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA - INVOMRETPE - INVOMRETPI)) * ART1731BIS * 1 - V_CNR
PERPBNCPNC = BNCEXC + BNCREC - BNCDEC * 1 - is_positive(ART1731BIS) + BNHEXC + BNHREC - BNHDEC * 1 - is_positive(ART1731BIS) + BNCCRC
RCELREP_HR = is_positive(CELREPHR) * arr(ACELREPHR * TX25 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
# TODO TSPRT
NOCEPIMPC = is_positive(ANOVEP - DNOCEPC * 1 - is_positive(ART1731BIS * PREM8_11)) * arr(ANOVEP - DNOCEPC * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV) + positif_ou_nul(DNOCEPC * 1 - is_positive(ART1731BIS * PREM8_11) - ANOVEP) * ANOVEP - DNOCEPC * 1 - is_positive(ART1731BIS * PREM8_11) + BNNAAC
TPMIB_NETVC = MIBVENC + AUTOBICVC - TPMIB_AVC
TERPQTSREMPCM = RPQTSREMPCM * 1 - is_positive(INDTEFF) + TRPQTSREMPCM * is_positive(INDTEFF)
NRCELFABC = max(min(RCEL_FABC, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM - NRCEL - NRCELJP - NRCELJBGL - NRCELJOQR - NRCEL2012 - NRCELFD), 0)
BTP18 = BPV18V + BPV18C * 1 - is_positive(IPVLOC)
INDPPEV = is_positive(PPETPV * PPESALVTOT + PPENBHV * PPESALVTOT + is_positive(present(BPCOSAV) + present(GLDGRATV) + present(GLD1V) + present(GLD2V) + present(GLD3V) + present(TSASSUV) + present(CARTSV) * present(CARTSNBAV) + present(CODDAJ) + present(CODEAJ)) * PPEPRIMEVT + PPEMAJORETTE * null(PPEPRIMECT) + PPEACV + PPENJV * abs(PPERPROV) * null(TSHALLOV + 0) + is_positive(PPETPV + PPENBHV + 0) + abs(PPERPROV) * PPEPRIMEVT + PPEMAJORETTE * null(PPEPRIMECT))
TSPRTOT = sum([TSPRV, TSPRC, TSPR1, TSPR2, TSPR3, TSPR4]) * 1 - ART1731BIS + max(0, TSNNV + PRRV + TSNNC + PRRC + TSNN1 + PRR1 + TSNN2 + PRR2 + TSNN3 + PRR3 + TSNN4 + PRR4) * ART1731BIS
SPEPV = sum([max(0, SPEPVPV + SPEPVNPV), max(0, SPEPVPC + SPEPVNPC), max(0, SPEPVPP + SPEPVNPP)])
RD_BASE = BRDS
INVRETSB = min(arr(NINVRETSB * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU)) * 1 - V_CNR
EXOCET = EXOCETC + EXOCETV
ZIPQRCM2TOT = ZIPQRCMDC2 + ZIPQRCMFU2 + ZIPQRCMCH2 + ZIPQRCMTS2 + ZIPQRCMGO2 + ZIPQRCMTR2
NPLOCNETF3 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(LNPRODEF10, LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF10 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF9, LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF9 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF8, LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF8 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF7, LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF7 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF6, LNPRODEF61731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF6 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF5, LNPRODEF51731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF5 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF4, LNPRODEF41731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF4 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF3, LNPRODEF31731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF3 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF2, LNPRODEF21731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF2 * 1 - is_positive(ART1731BIS * PREM8_11)
LIGRRCEL22 = is_positive(RRCELLZ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
GLRVO7M = is_positive(REVRCM + REVRF) * arr(TONEQUOMHT * _2RV4 / TOTALQUOHT) + 1 - is_positive(REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOM - GLRVO5M - GLRVO6M
REPXC = max(0, CODHXC - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW - INVOMSOCQX - CODHRA - CODHRB - CODHRC - CODHRD - CODHXA - CODHXB)) * 1 - ART1731BIS + max(0, CODHXC - max(0, RLOGSOC - CODHXA - CODHXB)) * ART1731BIS * 1 - V_CNR
ZIGLOCOR = is_positive(ZIGLODD + ZIGLORS) * 1 - null(V_IDGLOANT + DGLOD + 0) * 1 - null(V_IDGLOANT - DGLOD) * is_positive(V_NOTRAIT - 20) * LIG2
REPRCM4 = is_positive(REPRCMBIS) * min(arr(REPRCMBIS * _4RCM_I / RCM_I), REPRCMBIS - REPRCM1 - REPRCM2 - REPRCM3) + 1 - is_positive(REPRCMBIS) * 0
TERPQTSREMP2M = RPQTSREMP2M * 1 - is_positive(INDTEFF) + TRPQTSREMP2M * is_positive(INDTEFF)
LIGIREXI19 = is_positive(IREXITI19) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
XBIPP = BIHEXP + BICEXP
TMIB_ABNPPLC = TMIB_APC - TMIB_ABPC - TMIB_ABNPPC * present(MIBMEUC)
INVRETSUA = min(arr(NINVRETSU * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA)) * 1 - V_CNR
TRPQRWBM = inf(TGLRWBM / CODNWB)
TSNN2TS4 = is_positive(TS4) * is_positive(REMPLAP4) * arr(TS4 * CARTSP4 / EXTS4) + 1 - is_positive(REMPLAP4) * TS4 - TSNN4
PENALIM2 = is_positive(EXPR2) * PRN2 - PRR2 - PRR22 - PRR2Z2 - PENF2
LIGREPHA = is_positive(RINVLOCREA + INVLOGREHA + INVLOCXV + COD7UZ) * LIG1 * LIG2
BCIFORETUI = max(0, min(COD7UI, max(0, PLAF_FOREST2 * 1 + BOOL_0AM))) * 1 - V_CNR
NRILMPE = max(min(AILMPE, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD), 0)
NINVRETBB = max(min(CODHBB, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV), 0) * 1 - V_CNR
NINVRETUC = max(min(CODHUC, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ - NINVRETUA - NINVRETUB), 0) * 1 - V_CNR
TERPQ4RAJV = RPQ4RAJV * 1 - is_positive(INDTEFF) + TRPQ4RAJV * is_positive(INDTEFF)
MIB_NETPP = MIBPRESP - MIB_ABPP
PRNN3 = EXPR3 - APR3
TGLPRRZ2M = is_positive(TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2Z2 / TOTALQUO) + 1 - is_positive(TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM - TGLPRRZCM - TGLPRRZ1M
RSOC30 = arr(max(min(INVRETQXR * 1 - INDPLAF + INVRETQXRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29])), 0)) * 1 - V_CNR
TEGLPRRVM = GLPRRVM * 1 - is_positive(INDTEFF) + TGLPRRVM * is_positive(INDTEFF)
DCELREPGX = CELREPGX
RPQRVO6M = inf(GLRVO6M / RENTAXNB6)
# TODO IINET
NMAJRSE4TOT = NMAJRSE14 + NMAJRSE24 + NMAJRSE34 + NMAJRSE44 + NMAJRSE54
RIVDUEKL = arr(arr(min(DUFLOEL + 0, LIMDUFLO) / 9) * TX29 / 100) + arr(arr(min(DUFLOEK + 0, LIMDUFLO - min(DUFLOEL + PINELQD + PINELQC + 0, LIMDUFLO)) / 9) * TX18 / 100) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
NINVRETSZ = max(min(CODHSZ, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU), 0) * 1 - V_CNR
RSE8SA = arr(BRSE8SA * TXTV / 100) * 1 - is_positive(ANNUL2042)
INVRETXBRA = min(NINVRETXBR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA)) * 1 - V_CNR
RSOC35 = arr(max(min(INVRETRAR * 1 - INDPLAF + INVRETRARA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32, RSOC33, RSOC34])), 0)) * 1 - V_CNR
LIG1500 = is_positive(is_positive(IPMOND) * is_positive(present(IPTEFP) + is_positive(VARIPTEFP) * present(DEFZU)) + is_positive(INDTEFF) * is_positive(TEFFREVTOT)) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * 1 - is_positive(DEFRIMOND) * LIG1 * LIG2
LIGMIBMV = is_positive(BICPMVCTV + BICPMVCTC + BICPMVCTP) * 1 - null(4 - V_REGCO) * LIG0
NINVRETBBR = NINVRETBB - arr(NINVRETBB * TX375 / 100) * 1 - V_CNR
PPE_BOOL_NADA2 = min(1, is_positive(TSHALLO2 + 0) * null(PPETPP2 + 0) * null(PPENHP2 + 0) + is_positive(SALEXT2 + 0) * null(PPETPP2 + 0) * null(PPEXT2 + 0))
ZIPQTS31 = is_positive(TEGLTS4 + TEGLTSREMPTOT) * arr(IQUOTOT1 * TERPQTS3 / TETONEQUO1) + 1 - is_positive(TEGLTS4 + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTSV1 - ZIPQTSC1 - ZIPQTS11 - ZIPQTS21
BTP3A = BN1 + SPEPV + BI12F + BA1 * 1 - is_positive(IPVLOC)
TTSNRBJ = CARTSC - TABTSRBJ
TEGLTSREMP1 = GLTSREMP1 * 1 - is_positive(INDTEFF) + TGLTSREMP1 * is_positive(INDTEFF)
RIVCELNBGL3 = RIVCELNBGL1
PENSTOTC = PRR2C + PRR2ZC + PENALIMC
PPE_RPROC = is_positive(PPE_RPRO1C) * arr(1 + PPETXRPRO / 100 * PPE_RPRO1C) + 1 - is_positive(PPE_RPRO1C) * arr(PPE_RPRO1C * 1 - PPETXRPRO / 100)
TPRRV = arr(TPRNV * PRBV / TEXPRV) + arr(TPRNV * COD1AH / TEXPRV)
ZIPQTSREMP32 = is_positive(TEGLTSREMP4) * arr(IQUOTOT2 * TERPQTSREMP3 / TETONEQUO1) + 1 - is_positive(TEGLTSREMP4) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTS2TOT - ZIPQTSREMPV2 - ZIPQTSREMPC2 - ZIPQTSREMP12 - ZIPQTSREMP22
MIB_NETNPVLP = MIBGITEP + LOCGITP - MIB_ABNPVLP
D10M2 = IND_MIN2 * DFN2 + 1 - IND_MIN2 * _10MINS2
RIVCELFD4 = arr(min(CELLIERFD, LIMCELLIER) * is_positive(CELLIERFD) * TX24 / 100) - 4 * RIVCELFD1 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RDUFLOEKL_1 = max(0, min(RDUFLO_EKL, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFREPFI - RDUFLOGIH))
LIGREPSP = is_positive(REPSP) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
XDFN2 = min(PLAF_DEDFORFTS, XTPS102)
# TODO DEFRF4BB
NINVRETOO = max(min(INVOMLOGOO, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL), 0) * 1 - V_CNR
IQNETEAJ31 = max(0, INETABAEAJ31 - IQNETDAJ31)
REPAC = max(0, CODHAC - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA)) * 1 - ART1731BIS + max(0, CODHAC - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA)) * ART1731BIS * 1 - V_CNR
TSNN2P = sum([TSNN21, TSNN22, TSNN23, TSNN24])
NINVRETPNR = NINVRETPN - arr(NINVRETPN * TX50 / 100) * 1 - V_CNR
# TODO INDTXMIN
CSPROVRSE2 = CSPROVYF + CSPROVYN
ABTPATEFRFR = NDA * NABTEFRFR * ABAT_UNVIEUX * 1 - V_CNR
LIG61NRSUP = is_positive(IBM23) * is_positive(ITRED) * is_positive(IAVIM + NAPCRPAVIM) * is_positive(SEUIL_61 - IAVIM + NAPCRPAVIM) * 1 - is_positive(INDNMR2) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * 1 - is_positive(NRINET) * is_positive(V_NOTRAIT - 20) * LIG2
INVRETOIA = min(NINVRETOI, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA)) * 1 - V_CNR
TGLTSTOT = sum([TGLTSV, TGLTSC, TGLTS1, TGLTS2, TGLTS3, TGLTS4])
TEGLRCMCH = GLRCMCH * 1 - is_positive(INDTEFF) + TGLRCMCH * is_positive(INDTEFF)
GLTSREMP1 = is_positive(TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2REMP1 / TOTALQUOHT) + 1 - is_positive(TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV - GLTSREMPC
RVBCSG = arr(RVB1 + RENTAX * TXRVT1 / 100) + arr(RVB2 + RENTAX5 * TXRVT2 / 100) + arr(RVB3 + RENTAX6 * TXRVT3 / 100) + arr(RVB4 + RENTAX7 * TXRVT4 / 100)
BREGV = COD2LA * 1 - V_CNR * 1 - is_positive(present(TAX1649) + present(RE168))
REPST = max(0, CODHST - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW - CODHTB - CODHSE - CODHSJ - CODHSO)) * 1 - ART1731BIS + max(0, CODHST - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW - CODHTB - CODHSE - CODHSJ - CODHSO)) * ART1731BIS * 1 - V_CNR
NINVRETXAR = NINVRETXA - arr(NINVRETXA * TX35 / 100) * 1 - V_CNR
PPE_SALAVDEF1 = TSHALLO1 + CARTSP1 * is_positive(CARTSNBAP1) + SALEXT1
ARESIVIEU = ARESIVIEU_1 * 1 - ART1731BIS + min(ARESIVIEU_1, max(ARESIVIEU_P + ARESIVIEUP2, ARESIVIEU1731 + 0) * 1 - PREM8_11) * ART1731BIS
RETRESIMEUB = arr(ARESIMEUB * TX25 / 100)
LIGNMAJLOY1 = TYPE2 * is_positive(NMAJLOY1)
REPQU = max(0, INVOMSOCQU - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010)) * 1 - ART1731BIS + max(0, INVOMSOCQU - max(0, RDOMSOC1 - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010)) * ART1731BIS * 1 - V_CNR
INVRETALA = min(arr(NINVRETAL * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA)) * 1 - V_CNR
LIGCHR17281 = TYPE2 * is_positive(NMAJCHR1)
RISFDONF = max(min(RISFDONF_2, ISFBRUT), 0) * is_positive(1 - null(CODE_2042 - 8) * 1 - null(CMAJ_ISF - 8) * 1 - null(CMAJ_ISF - 34)) + max(min(RISFDONF_2, ISFBRUT), 0) * 1 - is_positive(1 - null(CODE_2042 - 8) * 1 - null(CMAJ_ISF - 8) * 1 - null(CMAJ_ISF - 34)) * COD9ZA
LIGNMAJTAXA1 = TYPE2 * is_positive(NMAJTAXA1)
PERPREVTOTP = max(0, PERPSALNP + PERPNONSALP)
RPQTS4M = inf(GLTS4M / CARTSNBAP4)
TERPQRVO7 = RPQRVO7 * 1 - is_positive(INDTEFF) + TRPQRVO7 * is_positive(INDTEFF)
TEGLRF2 = GLRF2 * 1 - is_positive(INDTEFF) + TGLRF2 * is_positive(INDTEFF)
TEGLPALIMVM = GLPALIMVM * 1 - is_positive(INDTEFF) + TGLPALIMVM * is_positive(INDTEFF)
ZIG_CTRIANT = is_positive(V_ANTCR) * TYPE2
NABTEFRFR = min(max(LIM_ABTRNGDBL + 1 - RNGTEFRFR + TOTALQUO - SDD - SDC, 0), 1) + min(max(LIM_ABTRNGSIMP + 1 - RNGTEFRFR + TOTALQUO - SDD - SDC, 0), 1)
BINHTAC = max(0, arr(BICHREC - BICHDEC * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV)) + min(0, BICHREC - BICHDEC * 1 - is_positive(ART1731BIS * PREM8_11))
TEGLPRRZ3M = GLPRRZ3M * 1 - is_positive(INDTEFF) + TGLPRRZ3M * is_positive(INDTEFF)
INETABADAJ4 = max(0, IPRODOM4 - ABADO4)
TXSPENET = sum([TXSPENETV, TXSPENETC, TXSPENETP])
GLRF2M = TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMTOTM - GLRF1M
RIVCELHJK4 = RIVCELHJK1
INVRETPAR = min(arr(INVRETPA * 10 / 9), NINVRETPA - INVRETPA) * 1 - null(1 - abs(arr(INVRETPA * 10 / 9) - NINVRETPA - INVRETPA)) + NINVRETPA - INVRETPA * null(1 - abs(arr(INVRETPA * 10 / 9) - NINVRETPA - INVRETPA)) * 1 - V_CNR
RSOC24 = arr(max(min(INVRETQS * 1 - INDPLAF + INVRETQSA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23])), 0)) * 1 - V_CNR
BNRP = BNNSP + BNNAP
TABGLTV = sum([TABGL1V, TABGL2V, TABGL3V]) + TABDOMDAJ + TABDOMEAJ
GLRVO5 = is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * arr(TONEQUOHT * _2RV2 / TOTALQUOHT) + 1 - is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVO
NINVRETPP = max(min(INVOMRETPP, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU), 0) * 1 - V_CNR
INVRETTARA = min(NINVRETTAR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA)) * 1 - V_CNR
PENF2 = is_positive(PENSALP2) * arr(PRN2 * PEBF2 / EXPR2) + 1 - is_positive(PENSALP2) * PRN2 - PRR2 - PRR22 - PRR2Z2
NINVRETKS = max(min(INVENDI, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG), 0) * 1 - V_CNR
_2TSN1 = CARTSP1 + REMPLAP1
RDDIVTEF = max(min(DEDIV * 1 - V_CNR, RBGTEF - RPALETEF - RPALPTEF - RFACCTEF - DDCSG + TOTALQUO - SDD), 0)
REPSO = max(0, CODHSO - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW - CODHTB - CODHSE - CODHSJ)) * 1 - ART1731BIS + max(0, CODHSO - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW - CODHTB - CODHSE - CODHSJ)) * ART1731BIS * 1 - V_CNR
BINTTAV = BINTAV + BI2AV
RSE5AC = max(0, RSE5 - CIRSE5)
FRG5 = is_positive(EXFR) * max(0, EXFR - FRG1 - FRG2 - FRG3) + 1 - is_positive(EXFR) * 0
RLOC30 = max(min(INVRETQR * 1 - INDPLAF + INVRETQRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29])), 0) * 1 - V_CNR
PPE_SALAVDEF4 = TSHALLO4 + CARTSP4 * is_positive(CARTSNBAP4) + SALEXT4
# TODO SPEDREPNPP
BCEL_HM = arr(min(CELLIERHM + 0, LIMCELLIER) / 9)
LIGF10C = is_positive(F10AC + F10BC) * LIG0 * LIG2
REPRU = max(0, INVOMENTRU - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP)) * 1 - ART1731BIS + max(0, INVOMENTRU - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP)) * ART1731BIS * 1 - V_CNR
TABTS1AJ = is_positive(SALEXTV + ALLOV + BPCOSAV + GLDGRATV + CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * arr(TREP10V * TSHALLOV / TTSBV) + 1 - is_positive(SALEXTV + ALLOV + BPCOSAV + GLDGRATV + CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * TREP10V
# TODO CIRDSAC
TSNN21AFF = is_positive(TS1) * is_positive(CARTSP1 + REMPLAP1) * arr(TS1 * _2TSN1 / EXTS1) + 1 - is_positive(CARTSP1 + REMPLAP1) * TS1 - TSNN1
TEGLTS3M = GLTS3M * 1 - is_positive(INDTEFF) + TGLTS3M * is_positive(INDTEFF)
RCODJT3 = RCODJT1
# TODO PPESALPTOT
LIG01 = 1 - is_positive(RE168 + TAX1649) * 1 - is_positive(ANNUL2042) * IND_REV
NRCELREPGS = max(min(ACELREPGS, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT])), 0)
TONEQUO = max(0, TOTALQUO - SDD + SDC + SDV + SDM * 1 - is_positive(VARIPTEFP * is_positive(ART1731BIS) + IPTEFP * 1 - ART1731BIS + VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS + TEFFREVTOT * INDTEFF) - VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS)
NINVRETAQ = max(min(CODHAQ, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL), 0) * 1 - V_CNR
RDUFLOTOT = RDUFREPFI + RDUFLOGIH + RDUFLOEKL
TEXPR4 = TPRB4 + COD1FH + T2PRB4 + PEBF4
ZIGRSE4 = is_positive(BRSE4) * LIG2
# TODO IND_REV8FV
ZIGMONTS = is_positive(BCVNSAL + V_CVNANT)
# TODO RIVL3RES
INVRETQKR = min(max(min(arr(INVRETQK * 13 / 7), NINVRETQK - INVRETQK), NINVRETQK - INVRETQK), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR)) * 1 - V_CNR
NRILMIA = max(min(AILMIA, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB), 0)
# TODO NAPRSE2
TEGL2M = GL2M * 1 - is_positive(INDTEFF) + TGL2M * is_positive(INDTEFF)
IMTANT11 = max(IDANT11 - ADO1, IMI) * 1 - INDTXMOY + IMO * INDTXMOY
PENSTOTV = PRR2V + PRR2ZV + PENALIMV
TSPENETPV = max(0, BNCPROV + AUTOBNCV - TSPEABPV)
DFN1 = min(PLAF_DEDFORFTS, TPS101)
INVRETRDR = min(max(min(arr(INVRETRD * 13 / 7), NINVRETRD - INVRETRD), NINVRETRD - INVRETRD), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR - INVRETRBR - INVRETRCR)) * 1 - V_CNR
TABTS1CC = is_positive(ALLO1 + CARTSP1 + REMPLAP1) * arr(TREP101 * max(0, SALEXT1 - COD1CD) / TTSB1) + 1 - is_positive(ALLO1 + CARTSP1 + REMPLAP1) * max(0, TREP101 - TABTS1CJ)
NINVRETRO = max(min(INVOMENTRO, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI), 0) * 1 - V_CNR
TPRNN2 = TEXPR2 - TAPR2
LIGCELYL = is_positive(DCELREPYL) * LIG1 * LIG2
DCELRREDLX = CELRREDLX
INVRETSGA = min(arr(NINVRETSG * TX375 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA)) * 1 - V_CNR
LIGISFNET = is_positive(PISF) * is_positive(DISFBASE) * 1 - null(5 - V_IND_TRAIT) * 1 - is_positive(SEUIL_12 - ISF4BIS) * 1 - null(ISF5) * 1 - is_positive(ANNUL2042) * LIGISF + null(5 - V_IND_TRAIT) * is_positive(LIGISFRET + LIGNMAJISF1) * is_positive(ISFNAP) * 1 - is_positive(SEUIL_12 - ISFNAP) * 1 - is_positive(INDCTX23)
CIDEVDUR = arr(BDEV30 * TX30 / 100 + BDEV25 * TX25 / 100 + BDEV15 * TX15 / 100) * 1 - is_positive(RE168 + TAX1649) * 1 - V_CNR
TPRB1 = PRBR1 + PALI1 + PENIN1
RILMPE = max(min(AILMPE, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD), 0)
SPENETC = SPENETPC + SPENETNPC
LIGNETARECS = is_positive(IINET) * LIGPS * is_positive(ANNUL2042) * TYPE2
RCELRREDLZ_1 = max(min(ACELRREDLZ, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1 - RCELRREDLS_1 - RCELRREDLT_1 - RCELRREDLF_1), 0)
RSOC23 = arr(max(min(INVRETQJ * 1 - INDPLAF + INVRETQJA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22])), 0)) * 1 - V_CNR
INVRETALRA = min(NINVRETALR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA)) * 1 - V_CNR
NINVRETOJ = max(min(INVOMLOGOJ, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI), 0) * 1 - V_CNR
LIGREPNY = is_positive(REPNY) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RILMOA = max(min(AILMOA, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB), 0)
LIGPLAFRSN = is_positive(PLAFREPSN4 + PLAFREPSN3) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TABPR3 = arr(1 - TIND_APB3 * min(TAPB3, is_positive(TEXPR4) * TPL_PB * TAPB3 / sum([TAPBV * 1 - TIND_APBV, TAPBC * 1 - TIND_APBC, TAPB1 * 1 - TIND_APB1, TAPB2 * 1 - TIND_APB2, TAPB3 * 1 - TIND_APB3, TAPB4 * 1 - TIND_APB4]) + 1 - is_positive(TEXPR4) * max(0, TPL_PB - TABPRV - TABPRC - TABPR1 - TABPR2)) + TIND_APB3 * TAPB3)
BIHTAP = max(0, arr(BIHNOP - BIHDNP * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV)) + min(0, BIHNOP - BIHDNP * 1 - is_positive(ART1731BIS * PREM8_11))
PPETEMPSN = arr(1 / PPE_COEFFN * 100)
LIG2RCMABT = is_positive(present(REVACT) + present(REVPEA) + present(PROVIE) + present(DISQUO) + present(RESTUC) + present(INTERE)) * 1 - is_positive(IPVLOC) * LIG1 * LIG2 * is_positive(INDREV1A8IR)
REPMEUOC = DILMOC - RILMOC * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RCELTOT_1 = RCELRREDSOM + sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) + sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) + sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) + RCELHM_1 + RCELHL_1 + RCELHNO_1 + RCELHJK_1 + RCELNQ_1 + RCELNBGL_1 + RCELCOM_1 + RCEL_1 + RCELJP_1 + RCELJBGL_1 + RCELJOQR_1 + RCEL2012_1 + RCELFD_1 + RCELFABC_1
_1RNC = RCMRNTNC
RSOC17 = arr(max(min(INVRETQN * 1 - INDPLAF + INVRETQNA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16])), 0)) * 1 - V_CNR
LIGINRPCAP = is_positive(RETPCAP)
DTOUREPA = RINVLOCREA + INVLOGREHA + INVLOCXV + COD7UZ
SOMMELOC = MIBMEUV + MIBMEUC + MIBMEUP + MIBGITEV + MIBGITEC + MIBGITEP + LOCGITV + LOCGITC + LOCGITP + LOCNPCGAV + LOCNPV + LOCNPCGAC + LOCNPC + LOCNPCGAPAC + LOCNPPAC + LOCGITCV + LOCGITHCV + LOCGITCC + LOCGITHCC + LOCGITCP + LOCGITHCP + 0
NINVRETAQR = NINVRETAQ - arr(NINVRETAQ * TX375 / 100) * 1 - V_CNR
RCODOU1 = arr(ACODOU * TX11 / 100)
# TODO TAXLOYNET
FPT3 = max(FRD3, _10MINS3)
TTSNRCP = REMPLAP1 - TABTSRCP
TMIB_AUTOAPP = TMIB_APP - TMIB_PRESAP
NRCELREPHU = max(min(RCELREP_HU, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR])), 0)
TTSNN2TS2 = is_positive(TTS2) * is_positive(REMPLAP2) * arr(TTS2 * CARTSP2 / TEXTS2) + 1 - is_positive(REMPLAP2) * TTS2 - TTSNN2
# TODO TAXLOY
REPLOCJU = RETCODJU - RCODJU * is_positive(LOCMEUBJU + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NINVRETTD = max(min(CODHTD, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY), 0) * 1 - V_CNR
REPLH = max(0, RETROCOMLH - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - INVOMENTMN - RETROCOMMB - RETROCOMMC)) * 1 - ART1731BIS + max(0, RETROCOMLH - max(0, RCOLENT - REPENT5 - INVOMENTMN - RETROCOMMB - RETROCOMMC)) * ART1731BIS * 1 - V_CNR
ZIGINT4 = is_positive(RETRSE4) * LIG2
PCAPBASE_INR = arr(max(IPCAPTAXT - CAP9YI + min(0, IRN - IRANT + TAXASSUR), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
RLOG24 = max(min(INVRETOV * 1 - INDPLAF + INVRETOVA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23])), 0) * 1 - V_CNR
REPLOCIO = RETRESIMEUB_1 - RRESIMEUB * is_positive(VIEUMEUB + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGPPEVC = is_positive(INDPPEV) * is_positive(INDPPEC) * null(INDPPEP) * TYPEPPE
LIGREPPJ = is_positive(REPPJ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RCELREPYG_1 = max(min(ACELREPYG, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IPQ11 = ZIPQ11 * 1
NONLIGPS = is_positive(is_positive(1 - LIGPS) + is_positive(null(V_NOTRAIT - 23) + null(V_NOTRAIT - 33) + null(V_NOTRAIT - 43) + null(V_NOTRAIT - 53) + null(V_NOTRAIT - 63)))
XBNNPV = BNCNPREXV + BNCNPREXAAV
# TODO REPAR4
PLOCV = min(0, LOCPROV - LOCDEFPROV * 1 - is_positive(ART1731BIS * PREM8_11)) * positif_ou_nul(LOCDEFPROV * 1 - is_positive(ART1731BIS * PREM8_11) - LOCPROV) + arr(max(0, LOCPROV - LOCDEFPROV * 1 - is_positive(ART1731BIS * PREM8_11)) * MAJREV) * is_positive(LOCPROV - LOCDEFPROV * 1 - is_positive(ART1731BIS * PREM8_11))
TDEDMINV = is_positive(DETSV) * MIN_DEMEMPLOI + 1 - is_positive(DETSV) * MIN_DEDSFORFTS
DCOLENT = INVOMREP + NRETROC50 + NRETROC40 + INVENDI + INVOMENTMN + RETROCOMLH + RETROCOMMB + INVOMENTKT + RETROCOMLI + RETROCOMMC + INVOMENTKU + INVOMQV + INVENDEB2009 + INVRETRO1 + INVRETRO2 + INVIMP + INVDOMRET50 + INVDOMRET60 + INVDIR2009 + INVOMRETPA + INVOMRETPB + INVOMRETPD + INVOMRETPE + INVOMRETPF + INVOMRETPH + INVOMRETPI + INVOMRETPJ + INVOMRETPL + INVOMRETPM + INVOMRETPN + INVOMRETPO + INVOMRETPP + INVOMRETPR + INVOMRETPS + INVOMRETPT + INVOMRETPU + INVOMRETPW + INVOMRETPX + INVOMRETPY + INVOMENTRG + INVOMENTRI + INVOMENTRJ + INVOMENTRK + INVOMENTRL + INVOMENTRM + INVOMENTRO + INVOMENTRP + INVOMENTRQ + INVOMENTRR + INVOMENTRT + INVOMENTRU + INVOMENTRV + INVOMENTRW + INVOMENTRY + INVOMENTNU + INVOMENTNV + INVOMENTNW + INVOMENTNY + CODHSA + CODHSB + CODHSC + CODHSE + CODHSF + CODHSG + CODHSH + CODHSJ + CODHSK + CODHSL + CODHSM + CODHSO + CODHSP + CODHSQ + CODHSR + CODHST + CODHSU + CODHSV + CODHSW + CODHSY + CODHSZ + CODHTA + CODHTB + CODHTD
NINVRETQE = max(min(INVENDEB2009, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN), 0) * 1 - V_CNR
INVRETPU = min(NINVRETPU, max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP)) * 1 - V_CNR
RILMIH_1 = max(min(AILMIH, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED), 0)
NINVRETTA = max(min(CODHTA, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV), 0) * 1 - V_CNR
LIGPV3SB = is_positive(PVBAR3SB) * LIG1 * LIG2 * 1 - null(4 - V_REGCO)
SPENETCT = BNCPROPVV + BNCPROPVC + BNCPROPVP - BNCPMVCTV - BNCPMVCTC - BNCPMVCTP
ZIPQRCMTSANT1 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQRCMTS / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMDCANT1 - ZIPQRCMFUANT1 - ZIPQRCMCHANT1 - ZIPQRCMTRANT1 - ZIPQRCMGOANT1
REPCELJP = sum([RIVCELJP1, RIVCELJP2, RIVCELJP3]) + RIVCELJP4
ZIGCOD8YL = is_positive(COD8YL) * TYPE2
TSNN2PAFF = sum([TSNN21AFF, TSNN22AFF, TSNN23AFF, TSNN24AFF])
MIB_TTV = MIB_TVENV + MIB_TPRESV
PLOCNETPAC = PLOCCGAPAC + PLOCPAC
PPE_BOOL_MINC = positif_ou_nul(PPE_RTAC - PPELIMRPB) * 1 - PPE_BOOL_NADAC
LIGREPAM = is_positive(REPAM) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
NINVRETQW = max(min(INVOMSOCQW, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS), 0) * 1 - V_CNR
ACELREPHV = CELREPHV * 1 - ART1731BIS + min(CELREPHV, max(ACELREPHV_P + ACELREPHVP2, ACELREPHV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TRPQRVG = inf(TGLRVG / CODNVG) + 0
RRCELMG = max(0, CELRREDMG - RCELRREDMG) * is_positive(CELRREDMG) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TGLTS3M = is_positive(TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2TS3 / TOTALQUO) + 1 - is_positive(TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM - TGLTSCM - TGLTS1M - TGLTS2M
TGLTSREMPC = is_positive(TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2REMPC / TOTALQUO) + 1 - is_positive(TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV
NPLOCNETF4 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(LNPRODEF10, LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF10 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF9, LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF9 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF8, LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF8 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF7, LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF7 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF6, LNPRODEF61731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF6 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF5, LNPRODEF51731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF5 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF4, LNPRODEF41731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF4 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF3, LNPRODEF31731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF3 * 1 - is_positive(ART1731BIS * PREM8_11)
LIG134V = is_positive(present(BAFV) + present(BAHREV) + present(BAHDEV) + present(BACREV) + present(BACDEV) + present(BAFPVV) + present(BAFORESTV))
ABTSRCJ = is_positive(CARTSP1) * is_positive(REMPLAP1) * arr(REP101 * CARTSP1 / TSB1) + 1 - is_positive(REMPLAP1) * max(0, REP101 - ABTS1CJ - ABTS1CP)
RENT07 = max(min(INVRETAA * 1 - INDPLAF + INVRETAAA * INDPLAF, RRIRENT - sum([RENT01, RENT02, RENT03, RENT04, RENT05, RENT06])), 0) * 1 - V_CNR
RPQPALIM4 = inf(GLPALIM4 / PENSALNBP4)
TTSPRD1 = min(0, TTSNN1 + TPRR1) * ART1731BIS
RCELREPYE = max(0, RCELREPYE_1 * 1 - ART1731BIS + min(RCELREPYE_1, max(RCELREPYE_P + RCELREPYEP2, RCELREPYE1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RDPTP = BAF1AV + BAF1AC + BAF1AP + BA1AV + BA1AC + BA1AP + max(0, MIB1AV - MIBDEV) + max(0, MIB1AC - MIBDEC) + max(0, MIB1AP - MIBDEP) + BI1AV + BI1AC + BI1AP + max(0, MIBNP1AV - MIBNPDEV) + max(0, MIBNP1AC - MIBNPDEC) + max(0, MIBNP1AP - MIBNPDEP) + BI2AV + BI2AC + BI2AP + max(0, BNCPRO1AV - BNCPRODEV) + max(0, BNCPRO1AC - BNCPRODEC) + max(0, BNCPRO1AP - BNCPRODEP) + BN1AV + BN1AC + BN1AP + max(0, BNCNP1AV - BNCNPDEV) + max(0, BNCNP1AC - BNCNPDEC) + max(0, BNCNP1AP - BNCNPDEP) + PVINVE + PVINCE + PVINPE + PVSOCV + PVSOCC
IPQRCMDCANT1 = ZIPQRCMDCANT1 * REVACTNB
LIGIREXITS = is_positive(IREXITS) * 1 - is_positive(IREXITI) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
B3SVN = CVNSALAV + CVNSALAC * 1 - is_positive(present(TAX1649) + present(RE168))
TSNN2TS1 = is_positive(TS1) * is_positive(REMPLAP1) * arr(TS1 * CARTSP1 / EXTS1) + 1 - is_positive(REMPLAP1) * TS1 - TSNN1
LIGPPENSV = is_positive(is_positive(is_positive(1 - null(PPE_AVRPRO1V + 0)) * is_positive(is_positive(PPETOTX) + is_positive(PPEREVSALV)) * is_positive(INDLIGPPE)) + is_positive(PPESAISITPV + PPESAISINBJV)) * INDPPEV * LIG0 * LIG2
ZIPQRFANT11 = is_positive(TEGLRF2 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * arr(IQUOTOTANT1 * TERPQRF1 / TETONEQUO1) + 1 - is_positive(TEGLRF2 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT
IPQPRRZ45 = ZIPQPRRZ45 * CODNFZ
TEGLRVO = GLRVO * 1 - is_positive(INDTEFF) + TGLRVO * is_positive(INDTEFF)
# TODO NMAJCVN4
TGLPALIM1 = is_positive(TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPENALIM1 / TOTALQUO) + 1 - is_positive(TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV - TGLPALIMC
IPQANT41 = ZIPQANT41 * 4
TRPQRWB = inf(TGLRWB / CODNWB) + 0
LOYBASE = arr(max(TAXLOY + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
MIB_ABNPVLP = MIB_AVP - MIB_ABVP - MIB_ABNPVP * is_positive(present(MIBGITEP) + present(LOCGITP))
LIGPRETUD = is_positive(PRETUD + PRETUDANT) * LIG1 * LIG2
PMIB_APC = min(MIBPRESC, max(MIN_MBIC, arr(MIBPRESC * TX_MIBPRES / 100)))
AIDREST = is_positive(REST) * max(0, min(CIGE, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - IPELUS - CITEC - CIDEVDUR))
IND_CTXP = is_positive(CS_DEG) * is_positive(BPRS) * is_positive(INDCTX)
LIGCRED3 = is_positive(REGCI + LIGPVETR + LIGCICAP + LIGREGCI + LIGCI8XV + LIGCIGLO + 0) * is_positive(IPSOUR + LIGCULTURE + LIGMECENAT + LIGCORSE + LIG2305 + LIGEMPLOI + LIGCI2CK + LIGBPLIB + LIGCIGE + LIGDEVDUR + LIGCICA + LIGCIGARD + LIG82 + LIGPRETUD + LIGSALDOM + LIGCIFORET + LIGHABPRIN + LIGCREFAM + LIGCREAPP + LIGCREBIO + LIGPRESINT + LIGCREPROSP + LIGINTER + LIGRESTAU + LIGCONGA + LIGMETART + LIGCREFORM + LIGLOYIMP + LIGVERSLIB + LIGCITEC + 0)
BCEL_JBGL = arr(min(CELLIERJB + CELLIERJG + CELLIERJL + 0, LIMCELLIER) / 9)
RCELREPYI = max(0, RCELREPYI_1 * 1 - ART1731BIS + min(RCELREPYI_1, max(RCELREPYI_P + RCELREPYIP2, RCELREPYI1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIGPROVYE = is_positive(CSPROVYE) * TYPE2
NINVRETQM = max(min(INVLGDEB2010, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL), 0) * 1 - V_CNR
IPCAPTAXTOT = sum([IPCAPTAXV, IPCAPTAXC])
ZIPQRFANT1TOT = sum([ZIPQRFANT11, ZIPQRFANT21])
TABTS1UT = is_positive(CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * arr(TREP10C * GLDGRATC / TTSBC) + 1 - is_positive(CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * max(0, TREP10C - TABTS1BJ - TABTS1BC - TABTS1BP - TABTS3VK)
TAPERPC = 1 - V_CNR * max(min(RPERPC, RBG * 1 - INDTEFF + TEFFREVTOT3 - RPALE - RPALP - RFACC - RDDIV - DDCSG + TOTALQUO - SDD - APERPV), 0)
LIGNBPAGESISF = is_positive(NBLIGNESISF - 41 + 0)
PLOCNETC = PLOCCGAC + PLOCC
NINVRETAH = max(min(CODHAH, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC), 0) * 1 - V_CNR
PPE_RPROV = is_positive(PPE_RPRO1V) * arr(1 + PPETXRPRO / 100 * PPE_RPRO1V) + 1 - is_positive(PPE_RPRO1V) * arr(PPE_RPRO1V * 1 - PPETXRPRO / 100)
NRILMIC = max(min(AILMIC, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU), 0)
SOMDEFBNC = BNCDEV + BNHDEV + BNCDEC + BNHDEC + BNCDEP + BNHDEP
REPLOCIM = RETCODIM - RCODIM * is_positive(RESIVIEU + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPENEXOV = null(PPETPV + 0) + is_positive(TSHALLOV + 0) + is_positive(SALEXTV + 0) + 4 * is_positive(PPENHV + 0) + 8 * is_positive(PPEXTV + 0)
TABTS1BC = is_positive(ALLOC + BPCOSAC + GLDGRATC + CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * arr(TREP10C * max(0, SALEXTC - COD1BD) / TTSBC) + 1 - is_positive(ALLOC + BPCOSAC + GLDGRATC + CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * max(0, TREP10C - TABTS1BJ)
PPENATREST = is_positive(IRE) * is_positive(IREST) * 1 - null(2 - V_REGCO) * null(IRE - PPETOTX + PPERSA) * 1 * 1 + 1 - is_positive(PPETOTX - PPERSA) * 2 + null(IRE) * 1 - is_positive(PPETOTX - PPERSA) * 3 + is_positive(PPETOTX - PPERSA) * is_positive(IRE - PPETOTX + PPERSA) * 4 + 2 * null(2 - V_REGCO)
LIGNMAJISF1 = is_positive(NMAJISF1) * 1 - is_positive(ANNUL2042) * LIGISF * 1 - is_positive(SEUIL_12 - ISF4BIS) * 1 - null(ISF5)
FRG1 = is_positive(EXFR) * arr(EXFR * TRCM1 / TRCM) + 1 - is_positive(EXFR) * 0
TXTOISF = RETXISF + COPETOISF
DCELREPHX = CELREPHX
ABGLTC = sum([ABGL1C, ABGL2C, ABGL3C]) + ABDOMDBJ + ABDOMEBJ
XDFNC = min(PLAF_DEDFORFTS, XTPS10C)
INVRETSAA = min(arr(NINVRETSA * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA)) * 1 - V_CNR
NINVRETQOR = NINVRETQO - arr(NINVRETQO * TX50 / 100) * 1 - V_CNR
IPQTSREMPC1 = ZIPQTSREMPC1 * REMPLANBC
IPQPALIMANTV1 = ZIPQPALIMANTV1 * PENSALNBV
PENF3 = is_positive(PENSALP3) * arr(PRN3 * PEBF3 / EXPR3) + 1 - is_positive(PENSALP3) * PRN3 - PRR3 - PRR23 - PRR2Z3
TTSNREP = REMPLAP3 - TABTSREP
TEGLRCMGO = GLRCMGO * 1 - is_positive(INDTEFF) + TGLRCMGO * is_positive(INDTEFF)
IAD31 = IDOM31 - DEC31 * 1 - is_positive(V_CR2 + IPVLOC) + is_positive(V_CR2 + IPVLOC) * IDOM31
INVRETSE = NINVRETSE * 1 - V_CNR
TBNCNPABV = TBNCTOTABV - TBNCPABV
LIGSINFOR2 = is_positive(REPFORSIN2) * LIG1 * LIG2
GATASAV = BPCOSAV + GLDGRATV
RLOC01 = max(min(INVOMREP, RRILOC), 0) * 1 - V_CNR
ABPRV = arr(1 - IND_APBV * min(APBV, PL_PB * APBV / sum([APBV * 1 - IND_APBV, APBC * 1 - IND_APBC, APB1 * 1 - IND_APB1, APB2 * 1 - IND_APB2, APB3 * 1 - IND_APB3, APB4 * 1 - IND_APB4])) + IND_APBV * APBV)
ZIPQTSREMPV5 = is_positive(sum([TEGLTSREMPCM, TEGLTSREMP1M, TEGLTSREMP2M, TEGLTSREMP3M, TEGLTSREMP4M])) * arr(IQUOTOT5 * TERPQTSREMPVM / TETONEQUOM1) + 1 - is_positive(sum([TEGLTSREMPCM, TEGLTSREMP1M, TEGLTSREMP2M, TEGLTSREMP3M, TEGLTSREMP4M])) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQTS5TOT
LIGREPQE = is_positive(REPQE) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
PPEMAJORETTE = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * arr(PPE_MONO + PPE_MAJO + PPE_MABT) * 1 - V_CNR
RPQRWBM = inf(GLRWBM / CODNWB)
TFRDV = 1 - is_positive(PREM8_11) * FRNV + COD1AE * is_positive(FRNV + COD1AE - T10MINSV) + null(4 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRNV + COD1AE, TFRDPROVV) + null(5 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRNV + COD1AE, min(TFRDPROVV, max(TFRDPROVVP2, TFRDPROVV1731)))
IPQPALIM32 = ZIPQPALIM32 * PENSALNBP3
PRR21 = is_positive(PEBF1 + PENSALP1 + CODRCZ) * arr(PRN1 * CARPEP1 / EXPR1) + 1 - is_positive(PEBF1 + PENSALP1 + CODRCZ) * PRN1 - PRR1
AVPLAF12 = max(0, AUBAINE13A + AUBAINE13B + AUBAINE12 - AVPLAF13 - LIMIT12) * is_positive(V_DIFTEOREEL)
GLF2 = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENF2 / TOTALQUOHT) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV - GLFC - GLF1
IPQTSREMP11 = ZIPQTSREMP11 * REMPLANBP1
GLTSREMPVM = is_positive(TSNN2REMPC + TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2REMPV / TOTALQUOHT) + 1 - is_positive(TSNN2REMPC + TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM
ZIG_RF = is_positive(CS_RFG + RD_RFG + PS_RFG + IND_ZIGRFG) * 1 - null(4 - V_REGCO) * 1 - is_positive(ANNUL2042) * LIG1 * LIG2 * null(3 - INDIRPS)
RLOC21 = max(min(INVRETQG * 1 - INDPLAF + INVRETQGA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20])), 0) * 1 - V_CNR
LIGPERPI = is_positive(PERPIMPATRIE + 0) * is_positive(PERPINDV + PERPINDC + PERPINDP + PERPINDCV + PERPINDCC + PERPINDCP) * is_positive(PERPINDAFFV + PERPINDAFFC + PERPINDAFFP) * 1 - null(PERP_COTV + PERP_COTC + PERP_COTP + 0) * 1 - INDIMPOS * 1 - is_positive(PERP_COND1 + PERP_COND2) * 1 - is_positive(LIG8FV) * 1 - is_positive(LIG2501) * LIG1 * 1 - V_CNR * LIG2 + 0
PPE_FORMULEC = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINC * PPE_BOOL_MAXC * arr(positif_ou_nul(PPELIMSMIC - PPE_RCONTPC) * arr(PPE_RCONTPC * PPETX1 / 100) / PPE_COEFFC + is_positive(PPE_RCONTPC - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTPC) * arr(arr(PPELIMRPH - PPE_RCONTPC * PPETX2 / 100) / PPE_COEFFC) + is_positive(PPE_RCONTPC - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTPC) * arr(arr(PPELIMRPH2 - PPE_RCONTPC * PPETX3 / 100) / PPE_COEFFC))
LIGTROP = is_positive(V_ANTRE + V_ANTCR) * null(IINET) * positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT) * 1 - positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT - SEUIL_12) * null(IDRS2 - IDEC + IREP) * 1 - LIGPS * 1 - INDCTX
LIGTXF40 = is_positive(BPV40V + BPV40C + 0) * LIG0 * LIG2
RSOC8 = arr(max(min(INVRETXER * 1 - INDPLAF + INVRETXERA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1 - RSOC2 - RSOC3 - RSOC4 - RSOC5 - RSOC6 - RSOC7), 0)) * 1 - V_CNR
RIVPIQAC = arr(arr(min(PINELQC + 0, LIMDUFLO - min(DUFLOEL + PINELQD + 0, LIMDUFLO)) / 6) * TX23 / 100) + arr(arr(min(PINELQA + 0, LIMDUFLO - min(DUFLOEL + PINELQD + PINELQC + DUFLOEK + PINELQB + 0, LIMDUFLO)) / 6) * TX12 / 100) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
PTOGLOA = arr(max(0, CGLOA - COD8YL) * COPETO / 100) + arr(max(0, CGLOA - COD8YL - GLO9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
IMETRO32 = arr(IPQ02 * REVMETRO / RG)
RPATNAT3 = max(0, RPATNAT3_1 * 1 - ART1731BIS + min(RPATNAT3_1, max(RPATNAT3_P + RPATNAT3P2, RPATNAT31731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIPQPALIMC1 = is_positive(sum([TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPALIMC / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIMV1
IQUOTOT7 = IN57 - IN07
TD10M2 = TIND_MIN2 * TDFN2 + 1 - TIND_MIN2 * T10MINS2
TEGLPRR2M = GLPRR2M * 1 - is_positive(INDTEFF) + TGLPRR2M * is_positive(INDTEFF)
ZIPQPRRANTZ31 = is_positive(TEGLPRRZ4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPRRZ3 / TETONEQUO1) + 1 - is_positive(TEGLPRRZ4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTZV1 - ZIPQPRRANTZC1 - ZIPQPRRANTZ11 - ZIPQPRRANTZ21
# TODO IPROP
DFN2 = min(PLAF_DEDFORFTS, TPS102)
REPINVRED = REPMEUIT
ABADON31 = arr(min(IPQ1 * TX_RABDOM / 100 * PRODOM * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) + arr(min(IPQ1 * TX_RABGUY / 100 * PROGUY * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY))
INVRETQJRA = min(NINVRETQJR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA)) * 1 - V_CNR
LIGREPREPAR = is_positive(REPNUREPART) * LIG1 * 1 - null(4 - V_REGCO) * LIG2 * 1 - V_CNR
ZIPQPALIMC2 = is_positive(sum([TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPALIMC / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIMV2
ZIPQPALIM2TOT = sum([ZIPQPALIMV2, ZIPQPALIMC2, ZIPQPALIM12, ZIPQPALIM22, ZIPQPALIM32, ZIPQPALIM42])
PIRNETNEG = max(0, PIR - IRCUM)
TGLN4C = max(CODDBJ - TABDOMDBJ, 0) + max(CODEBJ - TABDOMEBJ, 0)
NINVRETMCR = NINVRETMC - arr(NINVRETMC * TX40 / 100) * 1 - V_CNR
EXOPAC = present(FEXP) + is_positive(MIBEXP) + is_positive(MIBNPEXP) + is_positive(BNCPROEXP) + is_positive(XSPENPP) + is_positive(XBAP) + is_positive(XBIPP) + is_positive(XBINPP) + is_positive(XBNP) + is_positive(XBNNPP) + is_positive(ABICPDECP) * 1 - V_CNR + is_positive(ABNCPDECP) * 1 - V_CNR + is_positive(HONODECP) * 1 - V_CNR + is_positive(AGRIP) + is_positive(BIPERPP) + is_positive(BNCCREAP)
BCIHABPRIN6 = min(max(0, BCIHP - BCIHABPRIN1 - BCIHABPRIN2 - BCIHABPRIN3 - BCIHABPRIN4 - BCIHABPRIN5), PREHABTN2) * 1 - V_CNR
RIVCELHJK1 = RCEL_HJK_R * is_positive(ACELHJK_R)
DPATNAT = PATNAT4
NAPINI = IRN + PIR - IRANT * 1 - INDTXMIN * 1 - INDTXMOY + min(0, IRN + PIR - IRANT) * INDTXMIN + INDTXMOY + max(0, IRN + PIR - IRANT) * INDTXMIN * is_positive(IAVIMBIS - NAPCRPAVIM - SEUIL_61) + INDTXMOY * is_positive(IAVIMO - NAPCRPAVIM - SEUIL_61) + RASAR * V_CR2
LIGNIDEG = null(IDRS3 - IDEC) * null(IBM23) * is_positive(SEUIL_61 - TAXASSUR) * is_positive(SEUIL_61 - IPCAPTAXT) * is_positive(SEUIL_61 - TAXLOY) * is_positive(SEUIL_61 - CHRAPRES) * is_positive(SEUIL_12 - IRNET) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGDEG61) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(INDCTX) * LIG2
LIGRNIDF5 = is_positive(abs(RNIDF5)) * is_positive(is_positive(abs(RNIDF)) + is_positive(FLAGRETARD08 + FLAGDEFAUT11)) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
ZIPQRVO72 = is_positive(TEGLTSTOT + TEGLTSREMPTOT) * arr(IQUOTOT2 * TERPQRVO7 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQPRRZ2TOT - ZIPQRVO2 - ZIPQRVO52 - ZIPQRVO62
IPQTSREMPANT11 = ZIPQTSREMPANT11 * REMPLANBP1
TERPQRCMFU = RPQRCMFU * 1 - is_positive(INDTEFF) + TRPQRCMFU * is_positive(INDTEFF)
TMIB_VENTAP = min(MIBVENP + MIBNPVENP, max(MIN_MBIC, arr(MIBVENP + MIBNPVENP * TX_MIBVEN / 100)))
NRILMJY = max(min(AILMJY, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA), 0)
ZIPQTSANT21 = is_positive(sum([TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * arr(IQUOTOTANT1 * TERPQTS2 / TETONEQUO1) + 1 - is_positive(sum([TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANTV1 - ZIPQTSANTC1 - ZIPQTSANT11
HONODECV = XHONOV + XHONOAAV
PTOPRS = arr(max(0, PRS - PRSPROV) * COPETO / 100) + arr(max(0, PRS - PRSPROV - PS9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
ABGL3V = max(0, REP10V - ABTSV - ABDOMDAJ - ABDOMEAJ - ABGL1V - ABGL2V) + 0
REB = REPSOF
VARREVKIRE = BPCAPTAXV + BPCAPTAXC + sum([XBAV + XBIPV + XBINPV + XBNV + XBNNPV, XBAC + XBIPC + XBINPC + XBNC + XBNNPC, XBAP + XBIPP + XBINPP + XBNP + XBNNPP]) + sum([MIBEXV + MIBNPEXV + BNCPROEXV + XSPENPV, MIBEXC + MIBNPEXC + BNCPROEXC + XSPENPC, MIBEXP + MIBNPEXP + BNCPROEXP + XSPENPP]) + sum([BNCCRV, BNCCRC, BNCCRP]) + sum([BNCCRFV, BNCCRFC, BNCCRFP]) + sum([XETSNNV, XETSNNC]) + sum([XEXOCETV, XEXOCETC]) + sum([XTSNNV, XTSNNC]) + sum([XTSNNTYV, XTSNNTYC]) + sum([XHSUPTSNN1, XHSUPTSNN2, XHSUPTSNN3, XHSUPTSNN4, XHSUPTSNNV, XHSUPTSNNC]) + XFORFAIT + XACCESS + RCMLIB + PPLIB + GAINABDET + RCMEXCREF + RCM2FA + XELU + RCMIMPAT + PVIMMO + PVMOBNR + PVTITRESOC + BTP3A + 1 - is_positive(IPVLOC) * 1 - is_positive(present(TAX1649) + present(RE168)) * PVTAUX
ZIG_TAUXRP = ZIG_TITRERP
LIGRCELCOM = is_positive(RIVCELCOM1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
INVRETRQ = min(arr(NINVRETRQ * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL)) * 1 - V_CNR
TTSNN22 = is_positive(TTS2) * is_positive(CARTSP2 + REMPLAP2) * arr(TTS2 * T2TSN2 / TEXTS2) + 1 - is_positive(CARTSP2 + REMPLAP2) * TTS2 - TTSNN2
RLOC99 = max(min(INVRETSU * 1 - INDPLAF + INVRETSUA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98])), 0) * 1 - V_CNR
ACELJP = BCEL_JP * 1 - ART1731BIS + min(BCEL_JP, max(ACELJP_P + ACELJPP2, ACELJP1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELLIERJP) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPE_BOOL_MIN3 = positif_ou_nul(PPE_RTA3 - PPELIMRPB) * 1 - PPE_BOOL_NADA3
T2TSN2 = CARTSP2 + REMPLAP2
GLPRR1 = is_positive(PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR21 / TOTALQUOHT) + 1 - is_positive(PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC
LIGPPENSP = is_positive(is_positive(is_positive(1 - null(PPE_AVRPRO1P + 0)) * is_positive(is_positive(PPETOTX) + is_positive(PPEREVSALP)) * is_positive(INDLIGPPE)) + is_positive(PPESAISITPP + PPESAISINBJP)) * INDPPEP * LIG0 * LIG2
TMIB_ABNPPP = max(0, arr(TMIB_APP * MIBNPPRESP / TMIB_TPRESP)) * present(MIBMEUP) + TMIB_APP - TMIB_ABPP * 1 - present(MIBMEUP)
ZIGPENARSE1 = is_positive(PRSE1) * is_positive(NMAJRSE11) * LIG2
NINVRETLHR = NINVRETLH - arr(NINVRETLH * TX50 / 100) * 1 - V_CNR
LIGPPEVP = is_positive(INDPPEV) * null(INDPPEC) * is_positive(INDPPEP) * TYPEPPE
RCM2FA = COD2FA * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO))
INDRSE5 = is_positive(BRSE5) * is_positive(PRSE5 + CIRSE5 + CSPROVYE) * 1 - INDCTX
RSOC34 = arr(max(min(INVRETRD * 1 - INDPLAF + INVRETRDA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32, RSOC33])), 0)) * 1 - V_CNR
TEGLTSREMP1M = GLTSREMP1M * 1 - is_positive(INDTEFF) + TGLTSREMP1M * is_positive(INDTEFF)
APRETUD = max(min(PRETUD, LIM_PRETUD) + min(PRETUDANT, LIM_PRETUD * CASEPRETUD), 0) * 1 - V_CNR
RPQTS2M = inf(GLTS2M / CARTSNBAP2)
ZIPQRVO5ANT1 = is_positive(TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * arr(IQUOTOTANT1 * TERPQRVO5 / TETONEQUO1) + 1 - is_positive(TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1 - ZIPQPRRANTZ1TOT
ILICAPNET = positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * max(0, PCAPCUM - PPCAP - PTAXANETNEG) + 1 - positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * 0
RLOC88 = max(min(INVRETNUR * 1 - INDPLAF + INVRETNURA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87])), 0) * 1 - V_CNR
# TODO SFUTILE
SPEPVNPP = BNCNP1AP - BNCNPDEP
REPMB = max(0, RETROCOMMB - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - INVOMENTMN)) * 1 - ART1731BIS + max(0, RETROCOMMB - max(0, RCOLENT - REPENT5 - INVOMENTMN)) * ART1731BIS * 1 - V_CNR
# TODO TRPQRVO5M
INVRETSZA = min(arr(NINVRETSZ * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA)) * 1 - V_CNR
TEGLRVO7 = GLRVO7 * 1 - is_positive(INDTEFF) + TGLRVO7 * is_positive(INDTEFF)
LIGREPSAC = is_positive(REPSC + REPAC) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
LIGPVIMPOS = is_positive(PVIMPOS) * LIG1 * LIG2
# TODO MAJTXTAXA4
RRCEL2012 = max(0, CELREPYJ + CELREPYI + CELREPYB + CELREPYA - RCELREPYJ - RCELREPYI - RCELREPYB - RCELREPYA) * is_positive(sum([CELREPYJ, CELREPYI, CELREPYB, CELREPYA])) + max(0, RCEL_2012_R - RCEL2012) * is_positive(CELSOMJ) + max(0, RCEL_JOQR_R - RCELJOQR) * is_positive(sum([CELLIERJO, CELLIERJQ, CELLIERJR])) + max(0, CELREPGV - RCELREPGV) * is_positive(CELREPGV) + max(0, CELREPGJ - RCELREPGJ) * is_positive(CELREPGJ) + max(0, RCEL_FABC_R - RCELFABC) * is_positive(CELLIERFA + CELLIERFB + CELLIERFC) + max(0, RCEL_FD_R - RCELFD) * is_positive(CELLIERFD) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TEGLF2 = GLF2 * 1 - is_positive(INDTEFF) + TGLF2 * is_positive(INDTEFF)
ZIGPENAGLO1 = is_positive(PGLOA) * is_positive(NMAJGLO1) * LIG2
LIGISFZERO = null(ISF5) * 1 - is_positive(ANNUL2042) * is_positive(20 - V_NOTRAIT) * LIGISF
LIGREPQF = is_positive(REPQF) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TPS10V = arr(TSBV * TX_DEDFORFTS / 100)
RETCODIN = arr(arr(ACODIN / 9) * TX20 / 100)
LIG60YT = INDV * INDP * 1 - INDC * ART1731BIS * LIG0 * LIG2
CHRREELTOT = arr(max(0, CHRREEL1 + CHRREEL2))
AILMPC = DILMPC * 1 - V_CNR
AUBAINE12 = max(0, min(V_A12REEL, V_DIFTEOREEL - AUBAINE13A - AUBAINE13B))
RILMPB = max(min(AILMPB, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC), 0)
TSNGL1C = GLD1C - ABGL1C
GLN4DAJV = max(CODDAJ - ABDOMDAJ, 0) * INDEFTSV
PPESAISINBJV = is_positive(PPENJV * is_positive(abs(PPERPROV)))
INVRETQDA = min(NINVRETQD, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA)) * 1 - V_CNR
INVRETSO = NINVRETSO * 1 - V_CNR
QF022 = arr(RB02) / NB2
ACEL2012 = BCEL_2012 * 1 - ART1731BIS + min(BCEL_2012, max(ACEL2012_P + ACEL2012P2, ACEL20121731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELSOMJ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
GLRVO5M = is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * arr(TONEQUOMHT * _2RV2 / TOTALQUOHT) + 1 - is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOM
IPQFANT41 = ZIPQFANT41 * COTF4
GLRWAM = is_positive(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * CODRWA / TOTALQUOHT) + 1 - is_positive(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM * null(2 - FLAG_EXIT)
RLOC12 = max(min(INVRETKT * 1 - INDPLAF + INVRETKTA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11])), 0) * 1 - V_CNR
PFRDV = FRDV + COD1AE * is_positive(FRDV + COD1AE - P10MINSV)
BANOR = BAHQTOTMAXP + BAQTOTMIN * 1 - ART1731BIS + BAHQTOTMAXP + BAQTOTMIN + arr(DEFBANIF * 1 - PROQDEFBAT) * ART1731BIS * 1 - PREM8_11 + BAHQTOTMAXP + BAQTOTMIN * ART1731BIS * PREM8_11
ISNETEAJ4 = max(0, INETABAEAJ4 - ISNETDAJ4)
TERPQ4TVC = RPQ4TVC * 1 - is_positive(INDTEFF) + TRPQ4TVC * is_positive(INDTEFF)
REPCELFD = 3 * RIVCELFD1 + RIVCELFD4
INVRETQKRA = min(NINVRETQKR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA)) * 1 - V_CNR
TIND_10MIN_01 = is_positive(TDEDMIN1 - TDFN1) * is_positive(TTSB1)
ACELREPHR = CELREPHR * 1 - ART1731BIS + min(CELREPHR, max(ACELREPHR_P + ACELREPHRP2, ACELREPHR1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TTPS103 = arr(TTSB3 * TX_DEDFORFTS / 100)
LIGDPREC = present(CHRFAC) * 1 - is_positive(ANNUL2042) * LIG1
IS511 = arr(DS511 * NB1)
IBM23 = IAD11 + ITP + REI + AUTOVERSSUP + AVFISCOPTER
RCEL_2012_R = is_positive(CELLIERJA + CELLIERJE + CELLIERJH) * arr(ACEL2012_R * TX13 / 100) + is_positive(CELLIERJD) * arr(ACEL2012_R * TX22 / 100) + is_positive(CELLIERJF + CELLIERJJ) * arr(ACEL2012_R * TX6 / 100) + is_positive(CELLIERJK + CELLIERJN) * arr(ACEL2012_R * TX24 / 100) + is_positive(CELLIERJM) * arr(ACEL2012_R * TX36 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TRPQPRRVM = inf(TGLPRRVM / CARPENBAV)
ACELCOM = BCELCOM2011 * 1 - ART1731BIS + min(BCELCOM2011, max(ACELCOM_P + ACELCOMP2, ACELCOM1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELLIERNP + CELLIERNR + CELLIERNS + CELLIERNT) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGBNCIF = is_positive(LIGNOCEP) * 1 - is_positive(LIG3250) + null(BNCIF) + null(BNCIF) * is_positive(LIGBNCDF) + null(BNCIF) * 1 - positif_ou_nul(NOCEPIMP + SPENETNPF - DABNCNP6 - DABNCNP5 - DABNCNP4 - DABNCNP3 - DABNCNP2 - DABNCNP1) + is_positive(LIGDEFBNCNPF) + is_positive(present(DABNCNP6) + present(DABNCNP5) + present(DABNCNP4) + present(DABNCNP3) + present(DABNCNP2) + present(DABNCNP1) + present(BNCAADV) + present(DNOCEPC) + present(DNOCEPP) + present(BNCAADC) + present(BNCAADP) + present(DNOCEP) + present(BNCNPV) + present(BNCNPC) + present(BNCNPP) + present(BNCNPPVV) + present(BNCNPPVC) + present(BNCNPPVP) + present(BNCAABV) + present(ANOCEP) + present(BNCAABC) + present(ANOVEP) + present(BNCAABP) + present(ANOPEP)) * 1 - is_positive(LIGSPENPNEG + LIGSPENPPOS) * LIG0 * LIG2
REPPL = max(0, INVOMRETPL - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA - INVOMRETPE - INVOMRETPI - INVIMP - INVDIR2009 - INVOMRETPD - INVOMRETPH)) * 1 - ART1731BIS + max(0, INVOMRETPL - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA - INVOMRETPE - INVOMRETPI - INVIMP - INVDIR2009 - INVOMRETPD - INVOMRETPH)) * ART1731BIS * 1 - V_CNR
PRSE4 = PTORSE4
ZIPQPRRZC2 = is_positive(sum([TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPRRZC / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRZV2
LIGREPQJ = is_positive(REPQJ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
ACODIF = min(PLAF_RESINEUV - ACODIE, LOCMEUBIF) * 1 - V_CNR
LIGREPBB = is_positive(REPBB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
LIGCELGT = is_positive(DCELREPGT) * LIG1 * LIG2
GLTS3M = is_positive(TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2TS3 / TOTALQUOHT) + 1 - is_positive(TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM - GLTSCM - GLTS1M - GLTS2M
LIGREP7UA = is_positive(REPCIFAD) * LIG1 * LIG2
PROREST = is_positive(REST) * max(0, min(CREPROSP, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER))
ILITOTIRNET = ILIIRNET + ILITAXANET + ILICAPNET + ILILOYNET + ILICHRNET
IPQPALIM12 = ZIPQPALIM12 * PENSALNBP1
BINTAV = BICREV - BICDEV * 1 - is_positive(ART1731BIS * PREM8_11)
# TODO RNIDF
PERPPLAFNUP = 1 - is_positive(PERPIMPATRIE + 0) * max(0, PERPPLAFPANT - RPERPP) + is_positive(PERPIMPATRIE + 0) * max(0, PERPPLAFP - RPERPP)
LIGBNCDF5 = is_positive(BNCDF5) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
TGLF3 = is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * PENF3 / TOTALQUO) + 1 - is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV - TGLFC - TGLF1 - TGLF2
PPE_COEFFCOND4 = 1 - PPE_BOOL_TP4 * null(PPENBJ - 360) * PPE_COEFF4 + 1 - null(PPENBJ - 360) * PPENBJ * 1820 / 360 / PPENHP4 + PPEXT4 * is_positive(PPE_SALAVDEF4 + 0) + PPENJP * is_positive(PPE_AVRPRO1P + 0) * 1820 / 360
IPQRCMGOANT1 = ZIPQRCMGOANT1 * RESTUCNB
ZIGINTREGV = is_positive(RETREGV) * LIG2
XBICNPSV = XBICNPNETV + BI2AV
REPSA = max(0, CODHSA - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA)) * 1 - ART1731BIS + max(0, CODHSA - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA)) * ART1731BIS * 1 - V_CNR
NINVRETAO = max(min(CODHAO, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW - NINVRETBE - NINVRETAE - NINVRETAJ), 0) * 1 - V_CNR
TONEQUOM = max(0, TOTALQUO - VARDMOND * is_positive(ART1731BIS) + DMOND * 1 - ART1731BIS)
I2DH = EPAV
DCELREPGS = CELREPGS
CKIREDUR = arr(REVKIRE * 360 / CDEVDUR_NBJ)
LIG2501 = 1 - is_positive(IND_REV) * 1 - null(2 - V_REGCO) * LIG2
LIGDIPLONI = is_positive(INDREV1A8) * is_positive(null(NATIMP) + is_positive(IREST) + 1 - is_positive(NAPTEMP)) * is_positive(REVFONC) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - LIGDIPLOI * LIG1
TABTS1BJ = is_positive(SALEXTC + ALLOC + BPCOSAC + GLDGRATC + CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * arr(TREP10C * TSHALLOC / TTSBC) + 1 - is_positive(SALEXTC + ALLOC + BPCOSAC + GLDGRATC + CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * TREP10C
LIG134 = is_positive(LIG134V + LIG134C + LIG134P + present(DAGRI6) + present(DAGRI5) + present(DAGRI4) + present(DAGRI3) + present(DAGRI2) + present(DAGRI1)) * 1 - is_positive(IPVLOC) * 1 - is_positive(abs(DEFIBA)) * 1 - is_positive(ANNUL2042) * LIG1
IQUOEAJ32 = max(0, IPQ1002 - IQUORAJ32 - IQUODAJ32)
NINVRETSY = max(min(CODHSY, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST), 0) * 1 - V_CNR
PFRDC = FRDC + COD1BE * is_positive(FRDC + COD1BE - P10MINSC)
TSBV = EXTSV + sum([GLD1V, GLD2V, GLD3V]) + CODDAJ + CODEAJ
PPE_RTA4 = PPESAL4
LIGREPAV = is_positive(REPAV) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
ISF5 = max(0, ISFPOSTPLAF - RISFE)
REPRR = max(0, INVOMENTRR - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM)) * 1 - ART1731BIS + max(0, INVOMENTRR - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM)) * ART1731BIS * 1 - V_CNR
LIGREPQP = is_positive(REPQP) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RRESINEUV6 = arr(arr(ACODIL / 9) * TX20 / 100)
RSOC11 = arr(max(min(INVRETKG * 1 - INDPLAF + INVRETKGA * INDPLAF, RRISUP), 0)) * 1 - V_CNR
TGLPALIM2M = is_positive(TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPENALIM2 / TOTALQUO) + 1 - is_positive(TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM - TGLPALIMCM - TGLPALIM1M
ZIGIDGLO3 = ZIGIDGLO * null(ANCSDED2 - V_ANREV + 3)
APIQABCD = APIQABCD_1 * 1 - ART1731BIS
RPERPP = 1 - is_positive(PERPIMPATRIE) * max(0, min(PERP_COTP, PERPPLATPANT) + RACCOTP) + is_positive(PERPIMPATRIE) * max(0, min(PERP_COTP, PERPPLAFIMPP) + RACCOTP)
ZIGDCSGD1 = ZIG_CSGD99 * null(ANCSDED2 - V_ANREV + 1) * LIG2
FRAR = is_positive(RCMHAB) * null(4 - V_IND_TRAIT) * is_positive(INTERE + RCMNAB) * arr(RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS * RCMHAB / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(INTERE + RCMNAB) * RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS - FRAN - _2FRAN + null(5 - V_IND_TRAIT) * is_positive(INTERE + RCMNAB) * arr(RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS * RCMHAB / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(INTERE + RCMNAB) * RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - FRAN - _2FRAN
A12RENT = max(0, A12RENT1 * 1 - ART1731BIS + min(A12RENT1731 + 0, A12RENT1) * ART1731BIS) * 1 - V_CNR
PVBAR3SB = PVTAXSB + COD3UV + COD3VE
NRCELRREDMG = max(min(CELRREDMG, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX])), 0)
RLOC111 = max(min(INVRETSY * 1 - INDPLAF + INVRETSYA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110])), 0) * 1 - V_CNR
REPMEUIP = RETREPMEU - RREPMEU * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PTOT = PIR
INVRETXCA = min(arr(NINVRETXC * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA)) * 1 - V_CNR
LIGCELLD = is_positive(DCELRREDLD) * LIG1 * LIG2
PREP10C = PIND_10C * PD10MC + 1 - PIND_10C * PFPTC
INVRETAGR = min(arr(INVRETAG * 5 / 3), NINVRETAG - INVRETAG) * 1 - null(1 - abs(arr(INVRETAG * 5 / 3) - NINVRETAG - INVRETAG)) + NINVRETAG - INVRETAG * null(1 - abs(arr(INVRETAG * 5 / 3) - NINVRETAG - INVRETAG)) * 1 - V_CNR
BASEDONB = REPDON03 + REPDON04 + REPDON05 + REPDON06 + REPDON07 + RDDOUP + COD7UH + DONAUTRE
TEGL4VM = GL4VM * 1 - is_positive(INDTEFF) + TGL4VM * is_positive(INDTEFF)
IPHQ2 = arr(IMT12 * IMPFHQ1 / ID11)
REPLOCIE3 = arr(arr(ACODIE / 9) * TX18 / 100)
TXPF1728ISF = 10 if (V_CODPF1728ISF == 7 or V_CODPF1728ISF == 17 or V_CODPF1728ISF == 18) else (40 if (V_CODPF1728ISF == 8 or V_CODPF1728ISF == 34) else 0)
GLN3V = max(GLD3V - ABGL3V, 0) * INDEFTSV
REPFORESTA = REPSIN + REPFORSIN + REPFORSIN2 + REPFORSIN3 + REPNIS
ZIGRSE5ANT = is_positive(V_RSE5ANT) * TYPE2 * 1 - APPLI_OCEANS
INVRETMBR = min(arr(INVRETMB * 3 / 2), NINVRETMB - INVRETMB) * 1 - V_CNR
LIGREPQW = is_positive(REPQW) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
ADONS = BON * 1 - ART1731BIS + min(BON, max(ADONS_P + ADONSP2, ADONS1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPE_BOOL_MAX4 = positif_ou_nul(PPELIMRPH - PPE_RCONTP4)
DLOCIDEFG = LOCMEUBID + LOCMEUBIE + LOCMEUBIF + LOCMEUBIG
TEGLPRRZTOTM = TEGLPRRZVM + TEGLPRRZCM + TEGLPRRZ1M + TEGLPRRZ2M + TEGLPRRZ3M + TEGLPRRZ4M
BITTAV = BITAV + BI12AV
TEGLPALIM1M = GLPALIM1M * 1 - is_positive(INDTEFF) + TGLPALIM1M * is_positive(INDTEFF)
PPEPRIMETTE = PPEPRIMETTEV + PPEPRIMETTEC
PPEIMP2A = positif_ou_nul(PPEREST2A) * PPETOTX - PPERSA - PPEREST2A
ZIPQRVG1 = is_positive(sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQRVG / TETONEQUO1) + 1 - is_positive(sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQRWB1 - ZIPQRWA1
PPE_COEFFC = PPE_BOOL_TPC * 360 / PPENBJ + 1 - PPE_BOOL_TPC / PPENHC + PPEXTC * is_positive(PPE_SALAVDEFC + 0) / 1820 + PPENJC * is_positive(PPE_AVRPRO1C + 0) / 360
TIND_10C = positif_ou_nul(T10MINSC - TFRDC + COD1BE)
RRCEL2010 = max(0, CELREPYE + CELREPYF + CELREPYL - RCELREPYE - RCELREPYF - RCELREPYL * is_positive(CELREPYE + CELREPYF + CELREPYL) + CELREPGX + CELREPGS + CELREPGP - RCELREPGX - RCELREPGS - RCELREPGP * is_positive(CELREPGX + CELREPGS + CELREPGP) + CELREPHH + CELREPHD + CELREPHB + RCELREP_HW_R + RCELREP_HV_R - RCELREPHH - RCELREPHD - RCELREPHB - RCELREPHW - RCELREPHV * is_positive(CELREPHH + CELREPHD + CELREPHB + CELREPHW + CELREPHV) + RCEL_NQ_R + RCEL_NBGL_R + RCEL_HJK_R - RCELNQ - RCELNBGL - RCELHJK * is_positive(sum([CELLIERNQ, CELLIERNB, CELLIERNG, CELLIERNL]) + CELLIERHJ + CELLIERHK)) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BI12AC = BI1AC + BI2AC
TGLRVG = is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * CODRVG / TOTALQUO) + 1 - is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA
DABNCNP = DABNCNP1 + DABNCNP2 + DABNCNP3 + DABNCNP4 + DABNCNP5 + DABNCNP6
V_CNR2 = (V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [2, 3, 4]}]
# TODO NUREPAR
GLTSREMP3M = is_positive(TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2REMP3 / TOTALQUOHT) + 1 - is_positive(TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM - GLTSREMPCM - GLTSREMP1M - GLTSREMP2M
ATOUHOTR = DTOUHOTR * 1 - ART1731BIS + min(DTOUHOTR, max(ATOUHOTR_P + ATOUHOTRP2, ATOUHOTR1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO))
INVRETXE = min(arr(NINVRETXE * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA - INVRETRB - INVRETRC - INVRETRD - INVRETXA - INVRETXB - INVRETXC)) * 1 - V_CNR
TS3 = TSN3
# TODO MAJTXLOY1
DENPLOCAFFC = is_positive(present(LOCNPCGAC) + present(LOCGITCC) + present(LOCDEFNPCGAC) + present(LOCNPC) + present(LOCGITHCC) + present(LOCDEFNPC))
RLOC101 = max(min(INVRETSC * 1 - INDPLAF + INVRETSCA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - RLOC100), 0) * 1 - V_CNR
GLPRRC = is_positive(PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2C / TOTALQUOHT) + 1 - is_positive(PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV
TEGL1M = GL1M * 1 - is_positive(INDTEFF) + TGL1M * is_positive(INDTEFF)
RESS = is_positive(positif_ou_nul(PLAF1 - V_BTRFRN2 + 0 * 1 - present(RFRN2) + RFRN2) + 1 - positif_ou_nul(PLAF1 - V_BTRFRN2 + 0 * 1 - present(RFRN2) + RFRN2) * positif_ou_nul(PLAF2 - V_BTRFRN1 + 0 * 1 - present(RFRN1) + RFRN1) + present(COD7WX))
IPQ15 = ZIPQ15 * 1
BAQTOTAV = positif_ou_nul(BAQT + BAHQT) * BAQTOT + 1 - is_positive(BAQT + BAHQT) * 0
AFIPDOM_1 = max(min(DFIPDOM, LIMFIPDOM * 1 + BOOL_0AM), 0) * 1 - V_CNR
TSNRBJ = CARTSC - ABTSRBJ
PPE_FORMULE3 = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN3 * PPE_BOOL_MAX3 * arr(positif_ou_nul(PPELIMSMIC - PPE_RCONTP3) * arr(PPE_RCONTP3 * PPETX1 / 100) / PPE_COEFF3 + is_positive(PPE_RCONTP3 - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTP3) * arr(arr(PPELIMRPH - PPE_RCONTP3 * PPETX2 / 100) / PPE_COEFF3) + is_positive(PPE_RCONTP3 - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTP3) * arr(arr(PPELIMRPH2 - PPE_RCONTP3 * PPETX3 / 100) / PPE_COEFF3))
BCDIS = GSALV + GSALC * 1 - V_CNR * 1 - is_positive(present(TAX1649) + present(RE168))
BNCDF6 = 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * DABNCNP5 + positif_ou_nul(NOCEPIMP + SPENETNPF) * min(max(NOCEPIMP + SPENETNPF - DABNCNP6, 0) - DABNCNP5, DABNCNP5) * -1 * positif_ou_nul(DABNCNP5 - max(NOCEPIMP + SPENETNPF - DABNCNP6, 0)) * 1 - is_positive(ART1731BIS) + min(DABNCNP5, DABNCNP - DIDABNCNP - BNCDF2 - BNCDF3 - BNCDF4 - BNCDF5) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + DABNCNP5 * is_positive(is_positive(ART1731BIS * PREM8_11) + null(8 - CMAJ) + null(11 - CMAJ))
IND_ZIGRCM = is_positive(present(RCMABD) + present(RCMAV) + present(RCMHAD) + present(RCMHAB) + present(RCMTNC) + present(RCMAVFT) + present(REGPRIV)) * is_positive(V_NOTRAIT - 20)
LIGNETAREC = is_positive(IINET) * 1 - LIGPS * is_positive(ANNUL2042) * TYPE2
NINVRETAW = max(min(CODHAW, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR), 0) * 1 - V_CNR
AILMIB_R = DILMIB * 1 - V_CNR
RLOC23 = max(min(INVRETPF * 1 - INDPLAF + INVRETPFA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22])), 0) * 1 - V_CNR
NINVRETXC = max(min(CODHXC, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA - NINVRETRB - NINVRETRC - NINVRETRD - NINVRETXA - NINVRETXB), 0) * 1 - V_CNR
INVRETSVRA = min(NINVRETSVR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA)) * 1 - V_CNR
LIGVERSUP = is_positive(AUTOVERSSUP)
TRCMABD = RCMABD + REVACT
REPEST = positif_ou_nul(REPSINFOR + VARD + REPSINFOR1 + REPFOR1 + REPSINFOR2 + REPFOR2 + REPSINFOR3 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * REPFOR3 + 1 - positif_ou_nul(REPSINFOR + VARD + REPSINFOR1 + REPFOR1 + REPSINFOR2 + REPFOR2 + REPSINFOR3 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, REPFOR3 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - REPSINFOR - VARD - REPSINFOR1 - REPFOR1 - REPSINFOR2 - REPFOR2 - REPSINFOR3)) * 1 - V_CNR
TSN1CP = ALLO1 - ABTS1CP
# TODO BIH1P
BAEMV = arr(_4BAHREV - _4DEFBAHREV * MAJREV) * positif_ou_nul(BARSV) + 0
LIGREPAR = is_positive(NUPROPT) * LIG1 * LIG2
LIGSURIMP = is_positive(SURIMP) * LIG1 * LIG2
RIVCELFD1 = is_positive(CELLIERFD) * arr(BCEL_FD * TX24 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGCELLA = is_positive(DCELRREDLA) * LIG1 * LIG2
LIGTAXASSURV = present(CESSASSV) * 1 - is_positive(ANNUL2042) * LIG1
TSNRCP = REMPLAP1 - ABTSRCP
ACREATHANDI = DCREATHANDI * 1 - ART1731BIS + min(DCREATHANDI, max(ACREATHANDI_P + ACREATHANDIP2, ACREATHANDI1731) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
PPE_COEFFU = PPE_BOOL_TPU * 360 / PPENBJ + 1 - PPE_BOOL_TPU / PPENHP1 + PPENHP2 + PPENHP3 + PPENHP4 + PPEXT1 + PPEXT2 + PPEXT3 + PPEXT4 / 1820 + PPENJP * is_positive(PPE_AVRPRO1P + 0) / 360 * PPE_BOOL_SEULPAC
NRCELREPHX = max(min(RCELREP_HX, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ])), 0)
RCODJU3 = arr(arr(ACODJU / 9) * TX11 / 100)
LIGPV3WBI = is_positive(PVIMPOS + CODRWB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
TAXABASE = arr(max(TAXASSUR + min(0, IRN - IRANT), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
INVRETNYA = min(NINVRETNY, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA)) * 1 - V_CNR
TAPBV = max(TPLRV, TEXPRV * TX_DEDPER / 100)
NRCELHNO = max(min(RCEL_HNO, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL), 0)
RSOC20 = arr(max(min(INVRETQNR * 1 - INDPLAF + INVRETQNRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19])), 0)) * 1 - V_CNR
LIGXBN = is_positive(XBNNPV + XBNNPC + XBNNPP) * LIG1 * LIG2
NINVRETQUR = NINVRETQU - arr(NINVRETQU * TX35 / 100) * 1 - V_CNR
ZIPQRF2TOT = sum([ZIPQRF12, ZIPQRF22])
RSOC36 = arr(max(min(INVRETRBR * 1 - INDPLAF + INVRETRBRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32, RSOC33, RSOC34, RSOC35])), 0)) * 1 - V_CNR
TEGLRF1M = GLRF1M * 1 - is_positive(INDTEFF) + TGLRF1M * is_positive(INDTEFF)
INVRETAPA = min(arr(NINVRETAP * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA)) * 1 - V_CNR
PTOCDIS = arr(max(0, CDIS - CDISPROV) * COPETO / 100) + arr(max(0, CDISC - CDISPROV - CDIS9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
BASSURC3 = max(0, CESSASSC - LIM_ASSUR3)
REPSL = max(0, CODHSL - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG)) * 1 - ART1731BIS + max(0, CODHSL - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG)) * ART1731BIS * 1 - V_CNR
TTSN1EP = ALLO3 - TABTS1EP
RLOCIDFG6 = arr(arr(ACODID / 9) * TX11 / 100) + arr(arr(ACODIF / 9) * TX18 / 100) + arr(arr(ACODIG / 9) * TX11 / 100)
ZIPQRCMANT1TOT = ZIPQRCMDCANT1 + ZIPQRCMFUANT1 + ZIPQRCMCHANT1 + ZIPQRCMTSANT1 + ZIPQRCMGOANT1 + ZIPQRCMTRANT1
TTSBN4 = TSHALLO4 + ALLO4 + max(0, SALEXT4 - COD1FD)
EM7 = sum([min(1, max(0, V_0F0 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0F1 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0F2 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0F3 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0F4 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0F5 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0F6 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0F7 + AG_LIMFG - V_ANREV))]) + 1 - is_positive(sum([V_0F0, V_0F1, V_0F2, V_0F3, V_0F4, V_0F5, V_0F6, V_0F7]) + 0) * V_0CF
LIG816 = V_EAG * is_positive(BPTPG) * LIG0 * LIG2
INVRETSP = min(arr(NINVRETSP * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK)) * 1 - V_CNR
EXPR4 = PRB4 + _2PRB4 + PEBF4
APATNAT2 = PATNAT2 * 1 - ART1731BIS + min(PATNAT2, max(APATNAT2_P + APATNAT2P2, APATNAT21731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RCODIW_1 = max(min(RETCODIW, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB), 0)
INVRETRCR = min(max(min(arr(INVRETRC * 13 / 7), NINVRETRC - INVRETRC), NINVRETRC - INVRETRC), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR - INVRETRBR)) * 1 - V_CNR
LIGNRBASE = is_positive(present(NRINET) + present(NRBASE)) * LIG1 * LIG2
A13RENT = max(0, A13RENT1 * 1 - ART1731BIS + min(A13RENT1731 + 0, A13RENT1) * ART1731BIS) * 1 - V_CNR
TEGLTS3 = GLTS3 * 1 - is_positive(INDTEFF) + TGLTS3 * is_positive(INDTEFF)
ZIPQRVO7ANT1 = is_positive(TEGLTSTOT + TEGLTSREMPTOT) * arr(IQUOTOTANT1 * TERPQRVO7 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1 - ZIPQRVO5ANT1 - ZIPQRVO6ANT1
DEFLOC2 = 1 - is_positive(NPLOCNETF2) * abs(min(max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8 - LNPRODEF7 - LNPRODEF6 - LNPRODEF5 - LNPRODEF4 - LNPRODEF3 - LNPRODEF2, 0) - LNPRODEF1, LNPRODEF1)) * positif_ou_nul(LNPRODEF1 - max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8 - LNPRODEF7 - LNPRODEF6 - LNPRODEF5 - LNPRODEF4 - LNPRODEF3 - LNPRODEF2, 0)) * 1 - is_positive(ART1731BIS) + min(LNPRODEF1, TOTDEFLOCNP - DNPLOCIMPU) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + LNPRODEF1 * ART1731BIS * is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))
TERPQ4CM = RPQ4CM * 1 - is_positive(INDTEFF) + TRPQ4CM * is_positive(INDTEFF)
ZIPQRVO1TOT = ZIPQRVO1 + ZIPQRVO51 + ZIPQRVO61 + ZIPQRVO71
BCIFORETUQ = max(0, min(RDFORESTGES, PLAF_FOREST2 * 1 + BOOL_0AM - BCIFORETUI)) * 1 - V_CNR
TABTS3VJ = is_positive(GLDGRATV + CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * arr(TREP10V * BPCOSAV / TTSBV) + 1 - is_positive(GLDGRATV + CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * max(0, TREP10V - TABTS1AJ - TABTS1AC - TABTS1AP)
RLOC54 = max(min(INVRETPN * 1 - INDPLAF + INVRETPNA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53])), 0) * 1 - V_CNR
PIND_MINP = 1 - is_positive(PIND_10MIN_0P)
REPNY = max(0, INVOMENTNY - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW - INVOMRETPR - INVOMRETPW - INVOMENTRI - INVOMENTRO - INVOMENTRT - INVOMENTRY)) * 1 - ART1731BIS + max(0, INVOMENTNY - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW - INVOMRETPR - INVOMRETPW - INVOMENTRI - INVOMENTRO - INVOMENTRT - INVOMENTRY)) * ART1731BIS * 1 - V_CNR
TEGLF2M = GLF2M * 1 - is_positive(INDTEFF) + TGLF2M * is_positive(INDTEFF)
LIGREPAR3 = is_positive(REPAR3) * LIG1 * 1 - null(4 - V_REGCO) * LIG2 * 1 - V_CNR
ZIGGLOA = is_positive(BGLOA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG2
PPEPEXO2 = is_positive(PPE_AVRPRO1P + 0) + is_positive(SALEXT2 + 0) + 4 * is_positive(PPEXT2 + PPETPP2 + 0)
TTSNTC = TTSN1BJ + TTSN1BC + TTSN1BP + TTSN3VK + TTSN1UT + TTSNRBJ + TTSNRBP + TTSNDBJ + TTSNEBJ + TTSNGL1C + TTSNGL2C + TTSNGL3C
NRCELRREDLS = max(min(CELRREDLS, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD])), 0)
PMIB_NETVC = MIBVENC - PMIB_AVC
ITOTDOM32 = IMETRO32 + IQUORAJ32 + INETABADAJ32 + INETABAEAJ32
RCODIJ_1 = max(min(RETCODIJ, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RCODIL - RCODIN - RCODIV), 0)
GLPRR1M = is_positive(PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR21 / TOTALQUOHT) + 1 - is_positive(PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM
PVTXEFF2 = max(0, BPVRCM + COD3SG + COD3SL + ABDETPLUS + ABIMPPV - DPVRCM + COD3SH + COD3SM + ABDETMOINS + ABIMPMV)
DRIRENOV = RIRENOV
RLOC86 = max(min(INVRETRPR * 1 - INDPLAF + INVRETRPRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85])), 0) * 1 - V_CNR
CS_RCM = RDRCM
RPALPTEFRFR = max(min(TOTPA, RBGTEFRFR - RPALETEFRFR - DDCSG + TOTALQUO - SDD), 0) * 1 - V_CNR
TIND_APB2 = positif_ou_nul(TPLR2 - TEXPR2 * TX_DEDPER / 100)
PDEDMINC = DEDMINC
INVRETSH = min(NINVRETSH, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC)) * 1 - V_CNR
LIMIT9 = 25000 + max(0, arr(max(0, RI1 + TONEQUO1) * 10 / 100)) * 1 - is_positive(VARRMOND * is_positive(ART1731BIS) + RMOND * 1 - ART1731BIS) + max(0, arr(max(0, VARRMOND * is_positive(ART1731BIS) + RMOND * 1 - ART1731BIS + TONEQUOM1) * 10 / 100)) * is_positive(VARRMOND * is_positive(ART1731BIS) + RMOND * 1 - ART1731BIS)
TPRNN4 = TEXPR4 - TAPR4
ZIGR1649 = is_positive(R1649) * 1 - V_CNR * LIG1 * LIG2
TABTSRFP = max(0, TREP104 - TABTS1FJ - TABTS1FC - TABTS1FP - TABTSRFJ)
LIGAVFISC = is_positive(AVFISCOPTER) * LIG1 * LIG2
# TODO RIVL3
RLOC116 = max(min(INVRETSFR * 1 - INDPLAF + INVRETSFRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115])), 0) * 1 - V_CNR
BPTP4 = BPCOPTV + BPCOPTC + BPVSK * 1 - is_positive(IPVLOC) * 1 - is_positive(present(TAX1649) + present(RE168))
TSC = TSNC - sum([max(0, GLD1C - ABGL1C), max(0, GLD2C - ABGL2C), max(0, GLD3C - ABGL3C)]) - max(CODDBJ - ABDOMDBJ, 0) - max(CODEBJ - ABDOMEBJ, 0)
GLDOMAVDBJC = max(CODDBJ - ABDOMDBJ, 0) * INDEFTSC
ZIPQPRRV5 = is_positive(sum([TEGLPRRCM, TEGLPRR1M, TEGLPRR2M, TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPRRVM / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRRCM, TEGLPRR1M, TEGLPRR2M, TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT
RBGTEF = 1 - is_positive(TEFFREV + PREREV - DAR) * min(0, TEFFREV + PREREV - DAR + TOTALQUO) + is_positive(TEFFREV + PREREV - DAR) * TEFFREV + PREREV - DAR
_2RNC = _2RCMRNTNC
RCEL_2011 = is_positive(CELLIERNA + CELLIERNE) * arr(ACEL * TX22 / 100) + is_positive(CELLIERNC + CELLIERND + CELLIERNH) * arr(ACEL * TX25 / 100) + is_positive(CELLIERNF + CELLIERNJ) * arr(ACEL * TX13 / 100) + is_positive(CELLIERNI) * arr(ACEL * TX15 / 100) + is_positive(CELLIERNM + CELLIERNN) * arr(ACEL * TX40 / 100) + is_positive(CELLIERNK + CELLIERNO) * arr(ACEL * TX36 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGBNCDF3 = is_positive(BNCDF3) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
RD_PREREV = PREREV
INDRSE5X = is_positive(CS_DEG) * is_positive(BRSE5) * is_positive(INDCTX)
LIGBNCDF1 = is_positive(BNCDF1) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
# TODO MLOCABV
INVRETOGA = min(NINVRETOG, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA)) * 1 - V_CNR
_2FRAN = is_positive(REVACT) * null(4 - V_IND_TRAIT) * is_positive(RTCAR + RCMNAB) * arr(RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS * REVACT / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(RTCAR + RCMNAB) * RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS - FRAN + null(5 - V_IND_TRAIT) * is_positive(RTCAR + RCMNAB) * arr(RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P + 0), BRCMTOT1731 + 0)) * ART1731BIS * REVACT / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(RTCAR + RCMNAB) * RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P + 0), BRCMTOT1731 + 0)) * ART1731BIS - FRAN
TXMARJ = max(is_positive(WTXMARJ - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR) * TX_BAR1 * 1 - V_ANC_BAR + TX_BAR1A * V_ANC_BAR, max(is_positive(WTXMARJ - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR) * TX_BAR2, max(is_positive(WTXMARJ - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR) * TX_BAR3, max(is_positive(WTXMARJ - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR) * TX_BAR4, max(is_positive(WTXMARJ - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR) * TX_BAR5, 0))))) * 1 - is_positive(present(NRBASE) + present(NRINET) + present(IPTEFP) + present(IPTEFN) + present(PRODOM) + present(PROGUY)) * 1 - null(2 - V_REGCO) * is_positive(IDRS2 + IPQ1)
TTPS104 = arr(TTSB4 * TX_DEDFORFTS / 100)
INVRETAKA = min(arr(NINVRETAK * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA)) * 1 - V_CNR
ZIPQPALIM1TOT = sum([ZIPQPALIMV1, ZIPQPALIMC1, ZIPQPALIM11, ZIPQPALIM21, ZIPQPALIM31, ZIPQPALIM41])
QF011 = arr(RB01) / NB1
DS522 = max(QF522 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF522 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF522 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF522 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF522 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
NDA = min(max(AGV + 1 - LIM_AGE_ABVIEUX, V_0AP), 1) + min(max(AGC * BOOL_0AM + 1 - LIM_AGE_ABVIEUX, V_0AF * BOOL_0AM), 1)
RDBASE_INR = max(0, RDSN - CRDSIM - RD9YP)
IS025 = arr(DS025 * NB2)
GLFVM = is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENFV / TOTALQUOHT) + 1 - is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM
RSOCREPR_1 = max(min(RSOCREP, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1), 0)
ZIG_CSGDCOR = is_positive(ZIG_CSGDDO + ZIG_CSGDRS) * 1 - null(V_IDANT + DCSGD + 0) * 1 - null(V_IDANT - DCSGD) * is_positive(V_NOTRAIT - 20) * LIG2
REPSH = max(0, CODHSH - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC)) * 1 - ART1731BIS + max(0, CODHSH - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC)) * ART1731BIS * 1 - V_CNR
LIGREPAQ = is_positive(REPAQ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
IPQTSREMP25 = ZIPQTSREMP25 * REMPLANBP2
DEPLOCP = LOCPROCGAP - LOCDEFPROCGAP + LOCPROP - LOCDEFPROP
NINVRETAM = max(min(CODHAM, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH), 0) * 1 - V_CNR
LIGREPCORSE = is_positive(REPCORSE) * LIG1 * LIG2
ZIG_TOTDEG = is_positive(CRDEG) * is_positive(INDCTX)
LIGLOCRES1 = is_positive(RIVL1RES) * LIG1
TGLTSREMP2M = is_positive(TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2REMP2 / TOTALQUO) + 1 - is_positive(TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM - TGLTSREMPCM - TGLTSREMP1M
ISNETDAJ4 = arr(INETABADAJ4 * IPRODOM4 / IPRODOM4)
INVRETSF = min(arr(NINVRETSF * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA)) * 1 - V_CNR
INVRETSK = min(arr(NINVRETSK * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF)) * 1 - V_CNR
TAXASSURC = arr(BASSURC1 * TX_ASSUR1 / 100 + BASSURC2 * TX_ASSUR2 / 100 + BASSURC3 * TX_ASSUR3 / 100) * 1 - is_positive(RE168 + TAX1649)
DEPMOB = DEPMOBIL + RDEQPAHA + RDTECH + COD7WD * is_positive(V_NOTRAIT - 10)
LIGREPLNPZ = is_positive(REPLNPZ) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
_2RV2 = arr(RENTAX5 * TXRVT2 / 100)
GLN4C = max(CODDBJ - ABDOMDBJ, 0) + max(CODEBJ - ABDOMEBJ, 0) * INDEFTSC
RBG2RFR = RBGRFR - min(RBGRFR, DDCSG)
LIGSPDREPNPC = is_positive(SPEDREPNPC) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
LIGREPARN = is_positive(REPAR) * LIG1 * 1 - null(4 - V_REGCO) * LIG2 * 1 - V_CNR
LIGTROPREST = is_positive(V_ANTRE + V_ANTCR) * null(IINET) * positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT) * 1 - positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT - SEUIL_12) * 1 - is_positive(LIGTROP) * 1 - LIGPS * 1 - INDCTX
RCODJU = max(0, RCODJU_1 * 1 - ART1731BIS + min(RCODJU_1, max(RCODJU_P + RCODJUP2, RCODJU1731 + 0) * 1 - PREM8_11) * ART1731BIS)
BTP3G = BPVRCM * 1 - is_positive(IPVLOC)
TEGLTOT = TEGLRVG + TEGL1 + TEGL2 + TEGL3 + TEGL4
RIVCELHNO8 = arr(min(CELLIERHN + CELLIERHO + 0, LIMCELLIER) * is_positive(CELLIERHN) * TX25 / 100 + min(CELLIERHN + CELLIERHO + 0, LIMCELLIER) * is_positive(CELLIERHO) * TX40 / 100) - 8 * RIVCELHNO1 * 1 - V_CNR
RLOC46 = max(min(INVOMENTRJ, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45])), 0) * 1 - V_CNR
PPETEMPSU = arr(1 / PPE_COEFFU * 100)
LIGREPRO = is_positive(REPRO) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
NINVRETMM = max(min(INVOMREP, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3), 0) * 1 - V_CNR
TSN1AJ = TSHALLOV - ABTS1AJ
TPMIB_NETVP = MIBVENP + AUTOBICVP - TPMIB_AVP
# TODO RIVL5RES
TEGLRWA = GLRWA * 1 - is_positive(INDTEFF) + TGLRWA * is_positive(INDTEFF)
ABDOMEBJ = is_positive(CODEBJ) * is_positive(GLD1C + GLD2C + GLD3C) * arr(REP10C * CODEBJ / TSBC) + 1 - is_positive(GLD1C + GLD2C + GLD3C) * max(0, REP10C - ABTSC - ABDOMDBJ) + 0
TIND_101 = positif_ou_nul(T10MINS1 - TFRD1 + COD1CE)
PPE_MAJO = PPE_BOOL_MAJO * is_positive(PPE_NBELIGI) * PPE_NBMAJO * PPEMONMAJO + PPE_NBMAJOQAR * PPEMONMAJO / 2
_4BAQTOT = sum([_4BAQV, _4BAQC, _4BAQP])
ABTS1FP = is_positive(ALLO4) * is_positive(CARTSP4 + REMPLAP4) * arr(REP104 * ALLO4 / TSB4) + 1 - is_positive(CARTSP4 + REMPLAP4) * max(0, REP104 - ABTS1FJ)
LIGREPTB = is_positive(REPTB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
NINVRETSO = max(min(CODHSO, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ), 0) * 1 - V_CNR
# TODO PPEPRIMECT
IPQ1 = IPQ01 * EXO1 + IPQ1001
LIGREPRT = is_positive(REPRT) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TSNNT = abs(TSNNV + PRRV + TSNNC + PRRC + TSNN1 + PRR1 + TSNN2 + PRR2 + TSNN3 + PRR3 + TSNN4 + PRR4) * 1 - is_positive(TSNNV + PRRV + TSNNC + PRRC + TSNN1 + PRR1 + TSNN2 + PRR2 + TSNN3 + PRR3 + TSNN4 + PRR4)
LIG121 = is_positive(DEFRITS) * LIGANNUL2042
INVRETSY = NINVRETSY * 1 - V_CNR
CVN9YP = is_positive(CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * arr(VAR9YIPS * CVNSALC - COD8YT / BINRPS) + 1 - is_positive(CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP)
INDIS26 = 1 if (V_NOTRAIT + 0 == 26 or V_NOTRAIT + 0 == 36 or V_NOTRAIT + 0 == 46 or V_NOTRAIT + 0 == 56 or V_NOTRAIT + 0 == 66) else 0
RENT22 = max(min(INVRETAT * 1 - INDPLAF + INVRETATA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21])), 0) * 1 - V_CNR
XTSNTV = XEXTSV - XFPTV
ACELJP_R = positif_ou_nul(CELLIERJP) * BCEL_JP * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPRA = is_positive(REPRA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RBLTEF = RBG2TEF - max(0, min(RBG2TEF, DPA + DFA + DEDIV + APERPVTEF + APERPCTEF + APERPPTEF + NUREPARTEF)) * 1 - V_CNR - min(RBG2TEF, V_8ZT) * V_CR2 * 1 - is_positive(RE168 + TAX1649)
IPQPRRANT31 = ZIPQPRRANT31 * CARPENBAP3
MIB_ABPC = max(0, arr(MIB_APC * MIBPRESC / MIB_TPRESC))
DCOMP = RDCOM
ALOCIDEFG = ALOCIDEFG_1 * 1 - ART1731BIS + min(ALOCIDEFG_1, max(ALOCIDEFG_P + ALOCIDEFGP2, ALOCIDEFG1731 + 0) * 1 - PREM8_11) * ART1731BIS
RCODIG = RCODIG_1 * 1 - ART1731BIS + min(RCODIG_1, max(RCODIG_P + RCODIGP2, RCODIG1731 + 0) * 1 - PREM8_11) * ART1731BIS
QF014 = arr(RB04) / NB1
ZIGTITRES = is_positive(BCVNSAL + V_CVNANT) * 1 - is_positive(BRDS + V_RDANT) * 1 - is_positive(BCSG + V_CSANT) * 1 - is_positive(BPRS + V_PSANT) * LIG2
XTSNT2 = XEXTS2 - XFPT2
RLOCIDFG4 = arr(arr(ACODID / 9) * TX11 / 100) + arr(arr(ACODIF / 9) * TX18 / 100) + arr(arr(ACODIG / 9) * TX11 / 100)
MIB_NP1AP = MIBNP1AP - MIBNPDEP
IPQTS41 = ZIPQTS41 * CARTSNBAP4
EXPRV = PRBV + _2PRBV + PEBFV
RSNCU = max(0, min(RSN_CU, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL - RSNCM - RSNCN - RSNCC))
BGTECH = min(RDTECH, P2GEWL) * 1 - V_CNR
RDRFPS = max(0, RFCFPS + RFMIC - MICFR - RFDANT) * 1 - is_positive(ART1731BIS) + max(0, RRFI + REVRF + DEFRF4BC) * is_positive(ART1731BIS)
BI1P = BI1AP
# TODO BIH2P
LIG136 = is_positive(_4BAQV + _4BAQC + _4BAQP) * 1 - is_positive(IPVLOC) * 1 - is_positive(ANNUL2042) * LIG1
# TODO RNI
# TODO PPERPROP
IN01 = max(IS011, IS021 - PLA)
RILMIC_1 = max(min(AILMIC, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU), 0)
ABTSC = ABTS1BJ + ABTS1BP + ABTS3VK + ABTS1UT + ABTSRBJ + ABTSRBP
XIND_101 = positif_ou_nul(X10MINS1 - FRN1)
TMIB_VENTAC = min(MIBVENC + MIBNPVENC, max(MIN_MBIC, arr(MIBVENC + MIBNPVENC * TX_MIBVEN / 100)))
BARSREVC = BAHREC + _4BAHREC
INVRETXCRA = min(NINVRETXCR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA)) * 1 - V_CNR
LIGRED = LIG98B * 1 - is_positive(RIDEFRI) * LIG1 * LIG2
PLA = PLANT + PLACOMP
PFPTV = max(PFRDV, P10MINSV)
INVRETLGR = min(INVRETLG, max(0, NINVRETLG - INVRETLG)) * 1 - V_CNR
A11RFOR = max(0, min(BA11RFOR, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - A9RFOR - A10RFOR)) * 1 - ART1731BIS
TPR4 = TSN4 + PRN4
PRQZC = CODRBZ
# TODO RNIDF5
RCEL_2012 = is_positive(CELLIERJA + CELLIERJE + CELLIERJH) * arr(ACEL2012 * TX13 / 100) + is_positive(CELLIERJD) * arr(ACEL2012 * TX22 / 100) + is_positive(CELLIERJF + CELLIERJJ) * arr(ACEL2012 * TX6 / 100) + is_positive(CELLIERJK + CELLIERJN) * arr(ACEL2012 * TX24 / 100) + is_positive(CELLIERJM) * arr(ACEL2012 * TX36 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RTOUHOTR_1 = max(min(RIHOTR, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP), 0) * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO))
HRBASE_I = IHAUTREVT * is_positive(IAMD1 + 1 - SEUIL_61)
INVRETPER = min(arr(INVRETPE * 10 / 9), NINVRETPE - INVRETPE) * 1 - null(1 - abs(arr(INVRETPE * 10 / 9) - NINVRETPE - INVRETPE)) + NINVRETPE - INVRETPE * null(1 - abs(arr(INVRETPE * 10 / 9) - NINVRETPE - INVRETPE)) * 1 - V_CNR
RIVCELHLM4 = RIVCELHLM1
TERPQ3 = RPQ3 * 1 - is_positive(INDTEFF) + TRPQ3 * is_positive(INDTEFF)
TMIB_NETVC = MIBVENC + AUTOBICVC - TMIB_ABVC
IPQTSC5 = ZIPQTSC5 * CARTSNBAC
# TODO MAJTXRSE54
TEGLPRRZTOT = TEGLPRRZV + TEGLPRRZC + TEGLPRRZ1 + TEGLPRRZ2 + TEGLPRRZ3 + TEGLPRRZ4
TEGLRVGM = GLRVGM * 1 - is_positive(INDTEFF) + TGLRVGM * is_positive(INDTEFF)
IPQRCMFUANT1 = ZIPQRCMFUANT1 * REVPEANB
LIGPME3 = is_positive(REPINVPME3) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
NINVRETNY = max(min(INVOMENTNY, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY), 0) * 1 - V_CNR
ACELRREDLX = CELRREDLX * 1 - ART1731BIS + min(CELRREDLX, max(ACELRREDLX_P + ACELRREDLXP2, ACELRREDLX1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INVRETPYRA = min(NINVRETPYR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA)) * 1 - V_CNR
TMIB_NETNPVV = MIBNPVENV - TMIB_ABNPVV
ZIGRSE4ANT = is_positive(V_RSE4ANT) * TYPE2 * 1 - APPLI_OCEANS
PERPINDCP = PERP_BOOL * is_positive(V_BTPERPTOTP + PERPPLAFCP + PERPPLAFNUP1 + PERPPLAFNUP2 + PERPPLAFNUNP + PERP_COTP + RACCOTP) + 0 * 1 - V_CNR
ZIGRDANT = is_positive(V_RDANT) * TYPE2 * 1 - APPLI_OCEANS
PERPPLAFNUP2ANT = present(PERPPLAFNUP2) * PERPPLAFNUP2 + 1 - present(PERPPLAFNUP2) * V_BTPERPNUP2
LIGREPAR2 = is_positive(REPAR2) * LIG1 * 1 - null(4 - V_REGCO) * LIG2 * 1 - V_CNR
LIGRRCEL23 = is_positive(RRCELLX) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
# TODO NMAJTAXA1
BIHTAC = max(0, arr(BIHNOC - BIHDNC * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV)) + min(0, BIHNOC - BIHDNC * 1 - is_positive(ART1731BIS * PREM8_11))
DCELREPYE = CELREPYE
LIGREPDONR1 = is_positive(REPDONR1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
ABTS1DP = is_positive(ALLO2) * is_positive(CARTSP2 + REMPLAP2) * arr(REP102 * ALLO2 / TSB2) + 1 - is_positive(CARTSP2 + REMPLAP2) * max(0, REP102 - ABTS1DJ)
_1RAU = 1 - is_positive(EXFR) * RCMHAD - FRAU + is_positive(EXFR) * 0
LIG390 = GLD1V + GLD1C
NOCEPP = ANOPEP - DNOCEPP + BNCAABP - BNCAADP
TERPQTSREMP4M = RPQTSREMP4M * 1 - is_positive(INDTEFF) + TRPQTSREMP4M * is_positive(INDTEFF)
RCOLENT = RCOLENT_1 * 1 - ART1731BIS + min(RCOLENT_1, max(RCOLENT_P + RCOLENTP2, RCOLENT1731 + 0) * 1 - PREM8_11) * ART1731BIS
NPLOCNETFHDEFANT = max(0, NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC)
# TODO IDRS2
IPQ45 = ZIPQ45 * 4
PPENARPRIMEV = PPE_FORMULEV * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCONDV - 2) * 1 - PPE_BOOL_TPV + arr(PPE_FORMULEV * PPETXMAJ1) + arr(PPE_FORMULEV * PPE_COEFFV * PPETXMAJ2) * is_positive(2 - PPE_COEFFCONDV) * is_positive(PPE_COEFFCONDV - 1) * 1 - PPE_BOOL_TPV + PPE_FORMULEV * is_positive(PPE_BOOL_TPV + positif_ou_nul(1 - PPE_COEFFCONDV))
XDF4 = X10MINS4
LIGREPAT = is_positive(REPAT) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RLOC37 = max(min(INVRETPBR * 1 - INDPLAF + INVRETPBRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36])), 0) * 1 - V_CNR
LIG900YT = is_positive(RVTOT + LIG1100 + LIG910 + BRCMQ + RCMFR + REPRCM + LIGRCMABT + LIG2RCMABT + LIGPV3VG + LIGPV3WB + LIGPV3VE + RCMLIB + LIG29 + LIG30 + RFQ + _2REVF + _3REVF + LIG1130 + VLHAB + DFANT + ESFP + RE168 + TAX1649 + R1649 + PREREV) * is_positive(LIG10YT + LIG20YT + LIG30YT + LIG40YT + LIG50YT + LIG60YT + LIG70YT) * ART1731BIS
TSPENETPP = max(0, BNCPROP + AUTOBNCP - TSPEABPP)
PENF4 = is_positive(PENSALP4) * arr(PRN4 * PEBF4 / EXPR4) + 1 - is_positive(PENSALP4) * PRN4 - PRR4 - PRR24 - PRR2Z4
TRPQRVO7 = inf(TGLRVO7 / RENTAXNB7)
AILMPE = DILMPE * 1 - V_CNR
LIGFIPC = is_positive(DFIPC) * LIG1 * LIG2
XBNC = BNHEXC + BNCEXC
ZIPQRVO2TOT = ZIPQRVO2 + ZIPQRVO52 + ZIPQRVO62 + ZIPQRVO72
PMIB_AVV = min(MIBVENV, max(MIN_MBIC, arr(MIBVENV * TX_MIBVEN / 100)))
RREPNPRO_1 = max(min(RETREPNPRO, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP), 0)
REPLOCID = RETCODID - RCODID * is_positive(LOCMEUBID + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TEGLTS1 = GLTS1 * 1 - is_positive(INDTEFF) + TGLTS1 * is_positive(INDTEFF)
IPQRCMTRANT1 = ZIPQRCMTRANT1 * INTERENB
LIGISFNMRIS = is_positive(SEUIL_12 - ISFNAP) * INDIS26 * is_positive(V_NOTRAIT - 20) * 1 - is_positive(ANNUL2042)
IPQRCMFU1 = ZIPQRCMFU1 * REVPEANB
IQUODAJ32 = arr(IPQ1002 * TERPQ4V + TERPQ4C / TERPQ4TVC + TERPQTSV + TERPQTSC)
LIG3 = is_positive(is_positive(CMAJ + 0) + positif_ou_nul(MAJTX1 - 40) + positif_ou_nul(MAJTX4 - 40) + positif_ou_nul(MAJTXPCAP1 - 40) + positif_ou_nul(MAJTXPCAP4 - 40) + positif_ou_nul(MAJTXLOY1 - 40) + positif_ou_nul(MAJTXLOY4 - 40) + positif_ou_nul(MAJTXCHR1 - 40) + positif_ou_nul(MAJTXCHR4 - 40) + positif_ou_nul(MAJTXC1 - 40) + positif_ou_nul(MAJTXC4 - 40) + positif_ou_nul(MAJTXCVN1 - 40) + positif_ou_nul(MAJTXCVN4 - 40) + positif_ou_nul(MAJTXCDIS1 - 40) + positif_ou_nul(MAJTXCDIS4 - 40) + positif_ou_nul(MAJTXGLO1 - 40) + positif_ou_nul(MAJTXGLO4 - 40) + positif_ou_nul(MAJTXRSE11 - 40) + positif_ou_nul(MAJTXRSE14 - 40) + positif_ou_nul(MAJTXRSE51 - 40) + positif_ou_nul(MAJTXRSE54 - 40) + positif_ou_nul(MAJTXRSE21 - 40) + positif_ou_nul(MAJTXRSE24 - 40) + positif_ou_nul(MAJTXRSE31 - 40) + positif_ou_nul(MAJTXRSE34 - 40) + positif_ou_nul(MAJTXRSE41 - 40) + positif_ou_nul(MAJTXRSE44 - 40) + positif_ou_nul(MAJTXTAXA4 - 40))
LIGCELYH = is_positive(DCELREPYH) * LIG1 * LIG2
BAIREST = is_positive(REST) * max(0, min(CICA, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD))
VAR9YIIR = arr(ACODELAISINR * BINRIR / BINRIR + BINRPS)
TPLRC = min(MIN_DEDPR, TEXPRC)
INVRETRL = min(arr(NINVRETRL * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY)) * 1 - V_CNR
DFN4 = min(PLAF_DEDFORFTS, TPS104)
NRDUFREPFI = max(min(ADUFREPFI, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS), 0)
RPQPRR1 = inf(GLPRR1 / CARPENBAP1)
PCSGD = PCSG * CSREC - PCSG_A * CSRECA
TEGLPALIM1 = GLPALIM1 * 1 - is_positive(INDTEFF) + TGLPALIM1 * is_positive(INDTEFF)
RNIDOM1 = arr(RNG + TTPVQ * TX15 / 100)
CSGDED = max(0, CSGDED3UA + CSGDEDAUTRE)
EMPIMP = positif_ou_nul(EMPREST) * COD8TL - EMPREST
ZIGREVXC = is_positive(REVCSXC + COD8XI) * TYPE2
TSBNV = TSHALLOV + ALLOV
TMIB_TTC = TMIB_TVENC + TMIB_TPRESC
INDT = is_positive(IND_COLC + IND_COLR + IND_COLP + IND_COLS + IND_CTXC + IND_CTXR + IND_CTXP + IND_CTXS) * INDTRAIT
BPTP2 = BTP2 * 1 - is_positive(present(TAX1649) + present(RE168))
RILMPA = max(min(AILMPA, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY), 0)
FRDA3 = FRN3 * is_positive(FRN3 - _10MINS3)
SPENET = sum([SPENETV, SPENETC, SPENETP])
TPLEINNSALP = is_positive(is_positive(PPEACP + is_positive(PPENJP - 360) + is_positive(is_positive(1 - null(PPE_AVRPRO1P + 0)) * is_positive(is_positive(PPETOTX) + is_positive(PPEREVSALP)) * is_positive(abs(PPERPROP))) * 1 - is_positive(LIGPPEJP)) * is_positive(INDLIGPPE) + is_positive(PPESAISITPP) * is_positive(PPEACP)) * INDPPEP * LIG0 * LIG2
CIRSE2 = CIRSE8TV + CIRSE8SA
_2TSN3 = CARTSP3 + REMPLAP3
PPETEMPS2 = arr(1 / PPE_COEFF2 * 100)
PERPBICPNC = BICEXC + BICNOC - BICDNC * 1 - is_positive(ART1731BIS) + BIHEXC + BIHNOC - BIHDNC * 1 - is_positive(ART1731BIS) + BIPERPC + LOCPROCGAC - LOCDEFPROCGAC * 1 - is_positive(ART1731BIS) + LOCPROC - LOCDEFPROC * 1 - is_positive(ART1731BIS)
INVRETKUA = min(NINVRETKU, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA)) * 1 - V_CNR
RSE39YP = is_positive(RSE4 + RSE5 + BREGV) * arr(VAR9YIPS * RSE3 - CSPROVYG / BINRPS) + 1 - is_positive(RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP - GLO9YP - RSE19YP - RSE29YP)
TGLPRRZ4M = is_positive(REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2Z4 / TOTALQUO) + 1 - is_positive(REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM - TGLPRRZCM - TGLPRRZ1M - TGLPRRZ2M - TGLPRRZ3M
PPCAP = PTOTPCAP
INVRETQP = min(arr(NINVRETQP * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI)) * 1 - V_CNR
LIGCELHR = is_positive(DCELREPHR) * LIG1 * LIG2
PREHAB = PREHABT + PREHABTN + PREHABTN1 + PREHABT1 + PREHABT2 + PREHABTN2 + PREHABTVT
PRSE5 = PTORSE5
BNCCREAC = BNCCRC + BNCCRFC
ABTS3VK = is_positive(BPCOSAC) * is_positive(GLDGRATC + CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * arr(REP10C * BPCOSAC / TSBC) + 1 - is_positive(GLDGRATC + CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * max(0, REP10C - ABTS1BJ - ABTS1BP)
IPQ32 = ZIPQ32 * 3
MIBNETVF = sum([MIB_NETVV, MIB_NETVC, MIB_NETVP])
CVNBASE_INR = max(0, CVNSALC - COD8YT - CVN9YP)
INVRETAV = min(arr(NINVRETAV * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ)) * 1 - V_CNR
LIGNEMP = is_positive(1 - null(NAPTEMP) + null(NAPTEMP) * null(NAPTIR) * null(NAPCRP))
LIGREPPBL = is_positive(REPPB + REPRL) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
INVRETOP = min(NINVRETOP, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON)) * 1 - V_CNR
LIGREPSU = is_positive(REPSU) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TEGLFV = GLFV * 1 - is_positive(INDTEFF) + TGLFV * is_positive(INDTEFF)
TERPQTSREMPV = RPQTSREMPV * 1 - is_positive(INDTEFF) + TRPQTSREMPV * is_positive(INDTEFF)
SPEABC = arr(max(MIN_SPEBNC, SPEBASABC * SPETXAB / 100) * positif_ou_nul(SPETOTC - MIN_SPEBNC)) + arr(min(MIN_SPEBNC, SPEBASABC) * is_positive(MIN_SPEBNC - SPETOTC))
LIGNIRIAF = INDNIRI * null(IBM23) * is_positive(is_positive(IRESTIT) + is_positive(V_NOTRAIT - 20)) * 1 - is_positive(LIGIDB) * 1 - is_positive(LIGRIDB) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - is_positive(IMPRET) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * LIG2
ISF4BIS = max(0, ISF5)
TTSN1UT = GLDGRATC - TABTS1UT
NBFOTH = 1 + BOOL_0AM + V_0CF + V_0CH / 2 + V_0CR + V_0DJ + V_0DN
LIGISFDEG = 1 - is_positive(LIGISFDEGR) * IND9HI0 * is_positive(ISFDEG)
LIGREP7UB = is_positive(REPCIFADSIN) * LIG1 * LIG2
ABAGU32 = arr(min(IPROGUY2 + IQUOEAJ32 * TX_RABGUY / 100, PLAF_RABGUY))
AUTOBICPNET = ABICPNETV + ABICPNETC + ABICPNETP
NPLOCV = min(0, LOCNPV + LOCGITHCV - LOCDEFNPV * 1 - is_positive(ART1731BIS * PREM8_11)) * positif_ou_nul(LOCDEFNPV * 1 - is_positive(ART1731BIS * PREM8_11) - LOCNPV - LOCGITHCV) + arr(max(0, LOCNPV + LOCGITHCV - LOCDEFNPV * 1 - is_positive(ART1731BIS * PREM8_11)) * MAJREV) * is_positive(LOCNPV + LOCGITHCV - LOCDEFNPV * 1 - is_positive(ART1731BIS * PREM8_11))
TAUREST = is_positive(REST) * max(0, min(CRERESTAU, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP))
TSBP = sum([TSB1, TSB2, TSB3, TSB4])
MIB_AVC = min(MIB_TVENC, max(MIN_MBIC, arr(MIB_TVENC * TX_MIBVEN / 100)))
ARESIMEUB_1 = arr(min(PLAF_RESINEUV, VIEUMEUB) / 9) * 1 - V_CNR
PMIB_AVC = min(MIBVENC, max(MIN_MBIC, arr(MIBVENC * TX_MIBVEN / 100)))
PPE_BOOL_BT = V_0BT * is_positive(2 - V_0AV - BOOLENF)
REPLOCIDFG = RLOCIDFG1 + RLOCIDFG2 + RLOCIDFG3 + RLOCIDFG4 + RLOCIDFG5 + RLOCIDFG6 + RLOCIDFG7 + RLOCIDFG8
PVBAR3VE = COD3VE + COD3UV
LIG21402 = (1 - INDCTX * INDREV1A8 * 1 - is_positive(IRANT) * null(NAPT) * LIG2 + null(IINET + NAPTOTA) * null(INDREV1A8) * is_positive(IND_REV) * is_positive(V_NOTRAIT - 20)) if (V_CR2 + 0 == 0 and NATIMP == 1 and IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + NRINET - NAPTOTA + NAPCR >= SEUIL_12 or V_CR2 + 0 == 1 and NATIMP == 1 or NATIMP == 0 and LIG2141 + 0 == 0) else 0
ZIPQRVG5 = is_positive(sum([TEGL1M, TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQRVGM / TETONEQUOM1) + 1 - is_positive(sum([TEGL1M, TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7 - ZIPQRWB5 - ZIPQRWA5
TGL3M = is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TGLN3 / TOTALQUO) + 1 - is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM - TGLRVGM - TGL1M - TGL2M
LIGREPINV = is_positive(REPINVRED) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RCELREPGP = max(0, RCELREPGP_1 * 1 - ART1731BIS + min(RCELREPGP_1, max(RCELREPGP_P + RCELREPGPP2, RCELREPGP1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPECOEFFU = arr(PPE_COEFFCONDU * 100)
PPE_FORMULEN = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINN * PPE_BOOL_MAXN * arr(positif_ou_nul(PPELIMSMIC - PPE_RCONTPN) * arr(PPE_RCONTPN * PPETX1 / 100) / PPE_COEFFN + is_positive(PPE_RCONTPN - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTPN) * arr(arr(PPELIMRPH - PPE_RCONTPN * PPETX2 / 100) / PPE_COEFFN) + is_positive(PPE_RCONTPN - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTPN) * arr(arr(PPELIMRPH2 - PPE_RCONTPN * PPETX3 / 100) / PPE_COEFFN))
INVRETSWA = min(NINVRETSW, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA)) * 1 - V_CNR
ZIGBASECS = is_positive(BCSG + V_CSANT)
TGLPALIMTOT = sum([TGLPALIMV, TGLPALIMC, TGLPALIM1, TGLPALIM2, TGLPALIM3, TGLPALIM4])
RDNCP = PVBARPS + PVTAUXPS * 1 - is_positive(IPVLOC)
RISFFIP_1 = min(18000, AISFFIP)
BICNPC = BINTAC + BINHTAC + MIB_NETNPVC + MIB_NETNPPC
REPDOMSOC3 = REPQN + REPQU + REPQK
NB0BTMIQAR = null(1 - VAR0BT) * null(V_0CF + V_0DJ + V_0CR + 0) * 2 * V_0CH - 2 * is_positive(V_0CH - 2)
AILMIZ = DILMIZ * 1 - ART1731BIS + min(DILMIZ, max(AILMIZ_P + AILMIZP2, AILMIZ1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
RPINELTOT = RPIQABCD
RCODJU4 = arr(arr(ACODJU / 9) * TX11 / 100)
INVRETSEA = min(NINVRETSE, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA)) * 1 - V_CNR
LIGILMPE = is_positive(DILMPE) * LIG1 * LIG2
PERPPLAFMU1C = is_positive(PERP_COND1) * 1 - is_positive(PERPIMPATRIE) * PERPPLATCANT - RPERPMUTV + is_positive(PERPIMPATRIE) * PERPPLAFIMPC - RPERPMUTV + is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE) * PERPPLATCANT + RPERPMUTC + is_positive(PERPIMPATRIE) * PERPPLAFIMPC + RPERPMUTC
CS_RVORIGND = ESFP
RI1RFRHR = max(RNGRFRHR - 1 - min(1, IPVLOC) * ABTPA - ABTMA, 0)
NINVRETMA = max(min(NRETROC40, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ), 0) * 1 - V_CNR
SOMMEA884 = present(TSHALLOV) + present(TSHALLOC) + present(TSHALLO1) + present(TSHALLO2) + present(TSHALLO3) + present(TSHALLO4) + present(PCAPTAXV) + present(PCAPTAXC) + present(ALLOV) + present(ALLOC) + present(ALLO1) + present(ALLO2) + present(ALLO3) + present(ALLO4) + present(PALIV) + present(PALIC) + present(PALI1) + present(PALI2) + present(PALI3) + present(PALI4) + present(PRBRV) + present(PRBRC) + present(PRBR1) + present(PRBR2) + present(PRBR3) + present(PRBR4) + present(CARTSV) + present(CARTSC) + present(CARTSP1) + present(CARTSP2) + present(CARTSP3) + present(CARTSP4) + present(CARTSNBAV) + present(CARTSNBAC) + present(CARTSNBAP1) + present(CARTSNBAP2) + present(CARTSNBAP3) + present(CARTSNBAP4) + present(REMPLAV) + present(REMPLAC) + present(REMPLAP1) + present(REMPLAP2) + present(REMPLAP3) + present(REMPLAP4) + present(REMPLANBV) + present(REMPLANBC) + present(REMPLANBP1) + present(REMPLANBP2) + present(REMPLANBP3) + present(REMPLANBP4) + present(CARPEV) + present(CARPEC) + present(CARPEP1) + present(CARPEP2) + present(CARPEP3) + present(CARPEP4) + present(CARPENBAV) + present(CARPENBAC) + present(CARPENBAP1) + present(CARPENBAP2) + present(CARPENBAP3) + present(CARPENBAP4) + present(PENSALV) + present(PENSALC) + present(PENSALP1) + present(PENSALP2) + present(PENSALP3) + present(PENSALP4) + present(PENSALNBV) + present(PENSALNBC) + present(PENSALNBP1) + present(PENSALNBP2) + present(PENSALNBP3) + present(PENSALNBP4) + present(REVACT) + present(DISQUO) + present(REVACTNB) + present(DISQUONB) + present(COD2FA) + present(RCMHAD) + present(RCMABD) + present(PENINV) + present(PENINC) + present(PENIN1) + present(PENIN2) + present(PENIN3) + present(PENIN4) + present(CODRAZ) + present(CODRBZ) + present(CODRCZ) + present(CODRDZ) + present(CODREZ) + present(CODRFZ) + present(RFORDI) + present(RFMIC) + present(FONCI) + present(REAMOR) + present(BPVRCM) + present(PVTAXSB) + present(BPVSJ) + present(BPV18C) + present(BPV18V) + present(BPCOPTC) + present(BPCOPTV) + present(BPV40C) + present(BPV40V) + present(COD3SG) + present(ABDETPLUS) + present(COD3SL) + present(ABIMPPV) + present(PVIMMO) + present(CODRVG) + present(BACREV) + present(_4BACREV) + present(BAHREV) + present(_4BAHREV) + present(BA1AV) + present(BACREC) + present(_4BACREC) + present(BAHREC) + present(_4BAHREC) + present(BA1AC) + present(BACREP) + present(_4BACREP) + present(BAHREP) + present(_4BAHREP) + present(BA1AP) + present(BICNOV) + present(LOCPROCGAV) + present(BIHNOV) + present(LOCPROV) + present(BICNOC) + present(LOCPROCGAC) + present(BIHNOC) + present(LOCPROC) + present(BICNOP) + present(LOCPROCGAP) + present(BIHNOP) + present(LOCPROP) + present(MIBVENV) + present(MIBPRESV) + present(BI1AV) + present(MIBVENC) + present(MIBPRESC) + present(BI1AC) + present(MIBVENP) + present(MIBPRESP) + present(BI1AP) + present(BICREV) + present(LOCNPCGAV) + present(LOCGITCV) + present(BICREC) + present(LOCNPCGAC) + present(LOCGITCC) + present(BICREP) + present(LOCNPCGAPAC) + present(LOCGITCP) + present(BICHREV) + present(LOCNPV) + present(LOCGITHCV) + present(BICHREC) + present(LOCNPC) + present(LOCGITHCC) + present(BICHREP) + present(LOCNPPAC) + present(LOCGITHCP) + present(MIBMEUV) + present(MIBGITEV) + present(LOCGITV) + present(MIBNPVENV) + present(MIBNPPRESV) + present(MIBMEUC) + present(MIBGITEC) + present(LOCGITC) + present(MIBNPVENC) + present(MIBNPPRESC) + present(MIBMEUP) + present(MIBGITEP) + present(LOCGITP) + present(MIBNPVENP) + present(MIBNPPRESP) + present(BNCREV) + present(BNCREC) + present(BNCREP) + present(BNHREV) + present(BNHREC) + present(BNHREP) + present(BNCPROV) + present(BNCPROC) + present(BNCPROP) + present(BN1AV) + present(BN1AC) + present(BN1AP) + present(BNCAABV) + present(ANOCEP) + present(INVENTV) + present(PVINVE) + present(BNCAADV) + present(DNOCEP) + present(BNCAABC) + present(ANOVEP) + present(INVENTC) + present(PVINCE) + present(BNCAADC) + present(DNOCEPC) + present(BNCAABP) + present(ANOPEP) + present(INVENTP) + present(PVINPE) + present(BNCAADP) + present(DNOCEPP) + present(BNCNPV) + present(BNCNPC) + present(BNCNPP)
INVRETTB = min(NINVRETTB, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW)) * 1 - V_CNR
TGLRWAM = is_positive(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * CODRWA / TOTALQUO) + 1 - is_positive(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM * null(2 - FLAG_EXIT)
INDRSE2 = is_positive(BRSE2) * is_positive(PRSE2 + CIRSE2 + CSPROVYF + CSPROVYN) * 1 - INDCTX
REPLOCIW = RETCODIW - RCODIW * is_positive(RESIVIANT + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IS015 = arr(DS015 * NB1)
BTANTGECUM = V_BTGECUM * 1 - present(DEPMOBIL) + DEPMOBIL
PPE_RCONTP4 = arr(PPE_RTA4 * PPE_COEFF4)
NBPT = NSM + NPA + NIN + NSP + NBQAR * 10 / 10
ZIPQTSREMPANT41 = IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANT1TOT - ZIPQTSREMPANTV1 - ZIPQTSREMPANTC1 - ZIPQTSREMPANT11 - ZIPQTSREMPANT21 - ZIPQTSREMPANT31
MICFR = present(RFMIC) * arr(RFMIC * TX_MICFON / 100)
LIGISFINV = is_positive(LIGISFPMED + LIGISFPMEI + LIGISFIP + LIGISFCPI) * LIGISF
INVRETENT = INVRETMA + INVRETLG + INVRETMB + INVRETMC + INVRETLH + INVRETLI + INVRETQP + INVRETQG + INVRETQO + INVRETQF + INVRETPB + INVRETPF + INVRETPJ + INVRETPA + INVRETPE + INVRETPI + INVRETPO + INVRETPT + INVRETPY + INVRETRL + INVRETRQ + INVRETRV + INVRETNV + INVRETPN + INVRETPS + INVRETPX + INVRETRK + INVRETRP + INVRETRU + INVRETNU + INVRETSB + INVRETSG + INVRETSL + INVRETSQ + INVRETSV + INVRETTA + INVRETSA + INVRETSF + INVRETSK + INVRETSP + INVRETSU + INVRETSZ + INVRETAB + INVRETAG + INVRETAL + INVRETAQ + INVRETAV + INVRETBB + INVRETAA + INVRETAF + INVRETAK + INVRETAP + INVRETAU + INVRETBA + INVRETPP + INVRETPU + INVRETRG + INVRETRM + INVRETRR + INVRETRW + INVRETNW + INVRETSC + INVRETSH + INVRETSM + INVRETSR + INVRETSW + INVRETTB + INVRETAC + INVRETAH + INVRETAM + INVRETAR + INVRETAW + INVRETBE
PPEPRIMEC = arr(PPENARPRIMEC)
TTSNN1 = is_positive(TTS1) * arr(TTS1 * TTSBN1 / TEXTS1) + 1 - is_positive(TTS1) * TTS1
TAPR2 = TIND_APB2 * TABPR2 + 1 - TIND_APB2 * min(TABPR2, TPL_PB - 1 - TIND_APBV * TAPRV - 1 - TIND_APBC * TAPRC - 1 - TIND_APB1 * TAPR1)
LIGREPPJA = is_positive(REPPJ + REPNV + REPTA + REPBB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TTSN1BP = ALLOC - TABTS1BP
RSOC2 = arr(max(min(INVRETXB * 1 - INDPLAF + INVRETXBA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1), 0)) * 1 - V_CNR
REPINVLOCNP = RESINEUV1 + RESINEUV2 + RESINEUV3 + RESINEUV4 + RESINEUV5 + RESINEUV6 + RESINEUV7 + RESINEUV8
TSPEABNPV = TSPEABV - TSPEABPV
T10MINS1 = max(min(TTSB1, TDEDMIN1), TDFN1)
RCELREPGV_1 = max(min(ACELREPGV, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
D10M3 = IND_MIN3 * DFN3 + 1 - IND_MIN3 * _10MINS3
ZIGCOD8YT = is_positive(COD8YT) * TYPE2
BPTP40 = BTP40 * 1 - is_positive(present(TAX1649) + present(RE168))
IPQ1001 = IPQRWB1 + IPQRWA1 + IPQRVG1 + sum([IPQ11, IPQ21, IPQ31, IPQ41]) + sum([IPQFV1, IPQFC1, IPQF11, IPQF21, IPQF31, IPQF41]) + sum([IPQPALIMV1, IPQPALIMC1, IPQPALIM11, IPQPALIM21, IPQPALIM31, IPQPALIM41]) + sum([IPQTSV1, IPQTSC1, IPQTS11, IPQTS21, IPQTS31, IPQTS41]) + sum([IPQTSREMPV1, IPQTSREMPC1, IPQTSREMP11, IPQTSREMP21, IPQTSREMP31, IPQTSREMP41]) + IPQRF11 + IPQRF21 + sum([IPQPRRV1 + IPQPRRZV1, IPQPRRC1 + IPQPRRZC1, IPQPRR11 + IPQPRRZ11, IPQPRR21 + IPQPRRZ21, IPQPRR31 + IPQPRRZ31, IPQPRR41 + IPQPRRZ41]) + IPQRCMDC1 + IPQRCMFU1 + IPQRCMCH1 + IPQRCMTS1 + IPQRCMGO1 + IPQRCMTR1 + IPQRVO1 + IPQRVO51 + IPQRVO61 + IPQRVO71
TOTPAC = PPE_NB_PAC + PPE_NB_PAC_QAR
QUOKIREHR = TGL1 + TGL2 + TGL3 + TGL4 + sum([TGLPRRV + TGLPRRZV + TGLFV + TGLTSV + TGLTSREMPV + TGLPALIMV, TGLPRRC + TGLPRRZC + TGLFC + TGLTSC + TGLTSREMPC + TGLPALIMC, TGLPRR1 + TGLPRRZ1 + TGLF1 + TGLTS1 + TGLTSREMP1 + TGLPALIM1, TGLPRR2 + TGLPRRZ2 + TGLF2 + TGLTS2 + TGLTSREMP2 + TGLPALIM2, TGLPRR3 + TGLPRRZ3 + TGLF3 + TGLTS3 + TGLTSREMP3 + TGLPALIM3, TGLPRR4 + TGLPRRZ4 + TGLF4 + TGLTS4 + TGLTSREMP4 + TGLPALIM4]) + TGLRF1 + TGLRF2 + TGLRCMDC + TGLRCMFU + TGLRCMCH + TGLRCMTS + TGLRCMGO + TGLRCMTR + TGLRVO + TGLRVO5 + TGLRVO6 + TGLRVO7
REPAU = max(0, CODHAU - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP)) * 1 - ART1731BIS + max(0, CODHAU - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP)) * ART1731BIS * 1 - V_CNR
TGLRCMDCM = is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * arr(TONEQUOM * _2RCM / TOTALQUO) + 1 - is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM
NINVRETPM = max(min(INVOMRETPM, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009), 0) * 1 - V_CNR
BIPTTAV = BIPTAV + BI1AV
LIGREPPF = is_positive(REPPF) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
LIGREGCI = is_positive(present(REGCI) + present(COD8XY)) * is_positive(CICHR) * LIG1 * LIG2
NINVRETPYR = NINVRETPY - arr(NINVRETPY * TX375 / 100) * 1 - V_CNR
LIGTITREXV = is_positive(EXOVOUS) * 1 - is_positive(EXOCJT) * 1 - is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
ASSIMP = positif_ou_nul(ASSREST) * I2DH - ASSREST
RCEL_NQ_R = is_positive(CELLIERNQ) * arr(ACELNQ_R * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIGCDISPROV = is_positive(CDISPROV) * TYPE2
BN1P = BN1AP + PVINPE + INVENTP
TERPQRF2M = RPQRF2M * 1 - is_positive(INDTEFF) + TRPQRF2M * is_positive(INDTEFF)
AILMOA = DILMOA * 1 - V_CNR
SPEPVPV = BNCPRO1AV - BNCPRODEV
TIND_10MIN_04 = is_positive(TDEDMIN4 - TDFN4) * is_positive(TTSB4)
CILOYIMP = arr(ALOYIMP * TX_LOYIMP / 100) * 1 - is_positive(RE168 + TAX1649)
RPQ4RAJV = arr(GL4RAJV / DIVGL4) + 0
IPQANTRVG = ZIPQANTRVG * CODNVG
REPKT = max(0, INVOMENTKT - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - INVOMENTMN - RETROCOMMB - RETROCOMMC - RETROCOMLH - RETROCOMLI)) * 1 - ART1731BIS + max(0, INVOMENTKT - max(0, RCOLENT - REPENT5 - INVOMENTMN - RETROCOMMB - RETROCOMMC - RETROCOMLH - RETROCOMLI)) * ART1731BIS * 1 - V_CNR
BIN = BICPF + BICNPF
XBISC = is_positive(max(0, XBICNETC + max(0, XBICNPNETC))) * BI2AC + BI1AC
DEFLOC3 = 1 - is_positive(NPLOCNETF3) * abs(min(max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8 - LNPRODEF7 - LNPRODEF6 - LNPRODEF5 - LNPRODEF4 - LNPRODEF3, 0) - LNPRODEF2, LNPRODEF2)) * positif_ou_nul(LNPRODEF2 - max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8 - LNPRODEF7 - LNPRODEF6 - LNPRODEF5 - LNPRODEF4 - LNPRODEF3, 0)) * 1 - is_positive(ART1731BIS) + min(LNPRODEF2, TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + LNPRODEF2 * ART1731BIS * is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))
NINVRETABR = NINVRETAB - arr(NINVRETAB * TX375 / 100) * 1 - V_CNR
PS_BASE = BPRS
IAD32 = IDOM32 - DEC32 * 1 - is_positive(V_CR2 + IPVLOC) + is_positive(V_CR2 + IPVLOC) * IDOM32
TRPQRVO7M = inf(TGLRVO7M / RENTAXNB7)
RSN_CF = BSNCF * TX18 / 100
XBICNPNETC = XBICNPHDC - min(BICDEC, BICDEC1731 + 0) * is_positive(ART1731BIS) + BICDEC * 1 - ART1731BIS
DEFBANI = BAHQV + BAHQC + BAHQP - TOTDAGRI + _4BAQV + _4BAQC + _4BAQP + DBAIP + SOMDEFBANI
# TODO TEFFREVTOT3
AILMJX = DILMJX * 1 - ART1731BIS + min(DILMJX, max(AILMJX_P + AILMJXP2, AILMJX1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
RIVCELNBGL2 = RIVCELNBGL1
ZIPQTSREMP5TOT = sum([ZIPQTSREMPV5, ZIPQTSREMPC5, ZIPQTSREMP15, ZIPQTSREMP25, ZIPQTSREMP35, ZIPQTSREMP45])
NINVRETAVR = NINVRETAV - arr(NINVRETAV * TX375 / 100) * 1 - V_CNR
RLOG37 = max(min(INVRETUE * 1 - INDPLAF + INVRETUEA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33, RLOG34, RLOG35, RLOG36])), 0) * 1 - V_CNR
RRPRESCOMP = max(0, RRPRESCOMP_1 * 1 - ART1731BIS + min(RRPRESCOMP_1, max(RRPRESCOMP_P + RRPRESCOMPP2, RRPRESCOMP1731 + 0) * 1 - PREM8_11) * ART1731BIS)
# TODO REVMETRO
INVRETPNRA = min(NINVRETPNR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA - INVRETQORA - INVRETQFRA - INVRETPORA - INVRETPTRA)) * 1 - V_CNR
INDCOL = is_positive(IND_COLC + IND_COLR + IND_COLP + INDCOLVN)
GLRCMDC = is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * arr(TONEQUOHT * _2RCM / TOTALQUOHT) + 1 - is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT
INVRETRBA = min(arr(NINVRETRB * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA)) * 1 - V_CNR
# TODO F10BV
ABNCPDECC = AUTOBNCC
ZIG_TITRERP = 1 - is_positive(BCSG + V_CSANT) * is_positive(BRDS + V_RDANT) * is_positive(BPRS + V_PSANT) * 1 - is_positive(BCVNSAL + V_CVNANT) * 1 - V_CNR * LIG2
TMIB_PRESAP = min(MIBPRESP + MIBNPPRESP, max(MIN_MBIC, arr(MIBPRESP + MIBNPPRESP * TX_MIBPRES / 100)))
PMIB_NETVV = MIBVENV - PMIB_AVV
PPEPRIMEV = arr(PPENARPRIMEV)
ABTS1AP = is_positive(ALLOV) * is_positive(BPCOSAV + GLDGRATV + CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * arr(REP10V * ALLOV / TSBV) + 1 - is_positive(BPCOSAV + GLDGRATV + CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * max(0, REP10V - ABTS1AJ)
TGLTSREMP4M = is_positive(REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2REMP4 / TOTALQUO) + 1 - is_positive(REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM - TGLTSREMPCM - TGLTSREMP1M - TGLTSREMP2M - TGLTSREMP3M
ALOGSOC = ALOGSOC_1 * 1 - ART1731BIS + min(ALOGSOC_1, max(ALOGSOC_P + ALOGSOCP2, ALOGSOC1731 + 0) * 1 - PREM8_11) * ART1731BIS
# TODO NMAJCDIS1
INVRETQW = min(arr(NINVRETQW * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS)) * 1 - V_CNR
LIGREPRU = is_positive(REPRU) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
DCELREPHA = CELREPHA
TGLN3 = TGLN3V + TGLN3C
RCELREPHU_1 = max(min(RCELREP_HU, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1 - RCELREPHR_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIGDRSED4 = ZIGIDRSE * null(ANCSDED2 - V_ANREV + 4)
RRILOC = RRISUP - RLOGSOC - RDOMSOC1 - RIDOMPROTOT
TOTDAGRI = min(DAGRI6 + DAGRI5 + DAGRI4 + DAGRI3 + DAGRI2 + DAGRI1, max(DAGRIIMP1731, max(DAGRIIMP_P, DAGRIIMPP2))) * is_positive(ART1731BIS * 1 - PREM8_11) + DAGRIIMP * 1 - is_positive(ART1731BIS) + 0 * is_positive(ART1731BIS * PREM8_11)
TRPQTSREMP2M = inf(TGLTSREMP2M / REMPLANBP2)
RESIVIAN5 = arr(arr(ACODIW / 9) * TX25 / 100)
PRR2 = arr(PRN2 * PRB2 / EXPR2)
LIGCOLENT = is_positive(DCOLENT) * LIG1 * LIG2
BADPLAF = min(LIM_AIDOMI * 1 - is_positive(PREMAIDE) + LIM_PREMAIDE * is_positive(PREMAIDE) + MAJSALDOM * positif_ou_nul(V_ANREV - V_0DA - 65) + positif_ou_nul(V_ANREV - V_0DB - 65) * BOOL_0AM + V_0CF + V_0DJ + V_0DN + V_0CH + V_0DP / 2, LIM_AIDOMI3 * 1 - is_positive(PREMAIDE) + LIM_PREMAIDE2 * is_positive(PREMAIDE)) * 1 - is_positive(INAIDE + 0) + LIM_AIDOMI2 * is_positive(INAIDE + 0) * is_positive(RVAIDE)
TSN1TT = GLDGRATV - ABTS1TT
RCELRREDLX = max(0, RCELRREDLX_1 * 1 - ART1731BIS + min(RCELRREDLX_1, max(RCELRREDLX_P + RCELRREDLXP2, RCELRREDLX1731 + 0) * 1 - PREM8_11) * ART1731BIS)
LIGPPEJP = positif_ou_nul(360 - PPENJP) * is_positive(INDLIGPPE) * LIG0 * LIG2 * is_positive(PPENJP) * present(PPENJP) + is_positive(PPESAISITPP) * is_positive(PPEACP)
RCELRREDLB_1 = max(min(ACELRREDLB, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1), 0)
NINVRETRD = max(min(CODHRD, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA - NINVRETRB - NINVRETRC), 0) * 1 - V_CNR
CORIMP = positif_ou_nul(CORREST) * CICORSENOW - CORREST
TGL4RAJV = arr(TONEQUO * REV4RAJV / TOTALQUO)
REPDOMENTR2 = REPPM + REPRJ + REPPO + REPPT + REPPY + REPRL + REPRQ + REPRV + REPNV + REPPN + REPPS + REPPX + REPRK + REPRP + REPRU + REPNU + REPPP + REPPU + REPRG + REPRM + REPRR + REPRW + REPNW + REPPR + REPPW + REPRI + REPRO + REPRT + REPRY + REPNY
TEGLPRRZ3 = GLPRRZ3 * 1 - is_positive(INDTEFF) + TGLPRRZ3 * is_positive(INDTEFF)
TTSPRDP = sum([TTSPRD1, TTSPRD2, TTSPRD3, TTSPRD4])
RFACCTEFRFR = max(min(DFA, RBGTEFRFR - RPALETEFRFR - RPALPTEFRFR - DDCSG + TOTALQUO - SDD), 0)
IPQPALIM15 = ZIPQPALIM15 * PENSALNBP1
TERPQTSREMP4 = RPQTSREMP4 * 1 - is_positive(INDTEFF) + TRPQTSREMP4 * is_positive(INDTEFF)
BAIIMP = positif_ou_nul(BAIREST) * CICA - BAIREST
ZIG_TITREPN = is_positive(BPRS + V_PSANT) * 1 - V_CNR * LIG2
MIB_NETVV = MIBVENV - MIB_ABVV
LIGABDETP = is_positive(ABDETPLUS) * LIG1 * LIG2
LIGISFPLAF = is_positive(ISFPLAF) * 1 - null(5 - V_IND_TRAIT) * LIGISF * 1 - is_positive(ANNUL2042) + present(ISFPLAF) * is_positive(DISFBASE) * 1 - is_positive(ANNUL2042) * null(5 - V_IND_TRAIT)
ZIGCSGDCOR3 = ZIG_CSGDCOR * null(ANCSDED2 - V_ANREV + 3)
LIGILMIA = is_positive(DILMIA) * LIG1 * LIG2
RRESINEUV = RCODIL + RCODIN + RCODIV + RCODIJ
LIGBPTPGJ = is_positive(BPTP19WGWJ) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IND_MIN4 = 1 - is_positive(IND_10MIN_04)
HRLIMBTRFR1 = positif_ou_nul(LIMHR1 * 1 + BOOL_0AM - HRBTRFR1)
# TODO NMAJ1
ZIPQRCMCHANT1 = is_positive(TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQRCMCH / TETONEQUO1) + 1 - is_positive(TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMDCANT1 - ZIPQRCMFUANT1
RPQRVO5 = inf(GLRVO5 / RENTAXNB5)
RCODJT2 = RCODJT1
RCELREPGK = max(0, RCELREPGK_1 * 1 - ART1731BIS + min(RCELREPGK_1, max(RCELREPGK_P + RCELREPGKP2, RCELREPGK1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
GL1M = is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * GLN1 / TOTALQUOHT) + 1 - is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM - GLRVGM
XBICSV = XBICNETV + BA1AV
HONODECC = XHONOC + XHONOAAC
RSENETTOT = RSE1NET + RSE2NET + RSE3NET + RSE4NET + RSE5NET
LIGDLMRN6 = is_positive(DLMRN6) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
ZIGLOCOR4 = ZIGLOCOR * null(ANCSDED2 - V_ANREV + 4)
AFORET = max(0, AFORET_1 * 1 - ART1731BIS + min(AFORET_1, max(AFORET_P + AFORETP2, AFORET1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - V_CNR
# TODO MAJTXLOY4
RPQRCMGOM = inf(GLRCMGOM / RESTUCNB)
ZIPQRF1TOT = sum([ZIPQRF11, ZIPQRF21])
LIGREPLNPV = is_positive(REPLNPV) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ABTPATEF = NDA * NABTEF * ABAT_UNVIEUX * 1 - V_CNR
GL4RAJV = arr(TONEQUOHT * REV4RAJV / TOTALQUOHT)
ZIGCSANT = is_positive(V_CSANT) * TYPE2 * 1 - APPLI_OCEANS
TERPQTSREMP3 = RPQTSREMP3 * 1 - is_positive(INDTEFF) + TRPQTSREMP3 * is_positive(INDTEFF)
ZIPQRCMFUANT1 = is_positive(TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQRCMFU / TETONEQUO1) + 1 - is_positive(TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMDCANT1
SDC1 = max(0, DDCSG + DPA + DFA + DEDIV - APERPV - APERPC - APERPP - max(0, RBG)) * 1 - V_CNR + max(0, V_8ZT - max(0, RBG)) * V_CR2
REGVBASE = BREGV
NRCELRREDLX = max(min(CELRREDLX, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ])), 0)
TGLDOMAVEBJC = max(CODEBJ - TABDOMEBJ, 0)
ITOTDOM6 = IMETRO6 + INETABADAJ6 + INETABAEAJ6
XTPS103 = arr(XEXTS3 * TX_DEDFORFTS / 100)
LIGINTER = is_positive(CREINTERESSE) * LIG1 * LIG2
SOMDEFICITHTS = SOMDEFANT + SOMDEFLOC + SOMDEFBNC + SOMDEFBASUP + SOMDEFBIC + RFDHIS
RLOG38 = max(min(INVRETUF * 1 - INDPLAF + INVRETUFA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33, RLOG34, RLOG35, RLOG36, RLOG37])), 0) * 1 - V_CNR
ZIPQRF22 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * arr(IQUOTOT2 * TERPQRF2 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF12 - ZIPQPRRZ2TOT
SOMMEA538 = SOMMEA538VB + SOMMEA538CB + SOMMEA538PB + SOMMEA538VP + SOMMEA538CP + SOMMEA538PP
PLR3 = min(MIN_DEDPR, EXPR3)
LIGIRECR = is_positive(IRECR) * LIG1 * LIG2
PIR = PTOIR * positif_ou_nul(IAMD1 - SEUIL_61)
RLOC117 = max(min(INVRETSLR * 1 - INDPLAF + INVRETSLRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116])), 0) * 1 - V_CNR
ZIPQPRRZ1TOT = sum([ZIPQPRRZV1, ZIPQPRRZC1, ZIPQPRRZ11, ZIPQPRRZ21, ZIPQPRRZ31, ZIPQPRRZ41])
DCELREPHS = CELREPHS
RCEL_2011_R = is_positive(CELLIERNA + CELLIERNE) * arr(ACEL_R * TX22 / 100) + is_positive(CELLIERNC + CELLIERND + CELLIERNH) * arr(ACEL_R * TX25 / 100) + is_positive(CELLIERNF + CELLIERNJ) * arr(ACEL_R * TX13 / 100) + is_positive(CELLIERNI) * arr(ACEL_R * TX15 / 100) + is_positive(CELLIERNM + CELLIERNN) * arr(ACEL_R * TX40 / 100) + is_positive(CELLIERNK + CELLIERNO) * arr(ACEL_R * TX36 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGRRCEL34 = is_positive(RRCELLT) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
INVRETKGR = min(max(min(arr(INVRETKG * 13 / 7), NINVRETKG - INVRETKG), NINVRETKG - INVRETKG), PLAF_INVDOM1) * 1 - V_CNR
RRFTEO = RFNTEO
LIGTITREXVC = is_positive(EXOVOUS) * is_positive(EXOCJT) * 1 - is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
CDISAC = CDISC
LIGBAPERP = is_positive(BAPERPV + BAPERPC + BAPERPP + BANOCGAV + BANOCGAC + BANOCGAP) * LIG1 * LIG2
LIGREPPW = is_positive(REPPW) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
LIGXBINP = is_positive(XBINPV + XBINPC + XBINPP) * LIG1 * LIG2
CIRSE8SB = min(RSE8SB, arr(COD8XJ * TX038 / 100))
PLOCCGAC = LOCPROCGAC - LOCDEFPROCGAC * 1 - is_positive(ART1731BIS * PREM8_11)
RFCF = max(0, RFCE - RFDHIS * 1 - is_positive(PREM8_11))
TXSPEAAC = BNCREC + XHONOAAC - BNCDEC * 1 - is_positive(ART1731BIS)
PPE_BOOL_MAX1 = positif_ou_nul(PPELIMRPH - PPE_RCONTP1)
ABATOT2 = ABADO2 + ABAGU2
ZIGCSGDCOR1 = ZIG_CSGDCOR * null(ANCSDED2 - V_ANREV + 1)
PLAF1 = PLAF1M + PLAF1MGR + PLAF1GM
INVRETAYA = min(NINVRETAY, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA)) * 1 - V_CNR
ZIGIDGLO2 = ZIGIDGLO * null(ANCSDED2 - V_ANREV + 2)
PERPINDAFFC = is_positive(PERPINDC * 1 - V_CNR * 1 - is_positive(ANNUL2042) * null(IND_BTANC - 1) * is_positive(PERPIMPATRIE + 0) * is_positive(PERPPLAFNUNC + PERPPLAFC + positif_ou_nul(PERPC) * is_positive(PERPREVTOTC)) + 1 - is_positive(PERPIMPATRIE + 0) * present(PERPPLAFCC) + present(V_BTPERPC) * present(PERPPLAFNUC1) + present(V_BTPERPNUC1) * present(PERPPLAFNUC2) + present(V_BTPERPNUC2) * present(PERPPLAFNUC3) + present(V_BTPERPNUC3) + null(IND_BTANC - 2) * is_positive(V_BTPERPC + V_BTPERPNUC1 + V_BTPERPNUC2 + V_BTPERPNUC3 + PERPPLAFCC + PERPPLAFNUC1 + PERPPLAFNUC2 + PERPPLAFNUC3))
INVRETNVRA = min(NINVRETNVR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA)) * 1 - V_CNR
BAQV = BAEV + BAEMV
TSB3 = EXTS3
DEFBAHREV = is_positive(_4BAHREV) * arr(BAHDEV * 1 - is_positive(ART1731BIS * PREM8_11) * BAHREV / BARSREVV) + 1 - is_positive(_4BAHREV) * BAHDEV * 1 - is_positive(ART1731BIS * PREM8_11)
PERPINDAFFV = is_positive(PERPINDV * 1 - V_CNR * 1 - is_positive(ANNUL2042) * null(IND_BTANC - 1) * is_positive(PERPIMPATRIE + 0) * is_positive(PERPPLAFNUNV + PERPPLAFV + positif_ou_nul(PERPV) * is_positive(PERPREVTOTV)) + 1 - is_positive(PERPIMPATRIE + 0) * present(PERPPLAFCV) + present(V_BTPERPV) * present(PERPPLAFNUV1) + present(V_BTPERPNUV1) * present(PERPPLAFNUV2) + present(V_BTPERPNUV2) * present(PERPPLAFNUV3) + present(V_BTPERPNUV3) + null(IND_BTANC - 2) * is_positive(V_BTPERPV + V_BTPERPNUV1 + V_BTPERPNUV2 + V_BTPERPNUV3 + PERPPLAFCV + PERPPLAFNUV1 + PERPPLAFNUV2 + PERPPLAFNUV3))
TSPENETC = TSPENETPC + TSPENETNPC
# TODO REPAR3
TTSNN2REMPC = is_positive(TTSC) * TTSC - TTSNNC - TTSNN2TSC
RPQPRR3M = inf(GLPRR3M / CARPENBAP3)
REPHAR = max(0, CODHAR - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM)) * 1 - ART1731BIS + max(0, CODHAR - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM)) * ART1731BIS * 1 - V_CNR
TTSV = TTSNV - sum([max(0, GLD1V - TABGL1V), max(0, GLD2V - TABGL2V), max(0, GLD3V - TABGL3V)]) - max(CODDAJ - TABDOMDAJ, 0) - max(CODEAJ - TABDOMEAJ, 0)
EXTS4 = TSBN4 + _2TSN4
LIGNEUV = is_positive(LOCRESINEUV + INVNPROF1 + INVNPROF2) * is_positive(RESINEUV1 + RESINEUV2 + RESINEUV3 + RESINEUV4 + RESINEUV5 + RESINEUV6 + RESINEUV7 + RESINEUV8) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
FRD3 = 1 - is_positive(PREM8_11) * FRN3 * is_positive(FRN3 - _10MINS3) + null(4 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRN3, FRDPROV3) * is_positive(FRN4) + is_positive(PREM8_11) * max(0, FRDP - FRD1 - FRD2) * 1 - is_positive(FRN4) + null(5 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRN3, min(FRDPROV3, max(FRDPROV3P2, FRDPROV31731))) * is_positive(FRN4) + is_positive(PREM8_11) * max(0, FRDP - FRD1 - FRD2) * 1 - is_positive(FRN4)
IND_CTXR = is_positive(CS_DEG) * is_positive(BRDS) * is_positive(INDCTX)
PS_R1649 = R1649
PPE_COEFFCONDV = 1 - PPE_BOOL_TPV * null(PPENBJ - 360) * PPE_COEFFV + 1 - null(PPENBJ - 360) * PPENBJ * 1820 / 360 / PPENHV + PPEXTV * is_positive(PPE_SALAVDEFV + 0) + PPENJV * is_positive(PPE_AVRPRO1V + 0) * 1820 / 360
AFIPC = max(0, AFIPC_1 * 1 - ART1731BIS + min(AFIPC_1, max(AFIPC_P + AFIPCP2, AFIPC1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - V_CNR
IMETRO1 = arr(IPQ01 * EXO1 * REVMETRO / RG)
MEUBLERET = arr(DMEUBLE * TX25 / 100) * 1 - V_CNR
RCELJP_1 = max(min(RCEL_JP, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1 - RCEL_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPEPEXO4 = is_positive(PPE_AVRPRO1P + 0) + is_positive(SALEXT4 + 0) + 4 * is_positive(PPEXT4 + PPETPP4 + 0)
TSPEABPC = arr(TSPEABC * BNCPROC + AUTOBNCC / TSPETOTC)
PPETX3 = PPE_TX3
INVRETQSA = min(arr(NINVRETQS * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA)) * 1 - V_CNR
IND_COLC = is_positive(BCSG) * is_positive(PCSG + CICSG + CSGIM) * 1 - INDCTX
INETABAEAJ1 = max(0, IPROGUY1 + IQUOEAJ1 - ABAGU1)
TERPQPALIMVM = RPQPALIMVM * 1 - is_positive(INDTEFF) + TRPQPALIMVM * is_positive(INDTEFF)
TSPR2 = TSNN2 + PRR2 * 1 - PREM8_11 + max(0, TSNN2 + PRR2) * PREM8_11
LIGDEPCHO = DIFF7WY * is_positive(DEPCHO) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PERPPLAFC = is_positive(PERPINDC) * BOOL_0AM * max(0, is_positive(PERPREVTOTC) * max(min(arr(PERPREVTOTC * TX_PERPPLAF / 100), LIM_PERPMAX), LIM_PERPMIN) - PERPC + 1 - is_positive(PERPREVTOTC) * LIM_PERPMIN - PERPC) * 1 - V_CNR
ZIPQF45 = is_positive(TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQF4M / TETONEQUOM1) + 1 - is_positive(TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - sum([ZIPQFV5, ZIPQFC5, ZIPQF15, ZIPQF25, ZIPQF35])
# TODO MAJTX1
REVTS = sum([TSNN2TSV, TSNN2TSC, TSNN2TS1, TSNN2TS2, TSNN2TS3, TSNN2TS4]) * 1 - INDTEFF + sum([TTSNN2TSV, TTSNN2TSC, TTSNN2TS1, TTSNN2TS2, TTSNN2TS3, TTSNN2TS4]) * INDTEFF
RSE4BASE_INR = max(0, max(0, RSE8TX - CIRSE8TX - CSPROVYH) + max(0, RSE8SB - CIRSE8SB - CSPROVYP) - RSE49YP)
TEGLPRRTOTM = TEGLPRRVM + TEGLPRRCM + TEGLPRR1M + TEGLPRR2M + TEGLPRR3M + TEGLPRR4M
LIGDFRCMN = is_positive(DFRCMN) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
SPEABNPV = SPEABV - SPEABPV
DEFLOC10 = 1 - is_positive(NPLOCNETF10) * abs(min(max(NPLOCNETFHDEFANT - LNPRODEF10, 0) - LNPRODEF9, LNPRODEF9)) * positif_ou_nul(LNPRODEF9 - max(NPLOCNETFHDEFANT - LNPRODEF10, 0)) * 1 - is_positive(ART1731BIS) + min(LNPRODEF9, TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3 - DEFLOC4 - DEFLOC5 - DEFLOC6 - DEFLOC7 - DEFLOC8 - DEFLOC9) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + LNPRODEF9 * ART1731BIS * is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))
ABNCPNETC = AUTOBNCC - TBNCPABC
AFOREST = AFOREST_1 * 1 - ART1731BIS + min(AFOREST_1, max(AFOREST_P + AFORESTP2, AFOREST1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
GLPRR2M = is_positive(PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR22 / TOTALQUOHT) + 1 - is_positive(PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M
ZIPQ31 = is_positive(TEGL4 + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQ3 / TETONEQUO1) + 1 - is_positive(TEGL4 + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQRWB1 - ZIPQRWA1 - ZIPQRVG1 - sum([ZIPQ11, ZIPQ21])
RPQPRRZ2 = inf(GLPRRZ2 / CODNDZ)
BSOUFIP = min(FFIP, LIM_SOUFIP * 1 + BOOL_0AM)
GECUMWL = max(0, BGTECH + BGEPAHA - min(P2GE, BGEPAHA + BGTECH) + BTANTGECUMWL)
LIGSALDOM = present(CREAIDE) * LIG1 * LIG2
LIGRSN = is_positive(RINVTPME12 + RINVTPME13 + RINVTPME14) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
REPDOMSOC4 = REPKH + REPKI
LIGHABPRIN = is_positive(present(PREHABT) + present(PREHABT1) + present(PREHABT2) + present(PREHABTN) + present(PREHABTN1) + present(PREHABTN2) + present(PREHABTVT)) * LIG1 * LIG2
APROREP = DPROREP * 1 - ART1731BIS + min(DPROREP, max(APROREP_P + APROREPP2, APROREP1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
REPSQ = max(0, CODHSQ - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL)) * 1 - ART1731BIS + max(0, CODHSQ - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL)) * ART1731BIS * 1 - V_CNR
NINVRETNV = max(min(INVOMENTNV, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV), 0) * 1 - V_CNR
INVRETQOA = min(arr(NINVRETQO * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA)) * 1 - V_CNR
AILMPA = DILMPA * 1 - V_CNR
RPALPTEF = max(min(TOTPA, RBGTEF - RPALETEF - DDCSG + TOTALQUO - SDD), 0) * 1 - V_CNR
RPQTS1M = inf(GLTS1M / CARTSNBAP1)
IPQPRRZV5 = ZIPQPRRZV5 * CODNAZ
INVRETTAA = min(arr(NINVRETTA * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA)) * 1 - V_CNR
RETLOCIDEFG_1 = arr(arr(ACODIE / 9) * TX18 / 100) + arr(arr(ACODIF / 9) * TX18 / 100) + arr(arr(ACODID / 9) * TX11 / 100) + arr(arr(ACODIG / 9) * TX11 / 100)
INVRETNUR = min(arr(INVRETNU * 10 / 9), NINVRETNU - INVRETNU) * 1 - null(1 - abs(arr(INVRETNU * 10 / 9) - NINVRETNU - INVRETNU)) + NINVRETNU - INVRETNU * null(1 - abs(arr(INVRETNU * 10 / 9) - NINVRETNU - INVRETNU)) * 1 - V_CNR
IPQRF22 = ZIPQRF22 * REAMORNB
RCELJBGL_1 = max(min(RCEL_JBGL, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1 - RCEL_1 - RCELJP_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPE_DEBMM = PPE_DEBJJMM - PPE_DEBJJ * 100
TSQVO = _2TSNV + CODDAJ + CODEAJ
REPPU = max(0, INVOMRETPU - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP)) * 1 - ART1731BIS + max(0, INVOMRETPU - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP)) * ART1731BIS * 1 - V_CNR
PPENARPRIME4 = PPE_FORMULE4 * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCOND4 - 2) * 1 - PPE_BOOL_TP4 + arr(PPE_FORMULE4 * PPETXMAJ1) + arr(PPE_FORMULE4 * PPE_COEFF4 * PPETXMAJ2) * is_positive(2 - PPE_COEFFCOND4) * is_positive(PPE_COEFFCOND4 - 1) * 1 - PPE_BOOL_TP4 + PPE_FORMULE4 * is_positive(PPE_BOOL_TP4 + positif_ou_nul(1 - PPE_COEFFCOND4))
GLDOMAVEAJV = max(CODEAJ - ABDOMEAJ, 0) * INDEFTSV
A12RSOC = max(0, arr(RSOC3 + RSOC7 + RSOC26 + RSOC30 + RSOC33 + RSOC37 - RSOC3 + RSOC7 + RSOC26 + RSOC30 + RSOC33 + RSOC37 * TX65 / 100)) * 1 - V_CNR * 1 - ART1731BIS
EXTS1 = TSBN1 + _2TSN1
PERPPLAFNUC2ANT = present(PERPPLAFNUC2) * PERPPLAFNUC2 + 1 - present(PERPPLAFNUC2) * V_BTPERPNUC2
TGLF2 = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * PENF2 / TOTALQUO) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV - TGLFC - TGLF1
RCELRREDLX_1 = max(min(ACELRREDLX, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1 - RCELRREDLS_1 - RCELRREDLT_1 - RCELRREDLF_1 - RCELRREDLZ_1), 0)
RPQTSREMP3M = inf(GLTSREMP3M / REMPLANBP3)
RCELRREDLS = max(0, RCELRREDLS_1 * 1 - ART1731BIS + min(RCELRREDLS_1, max(RCELRREDLS_P + RCELRREDLSP2, RCELRREDLS1731 + 0) * 1 - PREM8_11) * ART1731BIS)
MIB_ABNPPC = max(0, arr(MIB_APC * MIBNPPRESC / MIB_TPRESC)) * present(MIBMEUC) + MIB_APC - MIB_ABPC * 1 - present(MIBMEUC)
TTSNGL3V = GLD3V - TABGL3V
PERP_NONV = is_positive(1 - is_positive(PERP_INDV) * 1 - is_positive(PRBRV + PALIV) * 1 - is_positive(PERP_COTV) * 1 - is_positive(PERP_INDC) * is_positive(PRBRC + PALIC))
RPQRVG = inf(GLRVG / CODNVG) + 0
REPLOCIG = RETCODIG - RCODIG * is_positive(LOCMEUBIG + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TPRN2 = is_positive(TTSNT2) * is_positive(TTSNT2 + TPRNN2) * TTSNT2 + TPRNN2 + positif_ou_nul(TTSNT2) * TPRNN2
# TODO IN57
RRESIMEUB = max(0, RRESIMEUB_1 * 1 - ART1731BIS + min(RRESIMEUB_1, max(RRESIMEUB_P + RRESIMEUBP2, RRESIMEUB1731 + 0) * 1 - PREM8_11) * ART1731BIS)
SPEABPC = arr(SPEABC * BNCPROC / SPETOTC)
LIGILMIC = is_positive(DILMIC) * LIG1 * LIG2
INVRETMCRA = min(NINVRETMCR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA)) * 1 - V_CNR
X10MINS3 = max(min(XTSB3, DEDMIN3), XDFN3)
# TODO MAJTXPCAP1
BIPTTAC = BIPTAC + BI1AC
NRCELREPHW = max(min(RCELREP_HW, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX])), 0)
RCELREPGJ = max(0, RCELREPGJ_1 * 1 - ART1731BIS + min(RCELREPGJ_1, max(RCELREPGJ_P + RCELREPGJP2, RCELREPGJ1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIPQPRRZ2TOT = sum([ZIPQPRRZV2, ZIPQPRRZC2, ZIPQPRRZ12, ZIPQPRRZ22, ZIPQPRRZ32, ZIPQPRRZ42])
A13UXI = max(0, min(BA13UXI, IDOM11 - DEC11 - RCOTFOR - RREPA - RAIDE - RDIFAGRI - RFORET - RFIPDOM - RFIPC - RCINE - RRESTIMO - RSOCREPR - RRPRESCOMP - RHEBE - RSURV - RINNO - RSOUFIP - RRIRENOV - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - A9RFOR - A10RFOR - A11RFOR - A12RFOR)) * 1 - ART1731BIS
LIGREPAO = is_positive(REPAO) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
PRSAPS = PRSCAPS - CIPRSAPS
CSTOTSSPENA = max(0, CSG + RDSN + PRS + BREGV + CVNSALC + CDIS + CGLOA + RSE1N + RSE2N + RSE3N + RSE4N + RSE5N)
INVRETRQA = min(arr(NINVRETRQ * TX375 / 100), max(0, MAXDOM3 - INVRETRLA)) * 1 - V_CNR
REPLOCIE = REPLOCIE1 + REPLOCIE2 + REPLOCIE3 + REPLOCIE4 + REPLOCIE5 + REPLOCIE6 + REPLOCIE7 + REPLOCIE8
PPCAPNETNEG = max(0, PIR + PTAXA + PPCAP - IRCUM - TAXACUM - PCAPCUM)
PERPSALC = TSHALLOC + ALLOC + GLD1C + GLD2C + GLD3C + GLDGRATC + BPCOSAC + TSASSUC + CARTSC + REMPLAC + CODDBJ + CODEBJ + max(0, SALEXTC - COD1BD)
NRCELREPHG = max(min(ACELREPHG, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH])), 0)
TRPQTSREMPVM = inf(TGLTSREMPVM / REMPLANBV)
TRPQPALIM3M = inf(TGLPALIM3M / PENSALNBP3)
TGLRVO5 = is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * arr(TONEQUO * _2RV2 / TOTALQUO) + 1 - is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVO
# TODO AGRIV
RFQ = FONCI + REAMOR
LIG70YT = INDC * INDP * 1 - INDV * ART1731BIS * LIG0 * LIG2
RLOC40 = max(min(INVRETQOR * 1 - INDPLAF + INVRETQORA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39])), 0) * 1 - V_CNR
REPTD = max(0, CODHTD - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW - CODHTB - CODHSE - CODHSJ - CODHSO - CODHST - CODHSY)) * 1 - ART1731BIS + max(0, CODHTD - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW - CODHTB - CODHSE - CODHSJ - CODHSO - CODHST - CODHSY)) * ART1731BIS * 1 - V_CNR
LIGLOCNEUF5 = is_positive(RIVL5) * LIG1
RIDOMPROE3 = RIDOMPROE3_1 * 1 - ART1731BIS + min(RIDOMPROE3_1, max(RIDOMPROE3_P + RIDOMPROE3P2, RIDOMPROE31731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
LIGLOCNSEUL = is_positive(LIGNPLOC + LIGDEFNPLOC + LIGNPLOCF)
ZIG_MONTANT = is_positive(BCSG + BRDS + BPRS + BCVNSAL + V_CSANT + V_RDANT + V_PSANT + V_CVNANT) * 1 - is_positive(ANNUL2042)
ZIPQPRRV2 = is_positive(sum([TEGLPRRC, TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPRRV / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRC, TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT
LIGREPSAV = is_positive(REPSV + REPAV) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
ZIPQPALIMANTC1 = is_positive(sum([TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPALIMC / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANTV1
LIGPERPP = is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * 1 - is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * 1 - is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFC) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
RCELREPYF = max(0, RCELREPYF_1 * 1 - ART1731BIS + min(RCELREPYF_1, max(RCELREPYF_P + RCELREPYFP2, RCELREPYF1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPAC = is_positive(REPAC) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
LIGPVSURSI = is_positive(PVSURSI + CODRWA) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPE_NB_PAC = V_0CF + V_0CR + V_0DJ + V_0DN
BIPTTAP = BIPTAP + BI1AP
PTAXLOY = PTOTLOY
RLOC91 = max(min(INVRETSL * 1 - INDPLAF + INVRETSLA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90])), 0) * 1 - V_CNR
RCELREPHA = max(0, RCELREPHA_1 * 1 - ART1731BIS + min(RCELREPHA_1, max(RCELREPHA_P + RCELREPHAP2, RCELREPHA1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NRILMJI = max(min(AILMJI, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ), 0)
RENT23 = max(min(INVRETAY * 1 - INDPLAF + INVRETAYA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22])), 0) * 1 - V_CNR
IND_10MIN_0C = is_positive(DEDMINC - DFNC) * is_positive(TSBC)
XBISP = is_positive(max(0, XBICNETP + max(0, XBICNPNETP))) * BI2AP + BI1AP
RSOC33 = arr(max(min(INVRETRC * 1 - INDPLAF + INVRETRCA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32])), 0)) * 1 - V_CNR
ZIG_BPCOS = is_positive(CS_BPCOS + RD_BPCOS + PS_BPCOS) * 1 - V_CNR * LIG1 * LIG2
LIGREPSJ = is_positive(REPSJ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TGLPRRZ2 = is_positive(TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2Z2 / TOTALQUO) + 1 - is_positive(TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV - TGLPRRZC - TGLPRRZ1
LIG022 = sum([TSNN21AFF, TSNN22AFF, TSNN23AFF, TSNN24AFF])
TGLF3M = is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENF3 / TOTALQUO) + 1 - is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFVM - TGLFCM - TGLF1M - TGLF2M
REPLOCIE6 = arr(arr(ACODIE / 9) * TX18 / 100)
BA1 = BA1V + BA1C + BA1P
_5RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _5RCM_I - REPRCM5) * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _5RCM_I - REPRCM5)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
# TODO RIVL4
PERPPLATCANT = 1 - is_positive(present(PERPPLAFCC) + present(PERPPLAFNUC1) + present(PERPPLAFNUC2) + present(PERPPLAFNUC3)) * V_BTPERPTOTC + is_positive(present(PERPPLAFCC) + present(PERPPLAFNUC1) + present(PERPPLAFNUC2) + present(PERPPLAFNUC3)) * PERPPLAFCC + PERPPLAFNUC1 + PERPPLAFNUC2 + PERPPLAFNUC3
LIGCELLN = is_positive(DCELRREDLN) * LIG1 * LIG2
GLPALIM1M = is_positive(PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENALIM1 / TOTALQUOHT) + 1 - is_positive(PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM - GLPALIMCM
DEFBACREC = is_positive(_4BACREC) * arr(BACDEC * 1 - is_positive(ART1731BIS * PREM8_11) * BACREC / BARREVAC) + 1 - is_positive(_4BACREC) * BACDEC * 1 - is_positive(ART1731BIS * PREM8_11)
ZIGPROVYF = is_positive(CSPROVYF + CSPROVYN) * TYPE2
BITAC = BIPTAC + BINTAC
PERPPLAFTP = PERPINDP * max(0, PERPPLAFP + PERPPLAFNUNP + PERPPLAFNU1P + PERPPLAFNU2P) * 1 - V_CNR
RLOG35 = max(min(INVRETUC * 1 - INDPLAF + INVRETUCA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33, RLOG34])), 0) * 1 - V_CNR
NBQAR4 = 1 / 4 * V_0CI
TRPQPALIM4 = inf(TGLPALIM4 / PENSALNBP4)
ZIPQRCMCH1 = is_positive(TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQRCMCH / TETONEQUO1) + 1 - is_positive(TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCMDC1 - ZIPQRCMFU1
ASOUFIP = BSOUFIP * 1 - ART1731BIS + min(BSOUFIP, max(ASOUFIP_P + ASOUFIPP2, ASOUFIP1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
LIGCELNBGL = is_positive(DCELNBGL) * LIG1 * LIG2
PPE_KIKEKU = 1 * is_positive(PPE_SALAVDEF1) + 2 * is_positive(PPE_SALAVDEF2) + 3 * is_positive(PPE_SALAVDEF3) + 4 * is_positive(PPE_SALAVDEF4)
INVRETKGA = min(arr(NINVRETKG * TX35 / 100), RNIDOM1) * 1 - V_CNR
LIGPERPCP = is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFV) * 1 - is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
DOMAVTO = DOMAVTD + DOMAVTG
RLOG29 = max(min(INVRETOG * 1 - INDPLAF + INVRETOGA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28])), 0) * 1 - V_CNR
# TODO NMAJRSE11
INVRETTAR = min(arr(INVRETTA * 5 / 3), NINVRETTA - INVRETTA) * 1 - null(1 - abs(arr(INVRETTA * 5 / 3) - NINVRETTA - INVRETTA)) + NINVRETTA - INVRETTA * null(1 - abs(arr(INVRETTA * 5 / 3) - NINVRETTA - INVRETTA)) * 1 - V_CNR
# TODO NMAJLOY1
LIGCELGU = is_positive(DCELREPGU) * LIG1 * LIG2
RLOC104 = max(min(INVRETSR * 1 - INDPLAF + INVRETSRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103])), 0) * 1 - V_CNR
INVRETMCA = min(arr(NINVRETMC * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA)) * 1 - V_CNR
TEGL4 = GL4 * 1 - is_positive(INDTEFF) + TGL4 * is_positive(INDTEFF)
RCELHNO = max(0, RCELHNO_1 * 1 - ART1731BIS + min(RCELHNO_1, max(RCELHNO_P + RCELHNOP2, RCELHNO1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TERPQPALIM2 = RPQPALIM2 * 1 - is_positive(INDTEFF) + TRPQPALIM2 * is_positive(INDTEFF)
APR1 = IND_APB1 * ABPR1 + 1 - IND_APB1 * min(ABPR1, PL_PB - 1 - IND_APBV * APRV - 1 - IND_APBC * APRC)
TRPQRVGM = inf(TGLRVGM / CODNVG)
LIGDEPMOB = is_positive(DIFF7WZ + DIFF7WD) * is_positive(DEPMOB) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RSN_CC = BSNCC * TX18 / 100
INVRETAQA = min(arr(NINVRETAQ * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA)) * 1 - V_CNR
REDUCAVTCEL = RCOTFOR + RREPA + RAIDE + RDIFAGRI + RFORET + RFIPDOM + RFIPC + RCINE + RRESTIMO + RSOCREPR + RRPRESCOMP + RHEBE + RSURV + RINNO + RSOUFIP + RRIRENOV + RLOGDOM + RCREAT + RCOMP + RRETU + RDONS + RDUFLOTOT + RPINELTOT + RNOUV + RPLAFREPME4 + RFOR + RTOURREP + RTOUHOTR + RTOUREPA
TERPQPRRZ3 = RPQPRRZ3 * 1 - is_positive(INDTEFF) + TRPQPRRZ3 * is_positive(INDTEFF)
RLOC110 = max(min(INVRETST * 1 - INDPLAF + INVRETSTA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103, RLOC104, RLOC105, RLOC106, RLOC107, RLOC108, RLOC109])), 0) * 1 - V_CNR
NRCELREPGW = max(min(ACELREPGW, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS])), 0)
TERPQTSREMP1 = RPQTSREMP1 * 1 - is_positive(INDTEFF) + TRPQTSREMP1 * is_positive(INDTEFF)
REPLOCIF = RETCODIF - RCODIF * is_positive(LOCMEUBIF + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RFCD = RFORDI + FONCI + REAMOR
BAEP = _4BACREP - _4DEFBACREP * positif_ou_nul(BARAP) + 0
_2CKREST = is_positive(REST) * max(0, min(CI2CK, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - IPELUS - CITEC - CIDEVDUR - CIGE - I2DH))
IQUOTOTANT1 = INANT51 - INANT01
DCELREPHZ = CELREPHZ
IAR = min(0, IAN + AVFISCOPTER - IRE) + max(0, IAN + AVFISCOPTER - IRE)
XBICIMPV = XBICHDV + XBICNPHDV
APERPP = 1 - V_CNR * max(min(RPERPP, RBG - RPALE - RPALP - RFACC - RDDIV - DDCSG + TOTALQUO - SDD - APERPV - APERPC), 0)
RLOC124 = max(min(INVRETSZR * 1 - INDPLAF + INVRETSZRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118, RLOC119, RLOC120, RLOC121, RLOC122, RLOC123])), 0) * 1 - V_CNR
TGLTSREMP3M = is_positive(TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2REMP3 / TOTALQUO) + 1 - is_positive(TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM - TGLTSREMPCM - TGLTSREMP1M - TGLTSREMP2M
LIGNOCEP = present(NOCEPV) + present(NOCEPC) + present(NOCEPP) * LIG0 * LIG2
ZIG_RTF = is_positive(CS_RTF + RD_RTF + PS_RTF + IND_ZIGRTF) * 1 - V_CNR * 1 - is_positive(ANNUL2042) * LIG1 * LIG2 * null(3 - INDIRPS)
TRPQFC = inf(TGLFC / COTFC)
NINVRETQV = max(min(INVOMQV, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVENDEB2009), 0) * 1 - V_CNR
BTPSB = PVTAXSB * 1 - is_positive(IPVLOC)
# TODO RPALP
TSPEBASABC = TSPETOTC
GLPRR3M = is_positive(PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR23 / TOTALQUOHT) + 1 - is_positive(PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M
IAMD3 = IBM33 - min(ACP3, IMPIM3)
IPQTSREMPANTV1 = ZIPQTSREMPANTV1 * REMPLANBV
BAQTOT = max(0, BAQV + BAQC + BAQP + BAHQTOTMAXN)
REPRCM5 = is_positive(REPRCMBIS) * min(arr(REPRCMBIS * _5RCM_I / RCM_I), REPRCMBIS - REPRCM1 - REPRCM2 - REPRCM3 - REPRCM4) + 1 - is_positive(REPRCMBIS) * 0
LIGREPAB = is_positive(REPAB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
REPRCM7 = is_positive(REPRCMBIS) * max(0, REPRCMBIS - REPRCM1 - REPRCM2 - REPRCM3 - REPRCM4 - REPRCM5 - REPRCM6) + 1 - is_positive(REPRCMBIS) * 0
_2ABAVC = is_positive(PROVIE) * min(arr(ABRCM2 * PROVIE / RAVC), ABRCM2 - ABAVC)
RAVC = RCMAV + PROVIE
LIGREPLOCIJ = is_positive(REPRESINEUV) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ID11 = arr(IPQ1 * arr(RI1 + REVQUOQHT) / arr(RB01 + TONEQUO))
INVRETPBRA = min(NINVRETPBR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA)) * 1 - V_CNR
AUBAINE9 = max(0, V_DIFTEOREEL - AUBAINE13A - AUBAINE13B - AUBAINE12 - AUBAINE11 - AUBAINE10)
TRPQ1 = inf(TGL1 / DIVGL1) + 0
RPQ1M = inf(GL1M / DIVGL1)
ZIPQPRR45 = is_positive(sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPRR4M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRRV5 - ZIPQPRRC5 - ZIPQPRR15 - ZIPQPRR25 - ZIPQPRR35
GLPALIM4 = is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENALIM4 / TOTALQUOHT) + 1 - is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV - GLPALIMC - GLPALIM1 - GLPALIM2 - GLPALIM3
TTSPR2 = TTSNN2 + TPRR2 * 1 - PREM8_11 + max(0, TTSNN2 + TPRR2) * PREM8_11
ACELREPGX = CELREPGX * 1 - ART1731BIS + min(CELREPGX, max(ACELREPGX_P + ACELREPGXP2, ACELREPGX1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
HRCONDTHEO = is_positive(null(2 - HRNBTRFR) * is_positive(HRLIM15) * is_positive(HRLIMBTRFR1 * HRLIMBTRFR2) * 1 - is_positive(CASECHR + 0))
SOMMEA895 = present(BAEXV) + present(BACREV) + present(_4BACREV) + present(BA1AV) + present(BACDEV) + present(BAEXC) + present(BACREC) + present(_4BACREC) + present(BA1AC) + present(BACDEC) + present(BAEXP) + present(BACREP) + present(_4BACREP) + present(BA1AP) + present(BACDEP) + present(BAHEXV) + present(BAHREV) + present(_4BAHREV) + present(BAHDEV) + present(BAHEXC) + present(BAHREC) + present(_4BAHREC) + present(BAHDEC) + present(BAHEXP) + present(BAHREP) + present(_4BAHREP) + present(BAHDEP) + present(FEXV) + present(BAFV) + 1 - null(V_FORVA + 0) + present(BAFPVV) + present(BAF1AV) + present(FEXC) + present(BAFC) + 1 - null(V_FORCA + 0) + present(BAFPVC) + present(BAF1AC) + present(FEXP) + present(BAFP) + 1 - null(V_FORPA + 0) + present(BAFPVP) + present(BAF1AP)
TRCM1 = _1RNC + RCAV + _1RAO
NINVRETAL = max(min(CODHAL, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG), 0) * 1 - V_CNR
PPENBHV = PPENHV + PPEXTV
RDRCMAPS = RDRCM1BISAPS + COD2FA
IPQPRR11 = ZIPQPRR11 * CARPENBAP1
IPQPRR42 = ZIPQPRR42 * CARPENBAP4
SOMDEFLOC = LOCDEFPROCGAV + LOCDEFPROV + LOCDEFPROCGAC + LOCDEFPROC + LOCDEFPROCGAP + LOCDEFPROP
ABTSRDJ = is_positive(CARTSP2) * is_positive(REMPLAP2) * arr(REP102 * CARTSP2 / TSB2) + 1 - is_positive(REMPLAP2) * max(0, REP102 - ABTS1DJ - ABTS1DP)
NINVRETMN = max(min(INVOMENTMN, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP), 0) * 1 - V_CNR
RCODJT5 = RCODJT1
LIGREPLI = is_positive(REPLI) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
GLRFTOTM = GLRF1M + GLRF2M
INETABADAJ6 = max(0, IPRODOM6 - ABADO6)
RIVCELNBGL6 = RIVCELNBGL1
NINVRETSLR = NINVRETSL - arr(NINVRETSL * TX375 / 100) * 1 - V_CNR
TRPQRCMFUM = inf(TGLRCMFUM / REVPEANB)
IPQTSANT21 = ZIPQTSANT21 * CARTSNBAP2
# TODO DLMRN1
ZIPQPALIM41 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPALIM4 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - sum([ZIPQPALIMV1, ZIPQPALIMC1, ZIPQPALIM11, ZIPQPALIM21, ZIPQPALIM31])
XBAP = BAHEXP + BAEXP
CIGLO = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET, ICIGLO))
ABTS1CP = is_positive(ALLO1) * is_positive(CARTSP1 + REMPLAP1) * arr(REP101 * ALLO1 / TSB1) + 1 - is_positive(CARTSP1 + REMPLAP1) * max(0, REP101 - ABTS1CJ)
REPMEUJV = DILMJV - RILMJV * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PLAF2 = PLAF2M + PLAF2MGR + PLAF2GM
IAN = max(0, IRB - AVFISCOPTER + CIRCMAVFT - IRETS - min(max(0, IAD11 - CIRCMAVFT - IRETS), CRCFA) - ICREREVET - CIGLO - CICULTUR - CIGPA - CIDONENTR - CICORSE - CIRECH - CICOMPEMPL * 1 - is_positive(RE168 + TAX1649) + min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(IPCAPTAXTOT + 0, max(0, INE - IRB + AVFISCOPTER - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)))) + min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - min(IPCAPTAXTOT + 0, max(0, INE - IRB + AVFISCOPTER - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)))) - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)))))
DCELREPYF = CELREPYF
ZIGPSANT = is_positive(V_PSANT) * TYPE2 * 1 - APPLI_OCEANS
TGLRF1 = is_positive(_3REVF) * arr(TONEQUO * _2REVF / TOTALQUO) + 1 - is_positive(_3REVF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMTOT
RCODIN = RCODIN_1 * 1 - ART1731BIS + min(RCODIN_1, max(RCODIN_P + RCODINP2, RCODIN1731 + 0) * 1 - PREM8_11) * ART1731BIS
NRPATNAT3 = max(min(APATNAT3, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT1 - NRPATNAT2), 0)
ALOYIMP = DLOYIMP
# TODO BRCM
BTP5 = PVIMPOS * 1 - is_positive(IPVLOC)
LIGDEFBA2 = is_positive(DEFBA2) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
PCDIS = PTOCDIS
TERPQPRRVM = RPQPRRVM * 1 - is_positive(INDTEFF) + TRPQPRRVM * is_positive(INDTEFF)
RLOC118 = max(min(INVRETSQR * 1 - INDPLAF + INVRETSQRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117])), 0) * 1 - V_CNR
BIPTAC = BICNOC - BICDNC * 1 - is_positive(ART1731BIS * PREM8_11)
ZIGREVXA = is_positive(REVCSXA) * TYPE2
INVRETXBR = min(max(min(arr(INVRETXB * 13 / 7), NINVRETXB - INVRETXB), NINVRETXB - INVRETXB), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR - INVRETRBR - INVRETRCR - INVRETRDR - INVRETXAR)) * 1 - V_CNR
# TODO MIBDREPNPV
TGLTSREMP4 = is_positive(REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2REMP4 / TOTALQUO) + 1 - is_positive(REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV - TGLTSREMPC - TGLTSREMP1 - TGLTSREMP2 - TGLTSREMP3
PRS = max(0, PRSC - CIPRS)
RISFPMED_1 = min(45000, AISFPMED)
BSNCM = max(0, min(REPSNO2, LIM_SOCNOUV2 * 1 + BOOL_0AM - BSNCL))
TTS4 = TTSN4
RCODIL_1 = max(min(RETCODIL, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU), 0)
RCELRREDLF_1 = max(min(ACELRREDLF, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1 - RCELRREDLS_1 - RCELRREDLT_1), 0)
CICA = arr(BAILOC98 * TX_BAIL / 100) * 1 - is_positive(RE168 + TAX1649)
REV3 = GLN3 * 1 - INDTEFF + TGLN3 * INDTEFF
INVRETSRA = min(NINVRETSR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA)) * 1 - V_CNR
GLF3 = is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENF3 / TOTALQUOHT) + 1 - is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV - GLFC - GLF1 - GLF2
SOMMEA890 = SOMMEA881 + present(TSHALLOV) + present(TSHALLOC) + present(CARTSV) + present(CARTSC) + present(CARTSNBAV) + present(CARTSNBAC)
RLOC11 = max(min(INVRETLI * 1 - INDPLAF + INVRETLIA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10])), 0) * 1 - V_CNR
TTPR3 = TTSN3 + TPRN3
TAPERPV = 1 - V_CNR * max(min(RPERPV, RBG * 1 - INDTEFF + TEFFREVTOT3 - RPALE - RPALP - RFACC - RDDIV - DDCSG + TOTALQUO - SDD), 0)
TOTPA = arr(PAAV * MAJREV) + PAAP
PPENBJ = max(1, arr(min(PPENBJAN, PPE_FIN - PPE_DEBUT + 1)))
BPTP3 = BTP3A * 1 - is_positive(V_EAD + V_EAG) * 1 - is_positive(present(TAX1649) + present(RE168))
REPLNPY = REPMEUIP + REPMEUIB + REPMEUJX + REPLOCIM + REPLOCIL + REPMEUOD
CS_REVETRANG = 0
LIGLOCNEUF3 = is_positive(RIVL3) * LIG1
TEGLFVM = GLFVM * 1 - is_positive(INDTEFF) + TGLFVM * is_positive(INDTEFF)
ZIPQF11 = is_positive(sum([TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQF1 / TETONEQUO1) + 1 - is_positive(sum([TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - sum([ZIPQFV1, ZIPQFC1])
TERPQPRRZ4M = RPQPRRZ4M * 1 - is_positive(INDTEFF) + TRPQPRRZ4M * is_positive(INDTEFF)
ABAGU4 = arr(min(IPROGUY4 + ID14 * TX_RABGUY / 100, PLAF_RABGUY))
NINVRETOU = max(min(INVOMLOGOU, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT), 0) * 1 - V_CNR
ZIGRSECOR = is_positive(ZIGRSEDD + ZIGRSERS) * 1 - null(V_IDRSEANT + DRSED + 0) * 1 - null(V_IDRSEANT - DRSED) * is_positive(V_NOTRAIT - 20) * LIG2
LIG2 = 1 - is_positive(ANNUL2042)
REGVBASE_INR = max(0, BREGV - REGV9YP)
RIVCELJBGL8 = arr(min(CELLIERJB + CELLIERJG + CELLIERJL, LIMCELLIER) * is_positive(CELLIERJB) * TX22 / 100 + min(CELLIERJB + CELLIERJG + CELLIERJL, LIMCELLIER) * is_positive(CELLIERJG) * TX13 / 100 + min(CELLIERJB + CELLIERJG + CELLIERJL, LIMCELLIER) * is_positive(CELLIERJL) * TX36 / 100) - 8 * RIVCELJBGL1 * 1 - V_CNR
SPENETPV = max(0, BNCPROV - SPEABPV)
PPE_AVRPRO1C = present(FEXC) + present(BAFC) + present(BAEXC) + present(BACREC) + present(_4BACREC) + present(BACDEC) + present(BAHEXC) + present(BAHREC) + present(_4BAHREC) + present(BAHDEC) + present(BICEXC) + present(BICNOC) + present(BICDNC) + present(BIHEXC) + present(BIHNOC) + present(BIHDNC) + present(BNCEXC) + present(BNCREC) + present(BNCDEC) + present(BNHEXC) + present(BNHREC) + present(BNHDEC) + present(MIBEXC) + present(BNCPROEXC) + present(MIBVENC) + present(MIBPRESC) + present(BNCPROC) + present(BAFPVC) + present(MIBPVC) + present(BNCPROPVC) + present(BAFORESTC) + present(AUTOBICVC) + present(AUTOBICPC) + present(AUTOBNCC) + present(LOCPROC) + present(LOCPROCGAC) + present(LOCDEFPROCGAC) + present(LOCDEFPROC) + present(XHONOAAC) + present(XHONOC)
TRPQPALIMV = inf(TGLPALIMV / PENSALNBV)
RPATNAT3_1 = max(min(APATNAT3, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP - RTOUHOTR - RTOUREPA - RCELTOT - RLOCNPRO - RPATNAT1 - RPATNAT2), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INTMSISF = inf(MOISAN_ISF / 10000)
LIGPLOC2 = is_positive(DEFLOC2) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
PRBV = PRBRV + PALIV + PENINV
LIBREST = is_positive(REST) * max(0, min(AUTOVERSLIB, IRESTITIR - PPETOTX - PPERSA))
APRESCOMP = BPRESCOMP * 1 - ART1731BIS + min(BPRESCOMP, max(APRESCOMP_P + APRESCOMPP2, APRESCOMP1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
IMETRO6 = arr(ID16 * REVMETRO / RG)
INVRETBGA = min(NINVRETBG, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA)) * 1 - V_CNR
RIVCELNBGL5 = RIVCELNBGL1
LIGPPEP = null(INDPPEV) * null(INDPPEC) * is_positive(INDPPEP) * TYPEPPE
TSPRD4 = min(0, TSNN4 + PRR4) * ART1731BIS
NPLOCNETF5 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(LNPRODEF10, LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF10 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF9, LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF9 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF8, LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF8 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF7, LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF7 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF6, LNPRODEF61731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF6 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF5, LNPRODEF51731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF5 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF4, LNPRODEF41731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF4 * 1 - is_positive(ART1731BIS * PREM8_11)
IPQ25 = ZIPQ25 * 2
CIRSE5 = min(RSE5, arr(REVCSXB * TX075 / 100))
MIB_NETVC = MIBVENC - MIB_ABVC
RILMOE = max(min(AILMOE, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV), 0)
_2RAR = 1 - is_positive(EXFR) * INTERE - _2FRAR + is_positive(EXFR) * 0
TSNRDJ = CARTSP2 - ABTSRDJ
IMETRO2 = arr(IPQ02 * EXO1 * REVMETRO / RG)
TPENALIM1 = is_positive(TEXPR1) * TPRN1 - TPRR1 - TPRR21 - TPRR2Z1 - TPENF1
# TODO NMAJGLO1
PPESALC = PPE_SALAVDEFC + PPE_RPROC * 1 - is_positive(PPE_RPROC)
BARREVAP = BACREP + _4BACREP
RFIPC_1 = max(min(RFIPCORSE, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPDOM_1), 0)
RISFFCPI = max(min(RISFFCPI_2, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED - RISFPMEI - RISFFIP), 0) * is_positive(1 - null(CODE_2042 - 8) * 1 - null(CMAJ_ISF - 8) * 1 - null(CMAJ_ISF - 34)) + max(min(RISFFCPI_2, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED - RISFPMEI - RISFFIP), 0) * 1 - is_positive(1 - null(CODE_2042 - 8) * 1 - null(CMAJ_ISF - 8) * 1 - null(CMAJ_ISF - 34)) * COD9ZA
# TODO MAJOISFTARDIF_R
LIGCELHV = is_positive(DCELREPHV) * LIG1 * LIG2
ZIPQFANTV1 = is_positive(sum([TEGLFC, TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQFV / TETONEQUO1) + 1 - is_positive(sum([TEGLFC, TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT
TERPQRCMFUM = RPQRCMFUM * 1 - is_positive(INDTEFF) + TRPQRCMFUM * is_positive(INDTEFF)
PREGV = PTOREGV
PERPPLAFP = is_positive(PERPINDP) * max(0, is_positive(PERPREVTOTP) * max(min(arr(PERPREVTOTP * TX_PERPPLAF / 100), LIM_PERPMAX), LIM_PERPMIN) - PERPP + 1 - is_positive(PERPREVTOTP) * LIM_PERPMIN - PERPP) * 1 - V_CNR
ZIGR30 = is_positive(ZIG_PENATX4) * is_positive(R1649 + PREREV) * LIG2
PPEREVSALV = is_positive(PPESALVTOT * INDLIGPPE + PPESALV * is_positive(PPEPRIMEVT) * is_positive(PPETOTX)) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * INDPPEV * INDLIGPPE
ACOMP = RFC * 1 - ART1731BIS + min(RFC, max(ACOMP_P + ACOMPP2, ACOMP1731 + 0) * 1 - PREM8_11) * ART1731BIS
TEGLRCMCHM = GLRCMCHM * 1 - is_positive(INDTEFF) + TGLRCMCHM * is_positive(INDTEFF)
LIG0TSUP = INDNIRI * null(IRNETBIS) * positif_ou_nul(TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - SEUIL_61) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(V_NOTRAIT - 20) * 1 - is_positive(INDCTX) * LIG2
RCELRREDLD = max(0, RCELRREDLD_1 * 1 - ART1731BIS + min(RCELRREDLD_1, max(RCELRREDLD_P + RCELRREDLDP2, RCELRREDLD1731 + 0) * 1 - PREM8_11) * ART1731BIS)
SALREST = is_positive(REST) * max(0, min(CIADCRE, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET))
INVRETAJA = min(NINVRETAJ, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA)) * 1 - V_CNR
PLAF_ISFRED = 50000 * 1 - is_positive(ISFPMEDI + ISFPMEIN + ISFFIP + ISFFCPI) + 45000 * is_positive(ISFPMEDI + ISFPMEIN + ISFFIP + ISFFCPI)
RLOG23 = max(min(INVRETOU * 1 - INDPLAF + INVRETOUA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22])), 0) * 1 - V_CNR
RCOTFOR_1 = max(min(arr(ACOTFOR_R * TX76 / 100), IDOM11 - DEC11), 0)
BTPVT = GAINPEA * 1 - is_positive(IPVLOC)
ZIPQPALIM31 = is_positive(TEGLPALIM4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPALIM3 / TETONEQUO1) + 1 - is_positive(TEGLPALIM4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - sum([ZIPQPALIMV1, ZIPQPALIMC1, ZIPQPALIM11, ZIPQPALIM21])
LIG1820 = is_positive(ABADO + ABAGU + RECOMP) * LIG2
ACELREPHW = CELREPHW * 1 - ART1731BIS + min(CELREPHW, max(ACELREPHW_P + ACELREPHWP2, ACELREPHW1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RRESTIMOXY = max(RRESTIMO - A12RRESTIMO, 0) * 1 - V_CNR
LIGREP7PD = is_positive(REPMEUPD) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BOOL_0AZ = null(V_0AZ - inf(V_0AZ / 10000) * 10000 - V_ANREV)
LIG_CORRECT = positif_ou_nul(IBM23) * INDREV1A8 * LIG1 * LIG2
RISFDONCEE_2 = max(0, min(PLAF_ISFRED - RISFDONF_1, RISFDONCEE_1))
RISFPMEI_1 = max(0, min(45000 - RISFPMED_1, AISFPMEI))
DS512 = max(QF512 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF512 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF512 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF512 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF512 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
LIG3730 = 1 - is_positive(20 - V_NOTRAIT) * is_positive(BOOL_0AZ) * LIG1
BRSE8SA = COD8SA * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
LIG2051 = 1 - is_positive(20 - V_NOTRAIT) * is_positive(RECUMBIS)
PPETEMPS1 = arr(1 / PPE_COEFF1 * 100)
PENFP = PENF1 + PENF2 + PENF3 + PENF4
# TODO RNIDF1
LIGIDB = INDNIRI * null(IBM23) * is_positive(TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES + NAPCRP) * is_positive(SEUIL_61 - TAXASSUR - IPCAPTAXTOT - TAXLOY - CHRAPRES) * is_positive(SEUIL_61 - NAPCRP) * 1 - is_positive(IRESTIT) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * 1 - is_positive(NRINET) * LIG2
GLRCMGOM = is_positive(_7RCM + REVRF) * arr(TONEQUOMHT * _6RCM / TOTALQUOHT) + 1 - is_positive(_7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM - GLRCMFUM - GLRCMCHM - GLRCMTSM
# TODO TAXLOYDEG
NPLOCNETF7 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(LNPRODEF10, LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF10 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF9, LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF9 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF8, LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF8 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF7, LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF7 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF6, LNPRODEF61731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF6 * 1 - is_positive(ART1731BIS * PREM8_11)
TPRR2ZV = is_positive(PEBFV + PENSALV) * arr(TPRNV * CODRAZ / TEXPRV) + 1 - is_positive(PEBFV + PENSALV) * TPRNV - TPRRV - TPRR2V
LIGREPMC = is_positive(REPMC) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RNBE = RNBE_1 * 1 - ART1731BIS + min(RNBE_1, max(RNBE_P + RNBEP2, RNBE1731 + 0) * 1 - PREM8_11) * ART1731BIS
RCELREPYH_1 = max(min(ACELREPYH, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
# TODO RECUMIR
TTSNN2REMP3 = is_positive(TTS3) * TTS3 - TTSNN3 - TTSNN2TS3
TEGLRCMFU = GLRCMFU * 1 - is_positive(INDTEFF) + TGLRCMFU * is_positive(INDTEFF)
RPQRCMDC = inf(GLRCMDC / REVACTNB)
ZIPQRCMGO1 = is_positive(TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQRCMGO / TETONEQUO1) + 1 - is_positive(TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCMDC1 - ZIPQRCMFU1 - ZIPQRCMCH1 - ZIPQRCMTR1
RIVCEL8 = arr(min(CELSOMN, LIMCELLIER) * is_positive(CELLIERNM + CELLIERNN) * TX40 / 100 + min(CELSOMN, LIMCELLIER) * is_positive(CELLIERNK + CELLIERNO) * TX36 / 100 + min(CELSOMN, LIMCELLIER) * is_positive(CELLIERNC + CELLIERND + CELLIERNH) * TX25 / 100 + min(CELSOMN, LIMCELLIER) * is_positive(CELLIERNA + CELLIERNE) * TX22 / 100 + min(CELSOMN, LIMCELLIER) * is_positive(CELLIERNI) * TX15 / 100 + min(CELSOMN, LIMCELLIER) * is_positive(CELLIERNF + CELLIERNJ) * TX13 / 100) - 8 * RIVCEL1 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RAGRI = arr(BDIFAGRI * TX_DIFAGRI / 100)
TIND_10MIN_02 = is_positive(TDEDMIN2 - TDFN2) * is_positive(TTSB2)
TRPQ4TVC = arr(TGL4TVC / DIVGL4) + 0
TGLPRRZ3 = is_positive(TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2Z3 / TOTALQUO) + 1 - is_positive(TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV - TGLPRRZC - TGLPRRZ1 - TGLPRRZ2
_4BAQC = max(0, _4BACREC - _4DEFBACREC) * positif_ou_nul(BARAC) + arr(max(0, _4BAHREC - _4DEFBAHREC) * MAJREV) * positif_ou_nul(BARSC)
BANC = BACREC - DEFBACREC * positif_ou_nul(BARAC) + BARAC * 1 - is_positive(BARAC)
RFOREST2 = min(REPFOR1 + REPSINFOR2, max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR - RFOREST1))
PERPPLAFNU3V = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE + 0) * is_positive(PERPPLAFNUV) * PERPPLAFNUV3ANT + 1 - is_positive(PERPPLAFNUV) * max(0, PERPPLAFNUV3ANT - RPERPV - PERPPLAFVANT) + is_positive(PERPIMPATRIE + 0) * 0 + is_positive(PERP_COND1) * 0 + is_positive(PERP_COND2) * is_positive(PERPPLAFNUV) * PERPPLAFNUV3ANT + 1 - is_positive(PERPPLAFNUV) * max(0, PERPPLAFNUV3ANT - RPERPV + RPERPMUTC + RACCOTC - PERPPLAFVANT)
ZIGPREREV = is_positive(PREREV) * 1 - V_CNR * LIG1 * LIG2
TRPQRCMCH = inf(TGLRCMCH / PROVIENB)
RPQTS3 = inf(GLTS3 / CARTSNBAP3)
PPE_BOOL_MIN2 = positif_ou_nul(PPE_RTA2 - PPELIMRPB) * 1 - PPE_BOOL_NADA2
PPE_BOOL_NADA4 = min(1, is_positive(TSHALLO4 + 0) * null(PPETPP4 + 0) * null(PPENHP4 + 0) + is_positive(SALEXT4 + 0) * null(PPETPP4 + 0) * null(PPEXT4 + 0))
TEGLTSREMPCM = GLTSREMPCM * 1 - is_positive(INDTEFF) + TGLTSREMPCM * is_positive(INDTEFF)
RISFDONCEE_1 = max(0, min(PLAF_ISFRED - RISFDONF_1, AISFDONCEE))
RILMIX = max(0, RILMIX_1 * 1 - ART1731BIS + min(RILMIX_1, max(RILMIX_P + RILMIXP2, RILMIX1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETABRA = min(NINVRETABR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA - INVRETSGRA - INVRETSARA - INVRETSFRA)) * 1 - V_CNR
PPE_BOOL_NADA1 = min(1, is_positive(TSHALLO1 + 0) * null(PPETPP1 + 0) * null(PPENHP1 + 0) + is_positive(SALEXT1 + 0) * null(PPETPP1 + 0) * null(PPEXT1 + 0))
INVRETAFA = min(arr(NINVRETAF * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA)) * 1 - V_CNR
RINVRED = max(0, RINVRED_1 * 1 - ART1731BIS + min(RINVRED_1, max(RINVRED_P + RINVREDP2, RINVRED1731 + 0) * 1 - PREM8_11) * ART1731BIS)
MIB_NP1AV = MIBNP1AV - MIBNPDEV
TGL3 = is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TGLN3 / TOTALQUO) + 1 - is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA - TGLRVG - TGL1 - TGL2
DENPLOCAFFP = is_positive(present(LOCNPCGAPAC) + present(LOCGITCP) + present(LOCDEFNPCGAPAC) + present(LOCNPPAC) + present(LOCGITHCP) + present(LOCDEFNPPAC))
PRB2 = PRBR2 + PALI2 + PENIN2
NINVRETQPR = NINVRETQP - arr(NINVRETQP * TX40 / 100) * 1 - V_CNR
# TODO TAXADEG
RCELTOT = RCELRREDSOM + sum([RCELREPHS, RCELREPHR, RCELREPHU, RCELREPHT, RCELREPHZ, RCELREPHX, RCELREPHW, RCELREPHV, RCELREPHF, RCELREPHE, RCELREPHD, RCELREPHH, RCELREPHG, RCELREPHB, RCELREPHA]) + sum([RCELREPGU, RCELREPGX, RCELREPGT, RCELREPGS, RCELREPGW, RCELREPGP, RCELREPGL, RCELREPGV, RCELREPGK, RCELREPGJ]) + sum([RCELREPYH, RCELREPYL, RCELREPYG, RCELREPYF, RCELREPYK, RCELREPYE, RCELREPYD, RCELREPYJ, RCELREPYC, RCELREPYB, RCELREPYI, RCELREPYA]) + RCELHM + RCELHL + RCELHNO + RCELHJK + RCELNQ + RCELNBGL + RCELCOM + RCEL + RCELJP + RCELJBGL + RCELJOQR + RCEL2012 + RCELFD + RCELFABC
RPQPALIM4M = inf(GLPALIM4M / PENSALNBP4)
RENT08 = max(min(INVRETAF * 1 - INDPLAF + INVRETAFA * INDPLAF, RRIRENT - sum([RENT01, RENT02, RENT03, RENT04, RENT05, RENT06, RENT07])), 0) * 1 - V_CNR
RDSAC = max(0, RDSC - CIRDS)
LIGTXMOYPS = is_positive(TXMOYIMP) * 1 - is_positive(V_CNR) * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO) + is_positive(present(NRINET) + present(NRBASE) + present(IMPRET) + present(BASRET))) * IND_REV * LIG2 * is_positive(20 - V_NOTRAIT)
ZIG_PROF = is_positive(CS_REVCS + RD_REVCS + PS_REVCS + IND_ZIGPROF) * 1 - is_positive(ANNUL2042) * LIG1 * null(3 - INDIRPS)
NINVRETST = max(min(CODHST, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO), 0) * 1 - V_CNR
# TODO F10AV
IQUORAJ1 = arr(IPQ1001 * TERPQ4RAJV + TERPQ4RBJC / TERPQ4TVC + TERPQTSV + TERPQTSC)
PPE_RTAV = max(0, PPESALV + PPE_RPROV * is_positive(PPE_RPROV))
# TODO PPERPROC
TFRDCREP = is_positive(ART1731BIS) * max(0, FRNC - TFRDC) * null(TIND_10C)
TEGLTS4M = GLTS4M * 1 - is_positive(INDTEFF) + TGLTS4M * is_positive(INDTEFF)
INDRSE3 = is_positive(BRSE3) * is_positive(PRSE3 + CIRSE3 + CSPROVYG) * 1 - INDCTX
TEXTS3 = TTSBN3 + T2TSN3
ACELREPHA = CELREPHA * 1 - ART1731BIS + min(CELREPHA, max(ACELREPHA_P + ACELREPHAP2, ACELREPHA1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TAPB3 = max(TPLR3, TEXPR3 * TX_DEDPER / 100)
RENT02 = max(min(INVRETAG * 1 - INDPLAF + INVRETAGA * INDPLAF, RRIRENT - RENT01), 0) * 1 - V_CNR
EXTS3 = TSBN3 + _2TSN3
NINVRETPX = max(min(INVOMRETPX, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS), 0) * 1 - V_CNR
DCEL = CELSOMN
REPPW = max(0, INVOMRETPW - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW - INVOMRETPR)) * 1 - ART1731BIS + max(0, INVOMRETPW - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW - INVOMRETPR)) * ART1731BIS * 1 - V_CNR
RLOG36 = max(min(INVRETUD * 1 - INDPLAF + INVRETUDA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33, RLOG34, RLOG35])), 0) * 1 - V_CNR
LIGREP7UT = is_positive(REPCIFSIN) * LIG1 * LIG2
TRPQRWAM = inf(TGLRWAM / CODNWA)
LIGSPDREPNPV = is_positive(SPEDREPNPV) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
_4DEFBACREC = is_positive(_4BACREC) * BACDEC * 1 - is_positive(ART1731BIS * PREM8_11) - DEFBACREC
NPLOCNETSF = max(0, NPLOCNETTSV + NPLOCNETTSC + NPLOCNETTSP - TOTDEFLOCNPBIS)
RD_R1649 = R1649
TEFFREVTOT = INDTEFF * TBICPF + TBICNPF + TBNN + BIHTAV + BIHTAC + BIHTAP + BIPTAV + BIPTAC + BIPTAP + ESFP + TTSPR + RCM + PLOCNETF + NPLOCNETF + RFNTEO * V_INDTEO + RRFI * 1 - V_INDTEO + BPVRCM + PVTAXSB + PVIMPOS * null(1 - FLAG_EXIT) + COD3VE + PVIMPOS + PVSURSI * null(2 - FLAG_EXIT) + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + R1649 - DAR - max(0, min(TEFFREVINTER, DPA + DFA + DEDIV + APERPVTEF + APERPCTEF + APERPPTEF + NUREPARTEF + ABTPATEF + ABTMA + DDCSG))
RDIFAGRI = max(0, RDIFAGRI_1 * 1 - ART1731BIS + min(RDIFAGRI_1, max(RDIFAGRI_P + RDIFAGRIP2, RDIFAGRI1731 + 0) * 1 - PREM8_11) * ART1731BIS)
LIGTXF24 = is_positive(BPTP24) * LIG0 * LIG2
RCELREPHH_1 = max(min(ACELREPHH, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
FRDCREP = is_positive(ART1731BIS) * max(0, FRNC - FRDC) * null(IND_10C) + max(0, FRNC1731 - _10MINSC) * IND_10C * is_positive(FRNC1731)
REPNU = max(0, INVOMENTNU - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU)) * 1 - ART1731BIS + max(0, INVOMENTNU - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU)) * ART1731BIS * 1 - V_CNR
LIGREPBG = is_positive(REPBG) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RCELRREDLS_1 = max(min(ACELRREDLS, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1), 0)
LIG10V = positif_ou_nul(TSBNV + PRBV + BPCOSAV + GLDGRATV + is_positive(F10AV * null(TSBNV + PRBV + BPCOSAV + GLDGRATV)))
PENSALP = PENSALP1 + PENSALP2 + PENSALP3 + PENSALP4
PERPPLAFNUTP = max(PERPPLATPANT - RPERPP, 0)
GLF1 = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENF1 / TOTALQUOHT) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV - GLFC
TTSPRD2 = min(0, TTSNN2 + TPRR2) * ART1731BIS
INDEFTS4 = positif_ou_nul(TSB4 - FRD4)
# TODO TAXLOYCUM
TPS101 = arr(TSB1 * TX_DEDFORFTS / 100)
TEGLRVO5 = GLRVO5 * 1 - is_positive(INDTEFF) + TGLRVO5 * is_positive(INDTEFF)
TTSNN2TS4 = is_positive(TTS4) * is_positive(REMPLAP4) * arr(TTS4 * CARTSP4 / TEXTS4) + 1 - is_positive(REMPLAP4) * TTS4 - TTSNN4
BI1C = BI1AC
RCREAT_1 = max(min(RCREATEUR + RCREATEURHANDI, RRI1 - RLOGDOM), 0)
INVRETRUA = min(arr(NINVRETRU * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA)) * 1 - V_CNR
TEXPRV = TPRBV + COD1AH + T2PRBV + PEBFV
RCELRREDLM = max(0, RCELRREDLM_1 * 1 - ART1731BIS + min(RCELRREDLM_1, max(RCELRREDLM_P + RCELRREDLMP2, RCELRREDLM1731 + 0) * 1 - PREM8_11) * ART1731BIS)
NRCELRREDLM = max(min(CELRREDLM, RRI1 - NRLOGDOM - NRRI2 - NRCELRREDLA - NRCELRREDLB - NRCELRREDLE), 0)
INVRETRT = NINVRETRT * 1 - V_CNR
TSPEABNPP = TSPEABP - TSPEABPP
TRPQF4M = inf(TGLF4M / COTF4)
AILMJY = DILMJY * 1 - ART1731BIS + min(DILMJY, max(AILMJY_P + AILMJYP2, AILMJY1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
TBICNPABV = arr(TMIB_ABNPVV / MIBNPVENV + TMIB_ABNPPV / MIBNPPRESV)
GLFV = is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENFV / TOTALQUOHT) + 1 - is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT
IPQTSV2 = ZIPQTSV2 * CARTSNBAV
TERPQRWA = RPQRWA * 1 - is_positive(INDTEFF) + TRPQRWA * is_positive(INDTEFF)
NINVRETAB = max(min(CODHAB, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD), 0) * 1 - V_CNR
CELSOMJ = CELLIERJA + CELLIERJD + CELLIERJE + CELLIERJF + CELLIERJH + CELLIERJJ + CELLIERJK + CELLIERJM + CELLIERJN
LIGCELGW = is_positive(DCELREPGW) * LIG1 * LIG2
TERPQRVG = RPQRVG * 1 - is_positive(INDTEFF) + TRPQRVG * is_positive(INDTEFF)
TSNN2V = is_positive(TSV) * is_positive(CARTSV + REMPLAV) * arr(TSV * _2TSNV / EXTSV) + 1 - is_positive(CARTSV + REMPLAV) * TSV - TSNNV
MIB_NETNPVC = MIBNPVENC - MIB_ABNPVC
INVRETUFA = min(NINVRETUF, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA)) * 1 - V_CNR
REVRVO = T2RV
NMAJRSE1TOT = NMAJRSE11 + NMAJRSE21 + NMAJRSE31 + NMAJRSE41 + NMAJRSE51
# TODO BNCIF
LIGRRCEL31 = is_positive(RRCELLC) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
LOYBASE_INR = arr(max(TAXLOY - LOY9YI + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
TERPQFC = RPQFC * 1 - is_positive(INDTEFF) + TRPQFC * is_positive(INDTEFF)
SOMMEA802 = present(AUTOBICVV) + present(AUTOBICPV) + present(AUTOBICVC) + present(AUTOBICPC) + present(AUTOBICVP) + present(AUTOBICPP) + present(AUTOBNCV) + present(AUTOBNCC) + present(AUTOBNCP) + present(XHONOAAV) + present(XHONOV) + present(XHONOAAC) + present(XHONOC) + present(XHONOAAP) + present(XHONOP) + present(SALEXTV) + present(SALEXTC) + present(SALEXT1) + present(SALEXT2) + present(SALEXT3) + present(SALEXT4) + present(COD1AE) + present(COD1BE) + present(COD1CE) + present(COD1DE) + present(COD1EE) + present(COD1FE) + present(COD1AH) + present(COD1BH) + present(COD1CH) + present(COD1DH) + present(COD1EH) + present(COD1FH)
LIG12NMR = is_positive(IRPSCUM) * is_positive(SEUIL_12 - IRPSCUM) * is_positive(V_NOTRAIT - 20) * 1 - null(2 - V_REGCO) * 1 - is_positive(IMPRET - SEUIL_12) * 1 - is_positive(NRINET - SEUIL_12)
LIGREPAY = is_positive(REPAY) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RPQRVO5M = inf(GLRVO5M / RENTAXNB5)
GLDOMAVDAJV = max(CODDAJ - ABDOMDAJ, 0) * INDEFTSV
TGLTSREMP1M = is_positive(TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2REMP1 / TOTALQUO) + 1 - is_positive(TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM - TGLTSREMPCM
TTSNT3 = TTSN1EJ + TTSN1EC + TTSN1EP + TTSNREJ + TTSNREP
TGL2 = is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TGLN2 / TOTALQUO) + 1 - is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA - TGLRVG - TGL1
TERPQ4RBJC = RPQ4RBJC * 1 - is_positive(INDTEFF) + TRPQ4RBJC * is_positive(INDTEFF)
PERPPLAFTV = PERPINDV * max(0, PERPPLAFV + PERPPLAFNUNV + PERPPLAFNU1V + PERPPLAFNU2V) * 1 - V_CNR
PERPPLAFNU1C = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE + 0) * max(PERPPLAFNUTC - PERPPLAFNUNC - PERPPLAFNU3C - PERPPLAFNU2C, 0) + is_positive(PERPIMPATRIE + 0) * 0 + is_positive(PERP_COND1) * 1 - is_positive(PERPIMPATRIE + 0) * max(PERPPLAFNUTC - PERPPLAFNUNC - PERPPLAFNU3C - PERPPLAFNU2C, 0) + is_positive(PERPIMPATRIE + 0) * 0 + is_positive(PERP_COND2) * 0
PPE_BOOL_TPN = is_positive(positif_ou_nul(360 / PPENBJ * PPENJP * is_positive(PPE_AVRPRO1P + 0) - 360) + is_positive(PPEACP * is_positive(PPE_AVRPRO1P + 0)) + 1 - is_positive(PPENJP * is_positive(PPE_AVRPRO1P + 0)) * is_positive(PPE_AVRPRO1P + 0))
TSPRC = TSNNC + PRRC * 1 - PREM8_11 + max(0, TSNNC + PRRC) * PREM8_11
RPATNAT1 = max(0, RPATNAT1_1 * 1 - ART1731BIS + min(RPATNAT1_1, max(RPATNAT1_P + RPATNAT1P2, RPATNAT11731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ACELRREDLT = CELRREDLT * 1 - ART1731BIS + min(CELRREDLT, max(ACELRREDLT_P + ACELRREDLTP2, ACELRREDLT1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TERPQ1 = RPQ1 * 1 - is_positive(INDTEFF) + TRPQ1 * is_positive(INDTEFF)
REVKIREHR = 1 - null(IND_TDR) * arr(max(0, 1 - is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, IPTEFP - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(IPTEFN) * is_positive(ART1731BIS) + IPTEFN + PVTXEFF * present(IPTEFN) * 1 - ART1731BIS + INDTEFF) * RI1RFRHR + is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, IPTEFP - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(IPTEFN) * is_positive(ART1731BIS) + IPTEFN + PVTXEFF * present(IPTEFN) * 1 - ART1731BIS + INDTEFF) * max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, IPTEFP - PVTXEFF) * 1 - ART1731BIS + is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, IPTEFP - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(IPTEFN) * is_positive(ART1731BIS) + IPTEFN + PVTXEFF * present(IPTEFN) * 1 - ART1731BIS + INDTEFF) * is_positive(TEFFN - DRBG - RNIDF + APERPV + APERPC + APERPP * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO)) + QUOKIREHR) * APERPV + APERPC + APERPP * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO)) + QUOKIREHR + max(0, TEFFREVTOTRFRHR * INDTEFF) * 1 - is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, IPTEFP - PVTXEFF) * 1 - ART1731BIS) * 1 - present(IND_TDR) + IND_TDR + 1 - is_positive(max(0, VARIPTEFP - PVTXEFF) * is_positive(ART1731BIS) + max(0, IPTEFP - PVTXEFF) * 1 - ART1731BIS + VARIPTEFN + PVTXEFF * present(IPTEFN) * is_positive(ART1731BIS) + IPTEFN + PVTXEFF * present(IPTEFN) * 1 - ART1731BIS + INDTEFF) * QUOKIREHR + APERPV + APERPC + APERPP * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO)) + VARREVKIRE)) * 1 - present(COD8YM) + COD8YM
RRESINEUV2 = arr(arr(ACODIL / 9) * TX20 / 100)
TERPQ3M = RPQ3M * 1 - is_positive(INDTEFF) + TRPQ3M * is_positive(INDTEFF)
BRSE3 = INDECS * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
TGLPRR2 = is_positive(TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR22 / TOTALQUO) + 1 - is_positive(TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1
ZIPQ41 = is_positive(TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQ4 / TETONEQUO1) + 1 - is_positive(TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQRWB1 - ZIPQRWA1 - ZIPQRVG1 - sum([ZIPQ11, ZIPQ21, ZIPQ31])
TERPQPALIM4 = RPQPALIM4 * 1 - is_positive(INDTEFF) + TRPQPALIM4 * is_positive(INDTEFF)
CODMESGOUV = is_positive(NBPT - 10) + is_positive(LIG74 + LIGTTPVQ) + null(2 - V_REGCO) + null(4 - V_REGCO) + is_positive(CESSASSV + CESSASSC + PCAPTAXV + PCAPTAXC + LOYELEV + 0) + is_positive(IPROP + AVFISCOPTER + IPREP + IPPRICORSE)
REPRCM2 = is_positive(REPRCMBIS) * min(arr(REPRCMBIS * _2RCM_I / RCM_I), REPRCMBIS - REPRCM1) + 1 - is_positive(REPRCMBIS) * 0
LIG2171 = 1 - INDCTX * is_positive(IREST) * 1 - is_positive(LIG2140) * is_positive(IND_REST50) * is_positive(20 - V_NOTRAIT) * LIG2
RDONS_1 = max(min(RON, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU), 0)
BNNV = BNRV + SPENETV
FRDAC = FRNC * is_positive(FRNC - _10MINSC)
TGLPALIM4 = is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPENALIM4 / TOTALQUO) + 1 - is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV - TGLPALIMC - TGLPALIM1 - TGLPALIM2 - TGLPALIM3
TAPRC = TIND_APBC * TABPRC + 1 - TIND_APBC * min(TABPRC, TPL_PB - 1 - TIND_APBV * TAPRV)
MIBNETNPVLNSP = MIB_NETNPVLP - MIBNETNPVLSP
RILMIB = max(0, RILMIB_1 * 1 - ART1731BIS + min(RILMIB_1, max(RILMIB_P + RILMIBP2, RILMIB1731 + 0) * 1 - PREM8_11) * ART1731BIS)
LIGREPAH = is_positive(REPAH) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
# TODO DEFRFNONI
LIGTAXA17281 = TYPE2 * is_positive(NMAJTAXA1)
ISFNETRED = max(0, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED - RISFPMEI - RISFFIP - RISFFCPI)
INVRETPORA = min(NINVRETPOR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA - INVRETQORA - INVRETQFRA)) * 1 - V_CNR
NINVRETOK = max(min(INVOMLOGOK, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ), 0) * 1 - V_CNR
RRESINEUV3 = arr(arr(ACODIL / 9) * TX20 / 100)
INVRETSOC = INVRETKG + INVRETKH + INVRETKI + INVRETQN + INVRETQU + INVRETQK + INVRETQJ + INVRETQS + INVRETQW + INVRETQX + INVRETRA + INVRETRB + INVRETRC + INVRETRD + INVRETXA + INVRETXB + INVRETXC + INVRETXE
LIGCESDOM = is_positive(BPTPDIV) * is_positive(PVTAXSB) * is_positive(V_EAD + 0) * LIG0 * LIG2
LIGIRESTC = is_positive(LIGRES + LIGDEGRES) * is_positive(SEUIL_8 - IREST) * is_positive(IREST + 0)
PENFC = is_positive(PENSALC) * arr(PRNC * PEBFC / EXPRC) + 1 - is_positive(PENSALC) * max(0, PRNC - PRRC - PRR2C - PRR2ZC)
# TODO SPEDREPNPC
IPQTSANT41 = ZIPQTSANT41 * CARTSNBAP4
ZIPQ1TOT = sum([ZIPQ11, ZIPQ21, ZIPQ31, ZIPQ41]) + ZIPQRVG1 + ZIPQRWB1 + ZIPQRWA1
PERPINDP = is_positive(is_positive(is_positive(PERP_INDP) + 1 - is_positive(PERP_INDP) * 1 - is_positive(PRBR1 + PALIP)) * is_positive(INDREV1A8) + 1 - is_positive(PERP_INDP) * is_positive(PRBR1 + PALIP) * is_positive(PERP_COTP)) * PERP_BOOL * 1 - V_CNR
NPLOCSV = arr(NPLOCV * LOCNPV / LOCNPV + LOCGITHCV) * is_positive(LOCNPV) + min(0, NPLOCV) * 1 - is_positive(LOCNPV)
ADOMSOC1 = ADOMSOC1_1 * 1 - ART1731BIS + min(ADOMSOC1_1, max(ADOMSOC1_P + ADOMSOC1P2, ADOMSOC11731 + 0) * 1 - PREM8_11) * ART1731BIS
NAPTOTAIR = V_TOTIRANT - V_ANTREIR
PRDSD = PRDS * CSREC - PRDS_A * CSRECA
RD_REVCS = CS_REVCS
LIGREPSZ = is_positive(REPSZ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
IPQPRR15 = ZIPQPRRZ15 * CARPENBAP1
RPATNAT1_1 = max(min(APATNAT1, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP - RTOUHOTR - RTOUREPA - RCELTOT - RLOCNPRO), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INDIS = 1 if (V_NOTRAIT + 0 == 14 or V_NOTRAIT + 0 == 16 or V_NOTRAIT + 0 == 26 or V_NOTRAIT + 0 == 36 or V_NOTRAIT + 0 == 46 or V_NOTRAIT + 0 == 56 or V_NOTRAIT + 0 == 66) else 0
TEGLF3M = GLF3M * 1 - is_positive(INDTEFF) + TGLF3M * is_positive(INDTEFF)
ZIGINT = is_positive(RETCDIS) * LIG2
LIGRCEL = is_positive(RIVCEL1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
RILMOC = max(min(AILMOC, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD), 0)
LIGINRPCAP2 = is_positive(RETPCAP22)
RSNCL = max(0, min(RSN_CL, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT))
LIGMLOC = is_positive(present(MIBMEUV) + present(MIBMEUC) + present(MIBMEUP) + present(MIBGITEV) + present(MIBGITEC) + present(MIBGITEP) + present(LOCGITV) + present(LOCGITC) + present(LOCGITP)) * LIG0 * LIG2
REPQW = max(0, INVOMSOCQW - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS)) * 1 - ART1731BIS + max(0, INVOMSOCQW - max(0, RDOMSOC1 - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS)) * ART1731BIS * 1 - V_CNR
IPQRFANT11 = ZIPQRFANT11 * FONCINB
TMIB_NETPC = MIBPRESC + AUTOBICPC - TMIB_ABPC
IQNETEAJ32 = max(0, INETABAEAJ32 - IQNETDAJ32)
ZIPQPRRANT21 = is_positive(sum([TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPRR2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTV1 - ZIPQPRRANTC1 - ZIPQPRRANT11
IPQRVO2 = ZIPQRVO2 * RENTAXNB
NINVRETPIR = NINVRETPI - arr(NINVRETPI * TX4737 / 100) * 1 - V_CNR
NINVRETSR = max(min(CODHSR, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM), 0) * 1 - V_CNR
LIGDFLOCNPF = is_positive(DEFLOCNPF) * is_positive(DEFRILOC) * 1 - PREM8_11
TERPQPRR4M = RPQPRR4M * 1 - is_positive(INDTEFF) + TRPQPRR4M * is_positive(INDTEFF)
DPLAFREPME4 = COD7CY
NRINVRED = max(min(AINVRED, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA), 0)
RTOURREP = RTOURREP_1 * 1 - ART1731BIS + min(RTOURREP_1, max(RTOURREP_P + RTOURREPP2, RTOURREP1731 + 0) * 1 - PREM8_11) * ART1731BIS
TGL4M = is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * REV4 / TOTALQUO) + 1 - is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM - TGLRVGM - TGL1M - TGL2M - TGL3M
TERPQPRRZC = RPQPRRZC * 1 - is_positive(INDTEFF) + TRPQPRRZC * is_positive(INDTEFF)
P10MINSP = max(min(PERPSALP, PDEDMINP), PDFNP)
ZIPQPALIMANT41 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPALIM4 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - sum([ZIPQPALIMANTV1, ZIPQPALIMANTC1, ZIPQPALIMANT11, ZIPQPALIMANT21, ZIPQPALIMANT31])
LIGCELHG = is_positive(DCELREPHG) * LIG1 * LIG2
GLPALIM2 = is_positive(PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENALIM2 / TOTALQUOHT) + 1 - is_positive(PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV - GLPALIMC - GLPALIM1
LIGANNUL = is_positive(ANNUL2042)
A12RRESTIMO = arr(max(min(RRESTIMO, RRESTIMOD + RRESTIMOB + RRESTIMOC + RRESTIMOF + RRESTIMOA + RRESTIMOE), 0)) * 1 - V_CNR
PPENBH1 = PPENHP1 + PPEXT1
REPPO = max(0, INVOMRETPO - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ)) * 1 - ART1731BIS + max(0, INVOMRETPO - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ)) * ART1731BIS * 1 - V_CNR
# TODO REPINV
NPLOCNSP = NPLOCPAC - NPLOCSP
RCODJU_1 = max(min(RETCODJU, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV - RLOCIDEFG), 0)
XIND_102 = positif_ou_nul(X10MINS2 - FRN2)
REPAT = max(0, CODHAT - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW - CODHBE - CODHAE - CODHAJ - CODHAO)) * 1 - ART1731BIS + max(0, CODHAT - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW - CODHBE - CODHAE - CODHAJ - CODHAO)) * ART1731BIS * 1 - V_CNR
PERPPLAFNUV2ANT = present(PERPPLAFNUV2) * PERPPLAFNUV2 + 1 - present(PERPPLAFNUV2) * V_BTPERPNUV2
RCREAT = max(0, RCREAT_1 * 1 - ART1731BIS + min(RCREAT_1, max(RCREAT_P + RCREATP2, RCREAT1731 + 0) * 1 - PREM8_11) * ART1731BIS)
TPS102 = arr(TSB2 * TX_DEDFORFTS / 100)
PPE_DEBJJMM = arr(PPE_DEBJJMMMM - V_ANREV / 10000)
LIG68 = INDREV1A8 * 1 - is_positive(abs(RNIDF)) * LIG2
ZIGLOCOR2 = ZIGLOCOR * null(ANCSDED2 - V_ANREV + 2)
TEGLPRRZ4 = GLPRRZ4 * 1 - is_positive(INDTEFF) + TGLPRRZ4 * is_positive(INDTEFF)
IPQRCMTR5 = ZIPQRCMTR5 * INTERENB
RCELFABC_1 = max(min(RCEL_FABC, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1 - RCEL_1 - RCELJP_1 - RCELJBGL_1 - RCELJOQR_1 - RCEL2012_1 - RCELFD_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RRCN = arr(min(CINE1, min(max(SOFIRNG, RNG) * TX_CINE3 / 100, PLAF_CINE)) * TX_CINE1 / 100 + min(CINE2, max(min(max(SOFIRNG, RNG) * TX_CINE3 / 100, PLAF_CINE) - CINE1, 0)) * TX_CINE2 / 100) * 1 - V_CNR
RPQ4VC = arr(GL4VC / DIVGL4) + 0
RBGTEFRFR = 1 - is_positive(TEFFREVRFR + PREREV - DAR) * min(0, TEFFREVRFR + PREREV - DAR + TOTALQUO) + is_positive(TEFFREVRFR + PREREV - DAR) * TEFFREVRFR + PREREV - DAR
IS521 = arr(DS521 * NB2)
LIGILMJC = is_positive(DILMJC) * LIG1 * LIG2
DDUFLOGIH = DUFLOGI + DUFLOGH
RESIVIEUREP = RETRESIVIEU_1 - RRESIVIEU * is_positive(RESIVIANT)
RLOC15 = max(min(INVRETMCR * 1 - INDPLAF + INVRETMCRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14])), 0) * 1 - V_CNR
LIGBNCCREA = is_positive(BNCCREAV + BNCCREAC + BNCCREAP) * LIG1 * LIG2
AILMJW = DILMJW * 1 - ART1731BIS + min(DILMJW, max(AILMJW_P + AILMJWP2, AILMJW1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
PERP_NONP = PERP_BOOL * is_positive(PERP_NONC + PERP_NONV)
RRESTIMO_1 = max(min(RETRESTIMO, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1), 0)
_10MINSC = max(min(TSBC, DEDMINC), DFNC)
TTSBC = TEXTSC + sum([GLD1C, GLD2C, GLD3C]) + CODDBJ + CODEBJ
ACELNBGL = BCEL_NBGL * 1 - ART1731BIS + min(BCEL_NBGL, max(ACELNBGL_P + ACELNBGLP2, ACELNBGL1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELLIERNB + CELLIERNG + CELLIERNL) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGILMPB = is_positive(DILMPB) * LIG1 * LIG2
APERPC = 1 - V_CNR * max(min(RPERPC, RBG - RPALE - RPALP - RFACC - RDDIV - DDCSG + TOTALQUO - SDD - APERPV), 0)
INVRETPR = NINVRETPR * 1 - V_CNR
IPQTSANTV1 = ZIPQTSANTV1 * CARTSNBAV
ALOCENT = ALOCENT_1 * 1 - ART1731BIS + min(ALOCENT_1, max(ALOCENT_P + ALOCENTP2, ALOCENT1731 + 0) * 1 - PREM8_11) * ART1731BIS
RPQPRRV = inf(GLPRRV / CARPENBAV)
ACELREPHX = CELREPHX * 1 - ART1731BIS + min(CELREPHX, max(ACELREPHX_P + ACELREPHXP2, ACELREPHX1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RCREATEUR = CONVCREA / 2 * PLAF_CRENTR * 1 - V_CNR
BITAP = BIPTAP + BINTAP
DEFBA1 = 1 - is_positive(BAHQT + BAQT) * abs(BAHQT + BAQT) - abs(DEFIBA) + is_positive(BAHQT + BAQT) * positif_ou_nul(DAGRI5 + DAGRI4 + DAGRI3 + DAGRI2 + DAGRI1 - BAHQT - BAQT) * DAGRI5 + DAGRI4 + DAGRI3 + DAGRI2 + DAGRI1 - BAHQT - BAQT * null(DEFBA2 + DEFBA3 + DEFBA4 + DEFBA5 + DEFBA6) * 1 - is_positive(IPVLOC) * 1 - is_positive(ART1731BIS) + DEFBANIF * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + BACDEV + BACDEC + BACDEP + BAHDEV + BAHDEC + BAHDEP * is_positive(is_positive(ART1731BIS * PREM8_11) + null(8 - CMAJ) + null(11 - CMAJ)) * 1 - is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT)
BAFORV = arr(BAFV * MAJREV) + BAFORESTV + BAFPVV
ACELHJK = BCEL_HJK * 1 - ART1731BIS + min(BCEL_HJK, max(ACELHJK_P + ACELHJKP2, ACELHJK1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELLIERHJ + CELLIERHK) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RSE2N = max(0, RSE2 - CIRSE2)
NINVRETNU = max(min(INVOMENTNU, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU), 0) * 1 - V_CNR
NINVRETPJR = NINVRETPJ - arr(NINVRETPJ * TX375 / 100) * 1 - V_CNR
TIND_MIN1 = 1 - is_positive(TIND_10MIN_01)
T10MINS4 = max(min(TTSB4, TDEDMIN4), TDFN4)
CDIS9YP = is_positive(CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * arr(VAR9YIPS * CDIS - CDISPROV / BINRPS) + 1 - is_positive(CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP)
NRCELREPYI = max(min(ACELREPYI, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB])), 0)
T2PRB3 = CARPEP3 + PENSALP3 + CODREZ
TTPRC = TTSNC + TPRNC - sum([TGLN1C, TGLN2C, TGLN3C])
TPRR22 = is_positive(PEBF2 + PENSALP2 + CODRDZ) * arr(TPRN2 * CARPEP2 / TEXPR2) + 1 - is_positive(PEBF2 + PENSALP2 + CODRDZ) * TPRN2 - TPRR2
INVRETMB = min(arr(NINVRETMB * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG)) * 1 - V_CNR
NPLOCNETF2 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(LNPRODEF10, LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF10 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF9, LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF9 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF8, LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF8 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF7, LNPRODEF71731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF7 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF6, LNPRODEF61731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF6 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF5, LNPRODEF51731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF5 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF4, LNPRODEF41731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF4 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF3, LNPRODEF31731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF3 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF2, LNPRODEF21731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF2 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF1, LNPRODEF11731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF1 * 1 - is_positive(ART1731BIS * PREM8_11)
PPE_BOOL_MIN4 = positif_ou_nul(PPE_RTA4 - PPELIMRPB) * 1 - PPE_BOOL_NADA4
ZIGBASECS1 = is_positive(BCSG + V_CSANT) * is_positive(INDCTX)
ZIPQF12 = is_positive(sum([TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQF1 / TETONEQUO1) + 1 - is_positive(sum([TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - sum([ZIPQFV2, ZIPQFC2])
IDOM14 = max(ID14 - ADO4 * 1 - is_positive(INDCODDAJ) + ITOTDOM4 * is_positive(INDCODDAJ), IMI) * 1 - INDTXMOY + IMO * INDTXMOY
NRILMIY = max(min(AILMIY, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX), 0)
NINVRETSBR = NINVRETSB - arr(NINVRETSB * TX375 / 100) * 1 - V_CNR
PERPPLAFNUV3ANT = present(PERPPLAFNUV3) * PERPPLAFNUV3 + 1 - present(PERPPLAFNUV3) * V_BTPERPNUV3
DEFLOC9 = 1 - is_positive(NPLOCNETF9) * abs(min(max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9, 0) - LNPRODEF8, LNPRODEF8)) * positif_ou_nul(LNPRODEF8 - max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9, 0)) * 1 - is_positive(ART1731BIS) + min(LNPRODEF8, TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3 - DEFLOC4 - DEFLOC5 - DEFLOC6 - DEFLOC7 - DEFLOC8) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + LNPRODEF8 * ART1731BIS * is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))
IPQFC5 = ZIPQFC5 * COTFC
LIGCELHM = is_positive(DCELHM) * LIG1 * LIG2
PVTXEFF = PVTAXSB + BPVRCM - PVTXEFF2 * is_positive(present(IPTEFN) + present(IPTEFP))
INVRETXAA = min(arr(NINVRETXA * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA)) * 1 - V_CNR
TERPQRCMDCM = RPQRCMDCM * 1 - is_positive(INDTEFF) + TRPQRCMDCM * is_positive(INDTEFF)
RDDIVTEFRFR = max(min(DEDIV * 1 - V_CNR, RBGTEFRFR - RPALETEFRFR - RPALPTEFRFR - RFACCTEFRFR - DDCSG + TOTALQUO - SDD), 0)
_4DEFBACREV = is_positive(_4BACREV) * BACDEV * 1 - is_positive(ART1731BIS * PREM8_11) - DEFBACREV
LIGREPKH = is_positive(REPKH) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RLOC26 = max(min(INVRETQF * 1 - INDPLAF + INVRETQFA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25])), 0) * 1 - V_CNR
# TODO DEFIBA
ZIG_CSGDDO = is_positive(V_IDANT - DCSGD) * is_positive(IDCSG) * 1 - null(V_IDANT + DCSGD + 0) * 1 - null(V_IDANT - DCSGD) * is_positive(V_NOTRAIT - 20) * LIG2
BQRESS = is_positive(CIBOIBAIL + CINRJBAIL + CRENRJ + CINRJ + CIDEP15 + MATISOSI + MATISOSJ + VOLISO + PORENT + CHAUBOISN + POMPESP + POMPESR + CHAUFSOL + POMPESQ + ENERGIEST + DIAGPERF + RESCHAL + TRAMURWC + TRATOIVG + TRAVITWT) * 1 + 0
RRCELLZ = max(0, CELRREDLZ - RCELRREDLZ) * is_positive(CELRREDLZ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INVRETAU = min(arr(NINVRETAU * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP)) * 1 - V_CNR
RESIMEUB3 = arr(arr(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
RRESTIMOF = max(min(RESTIMOF * TX30 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMOD - RRESTIMOB - RRESTIMOC), 0)
RILMIA_1 = max(min(AILMIA, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB), 0)
LIG910 = is_positive(present(RCMABD) + present(RCMTNC) + present(RCMAV) + present(RCMHAD) + present(RCMHAB) + present(REGPRIV) + 1 - present(BRCMQ) * present(RCMFR)) * LIG0 * LIG2
DOMDOM = max(DOMAVTO - DOMABDB, 0) * is_positive(V_EAD + V_EAG)
RENT34 = max(min(INVRETAPR * 1 - INDPLAF + INVRETAPRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30, RENT31, RENT32, RENT33])), 0) * 1 - V_CNR
GLOBASE_INR = max(0, CGLOA - COD8YL - GLO9YP)
_10MINS1 = max(min(TSB1, DEDMIN1), DFN1)
RI1 = max(RNG - 1 - min(1, IPVLOC) * ABTPA - ABTMA, 0)
BRDS = arr(RDRFPS * 1 - null(4 - V_REGCO) + COD8XK + COD8YK + RDRV + RDRCM + RDNP + RDNCP + RDPTP + RGLOA + SALECS + SALECSG + ALLECS + INDECS + PENECS + COD8SA + COD8SB + ESFP + R1649 + PREREV * 1 - V_CNR) * 1 - is_positive(present(RE168) + present(TAX1649)) + RE168 + TAX1649 * 1 - V_CNR
ITP = arr(BPTP2 * TX225 / 100 + BPTPVT * TX19 / 100 + BPTP4 * TX30 / 100 + DOMITPD + DOMITPG + BPTP3 * TX16 / 100 + BPTP40 * TX41 / 100 + DOMDOM * is_positive(V_EAD + V_EAG) + BPTP18 * TX18 / 100 + BPTPSJ * TX19 / 100 + BPTP24 * TX24 / 100) * 1 - is_positive(IPVLOC) * 1 - is_positive(present(TAX1649) + present(RE168))
AIDIMP = positif_ou_nul(AIDREST) * CIGE - AIDREST
DCELRREDLM = CELRREDLM
RPQ4TVCM = arr(GL4TVCM / DIVGL4)
LIGPVTISOC = is_positive(PVTITRESOC) * LIG1 * LIG2
GLPRRZCM = is_positive(PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2ZC / TOTALQUOHT) + 1 - is_positive(PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM
SPENETNPF = sum([SPENETNPV, SPENETNPC, SPENETNPP]) + SPENETNPCT
# TODO NMAJCVN1
CSGCAPS = arr(BCSGAPS * T_CSG / 100) * 1 - is_positive(ANNUL2042)
LIGREPSC = is_positive(REPSC) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
# TODO NAPCVN
NINVRETPE = max(min(INVOMRETPE, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETQO - NINVRETQF - NINVRETPA), 0) * 1 - V_CNR
PRR2V = is_positive(PEBFV + PENSALV + CODRAZ) * arr(PRNV * CARPEV / EXPRV) + 1 - is_positive(PEBFV + PENSALV + CODRAZ) * PRNV - PRRV
RCEL_HL_R = is_positive(CELLIERHL) * arr(ACELHL_R * TX25 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
DISFBASE = ISFBASE
LIGRESINEUV = is_positive(DRESINEUV) * LIG1 * LIG2
RLOCIDFG3 = arr(arr(ACODID / 9) * TX11 / 100) + arr(arr(ACODIF / 9) * TX18 / 100) + arr(arr(ACODIG / 9) * TX11 / 100)
PTAXANETNEG = max(0, PIR + PTAXA - IRCUM - TAXACUM)
XBAV = BAHEXV + BAEXV
NINVRETPT = max(min(INVOMRETPT, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO), 0) * 1 - V_CNR
RSOC18 = arr(max(min(INVRETQU * 1 - INDPLAF + INVRETQUA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17])), 0)) * 1 - V_CNR
CVND = NAPCVN - V_CVNANT
ZIGBASESAL1 = is_positive(BCVNSAL + V_CVNANT) * is_positive(INDCTX)
RPERPMUTV = is_positive(PERP_COND1) * 1 - is_positive(PERPIMPATRIE) * max(0, min(PERP_COTV - PERPPLATVANT, PERPPLATCANT - PERP_COTC)) + is_positive(PERPIMPATRIE) * max(0, min(PERP_COTV - PERPPLAFIMPV, PERPPLAFIMPC - PERP_COTC))
LIGREPQS = is_positive(REPQS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
SOMMEA030 = sum([is_positive(TSHALLO1) + is_positive(ALLO1) + is_positive(CARTSP1) + is_positive(REMPLAP1) + is_positive(CARTSNBAP1) + is_positive(REMPLANBP1) + is_positive(PRBR1) + is_positive(CARPEP1) + is_positive(CARPENBAP1) + is_positive(PALI1) + is_positive(FRN1) + is_positive(PPETPP1) + is_positive(PPENHP1) + is_positive(PENSALP1) + is_positive(PENSALNBP1), is_positive(TSHALLO2) + is_positive(ALLO2) + is_positive(CARTSP2) + is_positive(REMPLAP2) + is_positive(CARTSNBAP2) + is_positive(REMPLANBP2) + is_positive(PRBR2) + is_positive(CARPEP2) + is_positive(CARPENBAP2) + is_positive(PALI2) + is_positive(FRN2) + is_positive(PPETPP2) + is_positive(PPENHP2) + is_positive(PENSALP2) + is_positive(PENSALNBP2), is_positive(TSHALLO3) + is_positive(ALLO3) + is_positive(CARTSP3) + is_positive(REMPLAP3) + is_positive(CARTSNBAP3) + is_positive(REMPLANBP3) + is_positive(PRBR3) + is_positive(CARPEP3) + is_positive(CARPENBAP3) + is_positive(PALI3) + is_positive(FRN3) + is_positive(PPETPP3) + is_positive(PPENHP3) + is_positive(PENSALP3) + is_positive(PENSALNBP3), is_positive(TSHALLO4) + is_positive(ALLO4) + is_positive(CARTSP4) + is_positive(REMPLAP4) + is_positive(CARTSNBAP4) + is_positive(REMPLANBP4) + is_positive(PRBR4) + is_positive(CARPEP4) + is_positive(CARPENBAP4) + is_positive(PALI4) + is_positive(FRN4) + is_positive(PPETPP4) + is_positive(PPENHP4) + is_positive(PENSALP4) + is_positive(PENSALNBP4)]) + is_positive(RSAPAC1) + is_positive(RSAPAC2) + is_positive(FEXP) + is_positive(BAFP) + is_positive(BAFORESTP) + is_positive(BAFPVP) + is_positive(BAF1AP) + is_positive(BAEXP) + is_positive(BACREP) + is_positive(_4BACREP) + is_positive(BA1AP) + is_positive(BACDEP * 1 - is_positive(ART1731BIS)) + is_positive(BAHEXP) + is_positive(BAHREP) + is_positive(_4BAHREP) + is_positive(BAHDEP * 1 - is_positive(ART1731BIS)) + is_positive(MIBEXP) + is_positive(MIBVENP) + is_positive(MIBPRESP) + is_positive(MIBPVP) + is_positive(MIB1AP) + is_positive(MIBDEP) + is_positive(BICPMVCTP) + is_positive(BICEXP) + is_positive(BICNOP) + is_positive(BI1AP) + is_positive(BICDNP * 1 - is_positive(ART1731BIS)) + is_positive(BIHEXP) + is_positive(BIHNOP) + is_positive(BIHDNP * 1 - is_positive(ART1731BIS)) + is_positive(MIBNPEXP) + is_positive(MIBNPVENP) + is_positive(MIBNPPRESP) + is_positive(MIBNPPVP) + is_positive(MIBNP1AP) + is_positive(MIBNPDEP) + is_positive(BICNPEXP) + is_positive(BICREP) + is_positive(BI2AP) + is_positive(min(BICDEP, BICDEP1731 + 0) * is_positive(ART1731BIS) + BICDEP * 1 - ART1731BIS) + is_positive(BICNPHEXP) + is_positive(BICHREP) + is_positive(min(BICHDEP, BICHDEP1731 + 0) * is_positive(ART1731BIS) + BICHDEP * 1 - ART1731BIS) + is_positive(BNCPROEXP) + is_positive(BNCPROP) + is_positive(BNCPROPVP) + is_positive(BNCPRO1AP) + is_positive(BNCPRODEP) + is_positive(BNCPMVCTP) + is_positive(BNCEXP) + is_positive(BNCREP) + is_positive(BN1AP) + is_positive(BNCDEP * 1 - is_positive(ART1731BIS)) + is_positive(BNHEXP) + is_positive(BNHREP) + is_positive(BNHDEP * 1 - is_positive(ART1731BIS)) + is_positive(BNCCRP) + is_positive(BNCNPP) + is_positive(BNCNPPVP) + is_positive(BNCNP1AP) + is_positive(BNCNPDEP) + is_positive(ANOPEP) + is_positive(PVINPE) + is_positive(INVENTP) + is_positive(min(DNOCEPP, DNOCEPP1731 + 0) * is_positive(ART1731BIS) + DNOCEPP * 1 - ART1731BIS) + is_positive(BNCCRFP) + is_positive(BNCAABP) + is_positive(min(BNCAADP, BNCAADP1731 + 0) * is_positive(ART1731BIS) + BNCAADP * 1 - ART1731BIS) + is_positive(RCSP) + is_positive(PPEACP) + is_positive(PPENJP) + is_positive(BAPERPP) + is_positive(BIPERPP) + is_positive(PERPP) + is_positive(PERP_COTP) + is_positive(RACCOTP) + is_positive(PLAF_PERPP) + sum([is_positive(PEBF1), is_positive(PEBF2), is_positive(PEBF3), is_positive(PEBF4)]) + is_positive(COTF1) + is_positive(COTF2) + is_positive(COTF3) + is_positive(COTF4) + is_positive(BNCNPREXAAP) + is_positive(BNCNPREXP) + is_positive(AUTOBICVP) + is_positive(AUTOBICPP) + is_positive(AUTOBNCP) + is_positive(LOCPROCGAP) + is_positive(LOCDEFPROCGAP * 1 - is_positive(ART1731BIS)) + is_positive(LOCPROP) + is_positive(LOCDEFPROP * 1 - is_positive(ART1731BIS)) + is_positive(LOCNPCGAPAC) + is_positive(LOCGITCP) + is_positive(LOCGITHCP) + is_positive(min(LOCDEFNPCGAPAC, LOCDEFNPCGAPAC1731 + 0) * is_positive(ART1731BIS) + LOCDEFNPCGAPAC * 1 - ART1731BIS) + is_positive(LOCNPPAC) + is_positive(min(LOCDEFNPPAC, LOCDEFNPPAC1731 + 0) * is_positive(ART1731BIS) + LOCDEFNPPAC * 1 - ART1731BIS) + is_positive(XHONOAAP) + is_positive(XHONOP) + is_positive(XSPENPP) + is_positive(BANOCGAP) + is_positive(MIBMEUP) + is_positive(MIBGITEP) + is_positive(LOCGITP) + is_positive(SALEXT1) + is_positive(COD1CD) + is_positive(COD1CE) + is_positive(PPEXT1) + is_positive(COD1CH) + is_positive(SALEXT2) + is_positive(COD1DD) + is_positive(COD1DE) + is_positive(PPEXT2) + is_positive(COD1DH) + is_positive(SALEXT3) + is_positive(COD1ED) + is_positive(COD1EE) + is_positive(PPEXT3) + is_positive(COD1EH) + is_positive(SALEXT4) + is_positive(COD1FD) + is_positive(COD1FE) + is_positive(PPEXT4) + is_positive(COD1FH) + is_positive(RDSYPP) + is_positive(PENIN1) + is_positive(PENIN2) + is_positive(PENIN3) + is_positive(PENIN4) + is_positive(CODRCZ) + is_positive(CODRDZ) + is_positive(CODREZ) + is_positive(CODRFZ) + 0
_2RCM_I = (1 - is_positive(DFRCMN) * _2RIA * 1 - is_positive(ART1731BIS) + _2RIA * is_positive(ART1731BIS)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
LIGPPEHP = is_positive(positif_ou_nul(1820 - PPENBH1) * present(PPENBH1) + positif_ou_nul(1820 - PPENBH2) * present(PPENBH2) + positif_ou_nul(1820 - PPENBH3) * present(PPENBH3) + positif_ou_nul(1820 - PPENBH4) * present(PPENBH4)) * INDPPEP * is_positive(INDLIGPPE) * LIG0 * LIG2
INANT51 = max(IS511, IS521 - PLANT)
TGLPALIM4M = is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPENALIM4 / TOTALQUO) + 1 - is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM - TGLPALIMCM - TGLPALIM1M - TGLPALIM2M - TGLPALIM3M
ZIPQTSREMP31 = is_positive(TEGLTSREMP4) * arr(IQUOTOT1 * TERPQTSREMP3 / TETONEQUO1) + 1 - is_positive(TEGLTSREMP4) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTS1TOT - ZIPQTSREMPV1 - ZIPQTSREMPC1 - ZIPQTSREMP11 - ZIPQTSREMP21
LIGCREAT = is_positive(DCREAT + DCREATHANDI) * LIG1 * LIG2
IPQPALIMC5 = ZIPQPALIMC5 * PENSALNBC
# TODO BIH1C
NINVRETLG = max(min(NRETROC50, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA), 0) * 1 - V_CNR
TSN3VK = BPCOSAC - ABTS3VK
IPRODOM1 = arr(IPQ01 * EXO1 * PRODOM / RG)
_6RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _6RCM_I - REPRCM6) * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _6RCM_I - REPRCM6)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
IND_MIN2 = 1 - is_positive(IND_10MIN_02)
BINHTAV = max(0, arr(BICHREV - BICHDEV * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV)) + min(0, BICHREV - BICHDEV * 1 - is_positive(ART1731BIS * PREM8_11))
TTSN1BJ = TSHALLOC - TABTS1BJ
GL4 = is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * REV4 / TOTALQUOHT) + 1 - is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB - GLRWA - GLRVG - GL1 - GL2 - GL3
TERPQ2 = RPQ2 * 1 - is_positive(INDTEFF) + TRPQ2 * is_positive(INDTEFF)
LIGISFDON = is_positive(LIGISFRAN + LIGISFCEE) * LIGISF
REPLOCIL = RETCODIL - RCODIL * is_positive(MEUBLENP + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TEGLRWB = GLRWB * 1 - is_positive(INDTEFF) + TGLRWB * is_positive(INDTEFF)
INVRETXA = min(arr(NINVRETXA * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA - INVRETRB - INVRETRC - INVRETRD)) * 1 - V_CNR
RCELREPYL_1 = max(min(ACELREPYL, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - RCELREPYH_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
SHBA = ESFP + TSPR + RCM + BIN + BNN + PLOCNETF + NPLOCNETF + COD3UV + BPVRCM + PVTAXSB + PVIMPOS * null(1 - FLAG_EXIT) + COD3VE + PVIMPOS + PVSURSI * null(2 - FLAG_EXIT) + RRFI + 0 * 1 - V_INDTEO + RRFTEO + 0 * V_INDTEO * 1 - ART1731BIS + ESFP + TSPR + RCM + BIN + BNN + PLOCNETF + NPLOCNETF + COD3UV + BPVRCM + PVTAXSB + PVIMPOS * null(1 - FLAG_EXIT) + COD3VE + PVIMPOS + PVSURSI * null(2 - FLAG_EXIT) + RRFI + 0 * 1 - V_INDTEO + RRFTEO + 0 * V_INDTEO * ART1731BIS
IN06 = max(IS016, IS026 - PLA)
IPQTSREMP45 = ZIPQTSREMP45 * REMPLANBP4
BDEV25 = min(max(0, PDEVDUR - BDEV30), CIBOIBAIL + CINRJBAIL + TRAMURWC + TRATOIVG + TRAVITWT + CHAUBOISN + POMPESP + POMPESR + CHAUFSOL + POMPESQ + ENERGIEST) * is_positive(is_positive(BQRESS) * is_positive(BQTRAV))
RPRESCOMPAN = RRPRESCOMP * 1 - is_positive(RDPRESREPORT)
ILICHRNET = positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * max(0, HAUTREVCUM - PHAUTREV - PTAXLOYNETNEG) + 1 - positif_ou_nul(TOTIRCUM - RECUMIR - TOTPENIR) * 0
IND_APB2 = positif_ou_nul(PLR2 - EXPR2 * TX_DEDPER / 100)
# TODO IND_REST50
RFOR = max(0, RFOR_1 * 1 - ART1731BIS + min(RFOR_1, max(RFOR_P + RFORP2, RFOR1731 + 0) * 1 - PREM8_11) * ART1731BIS)
FRDVREP = is_positive(ART1731BIS) * max(0, FRNV - FRDV) * null(IND_10V) + max(0, FRNV1731 - _10MINSV) * IND_10V * is_positive(FRNV1731)
XIND_104 = positif_ou_nul(X10MINS4 - FRN4)
RIVCELJOQR1 = RCEL_JOQR_R * is_positive(ACELJOQR_R)
DPIQABCD = PINELQA + PINELQB + PINELQC + PINELQD
INVRETAEA = min(NINVRETAE, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA)) * 1 - V_CNR
DISFFIP = ISFFIP
NINVRETQJR = NINVRETQJ - arr(NINVRETQJ * TX35 / 100) * 1 - V_CNR
INVRETXC = min(arr(NINVRETXC * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA - INVRETRB - INVRETRC - INVRETRD - INVRETXA - INVRETXB)) * 1 - V_CNR
IPROGUY1 = arr(IPQ01 * EXO1 * PROGUY / RG)
ACELRREDMG = CELRREDMG * 1 - ART1731BIS + min(CELRREDMG, max(ACELRREDMG_P + ACELRREDMGP2, ACELRREDMG1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPPH = is_positive(REPPH) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TMIB_AUTOAVP = TMIB_AVP - TMIB_VENTAP
ABICPNETC = AUTOBICVC + AUTOBICPC - max(0, TMIB_AUTOAVC - TMIB_ABNPVLC) - max(0, TMIB_AUTOAPC - TMIB_ABNPPLC)
# TODO SPEDREPNPV
MIB_ABNPVP = max(0, arr(MIB_AVP * MIBNPVENP / MIB_TVENP)) * is_positive(present(MIBGITEP) + present(LOCGITP)) + MIB_AVP - MIB_ABVP * 1 - is_positive(present(MIBGITEP) + present(LOCGITP))
ZIG_TAUXCRP = ZIG_TITRECRP
RSE4N = max(0, RSE4 - CIRSE4)
RILMOD = max(min(AILMOD, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE), 0)
TIND_10MIN_0V = is_positive(TDEDMINV - TDFNV) * is_positive(TTSBV)
ZIPQTSREMP21 = is_positive(sum([TEGLTSREMP3, TEGLTSREMP4])) * arr(IQUOTOT1 * TERPQTSREMP2 / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTS1TOT - ZIPQTSREMPV1 - ZIPQTSREMPC1 - ZIPQTSREMP11
RIV2012CEL5 = RIV2012CEL1
IPQPALIM25 = ZIPQPALIM25 * PENSALNBP2
NINVRETQNR = NINVRETQN - arr(NINVRETQN * TX35 / 100) * 1 - V_CNR
TSBNC = TSHALLOC + ALLOC
RLOG31 = max(min(INVRETOY * 1 - INDPLAF + INVRETOYA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30])), 0) * 1 - V_CNR
# TODO RNIDF0
RLOC56 = max(min(INVRETPX * 1 - INDPLAF + INVRETPXA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55])), 0) * 1 - V_CNR
REPSJ = max(0, CODHSJ - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW - CODHTB - CODHSE)) * 1 - ART1731BIS + max(0, CODHSJ - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW - CODHTB - CODHSE)) * ART1731BIS * 1 - V_CNR
ZIPQANT41 = is_positive(TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQ4 / TETONEQUO1) + 1 - is_positive(TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANTRWB - ZIPQANTRWA - ZIPQANTRVG - sum([ZIPQANT11, ZIPQANT21, ZIPQANT31])
RLOC68 = max(min(INVRETPR * 1 - INDPLAF + INVRETPRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67])), 0) * 1 - V_CNR
TOTALPLAFA = INVRETKGA + INVRETKHA + INVRETKIA + INVRETQNA + INVRETQUA + INVRETQKA + INVRETQJA + INVRETQSA + INVRETQWA + INVRETQXA + INVRETRAA + INVRETRBA + INVRETRCA + INVRETRDA + INVRETXAA + INVRETXBA + INVRETXCA + INVRETXEA + INVRETMAA + INVRETLGA + INVRETKSA + INVRETMBA + INVRETLHA + INVRETMCA + INVRETLIA + INVRETKTA + INVRETKUA + INVRETQPA + INVRETQGA + INVRETQOA + INVRETQFA + INVRETQRA + INVRETQIA + INVRETPOA + INVRETPTA + INVRETPNA + INVRETPSA + INVRETPPA + INVRETPUA + INVRETPRA + INVRETPWA + INVRETQLA + INVRETQMA + INVRETQDA + INVRETOBA + INVRETOCA + INVRETOMA + INVRETONA + INVRETODA + INVRETUAA + INVRETKGRA + INVRETKHRA + INVRETKIRA + INVRETQNRA + INVRETQURA + INVRETQKRA + INVRETQJRA + INVRETQSRA + INVRETQWRA + INVRETQXRA + INVRETRARA + INVRETRBRA + INVRETRCRA + INVRETRDRA + INVRETXARA + INVRETXBRA + INVRETXCRA + INVRETXERA + INVRETMARA + INVRETLGRA + INVRETMBRA + INVRETLHRA + INVRETLIRA + INVRETMCRA + INVRETQPRA + INVRETQGRA + INVRETQORA + INVRETQFRA + INVRETPORA + INVRETPTRA + INVRETPNRA + INVRETPSRA
NINVRETSQR = NINVRETSQ - arr(NINVRETSQ * TX375 / 100) * 1 - V_CNR
RCELREPGJ_1 = max(min(ACELREPGJ, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGDOMSOC1 = is_positive(DDOMSOC1) * LIG1 * LIG2
AISFPMED = arr(ISFPMEDI * TX50 / 100)
RLOC76 = max(min(INVRETPTR * 1 - INDPLAF + INVRETPTRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75])), 0) * 1 - V_CNR
BINRPS = max(0, CSG - CSGIM) + max(0, RDSN - CRDSIM) + max(0, PRS - PRSPROV) + max(0, CVNSALC - COD8YT) + max(0, CDIS - CDISPROV) + max(0, CGLOA - COD8YL) + max(0, RSE1 - CSPROVYD) + max(0, RSE2 - CSPROVRSE2) + max(0, RSE3 - CSPROVYG) + max(0, RSE4 - CSPROVRSE4) + max(0, RSE5 - CSPROVYE) + BREGV
ZIPQ5TOT = sum([ZIPQ15, ZIPQ25, ZIPQ35, ZIPQ45]) + ZIPQRVG5 + ZIPQRWB5 + ZIPQRWA5
BAEMC = arr(_4BAHREC - _4DEFBAHREC * MAJREV) * positif_ou_nul(BARSC) + 0
REPRESIVIEU = RETRESIVIEU_1 - RRESIVIEU * is_positive(RESIVIEU)
INDEFTSC = positif_ou_nul(TSBC - FRDC)
PPE_FINRANG = PPE_FINJJ + PPE_FINMM - 1 * 30 - 1 * is_positive(PPE_DATE_FIN)
RSE2BASE_INR = max(0, max(0, RSE8TV - CIRSE8TV - CSPROVYF) + max(0, RSE8SA - CIRSE8SA - CSPROVYN) - RSE29YP)
DCELREPGV = CELREPGV
LIG0070 = INDC * INDP * 1 - INDV * 1 - ART1731BIS * LIG0 * LIG2
XDF1 = X10MINS1
TSPEABP = arr(max(MIN_SPEBNC, TSPEBASABP * SPETXAB / 100) * positif_ou_nul(TSPETOTP - MIN_SPEBNC)) + arr(min(MIN_SPEBNC, TSPEBASABP) * is_positive(MIN_SPEBNC - TSPETOTP))
LIG98B = is_positive(LIG80 + LIGFIPC + LIGFIPDOM + present(DAIDE) + LIGDUFLOT + LIGPINEL + LIG7CY + LIGREDAGRI + LIGFORET + LIGRESTIMO + LIGCINE + LIGRSOCREPR + LIGCOTFOR + present(PRESCOMP2000) + present(RDPRESREPORT) + present(FCPI) + present(DSOUFIP) + LIGRIRENOV + present(DFOREST) + present(DHEBE) + present(DSURV) + LIGLOGDOM + LIGREPTOUR + LIGLOCHOTR + LIGREPHA + LIGCREAT + LIG1780 + LIG2040 + LIG81 + LIGLOGSOC + LIGDOMSOC1 + sum([LIGCELLA, LIGCELLB, LIGCELLE, LIGCELLM, LIGCELLC, LIGCELLD, LIGCELLS, LIGCELLF, LIGCELLZ, LIGCELLN, LIGCELLT, LIGCELLX]) + LIGCELMG + LIGCELMH + sum([LIGCELHA, LIGCELHB, LIGCELHD, LIGCELHE, LIGCELHF, LIGCELHH, LIGCELHG, LIGCELHL, LIGCELHM, LIGCELHS, LIGCELHR, LIGCELHU, LIGCELHT, LIGCELHZ, LIGCELHX, LIGCELHW, LIGCELHV]) + sum([LIGCELGU, LIGCELGX, LIGCELGT, LIGCELGS, LIGCELGW, LIGCELGP, LIGCELGL, LIGCELGV, LIGCELGK, LIGCELGJ]) + sum([LIGCELYA, LIGCELYB, LIGCELYC, LIGCELYD, LIGCELYE, LIGCELYF, LIGCELYG, LIGCELYH, LIGCELYI, LIGCELYJ, LIGCELYK, LIGCELYL]) + LIGCELHNO + LIGCELHJK + LIGCELNQ + LIGCELCOM + LIGCELNBGL + LIGCEL + LIGCELJP + LIGCELJBGL + LIGCELJOQR + LIGCEL2012 + LIGCELFD + LIGCELFABC + LIGILMPA + LIGILMPB + LIGILMPC + LIGILMPD + LIGILMPE + LIGILMOA + LIGILMOB + LIGILMOC + LIGILMOD + LIGILMOE + LIGREDMEUB + LIGREDREP + LIGILMIX + LIGILMIY + LIGINVRED + LIGILMIH + LIGILMJC + LIGILMIZ + LIGILMJI + LIGILMJS + LIGMEUBLE + LIGPROREP + LIGREPNPRO + LIGMEUREP + LIGILMIC + LIGILMIB + LIGILMIA + LIGILMJY + LIGILMJX + LIGILMJW + LIGILMJV + LIGRESIMEUB + LIGRESINEUV + LIGRESIVIEU + LIGLOCIDEFG + LIGCODJTJU + LIGCODOU + present(DNOUV) + LIGLOCENT + LIGCOLENT + LIGRIDOMPRO + LIGPATNAT1 + LIGPATNAT2 + LIGPATNAT3 + LIGPATNAT4) * LIG1 * LIG2
INVRETRO = NINVRETRO * 1 - V_CNR
NINVRETAKR = NINVRETAK - arr(NINVRETAK * TX4737 / 100) * 1 - V_CNR
PAC = EAC + V_0CR
ZIPQANT1TOT = sum([ZIPQANT11, ZIPQANT21, ZIPQANT31, ZIPQANT41]) + ZIPQANTRVG + ZIPQANTRWB + ZIPQANTRWA
BI1V = BI1AV
LIGDUFLOEKL = is_positive(DDUFLOEKL) * LIG1 * LIG2
DIAVF2 = BCIGA + IPRECH + IPCHER + IPELUS + RCMAVFT + DIREPARGNE + COD3VE + COD3UV * 1 - is_positive(RE168 + TAX1649) + CIRCMAVFT * is_positive(RE168 + TAX1649)
RENT18 = max(min(INVRETBE * 1 - INDPLAF + INVRETBEA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17])), 0) * 1 - V_CNR
TTSNGL3C = GLD3C - TABGL3C
SOMMEA538CP = present(BAF1AC) + present(BA1AC) + present(MIB1AC) + present(BI1AC) + present(MIBNP1AC) + present(BI2AC) + present(BNCPRO1AC) + present(BN1AC) + present(BNCNP1AC) + present(PVINCE)
PERPPLAFNUNV = max(0, PERPPLAFNUV)
TERPQPRRCM = RPQPRRCM * 1 - is_positive(INDTEFF) + TRPQPRRCM * is_positive(INDTEFF)
TERPQTS1 = RPQTS1 * 1 - is_positive(INDTEFF) + TRPQTS1 * is_positive(INDTEFF)
SPEPVNPV = BNCNP1AV - BNCNPDEV
LIGTXF30 = positif_ou_nul(BPCOPTV + BPCOPTC + BPVSK) * LIG0 * LIG2
TTSNNC = is_positive(TTSC) * arr(TTSC * TTSBNC + BPCOSAC + GLDGRATC / TEXTSC) + 1 - is_positive(TTSC) * TTSC
# TODO IN07
SOMMEA899 = present(BICEXV) + present(BICNOV) + present(BI1AV) + present(BICDNV) + present(BICEXC) + present(BICNOC) + present(BI1AC) + present(BICDNC) + present(BICEXP) + present(BICNOP) + present(BI1AP) + present(BICDNP) + present(BIHEXV) + present(BIHNOV) + present(BIHDNV) + present(BIHEXC) + present(BIHNOC) + present(BIHDNC) + present(BIHEXP) + present(BIHNOP) + present(BIHDNP)
TGLPRR1 = is_positive(TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR21 / TOTALQUO) + 1 - is_positive(TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC
TEGL1 = GL1 * 1 - is_positive(INDTEFF) + TGL1 * is_positive(INDTEFF)
# TODO DEDIV
RECIMP = positif_ou_nul(RECREST) * IPRECH - RECREST
REPMEUIT = DINVRED - RINVRED * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RLOC66 = max(min(INVRETRW * 1 - INDPLAF + INVRETRWA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65])), 0) * 1 - V_CNR
PRN4 = is_positive(TSNT4) * is_positive(TSNT4 + PRNN4) * TSNT4 + PRNN4 + positif_ou_nul(TSNT4) * PRNN4
RLOC119 = max(min(INVRETSVR * 1 - INDPLAF + INVRETSVRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118])), 0) * 1 - V_CNR
ZIPQPALIM25 = is_positive(sum([TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPALIM2M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - sum([ZIPQPALIM15, ZIPQPALIMV5, ZIPQPALIMC5])
TSNN2TSV = is_positive(TSV) * is_positive(REMPLAV) * arr(TSV * CARTSV / EXTSV) + 1 - is_positive(REMPLAV) * TSV - TSNNV
PPEPEXOV = is_positive(PPE_AVRPRO1V + 0) + is_positive(SALEXTV + 0) + 4 * is_positive(PPENJV + PPEACV + 0) + 8 * is_positive(PPEXTV + PPETPV + 0)
PPEPEXO3 = is_positive(PPE_AVRPRO1P + 0) + is_positive(SALEXT3 + 0) + 4 * is_positive(PPEXT3 + PPETPP3 + 0)
LIG81 = is_positive(present(RDDOUP) + present(DONAUTRE) + present(REPDON03) + present(REPDON04) + present(REPDON05) + present(REPDON06) + present(REPDON07) + present(COD7UH) + is_positive(EXCEDANTA)) * LIG1 * LIG2
DS011 = max(QF011 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF011 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF011 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF011 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF011 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
ZIPQFANT11 = is_positive(sum([TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQF1 / TETONEQUO1) + 1 - is_positive(sum([TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - sum([ZIPQFANTV1, ZIPQFANTC1])
RLOCIDFG2 = arr(arr(ACODID / 9) * TX11 / 100) + arr(arr(ACODIF / 9) * TX18 / 100) + arr(arr(ACODIG / 9) * TX11 / 100)
BNNAP = BNCREP - BNCDEP * 1 - is_positive(ART1731BIS * PREM8_11)
RPALETEFRFR = max(0, min(sum([min(NCHENF1, LIM_PENSALENF) + min(arr(CHENF1 * MAJREV), LIM_PENSALENF), min(NCHENF2, LIM_PENSALENF) + min(arr(CHENF2 * MAJREV), LIM_PENSALENF), min(NCHENF3, LIM_PENSALENF) + min(arr(CHENF3 * MAJREV), LIM_PENSALENF), min(NCHENF4, LIM_PENSALENF) + min(arr(CHENF4 * MAJREV), LIM_PENSALENF)]), RBGTEFRFR - DDCSG + TOTALQUO - SDD)) * 1 - V_CNR
IPQRVO65 = ZIPQRVO65 * RENTAXNB6
TERPQRVO6M = RPQRVO6M * 1 - is_positive(INDTEFF) + TRPQRVO6M * is_positive(INDTEFF)
ABGL2C = is_positive(GLD2C) * is_positive(GLD3C) * arr(REP10C * GLD2C / TSBC) + 1 - is_positive(GLD3C) * max(0, REP10C - ABTSC - ABDOMDBJ - ABDOMEBJ - ABGL1C) + 0
RESTIMOY = min(COD7SY, LIM_RESTIMO - RESTIMOD - RESTIMOB - RESTIMOC - RESTIMOF)
ZIGTAX1649 = is_positive(TAX1649) * 1 - V_CNR * LIG2
RD9YP = is_positive(PRS + CVNSALC + CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * arr(VAR9YIPS * RDSN - CRDSIM / BINRPS) + 1 - is_positive(PRS + CVNSALC + CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP)
LIGCOTFOR = is_positive(DCOTFOR) * LIG1 * LIG2
DCELREPGW = CELREPGW
ABADON32 = arr(min(IPQ2 * TX_RABDOM / 100 * PRODOM * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) + arr(min(IPQ2 * TX_RABGUY / 100 * PROGUY * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY))
LIGREPSAA = is_positive(REPSA + REPAA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
IPQ05 = IN05
NINVRETOI = max(min(INVOMLOGOI, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC), 0) * 1 - V_CNR
RCELREPYC = max(0, RCELREPYC_1 * 1 - ART1731BIS + min(RCELREPYC_1, max(RCELREPYC_P + RCELREPYCP2, RCELREPYC1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPDOMOUT = is_positive(REPOMENTR3) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TABTS1CJ = arr(TREP101 * TSHALLO1 / TTSB1)
RCELRREDLC = max(0, RCELRREDLC_1 * 1 - ART1731BIS + min(RCELRREDLC_1, max(RCELRREDLC_P + RCELRREDLCP2, RCELRREDLC1731 + 0) * 1 - PREM8_11) * ART1731BIS)
TABTS1AP = is_positive(BPCOSAV + GLDGRATV + CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * arr(TREP10V * ALLOV / TTSBV) + 1 - is_positive(BPCOSAV + GLDGRATV + CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * max(0, TREP10V - TABTS1AJ - TABTS1AC)
TSNV = is_positive(TSNTV) * min(0, TSNTV + PRNNV) + positif_ou_nul(TSNTV) * TSNTV
LIGPLOC10 = is_positive(DEFLOC10) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
# TODO DIDABNCNP
XTSN1 = is_positive(XTSNT1) * min(0, XTSNT1) + positif_ou_nul(XTSNT1) * XTSNT1
INVRETQOR = min(INVRETQO, max(0, NINVRETQO - INVRETQO)) * 1 - V_CNR
TEXTS1 = TTSBN1 + T2TSN1
INVRETAT = NINVRETAT * 1 - V_CNR
AILMIX_R = DILMIX * 1 - V_CNR
ZIGDCSGD4 = ZIG_CSGD99 * null(ANCSDED2 - V_ANREV + 4) * LIG2
INVRETQXR = min(max(min(arr(INVRETQX * 13 / 7), NINVRETQX - INVRETQX), NINVRETQX - INVRETQX), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR)) * 1 - V_CNR
LIGREPRL = is_positive(REPRL) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TSN1FP = ALLO4 - ABTS1FP
TEGLPALIMTOT = TEGLPALIMV + TEGLPALIMC + TEGLPALIM1 + TEGLPALIM2 + TEGLPALIM3 + TEGLPALIM4
PPE_BOOL_TP4 = is_positive(is_positive(PPETPP4) * is_positive(PPE_SALAVDEF4 + 0) + null(PPENHP4 + PPEXT4 + 0) * null(PPETPP4 + 0) * is_positive(PPE_SALAVDEF4) + positif_ou_nul(360 / PPENBJ * PPENHP4 + PPEXT4 * is_positive(PPE_SALAVDEF4 + 0) - 1820))
SPENETPF = sum([SPENETPV, SPENETPC, SPENETPP]) + SPENETCT
TGLTSCM = is_positive(TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2TSC / TOTALQUO) + 1 - is_positive(TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM
PPENBHC = PPENHC + PPEXTC
NINVRETQF = max(min(INVDOMRET50, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETQO), 0) * 1 - V_CNR
DFNC = min(PLAF_DEDFORFTS, TPS10C)
ZIGINT5 = is_positive(RETRSE5) * LIG2
TDFN1 = min(PLAF_DEDFORFTS, TTPS101)
NPLOCC = min(0, LOCNPC + LOCGITHCC - LOCDEFNPC * 1 - is_positive(ART1731BIS * PREM8_11)) * positif_ou_nul(LOCDEFNPC * 1 - is_positive(ART1731BIS * PREM8_11) - LOCNPC - LOCGITHCC) + arr(max(0, LOCNPC + LOCGITHCC - LOCDEFNPC * 1 - is_positive(ART1731BIS * PREM8_11)) * MAJREV) * is_positive(LOCNPC + LOCGITHCC - LOCDEFNPC * 1 - is_positive(ART1731BIS * PREM8_11))
# TODO MIBDREPNPC
CSG = max(0, CSGC - CICSG)
INVRETSPRA = min(NINVRETSPR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA)) * 1 - V_CNR
LIGILMOB = is_positive(DILMOB) * LIG1 * LIG2
RSNCC = max(0, min(RSN_CC, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL - RSNCM - RSNCN))
PS_RVT = CS_RVT
IPQTSANT31 = ZIPQTSANT31 * CARTSNBAP3
IPCAPTAXV = arr(BPCAPTAXV * T_PCAPTAX / 100)
REPRL = max(0, INVOMENTRL - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY)) * 1 - ART1731BIS + max(0, INVOMENTRL - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY)) * ART1731BIS * 1 - V_CNR
MIBNETPF = sum([MIB_NETPV, MIB_NETPC, MIB_NETPP])
RPQ4M = inf(GL4M / DIVGL4)
INVRETSM = min(NINVRETSM, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH)) * 1 - V_CNR
GLRF2 = TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMTOT - GLRF1
INVRETKIR = min(max(min(arr(INVRETKI * 13 / 7), NINVRETKI - INVRETKI), NINVRETKI - INVRETKI), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR)) * 1 - V_CNR
TRPQRCMCHM = inf(TGLRCMCHM / PROVIENB)
INVRETRR = min(NINVRETRR, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM)) * 1 - V_CNR
DCODJTJU = LOCMEUBJT + LOCMEUBJU
# TODO NAPTEMP
RIVCELCOM1 = RCEL_COM_R * is_positive(ACELCOM_R)
NINVRETQWR = NINVRETQW - arr(NINVRETQW * TX35 / 100) * 1 - V_CNR
EXTSV = TSBNV + BPCOSAV + GLDGRATV + _2TSNV
IPQRVO61 = ZIPQRVO61 * RENTAXNB6
# TODO RIVL2RES
RCEL2012_1 = max(min(RCEL_2012, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1 - RCEL_1 - RCELJP_1 - RCELJBGL_1 - RCELJOQR_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TGL1M = is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TGLN1 / TOTALQUO) + 1 - is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM - TGLRVGM
TFPTC = max(TFRDC, T10MINSC)
GLRVGM = is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * CODRVG / TOTALQUOHT) + 1 - is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM
RILMJX = max(0, RILMJX_1 * 1 - ART1731BIS + min(RILMJX_1, max(RILMJX_P + RILMJXP2, RILMJX1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETOVA = min(NINVRETOV, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA)) * 1 - V_CNR
REPCIFSIN = positif_ou_nul(COD7UA + COD7UB + RDFORESTRA - PLAF_FOREST1 * 1 + BOOL_0AM) * SINISFORET + 1 - positif_ou_nul(COD7UA + COD7UB + RDFORESTRA - PLAF_FOREST1 * 1 + BOOL_0AM) * max(0, SINISFORET - PLAF_FOREST1 * 1 + BOOL_0AM - COD7UA - COD7UB - RDFORESTRA) * 1 - V_CNR
RCEL_JBGL_R = is_positive(CELLIERJB) * arr(ACELJBGL_R * TX22 / 100) + is_positive(CELLIERJG) * arr(ACELJBGL_R * TX13 / 100) + is_positive(CELLIERJL) * arr(ACELJBGL_R * TX36 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TEGLPRR2 = GLPRR2 * 1 - is_positive(INDTEFF) + TGLPRR2 * is_positive(INDTEFF)
IS014 = arr(DS014 * NB1)
RCELREPHX = max(0, RCELREPHX_1 * 1 - ART1731BIS + min(RCELREPHX_1, max(RCELREPHX_P + RCELREPHXP2, RCELREPHX1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RLOC113 = max(min(INVRETSBR * 1 - INDPLAF + INVRETSBRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112])), 0) * 1 - V_CNR
TGLN1C = max(GLD1C - TABGL1C, 0)
GLPRRZ4M = is_positive(REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2Z4 / TOTALQUOHT) + 1 - is_positive(REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM - GLPRRZCM - GLPRRZ1M - GLPRRZ2M - GLPRRZ3M
REDTL = ASURV + ACOMP
INETABADAJ32 = max(0, IPRODOM2 + IQUODAJ32 - ABADO32)
# TODO INDNMR2
BDRSE4 = max(0, PENECS - REVCSXE - arr(CSPROVYH / TX038 / 100)) * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
TRPQRF2M = inf(TGLRF2M / REAMORNB)
# TODO RILTRA
SPENETV = SPENETPV + SPENETNPV
SOMMEA861 = SOMMEA881
DEFBAHREC = is_positive(_4BAHREC) * arr(BAHDEC * 1 - is_positive(ART1731BIS * PREM8_11) * BAHREC / BARSREVC) + 1 - is_positive(_4BAHREC) * BAHDEC * 1 - is_positive(ART1731BIS * PREM8_11)
RPQF2M = inf(GLF2M / COTF2)
TTSBN1 = TSHALLO1 + ALLO1 + max(0, SALEXT1 - COD1CD)
DOMABDB = max(PLAF_RABDOM - ABADO, 0) * is_positive(V_EAD) + max(PLAF_RABGUY - ABAGU, 0) * is_positive(V_EAG)
ISNETDAJ31 = arr(INETABADAJ31 * IPRODOM1 / IPRODOM1 + IQUODAJ31)
IPQPALIM11 = ZIPQPALIM11 * PENSALNBP1
TPRR2Z3 = is_positive(PEBF3 + PENSALP3) * arr(TPRN3 * CODREZ / TEXPR3) + 1 - is_positive(PEBF3 + PENSALP3) * TPRN3 - TPRR3 - TPRR23
CAP9YI = is_positive(TAXLOY + IHAUTREVT) * arr(VAR9YIIR * max(0, IPCAPTAXT - min(IPCAPTAXT + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR)) + min(0, IRN - IRANT + TAXASSUR)) / BINRIR) + 1 - is_positive(TAXLOY + IHAUTREVT) * max(0, VAR9YIIR - IR9YI - TAXA9YI)
INDLIGPPE = is_positive(LIGPPEVCP + LIGPPEV + LIGPPEVC + LIGPPEVP + LIGPPEC + LIGPPECP + LIGPPEP) * 1 - null(7 - PPENEXOV) * 1 - null(11 - PPENEXOV) * 1 - null(7 - PPENEXOC) * 1 - null(11 - PPENEXOC) * 1 - null(7 - PPENEXO1) * 1 - null(11 - PPENEXO1) * 1 - null(7 - PPENEXO2) * 1 - null(11 - PPENEXO2) * 1 - null(7 - PPENEXO3) * 1 - null(11 - PPENEXO3) * 1 - null(7 - PPENEXO4) * 1 - null(11 - PPENEXO4) * 1 - null(2 - PPEPEXOV) * 1 - null(2 - PPEPEXOC) * 1 - null(2 - PPEPEXO1) * 1 - null(2 - PPEPEXO2) * 1 - null(2 - PPEPEXO3) * 1 - null(2 - PPEPEXO4)
RPQRCMFUM = inf(GLRCMFUM / REVPEANB)
INVRETAFRA = min(NINVRETAFR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA - INVRETSGRA - INVRETSARA - INVRETSFRA - INVRETABRA - INVRETAGRA - INVRETAARA)) * 1 - V_CNR
RLOG13 = max(min(INVRETOC * 1 - INDPLAF + INVRETOCA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12])), 0) * 1 - V_CNR
RBLRFRHR = RBG2RFRHR - min(RBG2RFRHR, DPA + DFA + DEDIV + APERPV + APERPC + APERPP + NUREPAR) * 1 - V_CNR - min(RBG2RFRHR, V_8ZT) * V_CR2 * 1 - is_positive(RE168 + TAX1649)
LIGRESINF = is_positive(LIGIDEGRC + LIGIRESTC)
ZIPQTS22 = is_positive(sum([TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * arr(IQUOTOT2 * TERPQTS2 / TETONEQUO1) + 1 - is_positive(sum([TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTSV2 - ZIPQTSC2 - ZIPQTS12
LIGREPPLB = is_positive(REPPL + REPNY + REPTD + REPBG) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
PTOTLOY = arr(max(0, TAXLOY - min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - IPCAPTAXT)) + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT)) * COPETO / 100) + arr(max(0, TAXLOY - min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - IPCAPTAXT)) + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT)) * COPETO / 100) * is_positive(null(CMAJ - 10) + null(CMAJ - 17)) + arr(max(0, TAXLOY - min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - IPCAPTAXT)) + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT) - LOY9YI) * TXINT / 100)
TRPQRCMTSM = inf(TGLRCMTSM / DISQUONB)
RCODJU8 = arr(ACODJU * TX11 / 100) - RCODJU1 - RCODJU2 - RCODJU3 - RCODJU4 - RCODJU5 - RCODJU6 - RCODJU7 - RCODJU7
RCELREP_HS_R = is_positive(CELREPHS) * arr(CELREPHS * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IS012 = arr(DS012 * NB1)
ZIPQTSV5 = is_positive(sum([TEGLTSCM, TEGLTS1M, TEGLTS2M, TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * arr(IQUOTOT5 * TERPQTSVM / TETONEQUOM1) + 1 - is_positive(sum([TEGLTSCM, TEGLTS1M, TEGLTS2M, TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQPRRZ5TOT
TRPQRCMGO = inf(TGLRCMGO / RESTUCNB)
INVRETAQRA = min(NINVRETAQR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA)) * 1 - V_CNR
REPMEUIQ = RETREPNPRO - RREPNPRO * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IPQ1002 = IPQRWB2 + IPQRWA2 + IPQRVG2 + sum([IPQ12, IPQ22, IPQ32, IPQ42]) + sum([IPQFV2, IPQFC2, IPQF12, IPQF22, IPQF32, IPQF42]) + sum([IPQPALIMV2, IPQPALIMC2, IPQPALIM12, IPQPALIM22, IPQPALIM32, IPQPALIM42]) + sum([IPQTSV2, IPQTSC2, IPQTS12, IPQTS22, IPQTS32, IPQTS42]) + sum([IPQTSREMPV2, IPQTSREMPC2, IPQTSREMP12, IPQTSREMP22, IPQTSREMP32, IPQTSREMP42]) + IPQRF11 + IPQRF21 + sum([IPQPRRV2 + IPQPRRZV2, IPQPRRC2 + IPQPRRZC2, IPQPRR12 + IPQPRRZ12, IPQPRR22 + IPQPRRZ22, IPQPRR32 + IPQPRRZ32, IPQPRR42 + IPQPRRZ42]) + IPQRCMDC2 + IPQRCMFU2 + IPQRCMCH2 + IPQRCMTS2 + IPQRCMGO2 + IPQRCMTR2 + IPQRVO2 + IPQRVO52 + IPQRVO62 + IPQRVO72
TMIB_NETNPVC = MIBNPVENC - TMIB_ABNPVC
INVRETSGRA = min(NINVRETSGR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA)) * 1 - V_CNR
TEXSPB1 = TEXTS1 + TEXPR1
XBICNPSC = XBICNPNETC + BI2AC
REVPRR = sum([PRR2V + PRR2ZV, PRR2C + PRR2ZC, PRR21 + PRR2Z1, PRR22 + PRR2Z2, PRR23 + PRR2Z3, PRR24 + PRR2Z4]) * 1 - INDTEFF + sum([TPRR2V + TPRR2ZV, TPRR2C + TPRR2ZC, TPRR21 + TPRR2Z1, TPRR22 + TPRR2Z2, TPRR23 + TPRR2Z3, TPRR24 + TPRR2Z4]) * INDTEFF
RNOUV = RNOUV_1 * 1 - ART1731BIS + min(RNOUV_1, max(RNOUV_P + RNOUVP2, RNOUV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
TRPQTS4M = inf(TGLTS4M / CARTSNBAP4)
TOTPENIR = PIR + PTAXA + PTAXLOY + PHAUTREV + PPCAP
LIGCELYK = is_positive(DCELREPYK) * LIG1 * LIG2
RLOC31 = max(min(INVRETQI * 1 - INDPLAF + INVRETQIA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30])), 0) * 1 - V_CNR
INVRETQURA = min(NINVRETQUR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA)) * 1 - V_CNR
ZIPQRVO5 = is_positive(TEGLRVO5M + TEGLRVO6M + TEGLRVO7M + TEGLTSTOTM + TEGLTSREMPTOTM) * arr(IQUOTOT5 * TERPQRVOM / TETONEQUOM1) + 1 - is_positive(TEGLRVO5M + TEGLRVO6M + TEGLRVO7M + TEGLTSTOTM + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQPRRZ5TOT
LIGISF17285 = is_positive(NMAJISF1) * 1 - is_positive(ANNUL2042) * LIGISF * 1 - is_positive(SEUIL_12 - ISF4BIS) * 1 - null(ISF5) * is_positive(V_FLAGR34 + null(CMAJ_ISF - 34))
LIGILMJX = is_positive(DILMJX) * LIG1 * LIG2
EPAREST = is_positive(REST) * max(0, min(CIDIREPARGNE, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - IPELUS - CITEC - CIDEVDUR - CIGE - I2DH - CI2CK - COD8TL))
NINVRETRA = max(min(CODHRA, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX), 0) * 1 - V_CNR
RCEL_FABC_R = is_positive(CELLIERFA) * arr(ACELFABC_R * TX13 / 100) + is_positive(CELLIERFB) * arr(ACELFABC_R * TX6 / 100) + is_positive(CELLIERFC) * arr(ACELFABC_R * TX24 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIPQRWB2 = is_positive(TEGLRWA + TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQRWB / TETONEQUO1) + 1 - is_positive(TEGLRWA + TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2
RBLTEFRFR = RBG2TEFRFR - max(0, min(RBG2TEFRFR, DPA + DFA + DEDIV + APERPVTEFRFR + APERPCTEFRFR + APERPPTEFRFR + NUREPARTEFRFR)) * 1 - V_CNR - min(RBG2TEFRFR, V_8ZT) * V_CR2 * 1 - is_positive(RE168 + TAX1649)
BAQTOTN = min(0, BAQV + BAQC + BAQP + BAHQTOTMAXN)
IPQPALIMANTC1 = ZIPQPALIMANTC1 * PENSALNBC
REPDOMENTR4 = REPMN + REPMB + REPMC + REPLH + REPLI + REPKT + REPKU
TEFFREVTOTRFRHR = INDTEFF * TBICPF + TBICNPF + TBNN + BIHTAV + BIHTAC + BIHTAP + BIPTAV + BIPTAC + BIPTAP + ESFP + TTSPR + RCM + PLOCNETF + NPLOCNETF + RFNTEO * V_INDTEO + RRFI * 1 - V_INDTEO + PVBARHR + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + R1649 - DAR - max(0, min(TEFFREVINTER, DPA + DFA + DEDIV + APERPVTEFRFR + APERPCTEFRFR + APERPPTEFRFR + NUREPARTEFRFR + ABTPATEFRFR + ABTMA + DDCSG))
LIGPME1 = is_positive(REPINVPME1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TEGLPRRTOT = TEGLPRRV + TEGLPRRC + TEGLPRR1 + TEGLPRR2 + TEGLPRR3 + TEGLPRR4
ZIPQTSANTC1 = is_positive(sum([TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * arr(IQUOTOTANT1 * TERPQTSC / TETONEQUO1) + 1 - is_positive(sum([TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQPRRANTZ1TOT - ZIPQTSANTV1
REPQK = max(0, INVLOGSOC - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU)) * 1 - ART1731BIS + max(0, INVLOGSOC - max(0, RDOMSOC1 - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU)) * ART1731BIS * 1 - V_CNR
RG = 1 - is_positive(IPVLOC) * SHBA + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + is_positive(IPVLOC) * IPVLOC
NINVRETAE = max(min(CODHAE, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW - NINVRETBE), 0) * 1 - V_CNR
RRCELMH = max(0, CELRREDMH - RCELRREDMH) * is_positive(CELRREDMH) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INVRETBB = min(arr(NINVRETBB * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV)) * 1 - V_CNR
DILMPC = COD7PC
LIGTXPOSYT = is_positive(RMOND + DEFZU - DMOND) * is_positive(IPTXMO) * is_positive(DEFRIMOND) * LIG1 * LIG2
TRPQPALIM2M = inf(TGLPALIM2M / PENSALNBP2)
RIVCELHJK3 = RIVCELHJK1
TERPQRVO6 = RPQRVO6 * 1 - is_positive(INDTEFF) + TRPQRVO6 * is_positive(INDTEFF)
TBNCPABV = arr(TSPEABPV * AUTOBNCV / BNCPROV + AUTOBNCV)
BINTTAP = BINTAP + BI2AP
# TODO MAJTXCHR4
REPRCM6 = is_positive(REPRCMBIS) * min(arr(REPRCMBIS * _6RCM_I / RCM_I), REPRCMBIS - REPRCM1 - REPRCM2 - REPRCM3 - REPRCM4 - REPRCM5) + 1 - is_positive(REPRCMBIS) * 0
RPQTSREMPVM = inf(GLTSREMPVM / REMPLANBV)
NRCELREPYB = max(min(ACELREPYB, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC])), 0)
PRSNET = max(0, PRSC + PPRS - CIPRS - PRSPROV)
RIVPIQBD = arr(arr(min(PINELQD + 0, LIMDUFLO - min(DUFLOEL + 0, LIMDUFLO)) / 9) * TX29 / 100) + arr(arr(min(PINELQB + 0, LIMDUFLO - min(DUFLOEL + PINELQD + PINELQC + DUFLOEK + 0, LIMDUFLO)) / 9) * TX18 / 100) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
BON = arr(min(REPDON03 + REPDON04 + REPDON05 + REPDON06 + REPDON07 + RDDOUP + BDON7UH + DONAUTRE + EXCEDANTA, REVDON * TX_BASEDUP / 100))
CSPROVRSE4 = CSPROVYH + CSPROVYP
PRSD = NAPPS - V_PSANT
FRDAV = FRNV * is_positive(FRNV - _10MINSV)
TBICNPABC = min(TBICNPPROVC, arr(TMIB_ABNPVC / MIBNPVENC + TMIB_ABNPPC / MIBNPPRESC))
RLOC52 = max(min(INVRETRV * 1 - INDPLAF + INVRETRVA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51])), 0) * 1 - V_CNR
LIGDFRCM3 = is_positive(DFRCM3) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
CGLOANET = max(0, CGLOA + PGLOA - COD8YL)
TSNTV = TSN1AJ + TSN1AP + TSN3VJ + TSN1TT + TSNRAJ + TSNRAP + TSNDAJ + TSNEAJ + TSNGL1V + TSNGL2V + TSNGL3V
RDSD = NAPRD - V_RDANT
INVRETQXRA = min(NINVRETQXR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA)) * 1 - V_CNR
CI2CK = COD2CK * 1 - is_positive(RE168 + TAX1649) * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO))
TPENF2 = is_positive(PENSALP2) * arr(TPRN2 * PEBF2 / TEXPR2) + 1 - is_positive(PENSALP2) * TPRN2 - TPRR2 - TPRR22 - TPRR2Z2
INDEFTS1 = positif_ou_nul(TSB1 - FRD1)
TPENF3 = is_positive(PENSALP3) * arr(TPRN3 * PEBF3 / TEXPR3) + 1 - is_positive(PENSALP3) * TPRN3 - TPRR3 - TPRR23 - TPRR2Z3
RNOUV_1 = max(min(RSN, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT), 0)
MIB_NETNPPV = MIBNPPRESV - MIB_ABNPPV
TRCMRABD = RCMRABD + _2RCMRABD
NINVRETAUR = NINVRETAU - arr(NINVRETAU * TX4737 / 100) * 1 - V_CNR
LIG2080 = is_positive(NATIMP - 71) * LIG2
REPMEUIA = AILMIA_R - RILMIA * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
# TODO MAJTXRSE31
REPFORTOT = REPFOREST2 + REPFOREST3 + REPEST
INVRETQU = min(arr(NINVRETQU * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN)) * 1 - V_CNR
NINVRETQO = max(min(INVRETRO1, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ), 0) * 1 - V_CNR
TSN3VJ = BPCOSAV - ABTS3VJ
BASE7UWH = max(0, min(REPFOR + REPSINFOR + REPFOR1 + REPSINFOR1 + REPFOR2 + REPSINFOR2 + REPSINFOR3, PLAFRED_FORTRA) - REPFOR + REPSINFOR + REPFOR1 + REPSINFOR1 + REPSINFOR2) * 1 - V_CNR
BIPTAP = BICNOP - BICDNP * 1 - is_positive(ART1731BIS * PREM8_11)
LIGREPLNPX = is_positive(REPLNPX) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TEGL4VCM = GL4VCM * 1 - is_positive(INDTEFF) + TGL4VCM * is_positive(INDTEFF)
RRCELLM = max(0, CELRREDLM - RCELRREDLM) * is_positive(CELRREDLM) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIPQTSC5 = is_positive(sum([TEGLTS1M, TEGLTS2M, TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * arr(IQUOTOT5 * TERPQTSCM / TETONEQUOM1) + 1 - is_positive(sum([TEGLTS1M, TEGLTS2M, TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQPRRZ5TOT - ZIPQTSV5
APLAFREPME4 = COD7CY * is_positive(COD7CY) * 1 - V_CNR
LIG1430 = is_positive(BPTP3) * LIG0 * LIG2
RCELRREDLN = max(0, RCELRREDLN_1 * 1 - ART1731BIS + min(RCELRREDLN_1, max(RCELRREDLN_P + RCELRREDLNP2, RCELRREDLN1731 + 0) * 1 - PREM8_11) * ART1731BIS)
NRCELHM = max(min(RCEL_HM, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA])), 0)
ACELREPGU = CELREPGU * 1 - ART1731BIS + min(CELREPGU, max(ACELREPGU_P + ACELREPGUP2, ACELREPGU1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INTANISF = MOISAN_ISF / 10000 - INTMSISF * 10000 * present(MOISAN_ISF)
BNNAV = BNCREV - BNCDEV * 1 - is_positive(ART1731BIS * PREM8_11)
NINVRETRB = max(min(CODHRB, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK - NINVRETQJ - NINVRETQS - NINVRETQW - NINVRETQX - NINVRETRA), 0) * 1 - V_CNR
TSPEABPP = arr(TSPEABP * BNCPROP + AUTOBNCP / TSPETOTP)
LIGDEFBA = is_positive(DEFBA1 + DEFBA2 + DEFBA3 + DEFBA4 + DEFBA5 + DEFBA6) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
NINVRETAY = max(min(CODHAY, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW - NINVRETBE - NINVRETAE - NINVRETAJ - NINVRETAO - NINVRETAT), 0) * 1 - V_CNR
PPE_COEFFCONDN = 1 - PPE_BOOL_TPN * null(PPENBJ - 360) * PPE_COEFFN + 1 - null(PPENBJ - 360) * PPENBJ * 1820 / 360 / PPENHP1 + PPENHP2 + PPENHP3 + PPENHP4 + PPEXT1 + PPEXT2 + PPEXT3 + PPEXT4 + PPENJP * is_positive(PPE_AVRPRO1P + 0) * 1820 / 360
LIGILMIY = is_positive(DILMIY) * LIG1 * LIG2
RCEL_JOQR = is_positive(CELLIERJQ) * arr(ACELJOQR * TX36 / 100) + is_positive(CELLIERJO + CELLIERJR) * arr(ACELJOQR * TX24 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PERPDCOTV = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE) * min(PERP_COTV, PERPPLATVANT) + is_positive(PERPIMPATRIE) * min(PERP_COTV, PERPPLAFIMPV) + is_positive(PERP_COND1) * min(PERP_COTV, PERPPLAFMU1V) + is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE) * min(PERP_COTV, PERPPLATVANT) + is_positive(PERPIMPATRIE) * min(PERP_COTV, PERPPLAFIMPV)
INVRETPERA = min(NINVRETPER, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA)) * 1 - V_CNR
TSHALLOP = TSHALLO1 + TSHALLO2 + TSHALLO3 + TSHALLO4
ZIPQRCMFU5 = is_positive(TEGLRCMCHM + TEGLRCMTSM + TEGLRCMGOM + TEGLRCMTRM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQRCMFUM / TETONEQUOM1) + 1 - is_positive(TEGLRCMCHM + TEGLRCMTSM + TEGLRCMGOM + TEGLRCMTRM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCMDC5
TMIB_AUTOAPC = TMIB_APC - TMIB_PRESAC
INVRETAP = min(arr(NINVRETAP * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK)) * 1 - V_CNR
ZIPQTS41 = is_positive(TEGLTSREMPTOT) * arr(IQUOTOT1 * TERPQTS4 / TETONEQUO1) + 1 - is_positive(TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTSV1 - ZIPQTSC1 - ZIPQTS11 - ZIPQTS21 - ZIPQTS31
ZIPQTS42 = is_positive(TEGLTSREMPTOT) * arr(IQUOTOT2 * TERPQTS4 / TETONEQUO1) + 1 - is_positive(TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTSV2 - ZIPQTSC2 - ZIPQTS12 - ZIPQTS22 - ZIPQTS32
MIB_ABNPPV = max(0, arr(MIB_APV * MIBNPPRESV / MIB_TPRESV)) * present(MIBMEUV) + MIB_APV - MIB_ABPV * 1 - present(MIBMEUV)
BI1 = sum([BI1V, BI1C, BI1P])
TABTSRCJ = is_positive(REMPLAP1) * arr(TREP101 * CARTSP1 / TTSB1) + 1 - is_positive(REMPLAP1) * max(0, TREP101 - TABTS1CJ - TABTS1CC - TABTS1CP)
LIGINRTAX = is_positive(RETTAXA)
LIGREPSW = is_positive(REPSW) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TGLPRRC = is_positive(TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2C / TOTALQUO) + 1 - is_positive(TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV
INVRETUAA = min(NINVRETUA, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETODA)) * 1 - V_CNR
LIGRCEL2012 = is_positive(RIV2012CEL1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
CRESINTER = PRESINTER
PTAXA = PTOTAXA
SPENETPC = max(0, BNCPROC - SPEABPC)
RLOC79 = max(min(INVRETRQR * 1 - INDPLAF + INVRETRQRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78])), 0) * 1 - V_CNR
MIBNETNPVLSP = arr(MIB_NETNPVLP * MIBGITEP / MIBGITEP + LOCGITP)
LIGISFTRCT = present(ISFBASE) * is_positive(V_TRCT)
DCTMIBNP = MIBNPDCT * positif_ou_nul(BINNV + BINNC + BINNP + MIB_NETNPCT) + 1 - positif_ou_nul(BINNV + BINNC + BINNP + MIB_NETNPCT) * MIBNPDCT - abs(BINNV + BINNC + BINNP + MIB_NETNPCT) + 1 - positif_ou_nul(BINNV + BINNC + BINNP + MIB_NETNPCT) * null(MIBNPDCT - abs(BINNV + BINNC + BINNP + MIB_NETNPCT)) * MIBNPDCT
RCELJOQR = max(0, RCELJOQR_1 * 1 - ART1731BIS + min(RCELJOQR_1, max(RCELJOQR_P + RCELJOQRP2, RCELJOQR1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NINVRETQN = max(min(INVSOC2010, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI), 0) * 1 - V_CNR
RLOG26 = max(min(INVRETOD * 1 - INDPLAF + INVRETODA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25])), 0) * 1 - V_CNR
INDCODDAJ = is_positive(present(CODDAJ) + present(CODDBJ) + present(CODEAJ) + present(CODEBJ))
PDEVDUR = max(PLAF_DEVDUR * 1 + BOOL_0AM + PLAF_GE2_PACQAR * V_0CH + V_0DP + PLAF_GE2_PAC * V_0CR + V_0CF + V_0DJ + V_0DN - V_BTDEVDUR * 1 - present(DEPCHOBAS) + DEPCHOBAS, 0)
NBQART = BOOL_0BT * null(V_0CF + V_0CR + V_0DJ + 0) * 1 / 4 * null(V_0CH - 1) + 1 / 2 * positif_ou_nul(V_0CH - 2)
DPROREP = INVNPROREP
TEXSPB2 = TEXTS2 + TEXPR2
ZIG_PENATAUX = ZIG_PENAMONT * is_positive(NMAJC1 + NMAJR1 + NMAJP1 + NMAJCVN1) * LIG2
ZIGBASEPS1 = is_positive(BPRS + V_PSANT) * is_positive(INDCTX)
IPQRVG2 = ZIPQRVG2 * CODNVG
LIGREPRB = is_positive(REPRB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TGLPRRTOT = sum([TGLPRRV + TGLPRRZV, TGLPRRC + TGLPRRZC, TGLPRR1 + TGLPRRZ1, TGLPRR2 + TGLPRRZ2, TGLPRR3 + TGLPRRZ3, TGLPRR4 + TGLPRRZ4])
NRMEUBLE = max(min(MEUBLERET, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE), 0)
BGEDECL = RDTECH + RDEQPAHA
RESIMEUB5 = arr(arr(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
A11RENT1 = RENT14 + RENT20 + RENT16 + RENT22 + RLOC102 + RLOC108 + RLOC104 + RLOC110 + RLOC34 + RLOC63 + RLOC70 + RLOC66 + RLOC73 + max(0, RLOC29 + RLOC44 + RLOC24 + RLOC39 + RLOC56 + RLOC84 + RLOC49 + RLOC77 + RLOC59 + RLOC87 + RLOC52 + RLOC80 + RENT08 + RENT32 + RENT02 + RENT26 + RENT10 + RENT34 + RENT04 + RENT28 + RLOC96 + RLOC116 + RLOC90 + RLOC114 + RLOC98 + RLOC122 + RLOC92 + RLOC118 - arr(RLOC29 + RLOC44 * 5263 / 10000) + arr(RLOC24 + RLOC39 * 625 / 1000) + arr(RLOC56 + RLOC84 * 5263 / 10000) + arr(RLOC49 + RLOC77 * 625 / 1000) + arr(RLOC59 + RLOC87 * 5263 / 10000) + arr(RLOC52 + RLOC80 * 625 / 1000) + arr(RENT08 + RENT32 * 5263 / 10000) + arr(RENT02 + RENT26 * 625 / 1000) + arr(RENT10 + RENT34 * 5263 / 10000) + arr(RENT04 + RENT28 * 625 / 1000) + arr(RLOC96 + RLOC116 * 5263 / 10000) + arr(RLOC90 + RLOC114 * 625 / 1000) + arr(RLOC98 + RLOC122 * 5263 / 10000) + arr(RLOC92 + RLOC118 * 625 / 1000)) * 1 - V_CNR
DCELJBGL = CELLIERJB + CELLIERJG + CELLIERJL
TGLRVOTOTM = TGLRVOM + TGLRVO5M + TGLRVO6M + TGLRVO7M
PPESEUILKIR = PPE_BOOL_SIFC * PPELIMC + PPE_BOOL_SIFM * PPELIMM + NBPT - 1 - PPE_BOOL_SIFM - NBQAR * 2 * PPELIMPAC + NBQAR * PPELIMPAC * 2
REPRP = max(0, INVOMENTRP - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK)) * 1 - ART1731BIS + max(0, INVOMENTRP - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK)) * ART1731BIS * 1 - V_CNR
EM7QAR = sum([min(1, max(0, V_0H0 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0H1 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0H2 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0H3 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0H4 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0H5 + AG_LIMFG - V_ANREV))]) + sum([min(1, max(0, V_0P0 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0P1 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0P2 + AG_LIMFG - V_ANREV)), min(1, max(0, V_0P3 + AG_LIMFG - V_ANREV))]) + 1 - is_positive(sum([V_0H0, V_0H1, V_0H2, V_0H3, V_0H4, V_0H5]) + sum([V_0P0, V_0P1, V_0P2, V_0P3]) + 0) * V_0CH + V_0DP
IPQTSREMPANT21 = ZIPQTSREMPANT21 * REMPLANBP2
LIGDLMRN4 = is_positive(DLMRN4) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
LIGRESTAU = is_positive(CRERESTAU) * LIG1 * LIG2
PSIREST = is_positive(REST) * max(0, min(CRESINTER, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT))
ZIPQTSREMPC1 = is_positive(sum([TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * arr(IQUOTOT1 * TERPQTSREMPC / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTS1TOT - ZIPQTSREMPV1
LIGRSN1 = is_positive(RINVTPME13) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TEGLRVOM = GLRVOM * 1 - is_positive(INDTEFF) + TGLRVOM * is_positive(INDTEFF)
# TODO NMAJRSE54
NINVRETUB = max(min(CODHUB, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ - NINVRETUA), 0) * 1 - V_CNR
# TODO PPE_BOOL_NADAN
PTORSE4 = arr(max(0, RSE4 - CIRSE4 - CSPROVRSE4) * COPETO / 100) + arr(max(0, RSE4 - CIRSE4 - CSPROVRSE4 - RSE49YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
ZIPQPRRZ22 = is_positive(sum([TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPRRZ2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRZV2 - ZIPQPRRZC2 - ZIPQPRRZ12
RD_BPCOS = CS_BPCOS
MIB_ABNPVLV = MIB_AVV - MIB_ABVV - MIB_ABNPVV * is_positive(present(MIBGITEV) + present(LOCGITV))
IPQRFANT21 = ZIPQRFANT21 * REAMORNB
IPQT = IMT11 - IPHQ
REPMEUOA = DILMOA - RILMOA * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TRPQ4VM = arr(TGL4VM / DIVGL4) + 0
TSPR4 = TSNN4 + PRR4 * 1 - PREM8_11 + max(0, TSNN4 + PRR4) * PREM8_11
PRR4 = arr(PRN4 * PRB4 / EXPR4)
TRCMRTNC = RCMRTNC + _2RCMRTNC
NINVRETXER = NINVRETXE - arr(NINVRETXE * TX35 / 100) * 1 - V_CNR
RPQF1M = inf(GLF1M / COTF1)
# TODO MAJTXGLO1
# TODO NMAJLOY4
TGLTSREMP1 = is_positive(TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2REMP1 / TOTALQUO) + 1 - is_positive(TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV - TGLTSREMPC
LIG_SAL = positif_ou_nul(TSHALLOV + TSHALLOC + TSHALLOP) * positif_ou_nul(ALLOV + ALLOC + ALLOP) * LIG0 * LIG2
INVRETQG = min(arr(NINVRETQG * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP)) * 1 - V_CNR
PERPPLAFNU3C = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE + 0) * is_positive(PERPPLAFNUC) * PERPPLAFNUC3ANT + 1 - is_positive(PERPPLAFNUC) * max(0, PERPPLAFNUC3ANT - RPERPC - PERPPLAFCANT) + is_positive(PERPIMPATRIE + 0) * 0 + is_positive(PERP_COND1) * is_positive(PERPPLAFNUC) * PERPPLAFNUC3ANT + 1 - is_positive(PERPPLAFNUC) * max(0, PERPPLAFNUC3ANT - RPERPC + RPERPMUTV + RACCOTV - PERPPLAFCANT) + is_positive(PERP_COND2) * 0
TTSNV = is_positive(TTSNTV) * min(0, TTSNTV + TPRNNV) + positif_ou_nul(TTSNTV) * TTSNTV
ZIPQPRRC2 = is_positive(sum([TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPRRC / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRV2
BHAUTREV = max(0, REVKIREHR - LIMHR1 * 1 + BOOL_0AM)
TGLN2C = max(GLD2C - TABGL2C, 0)
TGLPRRZCM = is_positive(TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2ZC / TOTALQUO) + 1 - is_positive(TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM
RIVCELFABC1 = is_positive(CELLIERFA) * arr(BCEL_FABC * TX13 / 100) + is_positive(CELLIERFB) * arr(BCEL_FABC * TX6 / 100) + is_positive(CELLIERFC) * arr(BCEL_FABC * TX24 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
VAR9YIPS = max(0, ACODELAISINR - VAR9YIIR)
RCELREP_HX_R = is_positive(CELREPHX) * arr(CELREPHX * TX25 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
KIR = IAMD3
XTSNC = is_positive(XTSNTC) * min(0, XTSNTC) + positif_ou_nul(XTSNTC) * XTSNTC
IND_CTXD = is_positive(CS_DEG) * is_positive(BCDIS) * is_positive(INDCTX)
TRPQTS2M = inf(TGLTS2M / CARTSNBAP2)
LIGREPSAB = is_positive(REPSB + REPAB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
REPMEUIU = DREDREP - RREDREP * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIPQFV2 = is_positive(sum([TEGLFC, TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQFV / TETONEQUO1) + 1 - is_positive(sum([TEGLFC, TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT
ZIPQF35 = is_positive(TEGLF4M + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQF3M / TETONEQUOM1) + 1 - is_positive(TEGLF4M + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - sum([ZIPQF15, ZIPQF25, ZIPQFV5, ZIPQFC5])
RIVCELHNO4 = RIVCELHNO1
TFPT4 = max(TFRD4, T10MINS4)
TSN1DJ = TSHALLO2 - ABTS1DJ
INVRETACA = min(NINVRETAC, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA)) * 1 - V_CNR
DISFDONF = ISFDONF
ZIPQFV5 = is_positive(sum([TEGLFCM, TEGLF1M, TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQFVM / TETONEQUOM1) + 1 - is_positive(sum([TEGLFCM, TEGLF1M, TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT
CRSE4D = NAPRSE4 - V_RSE4ANT
RINNO_1 = max(min(RFCPI, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1 - RSOCREPR_1 - RRPRESCOMP_1 - RHEBE - RSURV_1), 0)
IDOM31 = is_positive(IND_TDR) * IDOM14 + 1 - is_positive(IND_TDR) * V_CR2 * IDOM11 + 1 - V_CR2 * ID11 - ADO31 * 1 - is_positive(INDCODDAJ) + ITOTDOM31 * is_positive(INDCODDAJ)
LIGCITEC = is_positive(DTEC) * LIG1 * LIG2
INVRETPFA = min(arr(NINVRETPF * TX375 / 100), max(0, MAXDOM2 - INVRETPBA)) * 1 - V_CNR
BAFORP = arr(BAFP * MAJREV) + BAFORESTP + BAFPVP
TEGLTSREMP2M = GLTSREMP2M * 1 - is_positive(INDTEFF) + TGLTSREMP2M * is_positive(INDTEFF)
IPQPRRC2 = ZIPQPRRC2 * CARPENBAC
LIGREPRESI = is_positive(REPREDREP) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TIND_10MIN_0C = is_positive(TDEDMINC - TDFNC) * is_positive(TTSBC)
IRETS = max(0, min(min(COD8PA, IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT) * present(COD8PA) + IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT * 1 - present(COD8PA), IPSOUR * 1 - is_positive(RE168 + TAX1649)))
IPQTS31 = ZIPQTS31 * CARTSNBAP3
GL4TVC = arr(TONEQUOHT * REV4TVC / TOTALQUOHT)
BTOINR = max(0, IRN - IR9YI - IRANT) * is_positive(IAMD1 + 1 - SEUIL_61)
# TODO NAPRSE4
TMIB_NETPP = MIBPRESP + AUTOBICPP - TMIB_ABPP
INVRETOFA = min(NINVRETOF, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA)) * 1 - V_CNR
NRLOCNPRO = NRREDMEUB + NRREDREP + NRILMIX + NRILMIY + NRILMPA + NRINVRED + NRILMIH + NRILMJC + NRILMPB + NRILMIZ + NRILMJI + NRILMPC + NRILMJS + NRILMPD + NRILMPE + NRMEUBLE + NRPROREP + NRREPNPRO + NRREPMEU + NRILMIC + NRILMIB + NRILMIA + NRILMJY + NRILMJX + NRILMJW + NRILMJV + NRILMOE + NRILMOD + NRILMOC + NRILMOB + NRILMOA + NRRESIMEUB + NRRESIVIEU + NRRESINEUV + NRLOCIDEFG + NRCODJU + NRCODJT + NRCODOU
LIGREPAK = is_positive(REPAK) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
REPSE = max(0, CODHSE - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW - CODHTB)) * 1 - ART1731BIS + max(0, CODHSE - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW - CODHTB)) * ART1731BIS * 1 - V_CNR
BINTAP = BICREP - BICDEP * 1 - is_positive(ART1731BIS * PREM8_11)
# TODO MIBDREPC
RREPMEU_1 = max(min(RETREPMEU, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO), 0)
LIG10P = positif_ou_nul(sum([TSBN1 + PRB1, TSBN2 + PRB2, TSBN3 + PRB3, TSBN4 + PRB4]) + is_positive(F10AP * null(sum([TSBN1 + PRB1, TSBN2 + PRB2, TSBN3 + PRB3, TSBN4 + PRB4]))))
MIB_APV = min(MIB_TPRESV, max(MIN_MBIC, arr(MIB_TPRESV * TX_MIBPRES / 100)))
BNNSV = is_positive(BNHREV - BNHDEV * 1 - is_positive(ART1731BIS * PREM8_11)) * arr(BNHREV - BNHDEV * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV) + 1 - positif_ou_nul(BNHREV - BNHDEV * 1 - is_positive(ART1731BIS * PREM8_11)) * BNHREV - BNHDEV * 1 - is_positive(ART1731BIS * PREM8_11)
PERPPLAFIMPC = is_positive(PERPIMPATRIE) * PERPPLAFCOMC + PERPPLAFC + 1 - is_positive(PERPIMPATRIE) * 0
RFCFPS = RFCEPS - RFDHIS * 1 - is_positive(PREM8_11)
TMIB_TTP = TMIB_TVENP + TMIB_TPRESP
LIGBPLIB = present(RCMLIB) * LIG0 * 1 - null(4 - V_REGCO) * LIG2
CRDIE = max(0, min(IRB - REI - AVFISCOPTER - CIRCMAVFT - IRETS, min(IAD11 - CIRCMAVFT - IRETS, CRCFA) * 1 - is_positive(RE168 + TAX1649)))
TEGLTSTOT = TEGLTSV + TEGLTSC + TEGLTS1 + TEGLTS2 + TEGLTS3 + TEGLTS4
ABADON2 = arr(min(ID12 * TX_RABDOM / 100 * PRODOM * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) + arr(min(ID12 * TX_RABGUY / 100 * PROGUY * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY))
# TODO NONMER
TERPQRCMTS = RPQRCMTS * 1 - is_positive(INDTEFF) + TRPQRCMTS * is_positive(INDTEFF)
IBM33 = IAD31 + ITP + REI
# TODO NMAJRSE31
LIGAMEETREV = is_positive(INDREV1A8) * LIG1 * LIG2
PRSE1 = PTORSE1
TGLPRRZV = is_positive(TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2ZV / TOTALQUO) + 1 - is_positive(TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4
TAXABASE_N = arr(max(TAXASSUR + min(0, IRN - IRANT), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
LIGREPSAJ = is_positive(REPSJ + REPAJ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
DFN3 = min(PLAF_DEDFORFTS, TPS103)
LIGTROPS = is_positive(V_ANTRE + V_ANTCR) * null(IINET) * positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT) * 1 - positif_ou_nul(abs(NAPTOTA) - IRESTIT - IRANT - SEUIL_12) * null(IDRS2 - IDEC + IREP) * LIGPS * 1 - INDCTX
RLOCENT_1 = 1 - V_INDTEO * sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30, RENT31, RENT32, RENT33, RENT34, RENT35, RENT36]) + V_INDTEO * arr(V_RENT07 + V_RENT31 * 5263 / 10000) + arr(V_RENT01 + V_RENT25 * 625 / 1000) + arr(V_RENT09 + V_RENT33 * 5263 / 10000) + arr(V_RENT03 + V_RENT27 * 625 / 1000) + arr(V_RENT08 + V_RENT32 * 5263 / 10000) + arr(V_RENT02 + V_RENT26 * 625 / 1000) + arr(V_RENT10 + V_RENT34 * 5263 / 10000) + arr(V_RENT04 + V_RENT28 * 625 / 1000) + arr(V_RENT11 + V_RENT35 * 5263 / 10000) + arr(V_RENT05 + V_RENT29 * 625 / 1000) + arr(V_RENT12 + V_RENT36 * 5263 / 10000) + arr(V_RENT06 + V_RENT30 * 625 / 1000) * 1 - V_CNR
# TODO RIVL1
REPQP = max(0, INVRETRO2 - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009)) * 1 - ART1731BIS + max(0, INVRETRO2 - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009)) * ART1731BIS * 1 - V_CNR
INVRETLHR = min(INVRETLH, max(0, NINVRETLH - INVRETLH)) * 1 - V_CNR
DRESTIMO = RIMOSAUVANT + RIMOPPAUANT + RESTIMOPPAU + RESTIMOSAUV + RIMOPPAURE + RIMOSAUVRF + COD7SY + COD7SX
BNNSC = is_positive(BNHREC - BNHDEC * 1 - is_positive(ART1731BIS * PREM8_11)) * arr(BNHREC - BNHDEC * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV) + 1 - positif_ou_nul(BNHREC - BNHDEC * 1 - is_positive(ART1731BIS * PREM8_11)) * BNHREC - BNHDEC * 1 - is_positive(ART1731BIS * PREM8_11)
LIGCELLB = is_positive(DCELRREDLB) * LIG1 * LIG2
# TODO ABVIE
TDFNV = min(PLAF_DEDFORFTS, TTPS10V)
RPQPALIMV = inf(GLPALIMV / PENSALNBV)
LIGREPPB = is_positive(REPPB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
MAJTXISF1 = 1 - is_positive(V_NBCOD1728ISF) * 1 - is_positive(CMAJ_ISF) * is_positive(NMAJISF1) * TXPF1728ISF + is_positive(CMAJ_ISF) * COPETOISF + is_positive(V_NBCOD1728ISF) * -1
ADUFREPFI = DUFLOFI * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REPDON = max(BASEDONF + REPDON04 + REPDON05 + REPDON06 + REPDON07 + BASEDONP - arr(REVDON * TX_BASEDUP / 100), 0) * 1 - V_CNR
RCELREPHB = max(0, RCELREPHB_1 * 1 - ART1731BIS + min(RCELREPHB_1, max(RCELREPHB_P + RCELREPHBP2, RCELREPHB1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
# TODO DALNP
BNCDF2 = 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * DABNCNP1 + positif_ou_nul(NOCEPIMP + SPENETNPF) * min(max(NOCEPIMP + SPENETNPF - DABNCNP6 - DABNCNP5 - DABNCNP4 - DABNCNP3 - DABNCNP2, 0) - DABNCNP1, DABNCNP1) * -1 * positif_ou_nul(DABNCNP1 - max(NOCEPIMP + SPENETNPF - DABNCNP6 - DABNCNP5 - DABNCNP4 - DABNCNP3 - DABNCNP2, 0)) * 1 - is_positive(ART1731BIS) + min(DABNCNP1, DABNCNP - DIDABNCNP) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + DABNCNP1 * is_positive(is_positive(ART1731BIS * PREM8_11) + null(8 - CMAJ) + null(11 - CMAJ))
FRDV = 1 - is_positive(PREM8_11) * FRNV * is_positive(FRNV - _10MINSV) + null(4 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRNV, FRDPROVV) + null(5 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRNV, min(FRDPROVV, max(FRDPROVVP2, FRDPROVV1731)))
ACEL = BCEL_2011 * 1 - ART1731BIS + min(BCEL_2011, max(ACEL_P + ACELP2, ACEL1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELSOMN) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IPQPRR22 = ZIPQPRR22 * CARPENBAP2
MIB_NETPV = MIBPRESV - MIB_ABPV
IPQPALIMANT21 = ZIPQPALIMANT21 * PENSALNBP2
REVALIMQHT = sum([PENALIMV, PENALIMC, PENALIM1, PENALIM2, PENALIM3, PENALIM4])
SPEABNPP = SPEABP - SPEABPP
LIGXTSA = is_positive(present(TSASSUV) + present(TSASSUC)) * LIG1 * LIG2
ZIPQRCMTR5 = is_positive(TEGLRCMGOM + TEGLRCMTSM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQRCMTRM / TETONEQUOM1) + 1 - is_positive(TEGLRCMGOM + TEGLRCMTSM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCMDC5 - ZIPQRCMFU5 - ZIPQRCMCH5
REPMEUOE = DILMOE - RILMOE * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TERPQ4VM = RPQ4VM * 1 - is_positive(INDTEFF) + TRPQ4VM * is_positive(INDTEFF)
TTSNN2REMP4 = is_positive(TTS4) * TTS4 - TTSNN4 - TTSNN2TS4
LIGLOYDEG = is_positive(NATIMP - 71) * is_positive(TAXLOYDEG) * LIG2
REPMEUOD = DILMOD - RILMOD * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NRDUFLOEKL = max(min(RDUFLO_EKL, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH), 0)
PPE_BOOL_KIR_COND = 1 - null(IND_TDR) * positif_ou_nul(PPESEUILKIR - PPE_KIRE)
INVRETRVRA = min(NINVRETRVR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA)) * 1 - V_CNR
RCELREPHZ_1 = max(min(RCELREP_HZ, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1 - RCELREPHR_1 - RCELREPHU_1 - RCELREPHT_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPRWR = is_positive(REPRW + REPSR + REPHAR) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
DCELREPGL = CELREPGL
IPQPALIM42 = ZIPQPALIM42 * PENSALNBP4
APBC = max(PLRC, EXPRC * TX_DEDPER / 100)
RSOC7 = arr(max(min(INVRETXCR * 1 - INDPLAF + INVRETXCRA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1 - RSOC2 - RSOC3 - RSOC4 - RSOC5 - RSOC6), 0)) * 1 - V_CNR
QF512 = arr(RB52) / NB1
TMIB_NETNPPV = MIBNPPRESV - TMIB_ABNPPV
BPTP5 = BTP5 * 1 - is_positive(present(TAX1649) + present(RE168))
NRRESIMEUB = max(min(RETRESIMEUB, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA), 0)
REPMEUIC = AILMIC_R - RILMIC * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TSBN1 = TSHALLO1 + ALLO1
TTSN3VK = BPCOSAC - TABTS3VK
IPQF32 = ZIPQF32 * COTF3
IRBASE_N = IRN - IRANT * 1 - is_positive(IRN - IRANT + TAXABASE_IRECT + CAPBASE_IRECT + HRBASE_IRECT) + IAN - min(IAN, IRE) * is_positive(IRN - IRANT + TAXABASE_IRECT + CAPBASE_IRECT + HRBASE_IRECT)
_3RCM_I = (1 - is_positive(DFRCMN) * _2RNC - FRG2 * 1 - is_positive(ART1731BIS) + _2RNC - FRG2 * is_positive(ART1731BIS)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
GLN3 = GLN3V + GLN3C
NINVRETSJ = max(min(CODHSJ, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE), 0) * 1 - V_CNR
BINTAC = BICREC - BICDEC * 1 - is_positive(ART1731BIS * PREM8_11)
ABAVC = is_positive(RCMAV) * arr(ABRCM2 * RCMAV / RAVC)
LIGPATNAT1 = LIG1 * LIG2 * is_positive(PATNAT1) + null(PATNAT1) * is_positive(V_NOTRAIT - 20)
TEFFREVTOTRFR = INDTEFF * TBICPF + TBICNPF + TBNN + BIHTAV + BIHTAC + BIHTAP + BIPTAV + BIPTAC + BIPTAP + ESFP + TTSPR + RCM + PLOCNETF + NPLOCNETF + RFNTEO * V_INDTEO + RRFI * 1 - V_INDTEO + PVBAR + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + R1649 - DAR - max(0, min(TEFFREVINTER, DPA + DFA + DEDIV + APERPVTEFRFR + APERPCTEFRFR + APERPPTEFRFR + NUREPARTEFRFR + ABTPATEFRFR + ABTMA + DDCSG))
RRCELHH = max(0, RCEL_HL_R + RCEL_HM_R + RCEL_HNO_R + sum([RCELREP_HR_R, RCELREP_HS_R, RCELREP_HT_R, RCELREP_HU_R, RCELREP_HX_R, RCELREP_HZ_R]) - RCELHL + RCELHM + RCELHNO + sum([RCELREPHR, RCELREPHS, RCELREPHT, RCELREPHU, RCELREPHX, RCELREPHZ])) * is_positive(sum([CELREPHR, CELREPHS, CELREPHT, CELREPHU, CELREPHX, CELREPHZ]) + sum([CELLIERHL, CELLIERHM, CELLIERHN, CELLIERHO]))
IRECR = abs(min(0, IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR - CIGPA - CIDONENTR - CICORSE - CIRECH - CICOMPEMPL))
INDPPEC = is_positive(PPETPC * PPESALCTOT + PPENBHC * PPESALCTOT + is_positive(present(BPCOSAC) + present(GLDGRATV) + present(GLD1C) + present(GLD2C) + present(GLD3C) + present(TSASSUC) + present(CARTSC) * present(CARTSNBAC) + present(CODDBJ) + present(CODEBJ)) * PPEPRIMECT + PPEACC + PPENJC * abs(PPERPROC) * null(TSHALLOC + 0) + is_positive(PPETPC + PPENBHC + 0) + abs(PPERPROC) * PPEPRIMECT)
TGLTSREMPTOTM = sum([TGLTSREMPVM, TGLTSREMPCM, TGLTSREMP1M, TGLTSREMP2M, TGLTSREMP3M, TGLTSREMP4M])
INVRETONA = min(NINVRETON, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA)) * 1 - V_CNR
INDIMPOS = is_positive(null(1 - NATIMP) + 0)
LIGMLOCAB = is_positive(MLOCABV + MLOCABC + MLOCABP) * LIG0 * LIG2
IPQPALIMV5 = ZIPQPALIMV5 * PENSALNBV
REPLOCIJ = RETCODIJ - RCODIJ * is_positive(LOCRESINEUV + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TEGLPRR4M = GLPRR4M * 1 - is_positive(INDTEFF) + TGLPRR4M * is_positive(INDTEFF)
SOMMEA71701 = is_positive(CELLIERJA) + is_positive(CELLIERJB) + is_positive(CELLIERJD) + is_positive(CELLIERJE) + is_positive(CELLIERJF) + is_positive(CELLIERJG) + is_positive(CELLIERJH) + is_positive(CELLIERJJ) + is_positive(CELLIERJK) + is_positive(CELLIERJL) + is_positive(CELLIERJM) + is_positive(CELLIERJN) + is_positive(CELLIERJO) + is_positive(CELLIERJP) + is_positive(CELLIERJQ) + is_positive(CELLIERJR) + 0
NPLOCNETTV = NPLOCCGAV + NPLOCV + MIB_NETNPVLV + MIB_NETNPPLV
NINVRETPXR = NINVRETPX - arr(NINVRETPX * TX4737 / 100) * 1 - V_CNR
# TODO RILNEUF
# TODO IDEC
RLOG19 = max(min(INVRETOP * 1 - INDPLAF + INVRETOPA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18])), 0) * 1 - V_CNR
LIGREPTBE = is_positive(REPTB + REPBE) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
BCEL_JOQR = arr(min(CELLIERJO + CELLIERJQ + CELLIERJR + 0, LIMCELLIER) / 5)
# TODO F10AC
RSE2AC = max(0, RSE2 - CIRSE2)
ASYND = BCOS * 1 - V_CNR
PPENEXO1 = null(PPETPP1 + 0) + is_positive(TSHALLO1 + 0) + is_positive(SALEXT1 + 0) + 4 * is_positive(PPENHP1 + 0) + 8 * is_positive(PPEXT1 + 0)
LIGXBA = is_positive(XBAV + XBAC + XBAP) * LIG1 * LIG2
REPQX = max(0, INVOMSOCQX - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW)) * 1 - ART1731BIS + max(0, INVOMSOCQX - max(0, RDOMSOC1 - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW)) * ART1731BIS * 1 - V_CNR
LIGMXBIP = is_positive(MIBEXV + MIBEXC + MIBEXP) * LIG1 * LIG2
LIGNITDEG = is_positive(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET) * positif_ou_nul(IRB2 - SEUIL_61) * positif_ou_nul(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET - SEUIL_12) * null(INDNIRI) * 1 - is_positive(IBM23) * is_positive(1 - null(2 - V_REGCO)) * INDREV1A8 * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * is_positive(INDCTX) * LIG2
LIGREPAR4 = is_positive(REPAR4) * LIG1 * 1 - null(4 - V_REGCO) * LIG2 * 1 - V_CNR
LIGPERP = 1 - is_positive(PERPIMPATRIE + 0) * is_positive(PERPINDV + PERPINDC + PERPINDP + PERPINDCV + PERPINDCC + PERPINDCP) * is_positive(PERPINDAFFV + PERPINDAFFC + PERPINDAFFP) * 1 - null(PERP_COTV + PERP_COTC + PERP_COTP + 0) * 1 - INDIMPOS * 1 - is_positive(PERP_COND1 + PERP_COND2) * 1 - is_positive(LIG8FV) * 1 - is_positive(LIG2501) * LIG1 * 1 - V_CNR * LIG2 + 0
REPMEUJI = DILMJI - RILMJI * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BTPSJ = BPVSJ * 1 - is_positive(IPVLOC)
RPQTSREMP1 = inf(GLTSREMP1 / REMPLANBP1)
IPQ21 = ZIPQ21 * 2
MESGOUV2 = 4 * null(IDRS3 - IDEC) * positif_ou_nul(RNI - RNIBAR13) + 5 * is_positive(IDRS3 - IDEC + 0) * is_positive(IDEC + 0) + 6 * is_positive(RNIBAR13 - RNI) * 1 - is_positive(CODMESGOUV) + 7 * is_positive(CODMESGOUV + 1 - is_positive(null(IDRS3 - IDEC) * positif_ou_nul(RNI - RNIBAR13) + is_positive(IDRS3 - IDEC + 0) * is_positive(IDEC + 0) + is_positive(RNIBAR13 - RNI)))
_2FRAU = null(4 - V_IND_TRAIT) * RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS - FRAN - _2FRAN - FRAR - _2FRAR - FRAU * is_positive(DISQUO) + null(5 - V_IND_TRAIT) * RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - FRAN - _2FRAN - FRAR - _2FRAR - FRAU * is_positive(DISQUO)
TEGLRCMTOTM = TEGLRCMDCM + TEGLRCMFUM + TEGLRCMCHM + TEGLRCMGOM + TEGLRCMTRM + TEGLRCMTSM
TERPQRVO5M = RPQRVO5M * 1 - is_positive(INDTEFF) + TRPQRVO5M * is_positive(INDTEFF)
RCELREPHT_1 = max(min(RCELREP_HT, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1 - RCELREPHR_1 - RCELREPHU_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGDEG12 = is_positive(IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET) * is_positive(SEUIL_12 - IRNET - TAXANET - PCAPNET - TAXLOYNET - HAUTREVNET) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGNIDEG) * 1 - is_positive(LIGDEG61) * 1 - is_positive(LIG61DEG) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * is_positive(INDCTX) * LIG2
DSOUFIP = FFIP
ABICPNETP = AUTOBICVP + AUTOBICPP - max(0, TMIB_AUTOAVP - TMIB_ABNPVLP) - max(0, TMIB_AUTOAPP - TMIB_ABNPPLP)
LIGCREAPP = is_positive(CREAPP) * LIG1 * LIG2
TSPEABV = arr(max(MIN_SPEBNC, TSPEBASABV * SPETXAB / 100) * positif_ou_nul(TSPETOTV - MIN_SPEBNC)) + arr(min(MIN_SPEBNC, TSPEBASABV) * is_positive(MIN_SPEBNC - TSPETOTV))
RSOC21 = arr(max(min(INVRETQUR * 1 - INDPLAF + INVRETQURA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20])), 0)) * 1 - V_CNR
INVRETSYA = min(NINVRETSY, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA)) * 1 - V_CNR
LIGDBAIP = positif_ou_nul(DBAIP) * is_positive(DAGRI1 + DAGRI2 + DAGRI3 + DAGRI4 + DAGRI5 + DAGRI6) * 1 - is_positive(IPVLOC) * is_positive(abs(abs(BAHQTOT) + abs(BAQTOT) - DAGRI6 + DAGRI5 + DAGRI4 + DAGRI3 + DAGRI2 + DAGRI1)) * LIG1
LIGDEFBNCNPF = is_positive(DEFBNCNPF) * is_positive(DEFRIBNC) * null(PREM8_11)
# TODO RIVL1RES
RTCAR = RCMHAB + INTERE
CIADCRE = arr(BADCRE * TX_AIDOMI / 100) * 1 - is_positive(RE168 + TAX1649) * 1 - V_CNR
TD10M1 = TIND_MIN1 * TDFN1 + 1 - TIND_MIN1 * T10MINS1
NPLOCNETPAC = NPLOCCGAPAC + NPLOCPAC
TPLEINSALV = is_positive(PPETPV * PPESALVTOT + is_positive(PPENBHV - 1820) + PPESALVTOT * INDLIGPPE * 1 - is_positive(LIGPPEHV) + is_positive(PPEPRIMEVT) * is_positive(PPETOTX) * is_positive(PPESALV) * 1 - is_positive(LIGPPEHV) + is_positive(PPESALV) * 1 - is_positive(LIGPPEHV)) * INDPPEV * is_positive(INDLIGPPE) * LIG0 * LIG2
# TODO MIBNPRC
DCELNBGL = CELLIERNB + CELLIERNG + CELLIERNL
DCELNQ = CELLIERNQ
PRR2Z1 = is_positive(PEBF1 + PENSALP1) * arr(PRN1 * CODRCZ / EXPR1) + 1 - is_positive(PEBF1 + PENSALP1) * PRN1 - PRR1 - PRR21
SDC = max(0, DDCSG + DPA + DFA + DEDIV + APERPV + APERPC + APERPP + NUREPAR - max(0, RBG)) * 1 - V_CNR + max(0, V_8ZT - max(0, RBG)) * V_CR2
INVRETSLR = min(arr(INVRETSL * 5 / 3), NINVRETSL - INVRETSL) * 1 - null(1 - abs(arr(INVRETSL * 5 / 3) - NINVRETSL - INVRETSL)) + NINVRETSL - INVRETSL * null(1 - abs(arr(INVRETSL * 5 / 3) - NINVRETSL - INVRETSL)) * 1 - V_CNR
LIGRCELJOQR = is_positive(RIVCELJOQR1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
IPQF25 = ZIPQF25 * COTF2
NATMAJISF = is_positive(is_positive(RETISF) * is_positive(NMAJISF1) + is_positive(NMAJISF1)) + 2 * is_positive(RETISF) * 1 - is_positive(NMAJISF1)
TPENALIMV = is_positive(TEXPRV) * TPRNV - TPRRV - TPRR2V - TPRR2ZV - TPENFV
LIGPLOC4 = is_positive(DEFLOC4) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
RIVCELJOQR2 = RIVCELJOQR1
ZIGLOCOR3 = ZIGLOCOR * null(ANCSDED2 - V_ANREV + 3)
IPQRWB5 = ZIPQRWB5 * CODNWB
TRPQTSREMP4 = inf(TGLTSREMP4 / REMPLANBP4)
ABTAV = PLAF_RCMAV1 * 1 + BOOL_0AM
LIG0040 = INDP * 1 - INDV * 1 - INDC * 1 - ART1731BIS * LIG0 * LIG2
RDOMSOC1 = RDOMSOC1_1 * 1 - ART1731BIS + min(RDOMSOC1_1, max(RDOMSOC1_P + RDOMSOC1P2, RDOMSOC11731 + 0) * 1 - PREM8_11) * ART1731BIS
REPRESINEUV = REPMEUJI
ACELREPHZ = CELREPHZ * 1 - ART1731BIS + min(CELREPHZ, max(ACELREPHZ_P + ACELREPHZP2, ACELREPHZ1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPESAL4 = PPE_SALAVDEF4 * 1 - PPE_BOOL_SEULPAC
# TODO PCAPDEG
IPQ5 = IPQ05 + IPQ1005
TGLPRRZ1M = is_positive(TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2Z1 / TOTALQUO) + 1 - is_positive(TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM - TGLPRRZCM
INDPLAF1 = is_positive(RNIDOM1 - TOTALPLAF1)
NUREPARTEF = min(NUPROPT, max(0, min(PLAF_NUREPAR, RRBGTEF - RPALETEF - RPALPTEF - RFACCTEF - RDDIVTEF - APERPVTEF - APERPCTEF - APERPPTEF - DDCSG + TOTALQUO - SDD))) * 1 - V_CNR
INVRETRUR = min(arr(INVRETRU * 10 / 9), NINVRETRU - INVRETRU) * 1 - null(1 - abs(arr(INVRETRU * 10 / 9) - NINVRETRU - INVRETRU)) + NINVRETRU - INVRETRU * null(1 - abs(arr(INVRETRU * 10 / 9) - NINVRETRU - INVRETRU)) * 1 - V_CNR
LIGREPHAR = is_positive(REPHAR) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
PPE_RTA3 = PPESAL3
TGLFVM = is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENFV / TOTALQUO) + 1 - is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM
REPRQ = max(0, INVOMENTRQ - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL)) * 1 - ART1731BIS + max(0, INVOMENTRQ - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL)) * ART1731BIS * 1 - V_CNR
REPAG = max(0, CODHAG - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB)) * 1 - ART1731BIS + max(0, CODHAG - max(0, RLOCENT - CODHAB)) * ART1731BIS * 1 - V_CNR
BA12RFOR = arr(BASE7UWH * TX18 / 100)
BPTP19 = BPVSJ + GAINPEA * 1 - is_positive(IPVLOC) * 1 - is_positive(present(TAX1649) + present(RE168))
TTSBP = sum([TTSB1, TTSB2, TTSB3, TTSB4])
INVRETPDA = min(NINVRETPD, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA)) * 1 - V_CNR
RCELREP_HS = is_positive(CELREPHS) * arr(ACELREPHS * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIG30 = is_positive(RFMIC) * 1 - is_positive(IPVLOC) * LIG1 * LIG2
LIGREPRVQ = is_positive(REPRV + REPSQ + REPAQ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TGLRWA = is_positive(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * CODRWA / TOTALQUO) + 1 - is_positive(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB * null(2 - FLAG_EXIT)
RB55 = max(0, RB05 + TETONEQUOM1)
A13RENT1 = RENT18 + RENT24 + RLOC106 + RLOC112 + max(0, RENT12 + RENT36 + RENT06 + RENT30 + RLOC100 + RLOC124 + RLOC94 + RLOC120 - arr(RENT12 + RENT36 * 5263 / 10000) + arr(RENT06 + RENT30 * 625 / 1000) + arr(RLOC100 + RLOC124 * 5263 / 10000) + arr(RLOC94 + RLOC120 * 625 / 1000)) * 1 - V_CNR
RASAR = arr(BRAS * TX_RASAR / 100)
XIND_103 = positif_ou_nul(X10MINS3 - FRN3)
PPE_RCONTPV = arr(PPE_RTAV * PPE_COEFFV)
ZIPQFANT21 = is_positive(sum([TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQF2 / TETONEQUO1) + 1 - is_positive(sum([TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - sum([ZIPQFANT11, ZIPQFANTV1, ZIPQFANTC1])
RIVCELHLM7 = RIVCELHLM1
INVRETPF = min(arr(NINVRETPF * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB)) * 1 - V_CNR
EPAV = arr(BPLIB * TX_PREVLIB / 100)
TEGLTSREMPTOT = TEGLTSREMPV + TEGLTSREMPC + TEGLTSREMP1 + TEGLTSREMP2 + TEGLTSREMP3 + TEGLTSREMP4
LIG024 = sum([_4TSN1, _4TSN2, _4TSN3, _4TSN4])
INVRETRLA = min(arr(NINVRETRL * TX375 / 100), MAXDOM3) * 1 - V_CNR
ZIG_PENATX4 = ZIG_PENAMONT * is_positive(NMAJC4 + NMAJR4 + NMAJP4 + NMAJCVN4) * LIG2
RPQ4C = arr(GL4C / DIVGL4) + 0
DENPLOCAFFV = is_positive(present(LOCNPCGAV) + present(LOCGITCV) + present(LOCDEFNPCGAV) + present(LOCNPV) + present(LOCGITHCV) + present(LOCDEFNPV))
# TODO BIH1V
RLOC41 = max(min(INVRETQFR * 1 - INDPLAF + INVRETQFRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40])), 0) * 1 - V_CNR
TTSN1AJ = TSHALLOV - TABTS1AJ
IPQANTRWA = ZIPQANTRWA * CODNWA
GLRCMTR = is_positive(REVRF) * arr(TONEQUOHT * _7RCM / TOTALQUOHT) + 1 - is_positive(REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC - GLRCMFU - GLRCMCH - GLRCMGO - GLRCMTS
INVRETBBA = min(arr(NINVRETBB * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA)) * 1 - V_CNR
REPCELJOQR = sum([RIVCELJOQR1, RIVCELJOQR2, RIVCELJOQR3]) + RIVCELJOQR4
RENT11 = max(min(INVRETAU * 1 - INDPLAF + INVRETAUA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10])), 0) * 1 - V_CNR
RPQRWA = inf(GLRWA / CODNWA) + 0
RCELREP_HU = is_positive(CELREPHU) * arr(ACELREPHU * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REPIQBD = RIVPIQBD * 7 + RIVPIQBD8
LIGRRCEL11 = is_positive(RRCELMG) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
RCELJP = max(0, RCELJP_1 * 1 - ART1731BIS + min(RCELJP_1, max(RCELJP_P + RCELJPP2, RCELJP1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NINVRETQB = max(min(INVLOG2008, RRI1), 0) * 1 - V_CNR
TSNDBJ = CODDBJ - ABDOMDBJ
PRB3 = PRBR3 + PALI3 + PENIN3
MIB_ABNPPLV = MIB_APV - MIB_ABPV - MIB_ABNPPV * present(MIBMEUV)
LIGDFRCM2 = is_positive(DFRCM2) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGCONGA = is_positive(CRECONGAGRI) * LIG1 * LIG2
PPE_RTAN = max(0, PPE_RPROP) * 1 - PPE_BOOL_SEULPAC
TMIB_NETVP = MIBVENP + AUTOBICVP - TMIB_ABVP
DEPIMP = positif_ou_nul(DEPREST) * CIDEVDUR - DEPREST
# TODO INDCTXS
REPAH = max(0, CODHAH - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC)) * 1 - ART1731BIS + max(0, CODHAH - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC)) * ART1731BIS * 1 - V_CNR
RLOC81 = max(min(INVRETNVR * 1 - INDPLAF + INVRETNVRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80])), 0) * 1 - V_CNR
TTSN3VJ = BPCOSAV - TABTS3VJ
PPESAISITPC = is_positive(PPEACC * is_positive(abs(PPERPROC)))
TMIB_ABVC = max(0, arr(TMIB_AVC * MIBVENC + AUTOBICVC / TMIB_TVENC))
RCELREPGT_1 = max(min(ACELREPGT, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGNMRR = LIGIINETC * is_positive(V_ANTRE - V_NONRESTANT + 0)
LIGISFINF8 = IND9HI0 * is_positive(LIGISFDEGR) * 1 - is_positive(ANNUL2042)
RPREC = is_positive(CHRFAC) * max(1, CHNFAC) + null(CHRFAC) * max(0, CHNFAC)
LIG062P = sum([CARPEP1 + CARPENBAP1, CARPEP2 + CARPENBAP2, CARPEP3 + CARPENBAP3, CARPEP4 + CARPENBAP4]) + sum([PENSALP1 + PENSALNBP1, PENSALP2 + PENSALNBP2, PENSALP3 + PENSALNBP3, PENSALP4 + PENSALNBP4]) + CODRCZ + CODRDZ + CODREZ + CODRFZ
RCMEXCREF = max(0, TRCMRABD + TRCMRTNC) * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO))
DEVDURCUM = ADEVDUR + V_BTDEVDUR * 1 - present(DEPCHOBAS) + DEPCHOBAS
PVBAR3WB = PVIMPOS
ACELREPYH = CELREPYH * 1 - ART1731BIS + min(CELREPYH, max(ACELREPYH_P + ACELREPYHP2, ACELREPYH1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TTSNTV = TTSN1AJ + TTSN1AC + TTSN1AP + TTSN3VJ + TTSN1TT + TTSNRAJ + TTSNRAP + TTSNDAJ + TTSNEAJ + TTSNGL1V + TTSNGL2V + TTSNGL3V
# TODO DLMRN2
RPQ3 = inf(GL3 / DIVGL3) + 0
RETCODIV = arr(arr(ACODIV / 9) * TX18 / 100)
RSN_CU = BSNCU * TX18 / 100
LIG74 = 1 - present(IND_TDR) * 1 - INDTXMIN * is_positive(LIG1500 + LIG1510 + LIG1500YT + LIG1510YT) * LIG2
NINVRETSGR = NINVRETSG - arr(NINVRETSG * TX375 / 100) * 1 - V_CNR
RCELREPGK_1 = max(min(ACELREPGK, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PRB1 = PRBR1 + PALI1 + PENIN1
ZIGLOA = is_positive(RETGLOA) * LIG2
RLOC64 = max(min(INVRETRM * 1 - INDPLAF + INVRETRMA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63])), 0) * 1 - V_CNR
DFORET = FORET
PPE_FINJJ = inf(PPE_FINJJMM / 100)
REPSY = max(0, CODHSY - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW - CODHTB - CODHSE - CODHSJ - CODHSO - CODHST)) * 1 - ART1731BIS + max(0, CODHSY - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW - CODHTB - CODHSE - CODHSJ - CODHSO - CODHST)) * ART1731BIS * 1 - V_CNR
EXTS2 = TSBN2 + _2TSN2
INVRETMM = NINVRETMM * 1 - V_CNR
LIGDEFPLOC = is_positive(DEFLOC1 + DEFLOC2 + DEFLOC3 + DEFLOC4 + DEFLOC5 + DEFLOC6 + DEFLOC7 + DEFLOC8 + DEFLOC9 + DEFLOC10) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
MIB_AVP = min(MIB_TVENP, max(MIN_MBIC, arr(MIB_TVENP * TX_MIBVEN / 100)))
LIG815 = V_EAD * is_positive(BPTPD) * LIG0 * LIG2
IPQANT21 = ZIPQANT21 * 2
LIGXIMPA = is_positive(XETRANV + XETRANC) * LIG1 * LIG2
INVRETSQA = min(arr(NINVRETSQ * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA)) * 1 - V_CNR
TABDOMEBJ = is_positive(CODEBJ) * is_positive(GLD1C + GLD2C + GLD3C) * arr(TREP10C * CODEBJ / TTSBC) + 1 - is_positive(GLD1C + GLD2C + GLD3C) * max(0, TREP10C - TABTSC - TABDOMDBJ) + 0
INVRETRTA = min(NINVRETRT, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA)) * 1 - V_CNR
TPLEINNSALC = is_positive(is_positive(PPEACC + is_positive(PPENJC - 360) + is_positive(is_positive(1 - null(PPE_AVRPRO1C + 0)) * is_positive(is_positive(PPETOTX) + is_positive(PPEREVSALC)) * is_positive(abs(PPERPROC))) * 1 - is_positive(LIGPPEJC)) * is_positive(INDLIGPPE) + is_positive(PPESAISITPC) * is_positive(PPEACC)) * INDPPEC * LIG0 * LIG2
INVRETRQRA = min(NINVRETRQR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA)) * 1 - V_CNR
REPSF = max(0, CODHSF - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA)) * 1 - ART1731BIS + max(0, CODHSF - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA)) * ART1731BIS * 1 - V_CNR
ACODIE = min(PLAF_RESINEUV, LOCMEUBIE) * 1 - V_CNR
RCELREPHW_1 = max(min(RCELREP_HW, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - RCELREPHS_1 - RCELREPHR_1 - RCELREPHU_1 - RCELREPHT_1 - RCELREPHZ_1 - RCELREPHX_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGPPECP = null(INDPPEV) * is_positive(INDPPEC) * is_positive(INDPPEP) * TYPEPPE
RILMJC_1 = max(min(AILMJC, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH), 0)
RSOC28 = arr(max(min(INVRETQSR * 1 - INDPLAF + INVRETQSRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27])), 0)) * 1 - V_CNR
PRSCAPS = arr(BPRSAPS * T_PREL_SOC / 100) * 1 - is_positive(ANNUL2042)
REPPM = max(0, INVOMRETPM - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3)) * 1 - ART1731BIS + max(0, INVOMRETPM - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3)) * ART1731BIS * 1 - V_CNR
RCMAB = RCMRNABD + _2RCMRNABD
GL4RBJC = arr(TONEQUOHT * REV4RBJC / TOTALQUOHT)
GARIMP = positif_ou_nul(GARREST) * CIGARD - GARREST
LIGVIEU = is_positive(RESIVIEU) * is_positive(RESIVIEU1 + RESIVIEU2 + RESIVIEU3 + RESIVIEU4 + RESIVIEU5 + RESIVIEU6 + RESIVIEU7 + RESIVIEU8) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TGLPALIMTOTM = sum([TGLPALIMVM, TGLPALIMCM, TGLPALIM1M, TGLPALIM2M, TGLPALIM3M, TGLPALIM4M])
RSOUFIP = max(0, RSOUFIP_1 * 1 - ART1731BIS + min(RSOUFIP_1, max(RSOUFIP_P + RSOUFIPP2, RSOUFIP1731 + 0) * 1 - PREM8_11) * ART1731BIS)
GLRVO6M = is_positive(_2RV4 + REVRCM + REVRF) * arr(TONEQUOMHT * _2RV3 / TOTALQUOHT) + 1 - is_positive(_2RV4 + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOM - GLRVO5M
TMIB_NETNPPP = MIBNPPRESP - TMIB_ABNPPP
RBG2TEF = RBGTEF - max(0, min(RBGTEF, DDCSG))
TAPB1 = max(TPLR1, TEXPR1 * TX_DEDPER / 100)
INVRETTA = min(arr(NINVRETTA * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV)) * 1 - V_CNR
VARDMOND = max(0, DMOND * 1 - is_positive(SOMMEMOND_2) * 1 - PREM8_11 - DEFZU * is_positive(SOMMEMOND_2) * 1 - PREM8_11 - DEFZU * PREM8_11) * present(DMOND)
DISFDONCEE = ISFDONEURO
PDEDMINV = DEDMINV
INVRETMC = min(arr(NINVRETMC * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB)) * 1 - V_CNR
A10TOURSOC_1 = RTOURREP * is_positive(REPINVTOU) + RTOUHOTR * is_positive(INVLOGHOT) * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO)) + RTOUREPA * is_positive(INVLOGREHA)
TSNT1 = TSN1CJ + TSN1CP + TSNRCJ + TSNRCP
IRNN = IRNIN
MIB_TVENV = MIBVENV + MIBNPVENV + MIBGITEV + LOCGITV
LIGREPSV = is_positive(REPSV) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
IPQF12 = ZIPQF12 * COTF1
TSPENETNPV = max(0, BNCNPV - TSPEABNPV)
TR6_ISF = arr(max(0, DISFBASE - LIM_TR5_ISF) * TX_TR6_ISF / 1000)
RILMJW_1 = max(min(AILMJW, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX), 0)
TIND_APB1 = positif_ou_nul(TPLR1 - TEXPR1 * TX_DEDPER / 100)
TPMIB_NETPC = MIBPRESC + AUTOBICPC - TPMIB_APC
CSGDED3UA = is_positive(ABDETPLUS + 0) * min(arr(ABDETPLUS + COD3UA + 0 * TX051 / 100), COD3UA)
TRPQTSREMP4M = inf(TGLTSREMP4M / REMPLANBP4)
IPQTS42 = ZIPQTS42 * CARTSNBAP4
DINVRED = INVREDMEU
DFRCMNBIS = is_positive(RCMAB + RTCAR + RCMNAB) * 1 - is_positive(RTNC + RAVC + RCMPRIVM) * max(0, RCMFR - RCMAB - RTCAR - RCMNAB) + 1 - is_positive(RCMAB + RTCAR + RCMNAB) * is_positive(RTNC + RAVC + RCMPRIVM) * max(0, RCMFR - RTNC - RAVC - TABAVC - RCMPRIVM) + is_positive(RCMAB + RTCAR + RCMNAB) * is_positive(RTNC + RAVC + RCMPRIVM) * max(0, RCMFR - RCMAB - RCMNAB - RTNC - RAVC - TABAVC - RTCAR - RCMPRIVM) + 1 - is_positive(RCMAB + RTCAR + RCMNAB) * 1 - is_positive(RTNC + RAVC + RCMPRIVM) * max(0, RCMFR)
INVRETSGR = min(arr(INVRETSG * 5 / 3), NINVRETSG - INVRETSG) * 1 - null(1 - abs(arr(INVRETSG * 5 / 3) - NINVRETSG - INVRETSG)) + NINVRETSG - INVRETSG * null(1 - abs(arr(INVRETSG * 5 / 3) - NINVRETSG - INVRETSG)) * 1 - V_CNR
LIGPLOC7 = is_positive(DEFLOC7) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
RETCODOU = arr(ACODOU * TX11 / 100)
ZIGBASEPS = is_positive(BPRS + V_PSANT)
LIGILMOE = is_positive(DILMOE) * LIG1 * LIG2
TREP101 = TIND_101 * TD10M1 + 1 - TIND_101 * TFPT1
TEGLTSVM = GLTSVM * 1 - is_positive(INDTEFF) + TGLTSVM * is_positive(INDTEFF)
LIGCELHL = is_positive(DCELHL) * LIG1 * LIG2
ABTSRFP = max(0, REP104 - ABTS1FJ + ABTS1FP + ABTSRFJ) + 0
INVRETSL = min(arr(NINVRETSL * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG)) * 1 - V_CNR
RLOC25 = max(min(INVRETQO * 1 - INDPLAF + INVRETQOA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24])), 0) * 1 - V_CNR
LIGRPIQBD = is_positive(RIVPIQBD) * LIG1 * LIG2
IPQPALIM41 = ZIPQPALIM41 * PENSALNBP4
RSE8SB = arr(BRSE8SB * TXTX / 100) * 1 - is_positive(ANNUL2042)
DUFREPFI = DUFLOFI
PPENARPRIMEC = PPE_FORMULEC * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCONDC - 2) * 1 - PPE_BOOL_TPC + arr(PPE_FORMULEC * PPETXMAJ1) + arr(PPE_FORMULEC * PPE_COEFFC * PPETXMAJ2) * is_positive(2 - PPE_COEFFCONDC) * is_positive(PPE_COEFFCONDC - 1) * 1 - PPE_BOOL_TPC + PPE_FORMULEC * is_positive(PPE_BOOL_TPC + positif_ou_nul(1 - PPE_COEFFCONDC))
CIEXCEDENT = arr(COD3VE * TX45 / 100 + COD3UV * TX30 / 100) * 1 - is_positive(RE168 + TAX1649)
TEGLPRRZ2 = GLPRRZ2 * 1 - is_positive(INDTEFF) + TGLPRRZ2 * is_positive(INDTEFF)
RLOG28 = max(min(INVRETOF * 1 - INDPLAF + INVRETOFA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27])), 0) * 1 - V_CNR
CSRTF = RDPTP + PVINVE + PVINCE + PVINPE + sum([BN1AV + BI1AV + BI2AV + BA1AV, BN1AC + BI1AC + BI2AC + BA1AC, BN1AP + BI1AP + BI2AP + BA1AP]) * 1 - is_positive(IPVLOC)
MIB_P1AP = MIB1AP - MIBDEP
RDRCM = RDRCM1BIS + COD2FA
RIVCELHJK7 = RIVCELHJK1
NRPIQABCD = max(min(RPI_QABCD, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL), 0)
LIG_NMAJ1 = TYPE2 * is_positive(NMAJ1)
PGLOA = PTOGLOA
LIGREPAP = is_positive(REPAP) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
ADUFLOGIH_1 = arr(min(DUFLOGI + 0, LIMDUFLO) / 9) + arr(min(DUFLOGH + 0, LIMDUFLO - min(DUFLOGI + 0, LIMDUFLO)) / 9) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
TSNN2VAFF = is_positive(TSV) * is_positive(CARTSV + REMPLAV) * arr(TSV * _2TSNV / EXTSV) + 1 - is_positive(CARTSV + REMPLAV) * TSV - TSNNV + is_positive(CODDAJ + CODEAJ) * max(CODDAJ - ABDOMDAJ, 0) + max(CODEAJ - ABDOMEAJ, 0)
RRCELLE = max(0, CELRREDLE - RCELRREDLE) * is_positive(CELRREDLE) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPPP = is_positive(REPPP) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
NPLOCCGAPAC = LOCNPCGAPAC + LOCGITCP - LOCDEFNPCGAPAC * 1 - is_positive(ART1731BIS * PREM8_11)
RPQPRRZCM = inf(GLPRRZCM / CODNBZ)
RIVCEL6 = RIVCEL1
XTSC = XTSNC - sum([max(0, GLD1C - ABGL1C), max(0, GLD2C - ABGL2C), max(0, GLD3C - ABGL3C)])
TGLF4M = is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENF4 / TOTALQUO) + 1 - is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOT - TGLFVM - TGLFCM - TGLF1M - TGLF2M - TGLF3M
CS9YP = is_positive(RDSN + PRS + CVNSALC + CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * arr(VAR9YIPS * CSG - CSGIM / BINRPS) + 1 - is_positive(RDSN + PRS + CVNSALC + CDIS + CGLOA + RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * VAR9YIPS
# TODO NAPCDIS
BPRSAPS = arr(RDRFAPS * 1 - null(4 - V_REGCO) + RDRVAPS + RDRCMAPS + RDNP + ESFP + R1649 + PREREV * 1 - V_CNR) * 1 - is_positive(present(RE168) + present(TAX1649)) + RE168 + TAX1649 * 1 - V_CNR
ABTS1EP = is_positive(ALLO3) * is_positive(CARTSP3 + REMPLAP3) * arr(REP103 * ALLO3 / TSB3) + 1 - is_positive(CARTSP3 + REMPLAP3) * max(0, REP103 - ABTS1EJ)
TABPR1 = arr(1 - TIND_APB1 * min(TAPB1, is_positive(TEXPR2 + TEXPR3 + TEXPR4) * TPL_PB * TAPB1 / sum([TAPBV * 1 - TIND_APBV, TAPBC * 1 - TIND_APBC, TAPB1 * 1 - TIND_APB1, TAPB2 * 1 - TIND_APB2, TAPB3 * 1 - TIND_APB3, TAPB4 * 1 - TIND_APB4]) + 1 - is_positive(TEXPR2 + TEXPR3 + TEXPR4) * max(0, TPL_PB - TABPRV - TABPRC)) + TIND_APB1 * TAPB1)
LIG0050 = INDV * INDC * 1 - INDP * 1 - ART1731BIS * LIG0 * LIG2
ZIPQFANT41 = is_positive(TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQF4 / TETONEQUO1) + 1 - is_positive(TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - sum([ZIPQFANTV1, ZIPQFANTC1, ZIPQFANT11, ZIPQFANT21, ZIPQFANT31])
PD10MC = PIND_MINC * PDFNC + 1 - PIND_MINC * P10MINSC
APR4 = IND_APB4 * ABPR4 + 1 - IND_APB4 * min(ABPR4, PL_PB - 1 - IND_APBV * APRV - 1 - IND_APBC * APRC - 1 - IND_APB1 * APR1 - 1 - IND_APB2 * APR2 - 1 - IND_APB3 * APR3)
NPLOCNETTSP = NPLOCCGASP + NPLOCSP + MIBNETNPVLSP + MIB_NETNPPLP
IPQRCMDC1 = ZIPQRCMDC1 * REVACTNB
ZIPQPRR31 = is_positive(TEGLPRR4 + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPRR3 / TETONEQUO1) + 1 - is_positive(TEGLPRR4 + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRV1 - ZIPQPRRC1 - ZIPQPRR11 - ZIPQPRR21
TRPQRCMTRM = inf(TGLRCMTRM / INTERENB)
TEGLRCMDC = GLRCMDC * 1 - is_positive(INDTEFF) + TGLRCMDC * is_positive(INDTEFF)
RCELREPYK = max(0, RCELREPYK_1 * 1 - ART1731BIS + min(RCELREPYK_1, max(RCELREPYK_P + RCELREPYKP2, RCELREPYK1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REPMEUIK = MEUBLERET - RMEUBLE * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BRSE8SB = COD8SB * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
BPTPVT = BTPVT * 1 - is_positive(present(TAX1649) + present(RE168))
DEFNP = sum([min(DEFBIC1, DEFBIC11731 + 0) * is_positive(ART1731BIS * PREM8_11) + DEFBIC1 * 1 - is_positive(ART1731BIS * PREM8_11), min(DEFBIC2, DEFBIC21731 + 0) * is_positive(ART1731BIS * PREM8_11) + DEFBIC2 * 1 - is_positive(ART1731BIS * PREM8_11), min(DEFBIC3, DEFBIC31731 + 0) * is_positive(ART1731BIS * PREM8_11) + DEFBIC3 * 1 - is_positive(ART1731BIS * PREM8_11), min(DEFBIC4, DEFBIC41731 + 0) * is_positive(ART1731BIS * PREM8_11) + DEFBIC4 * 1 - is_positive(ART1731BIS * PREM8_11), min(DEFBIC5, DEFBIC51731 + 0) * is_positive(ART1731BIS * PREM8_11) + DEFBIC5 * 1 - is_positive(ART1731BIS * PREM8_11), min(DEFBIC6, DEFBIC61731 + 0) * is_positive(ART1731BIS * PREM8_11) + DEFBIC6 * 1 - is_positive(ART1731BIS * PREM8_11)])
TYPEPPE = 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG0 * LIG2
# TODO NMAJPCAP4
LIGPERPFAM = is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFC) * is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
TEGLTSREMPC = GLTSREMPC * 1 - is_positive(INDTEFF) + TGLTSREMPC * is_positive(INDTEFF)
TABTSRDJ = is_positive(REMPLAP2) * arr(TREP102 * CARTSP2 / TTSB2) + 1 - is_positive(REMPLAP2) * max(0, TREP102 - TABTS1DJ - TABTS1DC - TABTS1DP)
BCIDONENTR = RDMECENAT * 1 - V_CNR
TERPQTSCM = RPQTSCM * 1 - is_positive(INDTEFF) + TRPQTSCM * is_positive(INDTEFF)
# TODO INDV
LIGLOCRES3 = is_positive(RIVL3RES) * LIG1
TPLR2 = min(MIN_DEDPR, TEXPR2)
PPEPRIME4 = arr(PPENARPRIME4)
LIG0060 = INDV * INDP * 1 - INDC * 1 - ART1731BIS * LIG0 * LIG2
INVRETPYA = min(arr(NINVRETPY * TX375 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA)) * 1 - V_CNR
ACINE = max(0, ACINE_1 * 1 - ART1731BIS + min(ACINE_1, max(ACINE_P + ACINEP2, ACINE1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - V_CNR
REPAV = max(0, CODHAV - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ)) * 1 - ART1731BIS + max(0, CODHAV - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ)) * ART1731BIS * 1 - V_CNR
RCELREPGV = max(0, RCELREPGV_1 * 1 - ART1731BIS + min(RCELREPGV_1, max(RCELREPGV_P + RCELREPGVP2, RCELREPGV1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
# TODO NAPREGV
TGLPRR1M = is_positive(TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR21 / TOTALQUO) + 1 - is_positive(TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM
RESIVIEU2 = arr(arr(ACODIM / 9) * TX25 / 100)
XFPT2 = XDF2 * XIND_102 + FRD2 * 1 - XIND_102
TFRD2 = 1 - is_positive(PREM8_11) * FRN2 + COD1DE * is_positive(FRN2 + COD1DE - T10MINS2) + null(4 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRN2 + COD1DE, TFRDPROV2) * is_positive(FRN3 + FRN4 + COD1EE + COD1FE) + is_positive(PREM8_11) * max(0, TFRDP - TFRD1) * 1 - is_positive(FRN3 + FRN4 + COD1EE + COD1FE) + null(5 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRN2 + COD1DE, min(TFRDPROV2, max(TFRDPROV2P2, TFRDPROV21731))) * is_positive(FRN3 + FRN4 + COD1EE + COD1FE) + is_positive(PREM8_11) * max(0, TFRDP - TFRD1) * 1 - is_positive(FRN3 + FRN4 + COD1EE + COD1FE)
GLPRRZ1M = is_positive(PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2Z1 / TOTALQUOHT) + 1 - is_positive(PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM - GLPRRZCM
RRESTIMOA = max(min(RESTIMOA * TX_RESTIMO1 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMOD - RRESTIMOB - RRESTIMOC - RRESTIMOC - RRESTIMOY), 0)
PLAF1MGR = null(5 - V_REGCO) * arr(29058 + 3082 * min(NBPT - 1 * 4, 2) * is_positive(NBPT - 1) + 2938.5 * min(NBPT - 1.5 * 4, 2) * is_positive(NBPT - 1.5) + 2210.5 * NBPT - 2 * 4 * is_positive(NBPT - 2))
XBICNPHDV = BICNPEXV + BICREV
NINVRETPS = max(min(INVOMRETPS, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN), 0) * 1 - V_CNR
GL1 = is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * GLN1 / TOTALQUOHT) + 1 - is_positive(REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRVG - GLRWB - GLRWA
PENALIM1 = is_positive(EXPR1) * PRN1 - PRR1 - PRR21 - PRR2Z1 - PENF1
INVRETSW = min(NINVRETSW, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR)) * 1 - V_CNR
RPQPALIM1 = inf(GLPALIM1 / PENSALNBP1)
_2PRB4 = CARPEP4 + PENSALP4 + CODRFZ
NPLOCNSC = NPLOCC - NPLOCSC
TPRR3 = arr(TPRN3 * PRB3 / TEXPR3) + arr(TPRN3 * COD1EH / TEXPR3)
TSPENETNPP = max(0, BNCNPP - TSPEABNPP)
ACELNBGL_R = positif_ou_nul(CELLIERNB + CELLIERNG + CELLIERNL) * BCEL_NBGL * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RIVCELFABC8 = arr(min(CELLIERFA + CELLIERFB + CELLIERFC, LIMCELLIER) * is_positive(CELLIERFA) * TX13 / 100 + min(CELLIERFA + CELLIERFB + CELLIERFC, LIMCELLIER) * is_positive(CELLIERFB) * TX6 / 100 + min(CELLIERFA + CELLIERFB + CELLIERFC, LIMCELLIER) * is_positive(CELLIERFC) * TX24 / 100) - 8 * RIVCELFABC1 * 1 - V_CNR
PPETOT2 = PPETOT
CGLOAAC = CGLOA
ARESINEUV = ARESINEUV_1 * 1 - ART1731BIS + min(ARESINEUV_1, max(ARESINEUV_P + ARESINEUVP2, ARESINEUV1731 + 0) * 1 - PREM8_11) * ART1731BIS
LIGRSN2 = is_positive(RINVTPME12) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
INVRETQT = NINVRETQT * 1 - V_CNR
LIGCELHD = is_positive(DCELREPHD) * LIG1 * LIG2
AILMIB = DILMIB * 1 - ART1731BIS + min(DILMIB, max(AILMIB_P + AILMIBP2, AILMIB1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
IPQPRRZ21 = ZIPQPRRZ21 * CODNDZ
TRPQPALIMVM = inf(TGLPALIMVM / PENSALNBV)
TFPT2 = max(TFRD2, T10MINS2)
REP104 = IND_104 * D10M4 + 1 - IND_104 * FPT4
PPEREVSALP = is_positive(PPESALPTOT + PPESALPTOT * INDLIGPPE + PPESALPTOT * is_positive(PPEPRIMEPT) * is_positive(PPETOTX)) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * INDPPEP * INDLIGPPE
CIPRSAPS = min(PRSCAPS, arr(IPPNCS * T_PREL_SOC / 100))
NINVRETBA = max(min(CODHBA, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU), 0) * 1 - V_CNR
PERPPLAFNUC = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE + 0) * max(0, PERPPLAFCANT - RPERPC) + is_positive(PERPIMPATRIE + 0) * max(0, PERPPLAFC - RPERPC) + is_positive(PERP_COND1) * 1 - is_positive(PERPIMPATRIE) * max(0, PERPPLAFCANT - RPERPC - RPERPMUTV - RACCOTV) + is_positive(PERPIMPATRIE) * max(0, PERPPLAFC - RPERPC - RPERPMUTV - RACCOTV) + is_positive(PERP_COND2) * 0
REPPI = max(0, INVOMRETPI - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA - INVOMRETPE)) * 1 - ART1731BIS + max(0, INVOMRETPI - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA - INVOMRETPE)) * ART1731BIS * 1 - V_CNR
LIGPLOC6 = is_positive(DEFLOC6) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
RSE1BASE_INR = max(0, RSE1N - CSPROVYD - RSE19YP)
LIG65 = is_positive(LIG52 + LIG58 + LIG585 + present(CHRFAC) + present(CHNFAC) + present(CHRDED) + present(DPERPV) + present(DPERPC) + present(DPERPP) + LIGREPAR) * LIG1 * LIG2
TERPQTS3M = RPQTS3M * 1 - is_positive(INDTEFF) + TRPQTS3M * is_positive(INDTEFF)
LIGRLOCIDFG = is_positive(LOCMEUBID + LOCMEUBIF + LOCMEUBIG) * is_positive(RLOCIDFG1 + RLOCIDFG2 + RLOCIDFG3 + RLOCIDFG4 + RLOCIDFG5 + RLOCIDFG6 + RLOCIDFG7 + RLOCIDFG8) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NPLOCNETV = NPLOCCGAV + NPLOCV
TTSN1AC = max(0, SALEXTV - COD1AD) - TABTS1AC
TTSN1AP = ALLOV - TABTS1AP
RCELREPYH = max(0, RCELREPYH_1 * 1 - ART1731BIS + min(RCELREPYH_1, max(RCELREPYH_P + RCELREPYHP2, RCELREPYH1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INVRETAWA = min(NINVRETAW, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA)) * 1 - V_CNR
REPRCM = DEFRCM + DEFRCM2 + DEFRCM3 + DEFRCM4 + DEFRCM5 + DEFRCM6
TSNN2REMP3 = is_positive(TS3) * TS3 - TSNN3 - TSNN2TS3
GLTS4M = is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2TS4 / TOTALQUOHT) + 1 - is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM - GLTSCM - GLTS1M - GLTS2M - GLTS3M
RLOC92 = max(min(INVRETSQ * 1 - INDPLAF + INVRETSQA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91])), 0) * 1 - V_CNR
RPQRCMFU = inf(GLRCMFU / REVPEANB)
TERPQRCMTRM = RPQRCMTRM * 1 - is_positive(INDTEFF) + TRPQRCMTRM * is_positive(INDTEFF)
BCEL_FABC = arr(min(CELLIERFA + CELLIERFB + CELLIERFC, LIMCELLIER) / 9)
NINVRETUG = max(min(CODHUG, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ - NINVRETUA - NINVRETUB - NINVRETUC - NINVRETUD - NINVRETUE - NINVRETUF), 0) * 1 - V_CNR
NINVRETOV = max(min(INVOMLOGOV, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU), 0) * 1 - V_CNR
D10MC = IND_MINC * DFNC + 1 - IND_MINC * _10MINSC
RLOC89 = max(min(INVRETSB * 1 - INDPLAF + INVRETSBA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88])), 0) * 1 - V_CNR
A13RFOR = A13UXI + A14UN * 1 - ART1731BIS
INVRETSARA = min(NINVRETSAR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA - INVRETSGRA)) * 1 - V_CNR
# TODO NONREST
XBNNPC = BNCNPREXC + BNCNPREXAAC
RESTIMOA = min(RESTIMOPPAU, LIM_RESTIMO - RESTIMOD - RESTIMOB - RESTIMOC - RESTIMOF - RESTIMOY)
XEXOCETC = arr(is_positive(XTSNC) * XTSNC * EXOCETC / XEXTSC) * XIND_10C + 1 - XIND_10C * EXOCETC
LIGISFIMPU = is_positive(DISFBASE) * is_positive(ISFETRANG + ISFPLAF) * 1 - is_positive(ISFDONF + ISFDONEURO + ISFPMEDI + ISFPMEIN + ISFFIP + ISFFCPI) * LIGISF * 1 - is_positive(ANNUL2042) * 1 - null(5 - V_IND_TRAIT) + is_positive(DISFBASE) * is_positive(present(ISFETRANG) + present(ISFPLAF)) * 1 - is_positive(ISFDONF + ISFDONEURO + ISFPMEDI + ISFPMEIN + ISFFIP + ISFFCPI) * LIGISF * 1 - is_positive(ANNUL2042) * null(5 - V_IND_TRAIT) * 1 - is_positive(LIGISFRED + LIGISFREDPEN8)
ZIPQPRRZ35 = is_positive(TEGLPRRZ4M + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPRRZ3M / TETONEQUOM1) + 1 - is_positive(TEGLPRRZ4M + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZV5 - ZIPQPRRZC5 - ZIPQPRRZ15 - ZIPQPRRZ25
IND_ZIGRFG = is_positive(V_NOTRAIT - 20) * is_positive(present(RFORDI) + present(RFDORD) + present(RFDHIS) + present(RFMIC))
RETCODIG = arr(arr(ACODIG / 9) * TX11 / 100)
PS_RCM = CS_RCM
GL3M = is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * GLN3 / TOTALQUOHT) + 1 - is_positive(REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM - GLRVGM - GL1M - GL2M
PTOTAXA = arr(max(0, TAXASSUR - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRN - IRANT)) * COPETO / 100) + arr(max(0, TAXASSUR - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRN - IRANT)) * COPETO / 100) * is_positive(null(CMAJ - 10) + null(CMAJ - 17)) + arr(max(0, TAXASSUR - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRN - IRANT) - TAXA9YI) * TXINT / 100)
# TODO IRPSCUM
TERPQRVGM = RPQRVGM * 1 - is_positive(INDTEFF) + TRPQRVGM * is_positive(INDTEFF)
BCEL_NQ = arr(min(CELLIERNQ + 0, LIMCELLIER) / 5)
PPESAISINBJP = is_positive(PPENJP * is_positive(abs(PPERPROP)))
QF515 = arr(RB55) / NB1
ZIPQF32 = is_positive(TEGLF4 + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQF3 / TETONEQUO1) + 1 - is_positive(TEGLF4 + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - sum([ZIPQF12, ZIPQF22, ZIPQFV2, ZIPQFC2])
REVQTOTQHT = CODRWB * null(1 - FLAG_EXIT) + CODRWB + CODRWA * null(2 - FLAG_EXIT) + CODRVG + sum([GLN1, GLN2, GLN3]) + REV4 + REVALIMQHT + REVF + REVTSQHT + REVTSREMPQHT + REVPRRQHT + REVRVO + REVRCM + REVRF
LIGRRCEL44 = is_positive(RRCELLM) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
DPATNAT3 = PATNAT3
LIG4271 = is_positive(is_positive(V_0AB) * LIG1) * 1 - is_positive(ANNUL2042 + 0)
TEGLRCMFUM = GLRCMFUM * 1 - is_positive(INDTEFF) + TGLRCMFUM * is_positive(INDTEFF)
PPE_AVRPRO1P = present(FEXP) + present(BAFP) + present(BAEXP) + present(BACREP) + present(_4BACREP) + present(BACDEP) + present(BAHEXP) + present(BAHREP) + present(_4BAHREP) + present(BAHDEP) + present(BICEXP) + present(BICNOP) + present(BICDNP) + present(BIHEXP) + present(BIHNOP) + present(BIHDNP) + present(BNCEXP) + present(BNCREP) + present(BNCDEP) + present(BNHEXP) + present(BNHREP) + present(BNHDEP) + present(MIBEXP) + present(BNCPROEXP) + present(MIBVENP) + present(MIBPRESP) + present(BNCPROP) + present(BAFPVP) + present(MIBPVP) + present(BNCPROPVP) + present(BAFORESTP) + present(AUTOBICVP) + present(AUTOBICPP) + present(AUTOBNCP) + present(LOCPROP) + present(LOCPROCGAP) + present(LOCDEFPROCGAP) + present(LOCDEFPROP) + present(XHONOAAP) + present(XHONOP)
ZIGRSECOR4 = ZIGRSECOR * null(ANCSDED2 - V_ANREV + 4)
ZIG_TAUXCR = ZIG_TITRECR
TEGLFTOTM = TEGLFVM + TEGLFCM + TEGLF1M + TEGLF2M + TEGLF3M + TEGLF4M
IND_10MIN_04 = is_positive(DEDMIN4 - DFN4) * is_positive(TSB4)
PERPSALNV = PERPSALV - PERPSALDV + ELURASV
BIPTAV = BICNOV - BICDNV * 1 - is_positive(ART1731BIS * PREM8_11)
LIGEXITAX3 = is_positive(EXITTAX3) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
LIGRRCEL45 = is_positive(RRCELLN) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
TTSNRDJ = CARTSP2 - TABTSRDJ
TTSNRCJ = CARTSP1 - TABTSRCJ
RESIVIEU5 = arr(arr(ACODIM / 9) * TX25 / 100)
LIGNOCEPIMP = present(NOCEPIMPV) + present(NOCEPIMPC) + present(NOCEPIMPP) * LIG0 * LIG2
RCEL_HNO = is_positive(CELLIERHN) * arr(ACELHNO * TX25 / 100) + is_positive(CELLIERHO) * arr(ACELHNO * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
AGRIMP = positif_ou_nul(AGRREST) * CICONGAGRI - AGRREST
RSOC1 = arr(max(min(INVRETXA * 1 - INDPLAF + INVRETXAA * INDPLAF, RRISUP - RDOMSOC1), 0)) * 1 - V_CNR
DILMPA = COD7PA
TRPQTS1 = inf(TGLTS1 / CARTSNBAP1)
T2PRB1 = CARPEP1 + PENSALP1 + CODRCZ
IPQRWB2 = ZIPQRWB2 * CODNWB
DILMJI = LOCMEUBJI
ABTMA = V_0DN * ABAT_ENF_MARIES + arr(V_0DP * ABAT_ENF_MARIES / 2)
INVRETOK = min(NINVRETOK, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ)) * 1 - V_CNR
ZIG_PRIM = is_positive(NAPCR) * LIG2
NINVRETLH = max(min(RETROCOMLH, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC), 0) * 1 - V_CNR
ZIPQTS25 = is_positive(sum([TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * arr(IQUOTOT5 * TERPQTS2M / TETONEQUOM1) + 1 - is_positive(sum([TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQPRRZ5TOT - ZIPQTSV5 - ZIPQTSC5 - ZIPQTS15
REPPB = max(0, INVOMRETPB - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60)) * 1 - ART1731BIS + max(0, INVOMRETPB - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60)) * ART1731BIS * 1 - V_CNR
MIB_NETNPVV = MIBNPVENV - MIB_ABNPVV
LIGRDUEKL = is_positive(RIVDUEKL) * LIG1 * LIG2
INVRETUEA = min(NINVRETUE, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA)) * 1 - V_CNR
DS525 = max(QF525 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF525 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF525 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF525 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF525 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
TRPQPRRZ4 = inf(TGLPRRZ4 / CODNFZ)
_2PRB1 = CARPEP1 + PENSALP1 + CODRCZ
NRCELREPYD = max(min(ACELREPYD, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE])), 0)
LIG1780 = is_positive(RDCOM + NBACT) * LIG1 * LIG2
RB05 = VARRMOND * is_positive(ART1731BIS) + RMOND * 1 - ART1731BIS
NOCEPIMPP = is_positive(ANOPEP - DNOCEPP * 1 - is_positive(ART1731BIS * PREM8_11)) * arr(ANOPEP - DNOCEPP * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV) + positif_ou_nul(DNOCEPP * 1 - is_positive(ART1731BIS * PREM8_11) - ANOPEP) * ANOPEP - DNOCEPP * 1 - is_positive(ART1731BIS * PREM8_11) + BNNAAP
LIGCELYE = is_positive(DCELREPYE) * LIG1 * LIG2
ZIPQPRR35 = is_positive(TEGLPRR4M + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPRR3M / TETONEQUOM1) + 1 - is_positive(TEGLPRR4M + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRRV5 - ZIPQPRRC5 - ZIPQPRR15 - ZIPQPRR25
PPECOEFF4 = arr(PPE_COEFFCOND4 * 100)
RCELNBGL = max(0, RCELNBGL_1 * 1 - ART1731BIS + min(RCELNBGL_1, max(RCELNBGL_P + RCELNBGLP2, RCELNBGL1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NAPI = IRD + PIRD - IRANT + TAXASSUR + IPCAPTAXT + IHAUTREVT + TAXLOY + RASAR * V_CR2
CIDONENTR = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - REI - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR - CIGPA, BCIDONENTR))
INTAN = MOISAN / 10000 - INTMS * 10000 * present(MOISAN)
REPCEL2012 = sum([RIV2012CEL1, RIV2012CEL2, RIV2012CEL3, RIV2012CEL4, RIV2012CEL5, RIV2012CEL6, RIV2012CEL7]) + RIV2012CEL8
TGLRCMTOTM = TGLRCMDCM + TGLRCMFUM + TGLRCMCHM + TGLRCMGOM + TGLRCMTRM + TGLRCMTSM
IS021 = arr(DS021 * NB2)
LIGCELMG = is_positive(DCELRREDMG) * LIG1 * LIG2
REPLOCIE5 = arr(arr(ACODIE / 9) * TX18 / 100)
ZIG_CSGDRS = is_positive(DCSGD - V_IDANT) * is_positive(IDCSG) * 1 - null(V_IDANT + DCSGD + 0) * 1 - null(V_IDANT - DCSGD) * is_positive(V_NOTRAIT - 20) * LIG2
ACELNQ = BCEL_NQ * 1 - ART1731BIS + min(BCEL_NQ, max(ACELNQ_P + ACELNQP2, ACELNQ1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELLIERNQ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PERPINDCV = is_positive(V_BTPERPTOTV + PERPPLAFCV + PERPPLAFNUV1 + PERPPLAFNUV2 + PERPPLAFNUNV + PERP_COTV + RACCOTV) * PERPINDV * 1 - V_CNR
RESINEUV6 = arr(arr(ACODIN / 9) * TX20 / 100) + arr(arr(ACODIJ / 9) * TX18 / 100) + arr(arr(ACODIV / 9) * TX18 / 100)
ZIPQPRR1TOT = sum([ZIPQPRRV1, ZIPQPRRC1, ZIPQPRR11, ZIPQPRR21, ZIPQPRR31, ZIPQPRR41])
TGLN1V = max(GLD1V - TABGL1V, 0)
PPE_RPRO1P = FEXP + BAFP + BAEXP + BACREP + _4BACREP - BACDEP * 1 - is_positive(ART1731BIS) + BAHEXP + BAHREP + _4BAHREP - BAHDEP * 1 - is_positive(ART1731BIS) + BICEXP + BICNOP - BICDNP * 1 - is_positive(ART1731BIS) + BIHEXP + BIHNOP - BIHDNP * 1 - is_positive(ART1731BIS) + BNCEXP + BNCREP - BNCDEP * 1 - is_positive(ART1731BIS) + BNHEXP + BNHREP - BNHDEP * 1 - is_positive(ART1731BIS) + MIBEXP + BNCPROEXP + TMIB_NETVP + TMIB_NETPP + TSPENETPP + BAFPVP + MIBPVP + BNCPROPVP + BAFORESTP + LOCPROP + LOCPROCGAP - LOCDEFPROCGAP * 1 - is_positive(ART1731BIS) - LOCDEFPROP * 1 - is_positive(ART1731BIS) + XHONOAAP + XHONOP
RPALETEF = max(0, min(sum([min(NCHENF1, LIM_PENSALENF) + min(arr(CHENF1 * MAJREV), LIM_PENSALENF), min(NCHENF2, LIM_PENSALENF) + min(arr(CHENF2 * MAJREV), LIM_PENSALENF), min(NCHENF3, LIM_PENSALENF) + min(arr(CHENF3 * MAJREV), LIM_PENSALENF), min(NCHENF4, LIM_PENSALENF) + min(arr(CHENF4 * MAJREV), LIM_PENSALENF)]), RBGTEF - DDCSG + TOTALQUO - SDD)) * 1 - V_CNR
NINVRETXBR = NINVRETXB - arr(NINVRETXB * TX35 / 100) * 1 - V_CNR
INVRETPYR = min(arr(INVRETPY * 5 / 3), NINVRETPY - INVRETPY) * 1 - null(1 - abs(arr(INVRETPY * 5 / 3) - NINVRETPY - INVRETPY)) + NINVRETPY - INVRETPY * null(1 - abs(arr(INVRETPY * 5 / 3) - NINVRETPY - INVRETPY)) * 1 - V_CNR
RCELREP_HZ_R = is_positive(CELREPHZ) * arr(CELREPHZ * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PIND_10C = positif_ou_nul(P10MINSC - FRDC + COD1BE)
LIG_NMAJ4 = TYPE2 * is_positive(NMAJ4)
GLNAV2V = max(GLD2V - ABGL2V, 0) * INDEFTSV
BI2P = BI2AP
TRPQ4RBJC = arr(TGL4RBJC / DIVGL4) + 0
REPQI = max(0, INVDIR2009 - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA - INVOMRETPE - INVOMRETPI - INVIMP)) * 1 - ART1731BIS + max(0, INVDIR2009 - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50 - INVOMRETPA - INVOMRETPE - INVOMRETPI - INVIMP)) * ART1731BIS * 1 - V_CNR
LIGABIMPMV = is_positive(ABIMPMV) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIPQRVO51 = is_positive(TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * arr(IQUOTOT1 * TERPQRVO5 / TETONEQUO1) + 1 - is_positive(TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQRVO1 - ZIPQPRRZ1TOT
IPQRF25 = ZIPQRF25 * REAMORNB
IND_BTANC = null(V_IND_TRAIT - 4) * is_positive(APPLI_OCEANS) * 1 + is_positive(APPLI_COLBERT) + is_positive(APPLI_BATCH) * V_BTANC + is_positive(APPLI_ILIAD) * is_positive(V_CALCULIR) * 1 + 1 - is_positive(V_CALCULIR) * V_BTANC + null(V_IND_TRAIT - 5) * 1
ZIPQPALIM12 = is_positive(sum([TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPALIM1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - sum([ZIPQPALIMV2, ZIPQPALIMC2])
XDFN1 = min(PLAF_DEDFORFTS, XTPS101)
ZIPQF41 = is_positive(TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQF4 / TETONEQUO1) + 1 - is_positive(TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - sum([ZIPQFV1, ZIPQFC1, ZIPQF11, ZIPQF21, ZIPQF31])
TS4 = TSN4
TERPQPRRZCM = RPQPRRZCM * 1 - is_positive(INDTEFF) + TRPQPRRZCM * is_positive(INDTEFF)
LIGREPSL = is_positive(REPSL) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
IN05 = max(IS015, IS025 - PLA)
IPQPRRZ12 = ZIPQPRRZ12 * CODNCZ
LIGCORSE = is_positive(present(CIINVCORSE) + present(IPREPCORSE) + present(CICORSENOW)) * LIG1 * LIG2
TFRD3 = 1 - is_positive(PREM8_11) * FRN3 + COD1EE * is_positive(FRN3 + COD1EE - T10MINS3) + null(4 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRN3 + COD1EE, TFRDPROV3) * is_positive(FRN4 + COD1FE) + is_positive(PREM8_11) * max(0, TFRDP - TFRD1 - TFRD2) * 1 - is_positive(FRN4 + COD1FE) + null(5 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRN3 + COD1EE, min(TFRDPROV3, max(TFRDPROV3P2, TFRDPROV31731))) * is_positive(FRN4 + COD1FE) + is_positive(PREM8_11) * max(0, TFRDP - TFRD1 - TFRD2) * 1 - is_positive(FRN4 + COD1FE)
REPMEUTOT1 = REPRESIMEUB + REPMEUIK + REPMEUIQ + REPMEUIR + RESIVIEUREP
PTOISF = arr(ISF5 * COPETOISF / 100) + arr(ISF5 * TXINTISF / 100)
IDOM11 = max(ID11 - ADO1 * 1 - is_positive(INDCODDAJ) + ITOTDOM1 * is_positive(INDCODDAJ), IMI) * 1 - INDTXMOY + IMO * INDTXMOY * 1 - is_positive(RE168 + TAX1649)
LIG106 = is_positive(RETIR)
RCODID_1 = max(min(RETCODID, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV - RCODIE - RCODIF - RCODIG), 0)
LIGREPQKG = is_positive(REPKI + REPQK + REPQX + REPRD + REPXE) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RESIVIAN1 = arr(arr(ACODIW / 9) * TX25 / 100)
LIGRIDOMPRO = is_positive(RIDOMPRO) * LIG1
REGPRIVM = arr(REGPRIV * MAJREV)
TPENALIM3 = is_positive(TEXPR3) * TPRN3 - TPRR3 - TPRR23 - TPRR2Z3 - TPENF3
RESIVIAN8 = arr(ACODIW * TX25 / 100) - RESIVIAN1 - RESIVIAN2 - RESIVIAN3 - RESIVIAN4 - RESIVIAN5 - RESIVIAN6 - RESIVIAN7 - RESIVIAN7
TTS1 = TTSN1
NINVRETAC = max(min(CODHAC, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA), 0) * 1 - V_CNR
TRPQRCMDC = inf(TGLRCMDC / REVACTNB)
RAIDE = max(RAIDE_1 * 1 - ART1731BIS + min(RAIDE_1, max(RAIDE_P + RAIDEP2, RAIDE1731 + 0) * 1 - PREM8_11) * ART1731BIS, 0)
RPQTSREMP4 = inf(GLTSREMP4 / REMPLANBP4)
REPLOC7IE = RETCODIE - RCODIE * is_positive(LOCMEUBIE + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ABICPDECV = AUTOBICVV + AUTOBICPV
ZIGANNUL = is_positive(INDCTX) * is_positive(ANNUL2042)
RLOG39 = max(min(INVRETUG * 1 - INDPLAF + INVRETUGA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33, RLOG34, RLOG35, RLOG36, RLOG37, RLOG38])), 0) * 1 - V_CNR
TGLPRRZ3M = is_positive(TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2Z3 / TOTALQUO) + 1 - is_positive(TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M - TGLPRR4M - TGLPRRZVM - TGLPRRZCM - TGLPRRZ1M - TGLPRRZ2M
GLN1 = GLN1V + GLN1C
PL_PB = arr(PLAF_DEDPRFOYER - sum([APBV * IND_APBV, APBC * IND_APBC, APB1 * IND_APB1, APB2 * IND_APB2, APB3 * IND_APB3, APB4 * IND_APB4]))
TEGLRCMTSM = GLRCMTSM * 1 - is_positive(INDTEFF) + TGLRCMTSM * is_positive(INDTEFF)
IPQPRR21 = ZIPQPRR21 * CARPENBAP2
IPQPRRZV1 = ZIPQPRRZV1 * CODNAZ
RLOC83 = max(min(INVRETPSR * 1 - INDPLAF + INVRETPSRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82])), 0) * 1 - V_CNR
REPCIFADSIN = positif_ou_nul(COD7UA - PLAF_FOREST1 * 1 + BOOL_0AM) * COD7UB + 1 - positif_ou_nul(COD7UA - PLAF_FOREST1 * 1 + BOOL_0AM) * max(0, COD7UB - PLAF_FOREST1 * 1 + BOOL_0AM - COD7UA) * 1 - V_CNR
PPE_RCONTPU = arr(PPE_RTAU * PPE_COEFFU)
TPRN1 = is_positive(TTSNT1) * is_positive(TTSNT1 + TPRNN1) * TTSNT1 + TPRNN1 + positif_ou_nul(TTSNT1) * TPRNN1
# TODO HAUTREVCUM
DMEUBLE = REPMEUBLE
MAXDOM3 = max(0, RNIDOM3 - TOTALPLAFA - TOTALPLAFB)
ROFIMP = positif_ou_nul(ROFREST) * CIFORET - ROFREST
IPQANT31 = ZIPQANT31 * 3
# TODO RDDIV
PPENBH4 = PPENHP4 + PPEXT4
BNCCREAP = BNCCRP + BNCCRFP
BSOCREP = min(RSOCREPRISE, LIM_SOCREPR * 1 + BOOL_0AM)
TABPR2 = arr(1 - TIND_APB2 * min(TAPB2, is_positive(TEXPR3 + TEXPR4) * TPL_PB * TAPB2 / sum([TAPBV * 1 - TIND_APBV, TAPBC * 1 - TIND_APBC, TAPB1 * 1 - TIND_APB1, TAPB2 * 1 - TIND_APB2, TAPB3 * 1 - TIND_APB3, TAPB4 * 1 - TIND_APB4]) + 1 - is_positive(TEXPR3 + TEXPR4) * max(0, TPL_PB - TABPRV - TABPRC - TABPR1)) + TIND_APB2 * TAPB2)
ZIGDRSED5 = ZIGIDRSE * null(ANCSDED2 - V_ANREV + 5)
RPQTSREMPCM = inf(GLTSREMPCM / REMPLANBC)
INVRETRMA = min(NINVRETRM, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA)) * 1 - V_CNR
IPQ02 = IN02
TEGLF4 = GLF4 * 1 - is_positive(INDTEFF) + TGLF4 * is_positive(INDTEFF)
ZIGIDRSE = is_positive(IDRSE) * 1 - null(V_IDRSEANT + DRSED + 0) * is_positive(20 - V_NOTRAIT) * LIG2
RD_RFG = CS_RFG
ZIPQTSREMPV1 = is_positive(sum([TEGLTSREMPC, TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * arr(IQUOTOT1 * TERPQTSREMPV / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMPC, TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTS1TOT
IRB = IAMD2
RCELREPYB_1 = max(min(ACELREPYB, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGSPDREPNPP = is_positive(SPEDREPNPP) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
DRESIMEUB = VIEUMEUB
IMT11 = max(ID11 - ADO1, IMI) * 1 - INDTXMOY + IMO * INDTXMOY
TPMIB_APP = min(MIBPRESP + AUTOBICPP, max(MIN_MBIC, arr(MIBPRESP + AUTOBICPP * TX_MIBPRES / 100)))
ZIGMONTRD = is_positive(BRDS + V_RDANT)
RSNCN = max(0, min(RSN_CN, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL - RSNCM))
# TODO NMAJ3
TTSN1EJ = TSHALLO3 - TABTS1EJ
CSBASE_INR = max(0, CSG - CSGIM - CS9YP)
ZIGRSE5 = is_positive(BRSE5) * LIG2
TSNN2REMPV = is_positive(TSV) * TSV - TSNNV - TSNN2TSV
TSPENETNPC = max(0, BNCNPC - TSPEABNPC)
PPE_BOOL_TPV = is_positive(is_positive(PPETPV + 0) * is_positive(PPE_SALAVDEFV + 0) + null(PPENHV + PPEXTV + 0) * null(PPETPV + 0) * is_positive(PPE_SALAVDEFV) + is_positive(360 / PPENBJ * PPENHV + PPEXTV * is_positive(PPE_SALAVDEFV + 0) / 1820 + PPENJV * is_positive(PPE_AVRPRO1V + 0) / 360 - 1) + positif_ou_nul(PPENHV + PPEXTV * is_positive(PPE_SALAVDEFV + 0) - 1820) + positif_ou_nul(PPENJV * is_positive(PPE_AVRPRO1V + 0) - 360) + is_positive(PPEACV * is_positive(PPE_AVRPRO1V + 0) + 0) + 1 - is_positive(PPENJV * is_positive(PPE_AVRPRO1V + 0)) * is_positive(PPE_AVRPRO1V + 0))
PPEPRIMEPAC = PPEPRIMEU + PPEPRIME1 + PPEPRIME2 + PPEPRIME3 + PPEPRIME4 + PPEPRIMEN
CHRREEL1 = positif_ou_nul(LIMHRTX1 * 1 + BOOL_0AM - REVKIREHR) * REVKIREHR - LIMHR1 * 1 + BOOL_0AM * TXHR1 / 100 + LIMHR1 * 1 + BOOL_0AM * TXHR1 / 100 * is_positive(REVKIREHR - LIMHRTX1 * 1 + BOOL_0AM)
INVRETSUR = min(arr(INVRETSU * 10 / 9), NINVRETSU - INVRETSU) * 1 - null(1 - abs(arr(INVRETSU * 10 / 9) - NINVRETSU - INVRETSU)) + NINVRETSU - INVRETSU * null(1 - abs(arr(INVRETSU * 10 / 9) - NINVRETSU - INVRETSU)) * 1 - V_CNR
LIGDFRCM5 = is_positive(DFRCM5) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INVRETUE = min(NINVRETUE, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ - INVRETUA - INVRETUB - INVRETUC - INVRETUD)) * 1 - V_CNR
DGARD = sum([RDGARD1, RDGARD2, RDGARD3, RDGARD4]) + sum([RDGARD1QAR, RDGARD2QAR, RDGARD3QAR, RDGARD4QAR])
RV1 = arr(RVB1 * TXRVT1 / 100)
INVRETRAA = min(arr(NINVRETRA * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA)) * 1 - V_CNR
PPE_SALAVDEF2 = TSHALLO2 + CARTSP2 * is_positive(CARTSNBAP2) + SALEXT2
ZIGRSECO = is_positive(ZIGRSEDD + ZIGRSERS + null(V_IDRSEANT - DRSED)) * 1 - null(V_IDRSEANT + DRSED + 0) * is_positive(V_NOTRAIT - 20) * LIG2
ZIGINT422 = is_positive(RETRSE422) * LIG2
CIRSE8TX = min(RSE8TX, arr(REVCSXE * TX038 / 100))
DHEBE = RVCURE + RCCURE
RLOC107 = max(min(INVRETSE * 1 - INDPLAF + INVRETSEA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103, RLOC104, RLOC105, RLOC106])), 0) * 1 - V_CNR
RCEL_HNO_R = is_positive(CELLIERHN) * arr(ACELHNO_R * TX25 / 100) + is_positive(CELLIERHO) * arr(ACELHNO_R * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
CIMPTL = ATEC + ADEVDUR + TOTBGE
IPRODOM6 = arr(ID16 * PRODOM / RG)
LIG2380 = (IND_SPR * positif_ou_nul(V_8ZT - RBG) * is_positive(V_8ZT) * 1 - present(BRAS) * 1 - present(IPSOUR) * V_CR2 * LIG2) if (NATIMP == 0 or NATIMP == 21 or NATIMP == 70 or NATIMP == 91) else 0
TSV = TSNV - sum([max(0, GLD1V - ABGL1V), max(0, GLD2V - ABGL2V), max(0, GLD3V - ABGL3V)]) - max(CODDAJ - ABDOMDAJ, 0) - max(CODEAJ - ABDOMEAJ, 0)
LIGREPQK = is_positive(REPQK) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
NAB = min(max(LIM_ABTRNGDBL + 1 - RNG + TOTALQUO - SDD - SDC, 0), 1) + min(max(LIM_ABTRNGSIMP + 1 - RNG + TOTALQUO - SDD - SDC, 0), 1)
LIGRES = 1 - is_positive(TOTIRPSANT + 0) * positif_ou_nul(RECUM - SEUIL_8) * is_positive(null(V_NOTRAIT - 23) + null(V_NOTRAIT - 33) + null(V_NOTRAIT - 43) + null(V_NOTRAIT - 53) + null(V_NOTRAIT - 63))
RETCODIL = arr(arr(ACODIL / 9) * TX20 / 100)
LIGREPSF = is_positive(REPSF) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
REPLNPW = REPMEUJV + REPLOCIG + REPLOCIF + REPLOCID + REPLOCJU + REPMEUOB
DCELREPHR = CELREPHR
CS_RE168 = RE168
PERPPLAFNU2C = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE + 0) * is_positive(PERPPLAFCANT + PERPPLAFNUC3ANT - RPERPC) * PERPPLAFNUC2ANT + 1 - is_positive(PERPPLAFCANT + PERPPLAFNUC3ANT - RPERPC) * max(0, PERPPLAFNUC2ANT - RPERPC - PERPPLAFCANT - PERPPLAFNUC3ANT) + is_positive(PERPIMPATRIE + 0) * 0 + is_positive(PERP_COND1) * 1 - is_positive(PERPIMPATRIE + 0) * is_positive(PERPPLAFCANT + PERPPLAFNUC3ANT - RPERPC - RPERPMUTV - RACCOTV) * PERPPLAFNUC2ANT + 1 - is_positive(PERPPLAFCANT + PERPPLAFNUC3ANT - RPERPC - RPERPMUTV - RACCOTV) * max(0, PERPPLAFNUC2ANT - RPERPC + RPERPMUTV + RACCOTV - PERPPLAFCANT + PERPPLAFNUC3ANT) + is_positive(PERPIMPATRIE + 0) * 0 + is_positive(PERP_COND2) * 0
TEGLPRRZV = GLPRRZV * 1 - is_positive(INDTEFF) + TGLPRRZV * is_positive(INDTEFF)
ZIGRSE2ANT = is_positive(V_RSE2ANT) * TYPE2 * 1 - APPLI_OCEANS
HABREST = is_positive(REST) * max(0, min(CIHABPRIN, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM))
XDFN3 = min(PLAF_DEDFORFTS, XTPS103)
TPMIB_AVP = min(MIBVENP + AUTOBICVP, max(MIN_MBIC, arr(MIBVENP + AUTOBICVP * TX_MIBVEN / 100)))
BA14UN = arr(BASE7UN * TX18 / 100)
IPQPRR35 = ZIPQPRRZ35 * CARPENBAP3
TABTS3VK = is_positive(GLDGRATC + CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * arr(TREP10C * BPCOSAC / TTSBC) + 1 - is_positive(GLDGRATC + CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * max(0, TREP10C - TABTS1BJ - TABTS1BC - TABTS1BP)
NRCELRREDLE = max(min(CELRREDLE, RRI1 - NRLOGDOM - NRRI2 - NRCELRREDLA - NRCELRREDLB), 0)
NINVRETNUR = NINVRETNU - arr(NINVRETNU * TX4737 / 100) * 1 - V_CNR
NINVRETQR = max(min(INVIMP, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETQO - NINVRETQF - NINVRETPA - NINVRETPE - NINVRETPI), 0) * 1 - V_CNR
CS_PREREV = PREREV
BNN = sum([BNRV, BNRC, BNRP]) + SPENETPF + max(0, SPENETNPF + NOCEPIMP - TOTDABNCNP) * 1 - ART1731BIS + sum([BNRV, BNRC, BNRP]) + SPENETPF + max(0, SPENETNPF + NOCEPIMP - DIDABNCNP + DEFBNCNPF) * ART1731BIS * 1 - PREM8_11 + sum([BNRV, BNRC, BNRP]) + SPENETPF + max(0, SPENETNPF + NOCEPIMP) * ART1731BIS * PREM8_11
PISF = INCISF_NET + NMAJISF1 + arr(ISF5 * TXINTISF / 100) * 1 - is_positive(FLAG_PRIM + FLAG_RETARD + FLAG_DEFAUT)
DDONS = RDDOUP + DONAUTRE + REPDON03 + REPDON04 + REPDON05 + REPDON06 + REPDON07 + COD7UH
APERPCTEF = 1 - V_CNR * max(min(RPERPC, RBGTEF - RPALETEF - RPALPTEF - RFACCTEF - RDDIVTEF - DDCSG + TOTALQUO - SDD - APERPVTEF), 0)
NRPLAFPME = max(min(COD7CY, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU - NRDONS - NRDUFREPFI - NRDUFLOGIH - NRDUFLOEKL - NRPIQABCD - NRNOUV), 0)
PERPBICMNV = TPMIB_NETPV + TPMIB_NETVV + MIBEXV + MIBPVV - BICPMVCTV
LIGREPSAM = is_positive(REPSM + REPAM) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
DEFBA5 = 1 - is_positive(BAHQT + BAQT) * DAGRI4 + is_positive(BAHQT + BAQT) * abs(min(max(BAHQT + BAQT - DAGRI6 - DAGRI5, 0) - DAGRI4, DAGRI4)) * positif_ou_nul(DAGRI4 - max(BAHQT + BAQT - DAGRI6 - DAGRI5, 0)) * 1 - is_positive(IPVLOC) * 1 - is_positive(ART1731BIS) + min(DAGRI4, DAGRI - DBAIP - DEFBA2 - DEFBA3 - DEFBA4) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + DAGRI4 * is_positive(is_positive(ART1731BIS * PREM8_11) + null(8 - CMAJ) + null(11 - CMAJ))
ZIG_PENAMONT = is_positive(PCSG + PRDS + PPRS + PCVN) * LIG2
DEC6 = min(max(arr(SEUIL_DECOTE1 * 1 - BOOL_0AM + SEUIL_DECOTE2 * BOOL_0AM - IDOM16), 0), IDOM16) * 1 - V_ANC_BAR + min(max(arr(SEUIL_DECOTEA / 2 - IDOM16 / 2), 0), IDOM16) * V_ANC_BAR * 1 - V_CNR
TSNN24 = is_positive(TS4) * is_positive(CARTSP4 + REMPLAP4) * arr(TS4 * _2TSN4 / EXTS4) + 1 - is_positive(CARTSP4 + REMPLAP4) * TS4 - TSNN4
# TODO NMAJP1
MEUBLEREP = RETRESINEUV_1 - RRESINEUV * is_positive(MEUBLENP)
_2PRBC = CARPEC + PENSALC + CODRBZ
DEPREST = is_positive(REST) * max(0, min(CIDEVDUR, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - IPELUS - CITEC))
PRR23 = is_positive(PEBF3 + PENSALP3 + CODREZ) * arr(PRN3 * CARPEP3 / EXPR3) + 1 - is_positive(PEBF3 + PENSALP3 + CODREZ) * PRN3 - PRR3
DILMJC = LOCMEUBJC
TRPQ2M = inf(TGL2M / DIVGL2)
LIG_BICP = LIG_BICPV + LIG_BICPC + LIG_BICPP
REPQO = max(0, INVRETRO1 - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ)) * 1 - ART1731BIS + max(0, INVRETRO1 - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ)) * ART1731BIS * 1 - V_CNR
LIGLOYANT = APPLI_ILIAD * 1 - is_positive(20 - V_NOTRAIT) * is_positive(V_TAXLOYANT + LIGLOYNET * is_positive(TAXLOYNET)) * 1 - is_positive(LIG2051) * TYPE2 * 1 - APPLI_OCEANS
RLOC102 = max(min(INVRETSH * 1 - INDPLAF + INVRETSHA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - RLOC100 - RLOC101), 0) * 1 - V_CNR
PMIB_APV = min(MIBPRESV, max(MIN_MBIC, arr(MIBPRESV * TX_MIBPRES / 100)))
INDE5 = is_positive(INDRSE5 + INDRSE5X) * INDTRAIT
TIND_MINC = 1 - is_positive(TIND_10MIN_0C)
PPE_FORMULEU = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINU * PPE_BOOL_MAXU * arr(positif_ou_nul(PPELIMSMIC - PPE_RCONTPU) * arr(PPE_RCONTPU * PPETX1 / 100) / PPE_COEFFU + is_positive(PPE_RCONTPU - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTPU) * arr(arr(PPELIMRPH - PPE_RCONTPU * PPETX2 / 100) / PPE_COEFFU) + is_positive(PPE_RCONTPU - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTPU) * arr(arr(PPELIMRPH2 - PPE_RCONTPU * PPETX3 / 100) / PPE_COEFFU))
# TODO PPESALCTOT
NINVRETRM = max(min(INVOMENTRM, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG), 0) * 1 - V_CNR
NINVRETSE = max(min(CODHSE, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB), 0) * 1 - V_CNR
NINVRETOP = max(min(INVOMLOGOP, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON), 0) * 1 - V_CNR
IQUODAJ1 = arr(IPQ1001 * TERPQ4V + TERPQ4C / TERPQ4TVC + TERPQTSV + TERPQTSC)
TTSNN21 = is_positive(TTS1) * is_positive(CARTSP1 + REMPLAP1) * arr(TTS1 * T2TSN1 / TEXTS1) + 1 - is_positive(CARTSP1 + REMPLAP1) * TTS1 - TTSNN1
RPQPALIM3 = inf(GLPALIM3 / PENSALNBP3)
RREPA_1 = max(min(RAA, IDOM11 - DEC11 - RCOTFOR_1), 0)
XTPS102 = arr(XEXTS2 * TX_DEDFORFTS / 100)
XBIPC = BIHEXC + BICEXC
IPQPRRZ25 = ZIPQPRRZ25 * CODNDZ
ZIGCSGDCOR2 = ZIG_CSGDCOR * null(ANCSDED2 - V_ANREV + 2)
ZIPQTSREMPANT21 = is_positive(sum([TEGLTSREMP3, TEGLTSREMP4])) * arr(IQUOTOTANT1 * TERPQTSREMP2 / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANT1TOT - ZIPQTSREMPANTV1 - ZIPQTSREMPANTC1 - ZIPQTSREMPANT11
ZIPQRF12 = is_positive(TEGLRF2 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * arr(IQUOTOT2 * TERPQRF1 / TETONEQUO1) + 1 - is_positive(TEGLRF2 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT
VARIPTEFP = IPTEFP + max(0, DEFZU * is_positive(SOMMEMOND_2) * 1 - PREM8_11 + DEFZU * PREM8_11 - IPTEFN) * is_positive(present(IPTEFP) + present(IPTEFN))
PMIB_NETPV = MIBPRESV - PMIB_APV
RPQ4RBJC = arr(GL4RBJC / DIVGL4) + 0
BDRSE5 = max(0, SALECSG - REVCSXB - arr(CSPROVYE / TX075 / 100)) * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
BASSURC1 = max(0, CESSASSC - BASSURC3 - BASSURC2 - LIM_ASSUR1)
ACOLENT_1 = INVOMREP + INVOMENTMN + INVENDEB2009 + INVOMQV + INVOMRETPM + INVOMENTRJ + INVRETMA + INVRETLG + INVRETMB + INVRETLH + INVRETMC + INVRETLI + INVRETQP + INVRETQG + INVRETPB + INVRETPF + INVRETPJ + INVRETQO + INVRETQF + INVRETPA + INVRETPE + INVRETPI + INVRETKS + INVRETKT + INVRETKU + INVRETQR + INVRETQI + INVRETPD + INVRETPH + INVRETPL + INVRETPO + INVRETPT + INVRETPY + INVRETRL + INVRETRQ + INVRETRV + INVRETNV + INVRETPN + INVRETPS + INVRETPX + INVRETRK + INVRETRP + INVRETRU + INVRETNU + INVRETPP + INVRETPU + INVRETRG + INVRETRM + INVRETRR + INVRETRW + INVRETNW + INVRETPR + INVRETPW + INVRETRI + INVRETRO + INVRETRT + INVRETRY + INVRETNY + INVRETSB + INVRETSG + INVRETSA + INVRETSF + INVRETSC + INVRETSH + INVRETSE + INVRETSJ + INVRETSL + INVRETSQ + INVRETSV + INVRETTA + INVRETSK + INVRETSP + INVRETSU + INVRETSZ + INVRETSM + INVRETSR + INVRETSW + INVRETTB + INVRETSO + INVRETST + INVRETSY + INVRETTD + INVRETMAR + INVRETLGR + INVRETMBR + INVRETLHR + INVRETMCR + INVRETLIR + INVRETQPR + INVRETQGR + INVRETPBR + INVRETPFR + INVRETPJR + INVRETQOR + INVRETQFR + INVRETPAR + INVRETPER + INVRETPIR + INVRETPOR + INVRETPTR + INVRETPYR + INVRETRLR + INVRETRQR + INVRETRVR + INVRETNVR + INVRETPNR + INVRETPSR + INVRETPXR + INVRETRKR + INVRETRPR + INVRETRUR + INVRETNUR + INVRETSBR + INVRETSGR + INVRETSAR + INVRETSFR + INVRETSLR + INVRETSQR + INVRETSVR + INVRETTAR + INVRETSKR + INVRETSPR + INVRETSUR + INVRETSZR * 1 - INDPLAF + INVRETMAA + INVRETLGA + INVRETMBA + INVRETLHA + INVRETMCA + INVRETLIA + INVRETQPA + INVRETQGA + INVRETPBA + INVRETPFA + INVRETPJA + INVRETQOA + INVRETQFA + INVRETPAA + INVRETPEA + INVRETPIA + INVRETKSA + INVRETKTA + INVRETKUA + INVRETQRA + INVRETQIA + INVRETPDA + INVRETPHA + INVRETPLA + INVRETPOA + INVRETPTA + INVRETPYA + INVRETRLA + INVRETRQA + INVRETRVA + INVRETNVA + INVRETPNA + INVRETPSA + INVRETPXA + INVRETRKA + INVRETRPA + INVRETRUA + INVRETNUA + INVRETPPA + INVRETPUA + INVRETRGA + INVRETRMA + INVRETRRA + INVRETRWA + INVRETNWA + INVRETPRA + INVRETPWA + INVRETRIA + INVRETROA + INVRETRTA + INVRETRYA + INVRETNYA + INVRETSBA + INVRETSGA + INVRETSAA + INVRETSFA + INVRETSCA + INVRETSHA + INVRETSEA + INVRETSJA + INVRETSLA + INVRETSQA + INVRETSVA + INVRETTAA + INVRETSKA + INVRETSPA + INVRETSUA + INVRETSZA + INVRETSMA + INVRETSRA + INVRETSWA + INVRETTBA + INVRETSOA + INVRETSTA + INVRETSYA + INVRETTDA + INVRETMARA + INVRETLGRA + INVRETMBRA + INVRETLHRA + INVRETMCRA + INVRETLIRA + INVRETQPRA + INVRETQGRA + INVRETPBRA + INVRETPFRA + INVRETPJRA + INVRETQORA + INVRETQFRA + INVRETPARA + INVRETPERA + INVRETPIRA + INVRETPORA + INVRETPTRA + INVRETPYRA + INVRETRLRA + INVRETRQRA + INVRETRVRA + INVRETNVRA + INVRETPNRA + INVRETPSRA + INVRETPXRA + INVRETRKRA + INVRETRPRA + INVRETRURA + INVRETNURA + INVRETSBRA + INVRETSGRA + INVRETSARA + INVRETSFRA + INVRETSLRA + INVRETSQRA + INVRETSVRA + INVRETTARA + INVRETSKRA + INVRETSPRA + INVRETSURA + INVRETSZRA * INDPLAF * 1 - V_CNR
LIGPME = is_positive(REPINVPME3 + REPINVPME2 + REPINVPME1 + REPINVPMECU) * LIG1 * LIG2 * 1 - is_positive(V_CNR) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
QF016 = arr(RB06) / NB1
TEGLFTOT = TEGLFV + TEGLFC + TEGLF1 + TEGLF2 + TEGLF3 + TEGLF4
TEGLPRRZ2M = GLPRRZ2M * 1 - is_positive(INDTEFF) + TGLPRRZ2M * is_positive(INDTEFF)
NINVRETRKR = NINVRETRK - arr(NINVRETRK * TX4737 / 100) * 1 - V_CNR
REP10C = IND_10C * D10MC + 1 - IND_10C * FPTC
RCELJOQR_1 = max(min(RCEL_JOQR, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1 - RCEL_1 - RCELJP_1 - RCELJBGL_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BAMV = arr(BAHREV - DEFBAHREV * MAJREV) * positif_ou_nul(BARSV) + BARSV * 1 - is_positive(BARSV)
TEXTSV = TTSBNV + BPCOSAV + GLDGRATV + T2TSNV
IPQTSREMP32 = ZIPQTSREMP32 * REMPLANBP3
RDSN = RDSC - CIRDS
TDFNC = min(PLAF_DEDFORFTS, TTPS10C)
DS515 = max(QF515 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF515 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF515 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF515 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF515 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
RCELRREDLA = max(0, RCELRREDLA_1 * 1 - ART1731BIS + min(RCELRREDLA_1, max(RCELRREDLA_P + RCELRREDLAP2, RCELRREDLA1731 + 0) * 1 - PREM8_11) * ART1731BIS)
TTSHALLOP = TSHALLO1 + TSHALLO2 + TSHALLO3 + TSHALLO4
TEGLPALIM4M = GLPALIM4M * 1 - is_positive(INDTEFF) + TGLPALIM4M * is_positive(INDTEFF)
DFCE = min(0, RFCD - RFDORD) * 1 - is_positive(ART1731BIS) + min(0, RFCD - DEFRF4BB) * is_positive(ART1731BIS)
ACINE_1 = max(0, min(CINE1 + CINE2, min(arr(SOFIRNG * TX_CINE3 / 100), PLAF_CINE))) * 1 - V_CNR
ZIGIDGLO1 = ZIGIDGLO * null(ANCSDED2 - V_ANREV + 1)
GLFC = is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENFC / TOTALQUOHT) + 1 - is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV
ACODIN = min(PLAF_RESINEUV - ACODIL, INVNPROF1) * 1 - V_CNR
RRIREP = RRI1 - DLOGDOM - RTOURES - RTOURREP - RTOUHOTR - RTOUREPA - RCOMP - RCREAT - RRETU - RDONS - RCELTOT - RLOCNPRO - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RPATNATOT
TPRRC = arr(TPRNC * PRBC / TEXPRC) + arr(TPRNC * COD1BH / TEXPRC)
LIGPV3VE = is_positive(PVBAR3VE) * 1 - is_positive(IPVLOC) * LIG1 * LIG2 * is_positive(INDREV1A8IR)
ZIPQPRR21 = is_positive(sum([TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPRR2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRV1 - ZIPQPRRC1 - ZIPQPRR11
LIGREPPL = is_positive(REPPL) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
SOMMEA894 = SOMMEA881
MIB_ABNPPLP = MIB_APP - MIB_ABPP - MIB_ABNPPP * present(MIBMEUP)
BAEMP = arr(_4BAHREP - _4DEFBAHREP * MAJREV) * positif_ou_nul(BARSP) + 0
ZIPQRCMGO2 = is_positive(TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQRCMGO / TETONEQUO1) + 1 - is_positive(TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCMDC2 - ZIPQRCMFU2 - ZIPQRCMCH2 - ZIPQRCMTR2
LIGDFRCM4 = is_positive(DFRCM4) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NINVRETAU = max(min(CODHAU, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP), 0) * 1 - V_CNR
ZIPQRCMDC2 = is_positive(TEGLRCMFU + TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQRCMDC / TETONEQUO1) + 1 - is_positive(TEGLRCMFU + TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT
PRQZV = CODRAZ
TGLTSVM = is_positive(TTSNN2TSC + TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2TSV / TOTALQUO) + 1 - is_positive(TTSNN2TSC + TTSNN2TS1 + TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM
INVRETQJ = min(arr(NINVRETQJ * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK)) * 1 - V_CNR
LIG0TDEG = INDNIRI * null(IRNETBIS) * positif_ou_nul(TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - SEUIL_61) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(INDCTX) * LIG2
RCOTFOR = max(0, RCOTFOR_1 * 1 - ART1731BIS + min(RCOTFOR_1, max(RCOTFOR_P + RCOTFORP2, RCOTFOR1731 + 0) * 1 - PREM8_11) * ART1731BIS)
PERPBANV = FEXV + BAFV + BAFPVV + BAEXV + BACREV - BACDEV * 1 - is_positive(ART1731BIS) + BAHEXV + BAHREV - BAHDEV * 1 - is_positive(ART1731BIS) + BAPERPV + _4BACREV + _4BAHREV + BAFORESTV + BANOCGAV
PPE_BOOL_MAJO = 1 - PPE_BOOL_BT * is_positive(positif_ou_nul(PPELIMRPH - PPE_RCONTPV) * positif_ou_nul(PPE_RTAV - PPELIMRPB) * 1 - is_positive(PPE_BOOL_NADAV) + positif_ou_nul(PPELIMRPH - PPE_RCONTPC) * positif_ou_nul(PPE_RTAC - PPELIMRPB) * 1 - is_positive(PPE_BOOL_NADAC))
LIGCELLS = is_positive(DCELRREDLS) * LIG1 * LIG2
LIGCELHH = is_positive(DCELREPHH) * LIG1 * LIG2
REPLOCIE2 = arr(arr(ACODIE / 9) * TX18 / 100)
TRPQPRRZCM = inf(TGLPRRZCM / CODNBZ)
RLOC16 = max(min(INVRETLHR * 1 - INDPLAF + INVRETLHRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15])), 0) * 1 - V_CNR
ZIPQRCMFU2 = is_positive(TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQRCMFU / TETONEQUO1) + 1 - is_positive(TEGLRCMCH + TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCMDC2
ACELREPGT = CELREPGT * 1 - ART1731BIS + min(CELREPGT, max(ACELREPGT_P + ACELREPGTP2, ACELREPGT1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
# TODO VLHAB
RPQTS2 = inf(GLTS2 / CARTSNBAP2)
RCELREPYC_1 = max(min(ACELREPYC, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BPTPG = BTP3A * is_positive(V_EAG) * 1 - is_positive(present(TAX1649) + present(RE168))
P10MINSV = max(min(PERPSALV, PDEDMINV), PDFNV)
GLRVG = is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * CODRVG / TOTALQUOHT) + 1 - is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB - GLRWA
NINVRETNVR = NINVRETNV - arr(NINVRETNV * TX375 / 100) * 1 - V_CNR
PRRV = arr(PRNV * PRBV / EXPRV)
RLOG17 = max(min(INVRETOM * 1 - INDPLAF + INVRETOMA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16])), 0) * 1 - V_CNR
RSE3 = arr(BRSE3 * TXTW / 100) * 1 - is_positive(ANNUL2042)
RLOC14 = max(min(INVRETMBR * 1 - INDPLAF + INVRETMBRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13])), 0) * 1 - V_CNR
TPRR2C = is_positive(PEBFC + PENSALC + CODRBZ) * arr(TPRNC * CARPEC / TEXPRC) + 1 - is_positive(PEBFC + PENSALC + CODRBZ) * TPRNC - TPRRC
LIGIPCAPC = present(PCAPTAXC) * 1 - is_positive(ANNUL2042 + 0) * LIG1
RGTECH = BGTECH * TX40 / 100 * 1 - V_CNR
REPMEUJC = DILMJC - RILMJC * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BASE7UTF = max(0, min(REPFOR + REPSINFOR + REPSINFOR1, PLAFRED_FORTRA) - REPSINFOR) * 1 - V_CNR
LIGPRESINT = is_positive(PRESINTER) * LIG1 * LIG2
LIGCELHJK = is_positive(DCELHJK) * LIG1 * LIG2
ZIPQPRR22 = is_positive(sum([TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPRR2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRV2 - ZIPQPRRC2 - ZIPQPRR12
DREPMEU = INVREPMEU
TMIB_TTV = TMIB_TVENV + TMIB_TPRESV
ZIPQPRRANTZ1TOT = sum([ZIPQPRRANTZV1, ZIPQPRRANTZC1, ZIPQPRRANTZ11, ZIPQPRRANTZ21, ZIPQPRRANTZ31, ZIPQPRRANTZ41])
ZIGNONR30 = is_positive(ZIG_PENATX4) * is_positive(1 - is_positive(R1649 + PREREV)) * LIG2
REPTA = max(0, CODHTA - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV)) * 1 - ART1731BIS + max(0, CODHTA - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV)) * ART1731BIS * 1 - V_CNR
ZIPQFANT31 = is_positive(TEGLF4 + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQF3 / TETONEQUO1) + 1 - is_positive(TEGLF4 + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - sum([ZIPQFANT11, ZIPQFANT21, ZIPQFANTV1, ZIPQFANTC1])
TSNGL3C = GLD3C - ABGL3C
BOOLENF = is_positive(V_0CF + V_0CH + V_0DJ + V_0CR + 0)
IND_10MIN_01 = is_positive(DEDMIN1 - DFN1) * is_positive(TSB1)
LIGREPQO = is_positive(REPQO) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RPQ4VCM = arr(GL4VCM / DIVGL4)
GLRVOM = is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * arr(TONEQUOMHT * _2RV1 / TOTALQUOHT) + 1 - is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM
TGLRVGM = is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * CODRVG / TOTALQUO) + 1 - is_positive(REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM
AAIDC = BADCRE * 1 - V_CNR
IND_COLP = is_positive(BPRS) * is_positive(PPRS + CIPRS + PRSPROV) * 1 - INDCTX
RISFFIP_2 = max(0, min(PLAF_ISFRED - RISFDONF_1 - RISFDONCEE_1 - RISFPMED_1 - RISFPMEI_1, RISFFIP_1))
LIGILMPD = is_positive(DILMPD) * LIG1 * LIG2
INVRETPNR = min(INVRETPN, max(0, NINVRETPN - INVRETPN)) * 1 - V_CNR
AILMIZ_R = DILMIZ * 1 - V_CNR
TAPB2 = max(TPLR2, TEXPR2 * TX_DEDPER / 100)
IPQPRRANTZ41 = ZIPQPRRANTZ41 * CODNFZ
ACELREPYC = CELREPYC * 1 - ART1731BIS + min(CELREPYC, max(ACELREPYC_P + ACELREPYCP2, ACELREPYC1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ACELJOQR_R = positif_ou_nul(CELLIERJO + CELLIERJQ + CELLIERJR) * BCEL_JOQR * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INVRETAE = NINVRETAE * 1 - V_CNR
LIGDEG = positif_ou_nul(TOTIRPSANT) * is_positive(SEUIL_8 - RECUM) * is_positive(null(V_NOTRAIT - 23) + null(V_NOTRAIT - 33) + null(V_NOTRAIT - 43) + null(V_NOTRAIT - 53) + null(V_NOTRAIT - 63))
LIGCELFABC = is_positive(DCELFABC) * LIG1 * LIG2
INVRETRY = NINVRETRY * 1 - V_CNR
TTSNT1 = TTSN1CJ + TTSN1CC + TTSN1CP + TTSNRCJ + TTSNRCP
RLOC114 = max(min(INVRETSGR * 1 - INDPLAF + INVRETSGRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113])), 0) * 1 - V_CNR
IND_APBV = positif_ou_nul(PLRV - EXPRV * TX_DEDPER / 100)
DOMAVTD = arr(BN1 + SPEPV + BI12F + BA1 * TX05 / 100) * is_positive(V_EAD)
RPI_QABCD = arr(arr(min(PINELQD + 0, LIMDUFLO - min(DUFLOEL + 0, LIMDUFLO)) / 9) * TX29 / 100) + arr(arr(min(PINELQB + 0, LIMDUFLO - min(DUFLOEL + PINELQD + PINELQC + DUFLOEK + 0, LIMDUFLO)) / 9) * TX18 / 100) + arr(arr(min(PINELQC + 0, LIMDUFLO - min(DUFLOEL + PINELQD + 0, LIMDUFLO)) / 6) * TX23 / 100) + arr(arr(min(PINELQA + 0, LIMDUFLO - min(DUFLOEL + PINELQD + PINELQC + DUFLOEK + PINELQB + 0, LIMDUFLO)) / 6) * TX12 / 100) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
INVRETKU = NINVRETKU * 1 - V_CNR
INVRETRQR = min(arr(INVRETRQ * 5 / 3), NINVRETRQ - INVRETRQ) * 1 - null(1 - abs(arr(INVRETRQ * 5 / 3) - NINVRETRQ - INVRETRQ)) + NINVRETRQ - INVRETRQ * null(1 - abs(arr(INVRETRQ * 5 / 3) - NINVRETRQ - INVRETRQ)) * 1 - V_CNR
LIGPLAFRSN3 = is_positive(PLAFREPSN3) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
LIGREPQV = is_positive(REPQV) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
IPQFANT21 = ZIPQFANT21 * COTF2
TSNN23AFF = is_positive(TS3) * is_positive(CARTSP3 + REMPLAP3) * arr(TS3 * _2TSN3 / EXTS3) + 1 - is_positive(CARTSP3 + REMPLAP3) * TS3 - TSNN3
PPECOEFFC = arr(PPE_COEFFCONDC * 100)
ZIGRSE2 = is_positive(BRSE2) * LIG2
NB1 = NBPT
INVRETRIA = min(NINVRETRI, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA)) * 1 - V_CNR
ACELRREDLA = CELRREDLA * 1 - ART1731BIS + min(CELRREDLA, max(ACELRREDLA_P + ACELRREDLAP2, ACELRREDLA1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPE_BOOL_MINN = positif_ou_nul(PPE_RTAN - PPELIMRPB) * 1 - PPE_BOOL_NADAN
REPRECH = abs(IPCHER - CIRECH)
DCELREPYD = CELREPYD
IPQRCMCH5 = ZIPQRCMCH5 * PROVIENB
REPAM = max(0, CODHAM - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH)) * 1 - ART1731BIS + max(0, CODHAM - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH)) * ART1731BIS * 1 - V_CNR
NBQAR1 = null(V_0CF + V_0CR + V_0DJ + 0) * 1 / 2 * V_0CH - 2 * is_positive(V_0CH - 2) + 1 / 4 * is_positive(V_0CH + 0) + 1 / 4 * is_positive(V_0CH - 1)
TIND_APB4 = positif_ou_nul(TPLR4 - TEXPR4 * TX_DEDPER / 100)
LIGILMIH = is_positive(DILMIH) * LIG1 * LIG2
LIGCICAP = present(PRELIBXT) * LIG1 * LIG2
TD10MV = TIND_MINV * TDFNV + 1 - TIND_MINV * T10MINSV
PERPPLAFNUNP = max(0, PERPPLAFNUP)
IS515 = arr(DS515 * NB1)
INVRETBA = min(arr(NINVRETBA * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU)) * 1 - V_CNR
INVRETAKR = min(arr(INVRETAK * 10 / 9), NINVRETAK - INVRETAK) * 1 - null(1 - abs(arr(INVRETAK * 10 / 9) - NINVRETAK - INVRETAK)) + NINVRETAK - INVRETAK * null(1 - abs(arr(INVRETAK * 10 / 9) - NINVRETAK - INVRETAK)) * 1 - V_CNR
MIBNETNPVLNSV = MIB_NETNPVLV - MIBNETNPVLSV
LIGREPSO = is_positive(REPSO) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
LIGCELYB = is_positive(DCELREPYB) * LIG1 * LIG2
RGRFR = 1 - is_positive(IPVLOC) * SHBARFR + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBARFR - REVTP - BA1 - REVQTOTQHT) + is_positive(IPVLOC) * IPVLOC
TMIB_ABPV = max(0, arr(TMIB_APV * MIBPRESV + AUTOBICPV / TMIB_TPRESV))
AREPA = BAA * 1 - ART1731BIS + min(BAA, max(AREPA_P + AREPAP2, AREPA1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
XEXTS2 = XTSB2 + CARTSP2 + REMPLAP2
ZIG_RVORIGND = is_positive(CS_RVORIGND + RD_RVORIGND + PS_RVORIGND + IND_ZIGREVORIGIND) * 1 - V_CNR * LIG1 * LIG2
INVRETLHRA = min(NINVRETLHR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETMCRA)) * 1 - V_CNR
A13REELB = RCINE + RLOG32 + RLOG39 + A13RSOC + A13RENT
ZIPQF1TOT = sum([ZIPQFV1, ZIPQFC1, ZIPQF11, ZIPQF21, ZIPQF31, ZIPQF41])
ADO1 = ABADON1 * 1 - is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)) + ABATOT1 * is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ))
INVRETAARA = min(NINVRETAAR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA - INVRETSGRA - INVRETSARA - INVRETSFRA - INVRETABRA - INVRETAGRA)) * 1 - V_CNR
IPHQANT2 = arr(IMTANT12 * IMPFHQANT1 / IDANT11)
# TODO ISFDEGR
RIVCELHNO1 = RCEL_HNO_R * is_positive(ACELHNO_R)
XEXOCETV = arr(is_positive(XTSNV) * XTSNV * EXOCETV / XEXTSV) * XIND_10V + 1 - XIND_10V * EXOCETV
ZIPQTSREMP12 = is_positive(sum([TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * arr(IQUOTOT2 * TERPQTSREMP1 / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTS2TOT - ZIPQTSREMPV2 - ZIPQTSREMPC2
IPQRCMFU2 = ZIPQRCMFU2 * REVPEANB
TSPETOTP = BNCPROP + AUTOBNCP + BNCNPP
RSOC6 = arr(max(min(INVRETXBR * 1 - INDPLAF + INVRETXBRA * INDPLAF, RRISUP - RDOMSOC1 - RSOC1 - RSOC2 - RSOC3 - RSOC4 - RSOC5), 0)) * 1 - V_CNR
BNRV = BNNSV + BNNAV
REPINVPME1 = max(0, REPSNON - max(0, LIM_SOCNOUV2 * 1 + BOOL_0AM - min(REPSNO3, LIM_SOCNOUV2 * 1 + BOOL_0AM) + REPSNO2 + REPSNO1)) * 1 - V_CNR
PERPNONSALC = PERPBANC + PERPBICMNC + PERPBICPNC + PERPBNCMNC + PERPBNCPNC
TABTSRFJ = is_positive(REMPLAP4) * arr(TREP104 * CARTSP4 / TTSB4) + 1 - is_positive(REMPLAP4) * max(0, TREP104 - TABTS1FJ - TABTS1FC - TABTS1FP)
AILMIA_R = DILMIA * 1 - V_CNR
CUMSALEXTEF = TTSN1AC + TTSN1BC + TTSN1CC + TTSN1DC + TTSN1EC + TTSN1FC
PPECOEFFN = arr(PPE_COEFFCONDN * 100)
IPQTSREMPANT31 = ZIPQTSREMPANT31 * REMPLANBP3
XTSBV = sum([GLD1V, GLD2V, GLD3V]) + TSBNV + BPCOSAV + TSASSUV + XETRANV + EXOCETV + GLDGRATV
LIGHRTEFF = is_positive(CHRTEFF) * is_positive(TEFFHRC + COD8YJ) * 1 - is_positive(ANNUL2042) * LIG1
GLTSREMP2 = is_positive(TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2REMP2 / TOTALQUOHT) + 1 - is_positive(TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV - GLTSREMPC - GLTSREMP1
INVRETPY = min(arr(NINVRETPY * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT)) * 1 - V_CNR
INVRETOKA = min(NINVRETOK, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA)) * 1 - V_CNR
DEPLOCC = LOCPROCGAC - LOCDEFPROCGAC + LOCPROC - LOCDEFPROC
DCELRREDLB = CELRREDLB
ZIPQPALIMANT21 = is_positive(sum([TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPALIM2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - sum([ZIPQPALIMANT11, ZIPQPALIMANTV1, ZIPQPALIMANTC1])
DFRCM1 = DEFRCM2 * is_positive(DFRCMN) + DEFRCM2 * is_positive(DEFRCM - RCM_I) * 1 - is_positive(DFRCMN) + max(0, DEFRCM2 - RCM_I - DEFRCM) * positif_ou_nul(RCM_I - DEFRCM) * 1 - is_positive(DFRCMN) * 1 - is_positive(ART1731BIS) + min(DEFRCM2, REPRCM - REPRCMBIS - DFRCM5 - DFRCM4 - DFRCM3 - DFRCM2) * is_positive(ART1731BIS * 1 - PREM8_11) + DEFRCM2 * is_positive(ART1731BIS * PREM8_11)
PPE_MONO = PPE_BOOL_MONO * 1 + PPE_BOOL_BT * is_positive(PPE_NBMAJO) * PPEMONMAJO + null(PPE_NBMAJO) * is_positive(PPE_NBMAJOQAR) * PPEMONMAJO / 2
BASSURC = CESSASSC
ISF4BASE = ISF4BIS * positif_ou_nul(ISF4BIS - SEUIL_12)
DCELREPYK = CELREPYK
TGLRVOM = is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * arr(TONEQUOM * _2RV1 / TOTALQUO) + 1 - is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM
INVRETLGRA = min(NINVRETLGR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA)) * 1 - V_CNR
T10MINSV = max(min(TTSBV, TDEDMINV), TDFNV)
INVRETNU = min(arr(NINVRETNU * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU)) * 1 - V_CNR
# TODO ABMAR
TMIB_AUTOAVC = TMIB_AVC - TMIB_VENTAC
TPL_PB = arr(PLAF_DEDPRFOYER - sum([TAPBV * TIND_APBV, TAPBC * TIND_APBC, TAPB1 * TIND_APB1, TAPB2 * TIND_APB2, TAPB3 * TIND_APB3, TAPB4 * TIND_APB4]))
TPRV = TSNV + PRNV - sum([GLN1V, GLN2V, GLN3V])
NRLOCIDEFG = max(min(RETLOCIDEFG, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA - NRRESIMEUB - NRRESIMEUB - NRRESINEUV), 0)
TTSBN2 = TSHALLO2 + ALLO2 + max(0, SALEXT2 - COD1DD)
DEFNPLOCF = min(0, NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - TOTDEFLOCNPBIS - LNPRODEF10)
REPRM = max(0, INVOMENTRM - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG)) * 1 - ART1731BIS + max(0, INVOMENTRM - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG)) * ART1731BIS * 1 - V_CNR
PPE_DEBRANG = PPE_DEBJJ + PPE_DEBMM - 1 * 30
ACODJTJU = ACODJTJU_1 * 1 - ART1731BIS + min(ACODJTJU_1, max(ACODJTJU_P + ACODJTJUP2, ACODJTJU1731 + 0) * 1 - PREM8_11) * ART1731BIS
RLOC121 = max(min(INVRETSKR * 1 - INDPLAF + INVRETSKRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118, RLOC119, RLOC120])), 0) * 1 - V_CNR
RON = arr(BON * TX_REDDON / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TOTCRA = V_ANTCR
RSE8TV = arr(BRSE8TV * TXTV / 100) * 1 - is_positive(ANNUL2042)
TSN1DP = ALLO2 - ABTS1DP
DRCF = min(0, RFCE - RFDHIS * 1 - is_positive(PREM8_11))
CIRSE8TV = min(RSE8TV, arr(REVCSXC * TX066 / 100))
TEGLF4M = GLF4M * 1 - is_positive(INDTEFF) + TGLF4M * is_positive(INDTEFF)
ZIPQTSREMPANT1TOT = sum([ZIPQTSREMPANTV1, ZIPQTSREMPANTC1, ZIPQTSREMPANT11, ZIPQTSREMPANT21, ZIPQTSREMPANT31, ZIPQTSREMPANT41])
LIGREP7PE = is_positive(REPMEUPE) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TERPQTS4M = RPQTS4M * 1 - is_positive(INDTEFF) + TRPQTS4M * is_positive(INDTEFF)
INVRETQKA = min(arr(NINVRETQK * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA)) * 1 - V_CNR
RRESINEUV5 = arr(arr(ACODIL / 9) * TX20 / 100)
BCIGA = CRIGA
PRR22 = is_positive(PEBF2 + PENSALP2 + CODRDZ) * arr(PRN2 * CARPEP2 / EXPR2) + 1 - is_positive(PEBF2 + PENSALP2 + CODRDZ) * PRN2 - PRR2
RCELREPYA_1 = max(min(ACELREPYA, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TERPQPRR2M = RPQPRR2M * 1 - is_positive(INDTEFF) + TRPQPRR2M * is_positive(INDTEFF)
RBL = RBG2 - min(RBG2, DPA + DFA + DEDIV + APERPV + APERPC + APERPP + NUREPAR) * 1 - V_CNR - min(RBG2, V_8ZT) * V_CR2 * 1 - is_positive(RE168 + TAX1649)
NINVRETPER = NINVRETPE - arr(NINVRETPE * TX4737 / 100) * 1 - V_CNR
SOMMEA739 = is_positive(INVSOCNRET) + is_positive(INVOMSOCKH) + is_positive(INVOMSOCKI) + is_positive(INVSOC2010) + is_positive(INVOMSOCQU) + is_positive(INVLOGSOC) + is_positive(INVOMSOCQJ) + is_positive(INVOMSOCQS) + is_positive(INVOMSOCQW) + is_positive(INVOMSOCQX) + is_positive(NRETROC40) + is_positive(NRETROC50) + is_positive(RETROCOMMB) + is_positive(RETROCOMMC) + is_positive(RETROCOMLH) + is_positive(RETROCOMLI) + is_positive(INVRETRO2) + is_positive(INVDOMRET60) + is_positive(INVRETRO1) + is_positive(INVDOMRET50) + is_positive(INVOMRETPO) + is_positive(INVOMRETPT) + is_positive(INVOMRETPN) + is_positive(INVOMRETPP) + is_positive(INVOMRETPS) + is_positive(INVOMRETPU) + is_positive(INVENDI) + is_positive(INVOMENTKT) + is_positive(INVOMENTKU) + is_positive(INVIMP) + is_positive(INVDIR2009) + is_positive(INVOMRETPR) + is_positive(INVOMRETPW) + is_positive(INVLGAUTRE) + is_positive(INVLGDEB2010) + is_positive(INVLOG2009) + is_positive(INVOMLOGOB) + is_positive(INVOMLOGOC) + is_positive(INVOMLOGOM) + is_positive(INVOMLOGON) + is_positive(INVOMRETPB) + is_positive(INVOMRETPF) + is_positive(INVOMRETPJ) + is_positive(INVOMRETPA) + is_positive(INVOMRETPE) + is_positive(INVOMRETPI) + is_positive(INVOMRETPY) + is_positive(INVOMRETPX) + is_positive(INVOMENTRG) + is_positive(INVOMRETPD) + is_positive(INVOMRETPH) + is_positive(INVOMRETPL) + is_positive(INVOMENTRI) + is_positive(INVOMLOGOI) + is_positive(INVOMLOGOJ) + is_positive(INVOMLOGOK) + is_positive(INVOMLOGOP) + is_positive(INVOMLOGOQ) + is_positive(INVOMLOGOR) + is_positive(INVOMENTRL) + is_positive(INVOMENTRQ) + is_positive(INVOMENTRV) + is_positive(INVOMENTNV) + is_positive(INVOMENTRK) + is_positive(INVOMENTRP) + is_positive(INVOMENTRU) + is_positive(INVOMENTNU) + is_positive(INVOMENTRM) + is_positive(INVOMENTRR) + is_positive(INVOMENTRW) + is_positive(INVOMENTNW) + is_positive(INVOMENTRO) + is_positive(INVOMENTRT) + is_positive(INVOMENTRY) + is_positive(INVOMENTNY) + is_positive(INVOMLOGOT) + is_positive(INVOMLOGOU) + is_positive(INVOMLOGOV) + is_positive(INVOMLOGOW) + is_positive(CODHOD) + is_positive(CODHOE) + is_positive(CODHOF) + is_positive(CODHOG) + is_positive(CODHOX) + is_positive(CODHOY) + is_positive(CODHOZ) + is_positive(CODHRA) + is_positive(CODHRB) + is_positive(CODHRC) + is_positive(CODHRD) + is_positive(CODHSA) + is_positive(CODHSB) + is_positive(CODHSC) + is_positive(CODHSE) + is_positive(CODHSF) + is_positive(CODHSG) + is_positive(CODHSH) + is_positive(CODHSJ) + is_positive(CODHSK) + is_positive(CODHSL) + is_positive(CODHSM) + is_positive(CODHSO) + is_positive(CODHSP) + is_positive(CODHSQ) + is_positive(CODHSR) + is_positive(CODHST) + is_positive(CODHSU) + is_positive(CODHSV) + is_positive(CODHSW) + is_positive(CODHSY) + is_positive(CODHSZ) + is_positive(CODHTA) + is_positive(CODHTB) + is_positive(CODHTD) + is_positive(CODHAA) + is_positive(CODHAB) + is_positive(CODHAC) + is_positive(CODHAE) + is_positive(CODHAF) + is_positive(CODHAG) + is_positive(CODHAH) + is_positive(CODHAJ) + is_positive(CODHAK) + is_positive(CODHAL) + is_positive(CODHAM) + is_positive(CODHAO) + is_positive(CODHAP) + is_positive(CODHAQ) + is_positive(CODHAR) + is_positive(CODHAT) + is_positive(CODHAU) + is_positive(CODHAV) + is_positive(CODHAW) + is_positive(CODHAY) + is_positive(CODHBA) + is_positive(CODHBB) + is_positive(CODHBE) + is_positive(CODHBF) + is_positive(CODHBG) + is_positive(CODHUA) + is_positive(CODHUB) + is_positive(CODHUC) + is_positive(CODHUD) + is_positive(CODHUE) + is_positive(CODHUF) + is_positive(CODHUG) + is_positive(CODHXA) + is_positive(CODHXB) + is_positive(CODHXC) + is_positive(CODHXE) + 0
RLOG18 = max(min(INVRETON * 1 - INDPLAF + INVRETONA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17])), 0) * 1 - V_CNR
RSE3NET = max(0, RSE3 + PRSE3 - CIRSE3 - CSPROVYG)
IPQRCMDC5 = ZIPQRCMDC5 * REVACTNB
ZIPQ11 = is_positive(sum([TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQ1 / TETONEQUO1) + 1 - is_positive(sum([TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQRWB1 - ZIPQRWA1 - ZIPQRVG1
TTSN1BC = max(0, SALEXTC - COD1BD) - TABTS1BC
IRD = IRN * is_positive(5 - V_IND_TRAIT) + 1 - is_positive(5 - V_IND_TRAIT) * positif_ou_nul(IRN + PIR - SEUIL_12) + 1 - is_positive(IRN + PIR)
RENT21 = max(min(INVRETAO * 1 - INDPLAF + INVRETAOA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20])), 0) * 1 - V_CNR
TSN1EP = ALLO3 - ABTS1EP
REVDON = max(0, RBL + TOTALQUOHT - SDD - SDC1)
CS_R1649 = R1649
# TODO IINETCALC
REPAE = max(0, CODHAE - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW - CODHBE)) * 1 - ART1731BIS + max(0, CODHAE - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW - CODHBE)) * ART1731BIS * 1 - V_CNR
TEGLPALIM3M = GLPALIM3M * 1 - is_positive(INDTEFF) + TGLPALIM3M * is_positive(INDTEFF)
_2TSNC = CARTSC + REMPLAC
TTSNRBP = REMPLAC - TABTSRBP
LIGPLOC3 = is_positive(DEFLOC3) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
NINVRETPBR = NINVRETPB - arr(NINVRETPB * TX375 / 100) * 1 - V_CNR
AISFDONCEE = arr(ISFDONEURO * TX75 / 100)
AUBAINE13A = max(0, min(V_A13REELA, V_DIFTEOREEL))
# TODO PCAPANTAFF
LIG2503 = 1 - is_positive(IND_REV) * 1 - positif_ou_nul(IND_TDR) * LIG2 * 1 - null(2 - V_REGCO)
TRPQRCMDCM = inf(TGLRCMDCM / REVACTNB)
RCEL_JOQR_R = is_positive(CELLIERJQ) * arr(ACELJOQR_R * TX36 / 100) + is_positive(CELLIERJO + CELLIERJR) * arr(ACELJOQR_R * TX24 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
XTPS104 = arr(XEXTS4 * TX_DEDFORFTS / 100)
NINVRETBG = max(min(CODHBG, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW - NINVRETBE - NINVRETAE - NINVRETAJ - NINVRETAO - NINVRETAT - NINVRETAY), 0) * 1 - V_CNR
NRCELRREDLB = max(min(CELRREDLB, RRI1 - NRLOGDOM - NRRI2 - NRCELRREDLA), 0)
RISFDONCEE = max(min(RISFDONCEE_2, ISFBRUT - RISFDONF), 0) * is_positive(1 - null(CODE_2042 - 8) * 1 - null(CMAJ_ISF - 8) * 1 - null(CMAJ_ISF - 34)) + max(min(RISFDONCEE_2, ISFBRUT - RISFDONF), 0) * 1 - is_positive(1 - null(CODE_2042 - 8) * 1 - null(CMAJ_ISF - 8) * 1 - null(CMAJ_ISF - 34)) * COD9ZA
ZIPQFC1 = is_positive(sum([TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQFC / TETONEQUO1) + 1 - is_positive(sum([TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQFV1
TTSBV = TEXTSV + sum([GLD1V, GLD2V, GLD3V]) + CODDAJ + CODEAJ
# TODO TOTIRCUM
NINVRETPI = max(min(INVOMRETPI, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETQO - NINVRETQF - NINVRETPA - NINVRETPE), 0) * 1 - V_CNR
BITTAP = BITAP + BI12AP
LIMIT10 = 20000 + max(0, arr(max(0, RI1 + TONEQUO1) * 8 / 100)) * 1 - is_positive(VARRMOND * is_positive(ART1731BIS) + RMOND * 1 - ART1731BIS) + max(0, arr(max(0, VARRMOND * is_positive(ART1731BIS) + RMOND * 1 - ART1731BIS + TONEQUOM1) * 8 / 100)) * is_positive(VARRMOND * is_positive(ART1731BIS) + RMOND * 1 - ART1731BIS)
RPIQABCD = max(0, RPIQABCD_1 * 1 - ART1731BIS)
IPQTS22 = ZIPQTS22 * CARTSNBAP2
RIV2012CEL4 = RIV2012CEL1
REPSZ = max(0, CODHSZ - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU)) * 1 - ART1731BIS + max(0, CODHSZ - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU)) * ART1731BIS * 1 - V_CNR
INVRETPT = min(arr(NINVRETPT * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO)) * 1 - V_CNR
RENT35 = max(min(INVRETAUR * 1 - INDPLAF + INVRETAURA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30, RENT31, RENT32, RENT33, RENT34])), 0) * 1 - V_CNR
# TODO RILRES
RIVCELHNO7 = RIVCELHNO1
NSM = 1 + BOOL_0AM + V_0AV * min(BOOL_0AZ + EAC + V_0CH + V_0CR, 1) + V_0AV * BOOL_0AZ * V_0AW * 1 - V_0AP * 1 - V_0AF / 2
LIGCODOU = is_positive(DCODOU) * LIG1 * LIG2
NINVRETOL = max(min(INVOMLOGOL, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH), 0) * 1 - V_CNR
INVRETAVRA = min(NINVRETAVR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA - INVRETAQRA)) * 1 - V_CNR
LIGNMAJCHR4 = TYPE2 * is_positive(NMAJCHR4)
RSE1 = arr(BRSE1 * TXTQ / 100) * 1 - is_positive(ANNUL2042)
XBICHDV = BICEXV + BICNOV
INVRETAUA = min(arr(NINVRETAU * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA)) * 1 - V_CNR
IND_102 = positif_ou_nul(_10MINS2 - FRD2)
ZIPQRVG2 = is_positive(sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQRVG / TETONEQUO1) + 1 - is_positive(sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQRWB2 - ZIPQRWA2
PS_RFG = CS_RFG
_4BAQLV = is_positive(_4BACREV + _4BAHREV)
PPEPRIMEU = arr(PPENARPRIMEU)
CDISBASE_INR = max(0, CDIS - CDISPROV - CDIS9YP)
RC1 = 1 if (NAPINI - V_ANTIR - IRCUM_A + RECUMBIS >= SEUIL_12) else 0
IQNETDAJ32 = arr(INETABADAJ32 * IQUODAJ32 / IPRODOM2 + IQUODAJ32)
CAPBASE_N = arr(max(IPCAPTAXT + min(0, IRN - IRANT + TAXASSUR), 0)) * is_positive(IAMD1 + 1 - SEUIL_61)
REPLNPV = REPLOCJT + REPMEUOA
RENT14 = max(min(INVRETAH * 1 - INDPLAF + INVRETAHA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13])), 0) * 1 - V_CNR
ZIPQTS35 = is_positive(TEGLTS4M + TEGLTSREMPTOTM) * arr(IQUOTOT5 * TERPQTS3M / TETONEQUOM1) + 1 - is_positive(TEGLTS4M + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQPRRZ5TOT - ZIPQTSV5 - ZIPQTSC5 - ZIPQTS15 - ZIPQTS25
TSN2 = is_positive(TSNT2) * min(0, TSNT2 + PRNN2) + positif_ou_nul(TSNT2) * TSNT2
LIG_SALASS = is_positive(TSBNV + TSBNC + TSBNP + F10AV + F10AC + F10AP + null(ALLOV + ALLOC + ALLOP) * null(TSHALLOV + TSHALLOC + TSHALLOP)) * LIG0 * LIG2
IPQRVG1 = ZIPQRVG1 * CODNVG
ZIPQF31 = is_positive(TEGLF4 + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQF3 / TETONEQUO1) + 1 - is_positive(TEGLF4 + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - sum([ZIPQF11, ZIPQF21, ZIPQFV1, ZIPQFC1])
BPTPSK = BTPSK * 1 - is_positive(present(TAX1649) + present(RE168))
_4BAQP = max(0, _4BACREP - _4DEFBACREP) * positif_ou_nul(BARAP) + arr(max(0, _4BAHREP - _4DEFBAHREP) * MAJREV) * positif_ou_nul(BARSP)
FRNP = FRN1 + FRN2 + FRN3 + FRN4
LIGBNCDF2 = is_positive(BNCDF2) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
BIOREST = is_positive(REST) * max(0, min(CREAGRIBIO, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP))
# TODO NMAJR1
LIG2383 = (is_positive(RBG - V_8ZT) * present(IPSOUR) * V_CR2 * LIG2) if (IAVIM + NAPCRPAVIM <= IPSOUR * LIG1) else 0
LIG2040 = is_positive(DNBE + RNBE + RRETU) * LIG1 * LIG2
INVRETAK = min(arr(NINVRETAK * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF)) * 1 - V_CNR
_7RCM_I = (1 - is_positive(DFRCMN) * _2RAR * 1 - is_positive(ART1731BIS) + _2RAR * is_positive(ART1731BIS)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
RIV2012CEL7 = RIV2012CEL1
TPRR21 = is_positive(PEBF1 + PENSALP1 + CODRCZ) * arr(TPRN1 * CARPEP1 / TEXPR1) + 1 - is_positive(PEBF1 + PENSALP1 + CODRCZ) * TPRN1 - TPRR1
DCELREPYG = CELREPYG
RFOREST3 = min(REPFOR2 + REPSINFOR3 + REPFOR3 + REPSINFOR4, max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR - RFOREST1 - RFOREST2))
ABDOMEAJ = is_positive(CODEAJ) * is_positive(GLD1V + GLD2V + GLD3V) * arr(REP10V * CODEAJ / TSBV) + 1 - is_positive(GLD1V + GLD2V + GLD3V) * max(0, REP10V - ABTSV - ABDOMDAJ) + 0
ZIGDRSED3 = ZIGIDRSE * null(ANCSDED2 - V_ANREV + 3)
DPRETUD = PRETUD + PRETUDANT
ZIPQTSREMPANT11 = is_positive(sum([TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * arr(IQUOTOTANT1 * TERPQTSREMP1 / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANT1TOT - ZIPQTSREMPANTV1 - ZIPQTSREMPANTC1
RD_RCM = CS_RCM
LIG400DEG = is_positive(IAVIM + NAPCRPAVIM) * is_positive(SEUIL_61 - IAVIM + NAPCRPAVIM) * null(ITRED) * is_positive(IRNET) * 1 - is_positive(IRNET - SEUIL_61) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET - SEUIL_12) * 1 - is_positive(NRINET - SEUIL_12) * is_positive(V_NOTRAIT - 20) * LIG2
TEGLRF1 = GLRF1 * 1 - is_positive(INDTEFF) + TGLRF1 * is_positive(INDTEFF)
NINVRETOE = max(min(CODHOE, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD), 0) * 1 - V_CNR
FRDA2 = FRN2 * is_positive(FRN2 - _10MINS2)
TRPQRVO = inf(TGLRVO / RENTAXNB)
BIDON = 1
LIG58 = present(PAAV) + present(PAAP) * is_positive(LIG52) * LIG1 * LIG2
INVRETKH = min(arr(NINVRETKH * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG)) * 1 - V_CNR
TRPQPRRZ2 = inf(TGLPRRZ2 / CODNDZ)
REPRO = max(0, INVOMENTRO - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW - INVOMRETPR - INVOMRETPW - INVOMENTRI)) * 1 - ART1731BIS + max(0, INVOMENTRO - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW - INVOMRETPR - INVOMRETPW - INVOMENTRI)) * ART1731BIS * 1 - V_CNR
RRIRENOV = max(0, RRIRENOV_1 * 1 - ART1731BIS + min(RRIRENOV_1, max(RRIRENOV_P + RRIRENOVP2, RRIRENOV1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETLIR = min(INVRETLI, max(0, NINVRETLI - INVRETLI)) * 1 - V_CNR
V_CNR = (V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [2, 4]}]
TD10MC = TIND_MINC * TDFNC + 1 - TIND_MINC * T10MINSC
ZIPQPRRC5 = is_positive(sum([TEGLPRR1M, TEGLPRR2M, TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPRRCM / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRR1M, TEGLPRR2M, TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRRV5
FRD4 = max(0, FRDP - FRD1 - FRD2 - FRD3)
GL4TVCM = arr(TONEQUOMHT * REV4TVC / TOTALQUOHT)
REVF = sum([PENFV, PENFC, PENF1, PENF2, PENF3, PENF4])
IPQPALIMANT41 = ZIPQPALIMANT41 * PENSALNBP4
BCIFORETUB = max(0, min(COD7UB, max(0, PLAF_FOREST1 * 1 + BOOL_0AM - BCIFORETUA))) * 1 - V_CNR
RCELCOM = max(0, RCELCOM_1 * 1 - ART1731BIS + min(RCELCOM_1, max(RCELCOM_P + RCELCOMP2, RCELCOM1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - is_positive(null(CMAJ2 - 8) + null(CMAJ2 - 11))) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIG1550 = 1 - present(IND_TDR) * INDTXMOY * LIG2
IPQANT11 = ZIPQANT11 * 1
INVRETQD = min(NINVRETQD, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM)) * 1 - V_CNR
RRESTIMOE = max(min(RESTIMOE * TX22 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMOD - RRESTIMOB - RRESTIMOC - RRESTIMOC - RRESTIMOY - RRESTIMOA), 0)
SPEPVPC = BNCPRO1AC - BNCPRODEC
ABATOT31 = ABADO31 + ABAGU31
PMIB_NETVP = MIBVENP - PMIB_AVP
TRPQPRRZ1 = inf(TGLPRRZ1 / CODNCZ)
# TODO RNIDF4
ABICPNETV = AUTOBICVV + AUTOBICPV - max(0, TMIB_AUTOAVV - TMIB_ABNPVLV) - max(0, TMIB_AUTOAPV - TMIB_ABNPPLV)
TGLPRRVM = is_positive(TPRR2C + TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2V / TOTALQUO) + 1 - is_positive(TPRR2C + TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM
INVRETSKRA = min(NINVRETSKR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA)) * 1 - V_CNR
LIG_MIBP = is_positive(sum([MIBVENV, MIBVENC, MIBVENP]) + sum([MIBPRESV, MIBPRESC, MIBPRESP]) + abs(MIB_NETCT) + 0) * 1 - null(4 - V_REGCO)
PMIB_NETPC = MIBPRESC - PMIB_APC
TMIB_ABVP = max(0, arr(TMIB_AVP * MIBVENP + AUTOBICVP / TMIB_TVENP))
INVRETOWA = min(NINVRETOW, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA)) * 1 - V_CNR
NINVRETPN = max(min(INVOMRETPN, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV), 0) * 1 - V_CNR
TPMIB_AVC = min(MIBVENC + AUTOBICVC, max(MIN_MBIC, arr(MIBVENC + AUTOBICVC * TX_MIBVEN / 100)))
REPRA = max(0, CODHRA - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW - INVOMSOCQX)) * 1 - ART1731BIS + max(0, CODHRA - max(0, RDOMSOC1 - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW - INVOMSOCQX)) * ART1731BIS * 1 - V_CNR
_6RCM_I = (1 - is_positive(DFRCMN) * _2RAO - FRG5 * 1 - is_positive(ART1731BIS) + _2RAO - FRG5 * is_positive(ART1731BIS)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
INVRETPIRA = min(NINVRETPIR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA)) * 1 - V_CNR
RESIMEUB7 = arr(arr(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
RDNET = max(0, RDSC + PRDS - CIRDS - CRDSIM)
PPE_BOOL_MINV = positif_ou_nul(PPE_RTAV - PPELIMRPB) * 1 - PPE_BOOL_NADAV
ABTS1UT = is_positive(GLDGRATC) * is_positive(CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * arr(REP10C * GLDGRATC / TSBC) + 1 - is_positive(CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * max(0, REP10C - ABTS1BJ - ABTS1BP - ABTS3VK)
RPQPRR2 = inf(GLPRR2 / CARPENBAP2)
INVRETPJR = min(arr(INVRETPJ * 5 / 3), NINVRETPJ - INVRETPJ) * 1 - null(1 - abs(arr(INVRETPJ * 5 / 3) - NINVRETPJ - INVRETPJ)) + NINVRETPJ - INVRETPJ * null(1 - abs(arr(INVRETPJ * 5 / 3) - NINVRETPJ - INVRETPJ)) * 1 - V_CNR
REPXB = max(0, CODHXB - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW - INVOMSOCQX - CODHRA - CODHRB - CODHRC - CODHRD - CODHXA)) * 1 - ART1731BIS + max(0, CODHXB - max(0, RLOGSOC - CODHXA)) * ART1731BIS * 1 - V_CNR
SPEABV = arr(max(MIN_SPEBNC, SPEBASABV * SPETXAB / 100) * positif_ou_nul(SPETOTV - MIN_SPEBNC)) + arr(min(MIN_SPEBNC, SPEBASABV) * is_positive(MIN_SPEBNC - SPETOTV))
APERPVTEF = 1 - V_CNR * max(min(RPERPV, RBGTEF - RPALETEF - RPALPTEF - RFACCTEF - RDDIVTEF - DDCSG + TOTALQUO - SDD), 0)
LIGNIIRAF = null(IAD11) * is_positive(IRESTIT) * 1 - is_positive(INDNIRI) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - positif_ou_nul(NAPTIR) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(1 + null(3 - INDIRPS)) * LIG2
NAPTOT = IRCUM + TAXACUM + PCAPCUM + TAXLOYCUM + HAUTREVCUM - RECUMIR
TERPQPRR3M = RPQPRR3M * 1 - is_positive(INDTEFF) + TRPQPRR3M * is_positive(INDTEFF)
TABGL2V = is_positive(GLD2V) * is_positive(GLD3V) * arr(TREP10V * GLD2V / TTSBV) + 1 - is_positive(GLD3V) * max(0, TREP10V - TABTSV - TABDOMDAJ - TABDOMEAJ - TABGL1V) + 0
RCODJT4 = RCODJT1
# TODO DFANTIMPU
RBG2 = RBG - min(RBG, DDCSG)
PIND_10MIN_0C = is_positive(PDEDMINC - PDFNC) * is_positive(PERPSALC)
INVRETMA = min(arr(NINVRETMA * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC)) * 1 - V_CNR
TMIB_ABNPVLC = TMIB_AVC - TMIB_ABVC - TMIB_ABNPVC * is_positive(present(MIBGITEC) + present(LOCGITC))
PPE_DEBJJMMMM = PPE_DATE_DEB + 1010000 + V_ANREV * null(PPE_DATE_DEB + 0)
# TODO IND_REV
TPLRV = min(MIN_DEDPR, TEXPRV)
LIGREPPLU = is_positive(REPPLU) * LIG1 * LIG2
INVRETPTRA = min(NINVRETPTR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA - INVRETQORA - INVRETQFRA - INVRETPORA)) * 1 - V_CNR
MIB_ABNPPLC = MIB_APC - MIB_ABPC - MIB_ABNPPC * present(MIBMEUC)
RCEL_JP_R = is_positive(CELLIERJP) * arr(ACELJP_R * TX36 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IPQANT1 = IPQANT01 * EXO1 + IPQANT1001
INVRETOC = min(NINVRETOC, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB)) * 1 - V_CNR
LIGDEGRES = is_positive(TOTIRPSANT + 0) * positif_ou_nul(RECUM - SEUIL_8) * is_positive(null(V_NOTRAIT - 23) + null(V_NOTRAIT - 33) + null(V_NOTRAIT - 43) + null(V_NOTRAIT - 53) + null(V_NOTRAIT - 63))
SALIMP = positif_ou_nul(SALREST) * CIADCRE - SALREST
# TODO NMAJ4
INDRSE2X = is_positive(CS_DEG) * is_positive(BRSE2) * is_positive(INDCTX)
CDISNET = max(0, CDISC + PCDIS - CDISPROV)
TPLEINSALP = is_positive(PPETPP1 + PPETPP2 + PPETPP3 + PPETPP4 * PPESALPTOT + is_positive(PPENBH1 - 1820) + is_positive(PPENBH2 - 1820) + is_positive(PPENBH3 - 1820) + is_positive(PPENBH4 - 1820) + PPESALPTOT * INDLIGPPE * 1 - is_positive(LIGPPEHP) + is_positive(PPEPRIMEPT) * is_positive(PPETOTX) * is_positive(PPESALPTOT) * 1 - is_positive(LIGPPEHP) + is_positive(PPESALPTOT) * 1 - is_positive(LIGPPEHP)) * INDPPEP * is_positive(INDLIGPPE) * LIG0 * LIG2
RSOC19 = arr(max(min(INVRETQK * 1 - INDPLAF + INVRETQKA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18])), 0)) * 1 - V_CNR
RPQTS3M = inf(GLTS3M / CARTSNBAP3)
RLOC115 = max(min(INVRETSAR * 1 - INDPLAF + INVRETSARA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114])), 0) * 1 - V_CNR
LIGREPPR = is_positive(REPPR) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
REPQE = max(0, INVENDEB2009 - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV)) * 1 - ART1731BIS + max(0, INVENDEB2009 - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV)) * ART1731BIS * 1 - V_CNR
LIGFOREST = is_positive(REPFOREST2 + REPFOREST3 + REPEST) * LIG1 * LIG2 * 1 - V_CNR
BI12AP = BI1AP + BI2AP
TGLRCMCHM = is_positive(_5RCM + _6RCM + _7RCM + REVRF) * arr(TONEQUOM * _4RCM / TOTALQUO) + 1 - is_positive(_5RCM + _6RCM + _7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM - TGLRCMFUM
TTSB4 = TEXTS4
INVRETQUA = min(arr(NINVRETQU * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA)) * 1 - V_CNR
ACELRREDLC = CELRREDLC * 1 - ART1731BIS + min(CELRREDLC, max(ACELRREDLC_P + ACELRREDLCP2, ACELRREDLC1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NINVRETPL = max(min(INVOMRETPL, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH), 0) * 1 - V_CNR
TRPQTSC = inf(TGLTSC / CARTSNBAC)
TABTS1DJ = arr(TREP102 * TSHALLO2 / TTSB2)
REPSU = max(0, CODHSU - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP)) * 1 - ART1731BIS + max(0, CODHSU - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP)) * ART1731BIS * 1 - V_CNR
DCELREPYJ = CELREPYJ
INVRETSQR = min(arr(INVRETSQ * 5 / 3), NINVRETSQ - INVRETSQ) * 1 - null(1 - abs(arr(INVRETSQ * 5 / 3) - NINVRETSQ - INVRETSQ)) + NINVRETSQ - INVRETSQ * null(1 - abs(arr(INVRETSQ * 5 / 3) - NINVRETSQ - INVRETSQ)) * 1 - V_CNR
REPIQAC = RIVPIQAC * 4 + RIVPIQAC5
LOYBASE_I = TAXLOY * is_positive(IAMD1 + 1 - SEUIL_61)
IND_APBC = positif_ou_nul(PLRC - EXPRC * TX_DEDPER / 100)
LIGABDET = is_positive(GAINABDET) * LIG1 * LIG2
TERPQRCMCH = RPQRCMCH * 1 - is_positive(INDTEFF) + TRPQRCMCH * is_positive(INDTEFF)
LIG1111 = is_positive(DFANTIMPU) * LIGANNUL2042
PLOCCGAV = LOCPROCGAV - LOCDEFPROCGAV * 1 - is_positive(ART1731BIS * PREM8_11)
RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _1RCM_I - REPRCM1) - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * 0 * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _1RCM_I - REPRCM1)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
LIGREPPO = is_positive(REPPO) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
_4DEFBACREP = is_positive(_4BACREP) * BACDEP * 1 - is_positive(ART1731BIS * PREM8_11) - DEFBACREP
RCELREPGS_1 = max(min(ACELREPGS, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
# TODO AB
GLTSREMPTOTM = sum([GLTSREMPVM, GLTSREMPCM, GLTSREMP1M, GLTSREMP2M, GLTSREMP3M, GLTSREMP4M])
LIGMEUB = is_positive(VIEUMEUB) * is_positive(RESIMEUB1 + RESIMEUB2 + RESIMEUB3 + RESIMEUB4 + RESIMEUB5 + RESIMEUB6 + RESIMEUB7 + RESIMEUB8) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INVRETQNR = min(max(min(arr(INVRETQN * 13 / 7), NINVRETQN - INVRETQN), NINVRETQN - INVRETQN), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR)) * 1 - V_CNR
INVRETAFR = min(arr(INVRETAF * 10 / 9), NINVRETAF - INVRETAF) * 1 - null(1 - abs(arr(INVRETAF * 10 / 9) - NINVRETAF - INVRETAF)) + NINVRETAF - INVRETAF * null(1 - abs(arr(INVRETAF * 10 / 9) - NINVRETAF - INVRETAF)) * 1 - V_CNR
LIGLOCNEUF2 = is_positive(RIVL2) * LIG1
INVRETAR = min(NINVRETAR, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW - INVRETTB - INVRETAC - INVRETAH - INVRETAM)) * 1 - V_CNR
TSNRDP = REMPLAP2 - ABTSRDP
DCODOU = COD7OU
LIGIPCAPV = present(PCAPTAXV) * 1 - is_positive(ANNUL2042 + 0) * LIG1
ZIPQTSREMPANT31 = is_positive(TEGLTSREMP4) * arr(IQUOTOTANT1 * TERPQTSREMP3 / TETONEQUO1) + 1 - is_positive(TEGLTSREMP4) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQPRRANTZ1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQTSANT1TOT - ZIPQTSREMPANTV1 - ZIPQTSREMPANTC1 - ZIPQTSREMPANT11 - ZIPQTSREMPANT21
IPQ42 = ZIPQ42 * 4
TTSNRAP = REMPLAV - TABTSRAP
LIGREPLOC2 = is_positive(REPLOCN2) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RDRCM1BISAPS = 1 - is_positive(RDRCM1APS) * RDRCM1NEGPLAFAPS * -1 + positif_ou_nul(RDRCM1APS) * RDRCM1APS
LIGINRLOY2 = is_positive(RETLOY22)
TSNT3 = TSN1EJ + TSN1EP + TSNREJ + TSNREP
TEGL4VC = GL4VC * 1 - is_positive(INDTEFF) + TGL4VC * is_positive(INDTEFF)
INVRETRG = min(NINVRETRG, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU)) * 1 - V_CNR
PPE_RTAU = max(0, PPESALU + PPE_RPROP * is_positive(PPE_RPROP)) * PPE_BOOL_SEULPAC
TGLRCMDC = is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * arr(TONEQUO * _2RCM / TOTALQUO) + 1 - is_positive(_3RCM + _4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT
INVRETPSRA = min(NINVRETPSR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA - INVRETQORA - INVRETQFRA - INVRETPORA - INVRETPTRA - INVRETPNRA)) * 1 - V_CNR
ZIPQPRR5TOT = sum([ZIPQPRRV5, ZIPQPRRC5, ZIPQPRR15, ZIPQPRR25, ZIPQPRR35, ZIPQPRR45])
TPMIB_NETPV = MIBPRESV + AUTOBICPV - TPMIB_APV
GLPRR3 = is_positive(PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR23 / TOTALQUOHT) + 1 - is_positive(PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2
GLRVO = is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * arr(TONEQUOHT * _2RV1 / TOTALQUOHT) + 1 - is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT
TXSPENETP = TXSPEAAP + TXSPEHP
GLRWB = is_positive(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * CODRWB / TOTALQUOHT) + 1 - is_positive(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT * is_positive(null(1 - FLAG_EXIT) + null(2 - FLAG_EXIT))
NINVRETOF = max(min(CODHOF, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE), 0) * 1 - V_CNR
ACELREPHU = CELREPHU * 1 - ART1731BIS + min(CELREPHU, max(ACELREPHU_P + ACELREPHUP2, ACELREPHU1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REPRD = max(0, CODHRD - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW - INVOMSOCQX - CODHRA - CODHRB - CODHRC)) * 1 - ART1731BIS + max(0, CODHRD - max(0, RDOMSOC1 - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW - INVOMSOCQX - CODHRA - CODHRB - CODHRC)) * ART1731BIS * 1 - V_CNR
TBNN = sum([TSPENETPV, TSPENETPC, TSPENETPP]) + TXSPENET + max(0, sum([TSPENETNPV, TSPENETNPC, TSPENETNPP]) + NOCEPIMP - min(DABNCNP6, DABNCNP61731 + 0) * is_positive(ART1731BIS) + DABNCNP6 * 1 - ART1731BIS - min(DABNCNP5, DABNCNP51731 + 0) * is_positive(ART1731BIS) + DABNCNP5 * 1 - ART1731BIS - min(DABNCNP4, DABNCNP41731 + 0) * is_positive(ART1731BIS) + DABNCNP4 * 1 - ART1731BIS - min(DABNCNP3, DABNCNP31731 + 0) * is_positive(ART1731BIS) + DABNCNP3 * 1 - ART1731BIS - min(DABNCNP2, DABNCNP21731 + 0) * is_positive(ART1731BIS) + DABNCNP2 * 1 - ART1731BIS - min(DABNCNP1, DABNCNP11731 + 0) * is_positive(ART1731BIS) + DABNCNP1 * 1 - ART1731BIS) + SPENETCT + SPENETNPCT
IPQFV2 = ZIPQFV2 * COTFV
LIG_REVASS = positif_ou_nul(ALLOV + ALLOC + ALLOP) * positif_ou_nul(TSHALLOV + TSHALLOC + TSHALLOP) * LIG0 * LIG2
XDFC = X10MINSC
ZIPQPRRANTZ21 = is_positive(sum([TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPRRZ2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTZV1 - ZIPQPRRANTZC1 - ZIPQPRRANTZ11
INVRETPI = min(arr(NINVRETPI * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE)) * 1 - V_CNR
TPRR2Z1 = is_positive(PEBF1 + PENSALP1) * arr(TPRN1 * CODRCZ / TEXPR1) + 1 - is_positive(PEBF1 + PENSALP1) * TPRN1 - TPRR1 - TPRR21
BN1V = BN1AV + PVINVE + INVENTV
CICULTUR = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - REI - IRETS - CRDIE - ICREREVET - CIGLO, min(IAD11 + ITP + TAXASSUR + TAXLOY + IPCAPTAXTOT + CHRAPRES, BCIAQCUL)))
ZIPQTSANT1TOT = sum([ZIPQTSANTV1, ZIPQTSANTC1, ZIPQTSANT11, ZIPQTSANT21, ZIPQTSANT31, ZIPQTSANT41])
DAIDE = RVAIDE + RVAIDAS
TTSNN2REMPV = is_positive(TTSV) * TTSV - TTSNNV - TTSNN2TSV
RPERPC = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE) * max(0, min(PERP_COTC, PERPPLATCANT) + RACCOTC) + is_positive(PERPIMPATRIE) * max(0, min(PERP_COTC, PERPPLAFIMPC) + RACCOTC) + is_positive(PERP_COND1) * 1 - is_positive(PERPIMPATRIE) * max(0, min(PERP_COTC, PERPPLATCANT) + RACCOTC) + is_positive(PERPIMPATRIE) * max(0, min(PERP_COTC, PERPPLAFIMPC) + RACCOTC) + is_positive(PERP_COND2) * min(PERP_COTC, PERPPLAFMUTC) + RACCOTC
PRSETOT = PRSE1 + PRSE2 + PRSE3 + PRSE4 + PRSE5
NSP = NPS + NSA + NCC
TRPQRVO6 = inf(TGLRVO6 / RENTAXNB6)
RCEL_JP = is_positive(CELLIERJP) * arr(ACELJP * TX36 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
# TODO MLOCABC
DPA = sum([min(NCHENF1, LIMDPAE) + min(arr(CHENF1 * MAJREV), LIMDPAE), min(NCHENF2, LIMDPAE) + min(arr(CHENF2 * MAJREV), LIMDPAE), min(NCHENF3, LIMDPAE) + min(arr(CHENF3 * MAJREV), LIMDPAE), min(NCHENF4, LIMDPAE) + min(arr(CHENF4 * MAJREV), LIMDPAE)]) + TOTPA * 1 - V_CNR * 1 - is_positive(RE168 + TAX1649)
INVRETPTR = min(arr(INVRETPT * 3 / 2), NINVRETPT - INVRETPT) * 1 - V_CNR
LIGIINETC = LIGSUP * null(NAPT) * is_positive(IINETCALC + 0)
TGLRVO = is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * arr(TONEQUO * _2RV1 / TOTALQUO) + 1 - is_positive(_2RV2 + _2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT
RLOC55 = max(min(INVRETPS * 1 - INDPLAF + INVRETPSA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54])), 0) * 1 - V_CNR
LIGPPETOT = is_positive(PPETOT) * 1 - null(7 - V_REGCO)
T10MINSP = T10MINS1 + T10MINS2 + T10MINS3 + T10MINS4
REPAY = max(0, CODHAY - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW - CODHBE - CODHAE - CODHAJ - CODHAO - CODHAT)) * 1 - ART1731BIS + max(0, CODHAY - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW - CODHBE - CODHAE - CODHAJ - CODHAO - CODHAT)) * ART1731BIS * 1 - V_CNR
# TODO MAJTXCHR1
RILMJW = max(0, RILMJW_1 * 1 - ART1731BIS + min(RILMJW_1, max(RILMJW_P + RILMJWP2, RILMJW1731 + 0) * 1 - PREM8_11) * ART1731BIS)
TGLRF2M = TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMTOTM - TGLRF1M
LIGBLOC = is_positive(V_NOTRAIT - 20)
SOMDEFBIC = BICDNV + BIHDNV + BICDNC + BIHDNC + BICDNP + BIHDNP
RPQPALIMC = inf(GLPALIMC / PENSALNBC)
RREDREP_1 = max(min(AREDREP, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB), 0)
LIGXBIP = is_positive(XBIPV + XBIPC + XBIPP) * LIG1 * LIG2
X10MINS1 = max(min(XTSB1, DEDMIN1), XDFN1)
# TODO DRBG
RESIVIAN7 = arr(arr(ACODIW / 9) * TX25 / 100)
# TODO PROQDEFBAT
XTSN2 = is_positive(XTSNT2) * min(0, XTSNT2) + positif_ou_nul(XTSNT2) * XTSNT2
INVRETKHRA = min(NINVRETKHR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA)) * 1 - V_CNR
RBG = 1 - is_positive(RG + R1649 + PREREV - DAR) * min(0, RG + R1649 + PREREV - DAR + TOTALQUO) + is_positive(RG + R1649 + PREREV - DAR) * RG + R1649 + PREREV - DAR * 1 - is_positive(ART1731BIS) + 1 - is_positive(RG + R1649 + PREREV - DAR - DFANTIMPU) * min(0, RG + R1649 + PREREV - DAR - DFANTIMPU + TOTALQUO) + is_positive(RG + R1649 + PREREV - DAR - DFANTIMPU) * RG + R1649 + PREREV - DAR - DFANTIMPU * ART1731BIS
AREPNPRO = DREPNPRO * 1 - ART1731BIS + min(DREPNPRO, max(APROREP_P + APROREPP2, AREPNPRO1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
IPQPRRC5 = ZIPQPRRC5 * CARPENBAC
TMIB_NETNPPC = MIBNPPRESC - TMIB_ABNPPC
RETXISF = is_positive(CMAJ_ISF) * TXINTISF + TXINRISF * 1 - is_positive(TXINRISF_A) + -1 * is_positive(TXINRISF_A) * is_positive(TXINRISF) * is_positive(is_positive(TXINRISF - TXINRISF_A) + is_positive(TXINRISF_A - TXINRISF)) + TXINRISF * is_positive(TXINRISF_A) * null(TXINRISF - TXINRISF_A)
LIG_SURSIS = is_positive(LIGPVSURSI + LIGBPTPGJ + LIGIREXITI + LIGIREXI19 + LIGIREXITS + LIGIREXS19 + LIGIREXIT + LIGEXITAX3 + LIGSURIMP) * LIG1 * LIG2
ACODIG = min(PLAF_RESINEUV - ACODIE - ACODIF - ACODID, LOCMEUBIG) * 1 - V_CNR
NINVRETUF = max(min(CODHUF, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ - NINVRETUA - NINVRETUB - NINVRETUC - NINVRETUD - NINVRETUE), 0) * 1 - V_CNR
IR9YI = arr(VAR9YIIR * max(0, IRN - IRANT) / BINRIR)
PMIB_AVP = min(MIBVENP, max(MIN_MBIC, arr(MIBVENP * TX_MIBVEN / 100)))
ACELRREDLF = CELRREDLF * 1 - ART1731BIS + min(CELRREDLF, max(ACELRREDLF_P + ACELRREDLFP2, ACELRREDLF1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TABTSC = TABTS1BJ + TABTS1BC + TABTS1BP + TABTS3VK + TABTS1UT + TABTSRBJ + TABTSRBP
NINVRETPU = max(min(INVOMRETPU, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP), 0) * 1 - V_CNR
_2RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _2RCM_I - REPRCM2) * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _2RCM_I - REPRCM2)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
RFIPDOM = max(0, RFIPDOM_1 * 1 - ART1731BIS + min(RFIPDOM_1, max(RFIPDOM_P + RFIPDOMP2, RFIPDOM1731 + 0) * 1 - PREM8_11) * ART1731BIS)
LIGXFORF = is_positive(present(FEXV) + present(FEXC) + present(FEXP)) * LIG1 * LIG2
TONEQUO1T = sum([TRPQ1, TRPQ2, TRPQ3, TRPQ4]) + sum([TRPQFV, TRPQFC, TRPQF1, TRPQF2, TRPQF3, TRPQF4]) + sum([TRPQPALIMV, TRPQPALIMC, TRPQPALIM1, TRPQPALIM2, TRPQPALIM3, TRPQPALIM4]) + sum([TRPQRF1, TRPQRF2]) + TRPQRCMDC + TRPQRCMFU + TRPQRCMCH + TRPQRCMTR + TRPQRCMTS + TRPQRCMGO + sum([TRPQPRRV, TRPQPRRC, TRPQPRR1, TRPQPRR2, TRPQPRR3, TRPQPRR4]) + sum([TRPQPRRZV, TRPQPRRZC, TRPQPRRZ1, TRPQPRRZ2, TRPQPRRZ3, TRPQPRRZ4]) + TRPQRVO + TRPQRVO5 + TRPQRVO6 + TRPQRVO7 + sum([TRPQTSV, TRPQTSC, TRPQTS1, TRPQTS2, TRPQTS3, TRPQTS4]) + sum([TRPQTSREMPV, TRPQTSREMPC, TRPQTSREMP1, TRPQTSREMP2, TRPQTSREMP3, TRPQTSREMP4]) + TRPQRVG + TRPQRWB * null(1 - FLAG_EXIT) + TRPQRWB + TRPQRWA * null(2 - FLAG_EXIT)
SOMMEA897 = SOMMEA881
RPQPRRZ1 = inf(GLPRRZ1 / CODNCZ)
ZIPQRF25 = is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM) * arr(IQUOTOT5 * TERPQRF2M / TETONEQUOM1) + 1 - is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF15 - ZIPQPRRZ5TOT
XDF3 = X10MINS3
INVRETRA = min(arr(NINVRETRA * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX)) * 1 - V_CNR
BRSE8TX = PENECS * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
INVRETBBR = min(arr(INVRETBB * 5 / 3), NINVRETBB - INVRETBB) * 1 - null(1 - abs(arr(INVRETBB * 5 / 3) - NINVRETBB - INVRETBB)) + NINVRETBB - INVRETBB * null(1 - abs(arr(INVRETBB * 5 / 3) - NINVRETBB - INVRETBB)) * 1 - V_CNR
# TODO BNCV
FRDREPTOT = is_positive(ART1731BIS) * FRDAV - FRDV + FRDAC - FRDC + FRDA1 - FRD1 + FRDA2 - FRD2 + FRDA3 - FRD3 + FRDA4 - FRD4
ARESIVIEU_1 = arr(ACODIM / 9) + arr(ACODIW / 9)
MIB_ABVC = max(0, arr(MIB_AVC * MIBVENC / MIB_TVENC))
# TODO NMAJGLO4
CSGAC = max(0, CSGC - CICSG)
TRPQPRRZ4M = inf(TGLPRRZ4M / CODNFZ)
RDNP = RCSV + RCSC + RCSP + max(0, NPLOCNETSF) * 1 - null(V_REGCO - 2) * 1 - null(V_REGCO - 4)
BI12AV = BI1AV + BI2AV
TSPENETPC = max(0, BNCPROC + AUTOBNCC - TSPEABPC)
REVALIM = sum([PENALIMV, PENALIMC, PENALIM1, PENALIM2, PENALIM3, PENALIM4]) * 1 - INDTEFF + sum([TPENALIMV, TPENALIMC, TPENALIM1, TPENALIM2, TPENALIM3, TPENALIM4]) * INDTEFF
NINVRETRAR = NINVRETRA - arr(NINVRETRA * TX35 / 100) * 1 - V_CNR
EXPR3 = PRB3 + _2PRB3 + PEBF3
ZIPQTS2TOT = sum([ZIPQTSV2, ZIPQTSC2, ZIPQTS12, ZIPQTS22, ZIPQTS32, ZIPQTS42])
INVRETORA = min(NINVRETOR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA)) * 1 - V_CNR
REPINVIAN = RESIVIAN1 + RESIVIAN2 + RESIVIAN3 + RESIVIAN4 + RESIVIAN5 + RESIVIAN6 + RESIVIAN7 + RESIVIAN8
REP10V = IND_10V * D10MV + 1 - IND_10V * FPTV
INVRETUD = min(NINVRETUD, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ - INVRETUA - INVRETUB - INVRETUC)) * 1 - V_CNR
BAHQT = BAHQV + BAHQC + BAHQP
DEFIBAANT = positif_ou_nul(BAQT + BAHQTOT - min(DAGRI1, DAGRI11731 + 0) * is_positive(ART1731BIS) + DAGRI1 * 1 - ART1731BIS - min(DAGRI2, DAGRI21731 + 0) * is_positive(ART1731BIS) + DAGRI2 * 1 - ART1731BIS - min(DAGRI3, DAGRI31731 + 0) * is_positive(ART1731BIS) + DAGRI3 * 1 - ART1731BIS - min(DAGRI4, DAGRI41731 + 0) * is_positive(ART1731BIS) + DAGRI4 * 1 - ART1731BIS - min(DAGRI5, DAGRI51731 + 0) * is_positive(ART1731BIS) + DAGRI5 * 1 - ART1731BIS - min(DAGRI6, DAGRI61731 + 0) * is_positive(ART1731BIS) + DAGRI6 * 1 - ART1731BIS) * min(DAGRI1, DAGRI11731 + 0) * is_positive(ART1731BIS) + DAGRI1 * 1 - ART1731BIS - min(DAGRI2, DAGRI21731 + 0) * is_positive(ART1731BIS) + DAGRI2 * 1 - ART1731BIS - min(DAGRI3, DAGRI31731 + 0) * is_positive(ART1731BIS) + DAGRI3 * 1 - ART1731BIS - min(DAGRI4, DAGRI41731 + 0) * is_positive(ART1731BIS) + DAGRI4 * 1 - ART1731BIS - min(DAGRI5, DAGRI51731 + 0) * is_positive(ART1731BIS) + DAGRI5 * 1 - ART1731BIS - min(DAGRI6, DAGRI61731 + 0) * is_positive(ART1731BIS) + DAGRI6 * 1 - ART1731BIS + positif_ou_nul(min(DAGRI1, DAGRI11731 + 0) * is_positive(ART1731BIS) + DAGRI1 * 1 - ART1731BIS + min(DAGRI2, DAGRI21731 + 0) * is_positive(ART1731BIS) + DAGRI2 * 1 - ART1731BIS + min(DAGRI3, DAGRI31731 + 0) * is_positive(ART1731BIS) + DAGRI3 * 1 - ART1731BIS + min(DAGRI4, DAGRI41731 + 0) * is_positive(ART1731BIS) + DAGRI4 * 1 - ART1731BIS + min(DAGRI5, DAGRI51731 + 0) * is_positive(ART1731BIS) + DAGRI5 * 1 - ART1731BIS + min(DAGRI6, DAGRI61731 + 0) * is_positive(ART1731BIS) + DAGRI6 * 1 - ART1731BIS - BAQT - BAHQTOT) * BAQT + BAHQTOT
ZIPQTSREMP25 = is_positive(sum([TEGLTSREMP3M, TEGLTSREMP4M])) * arr(IQUOTOT5 * TERPQTSREMP2M / TETONEQUOM1) + 1 - is_positive(sum([TEGLTSREMP3M, TEGLTSREMP4M])) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQTS5TOT - ZIPQTSREMPV5 - ZIPQTSREMPC5 - ZIPQTSREMP15
EXPRC = PRBC + _2PRBC + PEBFC
NINVRETOQ = max(min(INVOMLOGOQ, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP), 0) * 1 - V_CNR
ZIGGLOALL = is_positive(ZIGGLOA + ZIGGLOANR) * LIG2
LIGAUCUN = is_positive(positif_ou_nul(IAVIM - SEUIL_61) + positif_ou_nul(NAPCRP - SEUIL_61) * null(TOTNET) * null(NAPT) * 1 - is_positive(IREST) * 1 - is_positive(LIG80F) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * 1 - is_positive(NRINET) * 1 - null(V_REGCO - 2) * is_positive(20 - V_NOTRAIT) * LIG2)
RILMIZ_1 = max(min(AILMIZ, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB), 0)
DILMJV = LOCMEUBJV
TERPQFV = RPQFV * 1 - is_positive(INDTEFF) + TRPQFV * is_positive(INDTEFF)
LIGREPSAU = is_positive(REPSU + REPAU) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
# TODO REPAR1
SOMMEA804 = SOMMEANOEXP + is_positive(GLD1V) + is_positive(GLD2V) + is_positive(GLD3V) + is_positive(GLD1C) + is_positive(GLD2C) + is_positive(GLD3C)
NRCELJOQR = max(min(RCEL_JOQR, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM - NRCEL - NRCELJP - NRCELJBGL), 0)
PPE_RCONTP3 = arr(PPE_RTA3 * PPE_COEFF3)
LIG062V = CARPEV + CARPENBAV + PENSALV + PENSALNBV + CODRAZ
LIGNIRI = INDNIRI * null(IRNETBIS) * null(NATIMP) * null(NAPCRP) * 1 - is_positive(IRE) * 1 - is_positive(LIGIDB) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - is_positive(AVFISCOPTER) * 1 - null(V_REGCO - 2) * 1 - is_positive(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * 1 - is_positive(NRINET) * is_positive(20 - V_NOTRAIT) * LIG2
LIGSPEDREPV = is_positive(SPEDREPV) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
RESIVIAN2 = arr(arr(ACODIW / 9) * TX25 / 100)
TBICNPPROVC = max(0, arr(TMIB_ABNPVC / MIBNPVENC + TMIB_ABNPPC / MIBNPPRESC))
ZIPQTS32 = is_positive(TEGLTS4 + TEGLTSREMPTOT) * arr(IQUOTOT2 * TERPQTS3 / TETONEQUO1) + 1 - is_positive(TEGLTS4 + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTSV2 - ZIPQTSC2 - ZIPQTS12 - ZIPQTS22
DCELREPYA = CELREPYA
TERPQPALIM3M = RPQPALIM3M * 1 - is_positive(INDTEFF) + TRPQPALIM3M * is_positive(INDTEFF)
TIND_10V = positif_ou_nul(T10MINSV - TFRDV + COD1AE)
LIGROBOR = is_positive(RFROBOR) * LIG1 * LIG2
TGLPRRV = is_positive(TPRR2C + TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2V / TOTALQUO) + 1 - is_positive(TPRR2C + TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT
DEFBA3 = 1 - is_positive(BAHQT + BAQT) * DAGRI2 + is_positive(BAHQT + BAQT) * abs(min(max(BAHQT + BAQT - DAGRI6 - DAGRI5 - DAGRI4 - DAGRI3, 0) - DAGRI2, DAGRI2)) * positif_ou_nul(DAGRI2 - max(BAHQT + BAQT - DAGRI6 - DAGRI5 - DAGRI4 - DAGRI3, 0)) * 1 - is_positive(IPVLOC) * 1 - is_positive(ART1731BIS) + min(DAGRI2, DAGRI - DBAIP - DEFBA2) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + DAGRI2 * is_positive(is_positive(ART1731BIS * PREM8_11) + null(8 - CMAJ) + null(11 - CMAJ))
ABTPA = NDA * NAB * ABAT_UNVIEUX * 1 - V_CNR
TGLTS2M = is_positive(TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2TS2 / TOTALQUO) + 1 - is_positive(TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM - TGLTSCM - TGLTS1M
IDCSG = (arr(BDCSG * T_IDCSG / 100) - DCSGIM * is_positive(CSREC)) if (V_IND_TRAIT == 4) else (0 if (CRDEG == 0 and NAPCRP == 0) else (abs(DCSGD - V_IDANT)))
GLF1M = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENF1 / TOTALQUOHT) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFVM - GLFCM
RILMIY = max(0, RILMIY_1 * 1 - ART1731BIS + min(RILMIY_1, max(RILMIY_P + RILMIYP2, RILMIY1731 + 0) * 1 - PREM8_11) * ART1731BIS)
DILMIH = LOCMEUBIH
XBINPV = BICNPHEXV + BICNPEXV
TAXA9YI = is_positive(IPCAPTAXT + TAXLOY + IHAUTREVT) * arr(VAR9YIIR * max(0, TAXASSUR - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRN - IRANT)) / BINRIR) + 1 - is_positive(IPCAPTAXT + TAXLOY + IHAUTREVT) * max(0, VAR9YIIR - IR9YI)
BDON7UH = min(LIM15000, COD7UH)
SOMMEDD55 = sum([present(TSHALLO1) + present(ALLO1) + present(PRBR1) + present(PALI1) + present(PENIN1), present(TSHALLO2) + present(ALLO2) + present(PRBR2) + present(PALI2) + present(PENIN2), present(TSHALLO3) + present(ALLO3) + present(PRBR3) + present(PALI3) + present(PENIN3), present(TSHALLO4) + present(ALLO4) + present(PRBR4) + present(PALI4) + present(PENIN4), present(TSHALLOV) + present(ALLOV) + present(PRBRV) + present(PALIV) + present(PENINV), present(TSHALLOC) + present(ALLOC) + present(PRBRC) + present(PALIC) + present(PENINC)]) + present(CARTSV) + present(CARTSC) + present(CARTSP1) + present(CARTSP2) + present(CARTSP3) + present(CARTSP4) + present(CARTSNBAV) + present(CARTSNBAC) + present(CARTSNBAP1) + present(CARTSNBAP2) + present(CARTSNBAP3) + present(CARTSNBAP4) + present(REMPLAV) + present(REMPLAC) + present(REMPLAP1) + present(REMPLAP2) + present(REMPLAP3) + present(REMPLAP4) + present(REMPLANBV) + present(REMPLANBC) + present(REMPLANBP1) + present(REMPLANBP2) + present(REMPLANBP3) + present(REMPLANBP4) + present(CARPEV) + present(CARPEC) + present(CARPEP1) + present(CARPEP2) + present(CARPEP3) + present(CARPEP4) + present(CARPENBAV) + present(CARPENBAC) + present(CARPENBAP1) + present(CARPENBAP2) + present(CARPENBAP3) + present(CARPENBAP4) + present(PENSALV) + present(PENSALC) + present(PENSALP1) + present(PENSALP2) + present(PENSALP3) + present(PENSALP4) + present(PENSALNBV) + present(PENSALNBC) + present(PENSALNBP1) + present(PENSALNBP2) + present(PENSALNBP3) + present(PENSALNBP4) + present(PCAPTAXV) + present(PCAPTAXC) + present(CODRAZ) + present(CODRBZ) + present(CODRCZ) + present(CODRDZ) + present(CODREZ) + present(CODRFZ) + present(BACREV) + present(_4BACREV) + present(BA1AV) + present(BACDEV) + present(BACREC) + present(_4BACREC) + present(BA1AC) + present(BACDEC) + present(BACREP) + present(_4BACREP) + present(BA1AP) + present(BACDEP) + present(BAHREV) + present(_4BAHREV) + present(BAHDEV) + present(BAHREC) + present(_4BAHREC) + present(BAHDEC) + present(BAHREP) + present(_4BAHREP) + present(BAHDEP) + present(BICNOV) + present(BI1AV) + present(BICDNV) + present(BICNOC) + present(BI1AC) + present(BICDNC) + present(BICNOP) + present(BI1AP) + present(BICDNP) + present(BIHNOV) + present(BIHDNV) + present(BIHNOC) + present(BIHDNC) + present(BIHNOP) + present(BIHDNP) + present(MIBVENV) + present(MIBPRESV) + present(MIB1AV) + present(MIBDEV) + present(MIBVENC) + present(MIBPRESC) + present(MIB1AC) + present(MIBDEC) + present(MIBVENP) + present(MIBPRESP) + present(MIB1AP) + present(MIBDEP) + present(LOCPROCGAV) + present(LOCDEFPROCGAV) + present(LOCPROCGAC) + present(LOCDEFPROCGAC) + present(LOCPROCGAP) + present(LOCDEFPROCGAP) + present(LOCPROV) + present(LOCDEFPROV) + present(LOCPROC) + present(LOCDEFPROC) + present(LOCPROP) + present(LOCDEFPROP) + present(BICREV) + present(LOCNPCGAV) + present(BI2AV) + present(BICDEV) + present(LOCDEFNPCGAV) + present(BICREC) + present(LOCNPCGAC) + present(BI2AC) + present(BICDEC) + present(LOCDEFNPCGAC) + present(BICREP) + present(LOCNPCGAPAC) + present(BI2AP) + present(BICDEP) + present(LOCDEFNPCGAPAC) + present(BICHREV) + present(LOCNPV) + present(BICHDEV) + present(LOCDEFNPV) + present(BICHREC) + present(LOCNPC) + present(BICHDEC) + present(LOCDEFNPC) + present(BICHREP) + present(LOCNPPAC) + present(BICHDEP) + present(LOCDEFNPPAC) + present(MIBNPVENV) + present(MIBNPPRESV) + present(MIBNP1AV) + present(MIBNPDEV) + present(MIBNPVENC) + present(MIBNPPRESC) + present(MIBNP1AC) + present(MIBNPDEC) + present(MIBNPVENP) + present(MIBNPPRESP) + present(MIBNP1AP) + present(MIBNPDEP) + present(MIBMEUV) + present(MIBGITEV) + present(MIBMEUC) + present(MIBGITEC) + present(MIBMEUP) + present(MIBGITEP) + present(LOCGITCV) + present(LOCGITCC) + present(LOCGITCP) + present(LOCGITHCV) + present(LOCGITHCC) + present(LOCGITHCP) + present(LOCGITV) + present(LOCGITC) + present(LOCGITP) + present(BNCREV) + present(BN1AV) + present(BNCDEV) + present(BNCREC) + present(BN1AC) + present(BNCDEC) + present(BNCREP) + present(BN1AP) + present(BNCDEP) + present(BNHREV) + present(BNHDEV) + present(BNHREC) + present(BNHDEC) + present(BNHREP) + present(BNHDEP) + present(BNCPROV) + present(BNCPRO1AV) + present(BNCPRODEV) + present(BNCPROC) + present(BNCPRO1AC) + present(BNCPRODEC) + present(BNCPROP) + present(BNCPRO1AP) + present(BNCPRODEP) + present(BNCNPV) + present(BNCNP1AV) + present(BNCNPDEV) + present(BNCNPC) + present(BNCNP1AC) + present(BNCNPDEC) + present(BNCNPP) + present(BNCNP1AP) + present(BNCNPDEP) + present(BNCAABV) + present(ANOCEP) + present(PVINVE) + present(BNCAADV) + present(DNOCEP) + present(BNCAABC) + present(ANOVEP) + present(PVINCE) + present(BNCAADC) + present(DNOCEPC) + present(BNCAABP) + present(ANOPEP) + present(PVINPE) + present(BNCAADP) + present(DNOCEPP) + present(INVENTV) + present(INVENTC) + present(INVENTP)
LIGRPIQAC = is_positive(RIVPIQAC) * LIG1 * LIG2
RPQRWAM = inf(GLRWAM / CODNWA)
BPRESCOMP01 = max(0, 1 - present(SUBSTITRENTE) * positif_ou_nul(PLAFPRESCOMP - PRESCOMPJUGE) * PRESCOMPJUGE - BPRESCOMP + is_positive(PRESCOMPJUGE - PLAFPRESCOMP) * PLAFPRESCOMP - BPRESCOMP + present(SUBSTITRENTE) * positif_ou_nul(PLAFPRESCOMP - PRESCOMPJUGE) * SUBSTITRENTE - PRESCOMP2000 + is_positive(PRESCOMPJUGE - PLAFPRESCOMP) * arr(PLAFPRESCOMP * SUBSTITRENTE / PRESCOMPJUGE * SUBSTITRENTE - PRESCOMP2000 / SUBSTITRENTE) * 1 - V_CNR)
DISFPLAF = ISFPLAF
DREDREP = REDREPNPRO
MREGV = BREGV
NBQAR2 = null(V_0CF + V_0CR + V_0DJ - 1) * 1 / 2 * V_0CH - 1 * is_positive(V_0CH - 1) + 1 / 4 * is_positive(V_0CH + 0)
DCELRREDMG = CELRREDMG
LIGREPSG = is_positive(REPSG) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RRETU = max(0, RRETU_1 * 1 - ART1731BIS + min(RRETU_1, max(RRETU_P + RRETUP2, RRETU1731 + 0) * 1 - PREM8_11) * ART1731BIS)
TGLTSREMPCM = is_positive(TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2REMPC / TOTALQUO) + 1 - is_positive(TTSNN2REMP1 + TTSNN2REMP2 + TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPVM
RPQTSREMP2M = inf(GLTSREMP2M / REMPLANBP2)
BIHTAV = max(0, arr(BIHNOV - BIHDNV * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV)) + min(0, BIHNOV - BIHDNV * 1 - is_positive(ART1731BIS * PREM8_11))
INVRETPFRA = min(NINVRETPFR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA)) * 1 - V_CNR
TPRC = TSNC + PRNC - sum([GLN1C, GLN2C, GLN3C])
RCELREPHT = max(0, RCELREPHT_1 * 1 - ART1731BIS + min(RCELREPHT_1, max(RCELREPHT_P + RCELREPHTP2, RCELREPHT1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
DAGRIIMP = max(0, min(BAHQV + BAHQC + BAHQP + BAQV + BAQC + BAQP, DAGRI6 + DAGRI5 + DAGRI4 + DAGRI3 + DAGRI2 + DAGRI1))
NINVRETKG = max(min(INVSOCNRET, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT), 0) * 1 - V_CNR
BPRS = arr(RDRFPS * 1 - null(4 - V_REGCO) + COD8XK + COD8YK + RDRV + RDRCM + RDNP + RDNCP + RDPTP + ESFP + R1649 + PREREV * 1 - V_CNR) * 1 - is_positive(present(RE168) + present(TAX1649)) + RE168 + TAX1649 * 1 - V_CNR
TSPEBASABV = TSPETOTV
NINVRETAF = max(min(CODHAF, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA), 0) * 1 - V_CNR
LOIREST = is_positive(REST) * max(0, min(CILOYIMP, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB))
GLTSVM = is_positive(TSNN2TSC + TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2TSV / TOTALQUOHT) + 1 - is_positive(TSNN2TSC + TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM
# TODO TAXLOYANTAFF
RRCELLN = max(0, CELRREDLN - RCELRREDLN) * is_positive(CELRREDLN) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
GLPRRZ1 = is_positive(PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2Z1 / TOTALQUOHT) + 1 - is_positive(PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV - GLPRRZC
PLAF2M = null(1 - V_REGCO) * arr(25005 + 2921 * min(NBPT - 1 * 4, 2) * is_positive(NBPT - 1) + 2299 * NBPT - 1.5 * 4 * is_positive(NBPT - 1.5))
LIGTAXANET = is_positive(present(CESSASSV) + present(CESSASSC) * INDREV1A8IR + TAXANTAFF) * 1 - is_positive(ANNUL2042 + 0) * LIG1
EXSPB2 = EXTS2 + EXPR2
IND_10C = positif_ou_nul(_10MINSC - FRDC)
REPMEUOU = RETCODOU - RCODOU * is_positive(COD7OU + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIG4403 = is_positive(V_FORPA) * 1 - positif_ou_nul(BAFP) * LIG0
TEGLTS2M = GLTS2M * 1 - is_positive(INDTEFF) + TGLTS2M * is_positive(INDTEFF)
BMI = arr(RI1 + REVQUO - PRODOM - PROGUY)
PRNN2 = EXPR2 - APR2
XBICSC = XBICNETC + BA1AC
ZIGREVXE = is_positive(REVCSXE + COD8XJ) * TYPE2
BFCPI = BFCPI_1 * 1 - ART1731BIS + min(BFCPI_1, max(BFCPI_P + BFCPIP2, BFCPI1731 + 0) * 1 - PREM8_11) * ART1731BIS
INVRETQFR = min(INVRETQF, max(0, NINVRETQF - INVRETQF)) * 1 - V_CNR
GLNAV2C = max(GLD2C - ABGL2C, 0) * INDEFTSC
T10MINS2 = max(min(TTSB2, TDEDMIN2), TDFN2)
INVRETOM = min(NINVRETOM, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK)) * 1 - V_CNR
SOMMERCM = RCMAV + RCMABD + RCMTNC + REGPRIV + RCMHAB + RCMHAD + PROVIE + REVACT + REVPEA + RESTUC + INTERE + DISQUO + 0
LIGHAUTANT = APPLI_ILIAD * 1 - is_positive(20 - V_NOTRAIT) * is_positive(V_CHRANT + LIGHAUTNET * is_positive(HAUTREVNET)) * 1 - is_positive(LIG2051) * TYPE2 * 1 - APPLI_OCEANS
INDRSE3X = is_positive(CS_DEG) * is_positive(BRSE3) * is_positive(INDCTX)
IND_APB4 = positif_ou_nul(PLR4 - EXPR4 * TX_DEDPER / 100)
IPQTSREMPANTC1 = ZIPQTSREMPANTC1 * REMPLANBC
RDRCM1NEGPLAF = min(COD2FA, abs(RDRCM1))
RCODIM = max(0, RCODIM_1 * 1 - ART1731BIS + min(RCODIM_1, max(RCODIM_P + RCODIMP2, RCODIM1731 + 0) * 1 - PREM8_11) * ART1731BIS)
LIGISFRAN = is_positive(ISFDONF) * 1 - is_positive(ANNUL2042) * 1 - null(5 - V_IND_TRAIT) * LIGISF + present(ISFDONF) * is_positive(DISFBASE) * 1 - is_positive(ANNUL2042) * null(5 - V_IND_TRAIT)
BGLOA = GLDGRATV + GLDGRATC * 1 - V_CNR * 1 - is_positive(present(TAX1649) + present(RE168))
ZIPQTS5TOT = sum([ZIPQTSV5, ZIPQTSC5, ZIPQTS15, ZIPQTS25, ZIPQTS35, ZIPQTS45])
TGLRCMTS = is_positive(_6RCM + _7RCM + REVRF) * arr(TONEQUO * _5RCM / TOTALQUO) + 1 - is_positive(_6RCM + _7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC - TGLRCMFU - TGLRCMCH
ZIPQTSREMPC5 = is_positive(sum([TEGLTSREMP1M, TEGLTSREMP2M, TEGLTSREMP3M, TEGLTSREMP4M])) * arr(IQUOTOT5 * TERPQTSREMPCM / TETONEQUOM1) + 1 - is_positive(sum([TEGLTSREMP1M, TEGLTSREMP2M, TEGLTSREMP3M, TEGLTSREMP4M])) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQTS5TOT - ZIPQTSREMPV5
RLOC58 = max(min(INVRETRP * 1 - INDPLAF + INVRETRPA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57])), 0) * 1 - V_CNR
MIB_NP1AC = MIBNP1AC - MIBNPDEC
RENT33 = max(min(INVRETAKR * 1 - INDPLAF + INVRETAKRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30, RENT31, RENT32])), 0) * 1 - V_CNR
DEDMIN4 = is_positive(DETS4) * MIN_DEMEMPLOI + 1 - is_positive(DETS4) * MIN_DEDSFORFTS
TSPRDV = min(0, TSNNV + PRRV) * ART1731BIS
ABTSRAP = is_positive(REMPLAV) * is_positive(CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * arr(REP10V * REMPLAV / TSBV) + 1 - is_positive(CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * max(0, REP10V - ABTS1AJ - ABTS1AP - ABTS1TT - ABTS3VJ - ABTSRAJ)
RNTNC = RTNC
ZIGCVNANT = is_positive(V_CVNANT) * TYPE2 * 1 - APPLI_OCEANS
IPQRVO62 = ZIPQRVO62 * RENTAXNB6
REPENT4 = INVOMENTMN + RETROCOMMB + RETROCOMMC + RETROCOMLH + RETROCOMLI + INVOMENTKT + INVOMENTKU
BCSGAPS = arr(RDRFAPS * 1 - null(4 - V_REGCO) + RDRVAPS + RDRCMAPS + RDNP + ESFP + R1649 + PREREV * 1 - V_CNR) * 1 - is_positive(present(RE168) + present(TAX1649)) + RE168 + TAX1649 * 1 - V_CNR
ZIGLOANT = is_positive(V_GLOANT) * TYPE2 * 1 - APPLI_OCEANS
TPRN3 = is_positive(TTSNT3) * is_positive(TTSNT3 + TPRNN3) * TTSNT3 + TPRNN3 + positif_ou_nul(TTSNT3) * TPRNN3
TEGLRVOTOTM = TEGLRVOM + TEGLRVO5M + TEGLRVO6M + TEGLRVO7M
INVRETQMA = min(NINVRETQM, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA)) * 1 - V_CNR
ACELFABC = BCEL_FABC * 1 - ART1731BIS + min(BCEL_FABC, max(ACELFABC_P + ACELFABCP2, ACELFABC1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(DCELFABC) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BASEDONF = min(REPDON03, arr(REVDON * TX_BASEDUP / 100))
TGLPRR3M = is_positive(TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR23 / TOTALQUO) + 1 - is_positive(TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M
GLRVOTOT = GLRVO + GLRVO5 + GLRVO6 + GLRVO7
BANV = BACREV - DEFBACREV * positif_ou_nul(BARAV) + BARAV * 1 - is_positive(BARAV)
INVRETQV = NINVRETQV * 1 - V_CNR
RCEL_HM_R = is_positive(CELLIERHM) * arr(ACELHM_R * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NRCELRREDLZ = max(min(CELRREDLZ, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF])), 0)
PPE_BOOL_TPU = is_positive(is_positive(PPETPP1 + PPETPP2 + PPETPP3 + PPETPP4) * is_positive(PPE_SALAVDEF1 + PPE_SALAVDEF2 + PPE_SALAVDEF3 + PPE_SALAVDEF4) + null(PPENHP1 + PPENHP2 + PPENHP3 + PPENHP4 + PPEXT1 + PPEXT2 + PPEXT3 + PPEXT4 + 0) * null(PPETPP1 + PPETPP2 + PPETPP3 + PPETPP4 + 0) * is_positive(PPE_SALAVDEF1 + PPE_SALAVDEF2 + PPE_SALAVDEF3 + PPE_SALAVDEF4) + is_positive(360 / PPENBJ * PPENHP1 + PPENHP2 + PPENHP3 + PPENHP4 + PPEXT1 + PPEXT2 + PPEXT3 + PPEXT4 * is_positive(PPE_SALAVDEF1 + PPE_SALAVDEF2 + PPE_SALAVDEF3 + PPE_SALAVDEF4) / 1820 + PPENJP * is_positive(PPE_AVRPRO1P + 0) / 360 - 1) + positif_ou_nul(PPENHP1 + PPENHP2 + PPENHP3 + PPENHP4 + PPEXT1 + PPEXT2 + PPEXT3 + PPEXT4 * is_positive(PPE_SALAVDEF1 + PPE_SALAVDEF2 + PPE_SALAVDEF3 + PPE_SALAVDEF4) - 1820) + positif_ou_nul(PPENJP * is_positive(PPE_AVRPRO1P + 0) - 360) + is_positive(PPEACP * is_positive(PPE_AVRPRO1P + 0)) + 1 - is_positive(PPENJP * is_positive(PPE_AVRPRO1P + 0)) * is_positive(PPE_AVRPRO1P + 0) * PPE_BOOL_SEULPAC)
TEGLPRRZ1M = GLPRRZ1M * 1 - is_positive(INDTEFF) + TGLPRRZ1M * is_positive(INDTEFF)
INVRETOG = min(NINVRETOG, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF)) * 1 - V_CNR
GL4V = arr(TONEQUOHT * REV4V / TOTALQUOHT)
NRCELJP = max(min(RCEL_JP, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM - NRCEL), 0)
REPLNPX = REPMEUIA + REPMEUJW + REPLOCIV + REPLOCIN + REPLOCIJ + REPLOC7IE + REPMEUOC
RRESINEUV1 = arr(arr(ACODIL / 9) * TX20 / 100)
TTSNGL2C = GLD2C - TABGL2C
LIGINRTAX22 = is_positive(RETTAXA22)
LIG1510 = is_positive(is_positive(IPMOND) * present(IPTEFN) + is_positive(INDTEFF) * 1 - is_positive(TEFFREVTOT)) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * 1 - is_positive(DEFRIMOND) * LIG1 * LIG2
APB3 = max(PLR3, EXPR3 * TX_DEDPER / 100)
NCC = V_0AS * BOOL_0AM * 1 - is_positive(V_0AP + V_0AF) * 0.5 * is_positive(max(AGV + 1 - LIM_AGE_LET_S, AGC + 1 - LIM_AGE_LET_S))
TEGLPRRCM = GLPRRCM * 1 - is_positive(INDTEFF) + TGLPRRCM * is_positive(INDTEFF)
TAPR4 = TIND_APB4 * TABPR4 + 1 - TIND_APB4 * min(TABPR4, TPL_PB - 1 - TIND_APBV * TAPRV - 1 - TIND_APBC * TAPRC - 1 - TIND_APB1 * TAPR1 - 1 - TIND_APB2 * TAPR2 - 1 - TIND_APB3 * TAPR3)
TD10M4 = TIND_MIN4 * TDFN4 + 1 - TIND_MIN4 * T10MINS4
NOCEPIMPV = is_positive(ANOCEP - DNOCEP * 1 - is_positive(ART1731BIS * PREM8_11)) * arr(ANOCEP - DNOCEP * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV) + positif_ou_nul(DNOCEP * 1 - is_positive(ART1731BIS * PREM8_11) - ANOCEP) * ANOCEP - DNOCEP * 1 - is_positive(ART1731BIS * PREM8_11) + BNNAAV
LIGNIIRDEG = null(IDRS3 - IDEC) * null(IBM23) * 1 - is_positive(IRE) * null(TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES + NAPCRP) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIG2501) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET - SEUIL_12) * 1 - is_positive(NRINET - SEUIL_12) * is_positive(1 + null(3 - INDIRPS)) * is_positive(V_NOTRAIT - 20) * LIG2
TBICNPABP = min(TBICNPPROVP, arr(TMIB_ABNPVP / MIBNPVENP + TMIB_ABNPPP / MIBNPPRESP))
TIND_APB3 = positif_ou_nul(TPLR3 - TEXPR3 * TX_DEDPER / 100)
LIGCEL = is_positive(DCEL) * LIG1 * LIG2
ZIGRSECOR5 = ZIGRSECOR * null(ANCSDED2 - V_ANREV + 5)
DILMOB = COD7OB
TGLTS1M = is_positive(TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2TS1 / TOTALQUO) + 1 - is_positive(TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM - TGLTSCM
# TODO NAPRSE1
TMIB_ABPC = max(0, arr(TMIB_APC * MIBPRESC + AUTOBICPC / TMIB_TPRESC))
TOTALPLAF2 = INVRETPB + INVRETPF + INVRETPJ + INVRETPA + INVRETPE + INVRETPI + INVRETPY + INVRETPX + INVRETRG + INVRETPD + INVRETPH + INVRETPL + INVRETRI + INVRETSB + INVRETSG + INVRETSA + INVRETSF + INVRETSC + INVRETSH + INVRETSE + INVRETSJ + INVRETAB + INVRETAG + INVRETAA + INVRETAF + INVRETAC + INVRETAH + INVRETAE + INVRETAJ + INVRETOI + INVRETOJ + INVRETOK + INVRETOP + INVRETOQ + INVRETOR + INVRETOE + INVRETOF + INVRETUB + INVRETUC + INVRETPBR + INVRETPFR + INVRETPJR + INVRETPAR + INVRETPER + INVRETPIR + INVRETPYR + INVRETPXR + INVRETSBR + INVRETSGR + INVRETSAR + INVRETSFR + INVRETABR + INVRETAGR + INVRETAAR + INVRETAFR
BSN2 = min(COD7CQ + COD7CR + RDSNO, LIM_TITPRISE * 1 + BOOL_0AM - BSN1)
PPENARPRIME1 = PPE_FORMULE1 * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCOND1 - 2) * 1 - PPE_BOOL_TP1 + arr(PPE_FORMULE1 * PPETXMAJ1) + arr(PPE_FORMULE1 * PPE_COEFF1 * PPETXMAJ2) * is_positive(2 - PPE_COEFFCOND1) * is_positive(PPE_COEFFCOND1 - 1) * 1 - PPE_BOOL_TP1 + PPE_FORMULE1 * is_positive(PPE_BOOL_TP1 + positif_ou_nul(1 - PPE_COEFFCOND1))
PERPINDAFFP = is_positive(PERPINDP * 1 - V_CNR * 1 - is_positive(ANNUL2042) * null(IND_BTANC - 1) * is_positive(PERPIMPATRIE + 0) * is_positive(PERPPLAFNUNP + PERPPLAFP + positif_ou_nul(PERPP) * is_positive(PERPREVTOTP)) + 1 - is_positive(PERPIMPATRIE + 0) * present(PERPPLAFCP) + present(V_BTPERPP) * present(PERPPLAFNUP1) + present(V_BTPERPNUP1) * present(PERPPLAFNUP2) + present(V_BTPERPNUP2) * present(PERPPLAFNUP3) + present(V_BTPERPNUP3) + null(IND_BTANC - 2) * is_positive(V_BTPERPP + V_BTPERPNUP1 + V_BTPERPNUP2 + V_BTPERPNUP3 + PERPPLAFCP + PERPPLAFNUP1 + PERPPLAFNUP2 + PERPPLAFNUP3))
RSE5N = max(0, RSE5 - CIRSE5)
TPRN4 = is_positive(TTSNT4) * is_positive(TTSNT4 + TPRNN4) * TTSNT4 + TPRNN4 + positif_ou_nul(TTSNT4) * TPRNN4
RPQPRRZC = inf(GLPRRZC / CODNBZ)
ZIPQPRRZ42 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPRRZ4 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRRZV2 - ZIPQPRRZC2 - ZIPQPRRZ12 - ZIPQPRRZ22 - ZIPQPRRZ32
LIGRCMIMPAT = is_positive(RCMIMPAT) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REPKU = max(0, INVOMENTKU - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - INVOMENTMN - RETROCOMMB - RETROCOMMC - RETROCOMLH - RETROCOMLI - INVOMENTKT)) * 1 - ART1731BIS + max(0, INVOMENTKU - max(0, RCOLENT - REPENT5 - INVOMENTMN - RETROCOMMB - RETROCOMMC - RETROCOMLH - RETROCOMLI - INVOMENTKT)) * ART1731BIS * 1 - V_CNR
DS015 = max(QF015 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF015 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF015 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF015 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF015 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
ACELREPYF = CELREPYF * 1 - ART1731BIS + min(CELREPYF, max(ACELREPYF_P + ACELREPYFP2, ACELREPYF1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RILMJY_1 = max(min(AILMJY, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA), 0)
LIGINRLOY = is_positive(RETLOY)
LIGNMAJTAXA3 = TYPE2 * is_positive(NMAJTAXA3)
LIG_DEFNPI = is_positive(present(DEFBIC6) + present(DEFBIC5) + present(DEFBIC4) + present(DEFBIC3) + present(DEFBIC2) + present(DEFBIC1)) * LIG0 * LIG2
LIGREP7UP = is_positive(REPCIF) * LIG1 * LIG2
INVRETRPA = min(arr(NINVRETRP * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA)) * 1 - V_CNR
INETABAEAJ2 = max(0, IPROGUY2 + IQUOEAJ2 - ABAGU2)
RIVCELNBGL4 = RIVCELNBGL1
TGLNAV1C = max(GLD1C - TABGL1C, 0)
RCM_I = _1RCM_I + _2RCM_I + _3RCM_I + _4RCM_I + _5RCM_I + _6RCM_I + _7RCM_I
NPLOCPAC = min(0, LOCNPPAC + LOCGITHCP - LOCDEFNPPAC * 1 - is_positive(ART1731BIS * PREM8_11)) * positif_ou_nul(LOCDEFNPPAC * 1 - is_positive(ART1731BIS * PREM8_11) - LOCNPPAC - LOCGITHCP) + arr(max(0, LOCNPPAC + LOCGITHCP - LOCDEFNPPAC * 1 - is_positive(ART1731BIS * PREM8_11)) * MAJREV) * is_positive(LOCNPPAC + LOCGITHCP - LOCDEFNPPAC * 1 - is_positive(ART1731BIS * PREM8_11))
TGLRVO6 = is_positive(_2RV4 + REVRCM + REVRF) * arr(TONEQUO * _2RV3 / TOTALQUO) + 1 - is_positive(_2RV4 + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLPRRTOT - TGLTSREMPTOT - TGLRVO - TGLRVO5
PERP_INDC = is_positive(0 + is_positive(TSHALLOC) + is_positive(ALLOC) + is_positive(GLD1C) + is_positive(GLD2C) + is_positive(GLD3C) + is_positive(GLDGRATC) + is_positive(BPCOSAC) + is_positive(TSASSUC) + is_positive(CARTSC) + is_positive(FEXC) + is_positive(BAFC) + is_positive(BAFPVC) + is_positive(BAEXC) + is_positive(BACREC) + is_positive(_4BACREC) + is_positive(BACDEC * 1 - is_positive(ART1731BIS)) + is_positive(BAHEXC) + is_positive(BAHREC) + is_positive(_4BAHREC) + is_positive(BAHDEC * 1 - is_positive(ART1731BIS)) + is_positive(BAPERPC) + is_positive(MIBEXC) + is_positive(MIBVENC) + is_positive(MIBPRESC) + is_positive(MIBPVC) + is_positive(AUTOBICVC) + is_positive(AUTOBICPC) + is_positive(BICEXC) + is_positive(BICNOC) + is_positive(BICDNC * 1 - is_positive(ART1731BIS)) + is_positive(BIHEXC) + is_positive(BIHNOC) + is_positive(BIHDNC * 1 - is_positive(ART1731BIS)) + is_positive(BIPERPC) + is_positive(LOCPROCGAC) - is_positive(LOCDEFPROCGAC * 1 - is_positive(ART1731BIS)) + is_positive(LOCPROC) - is_positive(LOCDEFPROC * 1 - is_positive(ART1731BIS)) + is_positive(BNCPROEXC) + is_positive(BNCPROC) + is_positive(BNCPROPVC) + is_positive(AUTOBNCC) + is_positive(BNCEXC) + is_positive(BNCREC) + is_positive(BNCDEC * 1 - is_positive(ART1731BIS)) + is_positive(BNHEXC) + is_positive(BNHREC) + is_positive(BNHDEC * 1 - is_positive(ART1731BIS)) + is_positive(BNCCRC))
BAHQTOTMAXN = positif_ou_nul(BAHQT) * min(0, BAHQV + BAHQC + BAHQP - TOTDAGRI * 1 - ART1731BIS)
LIGILMOC = is_positive(DILMOC) * LIG1 * LIG2
NB0BTQAR = null(1 - VAR0BT) * null(V_0CF + V_0DJ + V_0CR - 1) * 2 * V_0CH - 1 * is_positive(V_0CH - 1) + 1 * is_positive(V_0CH + 0) + positif_ou_nul(V_0CF + V_0DJ + V_0CR - 2) * 2 * V_0CH
XBICHDP = BICEXP + BICNOP
ZIGCDIS = is_positive(BCDIS + V_CDISANT) * LIG2
REPINVPMECU = max(0, PETIPRISE - max(0, LIM_SOCNOUV2 * 1 + BOOL_0AM - min(REPSNO3, LIM_SOCNOUV2 * 1 + BOOL_0AM) + REPSNO2 + REPSNO1 + REPSNON)) * 1 - V_CNR
NRCELREPYF = max(min(ACELREPYF, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG])), 0)
GL4VM = arr(TONEQUOMHT * REV4V / TOTALQUOHT)
GLOBASE = CGLOA - COD8YL
ABATOT32 = ABADO32 + ABAGU32
PERPPLATPANT = 1 - is_positive(present(PERPPLAFCP) + present(PERPPLAFNUP1) + present(PERPPLAFNUP2) + present(PERPPLAFNUP3)) * V_BTPERPTOTP + is_positive(present(PERPPLAFCP) + present(PERPPLAFNUP1) + present(PERPPLAFNUP2) + present(PERPPLAFNUP3)) * PERPPLAFCP + PERPPLAFNUP1 + PERPPLAFNUP2 + PERPPLAFNUP3
_1RAO = max(0, REGPRIVM)
ACELFABC_R = positif_ou_nul(DCELFABC) * BCEL_FABC * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RESTIMOX = min(COD7SX, LIM_RESTIMO - RESTIMOD - RESTIMOB - RESTIMOC - RESTIMOF - RESTIMOY - RESTIMOA - RESTIMOE)
TSQCJ = _2TSNC + CODDBJ + CODEBJ
INVRETOT = min(NINVRETOT, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR)) * 1 - V_CNR
LIGCULTURE = present(CIAQCUL) * LIG1 * LIG2
DEDMINC = is_positive(DETSC) * MIN_DEMEMPLOI + 1 - is_positive(DETSC) * MIN_DEDSFORFTS
CS_RTF = RDPTP + RDNCP
ZIGREVXD = is_positive(REVCSXD) * TYPE2
REPTB = max(0, CODHTB - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW)) * 1 - ART1731BIS + max(0, CODHTB - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM - CODHSR - CODHSW)) * ART1731BIS * 1 - V_CNR
PERPDCOTP = 1 - is_positive(PERPIMPATRIE) * min(PERP_COTP, PERPPLATPANT) + is_positive(PERPIMPATRIE) * min(PERP_COTP, PERPPLAFIMPP)
RCODJT7 = RCODJT1
TTSPRC = TTSNNC + TPRRC * 1 - PREM8_11 + max(0, TTSNNC + TPRRC) * PREM8_11
NRCELRREDMH = max(min(CELRREDMH, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG), 0)
IPQF21 = ZIPQF21 * COTF2
TEGLRVG = GLRVG * 1 - is_positive(INDTEFF) + TGLRVG * is_positive(INDTEFF)
BPTPSJ = BTPSJ * 1 - is_positive(present(TAX1649) + present(RE168))
NB2 = 1 + BOOL_0AM + BOOL_0AZ * V_0AV
RETREPMEU = arr(DREPMEU * TX25 / 100) * 1 - V_CNR
RCELHJK = max(0, RCELHJK_1 * 1 - ART1731BIS + min(RCELHJK_1, max(RCELHJK_P + RCELHJKP2, RCELHJK1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RCMRTNC = arr(RCMTNC * 40 / 100)
RCELRREDLC_1 = max(min(ACELRREDLC, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1), 0)
TFRDVREP = is_positive(ART1731BIS) * max(0, FRNV - TFRDV) * null(TIND_10V)
REPLI = max(0, RETROCOMLI - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - INVOMENTMN - RETROCOMMB - RETROCOMMC - RETROCOMLH)) * 1 - ART1731BIS + max(0, RETROCOMLI - max(0, RCOLENT - REPENT5 - INVOMENTMN - RETROCOMMB - RETROCOMMC - RETROCOMLH)) * ART1731BIS * 1 - V_CNR
RCELREPHF_1 = max(min(ACELREPHF, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIGRSECOR1 = ZIGRSECOR * null(ANCSDED2 - V_ANREV + 1)
LIGIREXITI = is_positive(IREXITI) * 1 - is_positive(IREXITS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
LIGLOCRES2 = is_positive(RIVL2RES) * LIG1
IND_ZIGPROF = is_positive(V_NOTRAIT - 20) * is_positive(present(RCSV) + present(RCSC) + present(RCSP))
PPE_BOOL_TP1 = is_positive(is_positive(PPETPP1) * is_positive(PPE_SALAVDEF1 + 0) + null(PPENHP1 + PPEXT1 + 0) * null(PPETPP1 + 0) * is_positive(PPE_SALAVDEF1) + positif_ou_nul(360 / PPENBJ * PPENHP1 + PPEXT1 * is_positive(PPE_SALAVDEF1 + 0) - 1820))
RRESTIMO = max(0, RRESTIMO_1 * 1 - ART1731BIS + min(RRESTIMO_1, max(RRESTIMO_P + RRESTIMOP2, RRESTIMO1731 + 0) * 1 - PREM8_11) * ART1731BIS)
T2PRB2 = CARPEP2 + PENSALP2 + CODRDZ
TEGLRCMGOM = GLRCMGOM * 1 - is_positive(INDTEFF) + TGLRCMGOM * is_positive(INDTEFF)
IBM13 = IAD11 + ITP + REI + AUTOVERSSUP + TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES + AVFISCOPTER
IPQPRRZC5 = ZIPQPRRZC5 * CODNBZ
TABTSRBP = is_positive(CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * arr(TREP10C * REMPLAC / TTSBC) + 1 - is_positive(CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * max(0, TREP10C - TABTS1BJ - TABTS1BC - TABTS1BP - TABTS3VK - TABTS1UT - TABTSRBJ)
TREP10C = TIND_10C * TD10MC + 1 - TIND_10C * TFPTC
PRQNP = sum([_2PRB1, _2PRB2, _2PRB3, _2PRB4])
LIG_GATASA = positif_ou_nul(BPCOSAV + BPCOSAC + GLDGRATV + GLDGRATC) * LIG0 * LIG2
INVRETTDA = min(NINVRETTD, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA)) * 1 - V_CNR
RCEL_HJK_R = is_positive(CELLIERHJ) * arr(ACELHJK_R * TX25 / 100) + is_positive(CELLIERHK) * arr(ACELHJK_R * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ACELREPYJ = CELREPYJ * 1 - ART1731BIS + min(CELREPYJ, max(ACELREPYJ_P + ACELREPYJP2, ACELREPYJ1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PMIB_NETPP = MIBPRESP - PMIB_APP
TERPQF4 = RPQF4 * 1 - is_positive(INDTEFF) + TRPQF4 * is_positive(INDTEFF)
RIVCELJBGL1 = RCEL_JBGL_R * is_positive(ACELJBGL_R)
NINVRETAK = max(min(CODHAK, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF), 0) * 1 - V_CNR
INVRETPXRA = min(NINVRETPXR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA)) * 1 - V_CNR
AUBAINE11 = max(0, min(V_A11REEL, V_DIFTEOREEL - AUBAINE13A - AUBAINE13B - AUBAINE12))
NPLOCSSV = min(0, LOCNPV + LOCGITHCV - LOCDEFNPV) * positif_ou_nul(LOCDEFNPV - LOCNPV - LOCGITHCV) + arr(max(0, LOCNPV + LOCGITHCV - LOCDEFNPV) * MAJREV) * is_positive(LOCNPV + LOCGITHCV - LOCDEFNPC)
TTPR2 = TTSN2 + TPRN2
INVRETQGR = min(arr(INVRETQG * 3 / 2), NINVRETQG - INVRETQG) * 1 - V_CNR
INVRETSFA = min(arr(NINVRETSF * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA)) * 1 - V_CNR
LIGREPSB = is_positive(REPSB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
REPKI = max(0, INVOMSOCKI - max(0, RRIREP - INVSOCNRET - INVOMSOCKH)) * 1 - ART1731BIS + max(0, INVOMSOCKI - max(0, RDOMSOC1 - INVSOCNRET - INVOMSOCKH)) * ART1731BIS * 1 - V_CNR
REV4RAJV = max(CARTSV - ABTSRAJ, 0)
LIGREPSAH = is_positive(REPSH + REPAH) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
DCELJOQR = CELLIERJO + CELLIERJQ + CELLIERJR
LIGREPRJ = is_positive(REPRJ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TSNN2REMP4 = is_positive(TS4) * TS4 - TSNN4 - TSNN2TS4
LIGPPEJV = positif_ou_nul(360 - PPENJV) * is_positive(INDLIGPPE) * LIG0 * LIG2 * present(PPENJV) * is_positive(PPENJV) + is_positive(PPESAISITPV) * is_positive(PPEACV)
BNNSP = is_positive(BNHREP - BNHDEP * 1 - is_positive(ART1731BIS * PREM8_11)) * arr(BNHREP - BNHDEP * 1 - is_positive(ART1731BIS * PREM8_11) * MAJREV) + 1 - positif_ou_nul(BNHREP - BNHDEP * 1 - is_positive(ART1731BIS * PREM8_11)) * BNHREP - BNHDEP * 1 - is_positive(ART1731BIS * PREM8_11)
ZIPQPRRZ25 = is_positive(sum([TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPRRZ2M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZV5 - ZIPQPRRZC5 - ZIPQPRRZ15
BA1P = BA1AP + BAF1AP
TTSNN2REMP2 = is_positive(TTS2) * TTS2 - TTSNN2 - TTSNN2TS2
PRSE3 = PTORSE3
LIG1740 = is_positive(RECOMP) * LIG2
DEC11 = min(max(arr(SEUIL_DECOTE1 * 1 - BOOL_0AM + SEUIL_DECOTE2 * BOOL_0AM - IDOM11), 0), IDOM11) * 1 - V_ANC_BAR + min(max(arr(SEUIL_DECOTEA / 2 - IDOM11 / 2), 0), IDOM11) * V_ANC_BAR * 1 - V_CNR
FRAN = is_positive(RCMABD) * null(4 - V_IND_TRAIT) * is_positive(REVACT + RTCAR + RCMNAB) * arr(RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS * RCMABD / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(REVACT + RTCAR + RCMNAB) * RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS + null(5 - V_IND_TRAIT) * is_positive(REVACT + RTCAR + RCMNAB) * arr(RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS * RCMABD / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(REVACT + RTCAR + RCMNAB) * RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS
TRPQTSCM = inf(TGLTSCM / CARTSNBAC)
INVRETQN = min(arr(NINVRETQN * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI)) * 1 - V_CNR
INTMS = inf(MOISAN / 10000)
RLOC96 = max(min(INVRETSF * 1 - INDPLAF + INVRETSFA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95])), 0) * 1 - V_CNR
LIG13 = is_positive(present(BACDEV) + present(BACREV) + present(BAHDEV) + present(BAHREV) + present(BACDEC) + present(BACREC) + present(BAHDEC) + present(BAHREC) + present(BACDEP) + present(BACREP) + present(BAHDEP) + present(BAHREP) + present(_4BAHREV) + present(_4BAHREC) + present(_4BAHREP) + present(_4BACREV) + present(_4BACREC) + present(_4BACREP) + present(BAFV) + present(BAFC) + present(BAFP) + present(BAFORESTV) + present(BAFORESTC) + present(BAFORESTP) + present(BAFPVV) + present(BAFPVC) + present(BAFPVP)) * 1 - is_positive(IPVLOC) * 1 - is_positive(ANNUL2042) * LIG1
TERPQTS2M = RPQTS2M * 1 - is_positive(INDTEFF) + TRPQTS2M * is_positive(INDTEFF)
TSNN2CAFF = is_positive(TSC) * is_positive(CARTSC + REMPLAC) * arr(TSC * _2TSNC / EXTSC) + 1 - is_positive(CARTSC + REMPLAC) * TSC - TSNNC + is_positive(CODDBJ + CODEBJ) * max(CODDBJ - ABDOMDBJ, 0) + max(CODEBJ - ABDOMEBJ, 0)
RESINEUV3 = arr(arr(ACODIN / 9) * TX20 / 100) + arr(arr(ACODIJ / 9) * TX18 / 100) + arr(arr(ACODIV / 9) * TX18 / 100)
LIGISFBRUT = is_positive(ISFBRUT) * 1 - is_positive(ANNUL2042) * LIGISF * 1 - null(5 - V_IND_TRAIT) * is_positive(ISFDONF + ISFDONEURO + ISFPMEDI + ISFPMEIN + ISFFIP + ISFFCPI) + is_positive(ISFBRUT) * 1 - is_positive(ANNUL2042) * null(5 - V_IND_TRAIT) * is_positive(present(ISFDONF) + present(ISFDONEURO) + present(ISFPMEDI) + present(ISFPMEIN) + present(ISFFIP) + present(ISFFCPI))
PLAFCDPART = is_positive(V_0AL) * PLAF_CDPART
LIGREPSAY = is_positive(REPSY + REPAY) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TRPQRF1M = inf(TGLRF1M / FONCINB)
NRCELHL = max(min(RCEL_HL, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM), 0)
MIB_ABVP = max(0, arr(MIB_AVP * MIBVENP / MIB_TVENP))
PERPREVTOTV = max(0, PERPSALNV + PERPNONSALV)
LIGTTPVQ = is_positive(is_positive(CARTSV) + is_positive(CARTSC) + is_positive(CARTSP1) + is_positive(CARTSP2) + is_positive(CARTSP3) + is_positive(CARTSP4) + is_positive(REMPLAV) + is_positive(REMPLAC) + is_positive(REMPLAP1) + is_positive(REMPLAP2) + is_positive(REMPLAP3) + is_positive(REMPLAP4) + is_positive(PEBFV) + is_positive(PEBFC) + is_positive(PEBF1) + is_positive(PEBF2) + is_positive(PEBF3) + is_positive(PEBF4) + is_positive(CARPEV) + is_positive(CARPEC) + is_positive(CARPEP1) + is_positive(CARPEP2) + is_positive(CARPEP3) + is_positive(CARPEP4) + is_positive(CODRAZ) + is_positive(CODRBZ) + is_positive(CODRCZ) + is_positive(CODRDZ) + is_positive(CODREZ) + is_positive(CODRFZ) + is_positive(PENSALV) + is_positive(PENSALC) + is_positive(PENSALP1) + is_positive(PENSALP2) + is_positive(PENSALP3) + is_positive(PENSALP4) + is_positive(RENTAX) + is_positive(RENTAX5) + is_positive(RENTAX6) + is_positive(RENTAX7) + is_positive(REVACT) + is_positive(REVPEA) + is_positive(PROVIE) + is_positive(DISQUO) + is_positive(RESTUC) + is_positive(INTERE) + is_positive(FONCI) + is_positive(REAMOR) + is_positive(_4BACREV) + is_positive(_4BACREC) + is_positive(_4BACREP) + is_positive(_4BAHREV) + is_positive(_4BAHREC) + is_positive(_4BAHREP) + is_positive(GLD1V) + is_positive(GLD1C) + is_positive(GLD2V) + is_positive(GLD2C) + is_positive(GLD3V) + is_positive(GLD3C) + is_positive(CODDAJ) + is_positive(CODEAJ) + is_positive(CODDBJ) + is_positive(CODEBJ) + is_positive(CODRVG)) * LIG1 * LIG2 * 1 - null(4 - V_REGCO)
REPRI = max(0, INVOMENTRI - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW - INVOMRETPR - INVOMRETPW)) * 1 - ART1731BIS + max(0, INVOMENTRI - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW - INVOMRETPR - INVOMRETPW)) * ART1731BIS * 1 - V_CNR
RCODJT1 = arr(arr(ACODJT / 9) * TX11 / 100)
RNBE_1 = RDENS + RDENL + RDENU + RDENSQAR + RDENLQAR + RDENUQAR
LIGHAUTNET = is_positive(BHAUTREV * INDREV1A8IR + HAUTREVANTAF) * 1 - is_positive(ANNUL2042 + 0) * LIG1
ZIPQ25 = is_positive(sum([TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQ2M / TETONEQUOM1) + 1 - is_positive(sum([TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7 - ZIPQRWB5 - ZIPQRWA5 - ZIPQRVG5 - ZIPQ15
RPQPRRCM = inf(GLPRRCM / CARPENBAC)
REPDOMSOC1 = REPRA + REPRB + REPRC + REPRD
TETONEQUO1 = TONEQUO1 * 1 - is_positive(INDTEFF) + TONEQUO1T * is_positive(INDTEFF)
INVRETRC = min(arr(NINVRETRC * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA - INVRETRB)) * 1 - V_CNR
RRS = arr(BSURV * TX_REDSURV / 100) * 1 - V_CNR
RSOC22 = arr(max(min(INVRETQKR * 1 - INDPLAF + INVRETQKRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21])), 0)) * 1 - V_CNR
RRFIPS = RRFI
SOMDEFTS = FRNV * is_positive(FRNV - _10MINSV) + FRNC * is_positive(FRNC - _10MINSC) + FRN1 * is_positive(FRN1 - _10MINS1) + FRN2 * is_positive(FRN2 - _10MINS2) + FRN3 * is_positive(FRN3 - _10MINS3) + FRN4 * is_positive(FRN4 - _10MINS4)
ZIGIDGLO5 = ZIGIDGLO * null(ANCSDED2 - V_ANREV + 5)
REPDOMENTR = REPAB + REPAG + REPAL + REPAQ + REPAV + REPBB + REPAA + REPAF + REPAK + REPAP + REPAU + REPBA + REPAC + REPAH + REPAM + REPHAR + REPAW + REPBE + REPAE + REPAJ + REPAO + REPAT + REPAY + REPBG
TEGLPALIMV = GLPALIMV * 1 - is_positive(INDTEFF) + TGLPALIMV * is_positive(INDTEFF)
LIGDRFRP = is_positive(DRFRP) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
INVRETOD = min(NINVRETOD, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW)) * 1 - V_CNR
TGLRWB = is_positive(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * CODRWB / TOTALQUO) + 1 - is_positive(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO * is_positive(null(1 - FLAG_EXIT) + null(2 - FLAG_EXIT))
IPQF11 = ZIPQF11 * COTF1
NRCELCOM = max(min(RCEL_COM, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL), 0)
TAUX2 = TX_BAR2 - TX_BAR1 * 1 - V_ANC_BAR + TX_BAR1A * V_ANC_BAR
TSNN2REMP1 = is_positive(TS1) * TS1 - TSNN1 - TSNN2TS1
TMIB_NETNPVP = MIBNPVENP - TMIB_ABNPVP
IPQTSREMP12 = ZIPQTSREMP12 * REMPLANBP1
RFCG = max(0, RFCF - RFDANT) * 1 - is_positive(ART1731BIS) + max(0, RFCF - DEFRF4BD) * is_positive(ART1731BIS)
RSN_CL = BSNCL * TX25 / 100
RRPRESCOMP_1 = max(min(RPRESCOMP, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMO_1 - RSOCREPR_1), 0)
TSPEBASABP = TSPETOTP
LIG2355 = is_positive(IND_NI * 1 - is_positive(V_ANTRE) + INDNMR1 + INDNMR2 + is_positive(NAT1BIS) * null(NAPT) * is_positive(IRNET + TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET) + is_positive(SEUIL_12 - IAN + RPEN - IAVT + TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - IRANT) * positif_ou_nul(IAN + RPEN - IAVT + TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - IRANT)) * is_positive(INDREV1A8) * 1 - null(NATIMP - 1) + null(NATIMP - 1) * is_positive(IRANT) * 1 - LIGPS * LIG2
DEFLOC1 = is_positive(DEFNONPLOC) * DEFNPLOCFAV * 1 - is_positive(ART1731BIS) + DEFLOCNPF * is_positive(ART1731BIS * 1 - PREM8_11) + LOCDEFNPCGAV + LOCDEFNPV + LOCDEFNPCGAC + LOCDEFNPC + LOCDEFNPCGAPAC + LOCDEFNPPAC * ART1731BIS * is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))
PPE_COEFFV = PPE_BOOL_TPV * 360 / PPENBJ + 1 - PPE_BOOL_TPV / PPENHV + PPEXTV * is_positive(PPE_SALAVDEFV + 0) / 1820 + PPENJV * is_positive(PPE_AVRPRO1V + 0) / 360
GLTSREMPC = is_positive(TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2REMPC / TOTALQUOHT) + 1 - is_positive(TSNN2REMP1 + TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV
TEGLTSREMPTOTM = TEGLTSREMPVM + TEGLTSREMPCM + TEGLTSREMP1M + TEGLTSREMP2M + TEGLTSREMP3M + TEGLTSREMP4M
NINVRETRG = max(min(INVOMENTRG, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU), 0) * 1 - V_CNR
ZIPQRCMTS2 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQRCMTS / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCMDC2 - ZIPQRCMFU2 - ZIPQRCMCH2 - ZIPQRCMTR2 - ZIPQRCMGO2
TABTSREP = max(0, TREP103 - TABTS1EJ - TABTS1EC - TABTS1EP - TABTSREJ)
TTSNN2C = is_positive(TTSC) * is_positive(CARTSC + REMPLAC) * arr(TTSC * T2TSNC / TEXTSC) + 1 - is_positive(CARTSC + REMPLAC) * TTSC - TTSNNC
BINRIR = max(0, IRN - IRANT) + max(0, TAXASSUR - min(TAXASSUR + 0, max(0, INE - IRB + AVFISCOPTER)) + min(0, IRN - IRANT)) + max(0, IPCAPTAXT - min(IPCAPTAXT + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR)) + min(0, IRN - IRANT + TAXASSUR)) + max(0, TAXLOY - min(TAXLOY + 0, max(0, INE - IRB + AVFISCOPTER - TAXASSUR - IPCAPTAXT)) + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT)) + max(0, IHAUTREVT + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT + TAXLOY))
BAQTOTMIN = min(0, BAQV + BAQC + BAQP + BAHQTOTMIN)
LIGCELHT = is_positive(DCELREPHT) * LIG1 * LIG2
TMIB_TPRESP = MIBPRESP + AUTOBICPP + MIBNPPRESP + MIBMEUP
ZIGRSECOR3 = ZIGRSECOR * null(ANCSDED2 - V_ANREV + 3)
RLOC72 = max(min(INVRETRT * 1 - INDPLAF + INVRETRTA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71])), 0) * 1 - V_CNR
TERPQRWBM = RPQRWBM * 1 - is_positive(INDTEFF) + TRPQRWBM * is_positive(INDTEFF)
REPPN = max(0, INVOMRETPN - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV)) * 1 - ART1731BIS + max(0, INVOMRETPN - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV)) * ART1731BIS * 1 - V_CNR
REVTSREMP = sum([TSNN2REMPV, TSNN2REMPC, TSNN2REMP1, TSNN2REMP2, TSNN2REMP3, TSNN2REMP4]) * 1 - INDTEFF + sum([TTSNN2REMPV, TTSNN2REMPC, TTSNN2REMP1, TTSNN2REMP2, TTSNN2REMP3, TTSNN2REMP4]) * INDTEFF
TGL4RBJC = arr(TONEQUO * REV4RBJC / TOTALQUO)
PVBAR3VA = is_positive(CSGDED) * arr(CSGDED * 100 / TX051)
PPE_COEFFCONDU = 1 - PPE_BOOL_TPU * null(PPENBJ - 360) * PPE_COEFFU + 1 - null(PPENBJ - 360) * PPENBJ * 1820 / 360 / PPENHP1 + PPENHP2 + PPENHP3 + PPENHP4 + PPEXT1 + PPEXT2 + PPEXT3 + PPEXT4 + PPENJP * is_positive(PPE_AVRPRO1P + 0) * 1820 / 360
TSNN2TS3 = is_positive(TS3) * is_positive(REMPLAP3) * arr(TS3 * CARTSP3 / EXTS3) + 1 - is_positive(REMPLAP3) * TS3 - TSNN3
RCELREPGW = max(0, RCELREPGW_1 * 1 - ART1731BIS + min(RCELREPGW_1, max(RCELREPGW_P + RCELREPGWP2, RCELREPGW1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NRILMPD = max(min(AILMPD, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS), 0)
INVRETQO = min(arr(NINVRETQO * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG)) * 1 - V_CNR
TBICPABV = arr(TMIB_ABVV * AUTOBICVV / MIBVENV + AUTOBICVV + TMIB_ABPV * AUTOBICPV / MIBPRESV + AUTOBICPV)
ZIPQPALIM11 = is_positive(sum([TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPALIM1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - sum([ZIPQPALIMV1, ZIPQPALIMC1])
TSNEAJ = CODEAJ - ABDOMEAJ
TDEDMIN3 = is_positive(DETS3) * MIN_DEMEMPLOI + 1 - is_positive(DETS3) * MIN_DEDSFORFTS
TEGL4C = GL4C * 1 - is_positive(INDTEFF) + TGL4C * is_positive(INDTEFF)
REPAL = max(0, CODHAL - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG)) * 1 - ART1731BIS + max(0, CODHAL - max(0, RLOCENT - CODHAB - CODHAG)) * ART1731BIS * 1 - V_CNR
PIND_10MIN_0P = is_positive(PDEDMINP - PDFNP) * is_positive(PERPSALP)
# TODO NMAJCDIS4
LIGREPPEK = is_positive(REPPE + REPRP + REPSK + REPAK) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RETPROREP = arr(DPROREP * TX25 / 100) * 1 - V_CNR
RCELREPGU = max(0, RCELREPGU_1 * 1 - ART1731BIS + min(RCELREPGU_1, max(RCELREPGU_P + RCELREPGUP2, RCELREPGU1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TMIB_ABNPVC = max(0, arr(TMIB_AVC * MIBNPVENC / TMIB_TVENC)) * is_positive(present(MIBGITEC) + present(LOCGITC)) + TMIB_AVC - TMIB_ABVC * 1 - is_positive(present(MIBGITEC) + present(LOCGITC))
NRPATNAT1 = max(min(APATNAT1, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO), 0)
INVRETUCA = min(NINVRETUC, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA)) * 1 - V_CNR
BICNPR = sum([BINTAV, BINTAC, BINTAP])
TAXABASE_I = TAXASSUR * is_positive(IAMD1 + 1 - SEUIL_61)
TRPQ3M = inf(TGL3M / DIVGL3)
TGL4C = arr(TONEQUO * REV4C / TOTALQUO)
TSPETOTC = BNCPROC + AUTOBNCC + BNCNPC
NPLOCNETTSV = NPLOCCGASV + NPLOCSV + MIBNETNPVLSV + MIB_NETNPPLV
REPPA = max(0, INVOMRETPA - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50)) * 1 - ART1731BIS + max(0, INVOMRETPA - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1 - INVDOMRET50)) * ART1731BIS * 1 - V_CNR
INVRETQM = min(NINVRETQM, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL)) * 1 - V_CNR
CIRSE3 = min(RSE3, arr(REVCSXD * TX062 / 100))
INVRETOU = min(NINVRETOU, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT)) * 1 - V_CNR
ZIGPENARSE5 = is_positive(PRSE5) * is_positive(NMAJRSE51) * LIG2
IPQRVO55 = ZIPQRVO55 * RENTAXNB5
ALOGDOM = ALOGDOM_1 * 1 - ART1731BIS + min(ALOGDOM_1, max(ALOGDOM_P + ALOGDOMP2, ALOGDOM1731 + 0) * 1 - PREM8_11) * ART1731BIS
DISFPMEI = ISFPMEIN
IPQRVG5 = ZIPQRVG5 * CODNVG
NPLOCCGANSC = NPLOCCGAC - NPLOCCGASC
QF522 = arr(RB52) / NB2
PPE_AVRPRO1V = present(FEXV) + present(BAFV) + present(BAEXV) + present(BACREV) + present(_4BACREV) + present(BACDEV) + present(BAHEXV) + present(BAHREV) + present(_4BAHREV) + present(BAHDEV) + present(BICEXV) + present(BICNOV) + present(BICDNV) + present(BIHEXV) + present(BIHNOV) + present(BIHDNV) + present(BNCEXV) + present(BNCREV) + present(BNCDEV) + present(BNHEXV) + present(BNHREV) + present(BNHDEV) + present(MIBEXV) + present(BNCPROEXV) + present(MIBVENV) + present(MIBPRESV) + present(BNCPROV) + present(BAFPVV) + present(MIBPVV) + present(BNCPROPVV) + present(BAFORESTV) + present(AUTOBICVV) + present(AUTOBICPV) + present(AUTOBNCV) + present(LOCPROV) + present(LOCPROCGAV) + present(LOCDEFPROCGAV) + present(LOCDEFPROV) + present(XHONOAAV) + present(XHONOV)
LIGREPSIN = is_positive(REPSIN) * LIG1 * LIG2
RPQRVO7 = inf(GLRVO7 / RENTAXNB7)
RIHOTR = arr(INVLOCHOTR + INVLOGHOT * TX_REDIL25 / 100) * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO))
SYNIMP = positif_ou_nul(SYNREST) * CISYND - SYNREST
REV1 = GLN1 * 1 - INDTEFF + TGLN1 * INDTEFF
COPETOISF = 10 if (CMAJ_ISF == 7 or CMAJ_ISF == 17 or CMAJ_ISF == 18) else (40 if (CMAJ_ISF == 8 or CMAJ_ISF == 34) else 0)
RRBGTEF = TEFFREV - DAR * 1 - is_positive(RE168 + TAX1649) + is_positive(RE168 + TAX1649) * RE168 + TAX1649
ACELHL = BCEL_HL * 1 - ART1731BIS + min(BCEL_HL, max(ACELHL_P + ACELHLP2, ACELHL1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(CELLIERHL) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RLOC20 = max(min(INVRETQP * 1 - INDPLAF + INVRETQPA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19])), 0) * 1 - V_CNR
TERPQTSC = RPQTSC * 1 - is_positive(INDTEFF) + TRPQTSC * is_positive(INDTEFF)
IMI = arr(BMI * TX_MIN_MET / 100 + arr(PRODOM + PROGUY) * TX_MIN_DOM / 100) * V_CR2
RIVCELCOM3 = RIVCELCOM1
LIGISFRET = is_positive(RETISF) * 1 - is_positive(ANNUL2042) * LIGISF * 1 - is_positive(SEUIL_12 - ISF4BIS) * 1 - null(ISF5)
NINVRETRY = max(min(INVOMENTRY, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT), 0) * 1 - V_CNR
TRPQPALIMCM = inf(TGLPALIMCM / PENSALNBC)
LIGREPDONR3 = is_positive(REPDONR3) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RSE3BASE_INR = max(0, RSE3N - CSPROVYG - RSE39YP)
REPLOCOU = REPLNOU
LIGDLMRN5 = is_positive(DLMRN5) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
CITEC = arr(ATEC * TX40 / 100)
PPE_RTAC = max(0, PPESALC + PPE_RPROC * is_positive(PPE_RPROC))
NRCELRREDLF = max(min(CELRREDLF, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT])), 0)
NRDOMSOC1 = NINVRETKG + NINVRETKH + NINVRETKI + NINVRETQN + NINVRETQU + NINVRETQK + NINVRETQJ + NINVRETQS + NINVRETQW + NINVRETQX + NINVRETRA + NINVRETRB + NINVRETRC + NINVRETRD
CVNAC = CVNSALC
TGLTS4M = is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TTSNN2TS4 / TOTALQUO) + 1 - is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSVM - TGLTSCM - TGLTS1M - TGLTS2M - TGLTS3M
REPAF = max(0, CODHAF - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA)) * 1 - ART1731BIS + max(0, CODHAF - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA)) * ART1731BIS * 1 - V_CNR
TRPQF2M = inf(TGLF2M / COTF2)
XEXTSC = XTSBC + CARTSC + REMPLAC
RSNCR = max(0, min(RSN_CR, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL - RSNCM - RSNCN - RSNCC - RSNCU - RSNCQ))
RIDOMPROTOT_1 = RIDOMPROE3_1
ZIGREVXB = is_positive(REVCSXB) * TYPE2
T2TSN4 = CARTSP4 + REMPLAP4
TSPR1 = TSNN1 + PRR1 * 1 - PREM8_11 + max(0, TSNN1 + PRR1) * PREM8_11
PPENEXO2 = null(PPETPP2 + 0) + is_positive(TSHALLO2 + 0) + is_positive(SALEXT2 + 0) + 4 * is_positive(PPENHP2 + 0) + 8 * is_positive(PPEXT2 + 0)
RESIVIAN4 = arr(arr(ACODIW / 9) * TX25 / 100)
TRPQ4V = arr(TGL4V / DIVGL4) + 0
_2CKIMP = positif_ou_nul(_2CKREST) * CI2CK - _2CKREST
ZIGPENACDIS = is_positive(PCDIS) * is_positive(NMAJCDIS1) * LIG2
TERPQPRR1M = RPQPRR1M * 1 - is_positive(INDTEFF) + TRPQPRR1M * is_positive(INDTEFF)
CIRSE1 = min(RSE1, arr(REVCSXA * TX075 / 100))
BA1AF = BAF1AP + BAF1AC + BAF1AV
INVRETXERA = min(NINVRETXER, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA)) * 1 - V_CNR
# TODO MIBNPRP
PTPS10V = arr(PERPSALV * TX_DEDFORFTS / 100)
ZIPQRVO75 = is_positive(TEGLTSTOTM + TEGLTSREMPTOTM) * arr(IQUOTOT5 * TERPQRVO7M / TETONEQUOM1) + 1 - is_positive(TEGLTSTOTM + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5 - ZIPQRVO55 - ZIPQRVO65 - ZIPQPRRZ5TOT
IRNIN = IRN - IRANT * is_positive(IRN - IRANT)
LIGREPAJ = is_positive(REPAJ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
CIPRS = min(PRSC, arr(IPPNCS * T_PREL_SOC / 100))
RCELREPYJ = max(0, RCELREPYJ_1 * 1 - ART1731BIS + min(RCELREPYJ_1, max(RCELREPYJ_P + RCELREPYJP2, RCELREPYJ1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
SPEABP = arr(max(MIN_SPEBNC, SPEBASABP * SPETXAB / 100) * positif_ou_nul(SPETOTP - MIN_SPEBNC)) + arr(min(MIN_SPEBNC, SPEBASABP) * is_positive(MIN_SPEBNC - SPETOTP))
ZIGRSEDD = is_positive(V_RSE1ANT + V_RSE2ANT + V_RSE3ANT + V_RSE4ANT + V_RSE5ANT - DRSED) * is_positive(IDRSE) * 1 - null(V_IDRSEANT + DRSED + 0) * 1 - null(V_IDRSEANT - DRSED) * is_positive(V_NOTRAIT - 20) * LIG2
ACELHM_R = positif_ou_nul(CELLIERHM) * BCEL_HM * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TSNRCJ = CARTSP1 - ABTSRCJ
ITOTDOM1 = IMETRO1 + IQUORAJ1 + INETABADAJ1 + INETABAEAJ1
# TODO MAJTXRSE44
RENOV = arr(BRENOV * TX_RENOV / 100) * 1 - V_CNR
LIGREPTD = is_positive(REPTD) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
CDISD = NAPCDIS - V_CDISANT
TMIB_ABNPPLP = TMIB_APP - TMIB_ABPP - TMIB_ABNPPP * present(MIBMEUP)
LIG585 = present(PAAP) + present(PAAV) * 1 - is_positive(LIG58) * LIG1 * LIG2
REPNATR3 = max(PATNAT3 - RPATNAT3, 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGCELHF = is_positive(DCELREPHF) * LIG1 * LIG2
NOCEPIMP = NOCEPIMPV + NOCEPIMPC + NOCEPIMPP
SEUILEXO = SEUIL_EXO1 + SEUIL_EXO2 - SEUIL_EXO1 * positif_ou_nul(max(AGV, AGC) - LIM_AGE_EXO)
ZIPQRWB5 = is_positive(TEGLRWA + TEGLRVG + sum([TEGL1M, TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQRWBM / TETONEQUOM1) + 1 - is_positive(TEGLRWA + TEGLRVG + sum([TEGL1M, TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7
INVRETRURA = min(NINVRETRUR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA)) * 1 - V_CNR
# TODO MAJTXC4
TPS103 = arr(TSB3 * TX_DEDFORFTS / 100)
NABTEF = min(max(LIM_ABTRNGDBL + 1 - RNGTEF + TOTALQUO - SDD - SDC, 0), 1) + min(max(LIM_ABTRNGSIMP + 1 - RNGTEF + TOTALQUO - SDD - SDC, 0), 1)
INVRETSVA = min(arr(NINVRETSV * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA)) * 1 - V_CNR
INVRETOJA = min(NINVRETOJ, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA)) * 1 - V_CNR
TS1 = TSN1
_4RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _4RCM_I - REPRCM4) * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _4RCM_I - REPRCM4)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
ZIGTITRECRPS = is_positive(BCSG + V_CSANT) * is_positive(BRDS + V_RDANT) * is_positive(BPRS + V_PSANT) * is_positive(BCVNSAL + V_CVNANT) * 1 - V_CNR * 1 - is_positive(ZIG_RF + max(0, NPLOCNETSF)) * LIG2
LIGMIBDREPC = is_positive(MIBDREPC) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
RRESINEUV8 = arr(ACODIL * TX20 / 100) - RRESINEUV1 - RRESINEUV2 - RRESINEUV3 - RRESINEUV4 - RRESINEUV5 - RRESINEUV6 - RRESINEUV7 - RRESINEUV7
DISFFCPI = ISFFCPI
NRILMOB = max(min(AILMOB, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC), 0)
DEFLOC6 = 1 - is_positive(NPLOCNETF6) * abs(min(max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8 - LNPRODEF7 - LNPRODEF6, 0) - LNPRODEF5, LNPRODEF5)) * positif_ou_nul(LNPRODEF5 - max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8 - LNPRODEF7 - LNPRODEF6, 0)) * 1 - is_positive(ART1731BIS) + min(LNPRODEF5, TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3 - DEFLOC4 - DEFLOC5) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + LNPRODEF5 * ART1731BIS * is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))
LIGIRNET = is_positive(IRNET * LIG_IRNET + LIGTAXANET + LIGPCAPNET + LIGLOYNET + LIGHAUTNET) * 1 - is_positive(ANNUL2042 + 0)
RV3 = arr(RVB3 * TXRVT3 / 100)
TSN1FJ = TSHALLO4 - ABTS1FJ
TRPQFV = inf(TGLFV / COTFV)
GLNAV1C = max(GLD1C - ABGL1C, 0) * INDEFTSC
TSN1AP = ALLOV - ABTS1AP
ABADO4 = arr(min(IPRODOM4 + ID14 * TX_RABDOM / 100, PLAF_RABDOM))
CIDIREPARGNE = DIREPARGNE * 1 - is_positive(RE168 + TAX1649) * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO))
FORTRA = REPFOR + REPSINFOR + REPFOR1 + REPSINFOR1 + REPFOR2 + REPSINFOR2 + REPFOR3 + REPSINFOR3 + REPSINFOR4
LIGREPQI = is_positive(REPQI) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
FPTC = max(FRDC, _10MINSC)
LIGDEFRFNONI = is_positive(DEFRFNONI) * DEFRIRF * 1 - PREM8_11
LIG49 = INDREV1A8 * positif_ou_nul(DRBG) * LIG2
LIGLOCNEUF = is_positive(REPINV) * LIG1
LIGREPXC = is_positive(REPXC) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
MIB_NETNPPLV = MIBMEUV - MIB_ABNPPLV
NRCELREPHR = max(min(RCELREP_HR, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS])), 0)
LIGCELFD = is_positive(DCELFD) * LIG1 * LIG2
RSE49YP = is_positive(RSE5 + BREGV) * arr(VAR9YIPS * RSE4 - CSPROVRSE4 / BINRPS) + 1 - is_positive(RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP - GLO9YP - RSE19YP - RSE29YP - RSE39YP)
LIG10YT = INDV * INDC * INDP * ART1731BIS * LIG0 * LIG2
INETABAEAJ31 = max(0, IPROGUY1 + IQUOEAJ31 - ABAGU31)
TGLTSREMP3 = is_positive(TTSNN2REMP4 + TTSNN2REMPC + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2REMP3 / TOTALQUO) + 1 - is_positive(TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV - TGLTSREMPC - TGLTSREMP1 - TGLTSREMP2
RCELFABC = max(0, RCELFABC_1 * 1 - ART1731BIS + min(RCELFABC_1, max(RCELFABC_P + RCELFABCP2, RCELFABC1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPE_SALAVDEFC = TSHALLOC + BPCOSAC + GLD1C + GLD2C + GLD3C + TSASSUC + CARTSC * is_positive(CARTSNBAC) + CODDBJ + CODEBJ + SALEXTC + GLDGRATC
REPPP = max(0, INVOMRETPP - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU)) * 1 - ART1731BIS + max(0, INVOMRETPP - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU)) * ART1731BIS * 1 - V_CNR
LIGREPSR = is_positive(REPSR) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TEGLRCMTRM = GLRCMTRM * 1 - is_positive(INDTEFF) + TGLRCMTRM * is_positive(INDTEFF)
MIBNETNPVF = sum([MIB_NETNPVV, MIB_NETNPVC, MIB_NETNPVP])
RCELREPGX = max(0, RCELREPGX_1 * 1 - ART1731BIS + min(RCELREPGX_1, max(RCELREPGX_P + RCELREPGXP2, RCELREPGX1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IPQTSREMPV1 = ZIPQTSREMPV1 * REMPLANBV
ZIG_CSGDC = is_positive(ZIG_CSGDDO + ZIG_CSGDRS + null(V_IDANT - DCSGD)) * 1 - null(V_IDANT + DCSGD + 0) * is_positive(V_NOTRAIT - 20) * LIG2
BCEL_HL = arr(min(CELLIERHL + 0, LIMCELLIER) / 9)
LIGREPQWB = is_positive(REPQW + REPRB + REPXB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
DCELREPHV = CELREPHV
NPLOCNETTC = NPLOCCGAC + NPLOCC + MIB_NETNPVLC + MIB_NETNPPLC
ZIG_RCM = is_positive(CS_RCM + RD_RCM + PS_RCM + IND_ZIGRCM) * 1 - V_CNR * 1 - is_positive(ANNUL2042) * LIG1 * LIG2 * null(3 - INDIRPS)
NAPCOROLCS = max(0, NAPCR61 - V_ANTCR)
LIGPERPMI = is_positive(PERPIMPATRIE + 0) * is_positive(PERPINDV + PERPINDC + PERPINDP + PERPINDCV + PERPINDCC + PERPINDCP) * is_positive(PERPINDAFFV + PERPINDAFFC + PERPINDAFFP) * 1 - null(PERP_COTV + PERP_COTC + PERP_COTP + 0) * 1 - INDIMPOS * is_positive(PERP_MUT) * is_positive(PERP_COND1 + PERP_COND2) * 1 - is_positive(LIG8FV) * 1 - is_positive(LIG2501) * LIG1 * 1 - V_CNR * LIG2 + 0
RCODIF = RCODIF_1 * 1 - ART1731BIS + min(RCODIF_1, max(RCODIF_P + RCODIFP2, RCODIF1731 + 0) * 1 - PREM8_11) * ART1731BIS
TEGLTSV = GLTSV * 1 - is_positive(INDTEFF) + TGLTSV * is_positive(INDTEFF)
TGLRCMTRM = is_positive(REVRF) * arr(TONEQUOM * _7RCM / TOTALQUO) + 1 - is_positive(REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM - TGLRCMFUM - TGLRCMCHM - TGLRCMGOM - TGLRCMTSM
TSNN2REMPC = is_positive(TSC) * TSC - TSNNC - TSNN2TSC
AISFFCPI = arr(ISFFCPI * TX50 / 100)
LIGREPNW = is_positive(REPNW) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
PPESALU = PPE_SALAVDEFU + PPE_RPROP * 1 - is_positive(PPE_RPROP) * PPE_BOOL_SEULPAC
LIG50YT = INDV * INDC * 1 - INDP * ART1731BIS * LIG0 * LIG2
EXSPBC = EXTSC + EXPRC
DILMJY = LOCMEUBJY
LIGMECENAT = present(RDMECENAT) * LIG1 * LIG2
LIG_NMAJ3 = TYPE2 * is_positive(NMAJ3)
TEGLTS1M = GLTS1M * 1 - is_positive(INDTEFF) + TGLTS1M * is_positive(INDTEFF)
INVRETOQA = min(NINVRETOQ, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA)) * 1 - V_CNR
CDISBASE = CDIS - CDISPROV
DNPLOCIMPU = 1 - DEFRILOC * 1 - PREM8_11 * max(0, min(TOTDEFLOCNP, NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC)) + is_positive(DEFRILOC) * 1 - PREM8_11 * min(LNPRODEF10 + LNPRODEF9 + LNPRODEF8 + LNPRODEF7 + LNPRODEF6 + LNPRODEF5 + LNPRODEF4 + LNPRODEF3 + LNPRODEF2 + LNPRODEF1, max(DNPLOCIMPU1731, max(DNPLOCIMPU_P, DNPLOCIMPUP2)))
PLOCCGAPAC = LOCPROCGAP - LOCDEFPROCGAP * 1 - is_positive(ART1731BIS * PREM8_11)
PPE_COEFF3 = PPE_BOOL_TP3 * 360 / PPENBJ + 1 - PPE_BOOL_TP3 / PPENHP3 + PPEXT3 * is_positive(PPE_SALAVDEF3 + 0) / 1820
FPT1 = max(FRD1, _10MINS1)
LIGANNUL2042 = LIG2 * LIG0
# TODO NMAJRSE41
PTORSE2 = arr(max(0, RSE2 - CIRSE2 - CSPROVRSE2) * COPETO / 100) + arr(max(0, RSE2 - CIRSE2 - CSPROVRSE2 - RSE29YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
TERPQRCMGO = RPQRCMGO * 1 - is_positive(INDTEFF) + TRPQRCMGO * is_positive(INDTEFF)
SOMMEA879 = present(BACREV) + present(_4BACREV) + present(BA1AV) + present(BACDEV) + present(BACREC) + present(_4BACREC) + present(BA1AC) + present(BACDEC) + present(BACREP) + present(_4BACREP) + present(BA1AP) + present(BACDEP) + present(BAHREV) + present(_4BAHREV) + present(BAHDEV) + present(BAHREC) + present(_4BAHREC) + present(BAHDEC) + present(BAHREP) + present(_4BAHREP) + present(BAHDEP) + present(BICNOV) + present(BI1AV) + present(BICDNV) + present(BICNOC) + present(BI1AC) + present(BICDNC) + present(BICNOP) + present(BI1AP) + present(BICDNP) + present(BIHNOV) + present(BIHDNV) + present(BIHNOC) + present(BIHDNC) + present(BIHNOP) + present(BIHDNP) + present(BICREV) + present(BI2AV) + present(BICDEV) + present(BICREC) + present(BI2AC) + present(BICDEC) + present(BICREP) + present(BI2AP) + present(BICDEP) + present(BICHREV) + present(BICHDEV) + present(BICHREC) + present(BICHDEC) + present(BICHREP) + present(BICHDEP) + present(LOCPROCGAV) + present(LOCDEFPROCGAV) + present(LOCPROCGAC) + present(LOCDEFPROCGAC) + present(LOCPROCGAP) + present(LOCDEFPROCGAP) + present(LOCPROV) + present(LOCDEFPROV) + present(LOCPROC) + present(LOCDEFPROC) + present(LOCPROP) + present(LOCDEFPROP) + present(LOCNPCGAV) + present(LOCGITCV) + present(LOCDEFNPCGAV) + present(LOCNPCGAC) + present(LOCGITCC) + present(LOCDEFNPCGAC) + present(LOCNPCGAPAC) + present(LOCGITCP) + present(LOCDEFNPCGAPAC) + present(LOCNPV) + present(LOCGITHCV) + present(LOCDEFNPV) + present(LOCNPC) + present(LOCGITHCC) + present(LOCDEFNPC) + present(LOCNPPAC) + present(LOCGITHCP) + present(LOCDEFNPPAC) + present(BNCREV) + present(BN1AV) + present(BNCDEV) + present(BNCREC) + present(BN1AC) + present(BNCDEC) + present(BNCREP) + present(BN1AP) + present(BNCDEP) + present(BNHREV) + present(BNHDEV) + present(BNHREC) + present(BNHDEC) + present(BNHREP) + present(BNHDEP) + present(BNCAABV) + present(ANOCEP) + present(INVENTV) + present(PVINVE) + present(BNCAADV) + present(DNOCEP) + present(BNCAABC) + present(ANOVEP) + present(INVENTC) + present(PVINCE) + present(BNCAADC) + present(DNOCEPC) + present(BNCAABP) + present(ANOPEP) + present(INVENTP) + present(PVINPE) + present(BNCAADP) + present(DNOCEPP)
TEXTS2 = TTSBN2 + T2TSN2
TPRBC = PRBRC + PALIC + PENINC
REV4C = GLN4DBJC
DCREATHANDI = CONVHAND
LIG1 = 1 - is_positive(RE168 + TAX1649)
LIG0 = 1 - is_positive(IPVLOC) * 1 - is_positive(RE168 + TAX1649) * IND_REV
INVRETUBA = min(NINVRETUB, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA)) * 1 - V_CNR
ELUIMP = positif_ou_nul(ELUREST) * IPELUS - ELUREST
RCELREPYL = max(0, RCELREPYL_1 * 1 - ART1731BIS + min(RCELREPYL_1, max(RCELREPYL_P + RCELREPYLP2, RCELREPYL1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NRCELREPGL = max(min(ACELREPGL, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP])), 0)
MIB_ABNPVC = max(0, arr(MIB_AVC * MIBNPVENC / MIB_TVENC)) * is_positive(present(MIBGITEC) + present(LOCGITC)) + MIB_AVC - MIB_ABVC * 1 - is_positive(present(MIBGITEC) + present(LOCGITC))
GLTSV = is_positive(TSNN2TSC + TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2TSV / TOTALQUOHT) + 1 - is_positive(TSNN2TSC + TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT
TERPQRWB = RPQRWB * 1 - is_positive(INDTEFF) + TRPQRWB * is_positive(INDTEFF)
SOMMEA709 = is_positive(RINVLOCINV) + is_positive(RINVLOCREA) + is_positive(REPINVTOU) + is_positive(INVLOGREHA) + is_positive(INVLOCXN) + is_positive(INVLOCXV) + is_positive(COD7UY) + is_positive(COD7UZ) + 0
# TODO MAJTXCVN4
NINVRETSA = max(min(CODHSA, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA), 0) * 1 - V_CNR
LIGRRCEL21 = is_positive(RRCELLF) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
TAPBC = max(TPLRC, TEXPRC * TX_DEDPER / 100)
ZIPQPALIMANT11 = is_positive(sum([TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPALIM1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - sum([ZIPQPALIMANTV1, ZIPQPALIMANTC1])
IPQRVO52 = ZIPQRVO52 * RENTAXNB5
ZIPQTSC1 = is_positive(sum([TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * arr(IQUOTOT1 * TERPQTSC / TETONEQUO1) + 1 - is_positive(sum([TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQPRRZ1TOT - ZIPQTSV1
CIRECH = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR - CIGPA - CIDONENTR - CICORSE, IPCHER))
LIGCELJP = is_positive(DCELJP) * LIG1 * LIG2
TABPRC = arr(1 - TIND_APBC * min(TAPBC, is_positive(TEXPR1 + TEXPR2 + TEXPR3 + TEXPR4) * TPL_PB * TAPBC / sum([TAPBV * 1 - TIND_APBV, TAPBC * 1 - TIND_APBC, TAPB1 * 1 - TIND_APB1, TAPB2 * 1 - TIND_APB2, TAPB3 * 1 - TIND_APB3, TAPB4 * 1 - TIND_APB4]) + 1 - is_positive(TEXPR1 + TEXPR2 + TEXPR3 + TEXPR4) * max(0, TPL_PB - TABPRV)) + TIND_APBC * TAPBC)
TEGL3 = GL3 * 1 - is_positive(INDTEFF) + TGL3 * is_positive(INDTEFF)
NAPISFTOT = ISF5 + PISF
ZIPQPALIMANT1TOT = sum([ZIPQPALIMANTV1, ZIPQPALIMANTC1, ZIPQPALIMANT11, ZIPQPALIMANT21, ZIPQPALIMANT31, ZIPQPALIMANT41])
LIGREPSAG = is_positive(REPSG + REPAG) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
INVRETATA = min(NINVRETAT, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA)) * 1 - V_CNR
# TODO DLMRN5
PS_REVETRANG = 0
PLAFREPETOT = arr(max(0, RSNCR + RSNCF + RPLAFREPME4 - 10000)) * 1 - V_CNR * is_positive(AVFISCOPTER)
RSE29YP = is_positive(RSE3 + RSE4 + RSE5 + BREGV) * arr(VAR9YIPS * RSE2 - CSPROVRSE2 / BINRPS) + 1 - is_positive(RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP - GLO9YP - RSE19YP)
NPLOCCGASC = arr(NPLOCCGAC * LOCNPCGAC / LOCNPCGAC + LOCGITCC) * present(LOCNPCGAC) + min(0, NPLOCCGAC) * 1 - present(LOCNPCGAC)
TERPQFVM = RPQFVM * 1 - is_positive(INDTEFF) + TRPQFVM * is_positive(INDTEFF)
ZIPQTSREMP1TOT = sum([ZIPQTSREMPV1, ZIPQTSREMPC1, ZIPQTSREMP11, ZIPQTSREMP21, ZIPQTSREMP31, ZIPQTSREMP41])
IND_101 = positif_ou_nul(_10MINS1 - FRD1)
RSE3BASE = RSE3N - CSPROVYG
RSOC13 = arr(max(min(INVRETKH * 1 - INDPLAF + INVRETKHA * INDPLAF, RRISUP - RSOC11 - RSOC12), 0)) * 1 - V_CNR
LIGPCAP17281 = TYPE2 * is_positive(NMAJPCAP1)
ZIPQPALIMANT31 = is_positive(TEGLPALIM4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPALIM3 / TETONEQUO1) + 1 - is_positive(TEGLPALIM4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - sum([ZIPQPALIMANTV1, ZIPQPALIMANTC1, ZIPQPALIMANT11, ZIPQPALIMANT21])
TPRR24 = is_positive(PEBF4 + PENSALP4 + CODRFZ) * arr(TPRN4 * CARPEP4 / TEXPR4) + 1 - is_positive(PEBF4 + PENSALP4 + CODRFZ) * TPRN4 - TPRR4
TMIBNETVF = sum([TMIB_NETVV, TMIB_NETVC, TMIB_NETVP])
IPQPRR31 = ZIPQPRR31 * CARPENBAP3
RLOCNPRO = RREDMEUB + RREDREP + RILMIX + RILMIY + RILMPA + RINVRED + RILMIH + RILMJC + RILMPB + RILMIZ + RILMJI + RILMPC + RILMJS + RILMPD + RILMPE + RMEUBLE + RPROREP + RREPNPRO + RREPMEU + RILMIC + RILMIB + RILMIA + RILMJY + RILMJX + RILMJW + RILMJV + RILMOE + RILMOD + RILMOC + RILMOB + RILMOA + RRESIMEUB + RRESIVIEU + RRESINEUV + RLOCIDEFG + RCODJTJU + RCODOU
NRRESINEUV = max(min(RETRESINEUV, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA - NRRESIMEUB - NRRESIMEUB), 0)
IPQFANTC1 = ZIPQFANTC1 * COTFC
INVRETOEA = min(NINVRETOE, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA)) * 1 - V_CNR
ABSPRNG = RNG + TOTALQUO - SDD - SDC
TTSNRAJ = CARTSV - TABTSRAJ
DCELRREDLA = CELRREDLA
PLR2 = min(MIN_DEDPR, EXPR2)
REP101 = IND_101 * D10M1 + 1 - IND_101 * FPT1
TERPQF3M = RPQF3M * 1 - is_positive(INDTEFF) + TRPQF3M * is_positive(INDTEFF)
LIGDEFBA4 = is_positive(DEFBA4) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
GLO9YP = is_positive(RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * arr(VAR9YIPS * CGLOA - COD8YL / BINRPS) + 1 - is_positive(RSE1 + RSE2 + RSE3 + RSE4 + RSE5 + BREGV) * max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP)
TERPQPALIMV = RPQPALIMV * 1 - is_positive(INDTEFF) + TRPQPALIMV * is_positive(INDTEFF)
RLOGDOM = RLOGDOM_1 * 1 - ART1731BIS + min(RLOGDOM_1, max(RLOGDOM_P + RLOGDOMP2, RLOGDOM1731 + 0) * 1 - PREM8_11) * ART1731BIS
TEGL4CM = GL4CM * 1 - is_positive(INDTEFF) + TGL4CM * is_positive(INDTEFF)
RPQFVM = inf(GLFVM / COTFV)
_2RCAV = max(0, PROVIE - _2ABAVC)
RCREATEURHANDI = CONVHAND / 2 * PLAF_CRENTRH * 1 - V_CNR
TERPQRVO7M = RPQRVO7M * 1 - is_positive(INDTEFF) + TRPQRVO7M * is_positive(INDTEFF)
RLOC49 = max(min(INVRETPY * 1 - INDPLAF + INVRETPYA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48])), 0) * 1 - V_CNR
TTSN1TT = GLDGRATV - TABTS1TT
RLOCIDFG1 = arr(arr(ACODID / 9) * TX11 / 100) + arr(arr(ACODIF / 9) * TX18 / 100) + arr(arr(ACODIG / 9) * TX11 / 100)
LIGSPEDREPP = is_positive(SPEDREPP) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
# TODO RECUMBIS
INVRETQPA = min(arr(NINVRETQP * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA)) * 1 - V_CNR
FRDA1 = FRN1 * is_positive(FRN1 - _10MINS1)
PRR2ZC = is_positive(PEBFC + PENSALC) * arr(PRNC * CODRBZ / EXPRC) + 1 - is_positive(PEBFC + PENSALC) * PRNC - PRRC - PRR2C
TRPQPRR1 = inf(TGLPRR1 / CARPENBAP1)
DFIPDOM = FIPDOMCOM
EXPR2 = PRB2 + _2PRB2 + PEBF2
INVRETAQ = min(arr(NINVRETAQ * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL)) * 1 - V_CNR
ZIGPENARSE44 = is_positive(PRSE4) * is_positive(NMAJRSE44) * LIG2
RSOC26 = arr(max(min(INVRETQX * 1 - INDPLAF + INVRETQXA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25])), 0)) * 1 - V_CNR
CSNET = max(0, CSGC + PCSG - CICSG - CSGIM)
SPEPVNPC = BNCNP1AC - BNCNPDEC
INETABAEAJ32 = max(0, IPROGUY2 + IQUOEAJ32 - ABAGU32)
NSA2 = min(1 - is_positive(PAC + V_0CH) * null(SFUTILE - 14) + null(SFUTILE - 7) + null(SFUTILE - 15) * 1 - is_positive(NIN) + null(SFUTILE - 7) * BOOL_0AZ * V_0AV, 1) * 0.5
# TODO F10BC
PPE_RPRO1C = FEXC + BAFC + BAEXC + BACREC + _4BACREC - BACDEC * 1 - is_positive(ART1731BIS) + BAHEXC + BAHREC + _4BAHREC - BAHDEC * 1 - is_positive(ART1731BIS) + BICEXC + BICNOC - BICDNC * 1 - is_positive(ART1731BIS) + BIHEXC + BIHNOC - BIHDNC * 1 - is_positive(ART1731BIS) + BNCEXC + BNCREC - BNCDEC * 1 - is_positive(ART1731BIS) + BNHEXC + BNHREC - BNHDEC * 1 - is_positive(ART1731BIS) + MIBEXC + BNCPROEXC + TMIB_NETVC + TMIB_NETPC + TSPENETPC + BAFPVC + MIBPVC + BNCPROPVC + BAFORESTC + LOCPROC + LOCPROCGAC - LOCDEFPROCGAC * 1 - is_positive(ART1731BIS) - LOCDEFPROC * 1 - is_positive(ART1731BIS) + XHONOAAC + XHONOC
TABTSRAJ = is_positive(REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * arr(TREP10V * CARTSV / TTSBV) + 1 - is_positive(REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * max(0, TREP10V - TABTS1AJ - TABTS1AC - TABTS1AP - TABTS3VJ - TABTS1TT)
PRDS = PTORDS
GLN3C = max(GLD3C - ABGL3C, 0) * INDEFTSC
RLOG10 = max(min(INVRETQM * 1 - INDPLAF + INVRETQMA * INDPLAF, RRI1 - RLOG01 - RLOG02 - RLOG03 - RLOG04 - RLOG05 - RLOG06 - RLOG07 - RLOG08 - RLOG09), 0) * 1 - V_CNR
APATNAT = PATNAT4 * 1 - ART1731BIS + min(PATNAT4, max(APATNAT_P + APATNATP2, APATNAT1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
DEPCHO = DEPCHOBAS + CIBOIBAIL + COD7SA + CINRJBAIL + COD7SB + CRENRJ + COD7SC + TRAMURWC + COD7WB + CINRJ + COD7RG + TRATOIVG + COD7VH + CIDEP15 + COD7RH + MATISOSI + COD7RI + TRAVITWT + COD7WU + MATISOSJ + COD7RJ + VOLISO + COD7RK + PORENT + COD7RL + CHAUBOISN + COD7RN + POMPESP + COD7RP + POMPESR + COD7RR + CHAUFSOL + COD7RS + POMPESQ + COD7RQ + ENERGIEST + COD7RT + DIAGPERF + COD7TV + RESCHAL + COD7TW + COD7RV + COD7RW + COD7RZ * is_positive(V_NOTRAIT - 10)
PPE_FINJJMMMM = PPE_DATE_FIN + 30120000 + V_ANREV * null(PPE_DATE_FIN + 0)
IPQRCMGO5 = ZIPQRCMGO5 * RESTUCNB
RPERPMUTC = is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE) * max(0, min(PERP_COTC - PERPPLATCANT, PERPPLATVANT - PERP_COTV)) + is_positive(PERPIMPATRIE) * max(0, min(PERP_COTC - PERPPLAFIMPC, PERPPLAFIMPV - PERP_COTV))
LIG2305 = is_positive(DIAVF2) * LIG1 * LIG2
INVRETPXA = min(arr(NINVRETPX * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA)) * 1 - V_CNR
IPROGUY31 = arr(IPQ01 * PROGUY / RG)
IPQRVO7ANT1 = ZIPQRVO7ANT1 * RENTAXNB7
REPCIFAD = max(0, COD7UA - PLAF_FOREST1 * 1 + BOOL_0AM) * 1 - V_CNR
IPQFANT31 = ZIPQFANT31 * COTF3
REPNATR = max(PATNAT4 - RPATNAT, 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
MIB_ABVV = max(0, arr(MIB_AVV * MIBVENV / MIB_TVENV))
LIGILMJW = is_positive(DILMJW) * LIG1 * LIG2
DILMPE = COD7PE
PRR2P = sum([PRR21, PRR22, PRR23, PRR24])
XBICNPHDC = BICNPEXC + BICREC
XTSNT4 = XEXTS4 - XFPT4
RENT10 = max(min(INVRETAP * 1 - INDPLAF + INVRETAPA * INDPLAF, RRIRENT - sum([RENT01, RENT02, RENT03, RENT04, RENT05, RENT06, RENT07, RENT08, RENT09])), 0) * 1 - V_CNR
INVRETXB = min(arr(NINVRETXB * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ - INVRETQS - INVRETQW - INVRETQX - INVRETRA - INVRETRB - INVRETRC - INVRETRD - INVRETXA)) * 1 - V_CNR
LIGPVETR = is_positive(present(CIIMPPRO) + present(CIIMPPRO2)) * LIG1 * LIG2
INVRETQGA = min(arr(NINVRETQG * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA)) * 1 - V_CNR
IPQTSV5 = ZIPQTSV5 * CARTSNBAV
XTSNNV = arr(is_positive(XTSNV) * XTSNV * TSASSUV / XEXTSV) * XIND_10V + 1 - XIND_10V * TSASSUV
PIND_MINV = 1 - is_positive(PIND_10MIN_0V)
DRSED = arr(BDRSE1 * TXTQDED / 100) + arr(BDRSE2 * TXTVDED / 100) + arr(BDRSE3 * TXTWDED / 100) + arr(BDRSE4 * TXTXDED / 100) + arr(BDRSE5 * TX051 / 100) * is_positive(CSREC + V_IDRSEANT) * is_positive(NAPCR61)
LIGNITSUP = positif_ou_nul(TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES - SEUIL_61) * null(IDRS2 - IDEC + IREP) * positif_ou_nul(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET - SEUIL_12) * 1 - is_positive(LIG0TSUP) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(V_NOTRAIT - 20) * 1 - is_positive(INDCTX) * LIG2
RLOC02 = max(min(INVRETMA * 1 - INDPLAF + INVRETMAA * INDPLAF, RRILOC - RLOC01), 0) * 1 - V_CNR
TALLOP = ALLO1 + ALLO2 + ALLO3 + ALLO4
RFIPC = max(0, RFIPC_1 * 1 - ART1731BIS + min(RFIPC_1, max(RFIPC_P + RFIPCP2, RFIPC1731 + 0) * 1 - PREM8_11) * ART1731BIS)
TIND_104 = positif_ou_nul(T10MINS4 - TFRD4 + COD1FE)
TEGLTSREMPVM = GLTSREMPVM * 1 - is_positive(INDTEFF) + TGLTSREMPVM * is_positive(INDTEFF)
RENT19 = max(min(INVRETAE * 1 - INDPLAF + INVRETAEA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18])), 0) * 1 - V_CNR
ZIPQPRR11 = is_positive(sum([TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPRR1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRV1 - ZIPQPRRC1
TRPQ4TVCM = arr(TGL4TVCM / DIVGL4) + 0
RB018XR = RNG * 1 - is_positive(VARIPTEFP * is_positive(ART1731BIS) + IPTEFP * 1 - ART1731BIS + VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS + INDTEFF) + ABVIE + ABMAR * is_positive(ZONIPTEFP) + ZONIPTEFP + PVIMPOS * is_positive(ZONIPTEFP) + ZONIPTEFN + PVIMPOS * is_positive(ZONIPTEFN - PVIMPOS) + PVIMPOS - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - PVIMPOS) * null(1 - FLAG_EXIT) + PVIMPOS + PVSURSI * is_positive(ZONIPTEFP) + ZONIPTEFN + PVSURSI * is_positive(ZONIPTEFN - PVSURSI) + PVSURSI - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - PVSURSI) * null(2 - FLAG_EXIT) + RFROBOR * V_INDTEO * is_positive(ZONIPTEFP) + ABMAR + ABTPATEF + TEFFREVTOT * 1 - is_positive(ZONIPTEFP + PVIMPOS * is_positive(ZONIPTEFP) + ZONIPTEFN + PVIMPOS * is_positive(ZONIPTEFN - PVIMPOS) + PVIMPOS - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - PVIMPOS) * null(1 - FLAG_EXIT) + PVSURSI + PVIMPOS * is_positive(ZONIPTEFP) + ZONIPTEFN + PVSURSI * is_positive(ZONIPTEFN - PVSURSI) + PVSURSI - ZONIPTEFN * is_positive(ZONIPTEFN) * 1 - is_positive(ZONIPTEFN - PVSURSI) * null(2 - FLAG_EXIT)) * INDTEFF
TEGLTSREMP3 = GLTSREMP3 * 1 - is_positive(INDTEFF) + TGLTSREMP3 * is_positive(INDTEFF)
ZIGBASERD1 = is_positive(BRDS + V_RDANT) * is_positive(INDCTX)
_7RCM = (1 - is_positive(DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5) * max(0, _7RCM_I - REPRCM7) * 1 - is_positive(ART1731BIS) + is_positive(ART1731BIS) * max(0, _7RCM_I - REPRCM7)) if ((V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [1, 3, 5, 6, 7]}]) else 0
RCMRABD = arr(RCMABD * 40 / 100)
TTSBNP = TTSHALLOP + TALLOP
T2TSN1 = CARTSP1 + REMPLAP1
RDSNAPS = RDSCAPS - CIRDSAPS
RFOREST1 = min(REPFOR + REPSINFOR + REPSINFOR1, max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR))
RISFE = is_positive(DISFBASE) * is_positive(ISFETRANG) * min(ISFPOSTPLAF, ISFETRANG)
TDEDMINC = is_positive(DETSC) * MIN_DEMEMPLOI + 1 - is_positive(DETSC) * MIN_DEDSFORFTS
INVRETQL = min(NINVRETQL, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT)) * 1 - V_CNR
NINVRETQD = max(min(INVLOG2009, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM), 0) * 1 - V_CNR
RCELRREDLT = max(0, RCELRREDLT_1 * 1 - ART1731BIS + min(RCELRREDLT_1, max(RCELRREDLT_P + RCELRREDLTP2, RCELRREDLT1731 + 0) * 1 - PREM8_11) * ART1731BIS)
TERPQTSREMP3M = RPQTSREMP3M * 1 - is_positive(INDTEFF) + TRPQTSREMP3M * is_positive(INDTEFF)
TRPQPALIM4M = inf(TGLPALIM4M / PENSALNBP4)
ABAGU31 = arr(min(IPROGUY1 + IQUOEAJ31 * TX_RABGUY / 100, PLAF_RABGUY))
TBICPF = TMIBNETVF + TMIBNETPF + MIB_NETCT
NINVRETUD = max(min(CODHUD, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX - NINVRETOY - NINVRETOZ - NINVRETUA - NINVRETUB - NINVRETUC), 0) * 1 - V_CNR
LIGDUFLOT = LIGDUFI + LIGDUFLOGIH + LIGDUFLOEKL
NINVRETTB = max(min(CODHTB, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW), 0) * 1 - V_CNR
LIGCELGV = is_positive(DCELREPGV) * LIG1 * LIG2
NRCELREPGK = max(min(ACELREPGK, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV])), 0)
RLOC105 = max(min(INVRETSW * 1 - INDPLAF + INVRETSWA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103, RLOC104])), 0) * 1 - V_CNR
TGLFV = is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * PENFV / TOTALQUO) + 1 - is_positive(PENFC + PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT
LIGCELLE = is_positive(DCELRREDLE) * LIG1 * LIG2
DCINE = CINE1 + CINE2
ABTSREP = max(0, REP103 - ABTS1EJ + ABTS1EP + ABTSREJ) + 0
RFORET_1 = max(min(RAFORET, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1), 0)
GLRCMTSM = is_positive(_6RCM + _7RCM + REVRF) * arr(TONEQUOMHT * _5RCM / TOTALQUOHT) + 1 - is_positive(_6RCM + _7RCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM - GLRCMFUM - GLRCMCHM
RLOC36 = max(min(INVRETQGR * 1 - INDPLAF + INVRETQGRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35])), 0) * 1 - V_CNR
ABTS3VJ = is_positive(BPCOSAV) * is_positive(GLDGRATV + CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * arr(REP10V * BPCOSAV / TSBV) + 1 - is_positive(GLDGRATV + CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * max(0, REP10V - ABTS1AJ - ABTS1AP)
LIGCELHA = is_positive(DCELREPHA) * LIG1 * LIG2
BNCDF1 = 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * abs(NOCEPIMP + SPENETNPF) + positif_ou_nul(NOCEPIMP + SPENETNPF) * positif_ou_nul(DABNCNP5 + DABNCNP4 + DABNCNP3 + DABNCNP2 + DABNCNP1 - NOCEPIMP - SPENETNPF) * DABNCNP5 + DABNCNP4 + DABNCNP3 + DABNCNP2 + DABNCNP1 - NOCEPIMP - SPENETNPF * null(BNCDF6 + BNCDF5 + BNCDF4 + BNCDF3 + BNCDF2) * 1 - is_positive(ART1731BIS) + DEFBNCNPF * is_positive(ART1731BIS * 1 - PREM8_11) + DNOCEP + DNOCEPC + DNOCEPP + BNCAADV + BNCAADC + BNCAADP * is_positive(ART1731BIS * PREM8_11)
LIGPRR2 = is_positive(PRR2V + PRR2C + PRR2P + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + PENALIMV + PENALIMC + PENALIMP + 0)
INANT52 = max(IS512, IS522 - PLANT)
RCMRNTNC = RCMTNC - RCMRTNC
ABDOMDBJ = is_positive(CODDBJ) * is_positive(CODEBJ + GLD1C + GLD2C + GLD3C) * arr(REP10C * CODDBJ / TSBC) + 1 - is_positive(CODEBJ + GLD1C + GLD2C + GLD3C) * max(0, REP10C - ABTSC) + 0
LIGPCAPANT = APPLI_ILIAD * 1 - is_positive(20 - V_NOTRAIT) * is_positive(V_PCAPANT + LIGPCAPNET * is_positive(PCAPNET)) * 1 - is_positive(LIG2051) * TYPE2 * 1 - APPLI_OCEANS
TDEDMIN4 = is_positive(DETS4) * MIN_DEMEMPLOI + 1 - is_positive(DETS4) * MIN_DEDSFORFTS
TGL4 = is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * REV4 / TOTALQUO) + 1 - is_positive(REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLRWB - TGLRWA - TGLRVG - TGL1 - TGL2 - TGL3
INVRETOPA = min(NINVRETOP, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA)) * 1 - V_CNR
RISFPMED_2 = max(0, min(PLAF_ISFRED - RISFDONF_1 - RISFDONCEE_1, RISFPMED_1))
ACELREPGK = CELREPGK * 1 - ART1731BIS + min(DCELREPGK, max(ACELREPGK_P + ACELREPGKP2, ACELREPGK1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPENARPRIME2 = PPE_FORMULE2 * 1 + PPETXMAJ2 * positif_ou_nul(PPE_COEFFCOND2 - 2) * 1 - PPE_BOOL_TP2 + arr(PPE_FORMULE2 * PPETXMAJ1) + arr(PPE_FORMULE2 * PPE_COEFF2 * PPETXMAJ2) * is_positive(2 - PPE_COEFFCOND2) * is_positive(PPE_COEFFCOND2 - 1) * 1 - PPE_BOOL_TP2 + PPE_FORMULE2 * is_positive(PPE_BOOL_TP2 + positif_ou_nul(1 - PPE_COEFFCOND2))
APERPPTEFRFR = 1 - V_CNR * max(min(RPERPP, RBGTEFRFR - RPALETEFRFR - RPALPTEFRFR - RFACCTEFRFR - RDDIVTEFRFR - DDCSG + TOTALQUO - SDD - APERPVTEFRFR - APERPCTEFRFR), 0)
# TODO NAPRD
INVRETOUA = min(NINVRETOU, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA)) * 1 - V_CNR
INVRETMCR = min(arr(INVRETMC * 3 / 2), NINVRETMC - INVRETMC) * 1 - V_CNR
TTPS101 = arr(TTSB1 * TX_DEDFORFTS / 100)
LIG4401 = is_positive(V_FORVA) * 1 - positif_ou_nul(BAFV) * LIG0
TMIB_AVP = min(TMIB_TVENP, max(MIN_MBIC, arr(TMIB_TVENP * TX_MIBVEN / 100)))
LIGMBDREPNPP = is_positive(MIBDREPNPP) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
LIGNMAJPCAP4 = TYPE2 * is_positive(NMAJPCAP4)
SOMDEFBANI = BACDEV + BAHDEV + BACDEC + BAHDEC + BACDEP + BAHDEP
XBNV = BNHEXV + BNCEXV
LIGLOCSEUL = 1 - is_positive(LIGNPLOC + LIGDEFNPLOC + LIGNPLOCF)
TERPQPRR3 = RPQPRR3 * 1 - is_positive(INDTEFF) + TRPQPRR3 * is_positive(INDTEFF)
TEXTSC = TTSBNC + BPCOSAC + GLDGRATC + T2TSNC
NINVRETSW = max(min(CODHSW, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR), 0) * 1 - V_CNR
RCELREPHU = max(0, RCELREPHU_1 * 1 - ART1731BIS + min(RCELREPHU_1, max(RCELREPHU_P + RCELREPHUP2, RCELREPHU1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGRIDB = is_positive(INDNIRI * null(IBM23) * positif_ou_nul(TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES - SEUIL_61) + positif_ou_nul(NAPCRP - SEUIL_61) * positif_ou_nul(NAPTIR + NAPCRP - SEUIL_12) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * 1 - is_positive(NRINET) * LIG2)
TERPQ4VCM = RPQ4VCM * 1 - is_positive(INDTEFF) + TRPQ4VCM * is_positive(INDTEFF)
NINVRETAGR = NINVRETAG - arr(NINVRETAG * TX375 / 100) * 1 - V_CNR
BARAP = BACREP + _4BACREP - BACDEP * 1 - is_positive(ART1731BIS * PREM8_11)
ZIGTITRE = is_positive(is_positive(BCSG + V_CSANT + BRDS + V_RDANT + BPRS + V_PSANT) * 1 - V_CNR * 1 - is_positive(ZIG_RF + max(0, NPLOCNETSF)) + is_positive(BCVNSAL + V_CVNANT + BCDIS + V_CDISANT) * TYPE4) * 1 - is_positive(ANNUL2042)
NINVRETAP = max(min(CODHAP, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK), 0) * 1 - V_CNR
INVRETPO = min(arr(NINVRETPO * TX40 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI)) * 1 - V_CNR
INVRETSFR = min(arr(INVRETSF * 10 / 9), NINVRETSF - INVRETSF) * 1 - null(1 - abs(arr(INVRETSF * 10 / 9) - NINVRETSF - INVRETSF)) + NINVRETSF - INVRETSF * null(1 - abs(arr(INVRETSF * 10 / 9) - NINVRETSF - INVRETSF)) * 1 - V_CNR
CS_TAX1649 = TAX1649
TSN1EJ = TSHALLO3 - ABTS1EJ
LIGISFNMRDEG = 1 - is_positive(LIGISFDEGR) * 1 - null(ISF5) * is_positive(SEUIL_12 - ISF4BIS) * is_positive(DISFBASE) * INDCTX23 * null(5 - V_IND_TRAIT) * 1 - is_positive(ANNUL2042)
RENT36 = max(min(INVRETBAR * 1 - INDPLAF + INVRETBARA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30, RENT31, RENT32, RENT33, RENT34, RENT35])), 0) * 1 - V_CNR
DOMITPG = arr(BN1 + SPEPV + BI12F + BA1) * TX09 / 100 * is_positive(V_EAG)
BIOIMP = positif_ou_nul(BIOREST) * CREAGRIBIO - BIOREST
ZIGLOA22 = is_positive(RETGLOA22)
ABADO = arr(min(ID11 * TX_RABDOM / 100 * PRODOM * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) * 1 - is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)) + ABADO1 * is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ))
INVRETKT = NINVRETKT * 1 - V_CNR
# TODO TTPVQ
HONONETV = arr(XHONOV * MAJREV) + XHONOAAV
RFCEAPS = max(0, RFORDI - RFDORD) * 1 - is_positive(ART1731BIS) + max(0, RFORDI - DEFRF4BB) * is_positive(ART1731BIS)
NRCELREPYC = max(min(ACELREPYC, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ])), 0)
RPQTSREMP1M = inf(GLTSREMP1M / REMPLANBP1)
LIGREPQX = is_positive(REPQX) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
ACELHNO_R = positif_ou_nul(CELLIERHN + CELLIERHO) * BCEL_HNO * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGBNCDF6 = is_positive(BNCDF6) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
NPLOCSP = arr(NPLOCPAC * LOCNPPAC / LOCNPPAC + LOCGITHCP) * is_positive(LOCNPPAC) + min(0, NPLOCPAC) * 1 - is_positive(LOCNPPAC)
RCEL_NBGL = is_positive(CELLIERNB) * arr(ACELNBGL * TX25 / 100) + is_positive(CELLIERNG) * arr(ACELNBGL * TX15 / 100) + is_positive(CELLIERNL) * arr(ACELNBGL * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INE = CIRCMAVFT + IRETS + min(max(0, IAD11 - CIRCMAVFT - IRETS), CRCFA) + ICREREVET + CIGLO + CICULTUR + CIGPA + CIDONENTR + CICORSE + CIRECH + CICOMPEMPL * 1 - is_positive(RE168 + TAX1649)
INETABADAJ31 = max(0, IPRODOM1 + IQUODAJ31 - ABADO31)
RCELREPHS = max(0, RCELREPHS_1 * 1 - ART1731BIS + min(RCELREPHS_1, max(RCELREPHS_P + RCELREPHSP2, RCELREPHS1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
SOMMEA891 = SOMMEA881
ABADON4 = arr(min(ID14 * TX_RABDOM / 100 * PRODOM * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) + arr(min(ID14 * TX_RABGUY / 100 * PROGUY * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY))
TSNEBJ = CODEBJ - ABDOMEBJ
LIGREP7PB = is_positive(REPMEUPB) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ADOMSOC1_1 = INVRETKG + INVRETKH + INVRETKI + INVRETQN + INVRETQU + INVRETQK + INVRETQJ + INVRETQS + INVRETQW + INVRETQX + INVRETRA + INVRETRB + INVRETRC + INVRETRD + INVRETKGR + INVRETKHR + INVRETKIR + INVRETQNR + INVRETQUR + INVRETQKR + INVRETQJR + INVRETQSR + INVRETQWR + INVRETQXR + INVRETRAR + INVRETRBR + INVRETRCR + INVRETRDR * 1 - INDPLAF + INVRETKGA + INVRETKHA + INVRETKIA + INVRETQNA + INVRETQUA + INVRETQKA + INVRETQJA + INVRETQSA + INVRETQWA + INVRETQXA + INVRETRAA + INVRETRBA + INVRETRCA + INVRETRDA + INVRETKGRA + INVRETKHRA + INVRETKIRA + INVRETQNRA + INVRETQURA + INVRETQKRA + INVRETQJRA + INVRETQSRA + INVRETQWRA + INVRETQXRA + INVRETRARA + INVRETRBRA + INVRETRCRA + INVRETRDRA * INDPLAF * 1 - V_CNR
LIGSINFOR3 = is_positive(REPFORSIN3) * LIG1 * LIG2
INVRETAUR = min(arr(INVRETAU * 10 / 9), NINVRETAU - INVRETAU) * 1 - null(1 - abs(arr(INVRETAU * 10 / 9) - NINVRETAU - INVRETAU)) + NINVRETAU - INVRETAU * null(1 - abs(arr(INVRETAU * 10 / 9) - NINVRETAU - INVRETAU)) * 1 - V_CNR
TGLRVO7 = is_positive(REVRCM + REVRF) * arr(TONEQUO * _2RV4 / TOTALQUO) + 1 - is_positive(REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVO - TGLRVO5 - TGLRVO6
ZIPQTSREMP35 = is_positive(TEGLTSREMP4M) * arr(IQUOTOT5 * TERPQTSREMP3M / TETONEQUOM1) + 1 - is_positive(TEGLTSREMP4M) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQTS5TOT - ZIPQTSREMPV5 - ZIPQTSREMPC5 - ZIPQTSREMP15 - ZIPQTSREMP25
ACELREPHE = CELREPHE * 1 - ART1731BIS + min(CELREPHE, max(ACELREPHE_P + ACELREPHEP2, ACELREPHE1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PSBASE = PRS - PRSPROV
INDE2 = is_positive(INDRSE2 + INDRSE2X) * INDTRAIT
LIGILMIZ = is_positive(DILMIZ) * LIG1 * LIG2
PPE_BOOL_MINU = positif_ou_nul(PPE_RTAU - PPELIMRPB) * 1 - PPE_BOOL_NADAU
ZIPQFC2 = is_positive(sum([TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQFC / TETONEQUO1) + 1 - is_positive(sum([TEGLF1, TEGLF2, TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQFV2
ZIPQPRR25 = is_positive(sum([TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPRR2M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRRV5 - ZIPQPRRC5 - ZIPQPRR15
IPQF22 = ZIPQF22 * COTF2
ZIGRFRET = is_positive(COD8YK) * 1 - is_positive(COD8XK) * LIG2
DEFNPLOCFAV = max(0, abs(DEFNPLOCF) - DEFLOC2 - DEFLOC3 - DEFLOC4 - DEFLOC5 - DEFLOC6 - DEFLOC7 - DEFLOC8 - DEFLOC9 - DEFLOC10)
TRCM = TRCM1 + _2RNC + _2RCAV + _2RAO
TOTDEFLOCNPPS = LNPRODEF10 + LNPRODEF9 + LNPRODEF8 + LNPRODEF7 + LNPRODEF6 + LNPRODEF5 + LNPRODEF4 + LNPRODEF3 + LNPRODEF2 + LNPRODEF1
RAFORET = arr(AFORET_1 * TX_FORET / 100)
ZIPQTSC2 = is_positive(sum([TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * arr(IQUOTOT2 * TERPQTSC / TETONEQUO1) + 1 - is_positive(sum([TEGLTS1, TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQPRRZ2TOT - ZIPQTSV2
TERPQFCM = RPQFCM * 1 - is_positive(INDTEFF) + TRPQFCM * is_positive(INDTEFF)
REPQF = max(0, INVDOMRET50 - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1)) * 1 - ART1731BIS + max(0, INVDOMRET50 - max(0, RCOLENT - REPENT5 - REPENT4 - INVOMQV - INVENDEB2009 - INVRETRO2 - INVDOMRET60 - INVOMRETPB - INVOMRETPF - INVOMRETPJ - INVRETRO1)) * ART1731BIS * 1 - V_CNR
ABGLTV = sum([ABGL1V, ABGL2V, ABGL3V]) + ABDOMDAJ + ABDOMEAJ
TRPQTSV = inf(TGLTSV / CARTSNBAV)
PVBAR3VG = BPVRCM + PVTAXSB
# TODO NUPROPT
PERPINDCC = BOOL_0AM * is_positive(V_BTPERPTOTC + PERPPLAFCC + PERPPLAFNUC1 + PERPPLAFNUC2 + PERPPLAFNUNC + PERP_COTC + RACCOTC) * PERPINDC * 1 - V_CNR
APPREST = is_positive(REST) * max(0, min(CREAPP, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO))
INVRETPA = min(arr(NINVRETPA * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ)) * 1 - V_CNR
LIGREPAU = is_positive(REPAU) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
DEFBACREP = is_positive(_4BACREP) * arr(BACDEP * 1 - is_positive(ART1731BIS * PREM8_11) * BACREP / BARREVAP) + 1 - is_positive(_4BACREP) * BACDEP * 1 - is_positive(ART1731BIS * PREM8_11)
TMIB_APC = min(TMIB_TPRESC, max(MIN_MBIC, arr(TMIB_TPRESC * TX_MIBPRES / 100)))
RPQ2 = inf(GL2 / DIVGL2) + 0
IND_IRINF80 = (1 - is_positive(INDCTX) * 1 - is_positive(IREST)) if (CODINI + 0 == 9 and NATIMP + 0 == 0 or CODINI + 0 == 99 and V_CR2 == 0 and IRNET + TAXASSUR + IPCAPTAXT + TAXLOY + CHRAPRES + NAPCR < SEUIL_12 and IAVIM + NAPCRPAVIM >= SEUIL_61) else 0
PERPSALNP = PERPSALP - PERPSALDP
PRNN4 = EXPR4 - APR4
LIGREPMEU = is_positive(REPINVRED + REPMEUIH + REPLOCN1 + REPMEUPB + REPLNPY) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RLOC33 = max(min(INVRETPH * 1 - INDPLAF + INVRETPHA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32])), 0) * 1 - V_CNR
TFRDC = 1 - is_positive(ART1731BIS) * FRNC + COD1BE * is_positive(FRNC + COD1BE - T10MINSC) + null(4 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRNC + COD1BE, TFRDPROVC) + null(5 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRNC + COD1BE, min(TFRDPROVC, max(TFRDPROVCP2, TFRDPROVC1731)))
IPQF31 = ZIPQF31 * COTF3
TSNN23 = is_positive(TS3) * is_positive(CARTSP3 + REMPLAP3) * arr(TS3 * _2TSN3 / EXTS3) + 1 - is_positive(CARTSP3 + REMPLAP3) * TS3 - TSNN3
GLF3M = is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENF3 / TOTALQUOHT) + 1 - is_positive(PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFVM - GLFCM - GLF1M - GLF2M
TEGL4TVCM = GL4TVCM * 1 - is_positive(INDTEFF) + TGL4TVCM * is_positive(INDTEFF)
LIGREPNEUV = is_positive(MEUBLERED + REPREDREP + REPMEUIX + REPLOCN2 + REPMEUPA + REPLNPZ) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
IPQPRRZ41 = ZIPQPRRZ41 * CODNFZ
LIGREPDONR4 = is_positive(REPDONR4) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
REPMEUIH = AILMIH_R - RILMIH * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGLOCRES4 = is_positive(RIVL4RES) * LIG1
TSB2 = EXTS2
LIG30YT = INDC * 1 - INDV * 1 - INDP * ART1731BIS * LIG0 * LIG2
CRSE3D = NAPRSE3 - V_RSE3ANT
REPRY = max(0, INVOMENTRY - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW - INVOMRETPR - INVOMRETPW - INVOMENTRI - INVOMENTRO - INVOMENTRT)) * 1 - ART1731BIS + max(0, INVOMENTRY - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV - INVOMENTNV - INVOMRETPN - INVOMRETPS - INVOMRETPX - INVOMENTRK - INVOMENTRP - INVOMENTRU - INVOMENTNU - INVOMRETPP - INVOMRETPU - INVOMENTRG - INVOMENTRM - INVOMENTRR - INVOMENTRW - INVOMENTNW - INVOMRETPR - INVOMRETPW - INVOMENTRI - INVOMENTRO - INVOMENTRT)) * ART1731BIS * 1 - V_CNR
LIGILMJI = is_positive(DILMJI) * LIG1 * LIG2
PPE_BOOL_SEULPAC = null(V_0CF + V_0CR + V_0DJ + V_0DN + V_0CH + V_0DP - 1)
LIGIINET = LIGSUP * is_positive(NAPT + 0) + null(IINETCALC)
GL2M = is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * GLN2 / TOTALQUOHT) + 1 - is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLRWBM - GLRWAM - GLRVGM - GL1M
PENALIMV = is_positive(EXPRV) * PRNV - PRRV - PRR2V - PRR2ZV - PENFV
RIVCELJBGL7 = RIVCELJBGL1
IPQTSREMP15 = ZIPQTSREMP15 * REMPLANBP1
RETCODJU = arr(arr(ACODJU / 9) * TX11 / 100)
LIGCELLC = is_positive(DCELRREDLC) * LIG1 * LIG2
PERP_INDV = is_positive(0 + is_positive(TSHALLOV) + is_positive(ALLOV) + is_positive(GLD1V) + is_positive(GLD2V) + is_positive(GLD3V) + is_positive(GLDGRATV) + is_positive(BPCOSAV) + is_positive(TSASSUV) + is_positive(CARTSV) + is_positive(FEXV) + is_positive(BAFV) + is_positive(BAFPVV) + is_positive(BAEXV) + is_positive(BACREV) + is_positive(_4BACREV) + is_positive(BACDEV * 1 - is_positive(ART1731BIS)) + is_positive(BAHEXV) + is_positive(BAHREV) + is_positive(_4BAHREV) + is_positive(BAHDEV * 1 - is_positive(ART1731BIS)) + is_positive(BAPERPV) + is_positive(MIBEXV) + is_positive(MIBVENV) + is_positive(MIBPRESV) + is_positive(MIBPVV) + is_positive(AUTOBICVV) + is_positive(AUTOBICPV) + is_positive(BICEXV) + is_positive(BICNOV) + is_positive(BICDNV * 1 - is_positive(ART1731BIS)) + is_positive(BIHEXV) + is_positive(BIHNOV) + is_positive(BIHDNV * 1 - is_positive(ART1731BIS)) + is_positive(BIPERPV) + is_positive(LOCPROCGAV) - is_positive(LOCDEFPROCGAV * 1 - is_positive(ART1731BIS)) + is_positive(LOCPROV) - is_positive(LOCDEFPROV * 1 - is_positive(ART1731BIS)) + is_positive(BNCPROEXV) + is_positive(BNCPROV) + is_positive(BNCPROPVV) + is_positive(AUTOBNCV) + is_positive(BNCEXV) + is_positive(BNCREV) + is_positive(BNCDEV * 1 - is_positive(ART1731BIS)) + is_positive(BNHEXV) + is_positive(BNHREV) + is_positive(BNHDEV * 1 - is_positive(ART1731BIS)) + is_positive(BNCCRV))
TPRR1 = arr(TPRN1 * PRB1 / TEXPR1) + arr(TPRN1 * COD1CH / TEXPR1)
RLOC77 = max(min(INVRETPYR * 1 - INDPLAF + INVRETPYRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76])), 0) * 1 - V_CNR
NINVRETKI = max(min(INVOMSOCKI, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH), 0) * 1 - V_CNR
PPE_BOOL_MONO = 1 - PPE_BOOL_MAJO * 1 - PPE_BOOL_MAJOBT * is_positive(PPE_NB_PAC + PPE_NB_PAC_QAR - PPE_NBNONELI) * INDMONO * is_positive(PPE_BOOL_BT + BOOL_0AM) * positif_ou_nul(PPE_RTAV - PPELIMRPB) * positif_ou_nul(PPELIMRPH2 - PPE_RCONTPV) * 1 - is_positive(PPE_BOOL_NADAV) + is_positive(BOOL_0AM) * positif_ou_nul(PPE_RTAC - PPELIMRPB) * positif_ou_nul(PPELIMRPH2 - PPE_RCONTPC) * 1 - is_positive(PPE_BOOL_NADAC)
NRILMJS = max(min(AILMJS, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC), 0)
APB2 = max(PLR2, EXPR2 * TX_DEDPER / 100)
TONEQUOHT = max(0, TOTALQUOHT - SDD + SDC + SDV + SDM * 1 - is_positive(VARIPTEFP * is_positive(ART1731BIS) + IPTEFP * 1 - ART1731BIS + VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS + TEFFREVTOT * INDTEFF) - VARIPTEFN * is_positive(ART1731BIS) + IPTEFN * 1 - ART1731BIS)
INVRETSZR = min(arr(INVRETSZ * 10 / 9), NINVRETSZ - INVRETSZ) * 1 - null(1 - abs(arr(INVRETSZ * 10 / 9) - NINVRETSZ - INVRETSZ)) + NINVRETSZ - INVRETSZ * null(1 - abs(arr(INVRETSZ * 10 / 9) - NINVRETSZ - INVRETSZ)) * 1 - V_CNR
BPTP24 = RCM2FA * 1 - is_positive(present(TAX1649) + present(RE168)) * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO))
RCELREP_HU_R = is_positive(CELREPHU) * arr(CELREPHU * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ABTSRAJ = is_positive(CARTSV) * is_positive(REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * arr(REP10V * CARTSV / TSBV) + 1 - is_positive(REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * max(0, REP10V - ABTS1AJ - ABTS1AP - ABTS3VJ - ABTS1TT)
LIGREPPHO = is_positive(REPPH + REPRT + REPSO + REPAO) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
REPXA = max(0, CODHXA - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW - INVOMSOCQX - CODHRA - CODHRB - CODHRC - CODHRD)) * 1 - ART1731BIS + max(0, CODHXA - RLOGSOC) * ART1731BIS * 1 - V_CNR
ZIGIDGLO4 = ZIGIDGLO * null(ANCSDED2 - V_ANREV + 4)
GLTOT = sum([GL1, GL2, GL3, GL4]) + GLRVG + GLRWB + GLRWA
INVRETRKR = min(arr(INVRETRK * 10 / 9), NINVRETRK - INVRETRK) * 1 - null(1 - abs(arr(INVRETRK * 10 / 9) - NINVRETRK - INVRETRK)) + NINVRETRK - INVRETRK * null(1 - abs(arr(INVRETRK * 10 / 9) - NINVRETRK - INVRETRK)) * 1 - V_CNR
TERPQRWAM = RPQRWAM * 1 - is_positive(INDTEFF) + TRPQRWAM * is_positive(INDTEFF)
GLTSREMP1M = is_positive(TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2REMP1 / TOTALQUOHT) + 1 - is_positive(TSNN2REMP2 + TSNN2REMP3 + TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM - GLTSREMPCM
TSPRD2 = min(0, TSNN2 + PRR2) * ART1731BIS
LIG1950 = INDREV1A8 * positif_ou_nul(REVKIRE) * 1 - positif_ou_nul(IND_TDR) * 1 - is_positive(ANNUL2042 + 0)
XEXTSV = XTSBV + CARTSV + REMPLAV
INVRETRKA = min(arr(NINVRETRK * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA)) * 1 - V_CNR
TPMIB_NETVV = MIBVENV + AUTOBICVV - TPMIB_AVV
RPLAFREPME4 = max(min(APLAFREPME4, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV), 0)
BDRSE3 = max(0, INDECS - REVCSXD - arr(CSPROVYG / TX062 / 100)) * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
ZIPQRF5TOT = sum([ZIPQRF15, ZIPQRF25])
TTSNC = is_positive(TTSNTC) * min(0, TTSNTC + TPRNNC) + positif_ou_nul(TTSNTC) * TTSNTC
ZIGPENARSE3 = is_positive(PRSE3) * is_positive(NMAJRSE31) * LIG2
REPENT2 = INVOMRETPM + INVOMENTRJ + INVOMRETPO + INVOMRETPT + INVOMRETPY + INVOMENTRL + INVOMENTRQ + INVOMENTRV + INVOMENTNV + INVOMRETPN + INVOMRETPS + INVOMRETPX + INVOMENTRK + INVOMENTRP + INVOMENTRU + INVOMENTNU + INVOMRETPP + INVOMRETPU + INVOMENTRG + INVOMENTRM + INVOMENTRR + INVOMENTRW + INVOMENTNW + INVOMRETPR + INVOMRETPW + INVOMENTRI + INVOMENTRO + INVOMENTRT + INVOMENTRY + INVOMENTNY
IND_MINV = 1 - is_positive(IND_10MIN_0V)
IPQPRRANT21 = ZIPQPRRANT21 * CARPENBAP2
TSNRFJ = CARTSP4 - ABTSRFJ
INETABAEAJ4 = max(0, IPROGUY4 - ABAGU4)
NAPTIR = IRNET + TAXANET + TAXLOYNET + PCAPNET + HAUTREVNET - IRESTITIR
ZIPQRCMCH2 = is_positive(TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQRCMCH / TETONEQUO1) + 1 - is_positive(TEGLRCMTS + TEGLRCMGO + TEGLRCMTR + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCMDC2 - ZIPQRCMFU2
ZIPQPRRANTV1 = is_positive(sum([TEGLPRRC, TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPRRV / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRC, TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT
PPESAL3 = PPE_SALAVDEF3 * 1 - PPE_BOOL_SEULPAC
TTSPRDC = min(0, TTSNNC + TPRRC) * ART1731BIS
CIGARD = RFG * 1 - is_positive(RE168 + TAX1649)
ZIPQANTRVG = is_positive(sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQRVG / TETONEQUO1) + 1 - is_positive(sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANTRWB - ZIPQANTRWA
TBNCTOTABP = arr(TSPEABP * AUTOBNCP / TSPETOTP)
QF024 = arr(RB04) / NB2
TMIB_TVENC = MIBVENC + AUTOBICVC + MIBNPVENC + MIBGITEC + LOCGITC
VARRFDORD = min(RFCD, RFDORD)
IPQPRR45 = ZIPQPRRZ45 * CARPENBAP4
TEGLFCM = GLFCM * 1 - is_positive(INDTEFF) + TGLFCM * is_positive(INDTEFF)
IPQRCMGO1 = ZIPQRCMGO1 * RESTUCNB
NINVRETRDR = NINVRETRD - arr(NINVRETRD * TX35 / 100) * 1 - V_CNR
LIGCRED2 = 1 - is_positive(REGCI + LIGPVETR + LIGCICAP + LIGREGCI + LIGCI8XV + LIGCIGLO + 0) * is_positive(IPSOUR + LIGCULTURE + LIGMECENAT + LIGCORSE + LIG2305 + LIGEMPLOI + LIGCI2CK + LIGBPLIB + LIGCIGE + LIGDEVDUR + LIGCICA + LIGCIGARD + LIG82 + LIGPRETUD + LIGSALDOM + LIGCIFORET + LIGHABPRIN + LIGCREFAM + LIGCREAPP + LIGCREBIO + LIGPRESINT + LIGCREPROSP + LIGINTER + LIGRESTAU + LIGCONGA + LIGMETART + LIGCREFORM + LIGLOYIMP + LIGVERSLIB + LIGCITEC + 0)
CHRTHEOTOT = arr(max(0, CHRTHEO11 + CHRTHEO21) * 2)
DS012 = max(QF012 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF012 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF012 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF012 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF012 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
NINVRETRK = max(min(INVOMENTRK, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX), 0) * 1 - V_CNR
GATASAC = BPCOSAC + GLDGRATC
DS521 = max(QF521 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF521 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF521 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF521 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF521 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
MIB_NETNPPLP = MIBMEUP - MIB_ABNPPLP
CS_RFG = RDRFPS
GLNAV3V = max(GLD3V - ABGL3V, 0) * INDEFTSV
ABADON6 = arr(min(ID16 * TX_RABDOM / 100 * PRODOM * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) + arr(min(ID16 * TX_RABGUY / 100 * PROGUY * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY))
PPE_DATE_DEB = is_positive(V_0AV + 0) * is_positive(V_0AZ + 0) * V_0AZ + 0 + is_positive(DATRETETR + 0) * DATRETETR + 0 * null(V_0AZ + 0)
LIGDLMRN1 = is_positive(DLMRN1) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
LIGCESDOMG = is_positive(BPTPDIV) * is_positive(PVTAXSB) * is_positive(V_EAG + 0) * LIG0 * LIG2
TEGLTSCM = GLTSCM * 1 - is_positive(INDTEFF) + TGLTSCM * is_positive(INDTEFF)
REPDONR1 = positif_ou_nul(BASEDONF + REPDON04 + REPDON05 + REPDON06 - arr(REVDON * TX_BASEDUP / 100)) * REPDON07 + 1 - positif_ou_nul(BASEDONF + REPDON04 + REPDON05 + REPDON06 - arr(REVDON * TX_BASEDUP / 100)) * max(REPDON07 + BASEDONF + REPDON04 + REPDON05 + REPDON06 - arr(REVDON * TX_BASEDUP / 100), 0) * 1 - V_CNR
BCSG = arr(RDRFPS * 1 - null(4 - V_REGCO) + COD8XK + COD8YK + RDRV + RDRCM + RDNP + RDNCP + RDPTP + ESFP + R1649 + PREREV * 1 - V_CNR) * 1 - is_positive(present(RE168) + present(TAX1649)) + RE168 + TAX1649 * 1 - V_CNR
ABNCPDECP = AUTOBNCP
RENT01 = max(min(INVRETAB * 1 - INDPLAF + INVRETABA * INDPLAF, RRIRENT), 0) * 1 - V_CNR
NINVRETSM = max(min(CODHSM, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH), 0) * 1 - V_CNR
BRSE5 = SALECSG * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
ZIPQPALIMV2 = is_positive(sum([TEGLPALIMC, TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQPALIMV / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIMC, TEGLPALIM1, TEGLPALIM2, TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT
LIGPPEMAY = is_positive(PPETOTMAY) * null(7 - V_REGCO)
RCEL2012 = max(0, RCEL2012_1 * 1 - ART1731BIS + min(RCEL2012_1, max(RCEL2012_P + RCEL2012P2, RCEL20121731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
INVRETAO = NINVRETAO * 1 - V_CNR
INVRETRVA = min(arr(NINVRETRV * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA)) * 1 - V_CNR
RTNC = RCMRNTNC + _2RCMRNTNC
IPQPRRZ11 = ZIPQPRRZ11 * CODNCZ
BAEC = _4BACREC - _4DEFBACREC * positif_ou_nul(BARAC) + 0
IQUOTOT5 = IN55 - IN05
RLOC06 = max(min(INVRETLGR * 1 - INDPLAF + INVRETLGRA * INDPLAF, RRILOC - RLOC01 - RLOC02 - RLOC03 - RLOC04 - RLOC05), 0) * 1 - V_CNR
TBICPROVP = max(0, arr(TMIB_ABVP * AUTOBICVP / MIBVENP + AUTOBICVP + TMIB_ABPP * AUTOBICPP / MIBPRESP + AUTOBICPP))
CORREST = is_positive(REST) * max(0, min(CICORSENOW, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - IPELUS - CITEC - CIDEVDUR - CIGE - I2DH - CI2CK - COD8TL - CIDIREPARGNE - IPRECH - CIEXCEDENT))
BNNAC = BNCREC - BNCDEC * 1 - is_positive(ART1731BIS * PREM8_11)
PREIMP = positif_ou_nul(PREREST) * CIPRETUD - PREREST
GLPALIM3 = is_positive(PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENALIM3 / TOTALQUOHT) + 1 - is_positive(PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV - GLPALIMC - GLPALIM1 - GLPALIM2
TPRB2 = PRBR2 + PALI2 + PENIN2
NRRI3 = NRCELTOT + NRLOCNPRO + NRPATNAT1 + NRPATNAT2 + NRPATNAT3 + NRPATNAT
TGLF1 = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * PENF1 / TOTALQUO) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV - TGLFC
GECUM = min(P2GE, BGEPAHA + BGTECH) + BTANTGECUM
RENT06 = max(min(INVRETBB * 1 - INDPLAF + INVRETBBA * INDPLAF, RRIRENT - sum([RENT01, RENT02, RENT03, RENT04, RENT05])), 0) * 1 - V_CNR
LIGCELGP = is_positive(DCELREPGP) * LIG1 * LIG2
NINVRETOY = max(min(CODHOY, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG - NINVRETOX), 0) * 1 - V_CNR
RIVDUGIH = arr(arr(min(DUFLOGI + 0, LIMDUFLO) / 9) * TX29 / 100) + arr(arr(min(DUFLOGH + 0, LIMDUFLO - min(DUFLOGI + 0, LIMDUFLO)) / 9) * TX18 / 100) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
RTOUHOTR = RTOUHOTR_1 * 1 - ART1731BIS + min(RTOUHOTR_1, max(RTOUHOTR_P + RTOUHOTRP2, RTOUHOTR1731 + 0) * 1 - PREM8_11) * ART1731BIS
INVRETSBRA = min(NINVRETSBR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA)) * 1 - V_CNR
TRPQPRR1M = inf(TGLPRR1M / CARPENBAP1)
REPLOCIN = RETCODIN - RCODIN * is_positive(INVNPROF1 + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TGLFTOTM = sum([TGLFVM, TGLFCM, TGLF1M, TGLF2M, TGLF3M, TGLF4M])
NB0BT2MIQAR = null(1 - VAR0BT) * null(V_0CF + V_0DJ + V_0CR + 0) * is_positive(V_0CH + 0) + is_positive(V_0CH - 1)
PERPPLAFMUTV = is_positive(PERP_COND1) * 1 - is_positive(PERPIMPATRIE) * PERPPLATVANT + max(0, PERPPLATCANT - PERP_COTC) + is_positive(PERPIMPATRIE) * PERPPLAFIMPV + max(0, PERPPLAFIMPC - PERP_COTC)
RFOREST = arr(RFOREST1 * TX25 / 100) + arr(RFOREST2 * TX22 / 100) + arr(RFOREST3 * TX18 / 100) + arr(max(0, AFOREST - RFOREST1 - RFOREST2 - RFOREST3) * TX18 / 100) * 1 - V_CNR
LIGREPPD = is_positive(REPPD) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
# TODO DLMRN6
RILMIB_1 = max(min(AILMIB, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC), 0)
PPE_BOOL_MAXC = positif_ou_nul(PPE_HAUTE - PPE_RCONTPC)
NINVRETPSR = NINVRETPS - arr(NINVRETPS * TX50 / 100) * 1 - V_CNR
GLTSREMPTOT = sum([GLTSREMPV, GLTSREMPC, GLTSREMP1, GLTSREMP2, GLTSREMP3, GLTSREMP4])
LIGTITREXCP = 1 - is_positive(EXOVOUS) * is_positive(EXOCJT) * is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
REPMEUPE = DILMPE - RILMPE * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RILMPC = max(min(AILMPC, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI), 0)
IRBASE_I = IRN - IRANT * is_positive(IRN + 1 - SEUIL_12)
DTEC = RISKTEC
BRSE2 = ALLECS + COD8SA * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
NINVRETQT = max(min(INVLGDEB, RRI1 - INVLOG2008 - INVLGDEB2009), 0) * 1 - V_CNR
TABTSRCP = max(0, TREP101 - TABTS1CJ - TABTS1CC - TABTS1CP - TABTSRCJ)
PPERSA = min(PPETOTX, PPERSATOT) * 1 - V_CNR
RILMJC = max(0, RILMJC_1 * 1 - ART1731BIS + min(RILMJC_1, max(RILMJC_P + RILMJCP2, RILMJC1731 + 0) * 1 - PREM8_11) * ART1731BIS)
NRCELTOT = sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) + NRCELRREDMG + NRCELRREDMH + sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) + sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) + sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) + NRCELHM + NRCELHL + NRCELHNO + NRCELHJK + NRCELNQ + NRCELNBGL + NRCELCOM + NRCEL + NRCELJP + NRCELJBGL + NRCELJOQR + NRCEL2012 + NRCELFD + NRCELFABC
_4DEFBAHREC = is_positive(_4BAHREC) * BAHDEC * 1 - is_positive(ART1731BIS * PREM8_11) - DEFBAHREC
REPCEL = sum([RIVCEL1, RIVCEL2, RIVCEL3, RIVCEL4, RIVCEL5, RIVCEL6, RIVCEL7]) + RIVCEL8
LIG1431 = is_positive(BPTP18) * LIG0 * LIG2
NINVRETRBR = NINVRETRB - arr(NINVRETRB * TX35 / 100) * 1 - V_CNR
RCELRREDMH_1 = max(min(ACELRREDMH, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1 - RCELRREDLS_1 - RCELRREDLT_1 - RCELRREDLF_1 - RCELRREDLZ_1 - RCELRREDLX_1 - RCELRREDMG_1), 0)
RIVCELHLM2 = RIVCELHLM1
TXSPEHV = max(0, arr(BNHREV + XHONOV - BNHDEV * 1 - is_positive(ART1731BIS) * MAJREV)) + min(0, BNHREV + XHONOV - BNHDEV * 1 - is_positive(ART1731BIS))
RENT13 = max(min(INVRETAC * 1 - INDPLAF + INVRETACA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12])), 0) * 1 - V_CNR
NINVRETPA = max(min(INVOMRETPA, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETQO - NINVRETQF), 0) * 1 - V_CNR
GLPALIMTOTM = sum([GLPALIMVM, GLPALIMCM, GLPALIM1M, GLPALIM2M, GLPALIM3M, GLPALIM4M])
MIB_ABPV = max(0, arr(MIB_APV * MIBPRESV / MIB_TPRESV))
RESIVIEU7 = arr(arr(ACODIM / 9) * TX25 / 100)
CRSE2D = NAPRSE2 - V_RSE2ANT
TABGL1V = is_positive(GLD1V) * is_positive(GLD2V + GLD3V) * arr(TREP10V * GLD1V / TTSBV) + 1 - is_positive(GLD2V + GLD3V) * max(0, TREP10V - TABTSV - TABDOMDAJ - TABDOMEAJ) + 0
ID12 = arr(IPQ2 * arr(RI2 + REVQUOQHT) / arr(RB02 + TONEQUO))
# TODO NAPCR
LIGREPQR = is_positive(REPQR) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
PPENBH2 = PPENHP2 + PPEXT2
TTSNT4 = TTSN1FJ + TTSN1FC + TTSN1FP + TTSNRFJ + TTSNRFP
REPPY = max(0, INVOMRETPY - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT)) * 1 - ART1731BIS + max(0, INVOMRETPY - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT)) * ART1731BIS * 1 - V_CNR
DCELRREDMH = CELRREDMH
ACELFD_R = positif_ou_nul(DCELFD) * BCEL_FD * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
DCELHNO = CELLIERHN + CELLIERHO
X10MINS4 = max(min(XTSB4, DEDMIN4), XDFN4)
NPLOCSSC = min(0, LOCNPC + LOCGITHCC - LOCDEFNPC) * positif_ou_nul(LOCDEFNPC - LOCNPC - LOCGITHCC) + arr(max(0, LOCNPC + LOCGITHCC - LOCDEFNPC) * MAJREV) * is_positive(LOCNPC + LOCGITHCC - LOCDEFNPC)
GLRWBM = is_positive(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * CODRWB / TOTALQUOHT) + 1 - is_positive(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT * is_positive(null(1 - FLAG_EXIT) + null(2 - FLAG_EXIT))
NINVRETKIR = NINVRETKI - arr(NINVRETKI * TX35 / 100) * 1 - V_CNR
INDGLOA = is_positive(BGLOA) * is_positive(PGLOA + COD8YL) * 1 - INDCTX
LIGRCELHNO = is_positive(RIVCELHNO1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
RCODJU6 = arr(arr(ACODJU / 9) * TX11 / 100)
RSE2 = arr(BRSE8TV * TXTV / 100) * 1 - is_positive(ANNUL2042) + arr(BRSE8SA * TXTV / 100) * 1 - is_positive(ANNUL2042)
RCELREP_HR_R = is_positive(CELREPHR) * arr(CELREPHR * TX25 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGPLOC5 = is_positive(DEFLOC5) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
ICI8XV = min(arr(RCM2FA * TX24 / 100), arr(COD8XV * TX24 / 100)) * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO))
IPQTSV1 = ZIPQTSV1 * CARTSNBAV
BPCAPTAXV = PCAPTAXV - arr(PCAPTAXV * TX_DEDPER / 100)
ZIPQRVO2 = is_positive(TEGLRVO5 + TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * arr(IQUOTOT2 * TERPQRVO / TETONEQUO1) + 1 - is_positive(TEGLRVO5 + TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQPRRZ2TOT
ZIPQPALIM35 = is_positive(TEGLPALIM4M + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPALIM3M / TETONEQUOM1) + 1 - is_positive(TEGLPALIM4M + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - sum([ZIPQPALIMV5, ZIPQPALIMC5, ZIPQPALIM15, ZIPQPALIM25])
ACELHJK_R = positif_ou_nul(CELLIERHJ + CELLIERHK) * BCEL_HJK * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPPDO = is_positive(REPPD + REPRO) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
ATOURREP = DTOURREP * 1 - ART1731BIS + min(DTOURREP, max(ATOURREP_P + ATOURREPP2, ATOURREP1731 + 0) * 1 - PREM8_11) * ART1731BIS
LIGREPCODJT = is_positive(REPLNPV + REPMEUPE) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
SOMMEA880 = present(BICEXV) + present(BICNOV) + present(BI1AV) + present(BICDNV) + present(BICEXC) + present(BICNOC) + present(BI1AC) + present(BICDNC) + present(BICEXP) + present(BICNOP) + present(BI1AP) + present(BICDNP) + present(BIHEXV) + present(BIHNOV) + present(BIHDNV) + present(BIHEXC) + present(BIHNOC) + present(BIHDNC) + present(BIHEXP) + present(BIHNOP) + present(BIHDNP) + present(LOCPROCGAV) + present(LOCDEFPROCGAV) + present(LOCPROCGAC) + present(LOCDEFPROCGAC) + present(LOCPROCGAP) + present(LOCDEFPROCGAP) + present(LOCPROV) + present(LOCDEFPROV) + present(LOCPROC) + present(LOCDEFPROC) + present(LOCPROP) + present(LOCDEFPROP)
PPERESTA = is_positive(PPENATREST) * max(0, min(IREST, PPETOTX - PPERSA))
INANT02 = max(IS012, IS022 - PLANT)
TGLF4 = is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * PENF4 / TOTALQUO) + 1 - is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFV - TGLFC - TGLF1 - TGLF2 - TGLF3
TABTS1AC = is_positive(ALLOV + BPCOSAV + GLDGRATV + CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * arr(TREP10V * max(0, SALEXTV - COD1AD) / TTSBV) + 1 - is_positive(ALLOV + BPCOSAV + GLDGRATV + CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * max(0, TREP10V - TABTS1AJ)
REPMEUPB = DILMPB - RILMPB * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
SOMMEA538CB = present(BAFORESTC) + present(BAFPVC) + present(BACREC) + present(_4BACREC) + present(BAHREC) + present(_4BAHREC) + present(MIBVENC) + present(MIBPRESC) + present(MIBPVC) + present(BICNOC) + present(LOCPROCGAC) + present(BIHNOC) + present(LOCPROC) + present(MIBNPVENC) + present(MIBNPPRESC) + present(MIBNPPVC) + present(BICREC) + present(LOCNPCGAC) + present(LOCGITCC) + present(BICHREC) + present(LOCNPC) + present(LOCGITHCC) + present(BNCPROC) + present(BNCPROPVC) + present(BNCREC) + present(BNHREC) + present(BNCNPC) + present(BNCNPPVC) + present(ANOVEP) + present(BNCAABC) + present(MIBMEUC) + present(MIBGITEC) + present(LOCGITC) + present(INVENTC)
RCODJU7 = arr(arr(ACODJU / 9) * TX11 / 100)
ABICPDECP = AUTOBICVP + AUTOBICPP
PSIIMP = positif_ou_nul(PSIREST) * CRESINTER - PSIREST
LIGTXMOYPOS = is_positive(present(RMOND) + is_positive(VARRMOND) * present(DEFZU)) * 1 - is_positive(DEFRIMOND) * LIG1 * LIG2
PS_REVCS = CS_REVCS
REPPT = max(0, INVOMRETPT - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO)) * 1 - ART1731BIS + max(0, INVOMRETPT - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO)) * ART1731BIS * 1 - V_CNR
SOMMEA898 = SOMMEA895
RNG = null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * IPVLOC + 1 - null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * RBL
RCELRREDLZ = max(0, RCELRREDLZ_1 * 1 - ART1731BIS + min(RCELRREDLZ_1, max(RCELRREDLZ_P + RCELRREDLZP2, RCELRREDLZ1731 + 0) * 1 - PREM8_11) * ART1731BIS)
ZIGDRSED1 = ZIGIDRSE * null(ANCSDED2 - V_ANREV + 1)
PTORDS = arr(max(0, RDSN - CRDSIM) * COPETO / 100) + arr(max(0, RDSN - CRDSIM - RD9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
INVRETABA = min(arr(NINVRETAB * TX375 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA)) * 1 - V_CNR
PVTAUX = BPVSJ + BPVSK + BPV18V + BPV18C + BPCOPTV + BPCOPTC + BPV40V + BPV40C + PEA + GAINPEA
CSGD = NAPCS - V_CSANT
GLF4M = is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENF4 / TOTALQUOHT) + 1 - is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOT - GLFVM - GLFCM - GLF1M - GLF2M - GLF3M
LIGREPRR = is_positive(REPRR) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
IMPIM3 = IAD31
PERPPLAFNU2P = 1 - is_positive(PERPIMPATRIE + 0) * max(0, is_positive(PERPPLAFPANT + PERPPLAFNUP3ANT - RPERPP) * PERPPLAFNUP2ANT + 1 - is_positive(PERPPLAFPANT + PERPPLAFNUP3ANT - RPERPP) * max(0, PERPPLAFNUP2ANT - RPERPP - PERPPLAFPANT - PERPPLAFNUP3ANT)) + is_positive(PERPIMPATRIE + 0) * 0
LIG2368 = INDCTX * is_positive(IREST) * is_positive(is_positive(IND_REST50) + is_positive(IDEGR))
NINVRETRR = max(min(INVOMENTRR, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM), 0) * 1 - V_CNR
TGLRFTOT = TGLRF1 + TGLRF2
ACELREPYG = CELREPYG * 1 - ART1731BIS + min(CELREPYG, max(ACELREPYG_P + ACELREPYGP2, ACELREPYG1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RCELREPYB = max(0, RCELREPYB_1 * 1 - ART1731BIS + min(RCELREPYB_1, max(RCELREPYB_P + RCELREPYBP2, RCELREPYB1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TTSNGL1V = GLD1V - TABGL1V
RIVCELNQ3 = RIVCELNQ1
INVRETRDRA = min(NINVRETRDR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA)) * 1 - V_CNR
MIB_NETNPCT = MIBNPPVV + MIBNPPVC + MIBNPPVP - MIBNPDCT
# TODO IREP
RCODJT = max(0, RCODJT_1 * 1 - ART1731BIS + min(RCODJT_1, max(RCODJT_P + RCODJTP2, RCODJT1731 + 0) * 1 - PREM8_11) * ART1731BIS)
GLPALIMV = is_positive(PENALIMC + PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENALIMV / TOTALQUOHT) + 1 - is_positive(PENALIMC + PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT
BN1 = sum([BN1V, BN1C, BN1P])
LIGPS = is_positive(BCSG + BRDS + BPRS + BCVNSAL + BREGV + BCDIS + BGLOA + BRSE1 + BRSE2 + BRSE3 + BRSE4 + BRSE5 + 0) * 1 - is_positive(ANNUL2042)
SOMMEBA = BAFV + BAFC + BAFP + BAFORESTV + BAFORESTC + BAFORESTP + BAFPVV + BAFPVC + BAFPVP + BACREV + BAHREV + BACREC + BAHREC + BACREP + BAHREP + 0
RESIVIEU3 = arr(arr(ACODIM / 9) * TX25 / 100)
LIG_BICNPF = is_positive(present(BICDEC) + present(BICDEP) + present(BICDEV) + present(BICHDEC) + present(BICHDEP) + present(BICHDEV) + present(BICHREC) + present(BICHREP) + present(BICHREV) + present(BICREC) + present(BICREP) + present(BICREV) + present(DEFBIC6) + present(DEFBIC5) + present(DEFBIC4) + present(DEFBIC3) + present(DEFBIC2) + present(DEFBIC1)) * LIG0 * LIG2
TAPB4 = max(TPLR4, TEXPR4 * TX_DEDPER / 100)
IPQTSREMP35 = ZIPQTSREMP35 * REMPLANBP3
LIGBNCDF = is_positive(BNCDF1 + BNCDF2 + BNCDF3 + BNCDF4 + BNCDF5 + BNCDF6) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
ZIPQFC5 = is_positive(sum([TEGLF1M, TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQFCM / TETONEQUOM1) + 1 - is_positive(sum([TEGLFCM, TEGLF1M, TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQFV5
RCELREPYF_1 = max(min(ACELREPYF, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RCMNAB = RCMHAD + DISQUO
LIGRESINF50 = is_positive(is_positive(IND_REST50) * is_positive(IREST) + is_positive(RECUM) * 1 - positif_ou_nul(RECUM - SEUIL_8)) * is_positive(SEUIL_8 - IRESTIT) * null(LIGRESINF)
TGLPRRZ1 = is_positive(TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR2Z1 / TOTALQUO) + 1 - is_positive(TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3 - TGLPRR4 - TGLPRRZV - TGLPRRZC
TTSC = TTSNC - sum([max(0, GLD1C - TABGL1C), max(0, GLD2C - TABGL2C), max(0, GLD3C - TABGL3C)]) - max(CODDBJ - TABDOMDBJ, 0) - max(CODEBJ - TABDOMEBJ, 0)
GLTSTOT = sum([GLTSV, GLTSC, GLTS1, GLTS2, GLTS3, GLTS4])
IS011 = arr(DS011 * NB1)
ABTSRFJ = is_positive(CARTSP4) * is_positive(REMPLAP4) * arr(REP104 * CARTSP4 / TSB4) + 1 - is_positive(REMPLAP4) * max(0, REP104 - ABTS1FJ - ABTS1FP)
BICNPV = BINTAV + BINHTAV + MIB_NETNPVV + MIB_NETNPPV
TOTIRPSANT = V_IRPSANT - V_NONMERANT + V_NONRESTANT - V_ANTRE
BI2C = BI2AC
PLAFREPSN3 = arr(max(0, PLAFREPETOT - PLAFREPSN4))
IN04 = max(IS014, IS024 - PLA)
INVRETOV = min(NINVRETOV, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU)) * 1 - V_CNR
INVRETKI = min(arr(NINVRETKI * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH)) * 1 - V_CNR
LIGCELYD = is_positive(DCELREPYD) * LIG1 * LIG2
NINVRETPOR = NINVRETPO - arr(NINVRETPO * TX40 / 100) * 1 - V_CNR
TGLPALIM3 = is_positive(TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPENALIM3 / TOTALQUO) + 1 - is_positive(TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV - TGLPALIMC - TGLPALIM1 - TGLPALIM2
PPE_FORMULE2 = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN2 * PPE_BOOL_MAX2 * arr(positif_ou_nul(PPELIMSMIC - PPE_RCONTP2) * arr(PPE_RCONTP2 * PPETX1 / 100) / PPE_COEFF2 + is_positive(PPE_RCONTP2 - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTP2) * arr(arr(PPELIMRPH - PPE_RCONTP2 * PPETX2 / 100) / PPE_COEFF2) + is_positive(PPE_RCONTP2 - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTP2) * arr(arr(PPELIMRPH2 - PPE_RCONTP2 * PPETX3 / 100) / PPE_COEFF2))
TERPQF1 = RPQF1 * 1 - is_positive(INDTEFF) + TRPQF1 * is_positive(INDTEFF)
RPQPALIM2 = inf(GLPALIM2 / PENSALNBP2)
_1RAR = 1 - is_positive(EXFR) * RCMHAB - FRAR + is_positive(EXFR) * 0
PERPPLAFNU1P = 1 - is_positive(PERPIMPATRIE + 0) * max(PERPPLAFNUTP - PERPPLAFNUNP - PERPPLAFNU3P - PERPPLAFNU2P, 0) + is_positive(PERPIMPATRIE + 0) * 0
TERPQPRR2 = RPQPRR2 * 1 - is_positive(INDTEFF) + TRPQPRR2 * is_positive(INDTEFF)
PRNV = is_positive(TSNTV) * is_positive(TSNTV + PRNNV) * TSNTV + PRNNV + positif_ou_nul(TSNTV) * PRNNV
RESIMEUB2 = arr(arr(min(DRESIMEUB, PLAF_RESINEUV) / 9) * TX25 / 100)
TGLRWBM = is_positive(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * CODRWB / TOTALQUO) + 1 - is_positive(CODRWA + CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM * is_positive(null(1 - FLAG_EXIT) + null(2 - FLAG_EXIT))
LIGRCELFABC = is_positive(RIVCELFABC1) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
PERPPLAFNUTC = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * max(PERPPLATCANT - RPERPC, 0) + is_positive(PERP_COND1) * max(0, PERPPLATCANT - RPERPC - RPERPMUTV - RACCOTV) + is_positive(PERP_COND2) * 0
AILMPB = DILMPB * 1 - V_CNR
AAIDE = BAD * 1 - ART1731BIS + min(BAD, max(AAIDE_P + AAIDEP2, AAIDE1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
V_CR2 = (V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [2]}]
RETCODIF = arr(arr(ACODIF / 9) * TX18 / 100)
RLOC62 = max(min(INVRETPU * 1 - INDPLAF + INVRETPUA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61])), 0) * 1 - V_CNR
TMIB_NETVV = MIBVENV + AUTOBICVV - TMIB_ABVV
MIBNETNPVLNSC = MIB_NETNPVLC - MIBNETNPVLSC
LIGTRCT = is_positive(V_TRCT)
RFIP = arr(BSOUFIP * TX_REDFIP / 100) * 1 - V_CNR
TOTPENCS = PPRS + PCSG + PRDS + PCVN + PREGV + PCDIS + PGLOA + PRSE1 + PRSE2 + PRSE3 + PRSE4 + PRSE5
LIGRRCEL42 = is_positive(RRCELLB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
LIG400RI = INDNMR1 * is_positive(ITRED) * 1 - null(IRB) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * is_positive(20 - V_NOTRAIT) * LIG2
REGVNET = BREGV + PREGV
PPETOTX = PPETOT * 1 - null(7 - V_REGCO) + PPETOTMAY
RCINE = max(0, RCINE_1 * 1 - ART1731BIS + min(RCINE_1, max(RCINE_P + RCINEP2, RCINE1731 + 0) * 1 - PREM8_11) * ART1731BIS)
QF025 = arr(RB05) / NB2
TSPENETV = TSPENETPV + TSPENETNPV
XTSBC = sum([GLD1C, GLD2C, GLD3C]) + TSBNC + BPCOSAC + TSASSUC + XETRANC + EXOCETC + GLDGRATC
# TODO RIVL4RES
ISNETEAJ32 = max(0, INETABAEAJ32 - ISNETDAJ32)
IS024 = arr(DS024 * NB2)
XBAC = BAHEXC + BAEXC
PERPSALDV = PREP10V
NRRI2 = NRCREAT + NRCOMP + NRRETU + NRDONS + NRDUFREPFI + NRDUFLOGIH + NRDUFLOEKL + NRPIQABCD + NRNOUV + NRPLAFPME + NRFOR + NRTOURREP + NRTOUHOTR + NRTOUREPA
IND_ZIGRTF = is_positive(V_NOTRAIT - 20) * is_positive(present(PEA) + present(BPCOPTV) + present(BPVRCM))
LIGISF9749 = is_positive(LIGNMAJISF1) * 1 - is_positive(LIGISFRET)
NINVRETAG = max(min(CODHAG, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB), 0) * 1 - V_CNR
TEFFREVINTER = INDTEFF * TBICPF + TBICNPF + TBNN + BIHTAV + BIHTAC + BIHTAP + BIPTAV + BIPTAC + BIPTAP + ESFP + TTSPR + RCM + PLOCNETF + NPLOCNETF + RFNTEO * V_INDTEO + RRFI * 1 - V_INDTEO + PVBAR + max(BANOR, 0) + REB + min(BANOR, 0) * is_positive(SEUIL_IMPDEFBA + 1 - SHBA - REVTP - BA1 - REVQTOTQHT) + R1649 - DAR
ABGL1V = is_positive(GLD1V) * is_positive(GLD2V + GLD3V) * arr(REP10V * GLD1V / TSBV) + 1 - is_positive(GLD2V + GLD3V) * max(0, REP10V - ABTSV - ABDOMDAJ - ABDOMEAJ) + 0
ZIGDCSGD2 = ZIG_CSGD99 * null(ANCSDED2 - V_ANREV + 2) * LIG2
RLOC80 = max(min(INVRETRVR * 1 - INDPLAF + INVRETRVRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79])), 0) * 1 - V_CNR
IPQTS35 = ZIPQTS35 * CARTSNBAP3
TRPQPRRZ2M = inf(TGLPRRZ2M / CODNDZ)
ZIG_CRDETR = is_positive(CICSG + CIRDS + CIPRS) * LIG2
LIGPERPC = is_positive(PERPINDC + PERPINDCC) * is_positive(PERPINDAFFC) * 1 - is_positive(PERPINDV + PERPINDCV) * is_positive(PERPINDAFFV) * 1 - is_positive(PERPINDP + PERPINDCP) * is_positive(PERPINDAFFP) * LIG1 * 1 - V_CNR * LIG2 * is_positive(LIGPERP + LIGPERPI + LIGPERPM + LIGPERPMI)
RDRF = max(0, RFCF + RFMIC - MICFR - RFDANT) * 1 - is_positive(ART1731BIS) + max(0, RFCF + RFMIC - MICFR + DEFRF4BC) * is_positive(ART1731BIS)
LIGREPPT = is_positive(REPPT) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
QF012 = arr(RB02) / NB1
NRILMIB = max(min(AILMIB, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC), 0)
# TODO RTOURES
ZIPQPRRZV5 = is_positive(sum([TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPRRZVM / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT
ACELREPYI = CELREPYI * 1 - ART1731BIS + min(CELREPYI, max(ACELREPYI_P + ACELREPYIP2, ACELREPYI1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
GLF4 = is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENF4 / TOTALQUOHT) + 1 - is_positive(REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFV - GLFC - GLF1 - GLF2 - GLF3
RPATNATOT = RPATNAT1 + RPATNAT2 + RPATNAT3 + RPATNAT
DAR = DEFAA5 + DEFAA4 + DEFAA3 + DEFAA2 + DEFAA1 + DEFAA0 * 1 - PREM8_11 * 1 - is_positive(IPVLOC)
# TODO NAPPS
LIG10 = is_positive(LIG10V + LIG10C + LIG10P)
CICSG = min(CSGC, arr(IPPNCS * T_CSG / 100))
LIGRNIDF2 = is_positive(abs(RNIDF2)) * is_positive(is_positive(abs(RNIDF)) + is_positive(FLAGRETARD08 + FLAGDEFAUT11)) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
IPQTSREMP21 = ZIPQTSREMP21 * REMPLANBP2
PERP_INDP = is_positive(0 + is_positive(TSHALLO1) + is_positive(ALLO1) + is_positive(FEXP) + is_positive(BAFP) + is_positive(BAFPVP) + is_positive(BAEXP) + is_positive(BACREP) + is_positive(_4BACREP) + is_positive(BACDEP * 1 - is_positive(ART1731BIS)) + is_positive(BAHEXP) + is_positive(BAHREP) + is_positive(_4BAHREP) + is_positive(BAHDEP * 1 - is_positive(ART1731BIS)) + is_positive(BAPERPP) + is_positive(MIBEXP) + is_positive(MIBVENP) + is_positive(MIBPRESP) + is_positive(MIBPVP) + is_positive(AUTOBICVP) + is_positive(AUTOBICPP) + is_positive(BICEXP) + is_positive(BICNOP) + is_positive(BICDNP * 1 - is_positive(ART1731BIS)) + is_positive(BIHEXP) + is_positive(BIHNOP) + is_positive(BIHDNP * 1 - is_positive(ART1731BIS)) + is_positive(BIPERPP) + is_positive(LOCPROCGAP) - is_positive(LOCDEFPROCGAP * 1 - is_positive(ART1731BIS)) + is_positive(LOCPROP) - is_positive(LOCDEFPROP * 1 - is_positive(ART1731BIS)) + is_positive(BNCPROEXP) + is_positive(BNCPROP) + is_positive(BNCPROPVP) + is_positive(AUTOBNCP) + is_positive(BNCEXP) + is_positive(BNCREP) + is_positive(BNCDEP * 1 - is_positive(ART1731BIS)) + is_positive(BNHEXP) + is_positive(BNHREP) + is_positive(BNHDEP * 1 - is_positive(ART1731BIS)) + is_positive(BNCCRP))
PD10MP = PIND_MINP * PDFNP + 1 - PIND_MINP * P10MINSP
NRILMJX = max(min(AILMJX, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY), 0)
ZIPQF42 = is_positive(TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQF4 / TETONEQUO1) + 1 - is_positive(TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQ2TOT - sum([ZIPQFV2, ZIPQFC2, ZIPQF12, ZIPQF22, ZIPQF32])
IQUODAJ31 = arr(IPQ1001 * TERPQ4V + TERPQ4C / TERPQ4TVC + TERPQTSV + TERPQTSC)
RRESTIMOY = max(min(RESTIMOY * TX30 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMOD - RRESTIMOB - RRESTIMOC - RRESTIMOC), 0)
TGLPALIM3M = is_positive(TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENALIM3 / TOTALQUO) + 1 - is_positive(TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMVM - TGLPALIMCM - TGLPALIM1M - TGLPALIM2M
DFRCM5 = DEFRCM6 * is_positive(DFRCMN) + DEFRCM6 * is_positive(DEFRCM + DEFRCM2 + DEFRCM3 + DEFRCM4 + DEFRCM5 - RCM_I) * 1 - is_positive(DFRCMN) + max(0, DEFRCM6 - RCM_I - DEFRCM - DEFRCM2 - DEFRCM3 - DEFRCM4 - DEFRCM5) * positif_ou_nul(RCM_I - DEFRCM - DEFRCM2 - DEFRCM3 - DEFRCM4 - DEFRCM5) * 1 - is_positive(DFRCMN) * 1 - is_positive(ART1731BIS) + min(DEFRCM6, REPRCM - REPRCMBIS) * is_positive(ART1731BIS * 1 - PREM8_11) + DEFRCM6 * is_positive(ART1731BIS * PREM8_11)
RLOC24 = max(min(INVRETPJ * 1 - INDPLAF + INVRETPJA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23])), 0) * 1 - V_CNR
ZIPQPRRZ45 = is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPRRZ4M / TETONEQUOM1) + 1 - is_positive(TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZV5 - ZIPQPRRZC5 - ZIPQPRRZ15 - ZIPQPRRZ25 - ZIPQPRRZ35
REPMEUB = RESIMEUB1 + RESIMEUB2 + RESIMEUB3 + RESIMEUB4 + RESIMEUB5 + RESIMEUB6 + RESIMEUB7 + RESIMEUB8 * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO))
GLRVOTOTM = GLRVOM + GLRVO5M + GLRVO6M + GLRVO7M
LIGVERSLIB = is_positive(AUTOVERSLIB) * LIG1 * LIG2
CIEMPLOI = CICOMPEMPL + COD8TL * 1 - is_positive(RE168 + TAX1649)
TTSPRD4 = min(0, TTSNN4 + TPRR4) * ART1731BIS
NRCELREPGP = max(min(ACELREPGP, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW])), 0)
REPCIF = positif_ou_nul(COD7UA + COD7UB - PLAF_FOREST1 * 1 + BOOL_0AM) * RDFORESTRA + 1 - positif_ou_nul(COD7UA + COD7UB - PLAF_FOREST1 * 1 + BOOL_0AM) * max(0, RDFORESTRA - PLAF_FOREST1 * 1 + BOOL_0AM - COD7UA - COD7UB) * 1 - V_CNR
TGLNAV3C = max(GLD3C - TABGL3C, 0)
ZIGBASECVN = is_positive(BCVNSAL + V_CVNANT)
PERPPLAFNU3P = 1 - is_positive(PERPIMPATRIE + 0) * max(0, is_positive(PERPPLAFNUP) * PERPPLAFNUP3ANT + 1 - is_positive(PERPPLAFNUP + 0) * PERPPLAFNUP3ANT - RPERPP - PERPPLAFPANT) + is_positive(PERPIMPATRIE + 0) * 0
ZIPQTSREMP11 = is_positive(sum([TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * arr(IQUOTOT1 * TERPQTSREMP1 / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTS1TOT - ZIPQTSREMPV1 - ZIPQTSREMPC1
BSNCL = min(REPSNO3, LIM_SOCNOUV2 * 1 + BOOL_0AM)
TGLRCMGO = is_positive(_7RCM + REVRF) * arr(TONEQUO * _6RCM / TOTALQUO) + 1 - is_positive(_7RCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMDC - TGLRCMFU - TGLRCMCH - TGLRCMTS
ACELREPHF = CELREPHF * 1 - ART1731BIS + min(CELREPHF, max(ACELREPHF_P + ACELREPHFP2, ACELREPHF1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGNATR3 = is_positive(REPNATR3) * LIG1
REV2 = GLN2 * 1 - INDTEFF + TGLN2 * INDTEFF
INVRETXAR = min(max(min(arr(INVRETXA * 13 / 7), NINVRETXA - INVRETXA), NINVRETXA - INVRETXA), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR - INVRETRBR - INVRETRCR - INVRETRDR)) * 1 - V_CNR
MIBNETNPPF = sum([MIB_NETNPPV, MIB_NETNPPC, MIB_NETNPPP])
TREP103 = TIND_103 * TD10M3 + 1 - TIND_103 * TFPT3
ABTS1FJ = arr(REP104 * TSHALLO4 / TSB4)
BASSURV = CESSASSV
_2REVF = min(arr(RFCG * FONCI / RFCD), RFCG - RFON)
PERPPLAFNUNC = max(0, PERPPLAFNUC)
ZIPQTS1TOT = sum([ZIPQTSV1, ZIPQTSC1, ZIPQTS11, ZIPQTS21, ZIPQTS31, ZIPQTS41])
RCELHNO_1 = max(min(RCEL_HNO, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIG3720 = 1 - is_positive(20 - V_NOTRAIT) * 1 - is_positive(LIG3730) * LIG1 * LIG2
TTSNN4 = is_positive(TTS4) * arr(TTS4 * TTSBN4 / TEXTS4) + 1 - is_positive(TTS4) * TTS4
PPE_RPRO1V = FEXV + BAFV + BAEXV + BACREV + _4BACREV - BACDEV * 1 - is_positive(ART1731BIS) + BAHEXV + BAHREV + _4BAHREV - BAHDEV * 1 - is_positive(ART1731BIS) + BICEXV + BICNOV - BICDNV * 1 - is_positive(ART1731BIS) + BIHEXV + BIHNOV - BIHDNV * 1 - is_positive(ART1731BIS) + BNCEXV + BNCREV - BNCDEV * 1 - is_positive(ART1731BIS) + BNHEXV + BNHREV - BNHDEV * 1 - is_positive(ART1731BIS) + MIBEXV + BNCPROEXV + TMIB_NETVV + TMIB_NETPV + TSPENETPV + BAFPVV + MIBPVV + BNCPROPVV + BAFORESTV + LOCPROV + LOCPROCGAV - LOCDEFPROCGAV * 1 - is_positive(ART1731BIS) - LOCDEFPROV * 1 - is_positive(ART1731BIS) + XHONOAAV + XHONOV
TSBC = EXTSC + sum([GLD1C, GLD2C, GLD3C]) + CODDBJ + CODEBJ
REPLOCJT = RETCODJT - RCODJT * is_positive(LOCMEUBJT + 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RCELREP_HW_R = is_positive(CELREPHW) * arr(CELREPHW * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPRY = is_positive(REPRY) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
DS014 = max(QF014 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF014 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF014 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF014 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF014 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
TBICNPF = max(0, sum([BINTAV + BINHTAV, BINTAC + BINHTAC, BINTAP + BINHTAP]) + TMIBNETNPVF + TMIBNETNPPF + MIB_NETNPCT - DEFNP)
LIGCELMH = is_positive(DCELRREDMH) * LIG1 * LIG2
TGLFCM = is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENFC / TOTALQUO) + 1 - is_positive(PENF1 + PENF2 + PENF3 + PENF4 + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFVM
LIGLOYIMP = is_positive(LOYIMP) * LIG1 * LIG2
TRPQTS4 = inf(TGLTS4 / CARTSNBAP4)
NRILMOA = max(min(AILMOA, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB), 0)
ITPRCM = arr(BPTP24 * TX24 / 100)
LIG062C = CARPEC + CARPENBAC + PENSALC + PENSALNBC + CODRBZ
LIGEMPLOI = is_positive(COD8UW + COD8TL) * LIG1 * LIG2
GLPALIMVM = is_positive(PENALIMC + PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENALIMV / TOTALQUOHT) + 1 - is_positive(PENALIMC + PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM
ZIPQTSREMP15 = is_positive(sum([TEGLTSREMP2M, TEGLTSREMP3M, TEGLTSREMP4M])) * arr(IQUOTOT5 * TERPQTSREMP1M / TETONEQUOM1) + 1 - is_positive(sum([TEGLTSREMP2M, TEGLTSREMP3M, TEGLTSREMP4M])) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQTS5TOT - ZIPQTSREMPV5 - ZIPQTSREMPC5
PPESAL1 = PPE_SALAVDEF1 * 1 - PPE_BOOL_SEULPAC
XDFN4 = min(PLAF_DEDFORFTS, XTPS104)
# TODO NAPRSE5
NRCELFD = max(min(RCEL_FD, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM - NRCEL - NRCELJP - NRCELJBGL - NRCELJOQR - NRCEL2012), 0)
IPQTSREMP22 = ZIPQTSREMP22 * REMPLANBP2
BCIHABPRIN7 = min(max(0, BCIHP - BCIHABPRIN1 - BCIHABPRIN2 - BCIHABPRIN3 - BCIHABPRIN4 - BCIHABPRIN5 - BCIHABPRIN6), PREHABTVT) * 1 - V_CNR
LIGCBAIL = null(IDOM11 - DEC11) * 1 - is_positive(IBM23) * positif_ou_nul(TAXASSUR + IPCAPTAXTOT + TAXLOY + CHRAPRES + NAPCRP - SEUIL_61) * positif_ou_nul(NAPTIR + NAPCRP - SEUIL_12) * 1 - is_positive(LIGNIDB) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * 1 - is_positive(NRINET) * 1 - null(V_REGCO - 2) * LIG2
BINTTAC = BINTAC + BI2AC
NINVRETKH = max(min(INVOMSOCKH, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG), 0) * 1 - V_CNR
PDFNP = min(PLAF_DEDFORFTS, PTPS10P)
RCEL_1 = max(min(RCEL_2011, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1, RCELREPYD_1, RCELREPYJ_1, RCELREPYC_1, RCELREPYB_1, RCELREPYI_1, RCELREPYA_1]) - RCELHM_1 - RCELHL_1 - RCELHNO_1 - RCELHJK_1 - RCELNQ_1 - RCELNBGL_1 - RCELCOM_1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BARSP = BAHREP + _4BAHREP - BAHDEP * 1 - is_positive(ART1731BIS * PREM8_11)
NINVRETSUR = NINVRETSU - arr(NINVRETSU * TX4737 / 100) * 1 - V_CNR
CVNNET = max(0, CVNSALC + PCVN - COD8YT)
INVRETAF = min(arr(NINVRETAF * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA)) * 1 - V_CNR
LIGHONO = is_positive(HONODECV + HONODECC + HONODECP) * LIG1 * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO)) * LIG2
LIGDFACC = is_positive(20 - V_NOTRAIT + 0) * is_positive(DFACC) + 1 - is_positive(20 - V_NOTRAIT + 0) * present(DFACC) * 1 - is_positive(ANNUL2042) * LIG1
ZIGINT3 = is_positive(RETRSE3) * LIG2
ZIPQPALIM21 = is_positive(sum([TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPALIM2 / TETONEQUO1) + 1 - is_positive(sum([TEGLPALIM3, TEGLPALIM4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - sum([ZIPQPALIM11, ZIPQPALIMV1, ZIPQPALIMC1])
EPAIMP = positif_ou_nul(EPAREST) * CIDIREPARGNE - EPAREST
RSE4AC = max(0, RSE4 - CIRSE4)
# TODO DFACC
XBINPP = BICNPHEXP + BICNPEXP
TRPQF1 = inf(TGLF1 / COTF1)
TEGL4M = GL4M * 1 - is_positive(INDTEFF) + TGL4M * is_positive(INDTEFF)
ADEVDUR = BDEV30 + BDEV25 + BDEV15
RPQPRRC = inf(GLPRRC / CARPENBAC)
REPLNPU = RCODJU1 + RCODJU2 + RCODJU3 + RCODJU4 + RCODJU5 + RCODJU6 + RCODJU7 + RCODJU8
HRBTRFR2 = V_BTRFRHR2 * 1 - positif_ou_nul(RFRH2) + RFRH2
INVRETSQ = min(arr(NINVRETSQ * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL)) * 1 - V_CNR
LIGCEL2012 = is_positive(DCEL2012) * LIG1 * LIG2
TGLNAV2V = max(GLD2V - TABGL2V, 0)
# TODO PPERPROV
ABADON1 = arr(min(ID11 * TX_RABDOM / 100 * PRODOM * max(0, 1 - V_EAD - V_EAG) / RG + V_EAD, PLAF_RABDOM)) + arr(min(ID11 * TX_RABGUY / 100 * PROGUY * max(0, 1 - V_EAD - V_EAG) / RG + V_EAG, PLAF_RABGUY))
# TODO MAJTXRSE11
HRBTRFR1 = V_BTRFRHR1 * 1 - positif_ou_nul(RFRH1) + RFRH1
INVRETXBA = min(arr(NINVRETXB * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA)) * 1 - V_CNR
# TODO NMAJTAXA3
ABGL3C = max(0, REP10C - ABTSC - ABDOMDBJ - ABDOMEBJ - ABGL1C - ABGL2C) + 0
PTOTCHR = arr(max(0, IHAUTREVT + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT + TAXLOY)) * COPETO / 100) + arr(max(0, IHAUTREVT + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT + TAXLOY)) * COPETO / 100) * is_positive(null(CMAJ - 10) + null(CMAJ - 17)) + arr(max(0, IHAUTREVT + min(0, IRN - IRANT + TAXASSUR + IPCAPTAXT + TAXLOY) - CHR9YI) * TXINT / 100)
ACELRREDLM = CELRREDLM * 1 - ART1731BIS + min(CELRREDLM, max(ACELRREDLM_P + ACELRREDLMP2, ACELRREDLM1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RB52 = max(0, RB02 + TETONEQUO1)
LIGREPRW = is_positive(REPRW) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
PLAFQFT = PLANT
BARREVAV = BACREV + _4BACREV
LIGCELYJ = is_positive(DCELREPYJ) * LIG1 * LIG2
XTSB3 = TSBN3
PPESAISITPP = is_positive(PPEACP * is_positive(abs(PPERPROP)))
NINVRETOX = max(min(CODHOX, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK - NINVRETOM - NINVRETON - NINVRETOP - NINVRETOQ - NINVRETOR - NINVRETOT - NINVRETOU - NINVRETOV - NINVRETOW - NINVRETOD - NINVRETOE - NINVRETOF - NINVRETOG), 0) * 1 - V_CNR
RSOC15 = arr(max(min(INVRETKHR * 1 - INDPLAF + INVRETKHRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14])), 0)) * 1 - V_CNR
INVRETLG = min(arr(NINVRETLG * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA)) * 1 - V_CNR
IQUORAJ31 = arr(IPQ1001 * TERPQ4RAJV + TERPQ4RBJC / TERPQ4TVC + TERPQTSV + TERPQTSC)
INVRETBAA = min(arr(NINVRETBA * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA)) * 1 - V_CNR
BA9RFOR = arr(min(REPSINFOR, PLAFRED_FORTRA) * TX25 / 100) * 1 - V_CNR
ZIGPENARSE54 = is_positive(PRSE5) * is_positive(NMAJRSE54) * LIG2
REPSM = max(0, CODHSM - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH)) * 1 - ART1731BIS + max(0, CODHSM - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH)) * ART1731BIS * 1 - V_CNR
TEGLTSREMP4 = GLTSREMP4 * 1 - is_positive(INDTEFF) + TGLTSREMP4 * is_positive(INDTEFF)
IPQANT01 = INANT01
TGLTS2 = is_positive(TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2TS2 / TOTALQUO) + 1 - is_positive(TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSV - TGLTSC - TGLTS1
LIGREPSAF = is_positive(REPSF + REPAF) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TPRB4 = PRBR4 + PALI4 + PENIN4
LIGCELYA = is_positive(DCELREPYA) * LIG1 * LIG2
TAPR1 = TIND_APB1 * TABPR1 + 1 - TIND_APB1 * min(TABPR1, TPL_PB - 1 - TIND_APBV * TAPRV - 1 - TIND_APBC * TAPRC)
TGLNAV1V = max(GLD1V - TABGL1V, 0)
DREPA = RDREP + DONETRAN
BAA = min(RDREP + DONETRAN, PLAF_REDREPAS)
D10M1 = IND_MIN1 * DFN1 + 1 - IND_MIN1 * _10MINS1
RDUFLO_EKL = arr(arr(min(DUFLOEL + 0, LIMDUFLO) / 9) * TX29 / 100) + arr(arr(min(DUFLOEK + 0, LIMDUFLO - min(DUFLOEL + PINELQD + PINELQC + 0, LIMDUFLO)) / 9) * TX18 / 100) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
LIG066 = sum([PEBF1, PEBF2, PEBF3, PEBF4])
# TODO BPTP19WGWJ
TMIB_ABNPVV = max(0, arr(TMIB_AVV * MIBNPVENV / TMIB_TVENV)) * is_positive(present(MIBGITEV) + present(LOCGITV)) + TMIB_AVV - TMIB_ABVV * 1 - is_positive(present(MIBGITEV) + present(LOCGITV))
PPEIMPA = is_positive(PPENATIMPA) * positif_ou_nul(PPERESTA) * PPETOTX - PPERSA - PPERESTA
INVRETNUA = min(arr(NINVRETNU * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA)) * 1 - V_CNR
LIGDLMRN = is_positive(DLMRN6 + DLMRN5 + DLMRN4 + DLMRN3 + DLMRN2 + DLMRN1) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
TIND_MIN2 = 1 - is_positive(TIND_10MIN_02)
INVRETOE = min(NINVRETOE, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD)) * 1 - V_CNR
# TODO RFACC
BAHQC = BANC + BAMC + BAFORC
INVRETSCA = min(NINVRETSC, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA)) * 1 - V_CNR
TMIB_TPRESV = MIBPRESV + AUTOBICPV + MIBNPPRESV + MIBMEUV
REGV9YP = max(0, VAR9YIPS - CS9YP - RD9YP - PS9YP - CVN9YP - CDIS9YP - GLO9YP - RSE19YP - RSE29YP - RSE39YP - RSE49YP - RSE59YP)
PPEFINAL = PPETOTX - PPERSA
SPEABPP = arr(SPEABP * BNCPROP / SPETOTP)
TIND_MIN3 = 1 - is_positive(TIND_10MIN_03)
LIG1523 = 1 - present(IND_TDR) * null(V_REGCO - 4) * LIG2
TEGLPRR3M = GLPRR3M * 1 - is_positive(INDTEFF) + TGLPRR3M * is_positive(INDTEFF)
RETCODID = arr(arr(ACODID / 9) * TX11 / 100)
NINVRETRU = max(min(INVOMENTRU, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP), 0) * 1 - V_CNR
RIVDUGIH8 = max(0, arr(min(DUFLOGI + 0, LIMDUFLO) * TX29 / 100) + arr(min(DUFLOGH + 0, LIMDUFLO - min(DUFLOGI + 0, LIMDUFLO)) * TX18 / 100) - 8 * RIVDUGIH) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
INVRETQXA = min(arr(NINVRETQX * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA)) * 1 - V_CNR
ZIGIDGLO = is_positive(IDGLO) * 1 - null(V_IDGLOANT + DGLOD + 0) * is_positive(20 - V_NOTRAIT) * LIG2
IPHQ = arr(IMT11 * IMPFHQ1 / ID11)
LIGREPPE = is_positive(REPPE) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
IPQRVO1 = ZIPQRVO1 * RENTAXNB
# TODO REPOMENTR3
TEGLTSREMPV = GLTSREMPV * 1 - is_positive(INDTEFF) + TGLTSREMPV * is_positive(INDTEFF)
PERPBICMNP = TPMIB_NETPP + TPMIB_NETVP + MIBEXP + MIBPVP - BICPMVCTP * PERP_BOOL
RCELREPYD_1 = max(min(ACELREPYD, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1, RCELREPYK_1, RCELREPYE_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
XBICHDC = BICEXC + BICNOC
FAMIMP = positif_ou_nul(FAMREST) * CREFAM - FAMREST
PPE_DEBJJ = inf(PPE_DEBJJMM / 100)
TRPQRVO5 = inf(TGLRVO5 / RENTAXNB5)
TERPQ4TVCM = RPQ4TVCM * 1 - is_positive(INDTEFF) + TRPQ4TVCM * is_positive(INDTEFF)
NRCELNBGL = max(min(RCEL_NBGL, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ), 0)
TSPENETP = TSPENETPP + TSPENETNPP
DCELHL = CELLIERHL
RINVEST = RIDOMPROE3
LIGPATNATR = is_positive(REPNATR + REPNATR1 + REPNATR2 + REPNATR3) * LIG1
TMIB_ABNPVP = max(0, arr(TMIB_AVP * MIBNPVENP / TMIB_TVENP)) * is_positive(present(MIBGITEP) + present(LOCGITP)) + TMIB_AVP - TMIB_ABVP * 1 - is_positive(present(MIBGITEP) + present(LOCGITP))
LIGRNIDF = is_positive(abs(RNIDF)) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
# TODO INDNMR1
NINVRETSB = max(min(CODHSB, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY), 0) * 1 - V_CNR
RDUFLOGIH_1 = max(0, min(RDUFLO_GIH, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFREPFI))
LIG_BICPP = present(BICNOP) + present(BICDNP) + present(BIHNOP) + present(BIHDNP) * 1 - is_positive(ANNUL2042) * LIG0
INVRETPAA = min(arr(NINVRETPA * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA)) * 1 - V_CNR
IPQFC2 = ZIPQFC2 * COTFC
TERPQTSREMP1M = RPQTSREMP1M * 1 - is_positive(INDTEFF) + TRPQTSREMP1M * is_positive(INDTEFF)
TSNRBP = REMPLAC - ABTSRBP
RLOG22 = max(min(INVRETOT * 1 - INDPLAF + INVRETOTA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21])), 0) * 1 - V_CNR
PPE_BOOL_MAJOBT = is_positive(positif_ou_nul(PPELIMRPH - PPE_RCONTPV) * positif_ou_nul(PPE_RTAV - PPELIMRPB) * 1 - is_positive(PPE_BOOL_NADAV)) * PPE_BOOL_BT
ZIPQTSREMP2TOT = sum([ZIPQTSREMPV2, ZIPQTSREMPC2, ZIPQTSREMP12, ZIPQTSREMP22, ZIPQTSREMP32, ZIPQTSREMP42])
MIBNETNPVLF = sum([MIB_NETNPVLV, MIB_NETNPVLC, MIB_NETNPVLP])
TTSNGL2V = GLD2V - TABGL2V
NAPCOROLIR = TOTIRCUM - NONMER - RECUMIR + NONREST * is_positive(20 - V_NOTRAIT) + max(0, TOTIRCUM - NONMER - RECUMIR + NONREST - V_TOTIRANT - V_NONMERANT - V_ANTREIR + V_NONRESTANT) * positif_ou_nul(V_NOTRAIT - 20)
PLAFDOMPRO1 = max(0, RRI1_1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP - RTOUHOTR - RTOUREPA - RCELTOT - RLOCNPRO - RPATNATOT - RDOMSOC1 - RLOGSOC)
TSNN22AFF = is_positive(TS2) * is_positive(CARTSP2 + REMPLAP2) * arr(TS2 * _2TSN2 / EXTS2) + 1 - is_positive(CARTSP2 + REMPLAP2) * TS2 - TSNN2
RCODIE = RCODIE_1 * 1 - ART1731BIS + min(RCODIE_1, max(RCODIE_P + RCODIEP2, RCODIE1731 + 0) * 1 - PREM8_11) * ART1731BIS
REPRB = max(0, CODHRB - max(0, RRIREP - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW - INVOMSOCQX - CODHRA)) * 1 - ART1731BIS + max(0, CODHRB - max(0, RDOMSOC1 - INVSOCNRET - INVOMSOCKH - INVOMSOCKI - INVSOC2010 - INVOMSOCQU - INVLOGSOC - INVOMSOCQJ - INVOMSOCQS - INVOMSOCQW - INVOMSOCQX - CODHRA)) * ART1731BIS * 1 - V_CNR
ACODJT = min(PLAF_RESINEUV, LOCMEUBJT) * 1 - V_CNR
TERPQTS1M = RPQTS1M * 1 - is_positive(INDTEFF) + TRPQTS1M * is_positive(INDTEFF)
RLOC17 = max(min(INVRETLIR * 1 - INDPLAF + INVRETLIRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16])), 0) * 1 - V_CNR
INVRETNURA = min(NINVRETNUR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA)) * 1 - V_CNR
RDUFLOEKL = max(0, RDUFLOEKL_1 * 1 - ART1731BIS)
DCELRREDLE = CELRREDLE
INVRETRRA = min(NINVRETRR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA)) * 1 - V_CNR
INVRETSKA = min(arr(NINVRETSK * TX4737 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA)) * 1 - V_CNR
TMIB_AUTOAVV = TMIB_AVV - TMIB_VENTAV
DFA = min(CHRFAC, RPREC * LIM_FRACC) * 1 - V_CNR * 1 - is_positive(RE168 + TAX1649)
BI2V = BI2AV
RLOC09 = max(min(INVRETMC * 1 - INDPLAF + INVRETMCA * INDPLAF, RRILOC - RLOC01 - RLOC02 - RLOC03 - RLOC04 - RLOC05 - RLOC06 - RLOC07 - RLOC08), 0) * 1 - V_CNR
CICORSE = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IPPRICORSE - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR - CIGPA - CIDONENTR, CIINVCORSE + IPREPCORSE))
ATOUREPA = DTOUREPA * 1 - ART1731BIS + min(DTOUREPA, max(ATOUREPA_P + ATOUREPAP2, ATOUREPA1731 + 0) * 1 - PREM8_11) * ART1731BIS
REPCELHNO = sum([RIVCELHNO1, RIVCELHNO2, RIVCELHNO3, RIVCELHNO4, RIVCELHNO5, RIVCELHNO6, RIVCELHNO7]) + RIVCELHNO8
GLTSREMP4M = is_positive(REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2REMP4 / TOTALQUOHT) + 1 - is_positive(REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPVM - GLTSREMPCM - GLTSREMP1M - GLTSREMP2M - GLTSREMP3M
REPRCMB = max(0, BRCM + BRCMQ - RCMFR)
SOMMEA805 = SOMMEANOEXP + is_positive(CODDAJ) + is_positive(CODEAJ) + is_positive(CODDBJ) + is_positive(CODEBJ) + is_positive(CARTSV) + is_positive(CARTSNBAV) + is_positive(CARTSC) + is_positive(CARTSNBAC)
DLOGDOM = INVLOG2008 + INVLGDEB2009 + INVLGDEB + INVLGAUTRE + INVLGDEB2010 + INVLOG2009 + INVOMLOGOA + INVOMLOGOB + INVOMLOGOC + INVOMLOGOH + INVOMLOGOI + INVOMLOGOJ + INVOMLOGOK + INVOMLOGOL + INVOMLOGOM + INVOMLOGON + INVOMLOGOO + INVOMLOGOP + INVOMLOGOQ + INVOMLOGOR + INVOMLOGOS + INVOMLOGOT + INVOMLOGOU + INVOMLOGOV + INVOMLOGOW + CODHOD + CODHOE + CODHOF + CODHOG + CODHOX + CODHOY + CODHOZ + CODHUA + CODHUB + CODHUC + CODHUD + CODHUE + CODHUF + CODHUG
LIG899 = is_positive(RVTOT + LIG1100 + LIG910 + BRCMQ + RCMFR + REPRCM + LIGRCMABT + LIG2RCMABT + LIGPV3VG + LIGPV3WB + LIGPV3VE + RCMLIB + LIG29 + LIG30 + RFQ + _2REVF + _3REVF + LIG1130 + VLHAB + DFANT + ESFP + RE168 + TAX1649 + R1649 + PREREV) * 1 - is_positive(LIG0010 + LIG0020 + LIG0030 + LIG0040 + LIG0050 + LIG0060 + LIG0070) * 1 - ART1731BIS
RPQTSREMP2 = inf(GLTSREMP2 / REMPLANBP2)
AFIPC_1 = max(min(DFIPC, LIM_FIPCORSE * 1 + BOOL_0AM), 0) * 1 - V_CNR
RIVCELJBGL2 = RIVCELJBGL1
RLOC45 = max(min(INVOMRETPM, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44])), 0) * 1 - V_CNR
TBICPABC = min(TBICPROVC, arr(TMIB_ABVC * AUTOBICVC / MIBVENC + AUTOBICVC + TMIB_ABPC * AUTOBICPC / MIBPRESC + AUTOBICPC))
RPQTSREMPC = inf(GLTSREMPC / REMPLANBC)
GLPRRVM = is_positive(PRR2C + PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2V / TOTALQUOHT) + 1 - is_positive(PRR2C + PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM
BRDSAPS = arr(RDRFAPS * 1 - null(4 - V_REGCO) + RDRVAPS + RDRCMAPS + RDNP + SALECS + SALECSG + ALLECS + INDECS + PENECS + ESFP + R1649 + PREREV * 1 - V_CNR) * 1 - is_positive(present(RE168) + present(TAX1649)) + RE168 + TAX1649 * 1 - V_CNR
TTSN2 = is_positive(TTSNT2) * min(0, TTSNT2 + TPRNN2) + positif_ou_nul(TTSNT2) * TTSNT2
TEGLRCMDCM = GLRCMDCM * 1 - is_positive(INDTEFF) + TGLRCMDCM * is_positive(INDTEFF)
RESIVIEU6 = arr(arr(ACODIM / 9) * TX25 / 100)
# TODO NMAJC4
ZIGINT122 = is_positive(RETRSE122) * LIG2
IPQ41 = ZIPQ41 * 4
TSNDAJ = CODDAJ - ABDOMDAJ
ARTREST = is_positive(REST) * max(0, min(CREARTS, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI))
CISYND = arr(TX_REDCOTSYN / 100 * BCOS) * 1 - V_CNR
NRCELREPYE = max(min(ACELREPYE, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK])), 0)
AILMIH_R = DILMIH * 1 - V_CNR
TBNCPABP = arr(TSPEABPP * AUTOBNCP / BNCPROP + AUTOBNCP)
PPE_RTA2 = PPESAL2
NCOMP = max(1, NBACT) * present(RDCOM) * 1 - ART1731BIS + min(max(1, NBACT) * present(RDCOM), NCOMP1731 + 0) * ART1731BIS * 1 - V_CNR
TTSNREJ = CARTSP3 - TABTSREJ
NINVRETRP = max(min(INVOMENTRP, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK), 0) * 1 - V_CNR
IPQ31 = ZIPQ31 * 3
REVPRRQHT = sum([PRR2V + PRR2ZV, PRR2C + PRR2ZC, PRR21 + PRR2Z1, PRR22 + PRR2Z2, PRR23 + PRR2Z3, PRR24 + PRR2Z4])
BSNCN = max(0, min(REPSNO1, LIM_SOCNOUV2 * 1 + BOOL_0AM - BSNCL - BSNCM))
LIGREPAW = is_positive(REPAW) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
REPFORSIN = positif_ou_nul(REPSINFOR + VARD - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * REPSINFOR1 + 1 - positif_ou_nul(REPSINFOR + VARD - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, REPSINFOR1 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - REPSINFOR - VARD)) * 1 - V_CNR
CS_RVT = RDRV
INVRETNV = min(arr(NINVRETNV * TX375 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV)) * 1 - V_CNR
PPENEXO4 = null(PPETPP4 + 0) + is_positive(TSHALLO4 + 0) + is_positive(SALEXT4 + 0) + 4 * is_positive(PPENHP4 + 0) + 8 * is_positive(PPEXT4 + 0)
LIGREPRXC = is_positive(REPRC + REPXC) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
LIGREPBA = is_positive(REPBA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
BCEL_NBGL = arr(min(CELLIERNB + CELLIERNG + CELLIERNL + 0, LIMCELLIER) / 9)
# TODO NMAJC1
A10RSOC = max(0, arr(RSOC1 + RSOC5 + RSOC14 + RSOC16 + RSOC18 + RSOC21 + RSOC24 + RSOC28 + RSOC31 + RSOC35 - RSOC1 + RSOC5 + RSOC14 + RSOC16 + RSOC18 + RSOC21 + RSOC24 + RSOC28 + RSOC31 + RSOC35 * TX65 / 100)) * 1 - ART1731BIS * 1 - V_CNR
RETCODIW = arr(arr(ACODIW / 9) * TX25 / 100)
TTSNN2REMP1 = is_positive(TTS1) * TTS1 - TTSNN1 - TTSNN2TS1
LIG1130 = is_positive(present(REPSOF)) * LIG0 * LIG2
LIGREPRED = is_positive(MEUBLERED) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RREPA = RREPA_1 * 1 - ART1731BIS + min(RREPA_1, max(RREPA_P + RREPAP2, RREPA1731 + 0) * 1 - PREM8_11) * ART1731BIS
LIG12ANT = is_positive(IRANT) * is_positive(SEUIL_12 - TOTNET) * is_positive(TOTNET) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(null(2 - V_REGCO) + 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)) * is_positive(NRINET - SEUIL_12) * 1 - is_positive(IMPRET - SEUIL_12) * 1 - is_positive(NRINET - SEUIL_12) * is_positive(20 - V_NOTRAIT) * LIG2
# TODO REPINVRES
HABIMP = positif_ou_nul(HABREST) * CIHABPRIN - HABREST
TTSNDAJ = CODDAJ - TABDOMDAJ
TRPQPALIM1 = inf(TGLPALIM1 / PENSALNBP1)
BNCDF5 = 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * DABNCNP4 + positif_ou_nul(NOCEPIMP + SPENETNPF) * min(max(NOCEPIMP + SPENETNPF - DABNCNP6 - DABNCNP5, 0) - DABNCNP4, DABNCNP4) * -1 * positif_ou_nul(DABNCNP4 - max(NOCEPIMP + SPENETNPF - DABNCNP6 - DABNCNP5, 0)) * 1 - is_positive(ART1731BIS) + min(DABNCNP4, DABNCNP - DIDABNCNP - BNCDF2 - BNCDF3 - BNCDF4) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + DABNCNP4 * is_positive(is_positive(ART1731BIS * PREM8_11) + null(8 - CMAJ) + null(11 - CMAJ))
NRILMOE = max(min(AILMOE, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV), 0)
INVRETAOA = min(NINVRETAO, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA)) * 1 - V_CNR
FRDC = 1 - is_positive(PREM8_11) * FRNC * is_positive(FRNC - _10MINSC) + null(4 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRNC, FRDPROVC) + null(5 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRNC, min(FRDPROVC, max(FRDPROVCP2, FRDPROVC1731)))
DIDOMPRO = RIDOMPRO * 1 - ART1731BIS + min(RIDOMPRO, max(DIDOMPRO_P + DIDOMPROP2, DIDOMPRO1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
LIGPATNAT3 = LIG1 * LIG2 * is_positive(PATNAT3) + null(PATNAT3) * is_positive(V_NOTRAIT - 20)
LIG2205 = is_positive(IDEGR) * 1 - positif_ou_nul(IDEGR - SEUIL_8) * 1 - LIGPS * LIG2
DEFBICNPF = DEFRIBIC * 1 - PREM8_11 * max(0, min(BICDEV + BICDEC + BICDEP + BICHDEV + BICHDEC + BICHDEP, max(DFBICNPF1731, max(DFBICNPF_P, DFBICNPFP2)) - BICDEV - BICDEC - BICDEP - BICHDEV - BICHDEC - BICHDEP))
HONONET = HONONETV + HONONETC + HONONETP
IPQRF12 = ZIPQRF12 * FONCINB
BCICAP = min(IPCAPTAXTOT, arr(PRELIBXT - arr(PRELIBXT * TX10 / 100) * T_PCAPTAX / 100))
RPQF3M = inf(GLF3M / COTF3)
ABADO31 = arr(min(IPRODOM1 + IQUODAJ31 * TX_RABDOM / 100, PLAF_RABDOM))
PPENEXO3 = null(PPETPP3 + 0) + is_positive(TSHALLO3 + 0) + is_positive(SALEXT3 + 0) + 4 * is_positive(PPENHP3 + 0) + 8 * is_positive(PPEXT3 + 0)
LIGISFREDPEN8 = is_positive(LIGISFINV + LIGISFDON) * LIGISF * is_positive(null(CODE_2042 + CMAJ_ISF - 8) + null(CMAJ_ISF - 34)) * 1 - COD9ZA
PVBARHR = max(0, BPVRCM + COD3SG + COD3SL + ABDETPLUS + ABIMPPV + CODRVG - DPVRCM + COD3SH + COD3SM + ABDETMOINS + ABIMPMV)
INVRETLOG = INVRETQL + INVRETQM + INVRETQD + INVRETOB + INVRETOC + INVRETOI + INVRETOJ + INVRETOK + INVRETOM + INVRETON + INVRETOP + INVRETOQ + INVRETOR + INVRETOT + INVRETOU + INVRETOV + INVRETOW + INVRETOD + INVRETOE + INVRETOF + INVRETOG + INVRETOX + INVRETOY + INVRETOZ + INVRETUA + INVRETUB + INVRETUC + INVRETUD + INVRETUE + INVRETUF + INVRETUG
TABTS1EP = is_positive(CARTSP3 + REMPLAP3) * arr(TREP103 * ALLO3 / TTSB3) + 1 - is_positive(CARTSP3 + REMPLAP3) * max(0, TREP103 - TABTS1EJ - TABTS1EC)
RCELRREDMG_1 = max(min(ACELRREDMG, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1 - RCELRREDLS_1 - RCELRREDLT_1 - RCELRREDLF_1 - RCELRREDLZ_1 - RCELRREDLX_1), 0)
# TODO MAJTXRSE24
NINVRETAV = max(min(CODHAV, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ), 0) * 1 - V_CNR
REPSR = max(0, CODHSR - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM)) * 1 - ART1731BIS + max(0, CODHSR - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ - CODHSV - CODHTA - CODHSA - CODHSF - CODHSK - CODHSP - CODHSU - CODHSZ - CODHSC - CODHSH - CODHSM)) * ART1731BIS * 1 - V_CNR
INVRETBG = NINVRETBG * 1 - V_CNR
RENT17 = max(min(INVRETAW * 1 - INDPLAF + INVRETAWA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16])), 0) * 1 - V_CNR
TMIB_TPRESC = MIBPRESC + AUTOBICPC + MIBNPPRESC + MIBMEUC
PERPSALDP = PREP10P * PERP_BOOL
TRPQPRRZ1M = inf(TGLPRRZ1M / CODNCZ)
DPATNAT2 = PATNAT2
TERPQ1M = RPQ1M * 1 - is_positive(INDTEFF) + TRPQ1M * is_positive(INDTEFF)
TXSPENETV = TXSPEAAV + TXSPEHV
MIB_NETNPVP = MIBNPVENP - MIB_ABNPVP
DILMPD = COD7PD
NINVRETMB = max(min(RETROCOMMB, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS), 0) * 1 - V_CNR
TSNNC = is_positive(TSC) * arr(TSC * TSBNC + BPCOSAC + GLDGRATC / EXTSC) + 1 - is_positive(TSC) * TSC
RLOC93 = max(min(INVRETSV * 1 - INDPLAF + INVRETSVA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92])), 0) * 1 - V_CNR
TGLTSTOTM = sum([TGLTSVM, TGLTSCM, TGLTS1M, TGLTS2M, TGLTS3M, TGLTS4M])
RPQPRRZ1M = inf(GLPRRZ1M / CODNCZ)
RVTOT = RV1 + RV2 + RV3 + RV4
# TODO PCAPNET
DIEMPLOI = COD8UW + COD8TL * 1 - is_positive(RE168 + TAX1649)
INVRETPEA = min(arr(NINVRETPE * TX4737 / 100), max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA)) * 1 - V_CNR
IPQANTRWB = ZIPQANTRWB * CODNWB
TSNN4 = is_positive(TS4) * arr(TS4 * TSBN4 / EXTS4) + 1 - is_positive(TS4) * TS4
PPE_SALAVDEF3 = TSHALLO3 + CARTSP3 * is_positive(CARTSNBAP3) + SALEXT3
INVRETPFR = min(arr(INVRETPF * 5 / 3), NINVRETPF - INVRETPF) * 1 - null(1 - abs(arr(INVRETPF * 5 / 3) - NINVRETPF - INVRETPF)) + NINVRETPF - INVRETPF * null(1 - abs(arr(INVRETPF * 5 / 3) - NINVRETPF - INVRETPF)) * 1 - V_CNR
LIGREPFOR3 = is_positive(REPFOREST3) * LIG1 * LIG2 * 1 - V_CNR
IPQPRRZ42 = ZIPQPRRZ42 * CODNFZ
LIGISFCPI = is_positive(ISFFCPI) * 1 - is_positive(ANNUL2042) * 1 - null(5 - V_IND_TRAIT) * LIGISF + present(ISFFCPI) * is_positive(DISFBASE) * 1 - is_positive(ANNUL2042) * null(5 - V_IND_TRAIT)
ZIPQTSANT11 = is_positive(sum([TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * arr(IQUOTOTANT1 * TERPQTS1 / TETONEQUO1) + 1 - is_positive(sum([TEGLTS2, TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT1TOT - ZIPQRVOANT1TOT - ZIPQPRRANTZ1TOT - ZIPQTSANTV1 - ZIPQTSANTC1
TMIB_ABNPPLV = TMIB_APV - TMIB_ABPV - TMIB_ABNPPV * present(MIBMEUV)
TECIMP = positif_ou_nul(TECREST) * CITEC - TECREST
IPQ35 = ZIPQ35 * 3
# TODO INDREV1A8IR
IPQRCMTS1 = ZIPQRCMTS1 * DISQUONB
GLRCMTRM = is_positive(REVRF) * arr(TONEQUOMHT * _7RCM / TOTALQUOHT) + 1 - is_positive(REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRTOTM - GLRVOTOTM - GLRCMDCM - GLRCMFUM - GLRCMCHM - GLRCMGOM - GLRCMTSM
TERPQ4V = RPQ4V * 1 - is_positive(INDTEFF) + TRPQ4V * is_positive(INDTEFF)
GLPALIMTOT = sum([GLPALIMV, GLPALIMC, GLPALIM1, GLPALIM2, GLPALIM3, GLPALIM4])
RILMJI_1 = max(min(AILMJI, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ), 0)
ZIPQ45 = is_positive(TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQ4M / TETONEQUOM1) + 1 - is_positive(TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7 - ZIPQRWB5 - ZIPQRWA5 - ZIPQRVG5 - sum([ZIPQ15, ZIPQ25, ZIPQ35])
RLOC60 = max(min(INVRETNU * 1 - INDPLAF + INVRETNUA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59])), 0) * 1 - V_CNR
IPROGUY4 = arr(ID14 * PROGUY / RG)
APPLI_ILIAD = 0
_1RAN = 1 - is_positive(EXFR) * RCMRNABD - FRAN + is_positive(EXFR) * 0
RISFPMED = max(min(RISFPMED_2, ISFBRUT - RISFDONF - RISFDONCEE), 0) * is_positive(1 - null(CODE_2042 - 8) * 1 - null(CMAJ_ISF - 8) * 1 - null(CMAJ_ISF - 34)) + max(min(RISFPMED_2, ISFBRUT - RISFDONF - RISFDONCEE), 0) * 1 - is_positive(1 - null(CODE_2042 - 8) * 1 - null(CMAJ_ISF - 8) * 1 - null(CMAJ_ISF - 34)) * COD9ZA
REPDONR = max(REPDON - REPDONR1 - REPDONR2 - REPDONR3 - REPDONR4 - REPDONR5, 0) * 1 - V_CNR
INVRETPNA = min(arr(NINVRETPN * TX50 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA)) * 1 - V_CNR
PERPPLAFVANT = present(PERPPLAFCV) * PERPPLAFCV + 1 - present(PERPPLAFCV) * V_BTPERPV
LIGILMPC = is_positive(DILMPC) * LIG1 * LIG2
FRAU = is_positive(RCMHAD) * null(4 - V_IND_TRAIT) * is_positive(DISQUO) * arr(RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS * RCMHAD / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(DISQUO) * RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, BRCMTOT + 0) * ART1731BIS - FRAN - _2FRAN - FRAR - _2FRAR + null(5 - V_IND_TRAIT) * is_positive(DISQUO) * arr(RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS * RCMHAD / max(1, TRCMABD + RTCAR + RCMNAB)) + 1 - is_positive(DISQUO) * RCMFR * 1 - is_positive(ART1731BIS) + min(RCMFR, max(max(BRCMTOTP2, BRCMTOT_P), BRCMTOT1731 + 0)) * ART1731BIS - FRAN - _2FRAN - FRAR - _2FRAR
RPQPRRZ2M = inf(GLPRRZ2M / CODNDZ)
INVRETQLA = min(NINVRETQL, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA)) * 1 - V_CNR
P10MINSC = max(min(PERPSALC, PDEDMINC), PDFNC)
DCELJP = CELLIERJP
RSE5BASE_INR = max(0, RSE5N - CSPROVYE - RSE59YP)
DLOGSOC = CODHXA + CODHXB + CODHXC + CODHXE
REPNV = max(0, INVOMENTNV - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV)) * 1 - ART1731BIS + max(0, INVOMENTNV - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM - INVOMENTRJ - INVOMRETPO - INVOMRETPT - INVOMRETPY - INVOMENTRL - INVOMENTRQ - INVOMENTRV)) * ART1731BIS * 1 - V_CNR
PTOREGV = arr(BREGV * COPETO / 100) + arr(max(0, BREGV - REGV9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
ACOLENT = ACOLENT_1 * 1 - ART1731BIS + min(ACOLENT_1, max(ACOLENT_P + ACOLENTP2, ACOLENT1731 + 0) * 1 - PREM8_11) * ART1731BIS
CRSE1D = NAPRSE1 - V_RSE1ANT
PPE_RTA1 = PPESAL1
A11RENT = max(0, A11RENT1 * 1 - ART1731BIS + min(A11RENT1731 + 0, A11RENT1) * ART1731BIS) * 1 - V_CNR
TABTS1BP = is_positive(BPCOSAC + GLDGRATC + CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * arr(TREP10C * ALLOC / TTSBC) + 1 - is_positive(BPCOSAC + GLDGRATC + CARTSC + REMPLAC + CODDBJ + CODEBJ + GLD1C + GLD2C + GLD3C) * max(0, TREP10C - TABTS1BJ - TABTS1BC)
NINVRETPR = max(min(INVOMRETPR, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW), 0) * 1 - V_CNR
_2RCMRABD = arr(REVACT * 40 / 100)
APR2 = IND_APB2 * ABPR2 + 1 - IND_APB2 * min(ABPR2, PL_PB - 1 - IND_APBV * APRV - 1 - IND_APBC * APRC - 1 - IND_APB1 * APR1)
LIG_BICPC = present(BICNOC) + present(BICDNC) + present(BIHNOC) + present(BIHDNC) * 1 - is_positive(ANNUL2042) * LIG0
BDEV15 = min(max(0, PDEVDUR - BDEV30 - BDEV25), CRENRJ + CINRJ + CIDEP15 + MATISOSI + MATISOSJ + VOLISO + PORENT + DIAGPERF + RESCHAL) * is_positive(is_positive(BQRESS) * is_positive(BQTRAV)) + min(max(0, PDEVDUR - BDEV30), CIBOIBAIL + CINRJBAIL + CRENRJ + TRAMURWC + CINRJ + TRATOIVG + CIDEP15 + MATISOSI + TRAVITWT + MATISOSJ + VOLISO + PORENT + CHAUBOISN + POMPESP + POMPESR + CHAUFSOL + POMPESQ + ENERGIEST + DIAGPERF + RESCHAL * 1 - present(COD7WX) + present(COD7WX) * COD7WX) * is_positive(is_positive(BQRESS) * null(BQTRAV) * is_positive(RESS) * 1 - present(CRECHOBOI)) + min(max(0, PDEVDUR - BDEV30), CIBOIBAIL + CINRJBAIL + CRENRJ + TRAMURWC + CINRJ + TRATOIVG + CIDEP15 + MATISOSI + CHAUBOISN + POMPESP + POMPESR + CHAUFSOL + POMPESQ + ENERGIEST + DIAGPERF + RESCHAL * 1 - present(COD7WX) + present(COD7WX) * COD7WX) * is_positive(is_positive(BQRESS) * null(BQTRAV) * is_positive(RESS) * present(CRECHOBOI))
LIGNATR1 = is_positive(REPNATR1) * LIG1
RSNCQ = max(0, min(RSN_CQ, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RSNCL - RSNCM - RSNCN - RSNCC - RSNCU))
IPQTSREMP41 = ZIPQTSREMP41 * REMPLANBP4
DPAE = sum([min(CHENF1, LIMDPAE), min(CHENF2, LIMDPAE), min(CHENF3, LIMDPAE), min(CHENF4, LIMDPAE)]) * 1 - V_CNR
RLOG27 = max(min(INVRETOE * 1 - INDPLAF + INVRETOEA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26])), 0) * 1 - V_CNR
TTSNRFJ = CARTSP4 - TABTSRFJ
AUBAINE10 = max(0, min(V_A10REEL, V_DIFTEOREEL - AUBAINE13A - AUBAINE13B - AUBAINE12 - AUBAINE11))
# TODO HAUTREVNET
TRPQTSREMP2 = inf(TGLTSREMP2 / REMPLANBP2)
PERPSALNC = PERPSALC - PERPSALDC + ELURASC
NINVRETKGR = NINVRETKG - arr(NINVRETKG * TX35 / 100) * 1 - V_CNR
LIGPINEL = LIGPIQABCD
TRPQTS3 = inf(TGLTS3 / CARTSNBAP3)
MIB_1AP = max(0, MIB_P1AP + MIB_NP1AP)
DCELREPYH = CELREPYH
TEGLPALIM4 = GLPALIM4 * 1 - is_positive(INDTEFF) + TGLPALIM4 * is_positive(INDTEFF)
LIGDEFBA1 = is_positive(DEFBA1) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
# TODO NMAJCHR3
PERPPLAFMU1V = is_positive(PERP_COND1) * 1 - is_positive(PERPIMPATRIE) * PERPPLATVANT + RPERPMUTV + is_positive(PERPIMPATRIE) * PERPPLAFIMPV + RPERPMUTV + is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE) * PERPPLATVANT - RPERPMUTC + is_positive(PERPIMPATRIE) * PERPPLAFIMPV - RPERPMUTC
PIND_10P = positif_ou_nul(P10MINSP - FRD1 + COD1CE)
TPLR4 = min(MIN_DEDPR, TEXPR4)
# TODO NMAJR4
TGLPALIM2 = is_positive(TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPENALIM2 / TOTALQUO) + 1 - is_positive(TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV - TGLPALIMC - TGLPALIM1
RINVTPME14 = max(0, RDSNO - max(0, LIM_TITPRISE * 1 + BOOL_0AM - max(0, min(BSNCL + REPSNO2 + REPSNO1 + REPSNON + PETIPRISE, LIM_SOCNOUV2 * 1 + BOOL_0AM) + COD7CQ + COD7CR))) * 1 - V_CNR
INVRETRDA = min(arr(NINVRETRD * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA)) * 1 - V_CNR
TXSPENETC = TXSPEAAC + TXSPEHC
DFRCM = DFRCMN + DFRCM1 + DFRCM2 + DFRCM3 + DFRCM4 + DFRCM5 * 1 - is_positive(null(2 - V_REGCO) + null(4 - V_REGCO))
ZIGTITRECRS = is_positive(BCSG + V_CSANT) * is_positive(BRDS + V_RDANT) * is_positive(BCVNSAL + V_CVNANT) * 1 - is_positive(BPRS + V_PSANT) * 1 - V_CNR * LIG2
TPS104 = arr(TSB4 * TX_DEDFORFTS / 100)
RGLOA = GLDGRATV + GLDGRATC
TSPRV = TSNNV + PRRV * 1 - PREM8_11 + max(0, TSNNV + PRRV) * PREM8_11
LIGCELNQ = is_positive(DCELNQ) * LIG1 * LIG2
AILMPD = DILMPD * 1 - V_CNR
XBICIMPP = XBICHDP + XBICNPHDP
BPTP18 = BTP18 * 1 - is_positive(present(TAX1649) + present(RE168))
AILMIH = DILMIH * 1 - ART1731BIS + min(DILMIH, max(AILMIH_P + AILMIHP2, AILMIH1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
RCELREPYK_1 = max(min(ACELREPYK, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1, RCELREPGW_1, RCELREPGP_1, RCELREPGL_1, RCELREPGV_1, RCELREPGK_1, RCELREPGJ_1]) - sum([RCELREPYH_1, RCELREPYL_1, RCELREPYG_1, RCELREPYF_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RDUFLO_GIH = arr(arr(min(DUFLOGI + 0, LIMDUFLO) / 9) * TX29 / 100) + arr(arr(min(DUFLOGH + 0, LIMDUFLO - min(DUFLOGI + 0, LIMDUFLO)) / 9) * TX18 / 100) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
RFCEPS = max(0, RFCD - RFDORD) * 1 - is_positive(ART1731BIS) + max(0, RFCD - DEFRF4BB) * is_positive(ART1731BIS)
ACELFD = BCEL_FD * 1 - ART1731BIS + min(BCEL_FD, max(ACELFD_P + ACELFDP2, ACELFD1731 + 0) * 1 - PREM8_11) * ART1731BIS * positif_ou_nul(DCELFD) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIPQPALIM15 = is_positive(sum([TEGLPALIM2M, TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPALIM1M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPALIM2M, TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - sum([ZIPQPALIMV5, ZIPQPALIMC5])
RPQRCMTSM = inf(GLRCMTSM / DISQUONB)
TERPQPRR4 = RPQPRR4 * 1 - is_positive(INDTEFF) + TRPQPRR4 * is_positive(INDTEFF)
REVIBI12P = BIH1P + BIH2P + BI1AP + BI2AP
LIGRRCEL13 = is_positive(RRCEL2012) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
XBIPV = BIHEXV + BICEXV
REPAO = max(0, CODHAO - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW - CODHBE - CODHAE - CODHAJ)) * 1 - ART1731BIS + max(0, CODHAO - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW - CODHBE - CODHAE - CODHAJ)) * ART1731BIS * 1 - V_CNR
NINVRETSK = max(min(CODHSK, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF), 0) * 1 - V_CNR
NRILMPB = max(min(AILMPB, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC), 0)
TRPQTS3M = inf(TGLTS3M / CARTSNBAP3)
RISFFCPI_2 = max(0, min(PLAF_ISFRED - RISFDONF_1 - RISFDONCEE_1 - RISFPMED_1 - RISFPMEI_1 - RISFFIP_1, RISFFCPI_1))
RLOC65 = max(min(INVRETRR * 1 - INDPLAF + INVRETRRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64])), 0) * 1 - V_CNR
BNNP = BNRP + SPENETP
TSN3 = is_positive(TSNT3) * min(0, TSNT3 + PRNN3) + positif_ou_nul(TSNT3) * TSNT3
INVRETON = min(NINVRETON, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM)) * 1 - V_CNR
ADIFAGRI = BDIFAGRI * 1 - ART1731BIS + min(BDIFAGRI, max(ADIFAGRI_P + ADIFAGRIP2, ADIFAGRI1731 + 0) * 1 - PREM8_11) * ART1731BIS
XFPT4 = XDF4 * XIND_104 + FRD4 * 1 - XIND_104
PPE_COEFF4 = PPE_BOOL_TP4 * 360 / PPENBJ + 1 - PPE_BOOL_TP4 / PPENHP4 + PPEXT4 * is_positive(PPE_SALAVDEF4 + 0) / 1820
REV4RBJC = max(CARTSC - ABTSRBJ, 0)
TRPQRF2 = inf(TGLRF2 / REAMORNB)
PIND_10MIN_0V = is_positive(PDEDMINV - PDFNV) * is_positive(PERPSALV)
LIGINRHAUT2 = is_positive(RETCHR22)
RLOC122 = max(min(INVRETSPR * 1 - INDPLAF + INVRETSPRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118, RLOC119, RLOC120, RLOC121])), 0) * 1 - V_CNR
TEGLTSREMP2 = GLTSREMP2 * 1 - is_positive(INDTEFF) + TGLTSREMP2 * is_positive(INDTEFF)
ZIG_REVETR = is_positive(SALECS + SALECSG + ALLECS + INDECS + PENECS + COD8SA + COD8SB) * 1 - V_CNR * LIG1 * LIG2
TERPQ4 = RPQ4 * 1 - is_positive(INDTEFF) + TRPQ4 * is_positive(INDTEFF)
IPQF41 = ZIPQF41 * COTF4
TGLPRR4 = is_positive(TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPRR24 / TOTALQUO) + 1 - is_positive(TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRV - TGLPRRC - TGLPRR1 - TGLPRR2 - TGLPRR3
# TODO MAJTX4
LIGREPKI = is_positive(REPKI) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TEGLPALIM3 = GLPALIM3 * 1 - is_positive(INDTEFF) + TGLPALIM3 * is_positive(INDTEFF)
RILMJI = max(0, RILMJI_1 * 1 - ART1731BIS + min(RILMJI_1, max(RILMJI_P + RILMJIP2, RILMJI1731 + 0) * 1 - PREM8_11) * ART1731BIS)
REPCELCOM = sum([RIVCELCOM1, RIVCELCOM2, RIVCELCOM3]) + RIVCELCOM4
TSB1 = EXTS1
INVRETSG = min(arr(NINVRETSG * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB)) * 1 - V_CNR
NRCELREPYG = max(min(ACELREPYG, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL])), 0)
RIDOMENT = RLOCENT
TPENALIM4 = is_positive(TEXPR4) * TPRN4 - TPRR4 - TPRR24 - TPRR2Z4 - TPENF4
TEGL2 = GL2 * 1 - is_positive(INDTEFF) + TGL2 * is_positive(INDTEFF)
PERPPLAFNUC3ANT = present(PERPPLAFNUC3) * PERPPLAFNUC3 + 1 - present(PERPPLAFNUC3) * V_BTPERPNUC3
RCMRNABD = RCMABD - RCMRABD
RPQPRRZ4 = inf(GLPRRZ4 / CODNFZ)
INVRETMBA = min(arr(NINVRETMB * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA)) * 1 - V_CNR
DFRCM4 = DEFRCM5 * is_positive(DFRCMN) + DEFRCM5 * is_positive(DEFRCM + DEFRCM2 + DEFRCM3 + DEFRCM4 - RCM_I) * 1 - is_positive(DFRCMN) + max(0, DEFRCM5 - RCM_I - DEFRCM - DEFRCM2 - DEFRCM3 - DEFRCM4) * positif_ou_nul(RCM_I - DEFRCM - DEFRCM2 - DEFRCM3 - DEFRCM4) * 1 - is_positive(DFRCMN) * 1 - is_positive(ART1731BIS) + min(DEFRCM5, REPRCM - REPRCMBIS - DFRCM5) * is_positive(ART1731BIS * 1 - PREM8_11) + DEFRCM5 * is_positive(ART1731BIS * PREM8_11)
ZIPQPRR15 = is_positive(sum([TEGLPRR2M, TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPRR1M / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRR2M, TEGLPRR3M, TEGLPRR4M]) + sum([TEGLPRRZVM, TEGLPRRZCM, TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRRV5 - ZIPQPRRC5
RIVCELNBGL8 = arr(min(CELLIERNB + CELLIERNG + CELLIERNL, LIMCELLIER) * is_positive(CELLIERNB) * TX25 / 100 + min(CELLIERNB + CELLIERNG + CELLIERNL, LIMCELLIER) * is_positive(CELLIERNG) * TX15 / 100 + min(CELLIERNB + CELLIERNG + CELLIERNL, LIMCELLIER) * is_positive(CELLIERNL) * TX40 / 100) - 8 * RIVCELNBGL1 * 1 - V_CNR
LIG8FV = is_positive(REVFONC) * 1 - IND_REV8FV
PPETEMPS4 = arr(1 / PPE_COEFF4 * 100)
RCELHM = max(0, RCELHM_1 * 1 - ART1731BIS + min(RCELHM_1, max(RCELHM_P + RCELHMP2, RCELHM1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPDONR = is_positive(REPDONR) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TSNGL2V = GLD2V - ABGL2V
TRPQPRR2 = inf(TGLPRR2 / CARPENBAP2)
NINVRETAFR = NINVRETAF - arr(NINVRETAF * TX4737 / 100) * 1 - V_CNR
IPQPRRV1 = ZIPQPRRV1 * CARPENBAV
PERPPLAFPANT = present(PERPPLAFCP) * PERPPLAFCP + 1 - present(PERPPLAFCP) * V_BTPERPP
GLPRRZ2M = is_positive(PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR2Z2 / TOTALQUOHT) + 1 - is_positive(PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M - GLPRR4M - GLPRRZVM - GLPRRZCM - GLPRRZ1M
BOOL_0BT = is_positive(V_0BT + 0) * is_positive(V_0AC + V_0AD + 0)
_2PRB2 = CARPEP2 + PENSALP2 + CODRDZ
IPCAPTAXC = arr(BPCAPTAXC * T_PCAPTAX / 100)
BCEL_HNO = arr(min(CELLIERHN + CELLIERHO + 0, LIMCELLIER) / 9)
IPQRCMTR1 = ZIPQRCMTR1 * INTERENB
ACELRREDLN = CELRREDLN * 1 - ART1731BIS + min(CELRREDLN, max(ACELRREDLN_P + ACELRREDLNP2, ACELRREDLN1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
HONONETC = arr(XHONOC * MAJREV) + XHONOAAC
RIVCELJP3 = RIVCELJP1
PDFNC = min(PLAF_DEDFORFTS, PTPS10C)
TEXPR2 = TPRB2 + COD1DH + T2PRB2 + PEBF2
DEFLOC5 = 1 - is_positive(NPLOCNETF5) * abs(min(max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8 - LNPRODEF7 - LNPRODEF6 - LNPRODEF5, 0) - LNPRODEF4, LNPRODEF4)) * positif_ou_nul(LNPRODEF4 - max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8 - LNPRODEF7 - LNPRODEF6 - LNPRODEF5, 0)) * 1 - is_positive(ART1731BIS) + min(LNPRODEF4, TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3 - DEFLOC4) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + LNPRODEF4 * ART1731BIS * is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))
APIQABCD_1 = arr(min(PINELQD + 0, LIMDUFLO - min(DUFLOEL + 0, LIMDUFLO)) / 9) + arr(min(PINELQB + 0, LIMDUFLO - min(DUFLOEL + PINELQD + PINELQC + DUFLOEK + 0, LIMDUFLO)) / 9) + arr(min(PINELQC + 0, LIMDUFLO - min(DUFLOEL + PINELQD + 0, LIMDUFLO)) / 6) + arr(min(PINELQA + 0, LIMDUFLO - min(DUFLOEL + PINELQD + PINELQC + DUFLOEK + PINELQB + 0, LIMDUFLO)) / 6) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
XETSNNC = arr(is_positive(XTSNC) * XTSNC * XETRANC / XEXTSC) * XIND_10C + 1 - XIND_10C * XETRANC
FRG2 = is_positive(EXFR) * min(arr(EXFR * _2RNC / TRCM), EXFR - FRG1) + 1 - is_positive(EXFR) * 0
INVRETRLR = min(arr(INVRETRL * 5 / 3), NINVRETRL - INVRETRL) * 1 - null(1 - abs(arr(INVRETRL * 5 / 3) - NINVRETRL - INVRETRL)) + NINVRETRL - INVRETRL * null(1 - abs(arr(INVRETRL * 5 / 3) - NINVRETRL - INVRETRL)) * 1 - V_CNR
NPLOCNETC = NPLOCCGAC + NPLOCC
RB04 = IND_TDR
RISFPLAF = max(0, ISFNETRED * is_positive(ISFPLAF - ISFNETRED) + ISFPLAF * 1 - is_positive(ISFPLAF - ISFNETRED))
_2TSN2 = CARTSP2 + REMPLAP2
PLAFRED_FORTRA = max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR)
RESIVIAN6 = arr(arr(ACODIW / 9) * TX25 / 100)
ZIGLOCOR6 = ZIGLOCOR * null(ANCSDED2 - V_ANREV + 6)
BAHQP = BANP + BAMP + BAFORP
BAMP = arr(BAHREP - DEFBAHREP * MAJREV) * positif_ou_nul(BARSP) + BARSP * 1 - is_positive(BARSP)
REPBE = max(0, CODHBE - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW)) * 1 - ART1731BIS + max(0, CODHBE - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB - CODHAA - CODHAF - CODHAK - CODHAP - CODHAU - CODHBA - CODHAC - CODHAH - CODHAM - CODHAR - CODHAW)) * ART1731BIS * 1 - V_CNR
RCELREPGW_1 = max(min(ACELREPGW, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1]) - sum([RCELREPGU_1, RCELREPGX_1, RCELREPGT_1, RCELREPGS_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TGLPRRTOTM = sum([TGLPRRVM + TGLPRRZVM, TGLPRRCM + TGLPRRZCM, TGLPRR1M + TGLPRRZ1M, TGLPRR2M + TGLPRRZ2M, TGLPRR3M + TGLPRRZ3M, TGLPRR4M + TGLPRRZ4M])
INVRETOYA = min(NINVRETOY, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA)) * 1 - V_CNR
IQUORAJ2 = arr(IPQ1002 * TERPQ4RAJV + TERPQ4RBJC / TERPQ4TVC + TERPQTSV + TERPQTSC)
INVRETAVR = min(arr(INVRETAV * 5 / 3), NINVRETAV - INVRETAV) * 1 - null(1 - abs(arr(INVRETAV * 5 / 3) - NINVRETAV - INVRETAV)) + NINVRETAV - INVRETAV * null(1 - abs(arr(INVRETAV * 5 / 3) - NINVRETAV - INVRETAV)) * 1 - V_CNR
ZIGRSE3ANT = is_positive(V_RSE3ANT) * TYPE2 * 1 - APPLI_OCEANS
NBLIGNESISF = is_positive(LIGISFBASE) * 3 + is_positive(LIGISFDEC) * 3 + is_positive(LIGISFBRUT) * 6 + is_positive(LIGISFRED) * 2 + is_positive(LIGISFREDPEN8) * 2 + is_positive(LIGISFDON) * 2 + is_positive(LIGISFRAN) + is_positive(LIGISFCEE) + is_positive(LIGISFINV) * 2 + is_positive(LIGISFPMED) + is_positive(LIGISFPMEI) + is_positive(LIGISFIP) + is_positive(LIGISFCPI) + is_positive(LIGISFIMPU) * 3 + is_positive(LIGISFPLAF) * 5 + is_positive(LIGISFE) * 3 + is_positive(LIGISFNOPEN) * 1 + is_positive(LIGISFCOR) * 1 + is_positive(LIGISFRET) * 2 + is_positive(LIGISF9749) + is_positive(LIGNMAJISF1) * 2 + is_positive(LIGISFANT) * 2 + is_positive(LIGISFNET) * 3 + is_positive(LIGISF9269) * 3 + is_positive(LIGISFANNUL) * 3 + is_positive(LIGISFDEG) * 2 + is_positive(LIGISFDEGR) * 2 + is_positive(LIGISFZERO) * 3 + is_positive(LIGISFNMR) * 4 + is_positive(LIGISFNMRIS) * 3 + is_positive(LIGISF0DEG) * 2 + is_positive(LIGISFNMRDEG) * 3 + is_positive(LIGISFNMRDEG) * 3 + is_positive(LIGISFINF8) * 3 + is_positive(LIGISFNEW) * 2 + is_positive(LIGISFTRCT) + 0
DILMOD = COD7OD
RETRESIVIEU = arr(arr(ACODIM / 9) * TX25 / 100) + arr(arr(ACODIW / 9) * TX25 / 100) * 1 - ART1731BIS + min(ARESIVIEU_1, ARESIVIEU1731 + 0) * ART1731BIS
LIGRCODOU = is_positive(COD7OU + 0) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIGPENACDIS4 = is_positive(PCDIS) * is_positive(NMAJCDIS4) * LIG2
LIG3250 = is_positive(DALNP) * LIG1 * LIG2
NINVRETQU = max(min(INVOMSOCQU, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN), 0) * 1 - V_CNR
INVRETOY = min(NINVRETOY, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX)) * 1 - V_CNR
ACEL2012_R = positif_ou_nul(CELSOMJ) * BCEL_2012 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RLOC106 = max(min(INVRETTB * 1 - INDPLAF + INVRETTBA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC100, RLOC101, RLOC102, RLOC103, RLOC104, RLOC105])), 0) * 1 - V_CNR
INVRETBE = min(NINVRETBE, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW - INVRETTB - INVRETAC - INVRETAH - INVRETAM - INVRETAR - INVRETAW)) * 1 - V_CNR
GLPRRZC = is_positive(PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2ZC / TOTALQUOHT) + 1 - is_positive(PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV
LIGREPPIZ = is_positive(REPPI + REPNU + REPSZ + REPBA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RCELREPGU_1 = max(min(ACELREPGU, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1, RCELREPHB_1, RCELREPHA_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
FRDA4 = FRN4 * is_positive(FRN4 - _10MINS4)
REPFOREST3 = positif_ou_nul(REPSINFOR + VARD + REPSINFOR1 + REPFOR1 + REPSINFOR2 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * REPFOR2 + 1 - positif_ou_nul(REPSINFOR + VARD + REPSINFOR1 + REPFOR1 + REPSINFOR2 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R)) * max(0, REPFOR2 - max(0, PLAF_FOREST1 * 1 + BOOL_0AM - ACOTFOR_R - REPSINFOR - VARD - REPSINFOR1 - REPFOR1 - REPSINFOR2)) * 1 - V_CNR
IPQ22 = ZIPQ22 * 2
XTSNT3 = XEXTS3 - XFPT3
CIRSE4 = CIRSE8TX + CIRSE8SB
TGLTOTM = sum([TGL1M, TGL2M, TGL3M, TGL4M]) + TGLRVGM + TGLRWBM + TGLRWAM
BCIFORETUA = max(0, min(COD7UA, max(0, PLAF_FOREST1 * 1 + BOOL_0AM))) * 1 - V_CNR
ACELCOM_R = positif_ou_nul(CELLIERNP + CELLIERNR + CELLIERNS + CELLIERNT) * BCELCOM2011 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REP103 = IND_103 * D10M3 + 1 - IND_103 * FPT3
RRCEL2009 = max(0, RRCELHH + CELREPGU + CELREPGT + CELREPHF + CELREPHE - RCELREPGU - RCELREPGT - RCELREPHF - RCELREPHE * is_positive(CELREPGU + CELREPGT + CELREPHF + CELREPHE) + CELREPYG + CELREPYH - RCELREPYG - RCELREPYH * is_positive(CELREPYG + CELREPYH)) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RINVRED_1 = max(min(AINVRED, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA), 0)
TRPQ4C = arr(TGL4C / DIVGL4) + 0
LIGLOCENT = is_positive(DLOCENT) * LIG1 * LIG2
LIGNPLOCF = is_positive(LOCNPCGAV + LOCNPCGAC + LOCNPCGAPAC + LOCDEFNPCGAV + LOCDEFNPCGAC + LOCDEFNPCGAPAC + LOCNPV + LOCNPC + LOCNPPAC + LOCDEFNPV + LOCDEFNPC + LOCDEFNPPAC + LNPRODEF10 + LNPRODEF9 + LNPRODEF8 + LNPRODEF7 + LNPRODEF6 + LNPRODEF5 + LNPRODEF4 + LNPRODEF3 + LNPRODEF2 + LNPRODEF1 + LOCGITCV + LOCGITCC + LOCGITCP + LOCGITHCV + LOCGITHCC + LOCGITHCP) * 1 - null(4 - V_REGCO) * LIG0
LIGPPEJC = positif_ou_nul(360 - PPENJC) * is_positive(INDLIGPPE) * LIG0 * LIG2 * is_positive(PPENJC) * present(PPENJC) + is_positive(PPESAISITPC) * is_positive(PPEACC)
PPE_DEBUT = PPE_DEBRANG
LIGPPENSC = is_positive(is_positive(is_positive(1 - null(PPE_AVRPRO1C + 0)) * is_positive(is_positive(PPETOTX) + is_positive(PPEREVSALC)) * is_positive(INDLIGPPE)) + is_positive(PPESAISITPC + PPESAISINBJC)) * INDPPEC * LIG0 * LIG2
INDEFTS2 = positif_ou_nul(TSB2 - FRD2)
SOMMERF = RFORDI + RFMIC + FONCI + REAMOR + 0
INVRETQNA = min(arr(NINVRETQN * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA)) * 1 - V_CNR
LIGCELLT = is_positive(DCELRREDLT) * LIG1 * LIG2
NINVRETQJ = max(min(INVOMSOCQJ, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT3 - NRPATNAT2 - NRPATNAT1 - NRPATNAT - NINVRETKG - NINVRETKH - NINVRETKI - NINVRETQN - NINVRETQU - NINVRETQK), 0) * 1 - V_CNR
RD_RVT = CS_RVT
NINVRETMBR = NINVRETMB - arr(NINVRETMB * TX40 / 100) * 1 - V_CNR
LIGILMPA = is_positive(DILMPA) * LIG1 * LIG2
IPQRCMFU5 = ZIPQRCMFU5 * REVPEANB
DCELREPYB = CELREPYB
RETUD = 1 - V_CNR * arr(RDENS * MTRC + RDENL * MTRL + RDENU * MTRS + RDENSQAR * MTRC / 2 + RDENLQAR * MTRL / 2 + RDENUQAR * MTRS / 2)
# TODO BIPN
RESTIMOF = min(RIMOSAUVRF, LIM_RESTIMO - RESTIMOD - RESTIMOB - RESTIMOC)
PHAUTREV = PTOTCHR
RDIFAGRI_1 = max(min(RAGRI, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1), 0)
NRILMJW = max(min(AILMJW, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX), 0)
INVRETQS = min(arr(NINVRETQS * TX35 / 100), max(0, PLAF_INVDOM - INVRETKG - INVRETKH - INVRETKI - INVRETQN - INVRETQU - INVRETQK - INVRETQJ)) * 1 - V_CNR
ADUFLOGIH = ADUFLOGIH_1 * 1 - ART1731BIS + min(ADUFLOGIH_1, max(ADUFLOGIH_P + ADUFLOGIHP2, ADUFLOGIH1731 + 0) * 1 - PREM8_11) * ART1731BIS
INDPLAF = is_positive(TOTALPLAFA + TOTALPLAFB + TOTALPLAFC - TOTALPLAF1 - TOTALPLAF2 - TOTALPLAF3) * is_positive(INDPLAF1 + INDPLAF2 + INDPLAF3) * is_positive(OPTPLAF15)
LIGPPEHC = positif_ou_nul(1820 - PPENBHC) * present(PPENBHC) * INDPPEC * is_positive(INDLIGPPE) * LIG0 * LIG2
ATEC = is_positive(DTEC) * DTEC
RNGTEF = null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * IPVLOC + 1 - null(V_REGCO - 4) * null(V_CNR - 1) * null(V_CNR2 - 1) * null(V_CR2 - 1) * RBLTEF
RENT26 = max(min(INVRETAGR * 1 - INDPLAF + INVRETAGRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25])), 0) * 1 - V_CNR
DEFBA4 = 1 - is_positive(BAHQT + BAQT) * DAGRI3 + is_positive(BAHQT + BAQT) * abs(min(max(BAHQT + BAQT - DAGRI6 - DAGRI5 - DAGRI4, 0) - DAGRI3, DAGRI3)) * positif_ou_nul(DAGRI3 - max(BAHQT + BAQT - DAGRI6 - DAGRI5 - DAGRI4, 0)) * 1 - is_positive(IPVLOC) * 1 - is_positive(ART1731BIS) + min(DAGRI3, DAGRI - DBAIP - DEFBA2 - DEFBA3) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + DAGRI3 * is_positive(is_positive(ART1731BIS * PREM8_11) + null(8 - CMAJ) + null(11 - CMAJ))
LIGITAXLOY = present(LOYELEV) * 1 - is_positive(ANNUL2042) * LIG1
ABNCPNETP = AUTOBNCP - TBNCPABP
MIB_TVENC = MIBVENC + MIBNPVENC + MIBGITEC + LOCGITC
BADPLAF2 = min(LIM_AIDOMI * 1 - is_positive(PREMAIDE) + LIM_PREMAIDE * is_positive(PREMAIDE) + MAJSALDOM * positif_ou_nul(V_ANREV - V_0DA - 65) + positif_ou_nul(V_ANREV - V_0DB - 65) * BOOL_0AM + ASCAPA + V_0CF + V_0DJ + V_0DN + V_0CH + V_0DP / 2, LIM_AIDOMI3 * 1 - is_positive(PREMAIDE) + LIM_PREMAIDE2 * is_positive(PREMAIDE)) * 1 - is_positive(INAIDE + 0) + LIM_AIDOMI2 * is_positive(INAIDE + 0) * is_positive(RVAIDAS)
LIGPLOC = is_positive(LOCPROCGAV + LOCPROCGAC + LOCPROCGAP + LOCDEFPROCGAV + LOCDEFPROCGAC + LOCDEFPROCGAP + LOCPROV + LOCPROC + LOCPROP + LOCDEFPROV + LOCDEFPROC + LOCDEFPROP) * 1 - null(4 - V_REGCO) * LIG0
AGRREST = is_positive(REST) * max(0, min(CICONGAGRI, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU))
TOTALPLAFC = INVRETRLA + INVRETRQA + INVRETRVA + INVRETNVA + INVRETRKA + INVRETRPA + INVRETRUA + INVRETNUA + INVRETRMA + INVRETRRA + INVRETRWA + INVRETNWA + INVRETROA + INVRETRTA + INVRETRYA + INVRETNYA + INVRETSLA + INVRETSQA + INVRETSVA + INVRETTAA + INVRETSKA + INVRETSPA + INVRETSUA + INVRETSZA + INVRETSMA + INVRETSRA + INVRETSWA + INVRETTBA + INVRETSOA + INVRETSTA + INVRETSYA + INVRETTDA + INVRETALA + INVRETAQA + INVRETAVA + INVRETBBA + INVRETAKA + INVRETAPA + INVRETAUA + INVRETBAA + INVRETAMA + INVRETARA + INVRETAWA + INVRETBEA + INVRETAOA + INVRETATA + INVRETAYA + INVRETBGA + INVRETOTA + INVRETOUA + INVRETOVA + INVRETOWA + INVRETOGA + INVRETOXA + INVRETOYA + INVRETOZA + INVRETUDA + INVRETUEA + INVRETUFA + INVRETUGA + INVRETRLRA + INVRETRQRA + INVRETRVRA + INVRETNVRA + INVRETRKRA + INVRETRPRA + INVRETRURA + INVRETNURA + INVRETSLRA + INVRETSQRA + INVRETSVRA + INVRETTARA + INVRETSKRA + INVRETSPRA + INVRETSURA + INVRETSZRA + INVRETALRA + INVRETAQRA + INVRETAVRA + INVRETBBRA + INVRETAKRA + INVRETAPRA + INVRETAURA + INVRETBARA
BPLIB = min(RCMLIB, max(0, ABTAV - RAVC)) * 1 - V_CNR
NINVRETRT = max(min(INVOMENTRT, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO), 0) * 1 - V_CNR
# TODO RIVL6
ZIPQF15 = is_positive(sum([TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQF1M / TETONEQUOM1) + 1 - is_positive(sum([TEGLF2M, TEGLF3M, TEGLF4M]) + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - sum([ZIPQFV5, ZIPQFC5])
RLOG21 = max(min(INVRETOR * 1 - INDPLAF + INVRETORA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20])), 0) * 1 - V_CNR
LIGCIGE = is_positive(RDTECH + RDEQPAHA) * LIG1 * LIG2
TEGLTS4 = GLTS4 * 1 - is_positive(INDTEFF) + TGLTS4 * is_positive(INDTEFF)
RCELREPHD = max(0, RCELREPHD_1 * 1 - ART1731BIS + min(RCELREPHD_1, max(RCELREPHD_P + RCELREPHDP2, RCELREPHD1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPE_FORMULE4 = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN4 * PPE_BOOL_MAX4 * arr(positif_ou_nul(PPELIMSMIC - PPE_RCONTP4) * arr(PPE_RCONTP4 * PPETX1 / 100) / PPE_COEFF4 + is_positive(PPE_RCONTP4 - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTP4) * arr(arr(PPELIMRPH - PPE_RCONTP4 * PPETX2 / 100) / PPE_COEFF4) + is_positive(PPE_RCONTP4 - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTP4) * arr(arr(PPELIMRPH2 - PPE_RCONTP4 * PPETX3 / 100) / PPE_COEFF4))
TGLN2V = max(GLD2V - TABGL2V, 0)
RIV2012CEL2 = RIV2012CEL1
INTREST = is_positive(REST) * max(0, min(CREINTERESSE, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS))
SOMMEA538VP = present(BAF1AV) + present(BA1AV) + present(MIB1AV) + present(BI1AV) + present(MIBNP1AV) + present(BI2AV) + present(BNCPRO1AV) + present(BN1AV) + present(BNCNP1AV) + present(PVINVE)
# TODO INDREV1A8
ABTSV = ABTS1AJ + ABTS1AP + ABTS3VJ + ABTS1TT + ABTSRAJ + ABTSRAP
DTOURREP = RINVLOCINV + REPINVTOU + INVLOCXN + COD7UY
PTAXLOYNETNEG = max(0, PIR + PTAXA + PPCAP + PTAXLOY - IRCUM - TAXACUM - PCAPCUM - TAXLOYCUM)
BNRC = BNNSC + BNNAC
LIGPLAFRSN4 = is_positive(PLAFREPSN4) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
DCELREPGJ = CELREPGJ
TGLRCMTSM = is_positive(_6RCM + _7RCM + REVRF) * arr(TONEQUOM * _5RCM / TOTALQUO) + 1 - is_positive(_6RCM + _7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM - TGLRCMFUM - TGLRCMCHM
INVRETRKRA = min(NINVRETRKR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA)) * 1 - V_CNR
LIGNMAJLOY3 = TYPE2 * is_positive(NMAJLOY3)
NRILMJC = max(min(AILMJC, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH), 0)
LIGPIQABCD = is_positive(DPIQABCD) * LIG1 * LIG2
SOFIRNG = RBL + TOTALQUO - SDD - SDC1
BARSREVV = BAHREV + _4BAHREV
RPQPALIMCM = inf(GLPALIMCM / PENSALNBC)
P2GEWL = max(0, P2GE + PLAF_GE2 * 1 + BOOL_0AM - BGEPAHA - BTANTGECUMWL)
TGLN4V = max(CODDAJ - TABDOMDAJ, 0) + max(CODEAJ - TABDOMEAJ, 0)
LIGFIPDOM = is_positive(DFIPDOM) * LIG1 * LIG2
NBMIQAR = null(VAR0BT) * null(V_0CF + V_0DJ + V_0CR + 0) * 2 * V_0CH - 2 * is_positive(V_0CH - 2) + 1 * is_positive(V_0CH + 0) + 1 * is_positive(V_0CH - 1) + null(V_0CF + V_0DJ + V_0CR - 1) * 2 * V_0CH - 1 * is_positive(V_0CH - 1) + 1 * is_positive(V_0CH + 0) + positif_ou_nul(V_0CF + V_0DJ + V_0CR - 2) * 2 * V_0CH
DEFNONPLOC = abs(DEFNPLOCF)
REPCELJBGL = sum([RIVCELJBGL1, RIVCELJBGL2, RIVCELJBGL3, RIVCELJBGL4, RIVCELJBGL5, RIVCELJBGL6, RIVCELJBGL7]) + RIVCELJBGL8
ZIPQ15 = is_positive(sum([TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQ1M / TETONEQUOM1) + 1 - is_positive(sum([TEGL2M, TEGL3M, TEGL4M]) + TEGLFTOTM + TEGLPALIMTOTM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT7 - ZIPQRWB5 - ZIPQRWA5 - ZIPQRVG5
LIGIREXS19 = is_positive(IREXITS19) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
INVRETAC = min(NINVRETAC, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW - INVRETTB)) * 1 - V_CNR
BNCDF4 = 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * DABNCNP3 + positif_ou_nul(NOCEPIMP + SPENETNPF) * min(max(NOCEPIMP + SPENETNPF - DABNCNP6 - DABNCNP5 - DABNCNP4, 0) - DABNCNP3, DABNCNP3) * -1 * positif_ou_nul(DABNCNP3 - max(NOCEPIMP + SPENETNPF - DABNCNP6 - DABNCNP5 - DABNCNP4, 0)) * 1 - is_positive(ART1731BIS) + min(DABNCNP3, DABNCNP - DIDABNCNP - BNCDF2 - BNCDF3) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + DABNCNP3 * is_positive(is_positive(ART1731BIS * PREM8_11) + null(8 - CMAJ) + null(11 - CMAJ))
INVRETAMA = min(NINVRETAM, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA)) * 1 - V_CNR
NRCELREPHH = max(min(ACELREPHH, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD])), 0)
RPQF1 = inf(GLF1 / COTF1)
RIVCELHLM3 = RIVCELHLM1
TGLDOMAVDAJV = max(CODDAJ - TABDOMDAJ, 0)
RSE2BASE = max(0, RSE8TV - CIRSE8TV - CSPROVYF) + max(0, RSE8SA - CIRSE8SA - CSPROVYN)
TTSN1FP = ALLO4 - TABTS1FP
RFCE = max(0, RFCD - RFDORD) * 1 - is_positive(ART1731BIS) + max(0, RFCD - DEFRF4BB) * is_positive(ART1731BIS)
SOMMEBNC = BNCNPV + BNCNPC + BNCNPP + BNCNPPVV + BNCNPPVC + BNCNPPVP + BNCAABV + ANOCEP + BNCAABC + ANOVEP + BNCAABP + ANOPEP + 0
TTSBNV = TSHALLOV + ALLOV + max(0, SALEXTV - COD1AD)
RLOC69 = max(min(INVRETPW * 1 - INDPLAF + INVRETPWA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68])), 0) * 1 - V_CNR
RIVCELHLM8 = arr(min(CELLIERHL + CELLIERHM + 0, LIMCELLIER) * is_positive(CELLIERHL) * TX25 / 100 + min(CELLIERHL + CELLIERHM + 0, LIMCELLIER) * is_positive(CELLIERHM) * TX40 / 100) - 8 * RIVCELHLM1 * 1 - V_CNR
TERPQTSREMPC = RPQTSREMPC * 1 - is_positive(INDTEFF) + TRPQTSREMPC * is_positive(INDTEFF)
GLRWA = is_positive(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * CODRWA / TOTALQUOHT) + 1 - is_positive(CODRVG + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB * null(2 - FLAG_EXIT)
INVRETQNRA = min(NINVRETQNR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA)) * 1 - V_CNR
LIGBNCDF4 = is_positive(BNCDF4) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
TGLTS1 = is_positive(TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2TS1 / TOTALQUO) + 1 - is_positive(TTSNN2TS2 + TTSNN2TS3 + TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - GLTOT - GLFTOT - GLPALIMTOT - TGLTSV - TGLTSC
BQTRAV = is_positive(present(TRAVITWT) + present(COD7WU) * present(TRAMURWC) + present(COD7WB) + present(TRAVITWT) + present(COD7WU) * present(TRATOIVG) + present(COD7VH) + present(TRAVITWT) + present(COD7WU) * present(CHAUBOISN) + present(COD7RN) + present(TRAVITWT) + present(COD7WU) * present(POMPESR) + present(COD7RR) + present(CHAUFSOL) + present(COD7RS) + present(TRAVITWT) + present(COD7WU) * present(CIBOIBAIL) + present(COD7SA) + present(CINRJBAIL) + present(COD7SB) + present(POMPESP) + present(COD7RP) + present(POMPESQ) + present(COD7RQ) + present(ENERGIEST) + present(COD7RT) + present(TRAMURWC) + present(COD7WB) * present(TRATOIVG) + present(COD7VH) + present(TRAMURWC) + present(COD7WB) * present(CHAUBOISN) + present(COD7RN) + present(TRAMURWC) + present(COD7WB) * present(POMPESR) + present(COD7RR) + present(CHAUFSOL) + present(COD7RS) + present(TRAMURWC) + present(COD7WB) * present(CIBOIBAIL) + present(COD7SA) + present(CINRJBAIL) + present(COD7SB) + present(POMPESP) + present(COD7RP) + present(POMPESQ) + present(COD7RQ) + present(ENERGIEST) + present(COD7RT) + present(TRATOIVG) + present(COD7VH) * present(CHAUBOISN) + present(COD7RN) + present(TRATOIVG) + present(COD7VH) * present(CHAUBOISN) + present(COD7RN) + present(TRATOIVG) + present(COD7VH) * present(POMPESR) + present(COD7RR) + present(CHAUFSOL) + present(COD7RS) + present(TRATOIVG) + present(COD7VH) * present(CIBOIBAIL) + present(COD7SA) + present(CINRJBAIL) + present(COD7SB) + present(POMPESP) + present(COD7RP) + present(POMPESQ) + present(COD7RQ) + present(ENERGIEST) + present(COD7RT) + present(CHAUBOISN) + present(COD7RN) * present(POMPESR) + present(COD7RR) + present(CHAUFSOL) + present(COD7RS) + present(CHAUBOISN) + present(COD7RN) * present(CIBOIBAIL) + present(COD7SA) + present(CINRJBAIL) + present(COD7SB) + present(POMPESP) + present(COD7RP) + present(POMPESQ) + present(COD7RQ) + present(ENERGIEST) + present(COD7RT) + present(POMPESR) + present(COD7RR) + present(CHAUFSOL) + present(COD7RS) * present(CIBOIBAIL) + present(COD7SA) + present(CINRJBAIL) + present(COD7SB) + present(POMPESP) + present(COD7RP) + present(POMPESQ) + present(COD7RQ) + present(ENERGIEST) + present(COD7RT)) + 0
TIND_APBC = positif_ou_nul(TPLRC - TEXPRC * TX_DEDPER / 100)
RCELRREDMH = max(0, RCELRREDMH_1 * 1 - ART1731BIS + min(RCELRREDMH_1, max(RCELRREDMH_P + RCELRREDMHP2, RCELRREDMH1731 + 0) * 1 - PREM8_11) * ART1731BIS)
RLOC39 = max(min(INVRETPJR * 1 - INDPLAF + INVRETPJRA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38])), 0) * 1 - V_CNR
TMIB_AVC = min(TMIB_TVENC, max(MIN_MBIC, arr(TMIB_TVENC * TX_MIBVEN / 100)))
NPLOCSSPAC = min(0, LOCNPPAC + LOCGITHCP - LOCDEFNPPAC) * positif_ou_nul(LOCDEFNPPAC - LOCNPPAC - LOCGITHCP) + arr(max(0, LOCNPPAC + LOCGITHCP - LOCDEFNPPAC) * MAJREV) * is_positive(LOCNPPAC + LOCGITHCP - LOCDEFNPPAC)
RLOC27 = max(min(INVRETPA * 1 - INDPLAF + INVRETPAA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26])), 0) * 1 - V_CNR
LIGIREST = is_positive(LIGRES + LIGDEGRES) * positif_ou_nul(IREST - SEUIL_8) + null(IREST)
NPLOCSC = arr(NPLOCC * LOCNPC / LOCNPC + LOCGITHCC) * present(LOCNPC) + min(0, NPLOCC) * 1 - is_positive(LOCNPC)
ZIPQPRRZC5 = is_positive(sum([TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPRRZCM / TETONEQUOM1) + 1 - is_positive(sum([TEGLPRRZ1M, TEGLPRRZ2M, TEGLPRRZ3M, TEGLPRRZ4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZV5
NINVRETPAR = NINVRETPA - arr(NINVRETPA * TX4737 / 100) * 1 - V_CNR
DCSGD = is_positive(CSREC + V_IDANT) * arr(BDCSG * T_IDCSG / 100) - DCSGIM - DCSGIM_A * is_positive(NAPCR61)
TGL4VC = arr(TONEQUO * REV4VC / TOTALQUO)
LIGCELGS = is_positive(DCELREPGS) * LIG1 * LIG2
RLOC100 = max(min(INVRETSZ * 1 - INDPLAF + INVRETSZA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99])), 0) * 1 - V_CNR
ZIPQRWB1 = is_positive(TEGLRWA + TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQRWB / TETONEQUO1) + 1 - is_positive(TEGLRWA + TEGLRVG + sum([TEGL1, TEGL2, TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1
REVQTOT = CODRWB * null(1 - FLAG_EXIT) + CODRWB + CODRWA * null(2 - FLAG_EXIT) + CODRVG + sum([REV1, REV2, REV3, REV4]) + REVALIM + REVF + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF
INVRETOB = min(NINVRETOB, max(0, PLAF_INVDOM - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD)) * 1 - V_CNR
TAUX3 = TX_BAR3 - TX_BAR2
INVRETNVA = min(arr(NINVRETNV * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA)) * 1 - V_CNR
LIGLOCNEUF6 = is_positive(RIVL6) * LIG1
DCELFD = CELLIERFD
PMIB_APP = min(MIBPRESP, max(MIN_MBIC, arr(MIBPRESP * TX_MIBPRES / 100)))
# TODO BRCMTOT
TERPQRCMDC = RPQRCMDC * 1 - is_positive(INDTEFF) + TRPQRCMDC * is_positive(INDTEFF)
ICREREVET = max(0, min(IAD11 + ITP - CIRCMAVFT - IRETS - min(IAD11, CRCFA), min(ITP, CREREVET)))
DCELREPHB = CELREPHB
NINVRETOM = max(min(INVOMLOGOM, RRI1 - INVLOG2008 - INVLGDEB2009 - INVLGDEB - INVOMLOGOA - INVOMLOGOH - INVOMLOGOL - INVOMLOGOO - INVOMLOGOS - NINVRETQL - NINVRETQM - NINVRETQD - NINVRETOB - NINVRETOC - NINVRETOI - NINVRETOJ - NINVRETOK), 0) * 1 - V_CNR
LIGREPMB = is_positive(REPMB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
NINVRETPY = max(min(INVOMRETPY, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT), 0) * 1 - V_CNR
RPQPALIM3M = inf(GLPALIM3M / PENSALNBP3)
RESTIMOD = min(RIMOSAUVANT, LIM_RESTIMO)
PPE_FORMULEV = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MINV * PPE_BOOL_MAXV * arr(positif_ou_nul(PPELIMSMIC - PPE_RCONTPV) * arr(PPE_RCONTPV * PPETX1 / 100) / PPE_COEFFV + is_positive(PPE_RCONTPV - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTPV) * arr(arr(PPELIMRPH - PPE_RCONTPV * PPETX2 / 100) / PPE_COEFFV) + is_positive(PPE_RCONTPV - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTPV) * arr(arr(PPELIMRPH2 - PPE_RCONTPV * PPETX3 / 100) / PPE_COEFFV))
INVRETQI = NINVRETQI * 1 - V_CNR
RIVCELJOQR4 = arr(min(CELLIERJO + CELLIERJQ + CELLIERJR, LIMCELLIER) * is_positive(CELLIERJQ) * TX36 / 100 + min(CELLIERJO + CELLIERJQ + CELLIERJR, LIMCELLIER) * is_positive(CELLIERJO + CELLIERJR) * TX24 / 100) - 4 * RIVCELJOQR1 * 1 - V_CNR
QF026 = arr(RB06) / NB2
DILMIX = LOCMEUBIX
LIGREDMEUB = is_positive(DREDMEUB) * LIG1 * LIG2
TABTS1CP = is_positive(CARTSP1 + REMPLAP1) * arr(TREP101 * ALLO1 / TTSB1) + 1 - is_positive(CARTSP1 + REMPLAP1) * max(0, TREP101 - TABTS1CJ - TABTS1CC)
RDRCM1BIS = 1 - is_positive(RDRCM1) * RDRCM1NEGPLAF * -1 + positif_ou_nul(RDRCM1) * RDRCM1
# TODO RECOMP
LIGCELYG = is_positive(DCELREPYG) * LIG1 * LIG2
ZIPQRFANT21 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * arr(IQUOTOTANT1 * TERPQRF2 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANT1TOT - ZIPQRFANT11 - ZIPQPRRANTZ1TOT
IND_APB3 = positif_ou_nul(PLR3 - EXPR3 * TX_DEDPER / 100)
RCELREPHF = max(0, RCELREPHF_1 * 1 - ART1731BIS + min(RCELREPHF_1, max(RCELREPHF_P + RCELREPHFP2, RCELREPHF1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGTAXANT = APPLI_ILIAD * 1 - is_positive(20 - V_NOTRAIT) * is_positive(V_TAXANT + LIGTAXANET * is_positive(TAXANET)) * 1 - is_positive(LIG2051) * TYPE2 * 1 - APPLI_OCEANS
AREDREP = DREDREP * 1 - ART1731BIS + min(DREDREP, max(AREDREP_P + AREDREPP2, AREDREP1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
RHEBE = max(0, RHEBE_1 * 1 - ART1731BIS + min(RHEBE_1, max(RHEBE_P + RHEBEP2, RHEBE1731 + 0) * 1 - PREM8_11) * ART1731BIS)
ARIRENOV = BRENOV * 1 - ART1731BIS + min(BRENOV, max(ARIRENOV_P + ARIRENOVP2, ARIRENOV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
NRCELREPHB = max(min(ACELREPHB, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG])), 0)
ZIGRSERS = is_positive(DRSED - V_RSE1ANT + V_RSE2ANT + V_RSE3ANT + V_RSE4ANT + V_RSE5ANT) * is_positive(IDRSE) * 1 - null(V_IDRSEANT + DRSED + 0) * 1 - null(V_IDRSEANT - DRSED) * is_positive(V_NOTRAIT - 20) * LIG2
MESGOUV = 1 * null(IDRS3 - IDEC) * positif_ou_nul(RNI - RNIBAR13) + 2 * is_positive(IDRS3 - IDEC + 0) * is_positive(IDEC + 0) * 1 - is_positive(CODMESGOUV) * 1 - is_positive(RNIBAR13 - RNI) + 3 * is_positive(CODMESGOUV + is_positive(RNIBAR13 - RNI) + 1 - is_positive(null(IDRS3 - IDEC) * positif_ou_nul(RNI - RNIBAR13) + is_positive(IDRS3 - IDEC + 0) * is_positive(IDEC + 0)))
TERPQPALIM3 = RPQPALIM3 * 1 - is_positive(INDTEFF) + TRPQPALIM3 * is_positive(INDTEFF)
RDRCM1NEGPLAFAPS = min(COD2FA, abs(RDRCM1APS))
RISFDONF_1 = min(PLAF_ISFRED, AISFDONF)
LIGRCODJU = is_positive(LOCMEUBJU + 0) * is_positive(RCODJU1 + RCODJU2 + RCODJU3 + RCODJU4 + RCODJU5 + RCODJU6 + RCODJU7 + RCODJU8) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BICIMPV = BIHTAV + BIPTAV + MIB_NETVV + MIB_NETPV
RRESINEUV4 = arr(arr(ACODIL / 9) * TX20 / 100)
LIGREPSQ = is_positive(REPSQ) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TGLRVO5M = is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * arr(TONEQUOM * _2RV2 / TOTALQUO) + 1 - is_positive(_2RV3 + _2RV4 + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOM
RLOG07 = max(min(INVOMLOGOO, RRI1 - RLOG01 - RLOG02 - RLOG03 - RLOG04 - RLOG05 - RLOG06), 0) * 1 - V_CNR
DEDMIN1 = is_positive(DETS1) * MIN_DEMEMPLOI + 1 - is_positive(DETS1) * MIN_DEDSFORFTS
LIGLOCRES5 = is_positive(RIVL5RES) * LIG1
TR5_ISF = arr(max(0, min(DISFBASE, LIM_TR5_ISF) - LIM_TR4_ISF) * TX_TR5_ISF / 10000)
REPCELHJK = sum([RIVCELHJK1, RIVCELHJK2, RIVCELHJK3, RIVCELHJK4, RIVCELHJK5, RIVCELHJK6, RIVCELHJK7]) + RIVCELHJK8
TPRNC = is_positive(TTSNTC) * is_positive(TTSNTC + TPRNNC) * TTSNTC + TPRNNC + positif_ou_nul(TTSNTC) * TPRNNC
RLOG32 = max(min(INVRETOZ * 1 - INDPLAF + INVRETOZA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31])), 0) * 1 - V_CNR
NRCELHJK = max(min(RCEL_HJK, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO), 0)
RLOC94 = max(min(INVRETTA * 1 - INDPLAF + INVRETTAA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93])), 0) * 1 - V_CNR
TERPQPALIM2M = RPQPALIM2M * 1 - is_positive(INDTEFF) + TRPQPALIM2M * is_positive(INDTEFF)
INDE3 = is_positive(INDRSE3 + INDRSE3X) * INDTRAIT
REPDONR4 = positif_ou_nul(BASEDONF - arr(REVDON * TX_BASEDUP / 100)) * REPDON04 + 1 - positif_ou_nul(BASEDONF - arr(REVDON * TX_BASEDUP / 100)) * max(REPDON04 + BASEDONF - arr(REVDON * TX_BASEDUP / 100), 0) * 1 - V_CNR
LIGREPAL = is_positive(REPAL) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
TIND_10MIN_03 = is_positive(TDEDMIN3 - TDFN3) * is_positive(TTSB3)
INVRETAM = min(NINVRETAM, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW - INVRETTB - INVRETAC - INVRETAH)) * 1 - V_CNR
# TODO TAXANET
TONEQUOMHT = max(0, TOTALQUOHT - VARDMOND * is_positive(ART1731BIS) + DMOND * 1 - ART1731BIS)
TEGLF3 = GLF3 * 1 - is_positive(INDTEFF) + TGLF3 * is_positive(INDTEFF)
TMIB_VENTAV = min(MIBVENV + MIBNPVENV, max(MIN_MBIC, arr(MIBVENV + MIBNPVENV * TX_MIBVEN / 100)))
# TODO SPEDREPV
INVRETQFRA = min(NINVRETQFR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA - INVRETQPRA - INVRETQGRA - INVRETQORA)) * 1 - V_CNR
DLOCENT = CODHAA + CODHAB + CODHAC + CODHAD + CODHAF + CODHAG + CODHAH + CODHAI + CODHAK + CODHAL + CODHAM + CODHAN + CODHAP + CODHAQ + CODHAR + CODHAS + CODHAU + CODHAV + CODHAW + CODHAX + CODHBA + CODHBB + CODHBE + CODHBF
NINVRETQC = max(min(INVLGDEB2009, RRI1 - INVLOG2008), 0) * 1 - V_CNR
INVRETNY = NINVRETNY * 1 - V_CNR
AFORET_1 = max(min(DFORET, LIM_FORET), 0) * 1 - V_CNR
LIG2LB = is_positive(COD2LB) * LIG1 * LIG2 * 1 - V_CNR
ZIG_TITRECP = is_positive(BCSG + V_CSANT) * 1 - is_positive(BRDS + V_RDANT) * is_positive(BPRS + V_PSANT) * 1 - is_positive(BCVNSAL + V_CVNANT) * 1 - V_CNR * LIG2
NRCELREPYL = max(min(ACELREPYL, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH])), 0)
DLOYIMP = LOYIMP
TREP10V = TIND_10V * TD10MV + 1 - TIND_10V * TFPTV
IPQRVO75 = ZIPQRVO75 * RENTAXNB7
_10MINS2 = max(min(TSB2, DEDMIN2), DFN2)
# TODO MLOCABP
INVRETMAR = min(arr(INVRETMA * 3 / 2), NINVRETMA - INVRETMA) * 1 - V_CNR
TBNCNPABC = TBNCTOTABC - TBNCPABC
XTSNTC = XEXTSC - XFPTC
LIGCELJOQR = is_positive(DCELJOQR) * LIG1 * LIG2
DSOCREPR = RSOCREPRISE
REVKIREDUR2 = CKIREDUR
LIGRRCEL2 = is_positive(RRCEL2011 + RRCELLF + RRCELLZ + RRCELLX) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
RESTIMOE = min(RIMOPPAURE, LIM_RESTIMO - RESTIMOD - RESTIMOB - RESTIMOC - RESTIMOF - RESTIMOY - RESTIMOA)
ZIGDCSGD6 = ZIG_CSGD99 * null(ANCSDED2 - V_ANREV + 6) * LIG2
TGLRF1M = is_positive(_3REVF) * arr(TONEQUOM * _2REVF / TOTALQUO) + 1 - is_positive(_3REVF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMTOTM
LIGLOYNET = present(LOYELEV) * INDREV1A8IR + TAXLOYANTAFF * 1 - is_positive(ANNUL2042 + 0) * LIG1
EXSPB1 = EXTS1 + EXPR1
ZIPQF21 = is_positive(sum([TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQF2 / TETONEQUO1) + 1 - is_positive(sum([TEGLF3, TEGLF4]) + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - sum([ZIPQF11, ZIPQFV1, ZIPQFC1])
HRBASEFRAC = arr(REVKIREHR - HRMOYBTRFR / 2)
ARTIMP = positif_ou_nul(ARTREST) * CREARTS - ARTREST
NRCREAT = max(min(RCREATEUR + RCREATEURHANDI, RRI1 - NRLOGDOM), 0)
TRPQPRR3 = inf(TGLPRR3 / CARPENBAP3)
NRDONS = max(min(RON, RRI1 - NRLOGDOM - NRCREAT - NRCOMP - NRRETU), 0)
# TODO NAPCRP
RCOMP = max(0, RCOMP_1 * 1 - ART1731BIS + min(RCOMP_1, max(RCOMP_P + RCOMPP2, RCOMP1731 + 0) * 1 - PREM8_11) * ART1731BIS)
SOMMEBIC = MIBNPVENV + MIBNPVENC + MIBNPVENP + MIBNPPRESV + MIBNPPRESC + MIBNPPRESP + MIBNPPVV + MIBNPPVC + MIBNPPVP + BICREV + BICHREV + BICREC + BICHREC + BICREP + BICHREP + 0
BTP40 = BPV40V + BPV40C * 1 - is_positive(IPVLOC)
LIGHAUTDEG = is_positive(NATIMP - 71) * is_positive(HAUTREVDEG) * LIG2
TSNN21 = is_positive(TS1) * is_positive(CARTSP1 + REMPLAP1) * arr(TS1 * _2TSN1 / EXTS1) + 1 - is_positive(CARTSP1 + REMPLAP1) * TS1 - TSNN1
# TODO IND_CTXS
RLOC08 = max(min(INVRETMB * 1 - INDPLAF + INVRETMBA * INDPLAF, RRILOC - RLOC01 - RLOC02 - RLOC03 - RLOC04 - RLOC05 - RLOC06 - RLOC07), 0) * 1 - V_CNR
GLRFTOT = GLRF1 + GLRF2
RLOG16 = max(min(INVRETOK * 1 - INDPLAF + INVRETOKA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15])), 0) * 1 - V_CNR
BANP = BACREP - DEFBACREP * positif_ou_nul(BARAP) + BARAP * 1 - is_positive(BARAP)
GLTSREMP3 = is_positive(TSNN2REMP4 + TSNN2REMPC + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2REMP3 / TOTALQUOHT) + 1 - is_positive(TSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPV - GLTSREMPC - GLTSREMP1 - GLTSREMP2
PPE_COEFFCOND3 = 1 - PPE_BOOL_TP3 * null(PPENBJ - 360) * PPE_COEFF3 + 1 - null(PPENBJ - 360) * PPENBJ * 1820 / 360 / PPENHP3 + PPEXT3 * is_positive(PPE_SALAVDEF3 + 0) + PPENJP * is_positive(PPE_AVRPRO1P + 0) * 1820 / 360
IDOM12 = max(ID12 - ADO2 * 1 - is_positive(INDCODDAJ) + ITOTDOM2 * is_positive(INDCODDAJ), IMI) * 1 - INDTXMOY + IMO * INDTXMOY * 1 - is_positive(RE168 + TAX1649)
LIGREPSK = is_positive(REPSK) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
BCIFORET = BCIFORETUP + BCIFORETUT + BCIFORETUA + BCIFORETUB + BCIFORETUQ + BCIFORETUI
RIVCEL5 = RIVCEL1
ZIPQTS15 = is_positive(sum([TEGLTS2M, TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * arr(IQUOTOT5 * TERPQTS1M / TETONEQUOM1) + 1 - is_positive(sum([TEGLTS2M, TEGLTS3M, TEGLTS4M]) + TEGLTSREMPTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQRF5TOT - ZIPQRVO5TOT - ZIPQPRRZ5TOT - ZIPQTSV5 - ZIPQTSC5
INVRETPJRA = min(NINVRETPJR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA)) * 1 - V_CNR
IRE2 = IRE + BCIGA * 1 - is_positive(RE168 + TAX1649)
INVRETXER = min(max(min(arr(INVRETXE * 13 / 7), NINVRETXE - INVRETXE), NINVRETXE - INVRETXE), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR - INVRETRBR - INVRETRCR - INVRETRDR - INVRETXAR - INVRETXBR - INVRETXCR)) * 1 - V_CNR
# TODO BOOL_0AM
TSNN2 = is_positive(TS2) * arr(TS2 * TSBN2 / EXTS2) + 1 - is_positive(TS2) * TS2
XFPTV = XDFV * XIND_10V + FRDV * 1 - XIND_10V
RINVDOMTOMLG = RLOGDOM
TMIB_NETPV = MIBPRESV + AUTOBICPV - TMIB_ABPV
INDTD = is_positive(IND_COLD + IND_CTXD) * INDTRAIT
IPQPRR32 = ZIPQPRR32 * CARPENBAP3
TRPQTSREMPV = inf(TGLTSREMPV / REMPLANBV)
INVRETQPRA = min(NINVRETQPR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA - INVRETQWRA - INVRETQXRA - INVRETRARA - INVRETRBRA - INVRETRCRA - INVRETRDRA - INVRETXARA - INVRETXBRA - INVRETXCRA - INVRETXERA - INVRETMARA - INVRETLGRA - INVRETMBRA - INVRETLHRA - INVRETLIRA - INVRETMCRA)) * 1 - V_CNR
PPE_BOOL_NADAU = min(1, is_positive(TSHALLO1 + TSHALLO2 + TSHALLO3 + TSHALLO4 + 0) * null(PPETPP1 + PPETPP2 + PPETPP3 + PPETPP4 + 0) * null(PPENHP1 + PPENHP2 + PPENHP3 + PPENHP4 + 0) + is_positive(SALEXT1 + SALEXT2 + SALEXT3 + SALEXT4 + 0) * null(PPETPP1 + PPETPP2 + PPETPP3 + PPETPP4 + 0) * null(PPEXT1 + PPEXT2 + PPEXT3 + PPEXT4 + 0))
TFPT3 = max(TFRD3, T10MINS3)
RIVCEL7 = RIVCEL1
APBV = max(PLRV, EXPRV * TX_DEDPER / 100)
TSN1 = is_positive(TSNT1) * min(0, TSNT1 + PRNN1) + positif_ou_nul(TSNT1) * TSNT1
LIGISFANT = is_positive(V_ANTISF) * is_positive(V_NOTRAIT - 20)
PPENATIMPA = is_positive(PPETOTX - PPERSA) * is_positive(IINET - PPETOTX + PPERSA - ICREREVET) + is_positive(PPETOTX - PPERSA - PPERESTA)
RLOC59 = max(min(INVRETRU * 1 - INDPLAF + INVRETRUA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58])), 0) * 1 - V_CNR
INVRETSLA = min(arr(NINVRETSL * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA)) * 1 - V_CNR
TGLTSREMP2 = is_positive(TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2REMP2 / TOTALQUO) + 1 - is_positive(TTSNN2REMP3 + TTSNN2REMP4 + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPV - TGLTSREMPC - TGLTSREMP1
LIGDIDAB = positif_ou_nul(DIDABNCNP) * is_positive(LIGDAB) * LIG0 * LIG2
NRRETU = max(min(RETUD, RRI1 - NRLOGDOM - NRCREAT - NRCOMP), 0)
INVRETAHA = min(NINVRETAH, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA)) * 1 - V_CNR
RPQRF1M = inf(GLRF1M / FONCINB)
PERPPLAFCOMV = is_positive(PERPIMPATRIE) * PERPPLAFV * 3 + 1 - is_positive(PERPIMPATRIE) * 0
DCELREPHU = CELREPHU
LIGTITREXC = 1 - is_positive(EXOVOUS) * is_positive(EXOCJT) * 1 - is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
TGLRCMGOM = is_positive(_7RCM + REVRF) * arr(TONEQUOM * _6RCM / TOTALQUO) + 1 - is_positive(_7RCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOTOTM - TGLRCMDCM - TGLRCMFUM - TGLRCMCHM - TGLRCMTSM
ZIG_INF8 = is_positive(CS_DEG) * is_positive(SEUIL_8 - CS_DEG) * LIG2
TAUX5 = TX_BAR5 - TX_BAR4
DILMIC = LOCMEUBIC
DSYND = RDSYVO + RDSYCJ + RDSYPP
BPCAPTAXC = PCAPTAXC - arr(PCAPTAXC * TX_DEDPER / 100)
DEC32 = min(max(arr(SEUIL_DECOTE1 * 1 - BOOL_0AM + SEUIL_DECOTE2 * BOOL_0AM - IDOM32), 0), IDOM32) * 1 - V_ANC_BAR + min(max(arr(SEUIL_DECOTEA / 2 - IDOM32 / 2), 0), IDOM32) * V_ANC_BAR * 1 - V_CNR
PERPPLAFNUTV = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * max(PERPPLATVANT - RPERPV, 0) + is_positive(PERP_COND1) * 0 + is_positive(PERP_COND2) * max(0, PERPPLATVANT - RPERPV - RPERPMUTC - RACCOTC)
TRPQPRRZ3M = inf(TGLPRRZ3M / CODNEZ)
ZIGLOCO = is_positive(ZIGLODD + ZIGLORS + null(V_IDGLOANT - DGLOD)) * 1 - null(V_IDGLOANT + DGLOD + 0) * is_positive(V_NOTRAIT - 20) * LIG2
RLOG34 = max(min(INVRETUB * 1 - INDPLAF + INVRETUBA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19, RLOG20, RLOG21, RLOG22, RLOG23, RLOG24, RLOG25, RLOG26, RLOG27, RLOG28, RLOG29, RLOG30, RLOG31, RLOG32, RLOG33])), 0) * 1 - V_CNR
TTSNEAJ = CODEAJ - TABDOMEAJ
ZIGCSGDCOR4 = ZIG_CSGDCOR * null(ANCSDED2 - V_ANREV + 4)
ACELHL_R = positif_ou_nul(CELLIERHL) * BCEL_HL * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIGGLOANR = is_positive(BGLOACNR) * LIG2
NRCELREPYH = max(min(ACELREPYH, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ])), 0)
GL4C = arr(TONEQUOHT * REV4C / TOTALQUOHT)
PLRC = min(MIN_DEDPR, EXPRC)
PRQVO = CARPEV + PEBFV
RETRESINEUV = arr(arr(ACODIL / 9) * TX20 / 100) + arr(arr(ACODIN / 9) * TX20 / 100) + arr(arr(ACODIJ / 9) * TX18 / 100) + arr(arr(ACODIV / 9) * TX18 / 100) * 1 - ART1731BIS + min(ARESINEUV_1, ARESINEUV1731 + 0) * ART1731BIS
AUBAINE13B = max(0, min(V_A13REELB, V_DIFTEOREEL - AUBAINE13A))
TSPRP = sum([TSPR1, TSPR2, TSPR3, TSPR4]) * 1 - PREM8_11 + max(0, TSNN1 + PRR1 + TSNN2 + PRR2 + TSNN3 + PRR3 + TSNN4 + PRR4) * PREM8_11
LIGCELHU = is_positive(DCELREPHU) * LIG1 * LIG2
LIGRNIDF3 = is_positive(abs(RNIDF3)) * is_positive(is_positive(abs(RNIDF)) + is_positive(FLAGRETARD08 + FLAGDEFAUT11)) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
REPRJ = max(0, INVOMENTRJ - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM)) * 1 - ART1731BIS + max(0, INVOMENTRJ - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - INVOMRETPM)) * ART1731BIS * 1 - V_CNR
LIGSXBN = is_positive(BNCPROEXV + BNCPROEXC + BNCPROEXP) * LIG1 * LIG2
NINVRETSZR = NINVRETSZ - arr(NINVRETSZ * TX4737 / 100) * 1 - V_CNR
RLOC112 = max(min(INVRETTD * 1 - INDPLAF + INVRETTDA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111])), 0) * 1 - V_CNR
LIGILMJY = is_positive(DILMJY) * LIG1 * LIG2
IPQRCMCH2 = ZIPQRCMCH2 * PROVIENB
GLPRR4M = is_positive(PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PRR24 / TOTALQUOHT) + 1 - is_positive(PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSTOTM - GLTSREMPTOTM - GLPRRVM - GLPRRCM - GLPRR1M - GLPRR2M - GLPRR3M
TPENALIMC = is_positive(TEXPRC) * TPRNC - TPRRC - TPRR2C - TPRR2ZC - TPENFC
LIG1760 = 1 - present(IND_TDR) * INDTXMOY * LIG2
LIGREPRC = is_positive(REPRC) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
APERPVTEFRFR = 1 - V_CNR * max(min(RPERPV, RBGTEFRFR - RPALETEFRFR - RPALPTEFRFR - RFACCTEFRFR - RDDIVTEFRFR - DDCSG + TOTALQUO - SDD), 0)
GLN4V = max(CODDAJ - ABDOMDAJ, 0) + max(CODEAJ - ABDOMEAJ, 0) * INDEFTSV
ZIPQPRRZC1 = is_positive(sum([TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPRRZC / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRZV1
TFRD4 = max(0, TFRDP - TFRD1 - TFRD2 - TFRD3)
TTSNN2TS3 = is_positive(TTS3) * is_positive(REMPLAP3) * arr(TTS3 * CARTSP3 / TEXTS3) + 1 - is_positive(REMPLAP3) * TTS3 - TTSNN3
BAHQTOTMIN = is_positive(BAHQT) * BAHQT
FRD1 = 1 - is_positive(PREM8_11) * FRN1 * is_positive(FRN1 - _10MINS1) + null(4 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRN1, FRDPROV1) * is_positive(FRN2 + FRN3 + FRN4) + is_positive(PREM8_11) * max(0, FRDP) * 1 - is_positive(FRN2 + FRN3 + FRN4) + null(5 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRN1, min(FRDPROV1, max(FRDPROV1P2, FRDPROV11731))) * is_positive(FRN2 + FRN3 + FRN4) + is_positive(PREM8_11) * max(0, FRDP) * 1 - is_positive(FRN2 + FRN3 + FRN4)
TRPQTS1M = inf(TGLTS1M / CARTSNBAP1)
ZIGINT22 = is_positive(RETCDIS22)
V_EAD = (V_REGCO + 0) in [{'type': 'enumeration_values', 'values': [5]}]
TMIB_ABVV = max(0, arr(TMIB_AVV * MIBVENV + AUTOBICVV / TMIB_TVENV))
REPENT5 = INVOMREP + NRETROC40 + NRETROC50 + INVENDI
REPCELNBGL = sum([RIVCELNBGL1, RIVCELNBGL2, RIVCELNBGL3, RIVCELNBGL4, RIVCELNBGL5, RIVCELNBGL6, RIVCELNBGL7]) + RIVCELNBGL8
RPQTSC = inf(GLTSC / CARTSNBAC)
TABAVC = ABAVC + _2ABAVC
PERPBNCMNV = BNCPROEXV + max(0, BNCPROV + AUTOBNCV - max(arr(BNCPROV + AUTOBNCV * SPETXAB / 100), MIN_SPEBNC)) + BNCPROPVV - BNCPMVCTV
INVRETQWRA = min(NINVRETQWR, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA - INVRETOCA - INVRETOMA - INVRETONA - INVRETUAA - INVRETODA - INVRETKGRA - INVRETKHRA - INVRETKIRA - INVRETQNRA - INVRETQURA - INVRETQKRA - INVRETQJRA - INVRETQSRA)) * 1 - V_CNR
PPE_COEFFN = PPE_BOOL_TPN * 360 / PPENBJ + 1 - PPE_BOOL_TPN / PPENJP * is_positive(PPE_AVRPRO1P + 0) / 360
LIGREVRF = is_positive(present(FONCI) + present(REAMOR)) * 1 - is_positive(IPVLOC) * LIG1 * LIG2
BAD2 = min(RVAIDAS, max(0, BADPLAF2 - BADCRE - BAD1))
_2RV4 = arr(RENTAX7 * TXRVT4 / 100)
INVRETAW = min(NINVRETAW, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM - INVRETSR - INVRETSW - INVRETTB - INVRETAC - INVRETAH - INVRETAM - INVRETAR)) * 1 - V_CNR
LIG40YT = INDP * 1 - INDV * 1 - INDC * ART1731BIS * LIG0 * LIG2
TOTDEFLOCNPBIS = null(4 - V_IND_TRAIT) * LNPRODEF10 + LNPRODEF9 + LNPRODEF8 + LNPRODEF7 + LNPRODEF6 + LNPRODEF5 + LNPRODEF4 + LNPRODEF3 + LNPRODEF2 + LNPRODEF1 * 1 - is_positive(ART1731BIS * PREM8_11) + null(5 - V_IND_TRAIT) * max(0, min(LNPRODEF10 + LNPRODEF9 + LNPRODEF8 + LNPRODEF7 + LNPRODEF6 + LNPRODEF5 + LNPRODEF4 + LNPRODEF3 + LNPRODEF2 + LNPRODEF1, TOTDEFLOCNP1731 * ART1731BIS * 1 - PREM8_11 + LNPRODEF10 + LNPRODEF9 + LNPRODEF8 + LNPRODEF7 + LNPRODEF6 + LNPRODEF5 + LNPRODEF4 + LNPRODEF3 + LNPRODEF2 + LNPRODEF1 * 1 - is_positive(ART1731BIS * PREM8_11)))
LIGIDEGR = is_positive(LIGDEG + LIGDEGRES) * positif_ou_nul(IDEGR - SEUIL_8) + null(IDEGR)
TFPT1 = max(TFRD1, T10MINS1)
TEGLPRRC = GLPRRC * 1 - is_positive(INDTEFF) + TGLPRRC * is_positive(INDTEFF)
TAUX1 = TX_BAR1 * 1 - V_ANC_BAR + TX_BAR1A * V_ANC_BAR - TX_BAR0
SPEBASABV = SPETOTV
IND_10MIN_03 = is_positive(DEDMIN3 - DFN3) * is_positive(TSB3)
TSPRD3 = min(0, TSNN3 + PRR3) * ART1731BIS
LIGCELHNO = is_positive(DCELHNO) * LIG1 * LIG2
LIGREPPA = is_positive(REPPA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
BTO = max(0, IRN - IRANT) * is_positive(IAMD1 + 1 - SEUIL_61)
# TODO INDTEFF
LIGCOMP01 = is_positive(BPRESCOMP01) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RRESTIMOC = max(min(RESTIMOC * TX30 / 100, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RFIPDOM_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1 - RFIPC_1 - RCINE_1 - RRESTIMOD - RRESTIMOB), 0)
IPQPRRC1 = ZIPQPRRC1 * CARPENBAC
TABTS1TT = is_positive(CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * arr(TREP10V * GLDGRATV / TTSBV) + 1 - is_positive(CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * max(0, TREP10V - TABTS1AJ - TABTS1AC - TABTS1AP - TABTS3VJ)
INVRETOI = min(NINVRETOI, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC)) * 1 - V_CNR
RRCELLA = max(0, CELRREDLA - RCELRREDLA) * is_positive(CELRREDLA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
CIGE = arr(RGTECH + RGEPAHA) * 1 - is_positive(RE168 + TAX1649) * 1 - V_CNR
BCOS = max(0, min(RDSYVO + 0, arr(TX_BASECOTSYN / 100 * TSBV * IND_10V - BPCOSAV + EXPRV))) + max(0, min(RDSYCJ + 0, arr(TX_BASECOTSYN / 100 * TSBC * IND_10C - BPCOSAC + EXPRC))) + min(RDSYPP + 0, arr(TX_BASECOTSYN / 100 * sum([TSB1 * IND_101 + EXPR1, TSB2 * IND_102 + EXPR2, TSB3 * IND_103 + EXPR3, TSB4 * IND_104 + EXPR4])))
RCAV = max(0, RCMAV - ABAVC)
# TODO NAPRSE3
LIGRNIDF0 = is_positive(abs(RNIDF0)) * is_positive(is_positive(abs(RNIDF)) + is_positive(FLAGRETARD08 + FLAGDEFAUT11)) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
NINVRETSPR = NINVRETSP - arr(NINVRETSP * TX4737 / 100) * 1 - V_CNR
RENT04 = max(min(INVRETAQ * 1 - INDPLAF + INVRETAQA * INDPLAF, RRIRENT - RENT01 - RENT02 - RENT03), 0) * 1 - V_CNR
LIGRRCEL3 = is_positive(RRCEL2010 + RRCELLC + RRCELLD + RRCELLS + RRCELLT) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
DEDMIN2 = is_positive(DETS2) * MIN_DEMEMPLOI + 1 - is_positive(DETS2) * MIN_DEDSFORFTS
TDFN3 = min(PLAF_DEDFORFTS, TTPS103)
TTSB3 = TEXTS3
BNRTOT = BNRV + BNRC + BNRP
ADO4 = ABADON4 * 1 - is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ)) + ABATOT4 * is_positive(present(CODDAJ) + present(CODEAJ) + present(CODDBJ) + present(CODEBJ))
INVRETAKRA = min(NINVRETAKR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA - INVRETSZRA - INVRETALRA - INVRETAQRA - INVRETAVRA - INVRETBBRA)) * 1 - V_CNR
DCELREPHD = CELREPHD
LIGNFOREST = is_positive(REPSIN + REPFORSIN + REPFORSIN2 + REPFORSIN3 + REPNIS) * LIG1 * LIG2
LIGREDREP = is_positive(DREDREP) * LIG1 * LIG2
FRD1REP = is_positive(ART1731BIS) * max(0, max(0, FRN1 - FRD1) - PRN1 * 1 - is_positive(FRN1 - FRD1) * null(IND_101) + max(0, FRN2 - FRD2) - PRN2 * 1 - is_positive(FRN2 - FRD2) * null(IND_102) + max(0, FRN3 - FRD3) - PRN3 * 1 - is_positive(FRN3 - FRD3) * null(IND_103) + max(0, FRN4 - FRD4) - PRN4 * 1 - is_positive(FRN4 - FRD4) * null(IND_104) + max(0, FRN11731 - _10MINS1) * IND_101 * is_positive(FRN11731) + max(0, FRN21731 - _10MINS2) * IND_102 * is_positive(FRN21731) + max(0, FRN31731 - _10MINS3) * IND_103 * is_positive(FRN31731) + max(0, FRN41731 - _10MINS4) * IND_104 * is_positive(FRN41731))
ZIPQRCMGOANT1 = is_positive(TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQRCMGO / TETONEQUO1) + 1 - is_positive(TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMDCANT1 - ZIPQRCMFUANT1 - ZIPQRCMCHANT1 - ZIPQRCMTRANT1
DAGRI = DAGRI1 + DAGRI2 + DAGRI3 + DAGRI4 + DAGRI5 + DAGRI6
NBQAR3 = positif_ou_nul(V_0CF + V_0CR + V_0DJ - 2) * 1 / 2 * V_0CH
COPETO = 10 if (CMAJ == 7 or CMAJ == 10 or CMAJ == 17 or CMAJ == 18) else (40 if (CMAJ == 8 or CMAJ == 11) else 80)
TPLEINNSALV = is_positive(is_positive(PPEACV + is_positive(PPENJV - 360) + is_positive(is_positive(1 - null(PPE_AVRPRO1V + 0)) * is_positive(is_positive(PPETOTX) + is_positive(PPEREVSALV)) * is_positive(abs(PPERPROV))) * 1 - is_positive(LIGPPEJV)) * is_positive(INDLIGPPE) + is_positive(PPESAISITPV) * is_positive(PPEACV)) * INDPPEV * LIG0 * LIG2
# TODO CS_DEG
NINVRETSFR = NINVRETSF - arr(NINVRETSF * TX4737 / 100) * 1 - V_CNR
TBNCTOTABV = arr(TSPEABV * AUTOBNCV / TSPETOTV)
RETRSETOT = RETRSE1 + RETRSE2 + RETRSE3 + RETRSE4 + RETRSE5
LIGRDUGIH = is_positive(RIVDUGIH) * LIG1 * LIG2
DCREAT = CONVCREA
RENT31 = max(min(INVRETAAR * 1 - INDPLAF + INVRETAARA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30])), 0) * 1 - V_CNR
LIGNMAJCHR1 = TYPE2 * is_positive(NMAJCHR1)
RILMPD = max(min(AILMPD, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS), 0)
TSPRDP = sum([TSPRD1, TSPRD2, TSPRD3, TSPRD4])
NINVRETRCR = NINVRETRC - arr(NINVRETRC * TX35 / 100) * 1 - V_CNR
TSNN22 = is_positive(TS2) * is_positive(CARTSP2 + REMPLAP2) * arr(TS2 * _2TSN2 / EXTS2) + 1 - is_positive(CARTSP2 + REMPLAP2) * TS2 - TSNN2
# TODO IRESTIT
IPQRF15 = ZIPQRF15 * FONCINB
FRDP = 1 - is_positive(PREM8_11) * FRNP * is_positive(FRNP - _10MINSP) + null(4 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRNP, FRDPROVP) + null(5 - V_IND_TRAIT) * is_positive(PREM8_11) * min(FRNP, max(FRDPROVPP2, FRDPROVP1731))
RSOC29 = arr(max(min(INVRETQWR * 1 - INDPLAF + INVRETQWRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28])), 0)) * 1 - V_CNR
FPT4 = max(FRD4, _10MINS4)
DCTSPENP = positif_ou_nul(NOCEPIMP + SPENETNPF) * BNCNPDCT + 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * BNCNPDCT - abs(NOCEPIMP + SPENETNPF) + 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * null(BNCNPDCT - abs(NOCEPIMP + SPENETNPF)) * BNCNPDCT
RIVCELNQ1 = RCEL_NQ_R * is_positive(ACELNQ_R)
PIRD = PIR * is_positive(5 - V_IND_TRAIT) + 1 - is_positive(5 - V_IND_TRAIT) * positif_ou_nul(IRN + PIR - SEUIL_12) + 1 - is_positive(IRN + PIR) - PIR_A * positif_ou_nul(PIR_A - SEUIL_12) + 1 - is_positive(PIR_A)
PENFV = is_positive(PENSALV) * arr(PRNV * PEBFV / EXPRV) + 1 - is_positive(PENSALV) * max(0, PRNV - PRRV - PRR2V - PRR2ZV)
XACCESS = sum([XACCESSV, XACCESSC, XACCESSP])
MEUBLERED = REPMEUIS
LIGCELGK = is_positive(DCELREPGK) * LIG1 * LIG2
AGC = V_ANREV - V_0DB * min(1, V_0DB)
TTPS102 = arr(TTSB2 * TX_DEDFORFTS / 100)
ID14 = IN04
RIVPIQBD8 = max(0, arr(min(PINELQD + 0, LIMDUFLO - min(DUFLOEL + 0, LIMDUFLO)) * TX29 / 100) + arr(min(PINELQB + 0, LIMDUFLO - min(DUFLOEL + PINELQD + PINELQC + DUFLOEK + 0, LIMDUFLO)) * TX18 / 100) - 8 * RIVPIQBD) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
TEGLRWAM = GLRWAM * 1 - is_positive(INDTEFF) + TGLRWAM * is_positive(INDTEFF)
LIG_R8ZT = is_positive(V_8ZT) * LIG1 * LIG2
LIGREPAR5 = is_positive(REPAR5) * LIG1 * 1 - null(4 - V_REGCO) * LIG2 * 1 - V_CNR
ZIPQTS21 = is_positive(sum([TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * arr(IQUOTOT1 * TERPQTS2 / TETONEQUO1) + 1 - is_positive(sum([TEGLTS3, TEGLTS4]) + TEGLTSREMPTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT - ZIPQRF1TOT - ZIPQRVO1TOT - ZIPQTSV1 - ZIPQTSC1 - ZIPQTS11
ZIPQPALIMC5 = is_positive(sum([TEGLPALIM1M, TEGLPALIM2M, TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPALIMCM / TETONEQUOM1) + 1 - is_positive(sum([TEGLPALIM1M, TEGLPALIM2M, TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIMV5
# TODO NAT1BIS
SOMMEA881 = present(BAEXV) + present(BACREV) + present(_4BACREV) + present(BA1AV) + present(BACDEV) + present(BAEXC) + present(BACREC) + present(_4BACREC) + present(BA1AC) + present(BACDEC) + present(BAEXP) + present(BACREP) + present(_4BACREP) + present(BA1AP) + present(BACDEP) + present(BAHEXV) + present(BAHREV) + present(_4BAHREV) + present(BAHDEV) + present(BAHEXC) + present(BAHREC) + present(_4BAHREC) + present(BAHDEC) + present(BAHEXP) + present(BAHREP) + present(_4BAHREP) + present(BAHDEP) + present(BICEXV) + present(BICNOV) + present(BI1AV) + present(BICDNV) + present(BICEXC) + present(BICNOC) + present(BI1AC) + present(BICDNC) + present(BICEXP) + present(BICNOP) + present(BI1AP) + present(BICDNP) + present(BIHEXV) + present(BIHNOV) + present(BIHDNV) + present(BIHEXC) + present(BIHNOC) + present(BIHDNC) + present(BIHEXP) + present(BIHNOP) + present(BIHDNP) + present(BICNPEXV) + present(BICREV) + present(BI2AV) + present(BICDEV) + present(BICNPEXC) + present(BICREC) + present(BI2AC) + present(BICDEC) + present(BICNPEXP) + present(BICREP) + present(BI2AP) + present(BICDEP) + present(BICNPHEXV) + present(BICHREV) + present(BICHDEV) + present(BICNPHEXC) + present(BICHREC) + present(BICHDEC) + present(BICNPHEXP) + present(BICHREP) + present(BICHDEP) + present(LOCPROCGAV) + present(LOCDEFPROCGAV) + present(LOCPROCGAC) + present(LOCDEFPROCGAC) + present(LOCPROCGAP) + present(LOCDEFPROCGAP) + present(LOCPROV) + present(LOCDEFPROV) + present(LOCPROC) + present(LOCDEFPROC) + present(LOCPROP) + present(LOCDEFPROP) + present(LOCNPCGAV) + present(LOCGITCV) + present(LOCDEFNPCGAV) + present(LOCNPCGAC) + present(LOCGITCC) + present(LOCDEFNPCGAC) + present(LOCNPCGAPAC) + present(LOCGITCP) + present(LOCDEFNPCGAPAC) + present(LOCNPV) + present(LOCGITHCV) + present(LOCDEFNPV) + present(LOCNPC) + present(LOCGITHCC) + present(LOCDEFNPC) + present(LOCNPPAC) + present(LOCGITHCP) + present(LOCDEFNPPAC) + present(BAPERPV) + present(BAPERPC) + present(BAPERPP) + present(BANOCGAV) + present(BANOCGAC) + present(BANOCGAP) + present(BNCEXV) + present(BNCREV) + present(BN1AV) + present(BNCDEV) + present(BNCEXC) + present(BNCREC) + present(BN1AC) + present(BNCDEC) + present(BNCEXP) + present(BNCREP) + present(BN1AP) + present(BNCDEP) + present(BNHEXV) + present(BNHREV) + present(BNHDEV) + present(BNHEXC) + present(BNHREC) + present(BNHDEC) + present(BNHEXP) + present(BNHREP) + present(BNHDEP) + present(XHONOAAV) + present(XHONOV) + present(XHONOAAC) + present(XHONOC) + present(XHONOAAP) + present(XHONOP) + present(BNCAABV) + present(ANOCEP) + present(INVENTV) + present(PVINVE) + present(BNCAADV) + present(DNOCEP) + present(BNCAABC) + present(ANOVEP) + present(INVENTC) + present(PVINCE) + present(BNCAADC) + present(DNOCEPC) + present(BNCAABP) + present(ANOPEP) + present(INVENTP) + present(PVINPE) + present(BNCAADP) + present(DNOCEPP) + present(BNCNPREXAAV) + present(BNCNPREXAAC) + present(BNCNPREXAAP) + present(BNCNPREXV) + present(BNCNPREXC) + present(BNCNPREXP)
RMF = max(0, RFMIC - MICFR)
PERPREVTOTC = max(0, PERPSALNC + PERPNONSALC)
RIVCELJP1 = RCEL_JP_R * is_positive(ACELJP_R)
IPQRF11 = ZIPQRF11 * FONCINB
# TODO RIDOMPROE3_1
RDRTF = CSRTF
IPQPALIMANT11 = ZIPQPALIMANT11 * PENSALNBP1
NRCOMP = max(min(RFC, RRI1 - NRLOGDOM - NRCREAT), 0)
TSN1BP = ALLOC - ABTS1BP
ACELJBGL_R = positif_ou_nul(CELLIERJB + CELLIERJG + CELLIERJL) * BCEL_JBGL * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPQU = is_positive(REPQU) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
ANOUV = BSN1 + BSN2 * 1 - ART1731BIS + min(BSN1 + BSN2, max(ANOUV_P + ANOUVP2, ANOUV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
LIGPASPPE = INDLIGPPE * null(PPETOTX)
# TODO AGRIC
INDMONO = BOOL_0AM * positif_ou_nul(PPE_RTAV - PPELIMRPB) * is_positive(PPELIMRPB - PPE_RTAC) + positif_ou_nul(PPE_RTAC - PPELIMRPB) * is_positive(PPELIMRPB - PPE_RTAV)
RPQRF2 = inf(GLRF2 / REAMORNB)
_4DEFBAHREV = is_positive(_4BAHREV) * BAHDEV * 1 - is_positive(ART1731BIS * PREM8_11) - DEFBAHREV
ISF1 = TR2_ISF + TR3_ISF + TR4_ISF + TR5_ISF + TR6_ISF
DEFBA2 = 1 - is_positive(BAHQT + BAQT) * DAGRI1 + is_positive(BAHQT + BAQT) * abs(min(max(BAHQT + BAQT - DAGRI6 - DAGRI5 - DAGRI4 - DAGRI3 - DAGRI2, 0) - DAGRI1, DAGRI1)) * positif_ou_nul(DAGRI1 - max(BAHQT + BAQT - DAGRI6 - DAGRI5 - DAGRI4 - DAGRI3 - DAGRI2, 0)) * 1 - is_positive(IPVLOC) * 1 - is_positive(ART1731BIS) + min(DAGRI1, DAGRI - DBAIP) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + DAGRI1 * is_positive(is_positive(ART1731BIS * PREM8_11) + null(8 - CMAJ) + null(11 - CMAJ))
IMTANT12 = max(IDANT11, IMI) * 1 - INDTXMOY + IMO * INDTXMOY
PENALIM4 = is_positive(EXPR4) * PRN4 - PRR4 - PRR24 - PRR2Z4 - PENF4
ZIPQPRRV1 = is_positive(sum([TEGLPRRC, TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPRRV / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRC, TEGLPRR1, TEGLPRR2, TEGLPRR3, TEGLPRR4]) + sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT
INVRETAVA = min(arr(NINVRETAV * TX375 / 100), max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA)) * 1 - V_CNR
TGL2M = is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TGLN2 / TOTALQUO) + 1 - is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLRWBM - TGLRWAM - TGLRVGM - TGL1M
DS026 = max(QF026 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF026 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF026 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF026 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF026 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
LIGDEVDUR = is_positive(DDEVDUR) * LIG1 * LIG2
PPESAISITPV = is_positive(PPEACV * is_positive(abs(PPERPROV)))
ABADO2 = arr(min(IPRODOM2 + IQUODAJ2 * TX_RABDOM / 100, PLAF_RABDOM))
LIG_BICPV = present(BICNOV) + present(BICDNV) + present(BIHNOV) + present(BIHDNV) * 1 - is_positive(ANNUL2042) * LIG0
PPEPRIMETTEC = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_PRIMETTE * BOOL_0AM * INDMONO * positif_ou_nul(PPELIMRPHI - PPE_RCONTPC) * positif_ou_nul(PPE_RTAC - PPELIMRPB) * 1 - is_positive(PPE_BOOL_NADAC) * 1 - V_CNR
LIGISF0DEG = IND9HI0 * null(ISF4BIS) * 1 - is_positive(ANNUL2042)
PERP_NONC = BOOL_0AM * is_positive(1 - is_positive(PERP_INDC) * 1 - is_positive(PRBRC + PALIC) * 1 - is_positive(PERP_COTC) * 1 - is_positive(PERP_INDV) * is_positive(PRBRV + PALIV))
TTSNN2TSV = is_positive(TTSV) * is_positive(REMPLAV) * arr(TTSV * CARTSV / TEXTSV) + 1 - is_positive(REMPLAV) * TTSV - TTSNNV
IPQTS45 = ZIPQTS45 * CARTSNBAP4
XTSNNC = arr(is_positive(XTSNC) * XTSNC * TSASSUC / XEXTSC) * XIND_10C + 1 - XIND_10C * TSASSUC
RFIPCORSE = arr(AFIPC_1 * TX_FIPCORSE / 100) * 1 - V_CNR
BGEPAHA = min(RDEQPAHA, P2GE) * 1 - V_CNR
GLTS4 = is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2TS4 / TOTALQUOHT) + 1 - is_positive(REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV - GLTSC - GLTS1 - GLTS2 - GLTS3
LIGREPLOCIZ = is_positive(REPMEUIZ) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TGL4V = arr(TONEQUO * REV4V / TOTALQUO)
REPCORSE = abs(CIINVCORSE + IPREPCORSE - CICORSE)
PERPPLAFV = is_positive(PERPINDV) * max(0, is_positive(PERPREVTOTV) * max(min(arr(PERPREVTOTV * TX_PERPPLAF / 100), LIM_PERPMAX), LIM_PERPMIN) - PERPV + 1 - is_positive(PERPREVTOTV) * LIM_PERPMIN - PERPV) * 1 - V_CNR
ZIG_RVTO = is_positive(CS_RVT + RD_RVT + PS_RVT + IND_ZIGRVT) * 1 - V_CNR * 1 - is_positive(ANNUL2042) * LIG1 * LIG2 * null(3 - INDIRPS)
RPQPALIM2M = inf(GLPALIM2M / PENSALNBP2)
GLNAV1V = max(GLD1V - ABGL1V, 0) * INDEFTSV
LIGRRCEL35 = is_positive(RRCEL2010) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
DS021 = max(QF021 - LIM_BAR1 * 1 - V_ANC_BAR + LIM_BAR1A * V_ANC_BAR, 0) * TAUX1 / 100 + max(QF021 - LIM_BAR2 * 1 - V_ANC_BAR + LIM_BAR2A * V_ANC_BAR, 0) * TAUX2 / 100 + max(QF021 - LIM_BAR3 * 1 - V_ANC_BAR + LIM_BAR3A * V_ANC_BAR, 0) * TAUX3 / 100 + max(QF021 - LIM_BAR4 * 1 - V_ANC_BAR + LIM_BAR4A * V_ANC_BAR, 0) * TAUX4 / 100 + max(QF021 - LIM_BAR5 * 1 - V_ANC_BAR + LIM_BAR5A * V_ANC_BAR, 0) * TAUX5 / 100
ZIPQ22 = is_positive(sum([TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * arr(IQUOTOT2 * TERPQ2 / TETONEQUO1) + 1 - is_positive(sum([TEGL3, TEGL4]) + TEGLFTOT + TEGLPALIMTOT + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRCMTOT + TEGLRFTOT) * IQUOTOT2 - ZIPQRWB2 - ZIPQRWA2 - ZIPQRVG2 - ZIPQ12
PPE_FORMULE1 = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_BOOL_MIN1 * PPE_BOOL_MAX1 * arr(positif_ou_nul(PPELIMSMIC - PPE_RCONTP1) * arr(PPE_RCONTP1 * PPETX1 / 100) / PPE_COEFF1 + is_positive(PPE_RCONTP1 - PPELIMSMIC) * positif_ou_nul(PPELIMRPH - PPE_RCONTP1) * arr(arr(PPELIMRPH - PPE_RCONTP1 * PPETX2 / 100) / PPE_COEFF1) + is_positive(PPE_RCONTP1 - PPELIMRPHI) * positif_ou_nul(PPE_HAUTE - PPE_RCONTP1) * arr(arr(PPELIMRPH2 - PPE_RCONTP1 * PPETX3 / 100) / PPE_COEFF1))
DEFLOC7 = 1 - is_positive(NPLOCNETF7) * abs(min(max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8 - LNPRODEF7, 0) - LNPRODEF6, LNPRODEF6)) * positif_ou_nul(LNPRODEF6 - max(NPLOCNETFHDEFANT - LNPRODEF10 - LNPRODEF9 - LNPRODEF8 - LNPRODEF7, 0)) * 1 - is_positive(ART1731BIS) + min(LNPRODEF6, TOTDEFLOCNP - DNPLOCIMPU - DEFLOC2 - DEFLOC3 - DEFLOC4 - DEFLOC5 - DEFLOC6) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + LNPRODEF6 * ART1731BIS * is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))
MIBNETNPVLSV = arr(MIB_NETNPVLV * MIBGITEV / MIBGITEV + LOCGITV)
X10MINSV = max(min(XTSBV, DEDMINV), XDFNV)
IQNETDAJ31 = arr(INETABADAJ31 * IQUODAJ31 / IPRODOM1 + IQUODAJ31)
BPTPSB = BTPSB * 1 - is_positive(present(TAX1649) + present(RE168))
TGLPALIMC = is_positive(TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TPENALIMC / TOTALQUO) + 1 - is_positive(TPENALIM1 + TPENALIM2 + TPENALIM3 + TPENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMV
IQUODAJ2 = arr(IPQ1002 * TERPQ4V + TERPQ4C / TERPQ4TVC + TERPQTSV + TERPQTSC)
LIG0020 = INDV * 1 - INDC * 1 - INDP * 1 - ART1731BIS * LIG0 * LIG2
LIGREPQN = is_positive(REPQN) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
FAMREST = is_positive(REST) * max(0, min(CREFAM, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP))
NRCEL2012 = max(min(RCEL_2012, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB, NRCELREPHA]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK, NRCELREPGJ]) - sum([NRCELREPYH, NRCELREPYL, NRCELREPYG, NRCELREPYF, NRCELREPYK, NRCELREPYE, NRCELREPYD, NRCELREPYJ, NRCELREPYC, NRCELREPYB, NRCELREPYI, NRCELREPYA]) - NRCELHM - NRCELHL - NRCELHNO - NRCELHJK - NRCELNQ - NRCELNBGL - NRCELCOM - NRCEL - NRCELJP - NRCELJBGL - NRCELJOQR), 0)
IQUOTOT2 = IN52 - IN02
# TODO MIBNPRV
PFPTP = max(PFRDP, P10MINSP)
TGLTS3 = is_positive(TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUO * TTSNN2TS3 / TOTALQUO) + 1 - is_positive(TTSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSV - TGLTSC - TGLTS1 - TGLTS2
DISFE = ISFETRANG
RCEL_NQ = is_positive(CELLIERNQ) * arr(ACELNQ * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RPQ4CM = arr(GL4CM / DIVGL4)
TRPQRCMTS = inf(TGLRCMTS / DISQUONB)
ACELREPGV = CELREPGV * 1 - ART1731BIS + min(CELREPGV, max(ACELREPGV_P + ACELREPGVP2, ACELREPGV1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
# TODO SURIMP
RINVTPME13 = max(0, COD7CR - max(0, LIM_TITPRISE * 1 + BOOL_0AM - max(0, min(BSNCL + REPSNO2 + REPSNO1 + REPSNON + PETIPRISE, LIM_SOCNOUV2 * 1 + BOOL_0AM) + COD7CQ))) * 1 - V_CNR
_4BAQLP = is_positive(_4BACREP + _4BAHREP)
INVRETSZRA = min(NINVRETSZR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA - INVRETSLRA - INVRETSQRA - INVRETSVRA - INVRETTARA - INVRETSKRA - INVRETSPRA - INVRETSURA)) * 1 - V_CNR
RAIDE_1 = max(min(RAD, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1), 0)
LIGEMP = 1 - LIGNEMP
RIVCELHJK6 = RIVCELHJK1
LIGDIPLOI = is_positive(INDREV1A8) * is_positive(null(NATIMP - 1) + is_positive(NAPTEMP)) * is_positive(REVFONC) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * LIG1
BA10RFOR = arr(BASE7UTF * TX25 / 100)
ZIPQRCMCH5 = is_positive(TEGLRCMTSM + TEGLRCMGOM + TEGLRCMTRM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQRCMCHM / TETONEQUOM1) + 1 - is_positive(TEGLRCMTSM + TEGLRCMGOM + TEGLRCMTRM + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCMDC5 - ZIPQRCMFU5
CRCFA = arr(IPQ1 * REGCI / RB018XR + TONEQUO) * 1 - is_positive(RE168 + TAX1649)
DEDMINV = is_positive(DETSV) * MIN_DEMEMPLOI + 1 - is_positive(DETSV) * MIN_DEDSFORFTS
REPENT3 = INVOMQV + INVENDEB2009 + INVRETRO2 + INVDOMRET60 + INVOMRETPB + INVOMRETPF + INVOMRETPJ + INVRETRO1 + INVDOMRET50 + INVOMRETPA + INVOMRETPE + INVOMRETPI + INVIMP + INVDIR2009 + INVOMRETPD + INVOMRETPH + INVOMRETPL
PTORSE5 = arr(max(0, RSE5 - CIRSE5 - CSPROVYE) * COPETO / 100) + arr(max(0, RSE5 - CIRSE5 - CSPROVYE - RSE59YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
_2RCMRNTNC = REVPEA - _2RCMRTNC
RCELREPHR = max(0, RCELREPHR_1 * 1 - ART1731BIS + min(RCELREPHR_1, max(RCELREPHR_P + RCELREPHRP2, RCELREPHR1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGREPNIS = is_positive(REPNIS) * LIG1 * LIG2
ZIG_INT22 = is_positive(RETCS22 + RETPS22 + RETRD22 + RETCVN22)
LIGPV3WB = is_positive(PVBAR3WB) * 1 - is_positive(IPVLOC) * LIG1 * LIG2 * is_positive(INDREV1A8IR)
MIB_ABNPVLC = MIB_AVC - MIB_ABVC - MIB_ABNPVC * is_positive(present(MIBGITEC) + present(LOCGITC))
XTSN4 = is_positive(XTSNT4) * min(0, XTSNT4) + positif_ou_nul(XTSNT4) * XTSNT4
ZIGTAUX3 = ZIGTITRECRS
NPLOCCGASSC = LOCNPCGAC + LOCGITCC - LOCDEFNPCGAC
NRCELREPHV = max(min(RCELREP_HV, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW])), 0)
ZIPQRF21 = is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * arr(IQUOTOT1 * TERPQRF2 / TETONEQUO1) + 1 - is_positive(TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQRF11 - ZIPQPRRZ1TOT
BNNAAP = BNCAABP - BNCAADP * 1 - is_positive(ART1731BIS * PREM8_11)
PERPPLAFIMPV = is_positive(PERPIMPATRIE) * PERPPLAFCOMV + PERPPLAFV + 1 - is_positive(PERPIMPATRIE) * 0
PPE_BOOL_MAX2 = positif_ou_nul(PPELIMRPH - PPE_RCONTP2)
LIG3700 = is_positive(LIG4271 + LIG3710 + LIG3720 + LIG3730) * LIG1 * TYPE4
DFNV = min(PLAF_DEDFORFTS, TPS10V)
LIGPATNAT2 = LIG1 * LIG2 * is_positive(PATNAT2) + null(PATNAT2) * is_positive(V_NOTRAIT - 20)
PLOCPAC = min(0, LOCPROP - LOCDEFPROP * 1 - is_positive(ART1731BIS * PREM8_11)) * positif_ou_nul(LOCDEFPROP * 1 - is_positive(ART1731BIS * PREM8_11) - LOCPROP) + arr(max(0, LOCPROP - LOCDEFPROP * 1 - is_positive(ART1731BIS * PREM8_11)) * MAJREV) * is_positive(LOCPROP - LOCDEFPROP * 1 - is_positive(ART1731BIS * PREM8_11))
ADUFLOEKL_1 = arr(min(DUFLOEL + 0, LIMDUFLO) / 9) + arr(min(DUFLOEK + 0, LIMDUFLO - min(DUFLOEL + PINELQD + PINELQC + 0, LIMDUFLO)) / 9) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
ZIGPENAREGV = is_positive(PREGV) * is_positive(NMAJREGV1) * LIG2
ALLOP = ALLO1 + ALLO2 + ALLO3 + ALLO4
TTSPRD3 = min(0, TTSNN3 + TPRR3) * ART1731BIS
ABAGU6 = arr(min(IPROGUY6 + ID16 * TX_RABGUY / 100, PLAF_RABGUY))
# TODO NAPCS
SPETOTP = BNCPROP + BNCNPP
INVRETSZ = min(arr(NINVRETSZ * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU)) * 1 - V_CNR
TTSN1DP = ALLO2 - TABTS1DP
TTSN1 = is_positive(TTSNT1) * min(0, TTSNT1 + TPRNN1) + positif_ou_nul(TTSNT1) * TTSNT1
RDOMSOC1_1 = 1 - V_CNR * 1 - V_INDTEO * sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24, RSOC25, RSOC26, RSOC27, RSOC28, RSOC29, RSOC30, RSOC31, RSOC32, RSOC33, RSOC34, RSOC35, RSOC36, RSOC37, RSOC38]) + V_INDTEO * arr(V_RSOC11 + V_RSOC12 + V_RSOC13 + V_RSOC15 + V_RSOC17 + V_RSOC20 + V_RSOC23 + V_RSOC27 + V_RSOC14 + V_RSOC16 + V_RSOC18 + V_RSOC21 + V_RSOC24 + V_RSOC28 + V_RSOC31 + V_RSOC35 + V_RSOC19 + V_RSOC22 + V_RSOC25 + V_RSOC29 + V_RSOC32 + V_RSOC36 + V_RSOC26 + V_RSOC30 + V_RSOC33 + V_RSOC37 + V_RSOC34 + V_RSOC38 * TX65 / 100)
PRQZP = CODRCZ + CODRDZ + CODREZ + CODRFZ
AILMIC_R = DILMIC * 1 - V_CNR
LIGREPPU = is_positive(REPPU) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
INVRETUDA = min(NINVRETUD, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA)) * 1 - V_CNR
PPETEMPS3 = arr(1 / PPE_COEFF3 * 100)
RIVCELJBGL4 = RIVCELJBGL1
ZIPQF5TOT = sum([ZIPQFV5, ZIPQFC5, ZIPQF15, ZIPQF25, ZIPQF35, ZIPQF45])
# TODO TAXACUM
TGLF1M = is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * PENF1 / TOTALQUO) + 1 - is_positive(PENF2 + PENF3 + PENF4 + REV1 + REV2 + REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFVM - TGLFCM
REV4V = GLN4DAJV
LIGRRCEL33 = is_positive(RRCELLS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
LIG3710 = is_positive(20 - V_NOTRAIT) * is_positive(BOOL_0AZ) * LIG1
# TODO NMAJLOY3
INVRETPJ = min(arr(NINVRETPJ * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF)) * 1 - V_CNR
GLTS2 = is_positive(TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2TS2 / TOTALQUOHT) + 1 - is_positive(TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV - GLTSC - GLTS1
NRPATNAT = max(min(APATNAT, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRLOCNPRO - NRPATNAT1 - NRPATNAT2 - NRPATNAT3), 0)
TTSPRV = TTSNNV + TPRRV * 1 - PREM8_11 + max(0, TTSNNV + TPRRV) * PREM8_11
TERPQF2M = RPQF2M * 1 - is_positive(INDTEFF) + TRPQF2M * is_positive(INDTEFF)
ZIPQTSREMPC2 = is_positive(sum([TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * arr(IQUOTOT2 * TERPQTSREMPC / TETONEQUO1) + 1 - is_positive(sum([TEGLTSREMP1, TEGLTSREMP2, TEGLTSREMP3, TEGLTSREMP4])) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQPRRZ2TOT - ZIPQRF2TOT - ZIPQRVO2TOT - ZIPQTS2TOT - ZIPQTSREMPV2
CSGC = arr(BCSG * T_CSG / 100) * 1 - is_positive(ANNUL2042)
_3REVF = min(arr(RFCG * REAMOR / RFCD), RFCG - RFON - _2REVF)
RRCELLB = max(0, CELRREDLB - RCELRREDLB) * is_positive(CELRREDLB) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RLOC123 = max(min(INVRETSUR * 1 - INDPLAF + INVRETSURA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89, RLOC90, RLOC91, RLOC92, RLOC93, RLOC94, RLOC95, RLOC96, RLOC97, RLOC98, RLOC99]) - sum([RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC110, RLOC111, RLOC112, RLOC113, RLOC114, RLOC115, RLOC116, RLOC117, RLOC118, RLOC119, RLOC120, RLOC121, RLOC122])), 0) * 1 - V_CNR
# TODO MAJTXGLO4
TEGLRVO6 = GLRVO6 * 1 - is_positive(INDTEFF) + TGLRVO6 * is_positive(INDTEFF)
REPINVPME3 = max(0, REPSNO2 - max(0, LIM_SOCNOUV2 * 1 + BOOL_0AM - min(REPSNO3, LIM_SOCNOUV2 * 1 + BOOL_0AM))) * 1 - V_CNR
TETONEQUOM1 = TONEQUOM1 * 1 - is_positive(INDTEFF) + TONEQUOM1T * is_positive(INDTEFF)
TSBN4 = TSHALLO4 + ALLO4
RPQPRRVM = inf(GLPRRVM / CARPENBAV)
RIVCELHLM5 = RIVCELHLM1
GLN2NET = arr(GLN2 * GL2 / REV2)
TRPQRVOM = inf(TGLRVOM / RENTAXNB)
RDRVAPS = arr(RVB1 * TXRVT1 / 100) + arr(RVB2 * TXRVT2 / 100) + arr(RVB3 * TXRVT3 / 100) + arr(RVB4 * TXRVT4 / 100)
SOMDEFICIT = SOMDEFANT + SOMDEFLOC + SOMDEFBNC + SOMDEFBASUP + SOMDEFTS + SOMDEFBIC + RFDHIS
RIDOMPROTOT = RIDOMPROE3
TGLPRR4M = is_positive(TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR24 / TOTALQUO) + 1 - is_positive(TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM - TGLPRRCM - TGLPRR1M - TGLPRR2M - TGLPRR3M
RLOG20 = max(min(INVRETOQ * 1 - INDPLAF + INVRETOQA * INDPLAF, RRI1 - sum([RLOG1, RLOG2, RLOG3, RLOG4, RLOG5, RLOG6, RLOG7, RLOG8, RLOG9, RLOG10, RLOG11, RLOG12, RLOG13, RLOG14, RLOG15, RLOG16, RLOG17, RLOG18, RLOG19])), 0) * 1 - V_CNR
RCODIE_1 = max(min(RETCODIE, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RRESINEUV), 0)
PS_TAX1649 = TAX1649
NRCELREPGJ = max(min(ACELREPGJ, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE, NRCELREPHD, NRCELREPHH, NRCELREPHG, NRCELREPHB]) - sum([NRCELREPGU, NRCELREPGX, NRCELREPGT, NRCELREPGS, NRCELREPGW, NRCELREPGP, NRCELREPGL, NRCELREPGV, NRCELREPGK])), 0)
PERPBNCMNC = BNCPROEXC + max(0, BNCPROC + AUTOBNCC - max(arr(BNCPROC + AUTOBNCC * SPETXAB / 100), MIN_SPEBNC)) + BNCPROPVC - BNCPMVCTC
RCELREPHE_1 = max(min(ACELREPHE, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
PPECOEFF1 = arr(PPE_COEFFCOND1 * 100)
RCELRREDMG = max(0, RCELRREDMG_1 * 1 - ART1731BIS + min(RCELRREDMG_1, max(RCELRREDMG_P + RCELRREDMGP2, RCELRREDMG1731 + 0) * 1 - PREM8_11) * ART1731BIS)
CICORSEAVIS = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IPPRICORSE - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR - CIGPA - CIDONENTR, CIINVCORSE + IPREPCORSE)) + CICORSENOW
LIGREPNU = is_positive(REPNU) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
EXCEDANTA = max(0, RDREP + DONETRAN - PLAF_REDREPAS)
TSPENET = sum([TSPENETV, TSPENETC, TSPENETP])
RETREPNPRO = arr(DREPNPRO * TX25 / 100) * 1 - V_CNR
TEGLTS2 = GLTS2 * 1 - is_positive(INDTEFF) + TGLTS2 * is_positive(INDTEFF)
TTSN3 = is_positive(TTSNT3) * min(0, TTSNT3 + TPRNN3) + positif_ou_nul(TTSNT3) * TTSNT3
TGLRF2 = TONEQUO - TGLTOT - TGLFTOT - TGLPALIMTOT - TGLTSTOT - TGLTSREMPTOT - TGLPRRTOT - TGLRVOTOT - TGLRCMTOT - TGLRF1
_2RAU = 1 - is_positive(EXFR) * DISQUO - _2FRAU + is_positive(EXFR) * 0
RENT15 = max(min(INVRETAM * 1 - INDPLAF + INVRETAMA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14])), 0) * 1 - V_CNR
IARD = IAR - IAR_A
ACELRREDLD = CELRREDLD * 1 - ART1731BIS + min(CELRREDLD, max(ACELRREDLD_P + ACELRREDLDP2, ACELRREDLD1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TGLNAV2C = max(GLD2C - TABGL2C, 0)
GLPRRV = is_positive(PRR2C + PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2V / TOTALQUOHT) + 1 - is_positive(PRR2C + PRR21 + PRR22 + PRR23 + PRR24 + PRR2ZV + PRR2ZC + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT
PERPDCOTC = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE) * min(PERP_COTC, PERPPLATCANT) + is_positive(PERPIMPATRIE) * min(PERP_COTC, PERPPLAFIMPC) + is_positive(PERP_COND1) * 1 - is_positive(PERPIMPATRIE) * min(PERP_COTC, PERPPLATCANT) + is_positive(PERPIMPATRIE) * min(PERP_COTC, PERPPLAFIMPC) + is_positive(PERP_COND2) * min(PERP_COTC, PERPPLAFMU1C)
XBICNPSP = XBICNPNETP + BI2AP
BCIHABPRIN5 = min(max(0, BCIHP - BCIHABPRIN1 - BCIHABPRIN2 - BCIHABPRIN3 - BCIHABPRIN4), PREHABT2) * 1 - V_CNR
LIGNATR = is_positive(REPNATR) * LIG1
ZIPQRVO52 = is_positive(TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * arr(IQUOTOT2 * TERPQRVO5 / TETONEQUO1) + 1 - is_positive(TEGLRVO6 + TEGLRVO7 + TEGLTSTOT + TEGLTSREMPTOT) * IQUOTOT2 - ZIPQ2TOT - ZIPQF2TOT - ZIPQPALIM2TOT - ZIPQRCM2TOT - ZIPQPRR2TOT - ZIPQRF2TOT - ZIPQRVO2 - ZIPQPRRZ2TOT
# TODO RNIDF2
PCSG = PTOCSG
DILMJS = LOCMEUBJS
INVRETOF = min(NINVRETOF, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE)) * 1 - V_CNR
LIG2205S = is_positive(IDEGR) * 1 - positif_ou_nul(IDEGR - SEUIL_8) * LIGPS * LIG2
IPRODOM4 = arr(ID14 * PRODOM / RG)
RLOC13 = max(min(INVRETKU * 1 - INDPLAF + INVRETKUA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12])), 0) * 1 - V_CNR
REPBB = max(0, CODHBB - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV)) * 1 - ART1731BIS + max(0, CODHBB - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV)) * ART1731BIS * 1 - V_CNR
LIG3740 = is_positive(INDTXMIN) * LIG1 * is_positive(IND_REV) * 1 - is_positive(ANNUL2042)
PENSTOTP = PRR2P + PRR2Z1 + PRR2Z2 + PRR2Z3 + PRR2Z4 + PENALIMP
TTSNN23 = is_positive(TTS3) * is_positive(CARTSP3 + REMPLAP3) * arr(TTS3 * T2TSN3 / TEXTS3) + 1 - is_positive(CARTSP3 + REMPLAP3) * TTS3 - TTSNN3
TGATASAV = BPCOSAV + GLDGRATV
NINVRETSG = max(min(CODHSG, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB), 0) * 1 - V_CNR
PPE_COEFF1 = PPE_BOOL_TP1 * 360 / PPENBJ + 1 - PPE_BOOL_TP1 / PPENHP1 + PPEXT1 * is_positive(PPE_SALAVDEF1 + 0) / 1820
LIGREPSH = is_positive(REPSH) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
REV4 = _4BAQTOTNET + GLN4V + GLN4C
AVPLAF13 = AVPLAF13A + AVPLAF13B
IS022 = arr(DS022 * NB2)
MIB_NETNPPLC = MIBMEUC - MIB_ABNPPLC
INVRETOCA = min(NINVRETOC, max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA - INVRETPTA - INVRETPNA - INVRETPSA - INVRETPPA - INVRETPUA - INVRETPRA - INVRETPWA - INVRETQLA - INVRETQMA - INVRETQDA - INVRETOBA)) * 1 - V_CNR
LIGREPQUS = is_positive(REPQS + REPQU + REPRA + REPXA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RREDMEUB_1 = max(min(AREDMEUB, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT), 0)
TEGLPRR1M = GLPRR1M * 1 - is_positive(INDTEFF) + TGLPRR1M * is_positive(INDTEFF)
PRR2C = is_positive(PEBFC + PENSALC + CODRBZ) * arr(PRNC * CARPEC / EXPRC) + 1 - is_positive(PEBFC + PENSALC + CODRBZ) * PRNC - PRRC
TRPQPRRV = inf(TGLPRRV / CARPENBAV)
ABTS1TT = is_positive(GLDGRATV) * is_positive(CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * arr(REP10V * GLDGRATV / TSBV) + 1 - is_positive(CARTSV + REMPLAV + CODDAJ + CODEAJ + GLD1V + GLD2V + GLD3V) * max(0, REP10V - ABTS1AJ - ABTS1AP - ABTS3VJ)
TGLRCMTOT = TGLRCMDC + TGLRCMFU + TGLRCMCH + TGLRCMGO + TGLRCMTR + TGLRCMTS
AISFFIP = arr(ISFFIP * TX50 / 100)
BAQTOTAVIS = _4BAQTOTNET
INVRETNVR = min(arr(INVRETNV * 5 / 3), NINVRETNV - INVRETNV) * 1 - null(1 - abs(arr(INVRETNV * 5 / 3) - NINVRETNV - INVRETNV)) + NINVRETNV - INVRETNV * null(1 - abs(arr(INVRETNV * 5 / 3) - NINVRETNV - INVRETNV)) * 1 - V_CNR
SOMMEA031 = is_positive(TSHALLOC) + is_positive(ALLOC) + is_positive(PRBRC) + is_positive(PALIC) + is_positive(GSALC) + is_positive(TSASSUC) + is_positive(XETRANC) + is_positive(EXOCETC) + is_positive(FRNC) + is_positive(PPETPC) + is_positive(PPENHC) + is_positive(PCAPTAXC) + is_positive(CARTSC) + is_positive(PENSALC) + is_positive(REMPLAC) + is_positive(CARPEC) + is_positive(GLDGRATC) + is_positive(GLD1C) + is_positive(GLD2C) + is_positive(GLD3C) + is_positive(BPV18C) + is_positive(BPCOPTC) + is_positive(BPV40C) + is_positive(BPCOSAC) + is_positive(CVNSALAC) + is_positive(FEXC) + is_positive(BAFC) + is_positive(BAFORESTC) + is_positive(BAFPVC) + is_positive(BAF1AC) + is_positive(BAEXC) + is_positive(BACREC) + is_positive(_4BACREC) + is_positive(BA1AC) + is_positive(BACDEC * 1 - is_positive(ART1731BIS)) + is_positive(BAHEXC) + is_positive(BAHREC) + is_positive(_4BAHREC) + is_positive(BAHDEC * 1 - is_positive(ART1731BIS)) + is_positive(BAPERPC) + is_positive(BANOCGAC) + is_positive(AUTOBICVC) + is_positive(AUTOBICPC) + is_positive(AUTOBNCC) + is_positive(MIBEXC) + is_positive(MIBVENC) + is_positive(MIBPRESC) + is_positive(MIBPVC) + is_positive(MIB1AC) + is_positive(MIBDEC) + is_positive(BICPMVCTC) + is_positive(BICEXC) + is_positive(BICNOC) + is_positive(LOCPROCGAC) + is_positive(BI1AC) + is_positive(BICDNC * 1 - is_positive(ART1731BIS)) + is_positive(LOCDEFPROCGAC * 1 - is_positive(ART1731BIS)) + is_positive(BIHEXC) + is_positive(BIHNOC) + is_positive(LOCPROC) + is_positive(BIHDNC * 1 - is_positive(ART1731BIS)) + is_positive(LOCDEFPROC * 1 - is_positive(ART1731BIS)) + is_positive(BIPERPC) + is_positive(MIBNPEXC) + is_positive(MIBNPVENC) + is_positive(MIBNPPRESC) + is_positive(MIBNPPVC) + is_positive(MIBNP1AC) + is_positive(MIBNPDEC) + is_positive(BICNPEXC) + is_positive(BICREC) + is_positive(LOCNPCGAC) + is_positive(BI2AC) + is_positive(min(BICDEC, BICDEC1731 + 0) * is_positive(ART1731BIS) + BICDEC * 1 - ART1731BIS) + is_positive(min(LOCDEFNPCGAC, LOCDEFNPCGAC1731 + 0) * is_positive(ART1731BIS) + LOCDEFNPCGAC * 1 - ART1731BIS) + is_positive(MIBMEUC) + is_positive(MIBGITEC) + is_positive(LOCGITC) + is_positive(LOCGITCC) + is_positive(LOCGITHCC) + is_positive(BICNPHEXC) + is_positive(BICHREC) + is_positive(LOCNPC) + is_positive(min(BICHDEC, BICHDEC1731 + 0) * is_positive(ART1731BIS) + BICHDEC * 1 - ART1731BIS) + is_positive(min(LOCDEFNPC, LOCDEFNPC1731 + 0) * is_positive(ART1731BIS) + LOCDEFNPC * 1 - ART1731BIS) + is_positive(BNCPROEXC) + is_positive(BNCPROC) + is_positive(BNCPROPVC) + is_positive(BNCPRO1AC) + is_positive(BNCPRODEC) + is_positive(BNCPMVCTC) + is_positive(BNCEXC) + is_positive(BNCREC) + is_positive(BN1AC) + is_positive(BNCDEC * 1 - is_positive(ART1731BIS)) + is_positive(BNHEXC) + is_positive(BNHREC) + is_positive(BNHDEC * 1 - is_positive(ART1731BIS)) + is_positive(BNCCRC) + is_positive(CESSASSC) + is_positive(XHONOAAC) + is_positive(XHONOC) + is_positive(XSPENPC) + is_positive(BNCNPC) + is_positive(BNCNPPVC) + is_positive(BNCNP1AC) + is_positive(BNCNPDEC) + is_positive(BNCNPREXAAC) + is_positive(BNCAABC) + is_positive(min(BNCAADC, BNCAADC1731 + 0) * is_positive(ART1731BIS) + BNCAADC * 1 - ART1731BIS) + is_positive(BNCNPREXC) + is_positive(ANOVEP) + is_positive(PVINCE) + is_positive(INVENTC) + is_positive(min(DNOCEPC, DNOCEPC1731 + 0) * is_positive(ART1731BIS) + DNOCEPC * 1 - ART1731BIS) + is_positive(BNCCRFC) + is_positive(RCSC) + is_positive(PVSOCC) + is_positive(PPEACC) + is_positive(PPENJC) + is_positive(PEBFC) + is_positive(PERPC) + is_positive(PERP_COTC) + is_positive(RACCOTC) + is_positive(PLAF_PERPC) + is_positive(PERPPLAFCC) + is_positive(PERPPLAFNUC1) + is_positive(PERPPLAFNUC2) + is_positive(PERPPLAFNUC3) + is_positive(ELURASC) + is_positive(CODDBJ) + is_positive(CODEBJ) + is_positive(SALEXTC) + is_positive(COD1BD) + is_positive(COD1BE) + is_positive(PPEXTC) + is_positive(COD1BH) + is_positive(RDSYCJ) + is_positive(PENINC) + is_positive(CODRBZ) + 0
ZIG_TAUXCP = ZIG_TITRECP
RPQPRR2M = inf(GLPRR2M / CARPENBAP2)
LIGXSPEN = is_positive(XSPENPV + XSPENPC + XSPENPP) * LIG1 * LIG2
IPQF45 = ZIPQF45 * COTF4
BNCDF3 = 1 - positif_ou_nul(NOCEPIMP + SPENETNPF) * DABNCNP2 + positif_ou_nul(NOCEPIMP + SPENETNPF) * min(max(NOCEPIMP + SPENETNPF - DABNCNP6 - DABNCNP5 - DABNCNP4 - DABNCNP3, 0) - DABNCNP2, DABNCNP2) * -1 * positif_ou_nul(DABNCNP2 - max(NOCEPIMP + SPENETNPF - DABNCNP6 - DABNCNP5 - DABNCNP4 - DABNCNP3, 0)) * 1 - is_positive(ART1731BIS) + min(DABNCNP2, DABNCNP - DIDABNCNP - BNCDF2) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + DABNCNP2 * is_positive(is_positive(ART1731BIS * PREM8_11) + null(8 - CMAJ) + null(11 - CMAJ))
# TODO BIH2C
PERPPLAFMUTC = is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE) * PERPPLATCANT + max(0, PERPPLATVANT - PERP_COTV) + is_positive(PERPIMPATRIE) * PERPPLAFIMPC + max(0, PERPPLAFIMPV - PERP_COTV)
EXOCJT = present(TSASSUC) + is_positive(XETRANC) + is_positive(EXOCETC) + present(FEXC) + is_positive(MIBEXC) + is_positive(MIBNPEXC) + is_positive(BNCPROEXC) + is_positive(XSPENPC) + is_positive(XBAC) + is_positive(XBIPC) + is_positive(XBINPC) + is_positive(XBNC) + is_positive(XBNNPC) + is_positive(ABICPDECC) * 1 - V_CNR + is_positive(ABNCPDECC) * 1 - V_CNR + is_positive(HONODECC) * 1 - V_CNR + is_positive(AGRIC) + is_positive(BIPERPC) + is_positive(BNCCREAC)
QUOKIRE = TEGL1 + TEGL2 + TEGL3 + RPQ4 + sum([TERPQPRRV + TERPQPRRZV + TEGLFV + TERPQTSV + TERPQTSREMPV + TERPQPALIMV, TERPQPRRC + TERPQPRRZC + TEGLFC + TERPQTSC + TERPQTSREMPC + TERPQPALIMC, TERPQPRR1 + TERPQPRRZ1 + TEGLF1 + TERPQTS1 + TERPQTSREMP1 + TERPQPALIM1, TERPQPRR2 + TERPQPRRZ2 + TEGLF2 + TERPQTS2 + TERPQTSREMP2 + TERPQPALIM2, TERPQPRR3 + TERPQPRRZ3 + TEGLF3 + TERPQTS3 + TERPQTSREMP3 + TERPQPALIM3, TERPQPRR4 + TERPQPRRZ4 + TEGLF4 + TERPQTS4 + TERPQTSREMP4 + TERPQPALIM4]) + TERPQRF1 + TEGLRF2 + TERPQRCMDC + TERPQRCMFU + TERPQRCMCH + TERPQRCMTS + TERPQRCMGO + TERPQRCMTR + TERPQRVO + TERPQRVO5 + TERPQRVO6 + TERPQRVO7
REPAA = max(0, CODHAA - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - REPENT1 - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB)) * 1 - ART1731BIS + max(0, CODHAA - max(0, RLOCENT - CODHAB - CODHAG - CODHAL - CODHAQ - CODHAV - CODHBB)) * ART1731BIS * 1 - V_CNR
_1RIA = _1RAN
PRQNC = _2PRBC
BA1V = BA1AV + BAF1AV
REPDUEKL = RIVDUEKL * 7 + RIVDUEKL8
INVRETSFRA = min(NINVRETSFR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA - INVRETPARA - INVRETPERA - INVRETPIRA - INVRETPYRA - INVRETPXRA - INVRETSBRA - INVRETSGRA - INVRETSARA)) * 1 - V_CNR
ACELREPGP = CELREPGP * 1 - ART1731BIS + min(CELREPGP, max(ACELREPGP_P + ACELREPGPP2, ACELREPGP1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REPMEUIY = DILMIY - RILMIY * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
LIGISFCOR = present(ISF4BIS) * is_positive(DISFBASE) * is_positive(PISF) * 1 - is_positive(SEUIL_12 - ISF4BIS) * 1 - null(ISF4BIS) * 1 - is_positive(ANNUL2042) * LIGISF * 1 - is_positive(V_NOTRAIT - 20) + is_positive(V_NOTRAIT - 20) * LIGISF * 1 - is_positive(ANNUL2042)
RESINEUV7 = arr(arr(ACODIN / 9) * TX20 / 100) + arr(arr(ACODIJ / 9) * TX18 / 100) + arr(arr(ACODIV / 9) * TX18 / 100)
TOTDEFNP = null(4 - V_IND_TRAIT) * DEFNP + null(5 - V_IND_TRAIT) * ART1731BIS * min(DEFNP, DEFNPI1731) * 1 - PREM8_11 + 0 * PREM8_11 + min(DEFNP, DEFNPI1731) * 1 - ART1731BIS
NRCODOU = max(min(ACODOU, RRI1 - NRLOGDOM - NRRI2 - NRCELTOT - NRREDMEUB - NRREDREP - NRILMIX - NRILMIY - NRILMPA - NRINVRED - NRILMIH - NRILMJC - NRILMPB - NRILMIZ - NRILMJI - NRILMPC - NRILMJS - NRILMPD - NRILMPE - NRMEUBLE - NRPROREP - NRREPNPRO - NRREPMEU - NRILMIC - NRILMIB - NRILMIA - NRILMJY - NRILMJX - NRILMJW - NRILMJV - NRILMOE - NRILMOD - NRILMOC - NRILMOB - NRILMOA - NRRESIMEUB - NRRESIMEUB - NRRESINEUV - NRLOCIDEFG - NRCODJU - NRCODJT), 0)
# TODO REPNUREPART
IPQRCMTS2 = ZIPQRCMTS2 * DISQUONB
RPQRVOM = inf(GLRVOM / RENTAXNB)
REPMEUIB = AILMIB_R - RILMIB * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TREP104 = TIND_104 * TD10M4 + 1 - TIND_104 * TFPT4
TEGLPALIM2 = GLPALIM2 * 1 - is_positive(INDTEFF) + TGLPALIM2 * is_positive(INDTEFF)
ASSREST = is_positive(REST) * max(0, min(I2DH, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - IPELUS - CITEC - CIDEVDUR - CIGE))
NPLOCNETF9 = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - min(LNPRODEF10, LNPRODEF101731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF10 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF9, LNPRODEF91731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF9 * 1 - is_positive(ART1731BIS * PREM8_11) + min(LNPRODEF8, LNPRODEF81731 + 0) * is_positive(ART1731BIS * PREM8_11) + LNPRODEF8 * 1 - is_positive(ART1731BIS * PREM8_11)
LIG10622 = is_positive(RETIR22)
LIGCOD3SM = is_positive(COD3SM) * LIG1 * LIG2
# TODO MIBDREPNPP
DCOTFOR = COTFORET
TGLRVO6M = is_positive(_2RV4 + REVRCM + REVRF) * arr(TONEQUOM * _2RV3 / TOTALQUO) + 1 - is_positive(_2RV4 + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRTOTM - TGLRVOM - TGLRVO5M
REVTSQHT = sum([TSNN2TSV, TSNN2TSC, TSNN2TS1, TSNN2TS2, TSNN2TS3, TSNN2TS4])
ARESTIMO = ARESTIMO_1 * 1 - ART1731BIS + min(ARESTIMO_1, max(ARESTIMO_P + ARESTIMOP2, ARESTIMO1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
PERPBANP = PERP_BOOL * FEXP + BAFP + BAFPVP + BAEXP + BACREP - BACDEP * 1 - is_positive(ART1731BIS) + BAHEXP + BAHREP - BAHDEP * 1 - is_positive(ART1731BIS) + BAPERPP + _4BACREP + _4BAHREP + BAFORESTP + BANOCGAP
DPERPP = PERP_COTP + RACCOTP
INVRETPD = NINVRETPD * 1 - V_CNR
LIGDLMRN3 = is_positive(DLMRN3) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
NPS = is_positive(PAC) * V_0BT * is_positive(2 - NSM) * 0.5
HONONETP = arr(XHONOP * MAJREV) + XHONOAAP
TECREST = is_positive(REST) * max(0, min(CITEC, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - IPELUS))
TRPQPRR2M = inf(TGLPRR2M / CARPENBAP2)
INVRETRP = min(arr(NINVRETRP * TX4737 / 100), max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK)) * 1 - V_CNR
LIGLOCNEUF1 = is_positive(RIVL1) * LIG1
TERPQPALIMCM = RPQPALIMCM * 1 - is_positive(INDTEFF) + TRPQPALIMCM * is_positive(INDTEFF)
RIVCELCOM2 = RIVCELCOM1
RENT28 = max(min(INVRETAQR * 1 - INDPLAF + INVRETAQRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27])), 0) * 1 - V_CNR
INVRETPBR = min(arr(INVRETPB * 5 / 3), NINVRETPB - INVRETPB) * 1 - null(1 - abs(arr(INVRETPB * 5 / 3) - NINVRETPB - INVRETPB)) + NINVRETPB - INVRETPB * null(1 - abs(arr(INVRETPB * 5 / 3) - NINVRETPB - INVRETPB)) * 1 - V_CNR
GLRVO6 = is_positive(_2RV4 + REVRCM + REVRF) * arr(TONEQUOHT * _2RV3 / TOTALQUOHT) + 1 - is_positive(_2RV4 + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLPRRTOT - GLTSREMPTOT - GLRVO - GLRVO5
HONODECP = XHONOP + XHONOAAP
RRIRENT = RRISUP - RLOGSOC - RDOMSOC1 - RIDOMPROTOT - RCOLENT
RETCODIM = arr(arr(ACODIM / 9) * TX25 / 100)
# TODO MAJTXRSE14
RESIMEUB8 = arr(min(DRESIMEUB, PLAF_RESINEUV) * TX25 / 100) - RESIMEUB1 - RESIMEUB2 - RESIMEUB3 - RESIMEUB4 - RESIMEUB5 - RESIMEUB6 - RESIMEUB7 - RESIMEUB7
NPLOCNETTPAC = NPLOCCGAPAC + NPLOCPAC + MIB_NETNPVLP + MIB_NETNPPLP
TSN4 = is_positive(TSNT4) * min(0, TSNT4 + PRNN4) + positif_ou_nul(TSNT4) * TSNT4
ISFBRUT = arr(ISF1 - ISFDEC * is_positive(LIM_ISFDEC - 1 - ISFBASE) + ISF1 * 1 - is_positive(LIM_ISFDEC - 1 - ISFBASE))
RCELRREDLT_1 = max(min(ACELRREDLT, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDLA_1 - RCELRREDLB_1 - RCELRREDLE_1 - RCELRREDLM_1 - RCELRREDLN_1 - RCELRREDLC_1 - RCELRREDLD_1 - RCELRREDLS_1), 0)
REPDOMSOC = REPXA + REPXB + REPXC + REPXE
PERPPLAFNUV = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE + 0) * max(0, PERPPLAFVANT - RPERPV) + is_positive(PERPIMPATRIE + 0) * max(0, PERPPLAFV - RPERPV) + is_positive(PERP_COND1) * 0 + is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE) * max(0, PERPPLAFVANT - RPERPV - RPERPMUTC - RACCOTC) + is_positive(PERPIMPATRIE) * max(0, PERPPLAFV - RPERPV - RPERPMUTC - RACCOTC)
XTPS10C = arr(XEXTSC * TX_DEDFORFTS / 100)
RCELREPHH = max(0, RCELREPHH_1 * 1 - ART1731BIS + min(RCELREPHH_1, max(RCELREPHH_P + RCELREPHHP2, RCELREPHH1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
TTPRV = TTSNV + TPRNV - sum([TGLN1V, TGLN2V, TGLN3V])
BAD = BAD1 + BAD2
BRENOV = min(RIRENOV, PLAF_RENOV)
TEGLRVO7M = GLRVO7M * 1 - is_positive(INDTEFF) + TGLRVO7M * is_positive(INDTEFF)
RIVCEL4 = RIVCEL1
# TODO CODINI
INVRETPW = NINVRETPW * 1 - V_CNR
GLTS3 = is_positive(TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * TSNN2TS3 / TOTALQUOHT) + 1 - is_positive(TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSV - GLTSC - GLTS1 - GLTS2
SPENETPP = max(0, BNCPROP - SPEABPP)
RIVCELJP4 = arr(min(CELLIERJP, LIMCELLIER) * is_positive(CELLIERJP) * TX36 / 100) - 4 * RIVCELJP1 * 1 - V_CNR
RFIPDOM_1 = max(min(RFIPDOMCOM, IDOM11 - DEC11 - RCOTFOR_1 - RREPA_1 - RAIDE_1 - RDIFAGRI_1 - RFORET_1), 0)
RENT32 = max(min(INVRETAFR * 1 - INDPLAF + INVRETAFRA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23, RENT24, RENT25, RENT26, RENT27, RENT28, RENT29, RENT30, RENT31])), 0) * 1 - V_CNR
RREPMEU = max(0, RREPMEU_1 * 1 - ART1731BIS + min(RREPMEU_1, max(RREPMEU_P + RREPMEUP2, RREPMEU1731 + 0) * 1 - PREM8_11) * ART1731BIS)
INVRETUC = min(NINVRETUC, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ - INVRETOR - INVRETOT - INVRETOU - INVRETOV - INVRETOW - INVRETOD - INVRETOE - INVRETOF - INVRETOG - INVRETOX - INVRETOY - INVRETOZ - INVRETUA - INVRETUB)) * 1 - V_CNR
DCELREPHE = CELREPHE
LIGREPLNPY = is_positive(REPLNPY) * LIG1 * LIG2 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
BPTP4I = BPCOPTV + BPCOPTC * 1 - is_positive(IPVLOC) * 1 - is_positive(present(TAX1649) + present(RE168))
PLACOMP = PLAFIMP * is_positive(V_0AV * V_0CF + V_0DJ + V_0CH + V_0CR + V_9XX * 1 - is_positive(V_0AZ)) + 2 * PLAF_PLACOMP * max(0, NIN + NSA2 + NCC) + arr(PLAF_PLACOMP / 2 * V_0CI)
TPLR1 = min(MIN_DEDPR, TEXPR1)
ALOCENT_1 = INVRETAB + INVRETAG + INVRETAA + INVRETAF + INVRETAC + INVRETAH + INVRETAE + INVRETAJ + INVRETAL + INVRETAQ + INVRETAV + INVRETBB + INVRETAK + INVRETAP + INVRETAU + INVRETBA + INVRETAM + INVRETAR + INVRETAW + INVRETBE + INVRETAO + INVRETAT + INVRETAY + INVRETBG + INVRETABR + INVRETAGR + INVRETAAR + INVRETAFR + INVRETALR + INVRETAQR + INVRETAVR + INVRETBBR + INVRETAKR + INVRETAPR + INVRETAUR + INVRETBAR * 1 - INDPLAF + INVRETABA + INVRETAGA + INVRETAAA + INVRETAFA + INVRETACA + INVRETAHA + INVRETAEA + INVRETAJA + INVRETALA + INVRETAQA + INVRETAVA + INVRETBBA + INVRETAKA + INVRETAPA + INVRETAUA + INVRETBAA + INVRETAMA + INVRETARA + INVRETAWA + INVRETBEA + INVRETAOA + INVRETATA + INVRETAYA + INVRETBGA + INVRETABRA + INVRETAGRA + INVRETAARA + INVRETAFRA + INVRETALRA + INVRETAQRA + INVRETAVRA + INVRETBBRA + INVRETAKRA + INVRETAPRA + INVRETAURA + INVRETBARA * INDPLAF * 1 - V_CNR
# TODO DEFRF4BD
SOMMEANOEXP = is_positive(PEBFV) + is_positive(COTFV) + is_positive(PEBFC) + is_positive(COTFC) + is_positive(PEBF1) + is_positive(COTF1) + is_positive(PEBF2) + is_positive(COTF2) + is_positive(PEBF3) + is_positive(COTF3) + is_positive(PEBF4) + is_positive(COTF4) + is_positive(PENSALV) + is_positive(PENSALNBV) + is_positive(PENSALC) + is_positive(PENSALNBC) + is_positive(PENSALP1) + is_positive(PENSALNBP1) + is_positive(PENSALP2) + is_positive(PENSALNBP2) + is_positive(PENSALP3) + is_positive(PENSALNBP3) + is_positive(PENSALP4) + is_positive(PENSALNBP4) + is_positive(CARPEV) + is_positive(CARPENBAV) + is_positive(CARPEC) + is_positive(CARPENBAC) + is_positive(CARPEP1) + is_positive(CARPENBAP1) + is_positive(CARPEP2) + is_positive(CARPENBAP2) + is_positive(CARPEP3) + is_positive(CARPENBAP3) + is_positive(CARPEP4) + is_positive(CARPENBAP4) + is_positive(CARTSP1) + is_positive(CARTSNBAP1) + is_positive(CARTSP2) + is_positive(CARTSNBAP2) + is_positive(CARTSP3) + is_positive(CARTSNBAP3) + is_positive(CARTSP4) + is_positive(CARTSNBAP4) + is_positive(REMPLAV) + is_positive(REMPLANBV) + is_positive(REMPLAC) + is_positive(REMPLANBC) + is_positive(REMPLAP1) + is_positive(REMPLANBP1) + is_positive(REMPLAP2) + is_positive(REMPLANBP2) + is_positive(REMPLAP3) + is_positive(REMPLANBP3) + is_positive(REMPLAP4) + is_positive(REMPLANBP4) + is_positive(RENTAX) + is_positive(RENTAX5) + is_positive(RENTAX6) + is_positive(RENTAX7) + is_positive(RENTAXNB) + is_positive(RENTAXNB5) + is_positive(RENTAXNB6) + is_positive(RENTAXNB7) + is_positive(FONCI) + is_positive(FONCINB) + is_positive(REAMOR) + is_positive(REAMORNB) + is_positive(REVACT) + is_positive(REVACTNB) + is_positive(REVPEA) + is_positive(REVPEANB) + is_positive(PROVIE) + is_positive(PROVIENB) + is_positive(DISQUO) + is_positive(DISQUONB) + is_positive(RESTUC) + is_positive(RESTUCNB) + is_positive(INTERE) + is_positive(INTERENB) + is_positive(_4BACREV) + is_positive(_4BAHREV) + is_positive(_4BACREC) + is_positive(_4BAHREC) + is_positive(_4BACREP) + is_positive(_4BAHREP) + is_positive(CODRAZ) + is_positive(CODRBZ) + is_positive(CODRCZ) + is_positive(CODRDZ) + is_positive(CODREZ) + is_positive(CODRFZ) + is_positive(CODNAZ) + is_positive(CODNBZ) + is_positive(CODNCZ) + is_positive(CODNDZ) + is_positive(CODNEZ) + is_positive(CODNFZ) + is_positive(CODRVG) + is_positive(CODNVG) + 0
LIGISFPMEI = is_positive(ISFPMEIN) * 1 - is_positive(ANNUL2042) * 1 - null(5 - V_IND_TRAIT) * LIGISF + present(ISFPMEIN) * is_positive(DISFBASE) * 1 - is_positive(ANNUL2042) * null(5 - V_IND_TRAIT) * LIGISF
TEGLPALIM2M = GLPALIM2M * 1 - is_positive(INDTEFF) + TGLPALIM2M * is_positive(INDTEFF)
IPQRCMTSANT1 = ZIPQRCMTSANT1 * DISQUONB
DEFBA6 = 1 - is_positive(BAHQT + BAQT) * DAGRI5 + is_positive(BAHQT + BAQT) * abs(min(max(BAHQT + BAQT - DAGRI6, 0) - DAGRI5, DAGRI5)) * positif_ou_nul(DAGRI5 - max(BAHQT + BAQT - DAGRI6, 0)) * 1 - is_positive(IPVLOC) * 1 - is_positive(ART1731BIS) + min(DAGRI5, DAGRI - DBAIP - DEFBA2 - DEFBA3 - DEFBA4 - DEFBA5) * is_positive(ART1731BIS * 1 - is_positive(PREM8_11 + null(8 - CMAJ) + null(11 - CMAJ))) + DAGRI5 * is_positive(is_positive(ART1731BIS * PREM8_11) + null(8 - CMAJ) + null(11 - CMAJ))
BI12F = sum([REVIBI12V, REVIBI12C, REVIBI12P]) + MIB_1AF
PERPSALV = TSHALLOV + ALLOV + GLD1V + GLD2V + GLD3V + GLDGRATV + BPCOSAV + TSASSUV + CARTSV + REMPLAV + CODDAJ + CODEAJ + max(0, SALEXTV - COD1AD)
LIG7CY = is_positive(COD7CY) * LIG1 * LIG2
DEFLOCNP = NPLOCNETTV + NPLOCNETTC + NPLOCNETTPAC - DNPLOCIMPU + LOCDEFNPV + LOCDEFNPC + LOCDEFNPPAC + LOCDEFNPCGAV + LOCDEFNPCGAC + LOCDEFNPCGAPAC
ZIGCDISANT = is_positive(V_CDISANT) * TYPE2 * 1 - APPLI_OCEANS
DCELREPYL = CELREPYL
# TODO NMAJP4
BDCIFORET = RDFORESTRA + SINISFORET + COD7UA + COD7UB + RDFORESTGES + COD7UI
TERPQTSREMP2 = RPQTSREMP2 * 1 - is_positive(INDTEFF) + TRPQTSREMP2 * is_positive(INDTEFF)
RPQTS1 = inf(GLTS1 / CARTSNBAP1)
DILMIY = LOCMEUBIY
RIVPIQAC5 = max(0, arr(min(PINELQC + 0, LIMDUFLO - min(DUFLOEL + PINELQD + 0, LIMDUFLO)) * TX23 / 100) + arr(min(PINELQA + 0, LIMDUFLO - min(DUFLOEL + PINELQD + PINELQC + DUFLOEK + PINELQB + 0, LIMDUFLO)) * TX12 / 100) - 5 * RIVPIQAC) * 1 - null(4 - V_REGCO) * 1 - null(2 - V_REGCO)
GL2 = is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * GLN2 / TOTALQUOHT) + 1 - is_positive(REV3 + REV4 + REVF + REVALIM + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLRWB - GLRWA - GLRVG - GL1
REPMEUJS = DILMJS - RILMJS * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RECREST = is_positive(REST) * max(0, min(IPRECH, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - IPELUS - CITEC - CIDEVDUR - CIGE - I2DH - CI2CK - COD8TL - CIDIREPARGNE))
GLRCMFU = is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * arr(TONEQUOHT * _3RCM / TOTALQUOHT) + 1 - is_positive(_4RCM + _5RCM + _6RCM + _7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC
DISFDEC = ISFDEC
SOMMEA859 = present(BICEXV) + present(BICNOV) + present(BI1AV) + present(BICDNV) + present(BICEXC) + present(BICNOC) + present(BI1AC) + present(BICDNC) + present(BICEXP) + present(BICNOP) + present(BI1AP) + present(BICDNP) + present(BIHEXV) + present(BIHNOV) + present(BIHDNV) + present(BIHEXC) + present(BIHNOC) + present(BIHDNC) + present(BIHEXP) + present(BIHNOP) + present(BIHDNP)
SPEPVPP = BNCPRO1AP - BNCPRODEP
MIB_TPRESV = MIBPRESV + MIBNPPRESV + MIBMEUV
RSOC16 = arr(max(min(INVRETKIR * 1 - INDPLAF + INVRETKIRA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15])), 0)) * 1 - V_CNR
TABTS1DC = is_positive(ALLO2 + CARTSP2 + REMPLAP2) * arr(TREP102 * max(0, SALEXT2 - COD1DD) / TTSB2) + 1 - is_positive(ALLO2 + CARTSP2 + REMPLAP2) * max(0, TREP102 - TABTS1DJ)
LIGMEUBLE = is_positive(DMEUBLE) * LIG1 * LIG2
LIGDUFI = is_positive(DUFLOFI) * LIG1 * LIG2
ZIPQRCMTR1 = is_positive(TEGLRCMGO + TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQRCMTR / TETONEQUO1) + 1 - is_positive(TEGLRCMGO + TEGLRCMTS + TEGLTSTOT + TEGLTSREMPTOT + TEGLPRRTOT + TEGLPRRZTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCMDC1 - ZIPQRCMFU1 - ZIPQRCMCH1
RIVCELJBGL5 = RIVCELJBGL1
TRAN = _1RAN + _2RAN
INVRETOR = min(NINVRETOR, max(0, PLAF_INVDOM3 - INVRETSOC - INVRETENT - INVRETQL - INVRETQM - INVRETQD - INVRETOB - INVRETOC - INVRETOI - INVRETOJ - INVRETOK - INVRETOM - INVRETON - INVRETOP - INVRETOQ)) * 1 - V_CNR
TEGLRCMTOT = TEGLRCMDC + TEGLRCMFU + TEGLRCMCH + TEGLRCMGO + TEGLRCMTR + TEGLRCMTS
INVRETPOR = min(arr(INVRETPO * 3 / 2), NINVRETPO - INVRETPO) * 1 - V_CNR
IPQTS25 = ZIPQTS25 * CARTSNBAP2
ZIPQPRRANT41 = is_positive(sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPRR4 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZV, TEGLPRRZC, TEGLPRRZ1, TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTV1 - ZIPQPRRANTC1 - ZIPQPRRANT11 - ZIPQPRRANT21 - ZIPQPRRANT31
INVRETST = NINVRETST * 1 - V_CNR
RFACCTEF = max(min(DFA, RBGTEF - RPALETEF - RPALPTEF - DDCSG + TOTALQUO - SDD), 0)
PLAFREPSN4 = arr(max(0, RSNCF - 10000)) * 1 - V_CNR * is_positive(AVFISCOPTER)
X10MINS2 = max(min(XTSB2, DEDMIN2), XDFN2)
REI = IPREP + IPPRICORSE
ZIPQF2TOT = sum([ZIPQFV2, ZIPQFC2, ZIPQF12, ZIPQF22, ZIPQF32, ZIPQF42])
RENT12 = max(min(INVRETBA * 1 - INDPLAF + INVRETBAA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11])), 0) * 1 - V_CNR
XFORFAIT = sum([FEXV, FEXC, FEXP])
# TODO TXMOYIMP
PRN2 = is_positive(TSNT2) * is_positive(TSNT2 + PRNN2) * TSNT2 + PRNN2 + positif_ou_nul(TSNT2) * PRNN2
LIGCELYF = is_positive(DCELREPYF) * LIG1 * LIG2
RISFFIP = max(min(RISFFIP_2, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED - RISFPMEI), 0) * is_positive(1 - null(CODE_2042 - 8) * 1 - null(CMAJ_ISF - 8) * 1 - null(CMAJ_ISF - 34)) + max(min(RISFFIP_2, ISFBRUT - RISFDONF - RISFDONCEE - RISFPMED - RISFPMEI), 0) * 1 - is_positive(1 - null(CODE_2042 - 8) * 1 - null(CMAJ_ISF - 8) * 1 - null(CMAJ_ISF - 34)) * COD9ZA
# TODO IND_SPR
RRCELLF = max(0, CELRREDLF - RCELRREDLF) * is_positive(CELRREDLF) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
ZIPQPRRZ11 = is_positive(sum([TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPRRZ1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRZV1 - ZIPQPRRZC1
INVRETPARA = min(NINVRETPAR, max(0, MAXDOM2 - INVRETPBA - INVRETPFA - INVRETPJA - INVRETPAA - INVRETPEA - INVRETPIA - INVRETPDA - INVRETPHA - INVRETPLA - INVRETPYA - INVRETPXA - INVRETRGA - INVRETRIA - INVRETSBA - INVRETSGA - INVRETSAA - INVRETSFA - INVRETSCA - INVRETSHA - INVRETSEA - INVRETSJA - INVRETABA - INVRETAGA - INVRETAAA - INVRETAFA - INVRETACA - INVRETAHA - INVRETAEA - INVRETAJA - INVRETOIA - INVRETOJA - INVRETOKA - INVRETOPA - INVRETOQA - INVRETORA - INVRETOEA - INVRETOFA - INVRETUBA - INVRETUCA - INVRETPBRA - INVRETPFRA - INVRETPJRA)) * 1 - V_CNR
INVRETAB = min(arr(NINVRETAB * TX375 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ)) * 1 - V_CNR
RPQPRR4 = inf(GLPRR4 / CARPENBAP4)
INVRETXEA = min(arr(NINVRETXE * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA)) * 1 - V_CNR
LIGISFBASE = LIGISF * 1 - is_positive(ANNUL2042)
IPQTSC2 = ZIPQTSC2 * CARTSNBAC
RCELJBGL = max(0, RCELJBGL_1 * 1 - ART1731BIS + min(RCELJBGL_1, max(RCELJBGL_P + RCELJBGLP2, RCELJBGL1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
DILMOE = COD7OE
ICI8XFH = min(arr(BPTP18 * TX18 / 100), arr(COD8XF * TX18 / 100)) + min(arr(BPTP4I * TX30 / 100), arr(COD8XG * TX30 / 100)) + min(arr(BPTP40 * TX41 / 100), arr(COD8XH * TX41 / 100))
GLPALIMC = is_positive(PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PENALIMC / TOTALQUOHT) + 1 - is_positive(PENALIM1 + PENALIM2 + PENALIM3 + PENALIM4 + REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMV
TMIBNETNPPF = sum([TMIB_NETNPPV, TMIB_NETNPPC, TMIB_NETNPPP])
PREREST = is_positive(REST) * max(0, min(CIPRETUD, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE))
GLPALIM4M = is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * PENALIM4 / TOTALQUOHT) + 1 - is_positive(REVTS + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMVM - GLPALIMCM - GLPALIM1M - GLPALIM2M - GLPALIM3M
IPQTSREMPV2 = ZIPQTSREMPV2 * REMPLANBV
PLOCNETF = PLOCNETV + PLOCNETC + PLOCNETPAC
# TODO PLAFQF
DILMIA = LOCMEUBIA
LIGEXOCET = is_positive(EXOCET) * LIG1 * LIG2
# TODO IAVIM
# TODO IRESTITIR
LIGREPSA = is_positive(REPSA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
LIGPIPPE = is_positive(PPETOTX) * LIG0
LIGREPNPRO = is_positive(DREPNPRO) * LIG1 * LIG2
IPQPRRZC1 = ZIPQPRRZC1 * CODNBZ
REPMEUIS = DREDMEUB - RREDMEUB * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
REPMEUIX = AILMIX_R - RILMIX * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
AVPLAF13B = max(0, min(AUBAINE13A, LIM10000) + AUBAINE13B - LIM18000) * is_positive(V_DIFTEOREEL)
RITOUR = RILNEUF + RILTRA + RILRES + arr(RINVLOCINV + REPINVTOU + INVLOCXN + COD7UY * TX_REDIL25 / 100) + arr(RINVLOCREA + INVLOGREHA + INVLOCXV + COD7UZ * TX_REDIL20 / 100)
LIGISFDEC = is_positive(ISF1) * is_positive(ISFDEC) * LIGISF * 1 - is_positive(ANNUL2042)
ZIG_TAUXR = ZIG_TITRER
LIGRRCEL46 = is_positive(RRCEL2009) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
# TODO BINNC
PIND_MINC = 1 - is_positive(PIND_10MIN_0C)
ZIPQPALIMV5 = is_positive(sum([TEGLPALIMCM, TEGLPALIM1M, TEGLPALIM2M, TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * arr(IQUOTOT5 * TERPQPALIMVM / TETONEQUOM1) + 1 - is_positive(sum([TEGLPALIMCM, TEGLPALIM1M, TEGLPALIM2M, TEGLPALIM3M, TEGLPALIM4M]) + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLPRRTOTM + TEGLPRRZTOTM + TEGLRVOTOTM + TEGLRCMTOTM + TEGLRFTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT
CUMPENEXTEF = sum([TPRRV, TPRRC, TPRR1, TPRR2, TPRR3, TPRR4])
TD10M3 = TIND_MIN3 * TDFN3 + 1 - TIND_MIN3 * T10MINS3
CI8XV = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET, ICI8XV))
LIGDRCVM = is_positive(DPVRCM) * LIG1 * 1 - null(4 - V_REGCO) * LIG2
RSE3N = max(0, RSE3 - CIRSE3)
IND_ZIGREVORIGIND = present(ESFP)
BDRSE1 = max(0, SALECS - REVCSXA - arr(CSPROVYD / TX075 / 100)) * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
LIGRPINELTOT = LIGRPIQBD + LIGRPIQAC
PPETEMPSV = arr(1 / PPE_COEFFV * 100)
T2TSNV = CARTSV + REMPLAV
ROFREST = is_positive(REST) * max(0, min(CIFORET, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN))
LIG2161 = INDCTX * is_positive(IREST) * positif_ou_nul(IREST - SEUIL_8) * 1 - is_positive(IND_REST50)
DCELREPHT = CELREPHT
LIGPCAPDEG = is_positive(NATIMP - 71) * is_positive(PCAPDEG) * LIG2
LIGREVDEG = INDREV1A8 * is_positive(REVFONC) * 1 - null(V_REGCO - 2) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * is_positive(INDCTX) * LIG2
AILMIY = DILMIY * 1 - ART1731BIS + min(DILMIY, max(AILMIY_P + AILMIYP2, AILMIY1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
INVRETRBR = min(max(min(arr(INVRETRB * 13 / 7), NINVRETRB - INVRETRB), NINVRETRB - INVRETRB), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR - INVRETRAR)) * 1 - V_CNR
INVRETLH = min(arr(NINVRETLH * TX50 / 100), max(0, PLAF_INVDOM - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC)) * 1 - V_CNR
REPSV = max(0, CODHSV - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ)) * 1 - ART1731BIS + max(0, CODHSV - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB - CODHSG - CODHSL - CODHSQ)) * ART1731BIS * 1 - V_CNR
RSOCREPR = max(0, RSOCREPR_1 * 1 - ART1731BIS + min(RSOCREPR_1, max(RSOCREPR_P + RSOCREPRP2, RSOCREPR1731 + 0) * 1 - PREM8_11) * ART1731BIS)
IAVF2 = CIDIREPARGNE + IPRECH + CIRECH + IPELUS + CIRCMAVFT + CIGPA + CIEXCEDENT + 0 * 1 - is_positive(RE168 + TAX1649) + CIRCMAVFT * is_positive(RE168 + TAX1649)
LIGISFRED = is_positive(LIGISFINV + LIGISFDON) * LIGISF * 1 - is_positive(null(CODE_2042 + CMAJ_ISF - 8) + null(CMAJ_ISF - 34)) * 1 - COD9ZA
BDRSE2 = max(0, ALLECS - REVCSXC - arr(CSPROVYF / TX066 / 100)) * 1 - is_positive(present(RE168) + present(TAX1649)) * 1 - V_CNR
NINVRETSC = max(min(CODHSC, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ), 0) * 1 - V_CNR
RMEUBLE_1 = max(min(MEUBLERET, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE), 0)
TEGLTSREMP4M = GLTSREMP4M * 1 - is_positive(INDTEFF) + TGLTSREMP4M * is_positive(INDTEFF)
PLRV = min(MIN_DEDPR, EXPRV)
LIGRRCEL4 = is_positive(RRCEL2009 + RRCELLA + RRCELLB + RRCELLE + RRCELLM + RRCELLN) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1 * LIG2
BCIHABPRIN = BCIHABPRIN1 + BCIHABPRIN2 + BCIHABPRIN3 + BCIHABPRIN4 + BCIHABPRIN5 + BCIHABPRIN6 + BCIHABPRIN7
INVRETSR = min(NINVRETSR, max(0, PLAF_INVDOM4 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB - INVRETAA - INVRETAF - INVRETAK - INVRETAP - INVRETAU - INVRETBA - INVRETPP - INVRETPU - INVRETRG - INVRETRM - INVRETRR - INVRETRW - INVRETNW - INVRETSC - INVRETSH - INVRETSM)) * 1 - V_CNR
TTSNN24 = is_positive(TTS4) * is_positive(CARTSP4 + REMPLAP4) * arr(TTS4 * T2TSN4 / TEXTS4) + 1 - is_positive(CARTSP4 + REMPLAP4) * TTS4 - TTSNN4
GLRCMCH = is_positive(_5RCM + _6RCM + _7RCM + REVRF) * arr(TONEQUOHT * _4RCM / TOTALQUOHT) + 1 - is_positive(_5RCM + _6RCM + _7RCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRTOT - GLRVOTOT - GLRCMDC - GLRCMFU
RETRESTIMO = arr(RESTIMOD * TX40 / 100 + RESTIMOB * TX36 / 100 + RESTIMOC * TX30 / 100 + RESTIMOA * TX_RESTIMO1 / 100 + RESTIMOE * TX22 / 100 + RESTIMOF * TX30 / 100 + RESTIMOY * TX30 / 100 + RESTIMOX * TX22 / 100) * 1 - V_CNR
LIGPMECU = is_positive(REPINVPMECU) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO) * LIG1
RPQ4V = arr(GL4V / DIVGL4) + 0
RCODIV_1 = max(min(RETCODIV, IDOM11 - DEC11 - REDUCAVTCEL - RCELTOT - RREDMEUB - RREDREP - RILMIX - RILMIY - RILMPA - RINVRED - RILMIH - RILMJC - RILMPB - RILMIZ - RILMJI - RILMPC - RILMJS - RILMPD - RILMPE - RMEUBLE - RPROREP - RREPNPRO - RREPMEU - RILMIC - RILMIB - RILMIA - RILMJY - RILMJX - RILMJW - RILMJV - RILMOE - RILMOD - RILMOC - RILMOB - RILMOA - RRESIMEUB - RRESIVIEU - RCODIL - RCODIN), 0)
RPQ2M = inf(GL2M / DIVGL2)
PTOCSG = arr(max(0, CSG - CSGIM) * COPETO / 100) + arr(max(0, CSG - CSGIM - CS9YP) * TXINT / 100) * positif_ou_nul(CSTOTSSPENA - SEUIL_61)
RCELREPHB_1 = max(min(ACELREPHB, IDOM11 - DEC11 - REDUCAVTCEL - RCELRREDSOM - sum([RCELREPHS_1, RCELREPHR_1, RCELREPHU_1, RCELREPHT_1, RCELREPHZ_1, RCELREPHX_1, RCELREPHW_1, RCELREPHV_1, RCELREPHF_1, RCELREPHE_1, RCELREPHD_1, RCELREPHH_1, RCELREPHG_1])), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
APERPCTEFRFR = 1 - V_CNR * max(min(RPERPC, RBGTEFRFR - RPALETEFRFR - RPALPTEFRFR - RFACCTEFRFR - RDDIVTEFRFR - DDCSG + TOTALQUO - SDD - APERPVTEFRFR), 0)
A12REEL = A12RFOR + A12RRESTIMO + RLOG25 * 1 - ART1731BIS + min(RLOG251731 + 0, RLOG25) * ART1731BIS + RLOG31 * 1 - ART1731BIS + RLOG38 * 1 - ART1731BIS + RTOURREP * is_positive(COD7UY) + RTOUREPA * is_positive(COD7UZ) + arr(RSNCN + RSNCQ) + RCELRREDMG + RCELRREDMH + RCELREPGV + RCELREPGJ + RCELREPYJ + RCELREPYB + RCELREPYI + RCELREPYA + RCELJOQR + RCEL2012 + RCELFD + RCELFABC + RCODIF + RCODIG + RCODID + RILMJV + RILMJS + RCODJU + RILMPD + RILMOB + RPATNAT3 + A12RSOC + A12RENT
TPRNN3 = TEXPR3 - TAPR3
RENT09 = max(min(INVRETAK * 1 - INDPLAF + INVRETAKA * INDPLAF, RRIRENT - sum([RENT01, RENT02, RENT03, RENT04, RENT05, RENT06, RENT07, RENT08])), 0) * 1 - V_CNR
EXCREST = is_positive(REST) * max(0, min(CIEXCEDENT, IRESTITIR - PPETOTX - PPERSA - AUTOVERSLIB - CILOYIMP - CRERESTAU - CICONGAGRI - CREARTS - CREINTERESSE - CREFORMCHENT - CRESINTER - CREPROSP - CREAGRIBIO - CREAPP - CREFAM - CIHABPRIN - CIFORET - CIADCRE - CIPRETUD - CISYND - CIGARD - CICA - IPELUS - CITEC - CIDEVDUR - CIGE - I2DH - CI2CK - COD8TL - CIDIREPARGNE - IPRECH))
RD_REVETRANG = SALECS + SALECSG + ALLECS + INDECS + PENECS + COD8SA + COD8SB
RAA = arr(TX_REDREPAS / 100 * BAA) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RLOC90 = max(min(INVRETSG * 1 - INDPLAF + INVRETSGA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73, RLOC74, RLOC75, RLOC76, RLOC77, RLOC78, RLOC79, RLOC80, RLOC81, RLOC82, RLOC83, RLOC84, RLOC85, RLOC86, RLOC87, RLOC88, RLOC89])), 0) * 1 - V_CNR
TTSPRP = sum([TTSPR1, TTSPR2, TTSPR3, TTSPR4])
NINVRETPD = max(min(INVOMRETPD, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI), 0) * 1 - V_CNR
LIGIBAEX = is_positive(REVQTOT) * LIG1 * LIG2 * 1 - INDTXMIN * 1 - INDTXMOY * 1 - null(2 - V_REGCO) * 1 - LIG1522 * 1 - null(4 - V_REGCO)
TGL4VCM = arr(TONEQUOM * REV4VC / TOTALQUO)
LIGPPEC = null(INDPPEV) * is_positive(INDPPEC) * null(INDPPEP) * TYPEPPE
GLN2 = GLN2V + GLN2C
TSBN3 = TSHALLO3 + ALLO3
INVRETRAR = min(max(min(arr(INVRETRA * 13 / 7), NINVRETRA - INVRETRA), NINVRETRA - INVRETRA), max(0, PLAF_INVDOM1 - INVRETKGR - INVRETKHR - INVRETKIR - INVRETQNR - INVRETQUR - INVRETQKR - INVRETQJR - INVRETQSR - INVRETQWR - INVRETQXR)) * 1 - V_CNR
TGL4CM = arr(TONEQUOM * REV4C / TOTALQUO)
INVRETOTA = min(NINVRETOT, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA)) * 1 - V_CNR
MIB_ABPP = max(0, arr(MIB_APP * MIBPRESP / MIB_TPRESP))
INETABAEAJ6 = max(0, IPROGUY6 - ABAGU6)
XBICNETV = XBICHDV - BICDNV * 1 - is_positive(ART1731BIS)
REPSG = max(0, CODHSG - max(0, RRIREP - REPSOC - RIDOMPROTOT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB)) * 1 - ART1731BIS + max(0, CODHSG - max(0, RCOLENT - REPENT5 - REPENT4 - REPENT3 - REPENT2 - CODHSB)) * ART1731BIS * 1 - V_CNR
REPCELFABC = 7 * RIVCELFABC1 + RIVCELFABC8
RBG2RFRHR = RBGRFRHR - min(RBGRFRHR, DDCSG)
INVRETRPRA = min(NINVRETRPR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA)) * 1 - V_CNR
RPQF2 = inf(GLF2 / COTF2)
MIB_NETNPPC = MIBNPPRESC - MIB_ABNPPC
NINVRETAT = max(min(CODHAT, RRI1 - NRLOGDOM - NRRI2 - NRLOGSOC - NRDOMSOC1 - NRRI3 - INVOMREP - INVOMENTMN - INVOMQV - INVENDEB2009 - NINVRETPM - NINVRETRJ - NINVRETMA - NINVRETLG - NINVRETKS - NINVRETMB - NINVRETMC - NINVRETLH - NINVRETLI - NINVRETKT - NINVRETKU - NINVRETQP - NINVRETQG - NINVRETQO - NINVRETQF - NINVRETQR - NINVRETQI - NINVRETPB - NINVRETPF - NINVRETPJ - NINVRETPA - NINVRETPE - NINVRETPI - NINVRETPD - NINVRETPH - NINVRETPL - NINVRETPO - NINVRETPT - NINVRETPY - NINVRETRL - NINVRETRQ - NINVRETRV - NINVRETNV - NINVRETPN - NINVRETPS - NINVRETPX - NINVRETRK - NINVRETRP - NINVRETRU - NINVRETNU - NINVRETPP - NINVRETPU - NINVRETRG - NINVRETRM - NINVRETRR - NINVRETRW - NINVRETNW - NINVRETPR - NINVRETPW - NINVRETRI - NINVRETRO - NINVRETRT - NINVRETRY - NINVRETNY - NINVRETSB - NINVRETSG - NINVRETSL - NINVRETSQ - NINVRETSV - NINVRETTA - NINVRETSA - NINVRETSF - NINVRETSK - NINVRETSP - NINVRETSU - NINVRETSZ - NINVRETSC - NINVRETSH - NINVRETSM - NINVRETSR - NINVRETSW - NINVRETTB - NINVRETSE - NINVRETSJ - NINVRETSO - NINVRETST - NINVRETSY - NINVRETTD - NINVRETAB - NINVRETAG - NINVRETAL - NINVRETAQ - NINVRETAV - NINVRETBB - NINVRETAA - NINVRETAF - NINVRETAK - NINVRETAP - NINVRETAU - NINVRETBA - NINVRETAC - NINVRETAH - NINVRETAM - NINVRETAR - NINVRETAW - NINVRETBE - NINVRETAE - NINVRETAJ - NINVRETAO), 0) * 1 - V_CNR
RCEL_HJK = is_positive(CELLIERHJ) * arr(ACELHJK * TX25 / 100) + is_positive(CELLIERHK) * arr(ACELHJK * TX40 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RCEL_FD_R = is_positive(CELLIERFD) * arr(ACELFD_R * TX24 / 100) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
_2TSNV = CARTSV + REMPLAV
RTOUREPA = RTOUREPA_1 * 1 - ART1731BIS + min(RTOUREPA_1, max(RTOUREPA_P + RTOUREPAP2, RTOUREPA1731 + 0) * 1 - PREM8_11) * ART1731BIS
RPQFV = inf(GLFV / COTFV)
RCODIV = RCODIV_1 * 1 - ART1731BIS + min(RCODIV_1, max(RCODIV_P + RCODIVP2, RCODIV1731 + 0) * 1 - PREM8_11) * ART1731BIS
RENT24 = max(min(INVRETBG * 1 - INDPLAF + INVRETBGA * INDPLAF, RRIRENT - sum([RENT1, RENT2, RENT3, RENT4, RENT5, RENT6, RENT7, RENT8, RENT9, RENT10, RENT11, RENT12, RENT13, RENT14, RENT15, RENT16, RENT17, RENT18, RENT19, RENT20, RENT21, RENT22, RENT23])), 0) * 1 - V_CNR
NRCELREPHD = max(min(ACELREPHD, RRI1 - NRLOGDOM - NRRI2 - sum([NRCELRREDLA, NRCELRREDLB, NRCELRREDLE, NRCELRREDLM, NRCELRREDLN, NRCELRREDLC, NRCELRREDLD, NRCELRREDLS, NRCELRREDLT, NRCELRREDLF, NRCELRREDLZ, NRCELRREDLX]) - NRCELRREDMG - NRCELRREDMH - sum([NRCELREPHS, NRCELREPHR, NRCELREPHU, NRCELREPHT, NRCELREPHZ, NRCELREPHX, NRCELREPHW, NRCELREPHV, NRCELREPHF, NRCELREPHE])), 0)
TMIB_PRESAC = min(MIBPRESC + MIBNPPRESC, max(MIN_MBIC, arr(MIBPRESC + MIBNPPRESC * TX_MIBPRES / 100)))
DAIDC = CREAIDE
GLPRRZ2 = is_positive(PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOHT * PRR2Z2 / TOTALQUOHT) + 1 - is_positive(PRR2Z3 + PRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOHT - GLTOT - GLFTOT - GLPALIMTOT - GLTSTOT - GLTSREMPTOT - GLPRRV - GLPRRC - GLPRR1 - GLPRR2 - GLPRR3 - GLPRR4 - GLPRRZV - GLPRRZC - GLPRRZ1
INVRETSKR = min(arr(INVRETSK * 10 / 9), NINVRETSK - INVRETSK) * 1 - null(1 - abs(arr(INVRETSK * 10 / 9) - NINVRETSK - INVRETSK)) + NINVRETSK - INVRETSK * null(1 - abs(arr(INVRETSK * 10 / 9) - NINVRETSK - INVRETSK)) * 1 - V_CNR
LIGLOGSOC = is_positive(DLOGSOC) * LIG1 * LIG2
BASE7UN = min(RDFOREST, PLAF_FOREST * 1 + BOOL_0AM) * 1 - V_CNR
TPLEINSALC = is_positive(PPETPC * PPESALCTOT + PPESALCTOT * INDLIGPPE * 1 - is_positive(LIGPPEHC) + is_positive(PPENBHC - 1820) + is_positive(PPEPRIMECT) * is_positive(PPETOTX) * is_positive(PPESALC) * 1 - is_positive(LIGPPEHC) + is_positive(PPESALC) * 1 - is_positive(LIGPPEHC)) * INDPPEC * is_positive(INDLIGPPE) * LIG0 * LIG2
RPQRF1 = inf(GLRF1 / FONCINB)
CIGPA = max(0, min(IRB + TAXASSUR + IPCAPTAXTOT + TAXLOY - AVFISCOPTER - CIRCMAVFT - IRETS - CRDIE - ICREREVET - CIGLO - CICULTUR, BCIGA))
ACEL_R = positif_ou_nul(CELSOMN) * BCEL_2011 * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
RD_RTF = CS_RTF
RSOC25 = arr(max(min(INVRETQW * 1 - INDPLAF + INVRETQWA * INDPLAF, RRISUP - sum([RSOC11, RSOC12, RSOC13, RSOC14, RSOC15, RSOC16, RSOC17, RSOC18, RSOC19, RSOC20, RSOC21, RSOC22, RSOC23, RSOC24])), 0)) * 1 - V_CNR
ABRCM2 = min(ABTAV, RAVC)
RIVCELNBGL1 = RCEL_NBGL_R * is_positive(ACELNBGL_R)
INVRETSLRA = min(NINVRETSLR, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA - INVRETRYA - INVRETNYA - INVRETSLA - INVRETSQA - INVRETSVA - INVRETTAA - INVRETSKA - INVRETSPA - INVRETSUA - INVRETSZA - INVRETSMA - INVRETSRA - INVRETSWA - INVRETTBA - INVRETSOA - INVRETSTA - INVRETSYA - INVRETTDA - INVRETALA - INVRETAQA - INVRETAVA - INVRETBBA - INVRETAKA - INVRETAPA - INVRETAUA - INVRETBAA - INVRETAMA - INVRETARA - INVRETAWA - INVRETBEA - INVRETAOA - INVRETATA - INVRETAYA - INVRETBGA - INVRETOTA - INVRETOUA - INVRETOVA - INVRETOWA - INVRETOGA - INVRETOXA - INVRETOYA - INVRETOZA - INVRETUDA - INVRETUEA - INVRETUFA - INVRETUGA - INVRETRLRA - INVRETRQRA - INVRETRVRA - INVRETNVRA - INVRETRKRA - INVRETRPRA - INVRETRURA - INVRETNURA)) * 1 - V_CNR
ACODJU = min(PLAF_RESINEUV - ACODJT, LOCMEUBJU) * 1 - V_CNR
INVRETSPR = min(arr(INVRETSP * 10 / 9), NINVRETSP - INVRETSP) * 1 - null(1 - abs(arr(INVRETSP * 10 / 9) - NINVRETSP - INVRETSP)) + NINVRETSP - INVRETSP * null(1 - abs(arr(INVRETSP * 10 / 9) - NINVRETSP - INVRETSP)) * 1 - V_CNR
XBITP = max(0, XBICNETP + max(0, XBICNPNETP))
TEXPRC = TPRBC + COD1BH + T2PRBC + PEBFC
LIGDUFLOGIH = is_positive(DDUFLOGIH) * LIG1 * LIG2
TEGLTSTOTM = TEGLTSVM + TEGLTSCM + TEGLTS1M + TEGLTS2M + TEGLTS3M + TEGLTS4M
AVPLAF13A = max(0, AUBAINE13A - LIM10000) * is_positive(V_DIFTEOREEL)
TTSNN2TS1 = is_positive(TTS1) * is_positive(REMPLAP1) * arr(TTS1 * CARTSP1 / TEXTS1) + 1 - is_positive(REMPLAP1) * TTS1 - TTSNN1
TGLPRRCM = is_positive(TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * arr(TONEQUOM * TPRR2C / TOTALQUO) + 1 - is_positive(TPRR21 + TPRR22 + TPRR23 + TPRR24 + TPRR2ZV + TPRR2ZC + TPRR2Z1 + TPRR2Z2 + TPRR2Z3 + TPRR2Z4 + REVRVO + REVRCM + REVRF) * TONEQUOM - TGLTOTM - TGLFTOTM - TGLPALIMTOTM - TGLTSTOTM - TGLTSREMPTOTM - TGLPRRVM
ACODOU = arr(min(PLAF_RESINEUV, COD7OU) / 9) * 1 - V_CNR
NRLOGDOM = INVLOG2008 + INVLGDEB2009 + INVLGDEB + INVOMLOGOA + INVOMLOGOH + INVOMLOGOL + INVOMLOGOO + INVOMLOGOS + NINVRETQL + NINVRETQM + NINVRETQD + NINVRETOB + NINVRETOC + NINVRETOI + NINVRETOJ + NINVRETOK + NINVRETOM + NINVRETON + NINVRETOP + NINVRETOQ + NINVRETOR + NINVRETOT + NINVRETOU + NINVRETOV + NINVRETOW + NINVRETOD + NINVRETOE + NINVRETOF + NINVRETOG + NINVRETOX + NINVRETOY + NINVRETOZ + NINVRETUA + NINVRETUB + NINVRETUC + NINVRETUD + NINVRETUE + NINVRETUF + NINVRETUG * 1 - V_CNR
PPECOEFF2 = arr(PPE_COEFFCOND2 * 100)
IPQPRRANTZ21 = ZIPQPRRANTZ21 * CODNDZ
TAPRV = TIND_APBV * TABPRV + 1 - TIND_APBV * min(TABPRV, TPL_PB)
ZIPQPRRZ31 = is_positive(TEGLPRRZ4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOT1 * TERPQPRRZ3 / TETONEQUO1) + 1 - is_positive(TEGLPRRZ4 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRRZV1 - ZIPQPRRZC1 - ZIPQPRRZ11 - ZIPQPRRZ21
ZIGINT322 = is_positive(RETRSE322) * LIG2
INVRETQJA = min(arr(NINVRETQJ * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA)) * 1 - V_CNR
LIGTAXADEG = is_positive(NATIMP - 71) * is_positive(TAXADEG) * LIG2
INVRETQWA = min(arr(NINVRETQW * TX35 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA)) * 1 - V_CNR
ACREAT = DCREAT * 1 - ART1731BIS + min(DCREAT, max(ACREAT_P + ACREATP2, ACREAT1731 + 0) * 1 - PREM8_11) * ART1731BIS * 1 - V_CNR
IND_COLR = is_positive(BRDS) * is_positive(PRDS + CIRDS + CRDSIM) * 1 - INDCTX
RLOC19 = max(min(INVENDEB2009, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18])), 0) * 1 - V_CNR
INVRETPH = NINVRETPH * 1 - V_CNR
ZIGINT522 = is_positive(RETRSE522) * LIG2
PPEPRIMETTEV = PPE_BOOL_KIR_COND * PPE_BOOL_ACT_COND * PPE_PRIMETTE * BOOL_0AM * INDMONO * positif_ou_nul(PPE_RTAV - PPELIMRPB) * positif_ou_nul(PPELIMRPHI - PPE_RCONTPV) * 1 - is_positive(PPE_BOOL_NADAV) * 1 - V_CNR
RPATNAT2_1 = max(min(APATNAT2, RRI1 - RLOGDOM - RCREAT - RCOMP - RRETU - RDONS - RDUFLOTOT - RPINELTOT - RNOUV - RPLAFREPME4 - RFOR - RTOURREP - RTOUHOTR - RTOUREPA - RCELTOT - RLOCNPRO - RPATNAT1), 0) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NPLOCCGAV = LOCNPCGAV + LOCGITCV - LOCDEFNPCGAV * 1 - is_positive(ART1731BIS * PREM8_11)
TONEQUO1 = sum([RPQ1, RPQ2, RPQ3, RPQ4]) + sum([RPQFV, RPQFC, RPQF1, RPQF2, RPQF3, RPQF4]) + sum([RPQPALIMV, RPQPALIMC, RPQPALIM1, RPQPALIM2, RPQPALIM3, RPQPALIM4]) + sum([RPQRF1, RPQRF2]) + RPQRCMDC + RPQRCMFU + RPQRCMCH + RPQRCMTR + RPQRCMTS + RPQRCMGO + sum([RPQPRRV, RPQPRRC, RPQPRR1, RPQPRR2, RPQPRR3, RPQPRR4]) + sum([RPQPRRZV, RPQPRRZC, RPQPRRZ1, RPQPRRZ2, RPQPRRZ3, RPQPRRZ4]) + RPQRVO + RPQRVO5 + RPQRVO6 + RPQRVO7 + sum([RPQTSV, RPQTSC, RPQTS1, RPQTS2, RPQTS3, RPQTS4]) + sum([RPQTSREMPV, RPQTSREMPC, RPQTSREMP1, RPQTSREMP2, RPQTSREMP3, RPQTSREMP4]) + RPQRVG + RPQRWB * null(1 - FLAG_EXIT) + RPQRWB + RPQRWA * null(2 - FLAG_EXIT)
INVRETRYA = min(NINVRETRY, max(0, MAXDOM3 - INVRETRLA - INVRETRQA - INVRETRVA - INVRETNVA - INVRETRKA - INVRETRPA - INVRETRUA - INVRETNUA - INVRETRMA - INVRETRRA - INVRETRWA - INVRETNWA - INVRETROA - INVRETRTA)) * 1 - V_CNR
MIB_TTC = MIB_TVENC + MIB_TPRESC
LIGTITREXP = 1 - is_positive(EXOVOUS) * 1 - is_positive(EXOCJT) * is_positive(EXOPAC) * 1 - is_positive(LIG2501) * LIG1 * LIG2
TSNN2TSC = is_positive(TSC) * is_positive(REMPLAC) * arr(TSC * CARTSC / EXTSC) + 1 - is_positive(REMPLAC) * TSC - TSNNC
RCELNQ = max(0, RCELNQ_1 * 1 - ART1731BIS + min(RCELNQ_1, max(RCELNQ_P + RCELNQP2, RCELNQ1731 + 0) * 1 - PREM8_11) * ART1731BIS) * 1 - null(2 - V_REGCO) * 1 - null(4 - V_REGCO)
NINVRETSVR = NINVRETSV - arr(NINVRETSV * TX375 / 100) * 1 - V_CNR
GLTSCM = is_positive(TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * arr(TONEQUOMHT * TSNN2TSC / TOTALQUOHT) + 1 - is_positive(TSNN2TS1 + TSNN2TS2 + TSNN2TS3 + TSNN2TS4 + REVTSREMP + REVPRR + REVRVO + REVRCM + REVRF) * TONEQUOMHT - GLTOTM - GLFTOTM - GLPALIMTOTM - GLTSVM
ZIPQRF11 = is_positive(TEGLRF2 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * arr(IQUOTOT1 * TERPQRF1 / TETONEQUO1) + 1 - is_positive(TEGLRF2 + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT) * IQUOTOT1 - ZIPQ1TOT - ZIPQF1TOT - ZIPQPALIM1TOT - ZIPQRCM1TOT - ZIPQPRR1TOT - ZIPQPRRZ1TOT
INVRETAA = min(arr(NINVRETAA * TX4737 / 100), max(0, PLAF_INVDOM3 - INVRETSOC - INVRETMA - INVRETLG - INVRETMB - INVRETMC - INVRETLH - INVRETLI - INVRETQP - INVRETQG - INVRETQO - INVRETQF - INVRETPB - INVRETPF - INVRETPJ - INVRETPA - INVRETPE - INVRETPI - INVRETPO - INVRETPT - INVRETPY - INVRETRL - INVRETRQ - INVRETRV - INVRETNV - INVRETPN - INVRETPS - INVRETPX - INVRETRK - INVRETRP - INVRETRU - INVRETNU - INVRETSB - INVRETSG - INVRETSL - INVRETSQ - INVRETSV - INVRETTA - INVRETSA - INVRETSF - INVRETSK - INVRETSP - INVRETSU - INVRETSZ - INVRETAB - INVRETAG - INVRETAL - INVRETAQ - INVRETAV - INVRETBB)) * 1 - V_CNR
ZIPQRF15 = is_positive(TEGLRF2M + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM) * arr(IQUOTOT5 * TERPQRF1M / TETONEQUOM1) + 1 - is_positive(TEGLRF2M + TEGLTSTOTM + TEGLTSREMPTOTM + TEGLRVOTOTM) * IQUOTOT5 - ZIPQ5TOT - ZIPQF5TOT - ZIPQPALIM5TOT - ZIPQRCM5TOT - ZIPQPRR5TOT - ZIPQPRRZ5TOT
RILMIC = max(0, RILMIC_1 * 1 - ART1731BIS + min(RILMIC_1, max(RILMIC_P + RILMICP2, RILMIC1731 + 0) * 1 - PREM8_11) * ART1731BIS)
DCELREPYI = CELREPYI
TBICPABP = min(TBICPROVP, arr(TMIB_ABVP * AUTOBICVP / MIBVENP + AUTOBICVP + TMIB_ABPP * AUTOBICPP / MIBPRESP + AUTOBICPP))
TPRR2 = arr(TPRN2 * PRB2 / TEXPR2) + arr(TPRN2 * COD1DH / TEXPR2)
TRPQPRRZVM = inf(TGLPRRZVM / CODNAZ)
TEGLTOTM = TEGL1M + TEGL2M + TEGL3M + TEGL4M
TEGL4V = GL4V * 1 - is_positive(INDTEFF) + TGL4V * is_positive(INDTEFF)
TABTS1EJ = arr(TREP103 * TSHALLO3 / TTSB3)
PERPPLAFNU1V = 1 - is_positive(PERP_COND1) * 1 - is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE + 0) * max(PERPPLAFNUTV - PERPPLAFNUNV - PERPPLAFNU3V - PERPPLAFNU2V, 0) + is_positive(PERPIMPATRIE + 0) * 0 + is_positive(PERP_COND1) * 0 + is_positive(PERP_COND2) * 1 - is_positive(PERPIMPATRIE + 0) * max(PERPPLAFNUTV - PERPPLAFNUNV - PERPPLAFNU3V - PERPPLAFNU2V, 0) + is_positive(PERP_COND2) * 0
ZIPQPRRANTZ11 = is_positive(sum([TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * arr(IQUOTOTANT1 * TERPQPRRZ1 / TETONEQUO1) + 1 - is_positive(sum([TEGLPRRZ2, TEGLPRRZ3, TEGLPRRZ4]) + TEGLTSTOT + TEGLTSREMPTOT + TEGLRVOTOT + TEGLRFTOT) * IQUOTOTANT1 - ZIPQANT1TOT - ZIPQFANT1TOT - ZIPQPALIMANT1TOT - ZIPQRCMANT1TOT - ZIPQPRRANTZV1 - ZIPQPRRANTZC1
INVRETPTA = min(arr(NINVRETPT * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA - INVRETPOA)) * 1 - V_CNR
ABNCPDECV = AUTOBNCV
TR3_ISF = arr(max(0, min(DISFBASE, LIM_TR3_ISF) - LIM_TR2_ISF) * TX_TR3_ISF / 10000)
LIGCELCOM = is_positive(DCELCOM) * LIG1 * LIG2
CIPRETUD = arr(APRETUD * TX_PRETUD / 100) * 1 - is_positive(RE168 + TAX1649) * 1 - V_CNR
TERPQRF1 = RPQRF1 * 1 - is_positive(INDTEFF) + TRPQRF1 * is_positive(INDTEFF)
DPRESCOMP = PRESCOMP2000 + RDPRESREPORT
IPQPRRZ35 = ZIPQPRRZ35 * CODNEZ
LIGNIIR = null(IRNETBIS) * null(NRINET + 0) * null(NATIMP + 0) * null(TAXANET + PCAPNET + TAXLOYNET + HAUTREVNET + NAPCRP + 0) * 1 - is_positive(IREP) * 1 - is_positive(IPROP) * 1 - is_positive(IRESTIT) * 1 - is_positive(IDEGR) * 1 - is_positive(LIGIDB) * 1 - is_positive(LIGNIRI) * 1 - is_positive(LIG80F) * 1 - is_positive(LIG400RI) * 1 - is_positive(LIG400F) * 1 - is_positive(LIGAUCUN) * 1 - is_positive(LIG2141) * 1 - is_positive(LIG2501) * 1 - is_positive(LIG8FV) * 1 - is_positive(LIGNIDB) * 1 - null(V_REGCO - 2 + 0) * 1 - is_positive(LIGTROP) * 1 - is_positive(LIGTROPREST) * 1 - is_positive(IMPRET) * 1 - is_positive(NRINET) * is_positive(20 - V_NOTRAIT) * LIG2
RESIVIEU8 = arr(ACODIM * TX25 / 100) - RESIVIEU1 - RESIVIEU2 - RESIVIEU3 - RESIVIEU4 - RESIVIEU5 - RESIVIEU6 - RESIVIEU7 - RESIVIEU7
IQUOEAJ31 = max(0, IPQ1001 - IQUORAJ31 - IQUODAJ31)
LIG2200S = is_positive(IDEGR) * positif_ou_nul(IDEGR - SEUIL_8) * LIGPS * TYPE2
VARRMOND = RMOND + max(0, DEFZU * is_positive(SOMMEMOND_2) * 1 - PREM8_11 + DEFZU * PREM8_11 - DMOND) * is_positive(present(RMOND) + present(DMOND))
RLOG04 = max(min(INVOMLOGOA, RRI1 - RLOG01 - RLOG02 - RLOG03), 0) * 1 - V_CNR
RLOC74 = max(min(INVRETNY * 1 - INDPLAF + INVRETNYA * INDPLAF, RRILOC - sum([RLOC1, RLOC2, RLOC3, RLOC4, RLOC5, RLOC6, RLOC7, RLOC8, RLOC9, RLOC10, RLOC11, RLOC12, RLOC13, RLOC14, RLOC15, RLOC16, RLOC17, RLOC18, RLOC19, RLOC20, RLOC21, RLOC22, RLOC23, RLOC24, RLOC25, RLOC26, RLOC27, RLOC28, RLOC29, RLOC30, RLOC31, RLOC32, RLOC33, RLOC34, RLOC35, RLOC36, RLOC37, RLOC38, RLOC39, RLOC40, RLOC41, RLOC42, RLOC43, RLOC44, RLOC45, RLOC46, RLOC47, RLOC48, RLOC49, RLOC50, RLOC51, RLOC52, RLOC53, RLOC54, RLOC55, RLOC56, RLOC57, RLOC58, RLOC59, RLOC60, RLOC61, RLOC62, RLOC63, RLOC64, RLOC65, RLOC66, RLOC67, RLOC68, RLOC69, RLOC70, RLOC71, RLOC72, RLOC73])), 0) * 1 - V_CNR
ABAGU2 = arr(min(IPROGUY2 + IQUOEAJ2 * TX_RABGUY / 100, PLAF_RABGUY))
CICONGAGRI = CRECONGAGRI * 1 - V_CNR
INVRETPOA = min(arr(NINVRETPO * TX40 / 100), max(0, RNIDOM1 - INVRETKGA - INVRETKHA - INVRETKIA - INVRETQNA - INVRETQUA - INVRETQKA - INVRETQJA - INVRETQSA - INVRETQWA - INVRETQXA - INVRETRAA - INVRETRBA - INVRETRCA - INVRETRDA - INVRETXAA - INVRETXBA - INVRETXCA - INVRETXEA - INVRETMAA - INVRETLGA - INVRETKSA - INVRETMBA - INVRETLHA - INVRETMCA - INVRETLIA - INVRETKTA - INVRETKUA - INVRETQPA - INVRETQGA - INVRETQOA - INVRETQFA - INVRETQRA - INVRETQIA)) * 1 - V_CNR
PPE_RCONTPN = arr(PPE_RTAN * PPE_COEFFN)
RPQPRR4M = inf(GLPRR4M / CARPENBAP4)
