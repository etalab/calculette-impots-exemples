# -*- coding: utf-8 -*-
# flake8: noqa


# WARNING: This file is automatically generated by a script. No not modify it by hand!

# Original files are "chap-dummy.json" and "chap-dummy.m"


EM7 = somme((min(1, max(0, V_0F(i) + AG_LIMFG - V_ANREV)) for i in interval(0, 7))) + 1 - positif(somme((V_0F(i) for i in interval(0, 7))) + 0) * V_0CF


def IPQPALIM(i, z):
    if z in (1, 2) or i in ('V', 'C'):
        return ZIPQPALIMiz * PENSALNBi
    elif z in (1, 2) or i in interval(1, 4):
        return ZIPQPALIMiz * PENSALNBPi
    else:
        raise NotImplementedError()


def DEC1(z):
    if z in (1, 2):
        return min(max(arr(SEUIL_DECOTE1 * 1 - BOOL_0AM + SEUIL_DECOTE2 * BOOL_0AM - IDOM1z), 0), IDOM1z) * 1 - V_ANC_BAR + min(max(arr(SEUIL_DECOTEA / 2 - IDOM1z / 2), 0), IDOM1z) * V_ANC_BAR * 1 - V_CNR
    else:
        raise NotImplementedError()


def PPE_RTA(i):
    if i in ('V', 'C'):
        return max(0, PPESALi + PPE_RPROi * positif(PPE_RPROi))
    elif i in interval(1, 4):
        return PPESALi
    else:
        raise NotImplementedError()


def IPQF5(i):
    if i in ('V', 'C') or i in interval(1, 4):
        return ZIPQFi5 * COTFi
    else:
        raise NotImplementedError()
